(function () {
  const t = document.createElement('link').relList;
  if (t && t.supports && t.supports('modulepreload')) return;
  for (const v of document.querySelectorAll('link[rel="modulepreload"]')) e(v);
  new MutationObserver((v) => {
    for (const y of v)
      if (y.type === 'childList')
        for (const m of y.addedNodes)
          m.tagName === 'LINK' && m.rel === 'modulepreload' && e(m);
  }).observe(document, { childList: !0, subtree: !0 });
  function p(v) {
    const y = {};
    return (
      v.integrity && (y.integrity = v.integrity),
      v.referrerpolicy && (y.referrerPolicy = v.referrerpolicy),
      v.crossorigin === 'use-credentials'
        ? (y.credentials = 'include')
        : v.crossorigin === 'anonymous'
        ? (y.credentials = 'omit')
        : (y.credentials = 'same-origin'),
      y
    );
  }
  function e(v) {
    if (v.ep) return;
    v.ep = !0;
    const y = p(v);
    fetch(v.href, y);
  }
})();
var Ls =
  typeof globalThis < 'u'
    ? globalThis
    : typeof window < 'u'
    ? window
    : typeof global < 'u'
    ? global
    : typeof self < 'u'
    ? self
    : {};
function cu(T) {
  return T && T.__esModule && Object.prototype.hasOwnProperty.call(T, 'default')
    ? T.default
    : T;
}
function Ns(T) {
  throw new Error(
    'Could not dynamically require "' +
      T +
      '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.',
  );
}
var Pa = { exports: {} };
/*! p5.js v1.4.2 July 21, 2022 */ (function (T, t) {
  (function (p) {
    T.exports = p();
  })(function () {
    var p;
    return (function e(v, y, m) {
      function r(h, u) {
        if (!y[h]) {
          if (!v[h]) {
            var o = typeof Ns == 'function' && Ns;
            if (!u && o) return o(h, !0);
            if (c) return c(h, !0);
            var n = new Error("Cannot find module '" + h + "'");
            throw ((n.code = 'MODULE_NOT_FOUND'), n);
          }
          var s = (y[h] = { exports: {} });
          v[h][0].call(
            s.exports,
            function (i) {
              return r(v[h][1][i] || i);
            },
            s,
            s.exports,
            e,
            v,
            y,
            m,
          );
        }
        return y[h].exports;
      }
      for (var c = typeof Ns == 'function' && Ns, l = 0; l < m.length; l++)
        r(m[l]);
      return r;
    })(
      {
        1: [
          function (e, v, y) {
            (y.byteLength = function (s) {
              var i = o(s),
                a = i[0],
                d = i[1];
              return (3 * (a + d)) / 4 - d;
            }),
              (y.toByteArray = function (s) {
                var i,
                  a,
                  d = o(s),
                  g = d[0],
                  _ = d[1],
                  w = new c(
                    (function (E, O) {
                      return (3 * (E + O)) / 4 - O;
                    })(g, _),
                  ),
                  S = 0,
                  M = 0 < _ ? g - 4 : g;
                for (a = 0; a < M; a += 4)
                  (i =
                    (r[s.charCodeAt(a)] << 18) |
                    (r[s.charCodeAt(a + 1)] << 12) |
                    (r[s.charCodeAt(a + 2)] << 6) |
                    r[s.charCodeAt(a + 3)]),
                    (w[S++] = (i >> 16) & 255),
                    (w[S++] = (i >> 8) & 255),
                    (w[S++] = 255 & i);
                return (
                  _ === 2 &&
                    ((i =
                      (r[s.charCodeAt(a)] << 2) |
                      (r[s.charCodeAt(a + 1)] >> 4)),
                    (w[S++] = 255 & i)),
                  _ === 1 &&
                    ((i =
                      (r[s.charCodeAt(a)] << 10) |
                      (r[s.charCodeAt(a + 1)] << 4) |
                      (r[s.charCodeAt(a + 2)] >> 2)),
                    (w[S++] = (i >> 8) & 255),
                    (w[S++] = 255 & i)),
                  w
                );
              }),
              (y.fromByteArray = function (s) {
                for (
                  var i, a = s.length, d = a % 3, g = [], _ = 0, w = a - d;
                  _ < w;
                  _ += 16383
                )
                  g.push(n(s, _, w < _ + 16383 ? w : _ + 16383));
                return (
                  d == 1
                    ? ((i = s[a - 1]),
                      g.push(m[i >> 2] + m[(i << 4) & 63] + '=='))
                    : d == 2 &&
                      ((i = (s[a - 2] << 8) + s[a - 1]),
                      g.push(
                        m[i >> 10] + m[(i >> 4) & 63] + m[(i << 2) & 63] + '=',
                      )),
                  g.join('')
                );
              });
            for (
              var m = [],
                r = [],
                c = typeof Uint8Array < 'u' ? Uint8Array : Array,
                l =
                  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                h = 0,
                u = l.length;
              h < u;
              ++h
            )
              (m[h] = l[h]), (r[l.charCodeAt(h)] = h);
            function o(s) {
              var i = s.length;
              if (0 < i % 4)
                throw new Error(
                  'Invalid string. Length must be a multiple of 4',
                );
              var a = s.indexOf('=');
              return a === -1 && (a = i), [a, a === i ? 0 : 4 - (a % 4)];
            }
            function n(s, i, a) {
              for (var d, g, _ = [], w = i; w < a; w += 3)
                (d =
                  ((s[w] << 16) & 16711680) +
                  ((s[w + 1] << 8) & 65280) +
                  (255 & s[w + 2])),
                  _.push(
                    m[((g = d) >> 18) & 63] +
                      m[(g >> 12) & 63] +
                      m[(g >> 6) & 63] +
                      m[63 & g],
                  );
              return _.join('');
            }
            (r['-'.charCodeAt(0)] = 62), (r['_'.charCodeAt(0)] = 63);
          },
          {},
        ],
        2: [function (e, v, y) {}, {}],
        3: [
          function (e, v, y) {
            arguments[4][2][0].apply(y, arguments);
          },
          { dup: 2 },
        ],
        4: [
          function (e, v, y) {
            (function (o) {
              var r = e('base64-js'),
                c = e('ieee754'),
                l =
                  typeof Symbol == 'function' && typeof Symbol.for == 'function'
                    ? Symbol.for('nodejs.util.inspect.custom')
                    : null;
              (y.Buffer = o),
                (y.SlowBuffer = function (P) {
                  return +P != P && (P = 0), o.alloc(+P);
                }),
                (y.INSPECT_MAX_BYTES = 50);
              var h = 2147483647;
              function u(P) {
                if (h < P)
                  throw new RangeError(
                    'The value "' + P + '" is invalid for option "size"',
                  );
                var U = new Uint8Array(P);
                return Object.setPrototypeOf(U, o.prototype), U;
              }
              function o(P, U, W) {
                if (typeof P != 'number') return n(P, U, W);
                if (typeof U == 'string')
                  throw new TypeError(
                    'The "string" argument must be of type string. Received type number',
                  );
                return i(P);
              }
              function n(P, U, W) {
                if (typeof P == 'string')
                  return (function (re, we) {
                    if (
                      ((typeof we == 'string' && we !== '') || (we = 'utf8'),
                      !o.isEncoding(we))
                    )
                      throw new TypeError('Unknown encoding: ' + we);
                    var X = 0 | g(re, we),
                      ue = u(X),
                      he = ue.write(re, we);
                    return he !== X && (ue = ue.slice(0, he)), ue;
                  })(P, U);
                if (ArrayBuffer.isView(P)) return a(P);
                if (P == null)
                  throw new TypeError(
                    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
                      typeof P,
                  );
                if (Se(P, ArrayBuffer) || (P && Se(P.buffer, ArrayBuffer)))
                  return (function (re, we, X) {
                    if (we < 0 || re.byteLength < we)
                      throw new RangeError(
                        '"offset" is outside of buffer bounds',
                      );
                    if (re.byteLength < we + (X || 0))
                      throw new RangeError(
                        '"length" is outside of buffer bounds',
                      );
                    var ue;
                    return (
                      (ue =
                        we === void 0 && X === void 0
                          ? new Uint8Array(re)
                          : X === void 0
                          ? new Uint8Array(re, we)
                          : new Uint8Array(re, we, X)),
                      Object.setPrototypeOf(ue, o.prototype),
                      ue
                    );
                  })(P, U, W);
                if (typeof P == 'number')
                  throw new TypeError(
                    'The "value" argument must not be of type number. Received type number',
                  );
                var K = P.valueOf && P.valueOf();
                if (K != null && K !== P) return o.from(K, U, W);
                var ne = (function (re) {
                  if (o.isBuffer(re)) {
                    var we = 0 | d(re.length),
                      X = u(we);
                    return X.length === 0 || re.copy(X, 0, 0, we), X;
                  }
                  if (re.length !== void 0)
                    return typeof re.length != 'number' || fe(re.length)
                      ? u(0)
                      : a(re);
                  if (re.type === 'Buffer' && Array.isArray(re.data))
                    return a(re.data);
                })(P);
                if (ne) return ne;
                if (
                  typeof Symbol < 'u' &&
                  Symbol.toPrimitive != null &&
                  typeof P[Symbol.toPrimitive] == 'function'
                )
                  return o.from(P[Symbol.toPrimitive]('string'), U, W);
                throw new TypeError(
                  'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
                    typeof P,
                );
              }
              function s(P) {
                if (typeof P != 'number')
                  throw new TypeError('"size" argument must be of type number');
                if (P < 0)
                  throw new RangeError(
                    'The value "' + P + '" is invalid for option "size"',
                  );
              }
              function i(P) {
                return s(P), u(P < 0 ? 0 : 0 | d(P));
              }
              function a(P) {
                for (
                  var U = P.length < 0 ? 0 : 0 | d(P.length), W = u(U), K = 0;
                  K < U;
                  K += 1
                )
                  W[K] = 255 & P[K];
                return W;
              }
              function d(P) {
                if (h <= P)
                  throw new RangeError(
                    'Attempt to allocate Buffer larger than maximum size: 0x' +
                      h.toString(16) +
                      ' bytes',
                  );
                return 0 | P;
              }
              function g(P, U) {
                if (o.isBuffer(P)) return P.length;
                if (ArrayBuffer.isView(P) || Se(P, ArrayBuffer))
                  return P.byteLength;
                if (typeof P != 'string')
                  throw new TypeError(
                    'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                      typeof P,
                  );
                var W = P.length,
                  K = 2 < arguments.length && arguments[2] === !0;
                if (!K && W === 0) return 0;
                for (var ne = !1; ; )
                  switch (U) {
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                      return W;
                    case 'utf8':
                    case 'utf-8':
                      return ce(P).length;
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                      return 2 * W;
                    case 'hex':
                      return W >>> 1;
                    case 'base64':
                      return ve(P).length;
                    default:
                      if (ne) return K ? -1 : ce(P).length;
                      (U = ('' + U).toLowerCase()), (ne = !0);
                  }
              }
              function _(P, U, W) {
                var K = P[U];
                (P[U] = P[W]), (P[W] = K);
              }
              function w(P, U, W, K, ne) {
                if (P.length === 0) return -1;
                if (
                  (typeof W == 'string'
                    ? ((K = W), (W = 0))
                    : 2147483647 < W
                    ? (W = 2147483647)
                    : W < -2147483648 && (W = -2147483648),
                  fe((W = +W)) && (W = ne ? 0 : P.length - 1),
                  W < 0 && (W = P.length + W),
                  W >= P.length)
                ) {
                  if (ne) return -1;
                  W = P.length - 1;
                } else if (W < 0) {
                  if (!ne) return -1;
                  W = 0;
                }
                if ((typeof U == 'string' && (U = o.from(U, K)), o.isBuffer(U)))
                  return U.length === 0 ? -1 : S(P, U, W, K, ne);
                if (typeof U == 'number')
                  return (
                    (U &= 255),
                    typeof Uint8Array.prototype.indexOf == 'function'
                      ? ne
                        ? Uint8Array.prototype.indexOf.call(P, U, W)
                        : Uint8Array.prototype.lastIndexOf.call(P, U, W)
                      : S(P, [U], W, K, ne)
                  );
                throw new TypeError('val must be string, number or Buffer');
              }
              function S(P, U, W, K, ne) {
                var re,
                  we = 1,
                  X = P.length,
                  ue = U.length;
                if (
                  K !== void 0 &&
                  ((K = String(K).toLowerCase()) === 'ucs2' ||
                    K === 'ucs-2' ||
                    K === 'utf16le' ||
                    K === 'utf-16le')
                ) {
                  if (P.length < 2 || U.length < 2) return -1;
                  (X /= we = 2), (ue /= 2), (W /= 2);
                }
                function he(Te, Ne) {
                  return we === 1 ? Te[Ne] : Te.readUInt16BE(Ne * we);
                }
                if (ne) {
                  var ie = -1;
                  for (re = W; re < X; re++)
                    if (he(P, re) === he(U, ie === -1 ? 0 : re - ie)) {
                      if ((ie === -1 && (ie = re), re - ie + 1 === ue))
                        return ie * we;
                    } else ie !== -1 && (re -= re - ie), (ie = -1);
                } else
                  for (X < W + ue && (W = X - ue), re = W; 0 <= re; re--) {
                    for (var xe = !0, je = 0; je < ue; je++)
                      if (he(P, re + je) !== he(U, je)) {
                        xe = !1;
                        break;
                      }
                    if (xe) return re;
                  }
                return -1;
              }
              function M(P, U, W, K) {
                W = Number(W) || 0;
                var ne = P.length - W;
                K ? ne < (K = Number(K)) && (K = ne) : (K = ne);
                var re = U.length;
                re / 2 < K && (K = re / 2);
                for (var we = 0; we < K; ++we) {
                  var X = parseInt(U.substr(2 * we, 2), 16);
                  if (fe(X)) return we;
                  P[W + we] = X;
                }
                return we;
              }
              function E(P, U, W, K) {
                return de(
                  (function (ne) {
                    for (var re = [], we = 0; we < ne.length; ++we)
                      re.push(255 & ne.charCodeAt(we));
                    return re;
                  })(U),
                  P,
                  W,
                  K,
                );
              }
              function O(P, U, W, K) {
                return de(
                  (function (ne, re) {
                    for (
                      var we, X, ue, he = [], ie = 0;
                      ie < ne.length && !((re -= 2) < 0);
                      ++ie
                    )
                      (we = ne.charCodeAt(ie)),
                        (X = we >> 8),
                        (ue = we % 256),
                        he.push(ue),
                        he.push(X);
                    return he;
                  })(U, P.length - W),
                  P,
                  W,
                  K,
                );
              }
              function D(P, U, W) {
                return U === 0 && W === P.length
                  ? r.fromByteArray(P)
                  : r.fromByteArray(P.slice(U, W));
              }
              function A(P, U, W) {
                W = Math.min(P.length, W);
                for (var K = [], ne = U; ne < W; ) {
                  var re,
                    we,
                    X,
                    ue,
                    he = P[ne],
                    ie = null,
                    xe = 239 < he ? 4 : 223 < he ? 3 : 191 < he ? 2 : 1;
                  if (ne + xe <= W)
                    switch (xe) {
                      case 1:
                        he < 128 && (ie = he);
                        break;
                      case 2:
                        (192 & (re = P[ne + 1])) == 128 &&
                          127 < (ue = ((31 & he) << 6) | (63 & re)) &&
                          (ie = ue);
                        break;
                      case 3:
                        (re = P[ne + 1]),
                          (we = P[ne + 2]),
                          (192 & re) == 128 &&
                            (192 & we) == 128 &&
                            2047 <
                              (ue =
                                ((15 & he) << 12) |
                                ((63 & re) << 6) |
                                (63 & we)) &&
                            (ue < 55296 || 57343 < ue) &&
                            (ie = ue);
                        break;
                      case 4:
                        (re = P[ne + 1]),
                          (we = P[ne + 2]),
                          (X = P[ne + 3]),
                          (192 & re) == 128 &&
                            (192 & we) == 128 &&
                            (192 & X) == 128 &&
                            65535 <
                              (ue =
                                ((15 & he) << 18) |
                                ((63 & re) << 12) |
                                ((63 & we) << 6) |
                                (63 & X)) &&
                            ue < 1114112 &&
                            (ie = ue);
                    }
                  ie === null
                    ? ((ie = 65533), (xe = 1))
                    : 65535 < ie &&
                      ((ie -= 65536),
                      K.push(((ie >>> 10) & 1023) | 55296),
                      (ie = 56320 | (1023 & ie))),
                    K.push(ie),
                    (ne += xe);
                }
                return (function (je) {
                  var Te = je.length;
                  if (Te <= k) return String.fromCharCode.apply(String, je);
                  for (var Ne = '', ze = 0; ze < Te; )
                    Ne += String.fromCharCode.apply(
                      String,
                      je.slice(ze, (ze += k)),
                    );
                  return Ne;
                })(K);
              }
              (y.kMaxLength = h),
                (o.TYPED_ARRAY_SUPPORT = (function () {
                  try {
                    var P = new Uint8Array(1),
                      U = {
                        foo: function () {
                          return 42;
                        },
                      };
                    return (
                      Object.setPrototypeOf(U, Uint8Array.prototype),
                      Object.setPrototypeOf(P, U),
                      P.foo() === 42
                    );
                  } catch {
                    return !1;
                  }
                })()) ||
                  typeof console > 'u' ||
                  typeof console.error != 'function' ||
                  console.error(
                    'This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.',
                  ),
                Object.defineProperty(o.prototype, 'parent', {
                  enumerable: !0,
                  get: function () {
                    if (o.isBuffer(this)) return this.buffer;
                  },
                }),
                Object.defineProperty(o.prototype, 'offset', {
                  enumerable: !0,
                  get: function () {
                    if (o.isBuffer(this)) return this.byteOffset;
                  },
                }),
                typeof Symbol < 'u' &&
                  Symbol.species != null &&
                  o[Symbol.species] === o &&
                  Object.defineProperty(o, Symbol.species, {
                    value: null,
                    configurable: !0,
                    enumerable: !1,
                    writable: !1,
                  }),
                (o.poolSize = 8192),
                (o.from = function (P, U, W) {
                  return n(P, U, W);
                }),
                Object.setPrototypeOf(o.prototype, Uint8Array.prototype),
                Object.setPrototypeOf(o, Uint8Array),
                (o.alloc = function (P, U, W) {
                  return (
                    (ne = U),
                    (re = W),
                    s((K = P)),
                    K <= 0
                      ? u(K)
                      : ne !== void 0
                      ? typeof re == 'string'
                        ? u(K).fill(ne, re)
                        : u(K).fill(ne)
                      : u(K)
                  );
                  var K, ne, re;
                }),
                (o.allocUnsafe = function (P) {
                  return i(P);
                }),
                (o.allocUnsafeSlow = function (P) {
                  return i(P);
                }),
                (o.isBuffer = function (P) {
                  return P != null && P._isBuffer === !0 && P !== o.prototype;
                }),
                (o.compare = function (P, U) {
                  if (
                    (Se(P, Uint8Array) &&
                      (P = o.from(P, P.offset, P.byteLength)),
                    Se(U, Uint8Array) &&
                      (U = o.from(U, U.offset, U.byteLength)),
                    !o.isBuffer(P) || !o.isBuffer(U))
                  )
                    throw new TypeError(
                      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array',
                    );
                  if (P === U) return 0;
                  for (
                    var W = P.length, K = U.length, ne = 0, re = Math.min(W, K);
                    ne < re;
                    ++ne
                  )
                    if (P[ne] !== U[ne]) {
                      (W = P[ne]), (K = U[ne]);
                      break;
                    }
                  return W < K ? -1 : K < W ? 1 : 0;
                }),
                (o.isEncoding = function (P) {
                  switch (String(P).toLowerCase()) {
                    case 'hex':
                    case 'utf8':
                    case 'utf-8':
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                    case 'base64':
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                      return !0;
                    default:
                      return !1;
                  }
                }),
                (o.concat = function (P, U) {
                  if (!Array.isArray(P))
                    throw new TypeError(
                      '"list" argument must be an Array of Buffers',
                    );
                  if (P.length === 0) return o.alloc(0);
                  var W;
                  if (U === void 0)
                    for (W = U = 0; W < P.length; ++W) U += P[W].length;
                  var K = o.allocUnsafe(U),
                    ne = 0;
                  for (W = 0; W < P.length; ++W) {
                    var re = P[W];
                    if (
                      (Se(re, Uint8Array) && (re = o.from(re)), !o.isBuffer(re))
                    )
                      throw new TypeError(
                        '"list" argument must be an Array of Buffers',
                      );
                    re.copy(K, ne), (ne += re.length);
                  }
                  return K;
                }),
                (o.byteLength = g),
                (o.prototype._isBuffer = !0),
                (o.prototype.swap16 = function () {
                  var P = this.length;
                  if (P % 2 != 0)
                    throw new RangeError(
                      'Buffer size must be a multiple of 16-bits',
                    );
                  for (var U = 0; U < P; U += 2) _(this, U, U + 1);
                  return this;
                }),
                (o.prototype.swap32 = function () {
                  var P = this.length;
                  if (P % 4 != 0)
                    throw new RangeError(
                      'Buffer size must be a multiple of 32-bits',
                    );
                  for (var U = 0; U < P; U += 4)
                    _(this, U, U + 3), _(this, U + 1, U + 2);
                  return this;
                }),
                (o.prototype.swap64 = function () {
                  var P = this.length;
                  if (P % 8 != 0)
                    throw new RangeError(
                      'Buffer size must be a multiple of 64-bits',
                    );
                  for (var U = 0; U < P; U += 8)
                    _(this, U, U + 7),
                      _(this, U + 1, U + 6),
                      _(this, U + 2, U + 5),
                      _(this, U + 3, U + 4);
                  return this;
                }),
                (o.prototype.toLocaleString = o.prototype.toString =
                  function () {
                    var P = this.length;
                    return P === 0
                      ? ''
                      : arguments.length === 0
                      ? A(this, 0, P)
                      : function (U, W, K) {
                          var ne = !1;
                          if (
                            ((W === void 0 || W < 0) && (W = 0),
                            W > this.length ||
                              ((K === void 0 || K > this.length) &&
                                (K = this.length),
                              K <= 0) ||
                              (K >>>= 0) <= (W >>>= 0))
                          )
                            return '';
                          for (U = U || 'utf8'; ; )
                            switch (U) {
                              case 'hex':
                                return N(this, W, K);
                              case 'utf8':
                              case 'utf-8':
                                return A(this, W, K);
                              case 'ascii':
                                return L(this, W, K);
                              case 'latin1':
                              case 'binary':
                                return R(this, W, K);
                              case 'base64':
                                return D(this, W, K);
                              case 'ucs2':
                              case 'ucs-2':
                              case 'utf16le':
                              case 'utf-16le':
                                return B(this, W, K);
                              default:
                                if (ne)
                                  throw new TypeError('Unknown encoding: ' + U);
                                (U = (U + '').toLowerCase()), (ne = !0);
                            }
                        }.apply(this, arguments);
                  }),
                (o.prototype.equals = function (P) {
                  if (!o.isBuffer(P))
                    throw new TypeError('Argument must be a Buffer');
                  return this === P || o.compare(this, P) === 0;
                }),
                (o.prototype.inspect = function () {
                  var P = '',
                    U = y.INSPECT_MAX_BYTES;
                  return (
                    (P = this.toString('hex', 0, U)
                      .replace(/(.{2})/g, '$1 ')
                      .trim()),
                    this.length > U && (P += ' ... '),
                    '<Buffer ' + P + '>'
                  );
                }),
                l && (o.prototype[l] = o.prototype.inspect),
                (o.prototype.compare = function (P, U, W, K, ne) {
                  if (
                    (Se(P, Uint8Array) &&
                      (P = o.from(P, P.offset, P.byteLength)),
                    !o.isBuffer(P))
                  )
                    throw new TypeError(
                      'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                        typeof P,
                    );
                  if (
                    (U === void 0 && (U = 0),
                    W === void 0 && (W = P ? P.length : 0),
                    K === void 0 && (K = 0),
                    ne === void 0 && (ne = this.length),
                    U < 0 || W > P.length || K < 0 || ne > this.length)
                  )
                    throw new RangeError('out of range index');
                  if (ne <= K && W <= U) return 0;
                  if (ne <= K) return -1;
                  if (W <= U) return 1;
                  if (this === P) return 0;
                  for (
                    var re = (ne >>>= 0) - (K >>>= 0),
                      we = (W >>>= 0) - (U >>>= 0),
                      X = Math.min(re, we),
                      ue = this.slice(K, ne),
                      he = P.slice(U, W),
                      ie = 0;
                    ie < X;
                    ++ie
                  )
                    if (ue[ie] !== he[ie]) {
                      (re = ue[ie]), (we = he[ie]);
                      break;
                    }
                  return re < we ? -1 : we < re ? 1 : 0;
                }),
                (o.prototype.includes = function (P, U, W) {
                  return this.indexOf(P, U, W) !== -1;
                }),
                (o.prototype.indexOf = function (P, U, W) {
                  return w(this, P, U, W, !0);
                }),
                (o.prototype.lastIndexOf = function (P, U, W) {
                  return w(this, P, U, W, !1);
                }),
                (o.prototype.write = function (P, U, W, K) {
                  if (U === void 0) (K = 'utf8'), (W = this.length), (U = 0);
                  else if (W === void 0 && typeof U == 'string')
                    (K = U), (W = this.length), (U = 0);
                  else {
                    if (!isFinite(U))
                      throw new Error(
                        'Buffer.write(string, encoding, offset[, length]) is no longer supported',
                      );
                    (U >>>= 0),
                      isFinite(W)
                        ? ((W >>>= 0), K === void 0 && (K = 'utf8'))
                        : ((K = W), (W = void 0));
                  }
                  var ne = this.length - U;
                  if (
                    ((W === void 0 || ne < W) && (W = ne),
                    (0 < P.length && (W < 0 || U < 0)) || U > this.length)
                  )
                    throw new RangeError(
                      'Attempt to write outside buffer bounds',
                    );
                  K = K || 'utf8';
                  for (var re, we, X, ue, he, ie, xe = !1; ; )
                    switch (K) {
                      case 'hex':
                        return M(this, P, U, W);
                      case 'utf8':
                      case 'utf-8':
                        return (
                          (he = U),
                          (ie = W),
                          de(ce(P, (ue = this).length - he), ue, he, ie)
                        );
                      case 'ascii':
                        return E(this, P, U, W);
                      case 'latin1':
                      case 'binary':
                        return E(this, P, U, W);
                      case 'base64':
                        return (
                          (re = this), (we = U), (X = W), de(ve(P), re, we, X)
                        );
                      case 'ucs2':
                      case 'ucs-2':
                      case 'utf16le':
                      case 'utf-16le':
                        return O(this, P, U, W);
                      default:
                        if (xe) throw new TypeError('Unknown encoding: ' + K);
                        (K = ('' + K).toLowerCase()), (xe = !0);
                    }
                }),
                (o.prototype.toJSON = function () {
                  return {
                    type: 'Buffer',
                    data: Array.prototype.slice.call(this._arr || this, 0),
                  };
                });
              var k = 4096;
              function L(P, U, W) {
                var K = '';
                W = Math.min(P.length, W);
                for (var ne = U; ne < W; ++ne)
                  K += String.fromCharCode(127 & P[ne]);
                return K;
              }
              function R(P, U, W) {
                var K = '';
                W = Math.min(P.length, W);
                for (var ne = U; ne < W; ++ne) K += String.fromCharCode(P[ne]);
                return K;
              }
              function N(P, U, W) {
                var K = P.length;
                (!U || U < 0) && (U = 0), (!W || W < 0 || K < W) && (W = K);
                for (var ne = '', re = U; re < W; ++re) ne += ye[P[re]];
                return ne;
              }
              function B(P, U, W) {
                for (
                  var K = P.slice(U, W), ne = '', re = 0;
                  re < K.length;
                  re += 2
                )
                  ne += String.fromCharCode(K[re] + 256 * K[re + 1]);
                return ne;
              }
              function Z(P, U, W) {
                if (P % 1 != 0 || P < 0)
                  throw new RangeError('offset is not uint');
                if (W < P + U)
                  throw new RangeError('Trying to access beyond buffer length');
              }
              function J(P, U, W, K, ne, re) {
                if (!o.isBuffer(P))
                  throw new TypeError(
                    '"buffer" argument must be a Buffer instance',
                  );
                if (ne < U || U < re)
                  throw new RangeError('"value" argument is out of bounds');
                if (W + K > P.length)
                  throw new RangeError('Index out of range');
              }
              function $(P, U, W, K) {
                if (W + K > P.length)
                  throw new RangeError('Index out of range');
                if (W < 0) throw new RangeError('Index out of range');
              }
              function ee(P, U, W, K, ne) {
                return (
                  (U = +U),
                  (W >>>= 0),
                  ne || $(P, 0, W, 4),
                  c.write(P, U, W, K, 23, 4),
                  W + 4
                );
              }
              function Q(P, U, W, K, ne) {
                return (
                  (U = +U),
                  (W >>>= 0),
                  ne || $(P, 0, W, 8),
                  c.write(P, U, W, K, 52, 8),
                  W + 8
                );
              }
              (o.prototype.slice = function (P, U) {
                var W = this.length;
                (P = ~~P) < 0 ? (P += W) < 0 && (P = 0) : W < P && (P = W),
                  (U = U === void 0 ? W : ~~U) < 0
                    ? (U += W) < 0 && (U = 0)
                    : W < U && (U = W),
                  U < P && (U = P);
                var K = this.subarray(P, U);
                return Object.setPrototypeOf(K, o.prototype), K;
              }),
                (o.prototype.readUIntLE = function (P, U, W) {
                  (P >>>= 0), (U >>>= 0), W || Z(P, U, this.length);
                  for (
                    var K = this[P], ne = 1, re = 0;
                    ++re < U && (ne *= 256);

                  )
                    K += this[P + re] * ne;
                  return K;
                }),
                (o.prototype.readUIntBE = function (P, U, W) {
                  (P >>>= 0), (U >>>= 0), W || Z(P, U, this.length);
                  for (var K = this[P + --U], ne = 1; 0 < U && (ne *= 256); )
                    K += this[P + --U] * ne;
                  return K;
                }),
                (o.prototype.readUInt8 = function (P, U) {
                  return (P >>>= 0), U || Z(P, 1, this.length), this[P];
                }),
                (o.prototype.readUInt16LE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 2, this.length),
                    this[P] | (this[P + 1] << 8)
                  );
                }),
                (o.prototype.readUInt16BE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 2, this.length),
                    (this[P] << 8) | this[P + 1]
                  );
                }),
                (o.prototype.readUInt32LE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 4, this.length),
                    (this[P] | (this[P + 1] << 8) | (this[P + 2] << 16)) +
                      16777216 * this[P + 3]
                  );
                }),
                (o.prototype.readUInt32BE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 4, this.length),
                    16777216 * this[P] +
                      ((this[P + 1] << 16) | (this[P + 2] << 8) | this[P + 3])
                  );
                }),
                (o.prototype.readIntLE = function (P, U, W) {
                  (P >>>= 0), (U >>>= 0), W || Z(P, U, this.length);
                  for (
                    var K = this[P], ne = 1, re = 0;
                    ++re < U && (ne *= 256);

                  )
                    K += this[P + re] * ne;
                  return (ne *= 128) <= K && (K -= Math.pow(2, 8 * U)), K;
                }),
                (o.prototype.readIntBE = function (P, U, W) {
                  (P >>>= 0), (U >>>= 0), W || Z(P, U, this.length);
                  for (
                    var K = U, ne = 1, re = this[P + --K];
                    0 < K && (ne *= 256);

                  )
                    re += this[P + --K] * ne;
                  return (ne *= 128) <= re && (re -= Math.pow(2, 8 * U)), re;
                }),
                (o.prototype.readInt8 = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 1, this.length),
                    128 & this[P] ? -1 * (255 - this[P] + 1) : this[P]
                  );
                }),
                (o.prototype.readInt16LE = function (P, U) {
                  (P >>>= 0), U || Z(P, 2, this.length);
                  var W = this[P] | (this[P + 1] << 8);
                  return 32768 & W ? 4294901760 | W : W;
                }),
                (o.prototype.readInt16BE = function (P, U) {
                  (P >>>= 0), U || Z(P, 2, this.length);
                  var W = this[P + 1] | (this[P] << 8);
                  return 32768 & W ? 4294901760 | W : W;
                }),
                (o.prototype.readInt32LE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 4, this.length),
                    this[P] |
                      (this[P + 1] << 8) |
                      (this[P + 2] << 16) |
                      (this[P + 3] << 24)
                  );
                }),
                (o.prototype.readInt32BE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 4, this.length),
                    (this[P] << 24) |
                      (this[P + 1] << 16) |
                      (this[P + 2] << 8) |
                      this[P + 3]
                  );
                }),
                (o.prototype.readFloatLE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 4, this.length),
                    c.read(this, P, !0, 23, 4)
                  );
                }),
                (o.prototype.readFloatBE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 4, this.length),
                    c.read(this, P, !1, 23, 4)
                  );
                }),
                (o.prototype.readDoubleLE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 8, this.length),
                    c.read(this, P, !0, 52, 8)
                  );
                }),
                (o.prototype.readDoubleBE = function (P, U) {
                  return (
                    (P >>>= 0),
                    U || Z(P, 8, this.length),
                    c.read(this, P, !1, 52, 8)
                  );
                }),
                (o.prototype.writeUIntLE = function (P, U, W, K) {
                  (P = +P),
                    (U >>>= 0),
                    (W >>>= 0),
                    K || J(this, P, U, W, Math.pow(2, 8 * W) - 1, 0);
                  var ne = 1,
                    re = 0;
                  for (this[U] = 255 & P; ++re < W && (ne *= 256); )
                    this[U + re] = (P / ne) & 255;
                  return U + W;
                }),
                (o.prototype.writeUIntBE = function (P, U, W, K) {
                  (P = +P),
                    (U >>>= 0),
                    (W >>>= 0),
                    K || J(this, P, U, W, Math.pow(2, 8 * W) - 1, 0);
                  var ne = W - 1,
                    re = 1;
                  for (this[U + ne] = 255 & P; 0 <= --ne && (re *= 256); )
                    this[U + ne] = (P / re) & 255;
                  return U + W;
                }),
                (o.prototype.writeUInt8 = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 1, 255, 0),
                    (this[U] = 255 & P),
                    U + 1
                  );
                }),
                (o.prototype.writeUInt16LE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 2, 65535, 0),
                    (this[U] = 255 & P),
                    (this[U + 1] = P >>> 8),
                    U + 2
                  );
                }),
                (o.prototype.writeUInt16BE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 2, 65535, 0),
                    (this[U] = P >>> 8),
                    (this[U + 1] = 255 & P),
                    U + 2
                  );
                }),
                (o.prototype.writeUInt32LE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 4, 4294967295, 0),
                    (this[U + 3] = P >>> 24),
                    (this[U + 2] = P >>> 16),
                    (this[U + 1] = P >>> 8),
                    (this[U] = 255 & P),
                    U + 4
                  );
                }),
                (o.prototype.writeUInt32BE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 4, 4294967295, 0),
                    (this[U] = P >>> 24),
                    (this[U + 1] = P >>> 16),
                    (this[U + 2] = P >>> 8),
                    (this[U + 3] = 255 & P),
                    U + 4
                  );
                }),
                (o.prototype.writeIntLE = function (P, U, W, K) {
                  if (((P = +P), (U >>>= 0), !K)) {
                    var ne = Math.pow(2, 8 * W - 1);
                    J(this, P, U, W, ne - 1, -ne);
                  }
                  var re = 0,
                    we = 1,
                    X = 0;
                  for (this[U] = 255 & P; ++re < W && (we *= 256); )
                    P < 0 && X === 0 && this[U + re - 1] !== 0 && (X = 1),
                      (this[U + re] = (((P / we) >> 0) - X) & 255);
                  return U + W;
                }),
                (o.prototype.writeIntBE = function (P, U, W, K) {
                  if (((P = +P), (U >>>= 0), !K)) {
                    var ne = Math.pow(2, 8 * W - 1);
                    J(this, P, U, W, ne - 1, -ne);
                  }
                  var re = W - 1,
                    we = 1,
                    X = 0;
                  for (this[U + re] = 255 & P; 0 <= --re && (we *= 256); )
                    P < 0 && X === 0 && this[U + re + 1] !== 0 && (X = 1),
                      (this[U + re] = (((P / we) >> 0) - X) & 255);
                  return U + W;
                }),
                (o.prototype.writeInt8 = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 1, 127, -128),
                    P < 0 && (P = 255 + P + 1),
                    (this[U] = 255 & P),
                    U + 1
                  );
                }),
                (o.prototype.writeInt16LE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 2, 32767, -32768),
                    (this[U] = 255 & P),
                    (this[U + 1] = P >>> 8),
                    U + 2
                  );
                }),
                (o.prototype.writeInt16BE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 2, 32767, -32768),
                    (this[U] = P >>> 8),
                    (this[U + 1] = 255 & P),
                    U + 2
                  );
                }),
                (o.prototype.writeInt32LE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 4, 2147483647, -2147483648),
                    (this[U] = 255 & P),
                    (this[U + 1] = P >>> 8),
                    (this[U + 2] = P >>> 16),
                    (this[U + 3] = P >>> 24),
                    U + 4
                  );
                }),
                (o.prototype.writeInt32BE = function (P, U, W) {
                  return (
                    (P = +P),
                    (U >>>= 0),
                    W || J(this, P, U, 4, 2147483647, -2147483648),
                    P < 0 && (P = 4294967295 + P + 1),
                    (this[U] = P >>> 24),
                    (this[U + 1] = P >>> 16),
                    (this[U + 2] = P >>> 8),
                    (this[U + 3] = 255 & P),
                    U + 4
                  );
                }),
                (o.prototype.writeFloatLE = function (P, U, W) {
                  return ee(this, P, U, !0, W);
                }),
                (o.prototype.writeFloatBE = function (P, U, W) {
                  return ee(this, P, U, !1, W);
                }),
                (o.prototype.writeDoubleLE = function (P, U, W) {
                  return Q(this, P, U, !0, W);
                }),
                (o.prototype.writeDoubleBE = function (P, U, W) {
                  return Q(this, P, U, !1, W);
                }),
                (o.prototype.copy = function (P, U, W, K) {
                  if (!o.isBuffer(P))
                    throw new TypeError('argument should be a Buffer');
                  if (
                    ((W = W || 0),
                    K || K === 0 || (K = this.length),
                    U >= P.length && (U = P.length),
                    (U = U || 0),
                    0 < K && K < W && (K = W),
                    K === W || P.length === 0 || this.length === 0)
                  )
                    return 0;
                  if (U < 0) throw new RangeError('targetStart out of bounds');
                  if (W < 0 || W >= this.length)
                    throw new RangeError('Index out of range');
                  if (K < 0) throw new RangeError('sourceEnd out of bounds');
                  K > this.length && (K = this.length),
                    P.length - U < K - W && (K = P.length - U + W);
                  var ne = K - W;
                  if (
                    this === P &&
                    typeof Uint8Array.prototype.copyWithin == 'function'
                  )
                    this.copyWithin(U, W, K);
                  else if (this === P && W < U && U < K)
                    for (var re = ne - 1; 0 <= re; --re)
                      P[re + U] = this[re + W];
                  else Uint8Array.prototype.set.call(P, this.subarray(W, K), U);
                  return ne;
                }),
                (o.prototype.fill = function (P, U, W, K) {
                  if (typeof P == 'string') {
                    if (
                      (typeof U == 'string'
                        ? ((K = U), (U = 0), (W = this.length))
                        : typeof W == 'string' && ((K = W), (W = this.length)),
                      K !== void 0 && typeof K != 'string')
                    )
                      throw new TypeError('encoding must be a string');
                    if (typeof K == 'string' && !o.isEncoding(K))
                      throw new TypeError('Unknown encoding: ' + K);
                    if (P.length === 1) {
                      var ne = P.charCodeAt(0);
                      ((K === 'utf8' && ne < 128) || K === 'latin1') &&
                        (P = ne);
                    }
                  } else
                    typeof P == 'number'
                      ? (P &= 255)
                      : typeof P == 'boolean' && (P = Number(P));
                  if (U < 0 || this.length < U || this.length < W)
                    throw new RangeError('Out of range index');
                  if (W <= U) return this;
                  var re;
                  if (
                    ((U >>>= 0),
                    (W = W === void 0 ? this.length : W >>> 0),
                    typeof (P = P || 0) == 'number')
                  )
                    for (re = U; re < W; ++re) this[re] = P;
                  else {
                    var we = o.isBuffer(P) ? P : o.from(P, K),
                      X = we.length;
                    if (X === 0)
                      throw new TypeError(
                        'The value "' + P + '" is invalid for argument "value"',
                      );
                    for (re = 0; re < W - U; ++re) this[re + U] = we[re % X];
                  }
                  return this;
                });
              var oe = /[^+/0-9A-Za-z-_]/g;
              function ce(P, U) {
                var W;
                U = U || 1 / 0;
                for (
                  var K = P.length, ne = null, re = [], we = 0;
                  we < K;
                  ++we
                ) {
                  if (55295 < (W = P.charCodeAt(we)) && W < 57344) {
                    if (!ne) {
                      if (56319 < W) {
                        -1 < (U -= 3) && re.push(239, 191, 189);
                        continue;
                      }
                      if (we + 1 === K) {
                        -1 < (U -= 3) && re.push(239, 191, 189);
                        continue;
                      }
                      ne = W;
                      continue;
                    }
                    if (W < 56320) {
                      -1 < (U -= 3) && re.push(239, 191, 189), (ne = W);
                      continue;
                    }
                    W = 65536 + (((ne - 55296) << 10) | (W - 56320));
                  } else ne && -1 < (U -= 3) && re.push(239, 191, 189);
                  if (((ne = null), W < 128)) {
                    if (--U < 0) break;
                    re.push(W);
                  } else if (W < 2048) {
                    if ((U -= 2) < 0) break;
                    re.push((W >> 6) | 192, (63 & W) | 128);
                  } else if (W < 65536) {
                    if ((U -= 3) < 0) break;
                    re.push(
                      (W >> 12) | 224,
                      ((W >> 6) & 63) | 128,
                      (63 & W) | 128,
                    );
                  } else {
                    if (!(W < 1114112)) throw new Error('Invalid code point');
                    if ((U -= 4) < 0) break;
                    re.push(
                      (W >> 18) | 240,
                      ((W >> 12) & 63) | 128,
                      ((W >> 6) & 63) | 128,
                      (63 & W) | 128,
                    );
                  }
                }
                return re;
              }
              function ve(P) {
                return r.toByteArray(
                  (function (U) {
                    if (
                      (U = (U = U.split('=')[0]).trim().replace(oe, ''))
                        .length < 2
                    )
                      return '';
                    for (; U.length % 4 != 0; ) U += '=';
                    return U;
                  })(P),
                );
              }
              function de(P, U, W, K) {
                for (
                  var ne = 0;
                  ne < K && !(ne + W >= U.length || ne >= P.length);
                  ++ne
                )
                  U[ne + W] = P[ne];
                return ne;
              }
              function Se(P, U) {
                return (
                  P instanceof U ||
                  (P != null &&
                    P.constructor != null &&
                    P.constructor.name != null &&
                    P.constructor.name === U.name)
                );
              }
              function fe(P) {
                return P != P;
              }
              var ye = (function () {
                for (
                  var P = '0123456789abcdef', U = new Array(256), W = 0;
                  W < 16;
                  ++W
                )
                  for (var K = 16 * W, ne = 0; ne < 16; ++ne)
                    U[K + ne] = P[W] + P[ne];
                return U;
              })();
            }.call(this, e('buffer').Buffer));
          },
          { 'base64-js': 1, buffer: 4, ieee754: 236 },
        ],
        5: [
          function (e, v, y) {
            v.exports = function (m) {
              if (typeof m != 'function')
                throw TypeError(String(m) + ' is not a function');
              return m;
            };
          },
          {},
        ],
        6: [
          function (e, v, y) {
            var m = e('../internals/is-object');
            v.exports = function (r) {
              if (!m(r) && r !== null)
                throw TypeError("Can't set " + String(r) + ' as a prototype');
              return r;
            };
          },
          { '../internals/is-object': 74 },
        ],
        7: [
          function (e, v, y) {
            var m = e('../internals/well-known-symbol'),
              r = e('../internals/object-create'),
              c = e('../internals/object-define-property'),
              l = m('unscopables'),
              h = Array.prototype;
            h[l] == null && c.f(h, l, { configurable: !0, value: r(null) }),
              (v.exports = function (u) {
                h[l][u] = !0;
              });
          },
          {
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/well-known-symbol': 146,
          },
        ],
        8: [
          function (e, v, y) {
            var m = e('../internals/string-multibyte').charAt;
            v.exports = function (r, c, l) {
              return c + (l ? m(r, c).length : 1);
            };
          },
          { '../internals/string-multibyte': 123 },
        ],
        9: [
          function (e, v, y) {
            v.exports = function (m, r, c) {
              if (!(m instanceof r))
                throw TypeError(
                  'Incorrect ' + (c ? c + ' ' : '') + 'invocation',
                );
              return m;
            };
          },
          {},
        ],
        10: [
          function (e, v, y) {
            var m = e('../internals/is-object');
            v.exports = function (r) {
              if (!m(r)) throw TypeError(String(r) + ' is not an object');
              return r;
            };
          },
          { '../internals/is-object': 74 },
        ],
        11: [
          function (e, v, y) {
            v.exports = typeof ArrayBuffer < 'u' && typeof DataView < 'u';
          },
          {},
        ],
        12: [
          function (e, v, y) {
            function m($) {
              return u($) && o(J, n($));
            }
            var r,
              c = e('../internals/array-buffer-native'),
              l = e('../internals/descriptors'),
              h = e('../internals/global'),
              u = e('../internals/is-object'),
              o = e('../internals/has'),
              n = e('../internals/classof'),
              s = e('../internals/create-non-enumerable-property'),
              i = e('../internals/redefine'),
              a = e('../internals/object-define-property').f,
              d = e('../internals/object-get-prototype-of'),
              g = e('../internals/object-set-prototype-of'),
              _ = e('../internals/well-known-symbol'),
              w = e('../internals/uid'),
              S = h.Int8Array,
              M = S && S.prototype,
              E = h.Uint8ClampedArray,
              O = E && E.prototype,
              D = S && d(S),
              A = M && d(M),
              k = Object.prototype,
              L = k.isPrototypeOf,
              R = _('toStringTag'),
              N = w('TYPED_ARRAY_TAG'),
              B = c && !!g && n(h.opera) !== 'Opera',
              Z = !1,
              J = {
                Int8Array: 1,
                Uint8Array: 1,
                Uint8ClampedArray: 1,
                Int16Array: 2,
                Uint16Array: 2,
                Int32Array: 4,
                Uint32Array: 4,
                Float32Array: 4,
                Float64Array: 8,
              };
            for (r in J) h[r] || (B = !1);
            if (
              (!B || typeof D != 'function' || D === Function.prototype) &&
              ((D = function () {
                throw TypeError('Incorrect invocation');
              }),
              B)
            )
              for (r in J) h[r] && g(h[r], D);
            if ((!B || !A || A === k) && ((A = D.prototype), B))
              for (r in J) h[r] && g(h[r].prototype, A);
            if ((B && d(O) !== A && g(O, A), l && !o(A, R)))
              for (r in ((Z = !0),
              a(A, R, {
                get: function () {
                  return u(this) ? this[N] : void 0;
                },
              }),
              J))
                h[r] && s(h[r], N, r);
            v.exports = {
              NATIVE_ARRAY_BUFFER_VIEWS: B,
              TYPED_ARRAY_TAG: Z && N,
              aTypedArray: function ($) {
                if (m($)) return $;
                throw TypeError('Target is not a typed array');
              },
              aTypedArrayConstructor: function ($) {
                if (g) {
                  if (L.call(D, $)) return $;
                } else
                  for (var ee in J)
                    if (o(J, r)) {
                      var Q = h[ee];
                      if (Q && ($ === Q || L.call(Q, $))) return $;
                    }
                throw TypeError('Target is not a typed array constructor');
              },
              exportTypedArrayMethod: function ($, ee, Q) {
                if (l) {
                  if (Q)
                    for (var oe in J) {
                      var ce = h[oe];
                      ce && o(ce.prototype, $) && delete ce.prototype[$];
                    }
                  (A[$] && !Q) || i(A, $, Q ? ee : (B && M[$]) || ee);
                }
              },
              exportTypedArrayStaticMethod: function ($, ee, Q) {
                var oe, ce;
                if (l) {
                  if (g) {
                    if (Q)
                      for (oe in J) (ce = h[oe]) && o(ce, $) && delete ce[$];
                    if (D[$] && !Q) return;
                    try {
                      return i(D, $, Q ? ee : (B && S[$]) || ee);
                    } catch {}
                  }
                  for (oe in J) !(ce = h[oe]) || (ce[$] && !Q) || i(ce, $, ee);
                }
              },
              isView: function ($) {
                var ee = n($);
                return ee === 'DataView' || o(J, ee);
              },
              isTypedArray: m,
              TypedArray: D,
              TypedArrayPrototype: A,
            };
          },
          {
            '../internals/array-buffer-native': 11,
            '../internals/classof': 29,
            '../internals/create-non-enumerable-property': 37,
            '../internals/descriptors': 42,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/is-object': 74,
            '../internals/object-define-property': 92,
            '../internals/object-get-prototype-of': 97,
            '../internals/object-set-prototype-of': 101,
            '../internals/redefine': 108,
            '../internals/uid': 143,
            '../internals/well-known-symbol': 146,
          },
        ],
        13: [
          function (e, v, y) {
            function m(he) {
              return [255 & he];
            }
            function r(he) {
              return [255 & he, (he >> 8) & 255];
            }
            function c(he) {
              return [
                255 & he,
                (he >> 8) & 255,
                (he >> 16) & 255,
                (he >> 24) & 255,
              ];
            }
            function l(he) {
              return (he[3] << 24) | (he[2] << 16) | (he[1] << 8) | he[0];
            }
            function h(he) {
              return U(he, 23, 4);
            }
            function u(he) {
              return U(he, 52, 8);
            }
            function o(he, ie) {
              R(he[oe], ie, {
                get: function () {
                  return J(this)[ie];
                },
              });
            }
            function n(he, ie, xe, je) {
              var Te = O(xe),
                Ne = J(he);
              if (Te + ie > Ne.byteLength) throw P(ce);
              var ze = J(Ne.buffer).bytes,
                qe = Te + Ne.byteOffset,
                Fe = ze.slice(qe, qe + ie);
              return je ? Fe : Fe.reverse();
            }
            function s(he, ie, xe, je, Te, Ne) {
              var ze = O(xe),
                qe = J(he);
              if (ze + ie > qe.byteLength) throw P(ce);
              for (
                var Fe = J(qe.buffer).bytes,
                  nt = ze + qe.byteOffset,
                  ke = je(+Te),
                  Ae = 0;
                Ae < ie;
                Ae++
              )
                Fe[nt + Ae] = ke[Ne ? Ae : ie - Ae - 1];
            }
            var i = e('../internals/global'),
              a = e('../internals/descriptors'),
              d = e('../internals/array-buffer-native'),
              g = e('../internals/create-non-enumerable-property'),
              _ = e('../internals/redefine-all'),
              w = e('../internals/fails'),
              S = e('../internals/an-instance'),
              M = e('../internals/to-integer'),
              E = e('../internals/to-length'),
              O = e('../internals/to-index'),
              D = e('../internals/ieee754'),
              A = e('../internals/object-get-prototype-of'),
              k = e('../internals/object-set-prototype-of'),
              L = e('../internals/object-get-own-property-names').f,
              R = e('../internals/object-define-property').f,
              N = e('../internals/array-fill'),
              B = e('../internals/set-to-string-tag'),
              Z = e('../internals/internal-state'),
              J = Z.get,
              $ = Z.set,
              ee = 'ArrayBuffer',
              Q = 'DataView',
              oe = 'prototype',
              ce = 'Wrong index',
              ve = i[ee],
              de = ve,
              Se = i[Q],
              fe = Se && Se[oe],
              ye = Object.prototype,
              P = i.RangeError,
              U = D.pack,
              W = D.unpack;
            if (d) {
              if (
                !w(function () {
                  ve(1);
                }) ||
                !w(function () {
                  new ve(-1);
                }) ||
                w(function () {
                  return new ve(), new ve(1.5), new ve(NaN), ve.name != ee;
                })
              ) {
                for (
                  var K,
                    ne = ((de = function (he) {
                      return S(this, de), new ve(O(he));
                    })[oe] = ve[oe]),
                    re = L(ve),
                    we = 0;
                  re.length > we;

                )
                  (K = re[we++]) in de || g(de, K, ve[K]);
                ne.constructor = de;
              }
              k && A(fe) !== ye && k(fe, ye);
              var X = new Se(new de(2)),
                ue = fe.setInt8;
              X.setInt8(0, 2147483648),
                X.setInt8(1, 2147483649),
                (!X.getInt8(0) && X.getInt8(1)) ||
                  _(
                    fe,
                    {
                      setInt8: function (he, ie) {
                        ue.call(this, he, (ie << 24) >> 24);
                      },
                      setUint8: function (he, ie) {
                        ue.call(this, he, (ie << 24) >> 24);
                      },
                    },
                    { unsafe: !0 },
                  );
            } else
              (de = function (he) {
                S(this, de, ee);
                var ie = O(he);
                $(this, { bytes: N.call(new Array(ie), 0), byteLength: ie }),
                  a || (this.byteLength = ie);
              }),
                (Se = function (he, ie, xe) {
                  S(this, Se, Q), S(he, de, Q);
                  var je = J(he).byteLength,
                    Te = M(ie);
                  if (Te < 0 || je < Te) throw P('Wrong offset');
                  if (je < Te + (xe = xe === void 0 ? je - Te : E(xe)))
                    throw P('Wrong length');
                  $(this, { buffer: he, byteLength: xe, byteOffset: Te }),
                    a ||
                      ((this.buffer = he),
                      (this.byteLength = xe),
                      (this.byteOffset = Te));
                }),
                a &&
                  (o(de, 'byteLength'),
                  o(Se, 'buffer'),
                  o(Se, 'byteLength'),
                  o(Se, 'byteOffset')),
                _(Se[oe], {
                  getInt8: function (he) {
                    return (n(this, 1, he)[0] << 24) >> 24;
                  },
                  getUint8: function (he) {
                    return n(this, 1, he)[0];
                  },
                  getInt16: function (he, ie) {
                    var xe = n(this, 2, he, 1 < arguments.length ? ie : void 0);
                    return (((xe[1] << 8) | xe[0]) << 16) >> 16;
                  },
                  getUint16: function (he, ie) {
                    var xe = n(this, 2, he, 1 < arguments.length ? ie : void 0);
                    return (xe[1] << 8) | xe[0];
                  },
                  getInt32: function (he, ie) {
                    return l(
                      n(this, 4, he, 1 < arguments.length ? ie : void 0),
                    );
                  },
                  getUint32: function (he, ie) {
                    return (
                      l(n(this, 4, he, 1 < arguments.length ? ie : void 0)) >>>
                      0
                    );
                  },
                  getFloat32: function (he, ie) {
                    return W(
                      n(this, 4, he, 1 < arguments.length ? ie : void 0),
                      23,
                    );
                  },
                  getFloat64: function (he, ie) {
                    return W(
                      n(this, 8, he, 1 < arguments.length ? ie : void 0),
                      52,
                    );
                  },
                  setInt8: function (he, ie) {
                    s(this, 1, he, m, ie);
                  },
                  setUint8: function (he, ie) {
                    s(this, 1, he, m, ie);
                  },
                  setInt16: function (he, ie, xe) {
                    s(this, 2, he, r, ie, 2 < arguments.length ? xe : void 0);
                  },
                  setUint16: function (he, ie, xe) {
                    s(this, 2, he, r, ie, 2 < arguments.length ? xe : void 0);
                  },
                  setInt32: function (he, ie, xe) {
                    s(this, 4, he, c, ie, 2 < arguments.length ? xe : void 0);
                  },
                  setUint32: function (he, ie, xe) {
                    s(this, 4, he, c, ie, 2 < arguments.length ? xe : void 0);
                  },
                  setFloat32: function (he, ie, xe) {
                    s(this, 4, he, h, ie, 2 < arguments.length ? xe : void 0);
                  },
                  setFloat64: function (he, ie, xe) {
                    s(this, 8, he, u, ie, 2 < arguments.length ? xe : void 0);
                  },
                });
            B(de, ee),
              B(Se, Q),
              (v.exports = { ArrayBuffer: de, DataView: Se });
          },
          {
            '../internals/an-instance': 9,
            '../internals/array-buffer-native': 11,
            '../internals/array-fill': 15,
            '../internals/create-non-enumerable-property': 37,
            '../internals/descriptors': 42,
            '../internals/fails': 50,
            '../internals/global': 59,
            '../internals/ieee754': 65,
            '../internals/internal-state': 70,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-get-prototype-of': 97,
            '../internals/object-set-prototype-of': 101,
            '../internals/redefine-all': 107,
            '../internals/set-to-string-tag': 117,
            '../internals/to-index': 131,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
          },
        ],
        14: [
          function (e, v, y) {
            var m = e('../internals/to-object'),
              r = e('../internals/to-absolute-index'),
              c = e('../internals/to-length'),
              l = Math.min;
            v.exports =
              [].copyWithin ||
              function (h, u, o) {
                var n = m(this),
                  s = c(n.length),
                  i = r(h, s),
                  a = r(u, s),
                  d = 2 < arguments.length ? o : void 0,
                  g = l((d === void 0 ? s : r(d, s)) - a, s - i),
                  _ = 1;
                for (
                  a < i && i < a + g && ((_ = -1), (a += g - 1), (i += g - 1));
                  0 < g--;

                )
                  a in n ? (n[i] = n[a]) : delete n[i], (i += _), (a += _);
                return n;
              };
          },
          {
            '../internals/to-absolute-index': 130,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        15: [
          function (e, v, y) {
            var m = e('../internals/to-object'),
              r = e('../internals/to-absolute-index'),
              c = e('../internals/to-length');
            v.exports = function (l, h, u) {
              for (
                var o = m(this),
                  n = c(o.length),
                  s = arguments.length,
                  i = r(1 < s ? h : void 0, n),
                  a = 2 < s ? u : void 0,
                  d = a === void 0 ? n : r(a, n);
                i < d;

              )
                o[i++] = l;
              return o;
            };
          },
          {
            '../internals/to-absolute-index': 130,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        16: [
          function (e, v, y) {
            var m = e('../internals/array-iteration').forEach,
              r = e('../internals/array-method-is-strict'),
              c = e('../internals/array-method-uses-to-length'),
              l = r('forEach'),
              h = c('forEach');
            v.exports =
              l && h
                ? [].forEach
                : function (u, o) {
                    return m(this, u, 1 < arguments.length ? o : void 0);
                  };
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
          },
        ],
        17: [
          function (e, v, y) {
            var m = e('../internals/function-bind-context'),
              r = e('../internals/to-object'),
              c = e('../internals/call-with-safe-iteration-closing'),
              l = e('../internals/is-array-iterator-method'),
              h = e('../internals/to-length'),
              u = e('../internals/create-property'),
              o = e('../internals/get-iterator-method');
            v.exports = function (n, s, i) {
              var a,
                d,
                g,
                _,
                w,
                S,
                M = r(n),
                E = typeof this == 'function' ? this : Array,
                O = arguments.length,
                D = 1 < O ? s : void 0,
                A = D !== void 0,
                k = o(M),
                L = 0;
              if (
                (A && (D = m(D, 2 < O ? i : void 0, 2)),
                k == null || (E == Array && l(k)))
              )
                for (d = new E((a = h(M.length))); L < a; L++)
                  (S = A ? D(M[L], L) : M[L]), u(d, L, S);
              else
                for (
                  w = (_ = k.call(M)).next, d = new E();
                  !(g = w.call(_)).done;
                  L++
                )
                  (S = A ? c(_, D, [g.value, L], !0) : g.value), u(d, L, S);
              return (d.length = L), d;
            };
          },
          {
            '../internals/call-with-safe-iteration-closing': 26,
            '../internals/create-property': 39,
            '../internals/function-bind-context': 54,
            '../internals/get-iterator-method': 57,
            '../internals/is-array-iterator-method': 71,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        18: [
          function (e, v, y) {
            function m(h) {
              return function (u, o, n) {
                var s,
                  i = r(u),
                  a = c(i.length),
                  d = l(n, a);
                if (h && o != o) {
                  for (; d < a; ) if ((s = i[d++]) != s) return !0;
                } else
                  for (; d < a; d++)
                    if ((h || d in i) && i[d] === o) return h || d || 0;
                return !h && -1;
              };
            }
            var r = e('../internals/to-indexed-object'),
              c = e('../internals/to-length'),
              l = e('../internals/to-absolute-index');
            v.exports = { includes: m(!0), indexOf: m(!1) };
          },
          {
            '../internals/to-absolute-index': 130,
            '../internals/to-indexed-object': 132,
            '../internals/to-length': 134,
          },
        ],
        19: [
          function (e, v, y) {
            function m(n) {
              var s = n == 1,
                i = n == 2,
                a = n == 3,
                d = n == 4,
                g = n == 6,
                _ = n == 5 || g;
              return function (w, S, M, E) {
                for (
                  var O,
                    D,
                    A = l(w),
                    k = c(A),
                    L = r(S, M, 3),
                    R = h(k.length),
                    N = 0,
                    B = E || u,
                    Z = s ? B(w, R) : i ? B(w, 0) : void 0;
                  N < R;
                  N++
                )
                  if ((_ || N in k) && ((D = L((O = k[N]), N, A)), n)) {
                    if (s) Z[N] = D;
                    else if (D)
                      switch (n) {
                        case 3:
                          return !0;
                        case 5:
                          return O;
                        case 6:
                          return N;
                        case 2:
                          o.call(Z, O);
                      }
                    else if (d) return !1;
                  }
                return g ? -1 : a || d ? d : Z;
              };
            }
            var r = e('../internals/function-bind-context'),
              c = e('../internals/indexed-object'),
              l = e('../internals/to-object'),
              h = e('../internals/to-length'),
              u = e('../internals/array-species-create'),
              o = [].push;
            v.exports = {
              forEach: m(0),
              map: m(1),
              filter: m(2),
              some: m(3),
              every: m(4),
              find: m(5),
              findIndex: m(6),
            };
          },
          {
            '../internals/array-species-create': 25,
            '../internals/function-bind-context': 54,
            '../internals/indexed-object': 66,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        20: [
          function (e, v, y) {
            var m = e('../internals/to-indexed-object'),
              r = e('../internals/to-integer'),
              c = e('../internals/to-length'),
              l = e('../internals/array-method-is-strict'),
              h = e('../internals/array-method-uses-to-length'),
              u = Math.min,
              o = [].lastIndexOf,
              n = !!o && 1 / [1].lastIndexOf(1, -0) < 0,
              s = l('lastIndexOf'),
              i = h('indexOf', { ACCESSORS: !0, 1: 0 }),
              a = n || !s || !i;
            v.exports = a
              ? function (d, g) {
                  if (n) return o.apply(this, arguments) || 0;
                  var _ = m(this),
                    w = c(_.length),
                    S = w - 1;
                  for (
                    1 < arguments.length && (S = u(S, r(g))),
                      S < 0 && (S = w + S);
                    0 <= S;
                    S--
                  )
                    if (S in _ && _[S] === d) return S || 0;
                  return -1;
                }
              : o;
          },
          {
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/to-indexed-object': 132,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
          },
        ],
        21: [
          function (e, v, y) {
            var m = e('../internals/fails'),
              r = e('../internals/well-known-symbol'),
              c = e('../internals/engine-v8-version'),
              l = r('species');
            v.exports = function (h) {
              return (
                51 <= c ||
                !m(function () {
                  var u = [];
                  return (
                    ((u.constructor = {})[l] = function () {
                      return { foo: 1 };
                    }),
                    u[h](Boolean).foo !== 1
                  );
                })
              );
            };
          },
          {
            '../internals/engine-v8-version': 47,
            '../internals/fails': 50,
            '../internals/well-known-symbol': 146,
          },
        ],
        22: [
          function (e, v, y) {
            var m = e('../internals/fails');
            v.exports = function (r, c) {
              var l = [][r];
              return (
                !!l &&
                m(function () {
                  l.call(
                    null,
                    c ||
                      function () {
                        throw 1;
                      },
                    1,
                  );
                })
              );
            };
          },
          { '../internals/fails': 50 },
        ],
        23: [
          function (e, v, y) {
            function m(o) {
              throw o;
            }
            var r = e('../internals/descriptors'),
              c = e('../internals/fails'),
              l = e('../internals/has'),
              h = Object.defineProperty,
              u = {};
            v.exports = function (o, n) {
              if (l(u, o)) return u[o];
              var s = [][o],
                i = !!l((n = n || {}), 'ACCESSORS') && n.ACCESSORS,
                a = l(n, 0) ? n[0] : m,
                d = l(n, 1) ? n[1] : void 0;
              return (u[o] =
                !!s &&
                !c(function () {
                  if (i && !r) return !0;
                  var g = { length: -1 };
                  i ? h(g, 1, { enumerable: !0, get: m }) : (g[1] = 1),
                    s.call(g, a, d);
                }));
            };
          },
          {
            '../internals/descriptors': 42,
            '../internals/fails': 50,
            '../internals/has': 60,
          },
        ],
        24: [
          function (e, v, y) {
            function m(u) {
              return function (o, n, s, i) {
                r(n);
                var a = c(o),
                  d = l(a),
                  g = h(a.length),
                  _ = u ? g - 1 : 0,
                  w = u ? -1 : 1;
                if (s < 2)
                  for (;;) {
                    if (_ in d) {
                      (i = d[_]), (_ += w);
                      break;
                    }
                    if (((_ += w), u ? _ < 0 : g <= _))
                      throw TypeError(
                        'Reduce of empty array with no initial value',
                      );
                  }
                for (; u ? 0 <= _ : _ < g; _ += w)
                  _ in d && (i = n(i, d[_], _, a));
                return i;
              };
            }
            var r = e('../internals/a-function'),
              c = e('../internals/to-object'),
              l = e('../internals/indexed-object'),
              h = e('../internals/to-length');
            v.exports = { left: m(!1), right: m(!0) };
          },
          {
            '../internals/a-function': 5,
            '../internals/indexed-object': 66,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        25: [
          function (e, v, y) {
            var m = e('../internals/is-object'),
              r = e('../internals/is-array'),
              c = e('../internals/well-known-symbol')('species');
            v.exports = function (l, h) {
              var u;
              return (
                r(l) &&
                  (typeof (u = l.constructor) != 'function' ||
                  (u !== Array && !r(u.prototype))
                    ? m(u) && (u = u[c]) === null && (u = void 0)
                    : (u = void 0)),
                new (u === void 0 ? Array : u)(h === 0 ? 0 : h)
              );
            };
          },
          {
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/well-known-symbol': 146,
          },
        ],
        26: [
          function (e, v, y) {
            var m = e('../internals/an-object');
            v.exports = function (r, c, l, h) {
              try {
                return h ? c(m(l)[0], l[1]) : c(l);
              } catch (o) {
                var u = r.return;
                throw (u !== void 0 && m(u.call(r)), o);
              }
            };
          },
          { '../internals/an-object': 10 },
        ],
        27: [
          function (e, v, y) {
            var m = e('../internals/well-known-symbol')('iterator'),
              r = !1;
            try {
              var c = 0,
                l = {
                  next: function () {
                    return { done: !!c++ };
                  },
                  return: function () {
                    r = !0;
                  },
                };
              (l[m] = function () {
                return this;
              }),
                Array.from(l, function () {
                  throw 2;
                });
            } catch {}
            v.exports = function (h, u) {
              if (!u && !r) return !1;
              var o = !1;
              try {
                var n = {};
                (n[m] = function () {
                  return {
                    next: function () {
                      return { done: (o = !0) };
                    },
                  };
                }),
                  h(n);
              } catch {}
              return o;
            };
          },
          { '../internals/well-known-symbol': 146 },
        ],
        28: [
          function (e, v, y) {
            var m = {}.toString;
            v.exports = function (r) {
              return m.call(r).slice(8, -1);
            };
          },
          {},
        ],
        29: [
          function (e, v, y) {
            var m = e('../internals/to-string-tag-support'),
              r = e('../internals/classof-raw'),
              c = e('../internals/well-known-symbol')('toStringTag'),
              l =
                r(
                  (function () {
                    return arguments;
                  })(),
                ) == 'Arguments';
            v.exports = m
              ? r
              : function (h) {
                  var u, o, n;
                  return h === void 0
                    ? 'Undefined'
                    : h === null
                    ? 'Null'
                    : typeof (o = (function (s, i) {
                        try {
                          return s[i];
                        } catch {}
                      })((u = Object(h)), c)) == 'string'
                    ? o
                    : l
                    ? r(u)
                    : (n = r(u)) == 'Object' && typeof u.callee == 'function'
                    ? 'Arguments'
                    : n;
                };
          },
          {
            '../internals/classof-raw': 28,
            '../internals/to-string-tag-support': 139,
            '../internals/well-known-symbol': 146,
          },
        ],
        30: [
          function (e, v, y) {
            var m = e('../internals/object-define-property').f,
              r = e('../internals/object-create'),
              c = e('../internals/redefine-all'),
              l = e('../internals/function-bind-context'),
              h = e('../internals/an-instance'),
              u = e('../internals/iterate'),
              o = e('../internals/define-iterator'),
              n = e('../internals/set-species'),
              s = e('../internals/descriptors'),
              i = e('../internals/internal-metadata').fastKey,
              a = e('../internals/internal-state'),
              d = a.set,
              g = a.getterFor;
            v.exports = {
              getConstructor: function (_, w, S, M) {
                function E(k, L, R) {
                  var N,
                    B,
                    Z = D(k),
                    J = A(k, L);
                  return (
                    J
                      ? (J.value = R)
                      : ((Z.last = J =
                          {
                            index: (B = i(L, !0)),
                            key: L,
                            value: R,
                            previous: (N = Z.last),
                            next: void 0,
                            removed: !1,
                          }),
                        Z.first || (Z.first = J),
                        N && (N.next = J),
                        s ? Z.size++ : k.size++,
                        B !== 'F' && (Z.index[B] = J)),
                    k
                  );
                }
                var O = _(function (k, L) {
                    h(k, O, w),
                      d(k, {
                        type: w,
                        index: r(null),
                        first: void 0,
                        last: void 0,
                        size: 0,
                      }),
                      s || (k.size = 0),
                      L != null && u(L, k[M], k, S);
                  }),
                  D = g(w),
                  A = function (k, L) {
                    var R,
                      N = D(k),
                      B = i(L);
                    if (B !== 'F') return N.index[B];
                    for (R = N.first; R; R = R.next) if (R.key == L) return R;
                  };
                return (
                  c(O.prototype, {
                    clear: function () {
                      for (var k = D(this), L = k.index, R = k.first; R; )
                        (R.removed = !0),
                          R.previous && (R.previous = R.previous.next = void 0),
                          delete L[R.index],
                          (R = R.next);
                      (k.first = k.last = void 0),
                        s ? (k.size = 0) : (this.size = 0);
                    },
                    delete: function (k) {
                      var L = D(this),
                        R = A(this, k);
                      if (R) {
                        var N = R.next,
                          B = R.previous;
                        delete L.index[R.index],
                          (R.removed = !0),
                          B && (B.next = N),
                          N && (N.previous = B),
                          L.first == R && (L.first = N),
                          L.last == R && (L.last = B),
                          s ? L.size-- : this.size--;
                      }
                      return !!R;
                    },
                    forEach: function (k, L) {
                      for (
                        var R,
                          N = D(this),
                          B = l(k, 1 < arguments.length ? L : void 0, 3);
                        (R = R ? R.next : N.first);

                      )
                        for (B(R.value, R.key, this); R && R.removed; )
                          R = R.previous;
                    },
                    has: function (k) {
                      return !!A(this, k);
                    },
                  }),
                  c(
                    O.prototype,
                    S
                      ? {
                          get: function (k) {
                            var L = A(this, k);
                            return L && L.value;
                          },
                          set: function (k, L) {
                            return E(this, k === 0 ? 0 : k, L);
                          },
                        }
                      : {
                          add: function (k) {
                            return E(this, (k = k === 0 ? 0 : k), k);
                          },
                        },
                  ),
                  s &&
                    m(O.prototype, 'size', {
                      get: function () {
                        return D(this).size;
                      },
                    }),
                  O
                );
              },
              setStrong: function (_, w, S) {
                var M = w + ' Iterator',
                  E = g(w),
                  O = g(M);
                o(
                  _,
                  w,
                  function (D, A) {
                    d(this, {
                      type: M,
                      target: D,
                      state: E(D),
                      kind: A,
                      last: void 0,
                    });
                  },
                  function () {
                    for (
                      var D = O(this), A = D.kind, k = D.last;
                      k && k.removed;

                    )
                      k = k.previous;
                    return D.target && (D.last = k = k ? k.next : D.state.first)
                      ? A == 'keys'
                        ? { value: k.key, done: !1 }
                        : A == 'values'
                        ? { value: k.value, done: !1 }
                        : { value: [k.key, k.value], done: !1 }
                      : { value: (D.target = void 0), done: !0 };
                  },
                  S ? 'entries' : 'values',
                  !S,
                  !0,
                ),
                  n(w);
              },
            };
          },
          {
            '../internals/an-instance': 9,
            '../internals/define-iterator': 40,
            '../internals/descriptors': 42,
            '../internals/function-bind-context': 54,
            '../internals/internal-metadata': 69,
            '../internals/internal-state': 70,
            '../internals/iterate': 77,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/redefine-all': 107,
            '../internals/set-species': 116,
          },
        ],
        31: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/global'),
              c = e('../internals/is-forced'),
              l = e('../internals/redefine'),
              h = e('../internals/internal-metadata'),
              u = e('../internals/iterate'),
              o = e('../internals/an-instance'),
              n = e('../internals/is-object'),
              s = e('../internals/fails'),
              i = e('../internals/check-correctness-of-iteration'),
              a = e('../internals/set-to-string-tag'),
              d = e('../internals/inherit-if-required');
            v.exports = function (g, _, w) {
              function S($) {
                var ee = A[$];
                l(
                  A,
                  $,
                  $ == 'add'
                    ? function (Q) {
                        return ee.call(this, Q === 0 ? 0 : Q), this;
                      }
                    : $ == 'delete'
                    ? function (Q) {
                        return !(E && !n(Q)) && ee.call(this, Q === 0 ? 0 : Q);
                      }
                    : $ == 'get'
                    ? function (Q) {
                        return E && !n(Q)
                          ? void 0
                          : ee.call(this, Q === 0 ? 0 : Q);
                      }
                    : $ == 'has'
                    ? function (Q) {
                        return !(E && !n(Q)) && ee.call(this, Q === 0 ? 0 : Q);
                      }
                    : function (Q, oe) {
                        return ee.call(this, Q === 0 ? 0 : Q, oe), this;
                      },
                );
              }
              var M = g.indexOf('Map') !== -1,
                E = g.indexOf('Weak') !== -1,
                O = M ? 'set' : 'add',
                D = r[g],
                A = D && D.prototype,
                k = D,
                L = {};
              if (
                c(
                  g,
                  typeof D != 'function' ||
                    !(
                      E ||
                      (A.forEach &&
                        !s(function () {
                          new D().entries().next();
                        }))
                    ),
                )
              )
                (k = w.getConstructor(_, g, M, O)), (h.REQUIRED = !0);
              else if (c(g, !0)) {
                var R = new k(),
                  N = R[O](E ? {} : -0, 1) != R,
                  B = s(function () {
                    R.has(1);
                  }),
                  Z = i(function ($) {
                    new D($);
                  }),
                  J =
                    !E &&
                    s(function () {
                      for (var $ = new D(), ee = 5; ee--; ) $[O](ee, ee);
                      return !$.has(-0);
                    });
                Z ||
                  (((k = _(function ($, ee) {
                    o($, k, g);
                    var Q = d(new D(), $, k);
                    return ee != null && u(ee, Q[O], Q, M), Q;
                  })).prototype = A).constructor = k),
                  (B || J) && (S('delete'), S('has'), M && S('get')),
                  (J || N) && S(O),
                  E && A.clear && delete A.clear;
              }
              return (
                (L[g] = k),
                m({ global: !0, forced: k != D }, L),
                a(k, g),
                E || w.setStrong(k, g, M),
                k
              );
            };
          },
          {
            '../internals/an-instance': 9,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/global': 59,
            '../internals/inherit-if-required': 67,
            '../internals/internal-metadata': 69,
            '../internals/is-forced': 73,
            '../internals/is-object': 74,
            '../internals/iterate': 77,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
          },
        ],
        32: [
          function (e, v, y) {
            var m = e('../internals/has'),
              r = e('../internals/own-keys'),
              c = e('../internals/object-get-own-property-descriptor'),
              l = e('../internals/object-define-property');
            v.exports = function (h, u) {
              for (var o = r(u), n = l.f, s = c.f, i = 0; i < o.length; i++) {
                var a = o[i];
                m(h, a) || n(h, a, s(u, a));
              }
            };
          },
          {
            '../internals/has': 60,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/own-keys': 103,
          },
        ],
        33: [
          function (e, v, y) {
            var m = e('../internals/well-known-symbol')('match');
            v.exports = function (r) {
              var c = /./;
              try {
                '/./'[r](c);
              } catch {
                try {
                  return (c[m] = !1), '/./'[r](c);
                } catch {}
              }
              return !1;
            };
          },
          { '../internals/well-known-symbol': 146 },
        ],
        34: [
          function (e, v, y) {
            var m = e('../internals/fails');
            v.exports = !m(function () {
              function r() {}
              return (
                (r.prototype.constructor = null),
                Object.getPrototypeOf(new r()) !== r.prototype
              );
            });
          },
          { '../internals/fails': 50 },
        ],
        35: [
          function (e, v, y) {
            var m = e('../internals/require-object-coercible'),
              r = /"/g;
            v.exports = function (c, l, h, u) {
              var o = String(m(c)),
                n = '<' + l;
              return (
                h !== '' &&
                  (n += ' ' + h + '="' + String(u).replace(r, '&quot;') + '"'),
                n + '>' + o + '</' + l + '>'
              );
            };
          },
          { '../internals/require-object-coercible': 113 },
        ],
        36: [
          function (e, v, y) {
            function m() {
              return this;
            }
            var r = e('../internals/iterators-core').IteratorPrototype,
              c = e('../internals/object-create'),
              l = e('../internals/create-property-descriptor'),
              h = e('../internals/set-to-string-tag'),
              u = e('../internals/iterators');
            v.exports = function (o, n, s) {
              var i = n + ' Iterator';
              return (
                (o.prototype = c(r, { next: l(1, s) })),
                h(o, i, !1, !0),
                (u[i] = m),
                o
              );
            };
          },
          {
            '../internals/create-property-descriptor': 38,
            '../internals/iterators': 79,
            '../internals/iterators-core': 78,
            '../internals/object-create': 90,
            '../internals/set-to-string-tag': 117,
          },
        ],
        37: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/object-define-property'),
              c = e('../internals/create-property-descriptor');
            v.exports = m
              ? function (l, h, u) {
                  return r.f(l, h, c(1, u));
                }
              : function (l, h, u) {
                  return (l[h] = u), l;
                };
          },
          {
            '../internals/create-property-descriptor': 38,
            '../internals/descriptors': 42,
            '../internals/object-define-property': 92,
          },
        ],
        38: [
          function (e, v, y) {
            v.exports = function (m, r) {
              return {
                enumerable: !(1 & m),
                configurable: !(2 & m),
                writable: !(4 & m),
                value: r,
              };
            };
          },
          {},
        ],
        39: [
          function (e, v, y) {
            var m = e('../internals/to-primitive'),
              r = e('../internals/object-define-property'),
              c = e('../internals/create-property-descriptor');
            v.exports = function (l, h, u) {
              var o = m(h);
              o in l ? r.f(l, o, c(0, u)) : (l[o] = u);
            };
          },
          {
            '../internals/create-property-descriptor': 38,
            '../internals/object-define-property': 92,
            '../internals/to-primitive': 138,
          },
        ],
        40: [
          function (e, v, y) {
            function m() {
              return this;
            }
            var r = e('../internals/export'),
              c = e('../internals/create-iterator-constructor'),
              l = e('../internals/object-get-prototype-of'),
              h = e('../internals/object-set-prototype-of'),
              u = e('../internals/set-to-string-tag'),
              o = e('../internals/create-non-enumerable-property'),
              n = e('../internals/redefine'),
              s = e('../internals/well-known-symbol'),
              i = e('../internals/is-pure'),
              a = e('../internals/iterators'),
              d = e('../internals/iterators-core'),
              g = d.IteratorPrototype,
              _ = d.BUGGY_SAFARI_ITERATORS,
              w = s('iterator'),
              S = 'values',
              M = 'entries';
            v.exports = function (E, O, D, A, k, L, R) {
              c(D, O, A);
              function N(de) {
                if (de === k && ce) return ce;
                if (!_ && de in Q) return Q[de];
                switch (de) {
                  case 'keys':
                  case S:
                  case M:
                    return function () {
                      return new D(this, de);
                    };
                }
                return function () {
                  return new D(this);
                };
              }
              var B,
                Z,
                J,
                $ = O + ' Iterator',
                ee = !1,
                Q = E.prototype,
                oe = Q[w] || Q['@@iterator'] || (k && Q[k]),
                ce = (!_ && oe) || N(k),
                ve = (O == 'Array' && Q.entries) || oe;
              if (
                (ve &&
                  ((B = l(ve.call(new E()))),
                  g !== Object.prototype &&
                    B.next &&
                    (i ||
                      l(B) === g ||
                      (h ? h(B, g) : typeof B[w] != 'function' && o(B, w, m)),
                    u(B, $, !0, !0),
                    i && (a[$] = m))),
                k == S &&
                  oe &&
                  oe.name !== S &&
                  ((ee = !0),
                  (ce = function () {
                    return oe.call(this);
                  })),
                (i && !R) || Q[w] === ce || o(Q, w, ce),
                (a[O] = ce),
                k)
              )
                if (
                  ((Z = {
                    values: N(S),
                    keys: L ? ce : N('keys'),
                    entries: N(M),
                  }),
                  R)
                )
                  for (J in Z) (!_ && !ee && J in Q) || n(Q, J, Z[J]);
                else r({ target: O, proto: !0, forced: _ || ee }, Z);
              return Z;
            };
          },
          {
            '../internals/create-iterator-constructor': 36,
            '../internals/create-non-enumerable-property': 37,
            '../internals/export': 49,
            '../internals/is-pure': 75,
            '../internals/iterators': 79,
            '../internals/iterators-core': 78,
            '../internals/object-get-prototype-of': 97,
            '../internals/object-set-prototype-of': 101,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
            '../internals/well-known-symbol': 146,
          },
        ],
        41: [
          function (e, v, y) {
            var m = e('../internals/path'),
              r = e('../internals/has'),
              c = e('../internals/well-known-symbol-wrapped'),
              l = e('../internals/object-define-property').f;
            v.exports = function (h) {
              var u = m.Symbol || (m.Symbol = {});
              r(u, h) || l(u, h, { value: c.f(h) });
            };
          },
          {
            '../internals/has': 60,
            '../internals/object-define-property': 92,
            '../internals/path': 104,
            '../internals/well-known-symbol-wrapped': 145,
          },
        ],
        42: [
          function (e, v, y) {
            var m = e('../internals/fails');
            v.exports = !m(function () {
              return (
                Object.defineProperty({}, 1, {
                  get: function () {
                    return 7;
                  },
                })[1] != 7
              );
            });
          },
          { '../internals/fails': 50 },
        ],
        43: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/is-object'),
              c = m.document,
              l = r(c) && r(c.createElement);
            v.exports = function (h) {
              return l ? c.createElement(h) : {};
            };
          },
          { '../internals/global': 59, '../internals/is-object': 74 },
        ],
        44: [
          function (e, v, y) {
            v.exports = {
              CSSRuleList: 0,
              CSSStyleDeclaration: 0,
              CSSValueList: 0,
              ClientRectList: 0,
              DOMRectList: 0,
              DOMStringList: 0,
              DOMTokenList: 1,
              DataTransferItemList: 0,
              FileList: 0,
              HTMLAllCollection: 0,
              HTMLCollection: 0,
              HTMLFormElement: 0,
              HTMLSelectElement: 0,
              MediaList: 0,
              MimeTypeArray: 0,
              NamedNodeMap: 0,
              NodeList: 1,
              PaintRequestList: 0,
              Plugin: 0,
              PluginArray: 0,
              SVGLengthList: 0,
              SVGNumberList: 0,
              SVGPathSegList: 0,
              SVGPointList: 0,
              SVGStringList: 0,
              SVGTransformList: 0,
              SourceBufferList: 0,
              StyleSheetList: 0,
              TextTrackCueList: 0,
              TextTrackList: 0,
              TouchList: 0,
            };
          },
          {},
        ],
        45: [
          function (e, v, y) {
            var m = e('../internals/engine-user-agent');
            v.exports = /(iphone|ipod|ipad).*applewebkit/i.test(m);
          },
          { '../internals/engine-user-agent': 46 },
        ],
        46: [
          function (e, v, y) {
            var m = e('../internals/get-built-in');
            v.exports = m('navigator', 'userAgent') || '';
          },
          { '../internals/get-built-in': 56 },
        ],
        47: [
          function (e, v, y) {
            var m,
              r,
              c = e('../internals/global'),
              l = e('../internals/engine-user-agent'),
              h = c.process,
              u = h && h.versions,
              o = u && u.v8;
            o
              ? (r = (m = o.split('.'))[0] + m[1])
              : l &&
                (!(m = l.match(/Edge\/(\d+)/)) || 74 <= m[1]) &&
                (m = l.match(/Chrome\/(\d+)/)) &&
                (r = m[1]),
              (v.exports = r && +r);
          },
          { '../internals/engine-user-agent': 46, '../internals/global': 59 },
        ],
        48: [
          function (e, v, y) {
            v.exports = [
              'constructor',
              'hasOwnProperty',
              'isPrototypeOf',
              'propertyIsEnumerable',
              'toLocaleString',
              'toString',
              'valueOf',
            ];
          },
          {},
        ],
        49: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/object-get-own-property-descriptor').f,
              c = e('../internals/create-non-enumerable-property'),
              l = e('../internals/redefine'),
              h = e('../internals/set-global'),
              u = e('../internals/copy-constructor-properties'),
              o = e('../internals/is-forced');
            v.exports = function (n, s) {
              var i,
                a,
                d,
                g,
                _,
                w = n.target,
                S = n.global,
                M = n.stat;
              if ((i = S ? m : M ? m[w] || h(w, {}) : (m[w] || {}).prototype))
                for (a in s) {
                  if (
                    ((g = s[a]),
                    (d = n.noTargetGet ? (_ = r(i, a)) && _.value : i[a]),
                    !o(S ? a : w + (M ? '.' : '#') + a, n.forced) &&
                      d !== void 0)
                  ) {
                    if (typeof g == typeof d) continue;
                    u(g, d);
                  }
                  (n.sham || (d && d.sham)) && c(g, 'sham', !0), l(i, a, g, n);
                }
            };
          },
          {
            '../internals/copy-constructor-properties': 32,
            '../internals/create-non-enumerable-property': 37,
            '../internals/global': 59,
            '../internals/is-forced': 73,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/redefine': 108,
            '../internals/set-global': 115,
          },
        ],
        50: [
          function (e, v, y) {
            v.exports = function (m) {
              try {
                return !!m();
              } catch {
                return !0;
              }
            };
          },
          {},
        ],
        51: [
          function (e, v, y) {
            e('../modules/es.regexp.exec');
            var m = e('../internals/redefine'),
              r = e('../internals/fails'),
              c = e('../internals/well-known-symbol'),
              l = e('../internals/regexp-exec'),
              h = e('../internals/create-non-enumerable-property'),
              u = c('species'),
              o = !r(function () {
                var d = /./;
                return (
                  (d.exec = function () {
                    var g = [];
                    return (g.groups = { a: '7' }), g;
                  }),
                  ''.replace(d, '$<a>') !== '7'
                );
              }),
              n = 'a'.replace(/./, '$0') === '$0',
              s = c('replace'),
              i = !!/./[s] && /./[s]('a', '$0') === '',
              a = !r(function () {
                var d = /(?:)/,
                  g = d.exec;
                d.exec = function () {
                  return g.apply(this, arguments);
                };
                var _ = 'ab'.split(d);
                return _.length !== 2 || _[0] !== 'a' || _[1] !== 'b';
              });
            v.exports = function (d, g, _, w) {
              var S = c(d),
                M = !r(function () {
                  var L = {};
                  return (
                    (L[S] = function () {
                      return 7;
                    }),
                    ''[d](L) != 7
                  );
                }),
                E =
                  M &&
                  !r(function () {
                    var L = !1,
                      R = /a/;
                    return (
                      d === 'split' &&
                        (((R = { constructor: {} }).constructor[u] =
                          function () {
                            return R;
                          }),
                        (R.flags = ''),
                        (R[S] = /./[S])),
                      (R.exec = function () {
                        return (L = !0), null;
                      }),
                      R[S](''),
                      !L
                    );
                  });
              if (
                !M ||
                !E ||
                (d === 'replace' && (!o || !n || i)) ||
                (d === 'split' && !a)
              ) {
                var O = /./[S],
                  D = _(
                    S,
                    ''[d],
                    function (L, R, N, B, Z) {
                      return R.exec === l
                        ? M && !Z
                          ? { done: !0, value: O.call(R, N, B) }
                          : { done: !0, value: L.call(N, R, B) }
                        : { done: !1 };
                    },
                    {
                      REPLACE_KEEPS_$0: n,
                      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: i,
                    },
                  ),
                  A = D[0],
                  k = D[1];
                m(String.prototype, d, A),
                  m(
                    RegExp.prototype,
                    S,
                    g == 2
                      ? function (L, R) {
                          return k.call(L, this, R);
                        }
                      : function (L) {
                          return k.call(L, this);
                        },
                  );
              }
              w && h(RegExp.prototype[S], 'sham', !0);
            };
          },
          {
            '../internals/create-non-enumerable-property': 37,
            '../internals/fails': 50,
            '../internals/redefine': 108,
            '../internals/regexp-exec': 110,
            '../internals/well-known-symbol': 146,
            '../modules/es.regexp.exec': 181,
          },
        ],
        52: [
          function (e, v, y) {
            var m = e('../internals/is-array'),
              r = e('../internals/to-length'),
              c = e('../internals/function-bind-context'),
              l = function (h, u, o, n, s, i, a, d) {
                for (var g, _ = s, w = 0, S = !!a && c(a, d, 3); w < n; ) {
                  if (w in o) {
                    if (((g = S ? S(o[w], w, u) : o[w]), 0 < i && m(g)))
                      _ = l(h, u, g, r(g.length), _, i - 1) - 1;
                    else {
                      if (9007199254740991 <= _)
                        throw TypeError('Exceed the acceptable array length');
                      h[_] = g;
                    }
                    _++;
                  }
                  w++;
                }
                return _;
              };
            v.exports = l;
          },
          {
            '../internals/function-bind-context': 54,
            '../internals/is-array': 72,
            '../internals/to-length': 134,
          },
        ],
        53: [
          function (e, v, y) {
            var m = e('../internals/fails');
            v.exports = !m(function () {
              return Object.isExtensible(Object.preventExtensions({}));
            });
          },
          { '../internals/fails': 50 },
        ],
        54: [
          function (e, v, y) {
            var m = e('../internals/a-function');
            v.exports = function (r, c, l) {
              if ((m(r), c === void 0)) return r;
              switch (l) {
                case 0:
                  return function () {
                    return r.call(c);
                  };
                case 1:
                  return function (h) {
                    return r.call(c, h);
                  };
                case 2:
                  return function (h, u) {
                    return r.call(c, h, u);
                  };
                case 3:
                  return function (h, u, o) {
                    return r.call(c, h, u, o);
                  };
              }
              return function () {
                return r.apply(c, arguments);
              };
            };
          },
          { '../internals/a-function': 5 },
        ],
        55: [
          function (e, v, y) {
            var m = e('../internals/a-function'),
              r = e('../internals/is-object'),
              c = [].slice,
              l = {};
            v.exports =
              Function.bind ||
              function (h) {
                var u = m(this),
                  o = c.call(arguments, 1),
                  n = function () {
                    var s = o.concat(c.call(arguments));
                    return this instanceof n
                      ? (function (i, a, d) {
                          if (!(a in l)) {
                            for (var g = [], _ = 0; _ < a; _++)
                              g[_] = 'a[' + _ + ']';
                            l[a] = Function(
                              'C,a',
                              'return new C(' + g.join(',') + ')',
                            );
                          }
                          return l[a](i, d);
                        })(u, s.length, s)
                      : u.apply(h, s);
                  };
                return r(u.prototype) && (n.prototype = u.prototype), n;
              };
          },
          { '../internals/a-function': 5, '../internals/is-object': 74 },
        ],
        56: [
          function (e, v, y) {
            function m(l) {
              return typeof l == 'function' ? l : void 0;
            }
            var r = e('../internals/path'),
              c = e('../internals/global');
            v.exports = function (l, h) {
              return arguments.length < 2
                ? m(r[l]) || m(c[l])
                : (r[l] && r[l][h]) || (c[l] && c[l][h]);
            };
          },
          { '../internals/global': 59, '../internals/path': 104 },
        ],
        57: [
          function (e, v, y) {
            var m = e('../internals/classof'),
              r = e('../internals/iterators'),
              c = e('../internals/well-known-symbol')('iterator');
            v.exports = function (l) {
              if (l != null) return l[c] || l['@@iterator'] || r[m(l)];
            };
          },
          {
            '../internals/classof': 29,
            '../internals/iterators': 79,
            '../internals/well-known-symbol': 146,
          },
        ],
        58: [
          function (e, v, y) {
            var m = e('../internals/an-object'),
              r = e('../internals/get-iterator-method');
            v.exports = function (c) {
              var l = r(c);
              if (typeof l != 'function')
                throw TypeError(String(c) + ' is not iterable');
              return m(l.call(c));
            };
          },
          {
            '../internals/an-object': 10,
            '../internals/get-iterator-method': 57,
          },
        ],
        59: [
          function (e, v, y) {
            (function (m) {
              function r(c) {
                return c && c.Math == Math && c;
              }
              v.exports =
                r(typeof globalThis == 'object' && globalThis) ||
                r(typeof window == 'object' && window) ||
                r(typeof self == 'object' && self) ||
                r(typeof m == 'object' && m) ||
                Function('return this')();
            }.call(
              this,
              typeof Ls < 'u'
                ? Ls
                : typeof self < 'u'
                ? self
                : typeof window < 'u'
                ? window
                : {},
            ));
          },
          {},
        ],
        60: [
          function (e, v, y) {
            var m = {}.hasOwnProperty;
            v.exports = function (r, c) {
              return m.call(r, c);
            };
          },
          {},
        ],
        61: [
          function (e, v, y) {
            v.exports = {};
          },
          {},
        ],
        62: [
          function (e, v, y) {
            var m = e('../internals/global');
            v.exports = function (r, c) {
              var l = m.console;
              l &&
                l.error &&
                (arguments.length === 1 ? l.error(r) : l.error(r, c));
            };
          },
          { '../internals/global': 59 },
        ],
        63: [
          function (e, v, y) {
            var m = e('../internals/get-built-in');
            v.exports = m('document', 'documentElement');
          },
          { '../internals/get-built-in': 56 },
        ],
        64: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/fails'),
              c = e('../internals/document-create-element');
            v.exports =
              !m &&
              !r(function () {
                return (
                  Object.defineProperty(c('div'), 'a', {
                    get: function () {
                      return 7;
                    },
                  }).a != 7
                );
              });
          },
          {
            '../internals/descriptors': 42,
            '../internals/document-create-element': 43,
            '../internals/fails': 50,
          },
        ],
        65: [
          function (e, v, y) {
            var m = Math.abs,
              r = Math.pow,
              c = Math.floor,
              l = Math.log,
              h = Math.LN2;
            v.exports = {
              pack: function (u, o, n) {
                var s,
                  i,
                  a,
                  d = new Array(n),
                  g = 8 * n - o - 1,
                  _ = (1 << g) - 1,
                  w = _ >> 1,
                  S = o === 23 ? r(2, -24) - r(2, -77) : 0,
                  M = u < 0 || (u === 0 && 1 / u < 0) ? 1 : 0,
                  E = 0;
                for (
                  (u = m(u)) != u || u === 1 / 0
                    ? ((i = u != u ? 1 : 0), (s = _))
                    : ((s = c(l(u) / h)),
                      u * (a = r(2, -s)) < 1 && (s--, (a *= 2)),
                      2 <= (u += 1 <= s + w ? S / a : S * r(2, 1 - w)) * a &&
                        (s++, (a /= 2)),
                      _ <= s + w
                        ? ((i = 0), (s = _))
                        : 1 <= s + w
                        ? ((i = (u * a - 1) * r(2, o)), (s += w))
                        : ((i = u * r(2, w - 1) * r(2, o)), (s = 0)));
                  8 <= o;
                  d[E++] = 255 & i, i /= 256, o -= 8
                );
                for (
                  s = (s << o) | i, g += o;
                  0 < g;
                  d[E++] = 255 & s, s /= 256, g -= 8
                );
                return (d[--E] |= 128 * M), d;
              },
              unpack: function (u, o) {
                var n,
                  s = u.length,
                  i = 8 * s - o - 1,
                  a = (1 << i) - 1,
                  d = a >> 1,
                  g = i - 7,
                  _ = s - 1,
                  w = u[_--],
                  S = 127 & w;
                for (w >>= 7; 0 < g; S = 256 * S + u[_], _--, g -= 8);
                for (
                  n = S & ((1 << -g) - 1), S >>= -g, g += o;
                  0 < g;
                  n = 256 * n + u[_], _--, g -= 8
                );
                if (S === 0) S = 1 - d;
                else {
                  if (S === a) return n ? NaN : w ? -1 / 0 : 1 / 0;
                  (n += r(2, o)), (S -= d);
                }
                return (w ? -1 : 1) * n * r(2, S - o);
              },
            };
          },
          {},
        ],
        66: [
          function (e, v, y) {
            var m = e('../internals/fails'),
              r = e('../internals/classof-raw'),
              c = ''.split;
            v.exports = m(function () {
              return !Object('z').propertyIsEnumerable(0);
            })
              ? function (l) {
                  return r(l) == 'String' ? c.call(l, '') : Object(l);
                }
              : Object;
          },
          { '../internals/classof-raw': 28, '../internals/fails': 50 },
        ],
        67: [
          function (e, v, y) {
            var m = e('../internals/is-object'),
              r = e('../internals/object-set-prototype-of');
            v.exports = function (c, l, h) {
              var u, o;
              return (
                r &&
                  typeof (u = l.constructor) == 'function' &&
                  u !== h &&
                  m((o = u.prototype)) &&
                  o !== h.prototype &&
                  r(c, o),
                c
              );
            };
          },
          {
            '../internals/is-object': 74,
            '../internals/object-set-prototype-of': 101,
          },
        ],
        68: [
          function (e, v, y) {
            var m = e('../internals/shared-store'),
              r = Function.toString;
            typeof m.inspectSource != 'function' &&
              (m.inspectSource = function (c) {
                return r.call(c);
              }),
              (v.exports = m.inspectSource);
          },
          { '../internals/shared-store': 119 },
        ],
        69: [
          function (e, v, y) {
            function m(d) {
              h(d, n, { value: { objectID: 'O' + ++s, weakData: {} } });
            }
            var r = e('../internals/hidden-keys'),
              c = e('../internals/is-object'),
              l = e('../internals/has'),
              h = e('../internals/object-define-property').f,
              u = e('../internals/uid'),
              o = e('../internals/freezing'),
              n = u('meta'),
              s = 0,
              i =
                Object.isExtensible ||
                function () {
                  return !0;
                },
              a = (v.exports = {
                REQUIRED: !1,
                fastKey: function (d, g) {
                  if (!c(d))
                    return typeof d == 'symbol'
                      ? d
                      : (typeof d == 'string' ? 'S' : 'P') + d;
                  if (!l(d, n)) {
                    if (!i(d)) return 'F';
                    if (!g) return 'E';
                    m(d);
                  }
                  return d[n].objectID;
                },
                getWeakData: function (d, g) {
                  if (!l(d, n)) {
                    if (!i(d)) return !0;
                    if (!g) return !1;
                    m(d);
                  }
                  return d[n].weakData;
                },
                onFreeze: function (d) {
                  return o && a.REQUIRED && i(d) && !l(d, n) && m(d), d;
                },
              });
            r[n] = !0;
          },
          {
            '../internals/freezing': 53,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/is-object': 74,
            '../internals/object-define-property': 92,
            '../internals/uid': 143,
          },
        ],
        70: [
          function (e, v, y) {
            var m,
              r,
              c,
              l = e('../internals/native-weak-map'),
              h = e('../internals/global'),
              u = e('../internals/is-object'),
              o = e('../internals/create-non-enumerable-property'),
              n = e('../internals/has'),
              s = e('../internals/shared-key'),
              i = e('../internals/hidden-keys'),
              a = h.WeakMap;
            if (l) {
              var d = new a(),
                g = d.get,
                _ = d.has,
                w = d.set;
              (m = function (M, E) {
                return w.call(d, M, E), E;
              }),
                (r = function (M) {
                  return g.call(d, M) || {};
                }),
                (c = function (M) {
                  return _.call(d, M);
                });
            } else {
              var S = s('state');
              (i[S] = !0),
                (m = function (M, E) {
                  return o(M, S, E), E;
                }),
                (r = function (M) {
                  return n(M, S) ? M[S] : {};
                }),
                (c = function (M) {
                  return n(M, S);
                });
            }
            v.exports = {
              set: m,
              get: r,
              has: c,
              enforce: function (M) {
                return c(M) ? r(M) : m(M, {});
              },
              getterFor: function (M) {
                return function (E) {
                  var O;
                  if (!u(E) || (O = r(E)).type !== M)
                    throw TypeError(
                      'Incompatible receiver, ' + M + ' required',
                    );
                  return O;
                };
              },
            };
          },
          {
            '../internals/create-non-enumerable-property': 37,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/is-object': 74,
            '../internals/native-weak-map': 85,
            '../internals/shared-key': 118,
          },
        ],
        71: [
          function (e, v, y) {
            var m = e('../internals/well-known-symbol'),
              r = e('../internals/iterators'),
              c = m('iterator'),
              l = Array.prototype;
            v.exports = function (h) {
              return h !== void 0 && (r.Array === h || l[c] === h);
            };
          },
          {
            '../internals/iterators': 79,
            '../internals/well-known-symbol': 146,
          },
        ],
        72: [
          function (e, v, y) {
            var m = e('../internals/classof-raw');
            v.exports =
              Array.isArray ||
              function (r) {
                return m(r) == 'Array';
              };
          },
          { '../internals/classof-raw': 28 },
        ],
        73: [
          function (e, v, y) {
            function m(n, s) {
              var i = h[l(n)];
              return (
                i == o || (i != u && (typeof s == 'function' ? r(s) : !!s))
              );
            }
            var r = e('../internals/fails'),
              c = /#|\.prototype\./,
              l = (m.normalize = function (n) {
                return String(n).replace(c, '.').toLowerCase();
              }),
              h = (m.data = {}),
              u = (m.NATIVE = 'N'),
              o = (m.POLYFILL = 'P');
            v.exports = m;
          },
          { '../internals/fails': 50 },
        ],
        74: [
          function (e, v, y) {
            v.exports = function (m) {
              return typeof m == 'object' ? m !== null : typeof m == 'function';
            };
          },
          {},
        ],
        75: [
          function (e, v, y) {
            v.exports = !1;
          },
          {},
        ],
        76: [
          function (e, v, y) {
            var m = e('../internals/is-object'),
              r = e('../internals/classof-raw'),
              c = e('../internals/well-known-symbol')('match');
            v.exports = function (l) {
              var h;
              return m(l) && ((h = l[c]) !== void 0 ? !!h : r(l) == 'RegExp');
            };
          },
          {
            '../internals/classof-raw': 28,
            '../internals/is-object': 74,
            '../internals/well-known-symbol': 146,
          },
        ],
        77: [
          function (e, v, y) {
            function m(n, s) {
              (this.stopped = n), (this.result = s);
            }
            var r = e('../internals/an-object'),
              c = e('../internals/is-array-iterator-method'),
              l = e('../internals/to-length'),
              h = e('../internals/function-bind-context'),
              u = e('../internals/get-iterator-method'),
              o = e('../internals/call-with-safe-iteration-closing');
            (v.exports = function (n, s, i, a, d) {
              var g,
                _,
                w,
                S,
                M,
                E,
                O,
                D = h(s, i, a ? 2 : 1);
              if (d) g = n;
              else {
                if (typeof (_ = u(n)) != 'function')
                  throw TypeError('Target is not iterable');
                if (c(_)) {
                  for (w = 0, S = l(n.length); w < S; w++)
                    if (
                      (M = a ? D(r((O = n[w]))[0], O[1]) : D(n[w])) &&
                      M instanceof m
                    )
                      return M;
                  return new m(!1);
                }
                g = _.call(n);
              }
              for (E = g.next; !(O = E.call(g)).done; )
                if (
                  typeof (M = o(g, D, O.value, a)) == 'object' &&
                  M &&
                  M instanceof m
                )
                  return M;
              return new m(!1);
            }).stop = function (n) {
              return new m(!0, n);
            };
          },
          {
            '../internals/an-object': 10,
            '../internals/call-with-safe-iteration-closing': 26,
            '../internals/function-bind-context': 54,
            '../internals/get-iterator-method': 57,
            '../internals/is-array-iterator-method': 71,
            '../internals/to-length': 134,
          },
        ],
        78: [
          function (e, v, y) {
            var m,
              r,
              c,
              l = e('../internals/object-get-prototype-of'),
              h = e('../internals/create-non-enumerable-property'),
              u = e('../internals/has'),
              o = e('../internals/well-known-symbol'),
              n = e('../internals/is-pure'),
              s = o('iterator'),
              i = !1;
            [].keys &&
              ('next' in (c = [].keys())
                ? (r = l(l(c))) !== Object.prototype && (m = r)
                : (i = !0)),
              m == null && (m = {}),
              n ||
                u(m, s) ||
                h(m, s, function () {
                  return this;
                }),
              (v.exports = { IteratorPrototype: m, BUGGY_SAFARI_ITERATORS: i });
          },
          {
            '../internals/create-non-enumerable-property': 37,
            '../internals/has': 60,
            '../internals/is-pure': 75,
            '../internals/object-get-prototype-of': 97,
            '../internals/well-known-symbol': 146,
          },
        ],
        79: [
          function (e, v, y) {
            arguments[4][61][0].apply(y, arguments);
          },
          { dup: 61 },
        ],
        80: [
          function (e, v, y) {
            v.exports =
              Math.sign ||
              function (m) {
                return (m = +m) == 0 || m != m ? m : m < 0 ? -1 : 1;
              };
          },
          {},
        ],
        81: [
          function (e, v, y) {
            var m,
              r,
              c,
              l,
              h,
              u,
              o,
              n,
              s = e('../internals/global'),
              i = e('../internals/object-get-own-property-descriptor').f,
              a = e('../internals/classof-raw'),
              d = e('../internals/task').set,
              g = e('../internals/engine-is-ios'),
              _ = s.MutationObserver || s.WebKitMutationObserver,
              w = s.process,
              S = s.Promise,
              M = a(w) == 'process',
              E = i(s, 'queueMicrotask'),
              O = E && E.value;
            O ||
              ((m = function () {
                var D, A;
                for (M && (D = w.domain) && D.exit(); r; ) {
                  (A = r.fn), (r = r.next);
                  try {
                    A();
                  } catch (k) {
                    throw (r ? l() : (c = void 0), k);
                  }
                }
                (c = void 0), D && D.enter();
              }),
              (l = M
                ? function () {
                    w.nextTick(m);
                  }
                : _ && !g
                ? ((h = !0),
                  (u = document.createTextNode('')),
                  new _(m).observe(u, { characterData: !0 }),
                  function () {
                    u.data = h = !h;
                  })
                : S && S.resolve
                ? ((o = S.resolve(void 0)),
                  (n = o.then),
                  function () {
                    n.call(o, m);
                  })
                : function () {
                    d.call(s, m);
                  })),
              (v.exports =
                O ||
                function (D) {
                  var A = { fn: D, next: void 0 };
                  c && (c.next = A), r || ((r = A), l()), (c = A);
                });
          },
          {
            '../internals/classof-raw': 28,
            '../internals/engine-is-ios': 45,
            '../internals/global': 59,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/task': 128,
          },
        ],
        82: [
          function (e, v, y) {
            var m = e('../internals/global');
            v.exports = m.Promise;
          },
          { '../internals/global': 59 },
        ],
        83: [
          function (e, v, y) {
            var m = e('../internals/fails');
            v.exports =
              !!Object.getOwnPropertySymbols &&
              !m(function () {
                return !String(Symbol());
              });
          },
          { '../internals/fails': 50 },
        ],
        84: [
          function (e, v, y) {
            var m = e('../internals/fails'),
              r = e('../internals/well-known-symbol'),
              c = e('../internals/is-pure'),
              l = r('iterator');
            v.exports = !m(function () {
              var h = new URL('b?a=1&b=2&c=3', 'http://a'),
                u = h.searchParams,
                o = '';
              return (
                (h.pathname = 'c%20d'),
                u.forEach(function (n, s) {
                  u.delete('b'), (o += s + n);
                }),
                (c && !h.toJSON) ||
                  !u.sort ||
                  h.href !== 'http://a/c%20d?a=1&c=3' ||
                  u.get('c') !== '3' ||
                  String(new URLSearchParams('?a=1')) !== 'a=1' ||
                  !u[l] ||
                  new URL('https://a@b').username !== 'a' ||
                  new URLSearchParams(new URLSearchParams('a=b')).get('a') !==
                    'b' ||
                  new URL('http://\u0442\u0435\u0441\u0442').host !==
                    'xn--e1aybc' ||
                  new URL('http://a#\u0431').hash !== '#%D0%B1' ||
                  o !== 'a1c3' ||
                  new URL('http://x', void 0).host !== 'x'
              );
            });
          },
          {
            '../internals/fails': 50,
            '../internals/is-pure': 75,
            '../internals/well-known-symbol': 146,
          },
        ],
        85: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/inspect-source'),
              c = m.WeakMap;
            v.exports = typeof c == 'function' && /native code/.test(r(c));
          },
          { '../internals/global': 59, '../internals/inspect-source': 68 },
        ],
        86: [
          function (e, v, y) {
            function m(c) {
              var l, h;
              (this.promise = new c(function (u, o) {
                if (l !== void 0 || h !== void 0)
                  throw TypeError('Bad Promise constructor');
                (l = u), (h = o);
              })),
                (this.resolve = r(l)),
                (this.reject = r(h));
            }
            var r = e('../internals/a-function');
            v.exports.f = function (c) {
              return new m(c);
            };
          },
          { '../internals/a-function': 5 },
        ],
        87: [
          function (e, v, y) {
            var m = e('../internals/is-regexp');
            v.exports = function (r) {
              if (m(r))
                throw TypeError(
                  "The method doesn't accept regular expressions",
                );
              return r;
            };
          },
          { '../internals/is-regexp': 76 },
        ],
        88: [
          function (e, v, y) {
            var m = e('../internals/global').isFinite;
            v.exports =
              Number.isFinite ||
              function (r) {
                return typeof r == 'number' && m(r);
              };
          },
          { '../internals/global': 59 },
        ],
        89: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/fails'),
              c = e('../internals/object-keys'),
              l = e('../internals/object-get-own-property-symbols'),
              h = e('../internals/object-property-is-enumerable'),
              u = e('../internals/to-object'),
              o = e('../internals/indexed-object'),
              n = Object.assign,
              s = Object.defineProperty;
            v.exports =
              !n ||
              r(function () {
                if (
                  m &&
                  n(
                    { b: 1 },
                    n(
                      s({}, 'a', {
                        enumerable: !0,
                        get: function () {
                          s(this, 'b', { value: 3, enumerable: !1 });
                        },
                      }),
                      { b: 2 },
                    ),
                  ).b !== 1
                )
                  return !0;
                var i = {},
                  a = {},
                  d = Symbol(),
                  g = 'abcdefghijklmnopqrst';
                return (
                  (i[d] = 7),
                  g.split('').forEach(function (_) {
                    a[_] = _;
                  }),
                  n({}, i)[d] != 7 || c(n({}, a)).join('') != g
                );
              })
                ? function (i, a) {
                    for (
                      var d = u(i),
                        g = arguments.length,
                        _ = 1,
                        w = l.f,
                        S = h.f;
                      _ < g;

                    )
                      for (
                        var M,
                          E = o(arguments[_++]),
                          O = w ? c(E).concat(w(E)) : c(E),
                          D = O.length,
                          A = 0;
                        A < D;

                      )
                        (M = O[A++]), (m && !S.call(E, M)) || (d[M] = E[M]);
                    return d;
                  }
                : n;
          },
          {
            '../internals/descriptors': 42,
            '../internals/fails': 50,
            '../internals/indexed-object': 66,
            '../internals/object-get-own-property-symbols': 96,
            '../internals/object-keys': 99,
            '../internals/object-property-is-enumerable': 100,
            '../internals/to-object': 135,
          },
        ],
        90: [
          function (e, v, y) {
            function m() {}
            function r(w) {
              return '<script>' + w + '</' + d + '>';
            }
            var c,
              l = e('../internals/an-object'),
              h = e('../internals/object-define-properties'),
              u = e('../internals/enum-bug-keys'),
              o = e('../internals/hidden-keys'),
              n = e('../internals/html'),
              s = e('../internals/document-create-element'),
              i = e('../internals/shared-key'),
              a = 'prototype',
              d = 'script',
              g = i('IE_PROTO'),
              _ = function () {
                try {
                  c = document.domain && new ActiveXObject('htmlfile');
                } catch {}
                var w, S;
                _ = c
                  ? (function (E) {
                      E.write(r('')), E.close();
                      var O = E.parentWindow.Object;
                      return (E = null), O;
                    })(c)
                  : (((S = s('iframe')).style.display = 'none'),
                    n.appendChild(S),
                    (S.src = String('javascript:')),
                    (w = S.contentWindow.document).open(),
                    w.write(r('document.F=Object')),
                    w.close(),
                    w.F);
                for (var M = u.length; M--; ) delete _[a][u[M]];
                return _();
              };
            (o[g] = !0),
              (v.exports =
                Object.create ||
                function (w, S) {
                  var M;
                  return (
                    w !== null
                      ? ((m[a] = l(w)),
                        (M = new m()),
                        (m[a] = null),
                        (M[g] = w))
                      : (M = _()),
                    S === void 0 ? M : h(M, S)
                  );
                });
          },
          {
            '../internals/an-object': 10,
            '../internals/document-create-element': 43,
            '../internals/enum-bug-keys': 48,
            '../internals/hidden-keys': 61,
            '../internals/html': 63,
            '../internals/object-define-properties': 91,
            '../internals/shared-key': 118,
          },
        ],
        91: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/object-define-property'),
              c = e('../internals/an-object'),
              l = e('../internals/object-keys');
            v.exports = m
              ? Object.defineProperties
              : function (h, u) {
                  c(h);
                  for (var o, n = l(u), s = n.length, i = 0; i < s; )
                    r.f(h, (o = n[i++]), u[o]);
                  return h;
                };
          },
          {
            '../internals/an-object': 10,
            '../internals/descriptors': 42,
            '../internals/object-define-property': 92,
            '../internals/object-keys': 99,
          },
        ],
        92: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/ie8-dom-define'),
              c = e('../internals/an-object'),
              l = e('../internals/to-primitive'),
              h = Object.defineProperty;
            y.f = m
              ? h
              : function (u, o, n) {
                  if ((c(u), (o = l(o, !0)), c(n), r))
                    try {
                      return h(u, o, n);
                    } catch {}
                  if ('get' in n || 'set' in n)
                    throw TypeError('Accessors not supported');
                  return 'value' in n && (u[o] = n.value), u;
                };
          },
          {
            '../internals/an-object': 10,
            '../internals/descriptors': 42,
            '../internals/ie8-dom-define': 64,
            '../internals/to-primitive': 138,
          },
        ],
        93: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/object-property-is-enumerable'),
              c = e('../internals/create-property-descriptor'),
              l = e('../internals/to-indexed-object'),
              h = e('../internals/to-primitive'),
              u = e('../internals/has'),
              o = e('../internals/ie8-dom-define'),
              n = Object.getOwnPropertyDescriptor;
            y.f = m
              ? n
              : function (s, i) {
                  if (((s = l(s)), (i = h(i, !0)), o))
                    try {
                      return n(s, i);
                    } catch {}
                  if (u(s, i)) return c(!r.f.call(s, i), s[i]);
                };
          },
          {
            '../internals/create-property-descriptor': 38,
            '../internals/descriptors': 42,
            '../internals/has': 60,
            '../internals/ie8-dom-define': 64,
            '../internals/object-property-is-enumerable': 100,
            '../internals/to-indexed-object': 132,
            '../internals/to-primitive': 138,
          },
        ],
        94: [
          function (e, v, y) {
            var m = e('../internals/to-indexed-object'),
              r = e('../internals/object-get-own-property-names').f,
              c = {}.toString,
              l =
                typeof window == 'object' &&
                window &&
                Object.getOwnPropertyNames
                  ? Object.getOwnPropertyNames(window)
                  : [];
            v.exports.f = function (h) {
              return l && c.call(h) == '[object Window]'
                ? (function (u) {
                    try {
                      return r(u);
                    } catch {
                      return l.slice();
                    }
                  })(h)
                : r(m(h));
            };
          },
          {
            '../internals/object-get-own-property-names': 95,
            '../internals/to-indexed-object': 132,
          },
        ],
        95: [
          function (e, v, y) {
            var m = e('../internals/object-keys-internal'),
              r = e('../internals/enum-bug-keys').concat('length', 'prototype');
            y.f =
              Object.getOwnPropertyNames ||
              function (c) {
                return m(c, r);
              };
          },
          {
            '../internals/enum-bug-keys': 48,
            '../internals/object-keys-internal': 98,
          },
        ],
        96: [
          function (e, v, y) {
            y.f = Object.getOwnPropertySymbols;
          },
          {},
        ],
        97: [
          function (e, v, y) {
            var m = e('../internals/has'),
              r = e('../internals/to-object'),
              c = e('../internals/shared-key'),
              l = e('../internals/correct-prototype-getter'),
              h = c('IE_PROTO'),
              u = Object.prototype;
            v.exports = l
              ? Object.getPrototypeOf
              : function (o) {
                  return (
                    (o = r(o)),
                    m(o, h)
                      ? o[h]
                      : typeof o.constructor == 'function' &&
                        o instanceof o.constructor
                      ? o.constructor.prototype
                      : o instanceof Object
                      ? u
                      : null
                  );
                };
          },
          {
            '../internals/correct-prototype-getter': 34,
            '../internals/has': 60,
            '../internals/shared-key': 118,
            '../internals/to-object': 135,
          },
        ],
        98: [
          function (e, v, y) {
            var m = e('../internals/has'),
              r = e('../internals/to-indexed-object'),
              c = e('../internals/array-includes').indexOf,
              l = e('../internals/hidden-keys');
            v.exports = function (h, u) {
              var o,
                n = r(h),
                s = 0,
                i = [];
              for (o in n) !m(l, o) && m(n, o) && i.push(o);
              for (; u.length > s; )
                m(n, (o = u[s++])) && (~c(i, o) || i.push(o));
              return i;
            };
          },
          {
            '../internals/array-includes': 18,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/to-indexed-object': 132,
          },
        ],
        99: [
          function (e, v, y) {
            var m = e('../internals/object-keys-internal'),
              r = e('../internals/enum-bug-keys');
            v.exports =
              Object.keys ||
              function (c) {
                return m(c, r);
              };
          },
          {
            '../internals/enum-bug-keys': 48,
            '../internals/object-keys-internal': 98,
          },
        ],
        100: [
          function (e, v, y) {
            var m = {}.propertyIsEnumerable,
              r = Object.getOwnPropertyDescriptor,
              c = r && !m.call({ 1: 2 }, 1);
            y.f = c
              ? function (l) {
                  var h = r(this, l);
                  return !!h && h.enumerable;
                }
              : m;
          },
          {},
        ],
        101: [
          function (e, v, y) {
            var m = e('../internals/an-object'),
              r = e('../internals/a-possible-prototype');
            v.exports =
              Object.setPrototypeOf ||
              ('__proto__' in {}
                ? (function () {
                    var c,
                      l = !1,
                      h = {};
                    try {
                      (c = Object.getOwnPropertyDescriptor(
                        Object.prototype,
                        '__proto__',
                      ).set).call(h, []),
                        (l = h instanceof Array);
                    } catch {}
                    return function (u, o) {
                      return (
                        m(u), r(o), l ? c.call(u, o) : (u.__proto__ = o), u
                      );
                    };
                  })()
                : void 0);
          },
          {
            '../internals/a-possible-prototype': 6,
            '../internals/an-object': 10,
          },
        ],
        102: [
          function (e, v, y) {
            var m = e('../internals/to-string-tag-support'),
              r = e('../internals/classof');
            v.exports = m
              ? {}.toString
              : function () {
                  return '[object ' + r(this) + ']';
                };
          },
          {
            '../internals/classof': 29,
            '../internals/to-string-tag-support': 139,
          },
        ],
        103: [
          function (e, v, y) {
            var m = e('../internals/get-built-in'),
              r = e('../internals/object-get-own-property-names'),
              c = e('../internals/object-get-own-property-symbols'),
              l = e('../internals/an-object');
            v.exports =
              m('Reflect', 'ownKeys') ||
              function (h) {
                var u = r.f(l(h)),
                  o = c.f;
                return o ? u.concat(o(h)) : u;
              };
          },
          {
            '../internals/an-object': 10,
            '../internals/get-built-in': 56,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-get-own-property-symbols': 96,
          },
        ],
        104: [
          function (e, v, y) {
            var m = e('../internals/global');
            v.exports = m;
          },
          { '../internals/global': 59 },
        ],
        105: [
          function (e, v, y) {
            v.exports = function (m) {
              try {
                return { error: !1, value: m() };
              } catch (r) {
                return { error: !0, value: r };
              }
            };
          },
          {},
        ],
        106: [
          function (e, v, y) {
            var m = e('../internals/an-object'),
              r = e('../internals/is-object'),
              c = e('../internals/new-promise-capability');
            v.exports = function (l, h) {
              if ((m(l), r(h) && h.constructor === l)) return h;
              var u = c.f(l);
              return (0, u.resolve)(h), u.promise;
            };
          },
          {
            '../internals/an-object': 10,
            '../internals/is-object': 74,
            '../internals/new-promise-capability': 86,
          },
        ],
        107: [
          function (e, v, y) {
            var m = e('../internals/redefine');
            v.exports = function (r, c, l) {
              for (var h in c) m(r, h, c[h], l);
              return r;
            };
          },
          { '../internals/redefine': 108 },
        ],
        108: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/create-non-enumerable-property'),
              c = e('../internals/has'),
              l = e('../internals/set-global'),
              h = e('../internals/inspect-source'),
              u = e('../internals/internal-state'),
              o = u.get,
              n = u.enforce,
              s = String(String).split('String');
            (v.exports = function (i, a, d, g) {
              var _ = !!g && !!g.unsafe,
                w = !!g && !!g.enumerable,
                S = !!g && !!g.noTargetGet;
              typeof d == 'function' &&
                (typeof a != 'string' || c(d, 'name') || r(d, 'name', a),
                (n(d).source = s.join(typeof a == 'string' ? a : ''))),
                i !== m
                  ? (_ ? !S && i[a] && (w = !0) : delete i[a],
                    w ? (i[a] = d) : r(i, a, d))
                  : w
                  ? (i[a] = d)
                  : l(a, d);
            })(Function.prototype, 'toString', function () {
              return (typeof this == 'function' && o(this).source) || h(this);
            });
          },
          {
            '../internals/create-non-enumerable-property': 37,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/inspect-source': 68,
            '../internals/internal-state': 70,
            '../internals/set-global': 115,
          },
        ],
        109: [
          function (e, v, y) {
            var m = e('./classof-raw'),
              r = e('./regexp-exec');
            v.exports = function (c, l) {
              var h = c.exec;
              if (typeof h == 'function') {
                var u = h.call(c, l);
                if (typeof u != 'object')
                  throw TypeError(
                    'RegExp exec method returned something other than an Object or null',
                  );
                return u;
              }
              if (m(c) !== 'RegExp')
                throw TypeError('RegExp#exec called on incompatible receiver');
              return r.call(c, l);
            };
          },
          { './classof-raw': 28, './regexp-exec': 110 },
        ],
        110: [
          function (e, v, y) {
            var m,
              r,
              c = e('./regexp-flags'),
              l = e('./regexp-sticky-helpers'),
              h = RegExp.prototype.exec,
              u = String.prototype.replace,
              o = h,
              n =
                ((m = /a/),
                (r = /b*/g),
                h.call(m, 'a'),
                h.call(r, 'a'),
                m.lastIndex !== 0 || r.lastIndex !== 0),
              s = l.UNSUPPORTED_Y || l.BROKEN_CARET,
              i = /()??/.exec('')[1] !== void 0;
            (n || i || s) &&
              (o = function (a) {
                var d,
                  g,
                  _,
                  w,
                  S = this,
                  M = s && S.sticky,
                  E = c.call(S),
                  O = S.source,
                  D = 0,
                  A = a;
                return (
                  M &&
                    ((E = E.replace('y', '')).indexOf('g') === -1 && (E += 'g'),
                    (A = String(a).slice(S.lastIndex)),
                    0 < S.lastIndex &&
                      (!S.multiline ||
                        (S.multiline &&
                          a[S.lastIndex - 1] !==
                            `
`)) &&
                      ((O = '(?: ' + O + ')'), (A = ' ' + A), D++),
                    (g = new RegExp('^(?:' + O + ')', E))),
                  i && (g = new RegExp('^' + O + '$(?!\\s)', E)),
                  n && (d = S.lastIndex),
                  (_ = h.call(M ? g : S, A)),
                  M
                    ? _
                      ? ((_.input = _.input.slice(D)),
                        (_[0] = _[0].slice(D)),
                        (_.index = S.lastIndex),
                        (S.lastIndex += _[0].length))
                      : (S.lastIndex = 0)
                    : n &&
                      _ &&
                      (S.lastIndex = S.global ? _.index + _[0].length : d),
                  i &&
                    _ &&
                    1 < _.length &&
                    u.call(_[0], g, function () {
                      for (w = 1; w < arguments.length - 2; w++)
                        arguments[w] === void 0 && (_[w] = void 0);
                    }),
                  _
                );
              }),
              (v.exports = o);
          },
          { './regexp-flags': 111, './regexp-sticky-helpers': 112 },
        ],
        111: [
          function (e, v, y) {
            var m = e('../internals/an-object');
            v.exports = function () {
              var r = m(this),
                c = '';
              return (
                r.global && (c += 'g'),
                r.ignoreCase && (c += 'i'),
                r.multiline && (c += 'm'),
                r.dotAll && (c += 's'),
                r.unicode && (c += 'u'),
                r.sticky && (c += 'y'),
                c
              );
            };
          },
          { '../internals/an-object': 10 },
        ],
        112: [
          function (e, v, y) {
            var m = e('./fails');
            function r(c, l) {
              return RegExp(c, l);
            }
            (y.UNSUPPORTED_Y = m(function () {
              var c = r('a', 'y');
              return (c.lastIndex = 2), c.exec('abcd') != null;
            })),
              (y.BROKEN_CARET = m(function () {
                var c = r('^r', 'gy');
                return (c.lastIndex = 2), c.exec('str') != null;
              }));
          },
          { './fails': 50 },
        ],
        113: [
          function (e, v, y) {
            v.exports = function (m) {
              if (m == null) throw TypeError("Can't call method on " + m);
              return m;
            };
          },
          {},
        ],
        114: [
          function (e, v, y) {
            v.exports =
              Object.is ||
              function (m, r) {
                return m === r ? m !== 0 || 1 / m == 1 / r : m != m && r != r;
              };
          },
          {},
        ],
        115: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/create-non-enumerable-property');
            v.exports = function (c, l) {
              try {
                r(m, c, l);
              } catch {
                m[c] = l;
              }
              return l;
            };
          },
          {
            '../internals/create-non-enumerable-property': 37,
            '../internals/global': 59,
          },
        ],
        116: [
          function (e, v, y) {
            var m = e('../internals/get-built-in'),
              r = e('../internals/object-define-property'),
              c = e('../internals/well-known-symbol'),
              l = e('../internals/descriptors'),
              h = c('species');
            v.exports = function (u) {
              var o = m(u),
                n = r.f;
              l &&
                o &&
                !o[h] &&
                n(o, h, {
                  configurable: !0,
                  get: function () {
                    return this;
                  },
                });
            };
          },
          {
            '../internals/descriptors': 42,
            '../internals/get-built-in': 56,
            '../internals/object-define-property': 92,
            '../internals/well-known-symbol': 146,
          },
        ],
        117: [
          function (e, v, y) {
            var m = e('../internals/object-define-property').f,
              r = e('../internals/has'),
              c = e('../internals/well-known-symbol')('toStringTag');
            v.exports = function (l, h, u) {
              l &&
                !r((l = u ? l : l.prototype), c) &&
                m(l, c, { configurable: !0, value: h });
            };
          },
          {
            '../internals/has': 60,
            '../internals/object-define-property': 92,
            '../internals/well-known-symbol': 146,
          },
        ],
        118: [
          function (e, v, y) {
            var m = e('../internals/shared'),
              r = e('../internals/uid'),
              c = m('keys');
            v.exports = function (l) {
              return c[l] || (c[l] = r(l));
            };
          },
          { '../internals/shared': 120, '../internals/uid': 143 },
        ],
        119: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/set-global'),
              c = '__core-js_shared__',
              l = m[c] || r(c, {});
            v.exports = l;
          },
          { '../internals/global': 59, '../internals/set-global': 115 },
        ],
        120: [
          function (e, v, y) {
            var m = e('../internals/is-pure'),
              r = e('../internals/shared-store');
            (v.exports = function (c, l) {
              return r[c] || (r[c] = l !== void 0 ? l : {});
            })('versions', []).push({
              version: '3.6.5',
              mode: m ? 'pure' : 'global',
              copyright: '\xA9 2020 Denis Pushkarev (zloirock.ru)',
            });
          },
          { '../internals/is-pure': 75, '../internals/shared-store': 119 },
        ],
        121: [
          function (e, v, y) {
            var m = e('../internals/an-object'),
              r = e('../internals/a-function'),
              c = e('../internals/well-known-symbol')('species');
            v.exports = function (l, h) {
              var u,
                o = m(l).constructor;
              return o === void 0 || (u = m(o)[c]) == null ? h : r(u);
            };
          },
          {
            '../internals/a-function': 5,
            '../internals/an-object': 10,
            '../internals/well-known-symbol': 146,
          },
        ],
        122: [
          function (e, v, y) {
            var m = e('../internals/fails');
            v.exports = function (r) {
              return m(function () {
                var c = ''[r]('"');
                return c !== c.toLowerCase() || 3 < c.split('"').length;
              });
            };
          },
          { '../internals/fails': 50 },
        ],
        123: [
          function (e, v, y) {
            function m(l) {
              return function (h, u) {
                var o,
                  n,
                  s = String(c(h)),
                  i = r(u),
                  a = s.length;
                return i < 0 || a <= i
                  ? l
                    ? ''
                    : void 0
                  : (o = s.charCodeAt(i)) < 55296 ||
                    56319 < o ||
                    i + 1 === a ||
                    (n = s.charCodeAt(i + 1)) < 56320 ||
                    57343 < n
                  ? l
                    ? s.charAt(i)
                    : o
                  : l
                  ? s.slice(i, i + 2)
                  : n - 56320 + ((o - 55296) << 10) + 65536;
              };
            }
            var r = e('../internals/to-integer'),
              c = e('../internals/require-object-coercible');
            v.exports = { codeAt: m(!1), charAt: m(!0) };
          },
          {
            '../internals/require-object-coercible': 113,
            '../internals/to-integer': 133,
          },
        ],
        124: [
          function (e, v, y) {
            function m(i) {
              return i + 22 + 75 * (i < 26);
            }
            function r(i, a, d) {
              var g = 0;
              for (i = d ? n(i / 700) : i >> 1, i += n(i / a); 455 < i; g += 36)
                i = n(i / 35);
              return n(g + (36 * i) / (i + 38));
            }
            function c(i) {
              var a,
                d,
                g = [],
                _ = (i = (function (Z) {
                  for (var J = [], $ = 0, ee = Z.length; $ < ee; ) {
                    var Q = Z.charCodeAt($++);
                    if (55296 <= Q && Q <= 56319 && $ < ee) {
                      var oe = Z.charCodeAt($++);
                      (64512 & oe) == 56320
                        ? J.push(((1023 & Q) << 10) + (1023 & oe) + 65536)
                        : (J.push(Q), $--);
                    } else J.push(Q);
                  }
                  return J;
                })(i)).length,
                w = 128,
                S = 0,
                M = 72;
              for (a = 0; a < i.length; a++) (d = i[a]) < 128 && g.push(s(d));
              var E = g.length,
                O = E;
              for (E && g.push('-'); O < _; ) {
                var D = l;
                for (a = 0; a < i.length; a++)
                  w <= (d = i[a]) && d < D && (D = d);
                var A = O + 1;
                if (D - w > n((l - S) / A)) throw RangeError(o);
                for (S += (D - w) * A, w = D, a = 0; a < i.length; a++) {
                  if ((d = i[a]) < w && ++S > l) throw RangeError(o);
                  if (d == w) {
                    for (var k = S, L = 36; ; L += 36) {
                      var R = L <= M ? 1 : M + 26 <= L ? 26 : L - M;
                      if (k < R) break;
                      var N = k - R,
                        B = 36 - R;
                      g.push(s(m(R + (N % B)))), (k = n(N / B));
                    }
                    g.push(s(m(k))), (M = r(S, A, O == E)), (S = 0), ++O;
                  }
                }
                ++S, ++w;
              }
              return g.join('');
            }
            var l = 2147483647,
              h = /[^\0-\u007E]/,
              u = /[.\u3002\uFF0E\uFF61]/g,
              o = 'Overflow: input needs wider integers to process',
              n = Math.floor,
              s = String.fromCharCode;
            v.exports = function (i) {
              var a,
                d,
                g = [],
                _ = i.toLowerCase().replace(u, '.').split('.');
              for (a = 0; a < _.length; a++)
                (d = _[a]), g.push(h.test(d) ? 'xn--' + c(d) : d);
              return g.join('.');
            };
          },
          {},
        ],
        125: [
          function (e, v, y) {
            var m = e('../internals/to-integer'),
              r = e('../internals/require-object-coercible');
            v.exports =
              ''.repeat ||
              function (c) {
                var l = String(r(this)),
                  h = '',
                  u = m(c);
                if (u < 0 || u == 1 / 0)
                  throw RangeError('Wrong number of repetitions');
                for (; 0 < u; (u >>>= 1) && (l += l)) 1 & u && (h += l);
                return h;
              };
          },
          {
            '../internals/require-object-coercible': 113,
            '../internals/to-integer': 133,
          },
        ],
        126: [
          function (e, v, y) {
            var m = e('../internals/fails'),
              r = e('../internals/whitespaces');
            v.exports = function (c) {
              return m(function () {
                return (
                  !!r[c]() ||
                  '\u200B\x85\u180E'[c]() != '\u200B\x85\u180E' ||
                  r[c].name !== c
                );
              });
            };
          },
          { '../internals/fails': 50, '../internals/whitespaces': 147 },
        ],
        127: [
          function (e, v, y) {
            function m(u) {
              return function (o) {
                var n = String(r(o));
                return (
                  1 & u && (n = n.replace(l, '')),
                  2 & u && (n = n.replace(h, '')),
                  n
                );
              };
            }
            var r = e('../internals/require-object-coercible'),
              c = '[' + e('../internals/whitespaces') + ']',
              l = RegExp('^' + c + c + '*'),
              h = RegExp(c + c + '*$');
            v.exports = { start: m(1), end: m(2), trim: m(3) };
          },
          {
            '../internals/require-object-coercible': 113,
            '../internals/whitespaces': 147,
          },
        ],
        128: [
          function (e, v, y) {
            function m(R) {
              if (k.hasOwnProperty(R)) {
                var N = k[R];
                delete k[R], N();
              }
            }
            function r(R) {
              return function () {
                m(R);
              };
            }
            function c(R) {
              m(R.data);
            }
            function l(R) {
              n.postMessage(R + '', w.protocol + '//' + w.host);
            }
            var h,
              u,
              o,
              n = e('../internals/global'),
              s = e('../internals/fails'),
              i = e('../internals/classof-raw'),
              a = e('../internals/function-bind-context'),
              d = e('../internals/html'),
              g = e('../internals/document-create-element'),
              _ = e('../internals/engine-is-ios'),
              w = n.location,
              S = n.setImmediate,
              M = n.clearImmediate,
              E = n.process,
              O = n.MessageChannel,
              D = n.Dispatch,
              A = 0,
              k = {},
              L = 'onreadystatechange';
            (S && M) ||
              ((S = function (R) {
                for (var N = [], B = 1; B < arguments.length; )
                  N.push(arguments[B++]);
                return (
                  (k[++A] = function () {
                    (typeof R == 'function' ? R : Function(R)).apply(void 0, N);
                  }),
                  h(A),
                  A
                );
              }),
              (M = function (R) {
                delete k[R];
              }),
              i(E) == 'process'
                ? (h = function (R) {
                    E.nextTick(r(R));
                  })
                : D && D.now
                ? (h = function (R) {
                    D.now(r(R));
                  })
                : O && !_
                ? ((o = (u = new O()).port2),
                  (u.port1.onmessage = c),
                  (h = a(o.postMessage, o, 1)))
                : !n.addEventListener ||
                  typeof postMessage != 'function' ||
                  n.importScripts ||
                  s(l) ||
                  w.protocol === 'file:'
                ? (h =
                    L in g('script')
                      ? function (R) {
                          d.appendChild(g('script'))[L] = function () {
                            d.removeChild(this), m(R);
                          };
                        }
                      : function (R) {
                          setTimeout(r(R), 0);
                        })
                : ((h = l), n.addEventListener('message', c, !1))),
              (v.exports = { set: S, clear: M });
          },
          {
            '../internals/classof-raw': 28,
            '../internals/document-create-element': 43,
            '../internals/engine-is-ios': 45,
            '../internals/fails': 50,
            '../internals/function-bind-context': 54,
            '../internals/global': 59,
            '../internals/html': 63,
          },
        ],
        129: [
          function (e, v, y) {
            var m = e('../internals/classof-raw');
            v.exports = function (r) {
              if (typeof r != 'number' && m(r) != 'Number')
                throw TypeError('Incorrect invocation');
              return +r;
            };
          },
          { '../internals/classof-raw': 28 },
        ],
        130: [
          function (e, v, y) {
            var m = e('../internals/to-integer'),
              r = Math.max,
              c = Math.min;
            v.exports = function (l, h) {
              var u = m(l);
              return u < 0 ? r(u + h, 0) : c(u, h);
            };
          },
          { '../internals/to-integer': 133 },
        ],
        131: [
          function (e, v, y) {
            var m = e('../internals/to-integer'),
              r = e('../internals/to-length');
            v.exports = function (c) {
              if (c === void 0) return 0;
              var l = m(c),
                h = r(l);
              if (l !== h) throw RangeError('Wrong length or index');
              return h;
            };
          },
          { '../internals/to-integer': 133, '../internals/to-length': 134 },
        ],
        132: [
          function (e, v, y) {
            var m = e('../internals/indexed-object'),
              r = e('../internals/require-object-coercible');
            v.exports = function (c) {
              return m(r(c));
            };
          },
          {
            '../internals/indexed-object': 66,
            '../internals/require-object-coercible': 113,
          },
        ],
        133: [
          function (e, v, y) {
            var m = Math.ceil,
              r = Math.floor;
            v.exports = function (c) {
              return isNaN((c = +c)) ? 0 : (0 < c ? r : m)(c);
            };
          },
          {},
        ],
        134: [
          function (e, v, y) {
            var m = e('../internals/to-integer'),
              r = Math.min;
            v.exports = function (c) {
              return 0 < c ? r(m(c), 9007199254740991) : 0;
            };
          },
          { '../internals/to-integer': 133 },
        ],
        135: [
          function (e, v, y) {
            var m = e('../internals/require-object-coercible');
            v.exports = function (r) {
              return Object(m(r));
            };
          },
          { '../internals/require-object-coercible': 113 },
        ],
        136: [
          function (e, v, y) {
            var m = e('../internals/to-positive-integer');
            v.exports = function (r, c) {
              var l = m(r);
              if (l % c) throw RangeError('Wrong offset');
              return l;
            };
          },
          { '../internals/to-positive-integer': 137 },
        ],
        137: [
          function (e, v, y) {
            var m = e('../internals/to-integer');
            v.exports = function (r) {
              var c = m(r);
              if (c < 0) throw RangeError("The argument can't be less than 0");
              return c;
            };
          },
          { '../internals/to-integer': 133 },
        ],
        138: [
          function (e, v, y) {
            var m = e('../internals/is-object');
            v.exports = function (r, c) {
              if (!m(r)) return r;
              var l, h;
              if (
                (c &&
                  typeof (l = r.toString) == 'function' &&
                  !m((h = l.call(r)))) ||
                (typeof (l = r.valueOf) == 'function' && !m((h = l.call(r)))) ||
                (!c &&
                  typeof (l = r.toString) == 'function' &&
                  !m((h = l.call(r))))
              )
                return h;
              throw TypeError("Can't convert object to primitive value");
            };
          },
          { '../internals/is-object': 74 },
        ],
        139: [
          function (e, v, y) {
            var m = {};
            (m[e('../internals/well-known-symbol')('toStringTag')] = 'z'),
              (v.exports = String(m) === '[object z]');
          },
          { '../internals/well-known-symbol': 146 },
        ],
        140: [
          function (e, v, y) {
            function m(ie, xe) {
              for (var je = 0, Te = xe.length, Ne = new (we(ie))(Te); je < Te; )
                Ne[je] = xe[je++];
              return Ne;
            }
            function r(ie, xe) {
              de(ie, xe, {
                get: function () {
                  return ce(this)[xe];
                },
              });
            }
            function c(ie) {
              var xe;
              return (
                ie instanceof P ||
                (xe = A(ie)) == 'ArrayBuffer' ||
                xe == 'SharedArrayBuffer'
              );
            }
            function l(ie, xe) {
              return (
                X(ie) &&
                typeof xe != 'symbol' &&
                xe in ie &&
                String(+xe) == String(xe)
              );
            }
            function h(ie, xe) {
              return l(ie, (xe = O(xe, !0))) ? _(2, ie[xe]) : Se(ie, xe);
            }
            function u(ie, xe, je) {
              return !(l(ie, (xe = O(xe, !0))) && k(je) && D(je, 'value')) ||
                D(je, 'get') ||
                D(je, 'set') ||
                je.configurable ||
                (D(je, 'writable') && !je.writable) ||
                (D(je, 'enumerable') && !je.enumerable)
                ? de(ie, xe, je)
                : ((ie[xe] = je.value), ie);
            }
            var o = e('../internals/export'),
              n = e('../internals/global'),
              s = e('../internals/descriptors'),
              i = e('../internals/typed-array-constructors-require-wrappers'),
              a = e('../internals/array-buffer-view-core'),
              d = e('../internals/array-buffer'),
              g = e('../internals/an-instance'),
              _ = e('../internals/create-property-descriptor'),
              w = e('../internals/create-non-enumerable-property'),
              S = e('../internals/to-length'),
              M = e('../internals/to-index'),
              E = e('../internals/to-offset'),
              O = e('../internals/to-primitive'),
              D = e('../internals/has'),
              A = e('../internals/classof'),
              k = e('../internals/is-object'),
              L = e('../internals/object-create'),
              R = e('../internals/object-set-prototype-of'),
              N = e('../internals/object-get-own-property-names').f,
              B = e('../internals/typed-array-from'),
              Z = e('../internals/array-iteration').forEach,
              J = e('../internals/set-species'),
              $ = e('../internals/object-define-property'),
              ee = e('../internals/object-get-own-property-descriptor'),
              Q = e('../internals/internal-state'),
              oe = e('../internals/inherit-if-required'),
              ce = Q.get,
              ve = Q.set,
              de = $.f,
              Se = ee.f,
              fe = Math.round,
              ye = n.RangeError,
              P = d.ArrayBuffer,
              U = d.DataView,
              W = a.NATIVE_ARRAY_BUFFER_VIEWS,
              K = a.TYPED_ARRAY_TAG,
              ne = a.TypedArray,
              re = a.TypedArrayPrototype,
              we = a.aTypedArrayConstructor,
              X = a.isTypedArray,
              ue = 'BYTES_PER_ELEMENT',
              he = 'Wrong length';
            s
              ? (W ||
                  ((ee.f = h),
                  ($.f = u),
                  r(re, 'buffer'),
                  r(re, 'byteOffset'),
                  r(re, 'byteLength'),
                  r(re, 'length')),
                o(
                  { target: 'Object', stat: !0, forced: !W },
                  { getOwnPropertyDescriptor: h, defineProperty: u },
                ),
                (v.exports = function (ie, xe, je) {
                  function Te(We, ge) {
                    de(We, ge, {
                      get: function () {
                        return (
                          (Qe = ge),
                          (G = ce(this)).view[qe](Qe * Ne + G.byteOffset, !0)
                        );
                        var Qe, G;
                      },
                      set: function (Qe) {
                        return (
                          (G = ge),
                          (z = Qe),
                          (V = ce(this)),
                          je &&
                            (z = (z = fe(z)) < 0 ? 0 : 255 < z ? 255 : 255 & z),
                          void V.view[Fe](G * Ne + V.byteOffset, z, !0)
                        );
                        var G, z, V;
                      },
                      enumerable: !0,
                    });
                  }
                  var Ne = ie.match(/\d+$/)[0] / 8,
                    ze = ie + (je ? 'Clamped' : '') + 'Array',
                    qe = 'get' + ie,
                    Fe = 'set' + ie,
                    nt = n[ze],
                    ke = nt,
                    Ae = ke && ke.prototype,
                    Ve = {};
                  W
                    ? i &&
                      ((ke = xe(function (We, ge, Qe, G) {
                        return (
                          g(We, ke, ze),
                          oe(
                            k(ge)
                              ? c(ge)
                                ? G !== void 0
                                  ? new nt(ge, E(Qe, Ne), G)
                                  : Qe !== void 0
                                  ? new nt(ge, E(Qe, Ne))
                                  : new nt(ge)
                                : X(ge)
                                ? m(ke, ge)
                                : B.call(ke, ge)
                              : new nt(M(ge)),
                            We,
                            ke,
                          )
                        );
                      })),
                      R && R(ke, ne),
                      Z(N(nt), function (We) {
                        We in ke || w(ke, We, nt[We]);
                      }),
                      (ke.prototype = Ae))
                    : ((ke = xe(function (We, ge, Qe, G) {
                        g(We, ke, ze);
                        var z,
                          V,
                          H,
                          ae = 0,
                          _e = 0;
                        if (k(ge)) {
                          if (!c(ge)) return X(ge) ? m(ke, ge) : B.call(ke, ge);
                          (z = ge), (_e = E(Qe, Ne));
                          var Ee = ge.byteLength;
                          if (G === void 0) {
                            if (Ee % Ne || (V = Ee - _e) < 0) throw ye(he);
                          } else if (Ee < (V = S(G) * Ne) + _e) throw ye(he);
                          H = V / Ne;
                        } else (H = M(ge)), (z = new P((V = H * Ne)));
                        for (
                          ve(We, {
                            buffer: z,
                            byteOffset: _e,
                            byteLength: V,
                            length: H,
                            view: new U(z),
                          });
                          ae < H;

                        )
                          Te(We, ae++);
                      })),
                      R && R(ke, ne),
                      (Ae = ke.prototype = L(re))),
                    Ae.constructor !== ke && w(Ae, 'constructor', ke),
                    K && w(Ae, K, ze),
                    (Ve[ze] = ke),
                    o({ global: !0, forced: ke != nt, sham: !W }, Ve),
                    ue in ke || w(ke, ue, Ne),
                    ue in Ae || w(Ae, ue, Ne),
                    J(ze);
                }))
              : (v.exports = function () {});
          },
          {
            '../internals/an-instance': 9,
            '../internals/array-buffer': 13,
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
            '../internals/classof': 29,
            '../internals/create-non-enumerable-property': 37,
            '../internals/create-property-descriptor': 38,
            '../internals/descriptors': 42,
            '../internals/export': 49,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/inherit-if-required': 67,
            '../internals/internal-state': 70,
            '../internals/is-object': 74,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-set-prototype-of': 101,
            '../internals/set-species': 116,
            '../internals/to-index': 131,
            '../internals/to-length': 134,
            '../internals/to-offset': 136,
            '../internals/to-primitive': 138,
            '../internals/typed-array-constructors-require-wrappers': 141,
            '../internals/typed-array-from': 142,
          },
        ],
        141: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/fails'),
              c = e('../internals/check-correctness-of-iteration'),
              l = e(
                '../internals/array-buffer-view-core',
              ).NATIVE_ARRAY_BUFFER_VIEWS,
              h = m.ArrayBuffer,
              u = m.Int8Array;
            v.exports =
              !l ||
              !r(function () {
                u(1);
              }) ||
              !r(function () {
                new u(-1);
              }) ||
              !c(function (o) {
                new u(), new u(null), new u(1.5), new u(o);
              }, !0) ||
              r(function () {
                return new u(new h(2), 1, void 0).length !== 1;
              });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/fails': 50,
            '../internals/global': 59,
          },
        ],
        142: [
          function (e, v, y) {
            var m = e('../internals/to-object'),
              r = e('../internals/to-length'),
              c = e('../internals/get-iterator-method'),
              l = e('../internals/is-array-iterator-method'),
              h = e('../internals/function-bind-context'),
              u = e(
                '../internals/array-buffer-view-core',
              ).aTypedArrayConstructor;
            v.exports = function (o, n, s) {
              var i,
                a,
                d,
                g,
                _,
                w,
                S = m(o),
                M = arguments.length,
                E = 1 < M ? n : void 0,
                O = E !== void 0,
                D = c(S);
              if (D != null && !l(D))
                for (w = (_ = D.call(S)).next, S = []; !(g = w.call(_)).done; )
                  S.push(g.value);
              for (
                O && 2 < M && (E = h(E, s, 2)),
                  a = r(S.length),
                  d = new (u(this))(a),
                  i = 0;
                i < a;
                i++
              )
                d[i] = O ? E(S[i], i) : S[i];
              return d;
            };
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/function-bind-context': 54,
            '../internals/get-iterator-method': 57,
            '../internals/is-array-iterator-method': 71,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        143: [
          function (e, v, y) {
            var m = 0,
              r = Math.random();
            v.exports = function (c) {
              return (
                'Symbol(' +
                String(c === void 0 ? '' : c) +
                ')_' +
                (++m + r).toString(36)
              );
            };
          },
          {},
        ],
        144: [
          function (e, v, y) {
            var m = e('../internals/native-symbol');
            v.exports = m && !Symbol.sham && typeof Symbol.iterator == 'symbol';
          },
          { '../internals/native-symbol': 83 },
        ],
        145: [
          function (e, v, y) {
            var m = e('../internals/well-known-symbol');
            y.f = m;
          },
          { '../internals/well-known-symbol': 146 },
        ],
        146: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/shared'),
              c = e('../internals/has'),
              l = e('../internals/uid'),
              h = e('../internals/native-symbol'),
              u = e('../internals/use-symbol-as-uid'),
              o = r('wks'),
              n = m.Symbol,
              s = u ? n : (n && n.withoutSetter) || l;
            v.exports = function (i) {
              return (
                c(o, i) ||
                  (h && c(n, i) ? (o[i] = n[i]) : (o[i] = s('Symbol.' + i))),
                o[i]
              );
            };
          },
          {
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/native-symbol': 83,
            '../internals/shared': 120,
            '../internals/uid': 143,
            '../internals/use-symbol-as-uid': 144,
          },
        ],
        147: [
          function (e, v, y) {
            v.exports = `	
\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF`;
          },
          {},
        ],
        148: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/global'),
              c = e('../internals/array-buffer'),
              l = e('../internals/set-species'),
              h = 'ArrayBuffer',
              u = c[h];
            m({ global: !0, forced: r[h] !== u }, { ArrayBuffer: u }), l(h);
          },
          {
            '../internals/array-buffer': 13,
            '../internals/export': 49,
            '../internals/global': 59,
            '../internals/set-species': 116,
          },
        ],
        149: [
          function (e, v, y) {
            function m(E) {
              if (!h(E)) return !1;
              var O = E[g];
              return O !== void 0 ? !!O : l(E);
            }
            var r = e('../internals/export'),
              c = e('../internals/fails'),
              l = e('../internals/is-array'),
              h = e('../internals/is-object'),
              u = e('../internals/to-object'),
              o = e('../internals/to-length'),
              n = e('../internals/create-property'),
              s = e('../internals/array-species-create'),
              i = e('../internals/array-method-has-species-support'),
              a = e('../internals/well-known-symbol'),
              d = e('../internals/engine-v8-version'),
              g = a('isConcatSpreadable'),
              _ = 9007199254740991,
              w = 'Maximum allowed index exceeded',
              S =
                51 <= d ||
                !c(function () {
                  var E = [];
                  return (E[g] = !1), E.concat()[0] !== E;
                }),
              M = i('concat');
            r(
              { target: 'Array', proto: !0, forced: !S || !M },
              {
                concat: function (E) {
                  var O,
                    D,
                    A,
                    k,
                    L,
                    R = u(this),
                    N = s(R, 0),
                    B = 0;
                  for (O = -1, A = arguments.length; O < A; O++)
                    if (m((L = O === -1 ? R : arguments[O]))) {
                      if (((k = o(L.length)), _ < B + k)) throw TypeError(w);
                      for (D = 0; D < k; D++, B++) D in L && n(N, B, L[D]);
                    } else {
                      if (_ <= B) throw TypeError(w);
                      n(N, B++, L);
                    }
                  return (N.length = B), N;
                },
              },
            );
          },
          {
            '../internals/array-method-has-species-support': 21,
            '../internals/array-species-create': 25,
            '../internals/create-property': 39,
            '../internals/engine-v8-version': 47,
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
            '../internals/well-known-symbol': 146,
          },
        ],
        150: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-iteration').every,
              c = e('../internals/array-method-is-strict'),
              l = e('../internals/array-method-uses-to-length'),
              h = c('every'),
              u = l('every');
            m(
              { target: 'Array', proto: !0, forced: !h || !u },
              {
                every: function (o, n) {
                  return r(this, o, 1 < arguments.length ? n : void 0);
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 49,
          },
        ],
        151: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-fill'),
              c = e('../internals/add-to-unscopables');
            m({ target: 'Array', proto: !0 }, { fill: r }), c('fill');
          },
          {
            '../internals/add-to-unscopables': 7,
            '../internals/array-fill': 15,
            '../internals/export': 49,
          },
        ],
        152: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-iteration').filter,
              c = e('../internals/array-method-has-species-support'),
              l = e('../internals/array-method-uses-to-length'),
              h = c('filter'),
              u = l('filter');
            m(
              { target: 'Array', proto: !0, forced: !h || !u },
              {
                filter: function (o, n) {
                  return r(this, o, 1 < arguments.length ? n : void 0);
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 49,
          },
        ],
        153: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/flatten-into-array'),
              c = e('../internals/to-object'),
              l = e('../internals/to-length'),
              h = e('../internals/a-function'),
              u = e('../internals/array-species-create');
            m(
              { target: 'Array', proto: !0 },
              {
                flatMap: function (o, n) {
                  var s,
                    i = c(this),
                    a = l(i.length);
                  return (
                    h(o),
                    ((s = u(i, 0)).length = r(
                      s,
                      i,
                      i,
                      a,
                      0,
                      1,
                      o,
                      1 < arguments.length ? n : void 0,
                    )),
                    s
                  );
                },
              },
            );
          },
          {
            '../internals/a-function': 5,
            '../internals/array-species-create': 25,
            '../internals/export': 49,
            '../internals/flatten-into-array': 52,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        154: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-for-each');
            m(
              { target: 'Array', proto: !0, forced: [].forEach != r },
              { forEach: r },
            );
          },
          { '../internals/array-for-each': 16, '../internals/export': 49 },
        ],
        155: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-from');
            m(
              {
                target: 'Array',
                stat: !0,
                forced: !e('../internals/check-correctness-of-iteration')(
                  function (c) {
                    Array.from(c);
                  },
                ),
              },
              { from: r },
            );
          },
          {
            '../internals/array-from': 17,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/export': 49,
          },
        ],
        156: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-includes').includes,
              c = e('../internals/add-to-unscopables');
            m(
              {
                target: 'Array',
                proto: !0,
                forced: !e('../internals/array-method-uses-to-length')(
                  'indexOf',
                  { ACCESSORS: !0, 1: 0 },
                ),
              },
              {
                includes: function (l, h) {
                  return r(this, l, 1 < arguments.length ? h : void 0);
                },
              },
            ),
              c('includes');
          },
          {
            '../internals/add-to-unscopables': 7,
            '../internals/array-includes': 18,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 49,
          },
        ],
        157: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-includes').indexOf,
              c = e('../internals/array-method-is-strict'),
              l = e('../internals/array-method-uses-to-length'),
              h = [].indexOf,
              u = !!h && 1 / [1].indexOf(1, -0) < 0,
              o = c('indexOf'),
              n = l('indexOf', { ACCESSORS: !0, 1: 0 });
            m(
              { target: 'Array', proto: !0, forced: u || !o || !n },
              {
                indexOf: function (s, i) {
                  return u
                    ? h.apply(this, arguments) || 0
                    : r(this, s, 1 < arguments.length ? i : void 0);
                },
              },
            );
          },
          {
            '../internals/array-includes': 18,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 49,
          },
        ],
        158: [
          function (e, v, y) {
            var m = e('../internals/to-indexed-object'),
              r = e('../internals/add-to-unscopables'),
              c = e('../internals/iterators'),
              l = e('../internals/internal-state'),
              h = e('../internals/define-iterator'),
              u = 'Array Iterator',
              o = l.set,
              n = l.getterFor(u);
            (v.exports = h(
              Array,
              'Array',
              function (s, i) {
                o(this, { type: u, target: m(s), index: 0, kind: i });
              },
              function () {
                var s = n(this),
                  i = s.target,
                  a = s.kind,
                  d = s.index++;
                return !i || d >= i.length
                  ? { value: (s.target = void 0), done: !0 }
                  : a == 'keys'
                  ? { value: d, done: !1 }
                  : a == 'values'
                  ? { value: i[d], done: !1 }
                  : { value: [d, i[d]], done: !1 };
              },
              'values',
            )),
              (c.Arguments = c.Array),
              r('keys'),
              r('values'),
              r('entries');
          },
          {
            '../internals/add-to-unscopables': 7,
            '../internals/define-iterator': 40,
            '../internals/internal-state': 70,
            '../internals/iterators': 79,
            '../internals/to-indexed-object': 132,
          },
        ],
        159: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/indexed-object'),
              c = e('../internals/to-indexed-object'),
              l = e('../internals/array-method-is-strict'),
              h = [].join,
              u = r != Object,
              o = l('join', ',');
            m(
              { target: 'Array', proto: !0, forced: u || !o },
              {
                join: function (n) {
                  return h.call(c(this), n === void 0 ? ',' : n);
                },
              },
            );
          },
          {
            '../internals/array-method-is-strict': 22,
            '../internals/export': 49,
            '../internals/indexed-object': 66,
            '../internals/to-indexed-object': 132,
          },
        ],
        160: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-last-index-of');
            m(
              { target: 'Array', proto: !0, forced: r !== [].lastIndexOf },
              { lastIndexOf: r },
            );
          },
          { '../internals/array-last-index-of': 20, '../internals/export': 49 },
        ],
        161: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-iteration').map,
              c = e('../internals/array-method-has-species-support'),
              l = e('../internals/array-method-uses-to-length'),
              h = c('map'),
              u = l('map');
            m(
              { target: 'Array', proto: !0, forced: !h || !u },
              {
                map: function (o, n) {
                  return r(this, o, 1 < arguments.length ? n : void 0);
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 49,
          },
        ],
        162: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/is-object'),
              c = e('../internals/is-array'),
              l = e('../internals/to-absolute-index'),
              h = e('../internals/to-length'),
              u = e('../internals/to-indexed-object'),
              o = e('../internals/create-property'),
              n = e('../internals/well-known-symbol'),
              s = e('../internals/array-method-has-species-support'),
              i = e('../internals/array-method-uses-to-length'),
              a = s('slice'),
              d = i('slice', { ACCESSORS: !0, 0: 0, 1: 2 }),
              g = n('species'),
              _ = [].slice,
              w = Math.max;
            m(
              { target: 'Array', proto: !0, forced: !a || !d },
              {
                slice: function (S, M) {
                  var E,
                    O,
                    D,
                    A = u(this),
                    k = h(A.length),
                    L = l(S, k),
                    R = l(M === void 0 ? k : M, k);
                  if (
                    c(A) &&
                    (typeof (E = A.constructor) != 'function' ||
                    (E !== Array && !c(E.prototype))
                      ? r(E) && (E = E[g]) === null && (E = void 0)
                      : (E = void 0),
                    E === Array || E === void 0)
                  )
                    return _.call(A, L, R);
                  for (
                    O = new (E === void 0 ? Array : E)(w(R - L, 0)), D = 0;
                    L < R;
                    L++, D++
                  )
                    L in A && o(O, D, A[L]);
                  return (O.length = D), O;
                },
              },
            );
          },
          {
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/create-property': 39,
            '../internals/export': 49,
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/to-absolute-index': 130,
            '../internals/to-indexed-object': 132,
            '../internals/to-length': 134,
            '../internals/well-known-symbol': 146,
          },
        ],
        163: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/array-iteration').some,
              c = e('../internals/array-method-is-strict'),
              l = e('../internals/array-method-uses-to-length'),
              h = c('some'),
              u = l('some');
            m(
              { target: 'Array', proto: !0, forced: !h || !u },
              {
                some: function (o, n) {
                  return r(this, o, 1 < arguments.length ? n : void 0);
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 49,
          },
        ],
        164: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/to-absolute-index'),
              c = e('../internals/to-integer'),
              l = e('../internals/to-length'),
              h = e('../internals/to-object'),
              u = e('../internals/array-species-create'),
              o = e('../internals/create-property'),
              n = e('../internals/array-method-has-species-support'),
              s = e('../internals/array-method-uses-to-length'),
              i = n('splice'),
              a = s('splice', { ACCESSORS: !0, 0: 0, 1: 2 }),
              d = Math.max,
              g = Math.min;
            m(
              { target: 'Array', proto: !0, forced: !i || !a },
              {
                splice: function (_, w) {
                  var S,
                    M,
                    E,
                    O,
                    D,
                    A,
                    k = h(this),
                    L = l(k.length),
                    R = r(_, L),
                    N = arguments.length;
                  if (
                    (N === 0
                      ? (S = M = 0)
                      : (M =
                          N === 1
                            ? ((S = 0), L - R)
                            : ((S = N - 2), g(d(c(w), 0), L - R))),
                    9007199254740991 < L + S - M)
                  )
                    throw TypeError('Maximum allowed length exceeded');
                  for (E = u(k, M), O = 0; O < M; O++)
                    (D = R + O) in k && o(E, O, k[D]);
                  if (S < (E.length = M)) {
                    for (O = R; O < L - M; O++)
                      (A = O + S),
                        (D = O + M) in k ? (k[A] = k[D]) : delete k[A];
                    for (O = L; L - M + S < O; O--) delete k[O - 1];
                  } else if (M < S)
                    for (O = L - M; R < O; O--)
                      (A = O + S - 1),
                        (D = O + M - 1) in k ? (k[A] = k[D]) : delete k[A];
                  for (O = 0; O < S; O++) k[O + R] = arguments[O + 2];
                  return (k.length = L - M + S), E;
                },
              },
            );
          },
          {
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/array-species-create': 25,
            '../internals/create-property': 39,
            '../internals/export': 49,
            '../internals/to-absolute-index': 130,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        165: [
          function (e, v, y) {
            e('../internals/add-to-unscopables')('flatMap');
          },
          { '../internals/add-to-unscopables': 7 },
        ],
        166: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/object-define-property').f,
              c = Function.prototype,
              l = c.toString,
              h = /^\s*function ([^ (]*)/;
            !m ||
              'name' in c ||
              r(c, 'name', {
                configurable: !0,
                get: function () {
                  try {
                    return l.call(this).match(h)[1];
                  } catch {
                    return '';
                  }
                },
              });
          },
          {
            '../internals/descriptors': 42,
            '../internals/object-define-property': 92,
          },
        ],
        167: [
          function (e, v, y) {
            var m = e('../internals/collection'),
              r = e('../internals/collection-strong');
            v.exports = m(
              'Map',
              function (c) {
                return function (l) {
                  return c(this, arguments.length ? l : void 0);
                };
              },
              r,
            );
          },
          {
            '../internals/collection': 31,
            '../internals/collection-strong': 30,
          },
        ],
        168: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = Math.hypot,
              c = Math.abs,
              l = Math.sqrt;
            m(
              {
                target: 'Math',
                stat: !0,
                forced: !!r && r(1 / 0, NaN) !== 1 / 0,
              },
              {
                hypot: function (h, u) {
                  for (
                    var o, n, s = 0, i = 0, a = arguments.length, d = 0;
                    i < a;

                  )
                    d < (o = c(arguments[i++]))
                      ? ((s = s * (n = d / o) * n + 1), (d = o))
                      : (s += 0 < o ? (n = o / d) * n : o);
                  return d === 1 / 0 ? 1 / 0 : d * l(s);
                },
              },
            );
          },
          { '../internals/export': 49 },
        ],
        169: [
          function (e, v, y) {
            e('../internals/export')(
              { target: 'Math', stat: !0 },
              { sign: e('../internals/math-sign') },
            );
          },
          { '../internals/export': 49, '../internals/math-sign': 80 },
        ],
        170: [
          function (e, v, y) {
            function m(R) {
              var N,
                B,
                Z,
                J,
                $,
                ee,
                Q,
                oe,
                ce = s(R, !1);
              if (typeof ce == 'string' && 2 < ce.length) {
                if ((N = (ce = w(ce)).charCodeAt(0)) === 43 || N === 45) {
                  if ((B = ce.charCodeAt(2)) === 88 || B === 120) return NaN;
                } else if (N === 48) {
                  switch (ce.charCodeAt(1)) {
                    case 66:
                    case 98:
                      (Z = 2), (J = 49);
                      break;
                    case 79:
                    case 111:
                      (Z = 8), (J = 55);
                      break;
                    default:
                      return +ce;
                  }
                  for (ee = ($ = ce.slice(2)).length, Q = 0; Q < ee; Q++)
                    if ((oe = $.charCodeAt(Q)) < 48 || J < oe) return NaN;
                  return parseInt($, Z);
                }
              }
              return +ce;
            }
            var r = e('../internals/descriptors'),
              c = e('../internals/global'),
              l = e('../internals/is-forced'),
              h = e('../internals/redefine'),
              u = e('../internals/has'),
              o = e('../internals/classof-raw'),
              n = e('../internals/inherit-if-required'),
              s = e('../internals/to-primitive'),
              i = e('../internals/fails'),
              a = e('../internals/object-create'),
              d = e('../internals/object-get-own-property-names').f,
              g = e('../internals/object-get-own-property-descriptor').f,
              _ = e('../internals/object-define-property').f,
              w = e('../internals/string-trim').trim,
              S = 'Number',
              M = c[S],
              E = M.prototype,
              O = o(a(E)) == S;
            if (l(S, !M(' 0o1') || !M('0b1') || M('+0x1'))) {
              for (
                var D,
                  A = function (R) {
                    var N = arguments.length < 1 ? 0 : R,
                      B = this;
                    return B instanceof A &&
                      (O
                        ? i(function () {
                            E.valueOf.call(B);
                          })
                        : o(B) != S)
                      ? n(new M(m(N)), B, A)
                      : m(N);
                  },
                  k = r
                    ? d(M)
                    : 'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'.split(
                        ',',
                      ),
                  L = 0;
                k.length > L;
                L++
              )
                u(M, (D = k[L])) && !u(A, D) && _(A, D, g(M, D));
              ((A.prototype = E).constructor = A), h(c, S, A);
            }
          },
          {
            '../internals/classof-raw': 28,
            '../internals/descriptors': 42,
            '../internals/fails': 50,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/inherit-if-required': 67,
            '../internals/is-forced': 73,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/object-get-own-property-names': 95,
            '../internals/redefine': 108,
            '../internals/string-trim': 127,
            '../internals/to-primitive': 138,
          },
        ],
        171: [
          function (e, v, y) {
            e('../internals/export')(
              { target: 'Number', stat: !0 },
              { isFinite: e('../internals/number-is-finite') },
            );
          },
          { '../internals/export': 49, '../internals/number-is-finite': 88 },
        ],
        172: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/to-integer'),
              c = e('../internals/this-number-value'),
              l = e('../internals/string-repeat'),
              h = e('../internals/fails'),
              u = (1).toFixed,
              o = Math.floor,
              n = function (s, i, a) {
                return i === 0
                  ? a
                  : i % 2 == 1
                  ? n(s, i - 1, a * s)
                  : n(s * s, i / 2, a);
              };
            m(
              {
                target: 'Number',
                proto: !0,
                forced:
                  (u &&
                    ((8e-5).toFixed(3) !== '0.000' ||
                      (0.9).toFixed(0) !== '1' ||
                      (1.255).toFixed(2) !== '1.25' ||
                      (0xde0b6b3a7640080).toFixed(0) !==
                        '1000000000000000128')) ||
                  !h(function () {
                    u.call({});
                  }),
              },
              {
                toFixed: function (s) {
                  function i(k, L) {
                    for (var R = -1, N = L; ++R < 6; )
                      (N += k * O[R]), (O[R] = N % 1e7), (N = o(N / 1e7));
                  }
                  function a(k) {
                    for (var L = 6, R = 0; 0 <= --L; )
                      (R += O[L]), (O[L] = o(R / k)), (R = (R % k) * 1e7);
                  }
                  function d() {
                    for (var k = 6, L = ''; 0 <= --k; )
                      if (L !== '' || k === 0 || O[k] !== 0) {
                        var R = String(O[k]);
                        L = L === '' ? R : L + l.call('0', 7 - R.length) + R;
                      }
                    return L;
                  }
                  var g,
                    _,
                    w,
                    S,
                    M = c(this),
                    E = r(s),
                    O = [0, 0, 0, 0, 0, 0],
                    D = '',
                    A = '0';
                  if (E < 0 || 20 < E)
                    throw RangeError('Incorrect fraction digits');
                  if (M != M) return 'NaN';
                  if (M <= -1e21 || 1e21 <= M) return String(M);
                  if ((M < 0 && ((D = '-'), (M = -M)), 1e-21 < M))
                    if (
                      ((_ =
                        (g =
                          (function (k) {
                            for (var L = 0, R = k; 4096 <= R; )
                              (L += 12), (R /= 4096);
                            for (; 2 <= R; ) (L += 1), (R /= 2);
                            return L;
                          })(M * n(2, 69, 1)) - 69) < 0
                          ? M * n(2, -g, 1)
                          : M / n(2, g, 1)),
                      (_ *= 4503599627370496),
                      0 < (g = 52 - g))
                    ) {
                      for (i(0, _), w = E; 7 <= w; ) i(1e7, 0), (w -= 7);
                      for (i(n(10, w, 1), 0), w = g - 1; 23 <= w; )
                        a(1 << 23), (w -= 23);
                      a(1 << w), i(1, 1), a(2), (A = d());
                    } else i(0, _), i(1 << -g, 0), (A = d() + l.call('0', E));
                  return (A =
                    0 < E
                      ? D +
                        ((S = A.length) <= E
                          ? '0.' + l.call('0', E - S) + A
                          : A.slice(0, S - E) + '.' + A.slice(S - E))
                      : D + A);
                },
              },
            );
          },
          {
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/string-repeat': 125,
            '../internals/this-number-value': 129,
            '../internals/to-integer': 133,
          },
        ],
        173: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/object-assign');
            m(
              { target: 'Object', stat: !0, forced: Object.assign !== r },
              { assign: r },
            );
          },
          { '../internals/export': 49, '../internals/object-assign': 89 },
        ],
        174: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/fails'),
              c = e('../internals/object-get-own-property-names-external').f;
            m(
              {
                target: 'Object',
                stat: !0,
                forced: r(function () {
                  return !Object.getOwnPropertyNames(1);
                }),
              },
              { getOwnPropertyNames: c },
            );
          },
          {
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/object-get-own-property-names-external': 94,
          },
        ],
        175: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/fails'),
              c = e('../internals/to-object'),
              l = e('../internals/object-get-prototype-of'),
              h = e('../internals/correct-prototype-getter');
            m(
              {
                target: 'Object',
                stat: !0,
                forced: r(function () {
                  l(1);
                }),
                sham: !h,
              },
              {
                getPrototypeOf: function (u) {
                  return l(c(u));
                },
              },
            );
          },
          {
            '../internals/correct-prototype-getter': 34,
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/object-get-prototype-of': 97,
            '../internals/to-object': 135,
          },
        ],
        176: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/to-object'),
              c = e('../internals/object-keys');
            m(
              {
                target: 'Object',
                stat: !0,
                forced: e('../internals/fails')(function () {
                  c(1);
                }),
              },
              {
                keys: function (l) {
                  return c(r(l));
                },
              },
            );
          },
          {
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/object-keys': 99,
            '../internals/to-object': 135,
          },
        ],
        177: [
          function (e, v, y) {
            var m = e('../internals/to-string-tag-support'),
              r = e('../internals/redefine'),
              c = e('../internals/object-to-string');
            m || r(Object.prototype, 'toString', c, { unsafe: !0 });
          },
          {
            '../internals/object-to-string': 102,
            '../internals/redefine': 108,
            '../internals/to-string-tag-support': 139,
          },
        ],
        178: [
          function (e, v, y) {
            function m(ke) {
              var Ae;
              return !(!O(ke) || typeof (Ae = ke.then) != 'function') && Ae;
            }
            function r(ke, Ae, Ve) {
              if (!Ae.notified) {
                Ae.notified = !0;
                var We = Ae.reactions;
                J(function () {
                  for (
                    var ge = Ae.value, Qe = Ae.state == 1, G = 0;
                    We.length > G;

                  ) {
                    var z,
                      V,
                      H,
                      ae = We[G++],
                      _e = Qe ? ae.ok : ae.fail,
                      Ee = ae.resolve,
                      De = ae.reject,
                      me = ae.domain;
                    try {
                      _e
                        ? (Qe ||
                            (Ae.rejection === 2 && Fe(ke, Ae),
                            (Ae.rejection = 1)),
                          _e === !0
                            ? (z = ge)
                            : (me && me.enter(),
                              (z = _e(ge)),
                              me && (me.exit(), (H = !0))),
                          z === ae.promise
                            ? De(ne('Promise-chain cycle'))
                            : (V = m(z))
                            ? V.call(z, Ee, De)
                            : Ee(z))
                        : De(ge);
                    } catch (Be) {
                      me && !H && me.exit(), De(Be);
                    }
                  }
                  (Ae.reactions = []),
                    (Ae.notified = !1),
                    Ve && !Ae.rejection && ze(ke, Ae);
                });
              }
            }
            function c(ke, Ae, Ve) {
              var We, ge;
              xe
                ? (((We = re.createEvent('Event')).promise = Ae),
                  (We.reason = Ve),
                  We.initEvent(ke, !1, !0),
                  d.dispatchEvent(We))
                : (We = { promise: Ae, reason: Ve }),
                (ge = d['on' + ke])
                  ? ge(We)
                  : ke === je && ee('Unhandled promise rejection', Ve);
            }
            function l(ke, Ae, Ve, We) {
              return function (ge) {
                ke(Ae, Ve, ge, We);
              };
            }
            function h(ke, Ae, Ve, We) {
              Ae.done ||
                ((Ae.done = !0),
                We && (Ae = We),
                (Ae.value = Ve),
                (Ae.state = 2),
                r(ke, Ae, !0));
            }
            var u,
              o,
              n,
              s,
              i = e('../internals/export'),
              a = e('../internals/is-pure'),
              d = e('../internals/global'),
              g = e('../internals/get-built-in'),
              _ = e('../internals/native-promise-constructor'),
              w = e('../internals/redefine'),
              S = e('../internals/redefine-all'),
              M = e('../internals/set-to-string-tag'),
              E = e('../internals/set-species'),
              O = e('../internals/is-object'),
              D = e('../internals/a-function'),
              A = e('../internals/an-instance'),
              k = e('../internals/classof-raw'),
              L = e('../internals/inspect-source'),
              R = e('../internals/iterate'),
              N = e('../internals/check-correctness-of-iteration'),
              B = e('../internals/species-constructor'),
              Z = e('../internals/task').set,
              J = e('../internals/microtask'),
              $ = e('../internals/promise-resolve'),
              ee = e('../internals/host-report-errors'),
              Q = e('../internals/new-promise-capability'),
              oe = e('../internals/perform'),
              ce = e('../internals/internal-state'),
              ve = e('../internals/is-forced'),
              de = e('../internals/well-known-symbol'),
              Se = e('../internals/engine-v8-version'),
              fe = de('species'),
              ye = 'Promise',
              P = ce.get,
              U = ce.set,
              W = ce.getterFor(ye),
              K = _,
              ne = d.TypeError,
              re = d.document,
              we = d.process,
              X = g('fetch'),
              ue = Q.f,
              he = ue,
              ie = k(we) == 'process',
              xe = !!(re && re.createEvent && d.dispatchEvent),
              je = 'unhandledrejection',
              Te = ve(ye, function () {
                if (
                  (L(K) === String(K) &&
                    (Se === 66 ||
                      (!ie && typeof PromiseRejectionEvent != 'function'))) ||
                  (a && !K.prototype.finally)
                )
                  return !0;
                if (51 <= Se && /native code/.test(K)) return !1;
                function ke(Ve) {
                  Ve(
                    function () {},
                    function () {},
                  );
                }
                var Ae = K.resolve(1);
                return (
                  ((Ae.constructor = {})[fe] = ke),
                  !(Ae.then(function () {}) instanceof ke)
                );
              }),
              Ne =
                Te ||
                !N(function (ke) {
                  K.all(ke).catch(function () {});
                }),
              ze = function (ke, Ae) {
                Z.call(d, function () {
                  var Ve,
                    We = Ae.value;
                  if (
                    qe(Ae) &&
                    ((Ve = oe(function () {
                      ie
                        ? we.emit('unhandledRejection', We, ke)
                        : c(je, ke, We);
                    })),
                    (Ae.rejection = ie || qe(Ae) ? 2 : 1),
                    Ve.error)
                  )
                    throw Ve.value;
                });
              },
              qe = function (ke) {
                return ke.rejection !== 1 && !ke.parent;
              },
              Fe = function (ke, Ae) {
                Z.call(d, function () {
                  ie
                    ? we.emit('rejectionHandled', ke)
                    : c('rejectionhandled', ke, Ae.value);
                });
              },
              nt = function (ke, Ae, Ve, We) {
                if (!Ae.done) {
                  (Ae.done = !0), We && (Ae = We);
                  try {
                    if (ke === Ve) throw ne("Promise can't be resolved itself");
                    var ge = m(Ve);
                    ge
                      ? J(function () {
                          var Qe = { done: !1 };
                          try {
                            ge.call(Ve, l(nt, ke, Qe, Ae), l(h, ke, Qe, Ae));
                          } catch (G) {
                            h(ke, Qe, G, Ae);
                          }
                        })
                      : ((Ae.value = Ve), (Ae.state = 1), r(ke, Ae, !1));
                  } catch (Qe) {
                    h(ke, { done: !1 }, Qe, Ae);
                  }
                }
              };
            Te &&
              ((K = function (ke) {
                A(this, K, ye), D(ke), u.call(this);
                var Ae = P(this);
                try {
                  ke(l(nt, this, Ae), l(h, this, Ae));
                } catch (Ve) {
                  h(this, Ae, Ve);
                }
              }),
              ((u = function () {
                U(this, {
                  type: ye,
                  done: !1,
                  notified: !1,
                  parent: !1,
                  reactions: [],
                  rejection: !1,
                  state: 0,
                  value: void 0,
                });
              }).prototype = S(K.prototype, {
                then: function (ke, Ae) {
                  var Ve = W(this),
                    We = ue(B(this, K));
                  return (
                    (We.ok = typeof ke != 'function' || ke),
                    (We.fail = typeof Ae == 'function' && Ae),
                    (We.domain = ie ? we.domain : void 0),
                    (Ve.parent = !0),
                    Ve.reactions.push(We),
                    Ve.state != 0 && r(this, Ve, !1),
                    We.promise
                  );
                },
                catch: function (ke) {
                  return this.then(void 0, ke);
                },
              })),
              (o = function () {
                var ke = new u(),
                  Ae = P(ke);
                (this.promise = ke),
                  (this.resolve = l(nt, ke, Ae)),
                  (this.reject = l(h, ke, Ae));
              }),
              (Q.f = ue =
                function (ke) {
                  return ke === K || ke === n ? new o(ke) : he(ke);
                }),
              a ||
                typeof _ != 'function' ||
                ((s = _.prototype.then),
                w(
                  _.prototype,
                  'then',
                  function (ke, Ae) {
                    var Ve = this;
                    return new K(function (We, ge) {
                      s.call(Ve, We, ge);
                    }).then(ke, Ae);
                  },
                  { unsafe: !0 },
                ),
                typeof X == 'function' &&
                  i(
                    { global: !0, enumerable: !0, forced: !0 },
                    {
                      fetch: function (ke) {
                        return $(K, X.apply(d, arguments));
                      },
                    },
                  ))),
              i({ global: !0, wrap: !0, forced: Te }, { Promise: K }),
              M(K, ye, !1, !0),
              E(ye),
              (n = g(ye)),
              i(
                { target: ye, stat: !0, forced: Te },
                {
                  reject: function (ke) {
                    var Ae = ue(this);
                    return Ae.reject.call(void 0, ke), Ae.promise;
                  },
                },
              ),
              i(
                { target: ye, stat: !0, forced: a || Te },
                {
                  resolve: function (ke) {
                    return $(a && this === n ? K : this, ke);
                  },
                },
              ),
              i(
                { target: ye, stat: !0, forced: Ne },
                {
                  all: function (ke) {
                    var Ae = this,
                      Ve = ue(Ae),
                      We = Ve.resolve,
                      ge = Ve.reject,
                      Qe = oe(function () {
                        var G = D(Ae.resolve),
                          z = [],
                          V = 0,
                          H = 1;
                        R(ke, function (ae) {
                          var _e = V++,
                            Ee = !1;
                          z.push(void 0),
                            H++,
                            G.call(Ae, ae).then(function (De) {
                              Ee || ((Ee = !0), (z[_e] = De), --H || We(z));
                            }, ge);
                        }),
                          --H || We(z);
                      });
                    return Qe.error && ge(Qe.value), Ve.promise;
                  },
                  race: function (ke) {
                    var Ae = this,
                      Ve = ue(Ae),
                      We = Ve.reject,
                      ge = oe(function () {
                        var Qe = D(Ae.resolve);
                        R(ke, function (G) {
                          Qe.call(Ae, G).then(Ve.resolve, We);
                        });
                      });
                    return ge.error && We(ge.value), Ve.promise;
                  },
                },
              );
          },
          {
            '../internals/a-function': 5,
            '../internals/an-instance': 9,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/classof-raw': 28,
            '../internals/engine-v8-version': 47,
            '../internals/export': 49,
            '../internals/get-built-in': 56,
            '../internals/global': 59,
            '../internals/host-report-errors': 62,
            '../internals/inspect-source': 68,
            '../internals/internal-state': 70,
            '../internals/is-forced': 73,
            '../internals/is-object': 74,
            '../internals/is-pure': 75,
            '../internals/iterate': 77,
            '../internals/microtask': 81,
            '../internals/native-promise-constructor': 82,
            '../internals/new-promise-capability': 86,
            '../internals/perform': 105,
            '../internals/promise-resolve': 106,
            '../internals/redefine': 108,
            '../internals/redefine-all': 107,
            '../internals/set-species': 116,
            '../internals/set-to-string-tag': 117,
            '../internals/species-constructor': 121,
            '../internals/task': 128,
            '../internals/well-known-symbol': 146,
          },
        ],
        179: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/get-built-in'),
              c = e('../internals/a-function'),
              l = e('../internals/an-object'),
              h = e('../internals/is-object'),
              u = e('../internals/object-create'),
              o = e('../internals/function-bind'),
              n = e('../internals/fails'),
              s = r('Reflect', 'construct'),
              i = n(function () {
                function g() {}
                return !(s(function () {}, [], g) instanceof g);
              }),
              a = !n(function () {
                s(function () {});
              }),
              d = i || a;
            m(
              { target: 'Reflect', stat: !0, forced: d, sham: d },
              {
                construct: function (g, _, w) {
                  c(g), l(_);
                  var S = arguments.length < 3 ? g : c(w);
                  if (a && !i) return s(g, _, S);
                  if (g == S) {
                    switch (_.length) {
                      case 0:
                        return new g();
                      case 1:
                        return new g(_[0]);
                      case 2:
                        return new g(_[0], _[1]);
                      case 3:
                        return new g(_[0], _[1], _[2]);
                      case 4:
                        return new g(_[0], _[1], _[2], _[3]);
                    }
                    var M = [null];
                    return M.push.apply(M, _), new (o.apply(g, M))();
                  }
                  var E = S.prototype,
                    O = u(h(E) ? E : Object.prototype),
                    D = Function.apply.call(g, O, _);
                  return h(D) ? D : O;
                },
              },
            );
          },
          {
            '../internals/a-function': 5,
            '../internals/an-object': 10,
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/function-bind': 55,
            '../internals/get-built-in': 56,
            '../internals/is-object': 74,
            '../internals/object-create': 90,
          },
        ],
        180: [
          function (e, v, y) {
            var m = e('../internals/descriptors'),
              r = e('../internals/global'),
              c = e('../internals/is-forced'),
              l = e('../internals/inherit-if-required'),
              h = e('../internals/object-define-property').f,
              u = e('../internals/object-get-own-property-names').f,
              o = e('../internals/is-regexp'),
              n = e('../internals/regexp-flags'),
              s = e('../internals/regexp-sticky-helpers'),
              i = e('../internals/redefine'),
              a = e('../internals/fails'),
              d = e('../internals/internal-state').set,
              g = e('../internals/set-species'),
              _ = e('../internals/well-known-symbol')('match'),
              w = r.RegExp,
              S = w.prototype,
              M = /a/g,
              E = /a/g,
              O = new w(M) !== M,
              D = s.UNSUPPORTED_Y;
            if (
              m &&
              c(
                'RegExp',
                !O ||
                  D ||
                  a(function () {
                    return (
                      (E[_] = !1), w(M) != M || w(E) == E || w(M, 'i') != '/a/i'
                    );
                  }),
              )
            ) {
              let N = function (B) {
                B in A ||
                  h(A, B, {
                    configurable: !0,
                    get: function () {
                      return w[B];
                    },
                    set: function (Z) {
                      w[B] = Z;
                    },
                  });
              };
              for (
                var R = N,
                  A = function (B, Z) {
                    var J,
                      $ = this instanceof A,
                      ee = o(B),
                      Q = Z === void 0;
                    if (!$ && ee && B.constructor === A && Q) return B;
                    O
                      ? ee && !Q && (B = B.source)
                      : B instanceof A &&
                        (Q && (Z = n.call(B)), (B = B.source)),
                      D &&
                        (J = !!Z && -1 < Z.indexOf('y')) &&
                        (Z = Z.replace(/y/g, ''));
                    var oe = l(O ? new w(B, Z) : w(B, Z), $ ? this : S, A);
                    return D && J && d(oe, { sticky: J }), oe;
                  },
                  k = u(w),
                  L = 0;
                k.length > L;

              )
                N(k[L++]);
              ((S.constructor = A).prototype = S), i(r, 'RegExp', A);
            }
            g('RegExp');
          },
          {
            '../internals/descriptors': 42,
            '../internals/fails': 50,
            '../internals/global': 59,
            '../internals/inherit-if-required': 67,
            '../internals/internal-state': 70,
            '../internals/is-forced': 73,
            '../internals/is-regexp': 76,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-names': 95,
            '../internals/redefine': 108,
            '../internals/regexp-flags': 111,
            '../internals/regexp-sticky-helpers': 112,
            '../internals/set-species': 116,
            '../internals/well-known-symbol': 146,
          },
        ],
        181: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/regexp-exec');
            m(
              { target: 'RegExp', proto: !0, forced: /./.exec !== r },
              { exec: r },
            );
          },
          { '../internals/export': 49, '../internals/regexp-exec': 110 },
        ],
        182: [
          function (e, v, y) {
            var m = e('../internals/redefine'),
              r = e('../internals/an-object'),
              c = e('../internals/fails'),
              l = e('../internals/regexp-flags'),
              h = 'toString',
              u = RegExp.prototype,
              o = u[h],
              n = c(function () {
                return o.call({ source: 'a', flags: 'b' }) != '/a/b';
              }),
              s = o.name != h;
            (n || s) &&
              m(
                RegExp.prototype,
                h,
                function () {
                  var i = r(this),
                    a = String(i.source),
                    d = i.flags;
                  return (
                    '/' +
                    a +
                    '/' +
                    String(
                      d === void 0 && i instanceof RegExp && !('flags' in u)
                        ? l.call(i)
                        : d,
                    )
                  );
                },
                { unsafe: !0 },
              );
          },
          {
            '../internals/an-object': 10,
            '../internals/fails': 50,
            '../internals/redefine': 108,
            '../internals/regexp-flags': 111,
          },
        ],
        183: [
          function (e, v, y) {
            var m = e('../internals/collection'),
              r = e('../internals/collection-strong');
            v.exports = m(
              'Set',
              function (c) {
                return function (l) {
                  return c(this, arguments.length ? l : void 0);
                };
              },
              r,
            );
          },
          {
            '../internals/collection': 31,
            '../internals/collection-strong': 30,
          },
        ],
        184: [
          function (e, v, y) {
            var m,
              r = e('../internals/export'),
              c = e('../internals/object-get-own-property-descriptor').f,
              l = e('../internals/to-length'),
              h = e('../internals/not-a-regexp'),
              u = e('../internals/require-object-coercible'),
              o = e('../internals/correct-is-regexp-logic'),
              n = e('../internals/is-pure'),
              s = ''.endsWith,
              i = Math.min,
              a = o('endsWith');
            r(
              {
                target: 'String',
                proto: !0,
                forced:
                  !!(
                    n ||
                    a ||
                    !(m = c(String.prototype, 'endsWith')) ||
                    m.writable
                  ) && !a,
              },
              {
                endsWith: function (d, g) {
                  var _ = String(u(this));
                  h(d);
                  var w = 1 < arguments.length ? g : void 0,
                    S = l(_.length),
                    M = w === void 0 ? S : i(l(w), S),
                    E = String(d);
                  return s ? s.call(_, E, M) : _.slice(M - E.length, M) === E;
                },
              },
            );
          },
          {
            '../internals/correct-is-regexp-logic': 33,
            '../internals/export': 49,
            '../internals/is-pure': 75,
            '../internals/not-a-regexp': 87,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/require-object-coercible': 113,
            '../internals/to-length': 134,
          },
        ],
        185: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/not-a-regexp'),
              c = e('../internals/require-object-coercible');
            m(
              {
                target: 'String',
                proto: !0,
                forced: !e('../internals/correct-is-regexp-logic')('includes'),
              },
              {
                includes: function (l, h) {
                  return !!~String(c(this)).indexOf(
                    r(l),
                    1 < arguments.length ? h : void 0,
                  );
                },
              },
            );
          },
          {
            '../internals/correct-is-regexp-logic': 33,
            '../internals/export': 49,
            '../internals/not-a-regexp': 87,
            '../internals/require-object-coercible': 113,
          },
        ],
        186: [
          function (e, v, y) {
            var m = e('../internals/string-multibyte').charAt,
              r = e('../internals/internal-state'),
              c = e('../internals/define-iterator'),
              l = 'String Iterator',
              h = r.set,
              u = r.getterFor(l);
            c(
              String,
              'String',
              function (o) {
                h(this, { type: l, string: String(o), index: 0 });
              },
              function () {
                var o,
                  n = u(this),
                  s = n.string,
                  i = n.index;
                return i >= s.length
                  ? { value: void 0, done: !0 }
                  : ((o = m(s, i)),
                    (n.index += o.length),
                    { value: o, done: !1 });
              },
            );
          },
          {
            '../internals/define-iterator': 40,
            '../internals/internal-state': 70,
            '../internals/string-multibyte': 123,
          },
        ],
        187: [
          function (e, v, y) {
            var m = e('../internals/fix-regexp-well-known-symbol-logic'),
              r = e('../internals/an-object'),
              c = e('../internals/to-length'),
              l = e('../internals/require-object-coercible'),
              h = e('../internals/advance-string-index'),
              u = e('../internals/regexp-exec-abstract');
            m('match', 1, function (o, n, s) {
              return [
                function (i) {
                  var a = l(this),
                    d = i == null ? void 0 : i[o];
                  return d !== void 0
                    ? d.call(i, a)
                    : new RegExp(i)[o](String(a));
                },
                function (i) {
                  var a = s(n, i, this);
                  if (a.done) return a.value;
                  var d = r(i),
                    g = String(this);
                  if (!d.global) return u(d, g);
                  for (
                    var _, w = d.unicode, S = [], M = (d.lastIndex = 0);
                    (_ = u(d, g)) !== null;

                  ) {
                    var E = String(_[0]);
                    (S[M] = E) === '' &&
                      (d.lastIndex = h(g, c(d.lastIndex), w)),
                      M++;
                  }
                  return M === 0 ? null : S;
                },
              ];
            });
          },
          {
            '../internals/advance-string-index': 8,
            '../internals/an-object': 10,
            '../internals/fix-regexp-well-known-symbol-logic': 51,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/to-length': 134,
          },
        ],
        188: [
          function (e, v, y) {
            e('../internals/export')(
              { target: 'String', proto: !0 },
              { repeat: e('../internals/string-repeat') },
            );
          },
          { '../internals/export': 49, '../internals/string-repeat': 125 },
        ],
        189: [
          function (e, v, y) {
            var m = e('../internals/fix-regexp-well-known-symbol-logic'),
              r = e('../internals/an-object'),
              c = e('../internals/to-object'),
              l = e('../internals/to-length'),
              h = e('../internals/to-integer'),
              u = e('../internals/require-object-coercible'),
              o = e('../internals/advance-string-index'),
              n = e('../internals/regexp-exec-abstract'),
              s = Math.max,
              i = Math.min,
              a = Math.floor,
              d = /\$([$&'`]|\d\d?|<[^>]*>)/g,
              g = /\$([$&'`]|\d\d?)/g;
            m('replace', 2, function (_, w, S, M) {
              var E = M.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,
                O = M.REPLACE_KEEPS_$0,
                D = E ? '$' : '$0';
              return [
                function (k, L) {
                  var R = u(this),
                    N = k == null ? void 0 : k[_];
                  return N !== void 0
                    ? N.call(k, R, L)
                    : w.call(String(R), k, L);
                },
                function (k, L) {
                  if (
                    (!E && O) ||
                    (typeof L == 'string' && L.indexOf(D) === -1)
                  ) {
                    var R = S(w, k, this, L);
                    if (R.done) return R.value;
                  }
                  var N = r(k),
                    B = String(this),
                    Z = typeof L == 'function';
                  Z || (L = String(L));
                  var J = N.global;
                  if (J) {
                    var $ = N.unicode;
                    N.lastIndex = 0;
                  }
                  for (var ee = []; ; ) {
                    var Q = n(N, B);
                    if (Q === null || (ee.push(Q), !J)) break;
                    String(Q[0]) === '' &&
                      (N.lastIndex = o(B, l(N.lastIndex), $));
                  }
                  for (var oe, ce = '', ve = 0, de = 0; de < ee.length; de++) {
                    Q = ee[de];
                    for (
                      var Se = String(Q[0]),
                        fe = s(i(h(Q.index), B.length), 0),
                        ye = [],
                        P = 1;
                      P < Q.length;
                      P++
                    )
                      ye.push((oe = Q[P]) === void 0 ? oe : String(oe));
                    var U = Q.groups;
                    if (Z) {
                      var W = [Se].concat(ye, fe, B);
                      U !== void 0 && W.push(U);
                      var K = String(L.apply(void 0, W));
                    } else K = A(Se, B, fe, ye, U, L);
                    ve <= fe &&
                      ((ce += B.slice(ve, fe) + K), (ve = fe + Se.length));
                  }
                  return ce + B.slice(ve);
                },
              ];
              function A(k, L, R, N, B, Z) {
                var J = R + k.length,
                  $ = N.length,
                  ee = g;
                return (
                  B !== void 0 && ((B = c(B)), (ee = d)),
                  w.call(Z, ee, function (Q, oe) {
                    var ce;
                    switch (oe.charAt(0)) {
                      case '$':
                        return '$';
                      case '&':
                        return k;
                      case '`':
                        return L.slice(0, R);
                      case "'":
                        return L.slice(J);
                      case '<':
                        ce = B[oe.slice(1, -1)];
                        break;
                      default:
                        var ve = +oe;
                        if (ve == 0) return Q;
                        if ($ < ve) {
                          var de = a(ve / 10);
                          return de === 0
                            ? Q
                            : de <= $
                            ? N[de - 1] === void 0
                              ? oe.charAt(1)
                              : N[de - 1] + oe.charAt(1)
                            : Q;
                        }
                        ce = N[ve - 1];
                    }
                    return ce === void 0 ? '' : ce;
                  })
                );
              }
            });
          },
          {
            '../internals/advance-string-index': 8,
            '../internals/an-object': 10,
            '../internals/fix-regexp-well-known-symbol-logic': 51,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        190: [
          function (e, v, y) {
            var m = e('../internals/fix-regexp-well-known-symbol-logic'),
              r = e('../internals/an-object'),
              c = e('../internals/require-object-coercible'),
              l = e('../internals/same-value'),
              h = e('../internals/regexp-exec-abstract');
            m('search', 1, function (u, o, n) {
              return [
                function (s) {
                  var i = c(this),
                    a = s == null ? void 0 : s[u];
                  return a !== void 0
                    ? a.call(s, i)
                    : new RegExp(s)[u](String(i));
                },
                function (s) {
                  var i = n(o, s, this);
                  if (i.done) return i.value;
                  var a = r(s),
                    d = String(this),
                    g = a.lastIndex;
                  l(g, 0) || (a.lastIndex = 0);
                  var _ = h(a, d);
                  return (
                    l(a.lastIndex, g) || (a.lastIndex = g),
                    _ === null ? -1 : _.index
                  );
                },
              ];
            });
          },
          {
            '../internals/an-object': 10,
            '../internals/fix-regexp-well-known-symbol-logic': 51,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/same-value': 114,
          },
        ],
        191: [
          function (e, v, y) {
            var m = e('../internals/fix-regexp-well-known-symbol-logic'),
              r = e('../internals/is-regexp'),
              c = e('../internals/an-object'),
              l = e('../internals/require-object-coercible'),
              h = e('../internals/species-constructor'),
              u = e('../internals/advance-string-index'),
              o = e('../internals/to-length'),
              n = e('../internals/regexp-exec-abstract'),
              s = e('../internals/regexp-exec'),
              i = e('../internals/fails'),
              a = [].push,
              d = Math.min,
              g = 4294967295,
              _ = !i(function () {
                return !RegExp(g, 'y');
              });
            m(
              'split',
              2,
              function (w, S, M) {
                var E;
                return (
                  (E =
                    'abbc'.split(/(b)*/)[1] == 'c' ||
                    'test'.split(/(?:)/, -1).length != 4 ||
                    'ab'.split(/(?:ab)*/).length != 2 ||
                    '.'.split(/(.?)(.?)/).length != 4 ||
                    1 < '.'.split(/()()/).length ||
                    ''.split(/.?/).length
                      ? function (O, D) {
                          var A = String(l(this)),
                            k = D === void 0 ? g : D >>> 0;
                          if (k == 0) return [];
                          if (O === void 0) return [A];
                          if (!r(O)) return S.call(A, O, k);
                          for (
                            var L,
                              R,
                              N,
                              B = [],
                              Z =
                                (O.ignoreCase ? 'i' : '') +
                                (O.multiline ? 'm' : '') +
                                (O.unicode ? 'u' : '') +
                                (O.sticky ? 'y' : ''),
                              J = 0,
                              $ = new RegExp(O.source, Z + 'g');
                            (L = s.call($, A)) &&
                            !(
                              J < (R = $.lastIndex) &&
                              (B.push(A.slice(J, L.index)),
                              1 < L.length &&
                                L.index < A.length &&
                                a.apply(B, L.slice(1)),
                              (N = L[0].length),
                              (J = R),
                              B.length >= k)
                            );

                          )
                            $.lastIndex === L.index && $.lastIndex++;
                          return (
                            J === A.length
                              ? (!N && $.test('')) || B.push('')
                              : B.push(A.slice(J)),
                            B.length > k ? B.slice(0, k) : B
                          );
                        }
                      : '0'.split(void 0, 0).length
                      ? function (O, D) {
                          return O === void 0 && D === 0
                            ? []
                            : S.call(this, O, D);
                        }
                      : S),
                  [
                    function (O, D) {
                      var A = l(this),
                        k = O == null ? void 0 : O[w];
                      return k !== void 0
                        ? k.call(O, A, D)
                        : E.call(String(A), O, D);
                    },
                    function (O, D) {
                      var A = M(E, O, this, D, E !== S);
                      if (A.done) return A.value;
                      var k = c(O),
                        L = String(this),
                        R = h(k, RegExp),
                        N = k.unicode,
                        B =
                          (k.ignoreCase ? 'i' : '') +
                          (k.multiline ? 'm' : '') +
                          (k.unicode ? 'u' : '') +
                          (_ ? 'y' : 'g'),
                        Z = new R(_ ? k : '^(?:' + k.source + ')', B),
                        J = D === void 0 ? g : D >>> 0;
                      if (J == 0) return [];
                      if (L.length === 0) return n(Z, L) === null ? [L] : [];
                      for (var $ = 0, ee = 0, Q = []; ee < L.length; ) {
                        Z.lastIndex = _ ? ee : 0;
                        var oe,
                          ce = n(Z, _ ? L : L.slice(ee));
                        if (
                          ce === null ||
                          (oe = d(o(Z.lastIndex + (_ ? 0 : ee)), L.length)) ===
                            $
                        )
                          ee = u(L, ee, N);
                        else {
                          if ((Q.push(L.slice($, ee)), Q.length === J))
                            return Q;
                          for (var ve = 1; ve <= ce.length - 1; ve++)
                            if ((Q.push(ce[ve]), Q.length === J)) return Q;
                          ee = $ = oe;
                        }
                      }
                      return Q.push(L.slice($)), Q;
                    },
                  ]
                );
              },
              !_,
            );
          },
          {
            '../internals/advance-string-index': 8,
            '../internals/an-object': 10,
            '../internals/fails': 50,
            '../internals/fix-regexp-well-known-symbol-logic': 51,
            '../internals/is-regexp': 76,
            '../internals/regexp-exec': 110,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/species-constructor': 121,
            '../internals/to-length': 134,
          },
        ],
        192: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/create-html');
            m(
              {
                target: 'String',
                proto: !0,
                forced: e('../internals/string-html-forced')('sub'),
              },
              {
                sub: function () {
                  return r(this, 'sub', '', '');
                },
              },
            );
          },
          {
            '../internals/create-html': 35,
            '../internals/export': 49,
            '../internals/string-html-forced': 122,
          },
        ],
        193: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/string-trim').trim;
            m(
              {
                target: 'String',
                proto: !0,
                forced: e('../internals/string-trim-forced')('trim'),
              },
              {
                trim: function () {
                  return r(this);
                },
              },
            );
          },
          {
            '../internals/export': 49,
            '../internals/string-trim': 127,
            '../internals/string-trim-forced': 126,
          },
        ],
        194: [
          function (e, v, y) {
            var m = e('../internals/export'),
              r = e('../internals/descriptors'),
              c = e('../internals/global'),
              l = e('../internals/has'),
              h = e('../internals/is-object'),
              u = e('../internals/object-define-property').f,
              o = e('../internals/copy-constructor-properties'),
              n = c.Symbol;
            if (
              r &&
              typeof n == 'function' &&
              (!('description' in n.prototype) || n().description !== void 0)
            ) {
              var s = {},
                i = function (w) {
                  var S =
                      arguments.length < 1 || w === void 0 ? void 0 : String(w),
                    M =
                      this instanceof i ? new n(S) : S === void 0 ? n() : n(S);
                  return S === '' && (s[M] = !0), M;
                };
              o(i, n);
              var a = (i.prototype = n.prototype);
              a.constructor = i;
              var d = a.toString,
                g = String(n('test')) == 'Symbol(test)',
                _ = /^Symbol\((.*)\)[^)]+$/;
              u(a, 'description', {
                configurable: !0,
                get: function () {
                  var w = h(this) ? this.valueOf() : this,
                    S = d.call(w);
                  if (l(s, w)) return '';
                  var M = g ? S.slice(7, -1) : S.replace(_, '$1');
                  return M === '' ? void 0 : M;
                },
              }),
                m({ global: !0, forced: !0 }, { Symbol: i });
            }
          },
          {
            '../internals/copy-constructor-properties': 32,
            '../internals/descriptors': 42,
            '../internals/export': 49,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/is-object': 74,
            '../internals/object-define-property': 92,
          },
        ],
        195: [
          function (e, v, y) {
            e('../internals/define-well-known-symbol')('iterator');
          },
          { '../internals/define-well-known-symbol': 41 },
        ],
        196: [
          function (e, v, y) {
            function m(V, H) {
              var ae = (ze[V] = A(he[ne]));
              return (
                we(ae, { type: K, tag: V, description: H }),
                s || (ae.description = H),
                ae
              );
            }
            function r(V, H) {
              S(V);
              var ae = E(H),
                _e = k(ae).concat(z(ae));
              return (
                U(_e, function (Ee) {
                  (s && !G.call(ae, Ee)) || Qe(V, Ee, ae[Ee]);
                }),
                V
              );
            }
            function c(V, H) {
              var ae = E(V),
                _e = O(H, !0);
              if (ae !== ue || !g(ze, _e) || g(qe, _e)) {
                var Ee = xe(ae, _e);
                return (
                  !Ee ||
                    !g(ze, _e) ||
                    (g(ae, W) && ae[W][_e]) ||
                    (Ee.enumerable = !0),
                  Ee
                );
              }
            }
            function l(V) {
              var H = Te(E(V)),
                ae = [];
              return (
                U(H, function (_e) {
                  g(ze, _e) || g(ce, _e) || ae.push(_e);
                }),
                ae
              );
            }
            var h = e('../internals/export'),
              u = e('../internals/global'),
              o = e('../internals/get-built-in'),
              n = e('../internals/is-pure'),
              s = e('../internals/descriptors'),
              i = e('../internals/native-symbol'),
              a = e('../internals/use-symbol-as-uid'),
              d = e('../internals/fails'),
              g = e('../internals/has'),
              _ = e('../internals/is-array'),
              w = e('../internals/is-object'),
              S = e('../internals/an-object'),
              M = e('../internals/to-object'),
              E = e('../internals/to-indexed-object'),
              O = e('../internals/to-primitive'),
              D = e('../internals/create-property-descriptor'),
              A = e('../internals/object-create'),
              k = e('../internals/object-keys'),
              L = e('../internals/object-get-own-property-names'),
              R = e('../internals/object-get-own-property-names-external'),
              N = e('../internals/object-get-own-property-symbols'),
              B = e('../internals/object-get-own-property-descriptor'),
              Z = e('../internals/object-define-property'),
              J = e('../internals/object-property-is-enumerable'),
              $ = e('../internals/create-non-enumerable-property'),
              ee = e('../internals/redefine'),
              Q = e('../internals/shared'),
              oe = e('../internals/shared-key'),
              ce = e('../internals/hidden-keys'),
              ve = e('../internals/uid'),
              de = e('../internals/well-known-symbol'),
              Se = e('../internals/well-known-symbol-wrapped'),
              fe = e('../internals/define-well-known-symbol'),
              ye = e('../internals/set-to-string-tag'),
              P = e('../internals/internal-state'),
              U = e('../internals/array-iteration').forEach,
              W = oe('hidden'),
              K = 'Symbol',
              ne = 'prototype',
              re = de('toPrimitive'),
              we = P.set,
              X = P.getterFor(K),
              ue = Object[ne],
              he = u.Symbol,
              ie = o('JSON', 'stringify'),
              xe = B.f,
              je = Z.f,
              Te = R.f,
              Ne = J.f,
              ze = Q('symbols'),
              qe = Q('op-symbols'),
              Fe = Q('string-to-symbol-registry'),
              nt = Q('symbol-to-string-registry'),
              ke = Q('wks'),
              Ae = u.QObject,
              Ve = !Ae || !Ae[ne] || !Ae[ne].findChild,
              We =
                s &&
                d(function () {
                  return (
                    A(
                      je({}, 'a', {
                        get: function () {
                          return je(this, 'a', { value: 7 }).a;
                        },
                      }),
                    ).a != 7
                  );
                })
                  ? function (V, H, ae) {
                      var _e = xe(ue, H);
                      _e && delete ue[H],
                        je(V, H, ae),
                        _e && V !== ue && je(ue, H, _e);
                    }
                  : je,
              ge = a
                ? function (V) {
                    return typeof V == 'symbol';
                  }
                : function (V) {
                    return Object(V) instanceof he;
                  },
              Qe = function (V, H, ae) {
                V === ue && Qe(qe, H, ae), S(V);
                var _e = O(H, !0);
                return (
                  S(ae),
                  g(ze, _e)
                    ? (ae.enumerable
                        ? (g(V, W) && V[W][_e] && (V[W][_e] = !1),
                          (ae = A(ae, { enumerable: D(0, !1) })))
                        : (g(V, W) || je(V, W, D(1, {})), (V[W][_e] = !0)),
                      We(V, _e, ae))
                    : je(V, _e, ae)
                );
              },
              G = function (V) {
                var H = O(V, !0),
                  ae = Ne.call(this, H);
                return (
                  !(this === ue && g(ze, H) && !g(qe, H)) &&
                  (!(
                    ae ||
                    !g(this, H) ||
                    !g(ze, H) ||
                    (g(this, W) && this[W][H])
                  ) ||
                    ae)
                );
              },
              z = function (V) {
                var H = V === ue,
                  ae = Te(H ? qe : E(V)),
                  _e = [];
                return (
                  U(ae, function (Ee) {
                    !g(ze, Ee) || (H && !g(ue, Ee)) || _e.push(ze[Ee]);
                  }),
                  _e
                );
              };
            i ||
              (ee(
                (he = function (V) {
                  if (this instanceof he)
                    throw TypeError('Symbol is not a constructor');
                  var H = arguments.length && V !== void 0 ? String(V) : void 0,
                    ae = ve(H),
                    _e = function (Ee) {
                      this === ue && _e.call(qe, Ee),
                        g(this, W) && g(this[W], ae) && (this[W][ae] = !1),
                        We(this, ae, D(1, Ee));
                    };
                  return (
                    s && Ve && We(ue, ae, { configurable: !0, set: _e }),
                    m(ae, H)
                  );
                })[ne],
                'toString',
                function () {
                  return X(this).tag;
                },
              ),
              ee(he, 'withoutSetter', function (V) {
                return m(ve(V), V);
              }),
              (J.f = G),
              (Z.f = Qe),
              (B.f = c),
              (L.f = R.f = l),
              (N.f = z),
              (Se.f = function (V) {
                return m(de(V), V);
              }),
              s &&
                (je(he[ne], 'description', {
                  configurable: !0,
                  get: function () {
                    return X(this).description;
                  },
                }),
                n || ee(ue, 'propertyIsEnumerable', G, { unsafe: !0 }))),
              h({ global: !0, wrap: !0, forced: !i, sham: !i }, { Symbol: he }),
              U(k(ke), function (V) {
                fe(V);
              }),
              h(
                { target: K, stat: !0, forced: !i },
                {
                  for: function (V) {
                    var H = String(V);
                    if (g(Fe, H)) return Fe[H];
                    var ae = he(H);
                    return (Fe[H] = ae), (nt[ae] = H), ae;
                  },
                  keyFor: function (V) {
                    if (!ge(V)) throw TypeError(V + ' is not a symbol');
                    if (g(nt, V)) return nt[V];
                  },
                  useSetter: function () {
                    Ve = !0;
                  },
                  useSimple: function () {
                    Ve = !1;
                  },
                },
              ),
              h(
                { target: 'Object', stat: !0, forced: !i, sham: !s },
                {
                  create: function (V, H) {
                    return H === void 0 ? A(V) : r(A(V), H);
                  },
                  defineProperty: Qe,
                  defineProperties: r,
                  getOwnPropertyDescriptor: c,
                },
              ),
              h(
                { target: 'Object', stat: !0, forced: !i },
                { getOwnPropertyNames: l, getOwnPropertySymbols: z },
              ),
              h(
                {
                  target: 'Object',
                  stat: !0,
                  forced: d(function () {
                    N.f(1);
                  }),
                },
                {
                  getOwnPropertySymbols: function (V) {
                    return N.f(M(V));
                  },
                },
              ),
              ie &&
                h(
                  {
                    target: 'JSON',
                    stat: !0,
                    forced:
                      !i ||
                      d(function () {
                        var V = he();
                        return (
                          ie([V]) != '[null]' ||
                          ie({ a: V }) != '{}' ||
                          ie(Object(V)) != '{}'
                        );
                      }),
                  },
                  {
                    stringify: function (V, H, ae) {
                      for (var _e, Ee = [V], De = 1; De < arguments.length; )
                        Ee.push(arguments[De++]);
                      if ((w((_e = H)) || V !== void 0) && !ge(V))
                        return (
                          _(H) ||
                            (H = function (me, Be) {
                              if (
                                (typeof _e == 'function' &&
                                  (Be = _e.call(this, me, Be)),
                                !ge(Be))
                              )
                                return Be;
                            }),
                          (Ee[1] = H),
                          ie.apply(null, Ee)
                        );
                    },
                  },
                ),
              he[ne][re] || $(he[ne], re, he[ne].valueOf),
              ye(he, K),
              (ce[W] = !0);
          },
          {
            '../internals/an-object': 10,
            '../internals/array-iteration': 19,
            '../internals/create-non-enumerable-property': 37,
            '../internals/create-property-descriptor': 38,
            '../internals/define-well-known-symbol': 41,
            '../internals/descriptors': 42,
            '../internals/export': 49,
            '../internals/fails': 50,
            '../internals/get-built-in': 56,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/internal-state': 70,
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/is-pure': 75,
            '../internals/native-symbol': 83,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-get-own-property-names-external': 94,
            '../internals/object-get-own-property-symbols': 96,
            '../internals/object-keys': 99,
            '../internals/object-property-is-enumerable': 100,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
            '../internals/shared': 120,
            '../internals/shared-key': 118,
            '../internals/to-indexed-object': 132,
            '../internals/to-object': 135,
            '../internals/to-primitive': 138,
            '../internals/uid': 143,
            '../internals/use-symbol-as-uid': 144,
            '../internals/well-known-symbol': 146,
            '../internals/well-known-symbol-wrapped': 145,
          },
        ],
        197: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-copy-within'),
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('copyWithin', function (l, h, u) {
              return r.call(c(this), l, h, 2 < arguments.length ? u : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-copy-within': 14,
          },
        ],
        198: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-iteration').every,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('every', function (l, h) {
              return r(c(this), l, 1 < arguments.length ? h : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        199: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-fill'),
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('fill', function (l) {
              return r.apply(c(this), arguments);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-fill': 15,
          },
        ],
        200: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-iteration').filter,
              c = e('../internals/species-constructor'),
              l = m.aTypedArray,
              h = m.aTypedArrayConstructor;
            (0, m.exportTypedArrayMethod)('filter', function (u, o) {
              for (
                var n = r(l(this), u, 1 < arguments.length ? o : void 0),
                  s = c(this, this.constructor),
                  i = 0,
                  a = n.length,
                  d = new (h(s))(a);
                i < a;

              )
                d[i] = n[i++];
              return d;
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
            '../internals/species-constructor': 121,
          },
        ],
        201: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-iteration').findIndex,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('findIndex', function (l, h) {
              return r(c(this), l, 1 < arguments.length ? h : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        202: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-iteration').find,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('find', function (l, h) {
              return r(c(this), l, 1 < arguments.length ? h : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        203: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')('Float32', function (m) {
              return function (r, c, l) {
                return m(this, r, c, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        204: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')('Float64', function (m) {
              return function (r, c, l) {
                return m(this, r, c, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        205: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-iteration').forEach,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('forEach', function (l, h) {
              r(c(this), l, 1 < arguments.length ? h : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        206: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-includes').includes,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('includes', function (l, h) {
              return r(c(this), l, 1 < arguments.length ? h : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-includes': 18,
          },
        ],
        207: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-includes').indexOf,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('indexOf', function (l, h) {
              return r(c(this), l, 1 < arguments.length ? h : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-includes': 18,
          },
        ],
        208: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')('Int16', function (m) {
              return function (r, c, l) {
                return m(this, r, c, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        209: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')('Int32', function (m) {
              return function (r, c, l) {
                return m(this, r, c, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        210: [
          function (e, v, y) {
            function m() {
              return o.call(i(this));
            }
            var r = e('../internals/global'),
              c = e('../internals/array-buffer-view-core'),
              l = e('../modules/es.array.iterator'),
              h = e('../internals/well-known-symbol')('iterator'),
              u = r.Uint8Array,
              o = l.values,
              n = l.keys,
              s = l.entries,
              i = c.aTypedArray,
              a = c.exportTypedArrayMethod,
              d = u && u.prototype[h],
              g = !!d && (d.name == 'values' || d.name == null);
            a('entries', function () {
              return s.call(i(this));
            }),
              a('keys', function () {
                return n.call(i(this));
              }),
              a('values', m, !g),
              a(h, m, !g);
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/global': 59,
            '../internals/well-known-symbol': 146,
            '../modules/es.array.iterator': 158,
          },
        ],
        211: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = m.aTypedArray,
              c = m.exportTypedArrayMethod,
              l = [].join;
            c('join', function (h) {
              return l.apply(r(this), arguments);
            });
          },
          { '../internals/array-buffer-view-core': 12 },
        ],
        212: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-last-index-of'),
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('lastIndexOf', function (l) {
              return r.apply(c(this), arguments);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-last-index-of': 20,
          },
        ],
        213: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-iteration').map,
              c = e('../internals/species-constructor'),
              l = m.aTypedArray,
              h = m.aTypedArrayConstructor;
            (0, m.exportTypedArrayMethod)('map', function (u, o) {
              return r(
                l(this),
                u,
                1 < arguments.length ? o : void 0,
                function (n, s) {
                  return new (h(c(n, n.constructor)))(s);
                },
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
            '../internals/species-constructor': 121,
          },
        ],
        214: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-reduce').right,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('reduceRight', function (l, h) {
              return r(
                c(this),
                l,
                arguments.length,
                1 < arguments.length ? h : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-reduce': 24,
          },
        ],
        215: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-reduce').left,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('reduce', function (l, h) {
              return r(
                c(this),
                l,
                arguments.length,
                1 < arguments.length ? h : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-reduce': 24,
          },
        ],
        216: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = m.aTypedArray,
              c = m.exportTypedArrayMethod,
              l = Math.floor;
            c('reverse', function () {
              for (var h, u = r(this).length, o = l(u / 2), n = 0; n < o; )
                (h = this[n]), (this[n++] = this[--u]), (this[u] = h);
              return this;
            });
          },
          { '../internals/array-buffer-view-core': 12 },
        ],
        217: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/to-length'),
              c = e('../internals/to-offset'),
              l = e('../internals/to-object'),
              h = e('../internals/fails'),
              u = m.aTypedArray;
            (0, m.exportTypedArrayMethod)(
              'set',
              function (o, n) {
                u(this);
                var s = c(1 < arguments.length ? n : void 0, 1),
                  i = this.length,
                  a = l(o),
                  d = r(a.length),
                  g = 0;
                if (i < d + s) throw RangeError('Wrong length');
                for (; g < d; ) this[s + g] = a[g++];
              },
              h(function () {
                new Int8Array(1).set({});
              }),
            );
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 50,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
            '../internals/to-offset': 136,
          },
        ],
        218: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/species-constructor'),
              c = e('../internals/fails'),
              l = m.aTypedArray,
              h = m.aTypedArrayConstructor,
              u = m.exportTypedArrayMethod,
              o = [].slice;
            u(
              'slice',
              function (n, s) {
                for (
                  var i = o.call(l(this), n, s),
                    a = r(this, this.constructor),
                    d = 0,
                    g = i.length,
                    _ = new (h(a))(g);
                  d < g;

                )
                  _[d] = i[d++];
                return _;
              },
              c(function () {
                new Int8Array(1).slice();
              }),
            );
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 50,
            '../internals/species-constructor': 121,
          },
        ],
        219: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/array-iteration').some,
              c = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('some', function (l, h) {
              return r(c(this), l, 1 < arguments.length ? h : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        220: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = m.aTypedArray,
              c = m.exportTypedArrayMethod,
              l = [].sort;
            c('sort', function (h) {
              return l.call(r(this), h);
            });
          },
          { '../internals/array-buffer-view-core': 12 },
        ],
        221: [
          function (e, v, y) {
            var m = e('../internals/array-buffer-view-core'),
              r = e('../internals/to-length'),
              c = e('../internals/to-absolute-index'),
              l = e('../internals/species-constructor'),
              h = m.aTypedArray;
            (0, m.exportTypedArrayMethod)('subarray', function (u, o) {
              var n = h(this),
                s = n.length,
                i = c(u, s);
              return new (l(n, n.constructor))(
                n.buffer,
                n.byteOffset + i * n.BYTES_PER_ELEMENT,
                r((o === void 0 ? s : c(o, s)) - i),
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/species-constructor': 121,
            '../internals/to-absolute-index': 130,
            '../internals/to-length': 134,
          },
        ],
        222: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/array-buffer-view-core'),
              c = e('../internals/fails'),
              l = m.Int8Array,
              h = r.aTypedArray,
              u = r.exportTypedArrayMethod,
              o = [].toLocaleString,
              n = [].slice,
              s =
                !!l &&
                c(function () {
                  o.call(new l(1));
                });
            u(
              'toLocaleString',
              function () {
                return o.apply(s ? n.call(h(this)) : h(this), arguments);
              },
              c(function () {
                return (
                  [1, 2].toLocaleString() != new l([1, 2]).toLocaleString()
                );
              }) ||
                !c(function () {
                  l.prototype.toLocaleString.call([1, 2]);
                }),
            );
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 50,
            '../internals/global': 59,
          },
        ],
        223: [
          function (e, v, y) {
            var m = e(
                '../internals/array-buffer-view-core',
              ).exportTypedArrayMethod,
              r = e('../internals/fails'),
              c = e('../internals/global').Uint8Array,
              l = (c && c.prototype) || {},
              h = [].toString,
              u = [].join;
            r(function () {
              h.call({});
            }) &&
              (h = function () {
                return u.call(this);
              }),
              m('toString', h, l.toString != h);
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 50,
            '../internals/global': 59,
          },
        ],
        224: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')('Uint16', function (m) {
              return function (r, c, l) {
                return m(this, r, c, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        225: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')('Uint32', function (m) {
              return function (r, c, l) {
                return m(this, r, c, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        226: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')('Uint8', function (m) {
              return function (r, c, l) {
                return m(this, r, c, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        227: [
          function (e, v, y) {
            e('../internals/typed-array-constructor')(
              'Uint8',
              function (m) {
                return function (r, c, l) {
                  return m(this, r, c, l);
                };
              },
              !0,
            );
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        228: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/dom-iterables'),
              c = e('../internals/array-for-each'),
              l = e('../internals/create-non-enumerable-property');
            for (var h in r) {
              var u = m[h],
                o = u && u.prototype;
              if (o && o.forEach !== c)
                try {
                  l(o, 'forEach', c);
                } catch {
                  o.forEach = c;
                }
            }
          },
          {
            '../internals/array-for-each': 16,
            '../internals/create-non-enumerable-property': 37,
            '../internals/dom-iterables': 44,
            '../internals/global': 59,
          },
        ],
        229: [
          function (e, v, y) {
            var m = e('../internals/global'),
              r = e('../internals/dom-iterables'),
              c = e('../modules/es.array.iterator'),
              l = e('../internals/create-non-enumerable-property'),
              h = e('../internals/well-known-symbol'),
              u = h('iterator'),
              o = h('toStringTag'),
              n = c.values;
            for (var s in r) {
              var i = m[s],
                a = i && i.prototype;
              if (a) {
                if (a[u] !== n)
                  try {
                    l(a, u, n);
                  } catch {
                    a[u] = n;
                  }
                if ((a[o] || l(a, o, s), r[s])) {
                  for (var d in c)
                    if (a[d] !== c[d])
                      try {
                        l(a, d, c[d]);
                      } catch {
                        a[d] = c[d];
                      }
                }
              }
            }
          },
          {
            '../internals/create-non-enumerable-property': 37,
            '../internals/dom-iterables': 44,
            '../internals/global': 59,
            '../internals/well-known-symbol': 146,
            '../modules/es.array.iterator': 158,
          },
        ],
        230: [
          function (e, v, y) {
            e('../modules/es.array.iterator');
            function m(K) {
              try {
                return decodeURIComponent(K);
              } catch {
                return K;
              }
            }
            function r(K) {
              var ne,
                re = K.replace(de, ' '),
                we = 4;
              try {
                return decodeURIComponent(re);
              } catch {
                for (; we; )
                  re = re.replace(
                    ((ne = we--),
                    Se[ne - 1] ||
                      (Se[ne - 1] = RegExp(
                        '((?:%[\\da-f]{2}){' + ne + '})',
                        'gi',
                      ))),
                    m,
                  );
                return re;
              }
            }
            function c(K) {
              return ye[K];
            }
            function l(K) {
              return encodeURIComponent(K).replace(fe, c);
            }
            function h(K, ne) {
              if (ne)
                for (var re, we, X = ne.split('&'), ue = 0; ue < X.length; )
                  (re = X[ue++]).length &&
                    ((we = re.split('=')),
                    K.push({ key: r(we.shift()), value: r(we.join('=')) }));
            }
            function u(K) {
              (this.entries.length = 0), h(this.entries, K);
            }
            function o(K, ne) {
              if (K < ne) throw TypeError('Not enough arguments');
            }
            var n = e('../internals/export'),
              s = e('../internals/get-built-in'),
              i = e('../internals/native-url'),
              a = e('../internals/redefine'),
              d = e('../internals/redefine-all'),
              g = e('../internals/set-to-string-tag'),
              _ = e('../internals/create-iterator-constructor'),
              w = e('../internals/internal-state'),
              S = e('../internals/an-instance'),
              M = e('../internals/has'),
              E = e('../internals/function-bind-context'),
              O = e('../internals/classof'),
              D = e('../internals/an-object'),
              A = e('../internals/is-object'),
              k = e('../internals/object-create'),
              L = e('../internals/create-property-descriptor'),
              R = e('../internals/get-iterator'),
              N = e('../internals/get-iterator-method'),
              B = e('../internals/well-known-symbol'),
              Z = s('fetch'),
              J = s('Headers'),
              $ = B('iterator'),
              ee = 'URLSearchParams',
              Q = ee + 'Iterator',
              oe = w.set,
              ce = w.getterFor(ee),
              ve = w.getterFor(Q),
              de = /\+/g,
              Se = Array(4),
              fe = /[!'()~]|%20/g,
              ye = {
                '!': '%21',
                "'": '%27',
                '(': '%28',
                ')': '%29',
                '~': '%7E',
                '%20': '+',
              },
              P = _(
                function (K, ne) {
                  oe(this, { type: Q, iterator: R(ce(K).entries), kind: ne });
                },
                'Iterator',
                function () {
                  var K = ve(this),
                    ne = K.kind,
                    re = K.iterator.next(),
                    we = re.value;
                  return (
                    re.done ||
                      (re.value =
                        ne === 'keys'
                          ? we.key
                          : ne === 'values'
                          ? we.value
                          : [we.key, we.value]),
                    re
                  );
                },
              ),
              U = function (K) {
                S(this, U, ee);
                var ne,
                  re,
                  we,
                  X,
                  ue,
                  he,
                  ie,
                  xe,
                  je,
                  Te = 0 < arguments.length ? K : void 0,
                  Ne = [];
                if (
                  (oe(this, {
                    type: ee,
                    entries: Ne,
                    updateURL: function () {},
                    updateSearchParams: u,
                  }),
                  Te !== void 0)
                )
                  if (A(Te))
                    if (typeof (ne = N(Te)) == 'function')
                      for (
                        we = (re = ne.call(Te)).next;
                        !(X = we.call(re)).done;

                      ) {
                        if (
                          (ie = (he = (ue = R(D(X.value))).next).call(ue))
                            .done ||
                          (xe = he.call(ue)).done ||
                          !he.call(ue).done
                        )
                          throw TypeError('Expected sequence with length 2');
                        Ne.push({ key: ie.value + '', value: xe.value + '' });
                      }
                    else
                      for (je in Te)
                        M(Te, je) && Ne.push({ key: je, value: Te[je] + '' });
                  else
                    h(
                      Ne,
                      typeof Te == 'string'
                        ? Te.charAt(0) === '?'
                          ? Te.slice(1)
                          : Te
                        : Te + '',
                    );
              },
              W = U.prototype;
            d(
              W,
              {
                append: function (K, ne) {
                  o(arguments.length, 2);
                  var re = ce(this);
                  re.entries.push({ key: K + '', value: ne + '' }),
                    re.updateURL();
                },
                delete: function (K) {
                  o(arguments.length, 1);
                  for (
                    var ne = ce(this), re = ne.entries, we = K + '', X = 0;
                    X < re.length;

                  )
                    re[X].key === we ? re.splice(X, 1) : X++;
                  ne.updateURL();
                },
                get: function (K) {
                  o(arguments.length, 1);
                  for (
                    var ne = ce(this).entries, re = K + '', we = 0;
                    we < ne.length;
                    we++
                  )
                    if (ne[we].key === re) return ne[we].value;
                  return null;
                },
                getAll: function (K) {
                  o(arguments.length, 1);
                  for (
                    var ne = ce(this).entries, re = K + '', we = [], X = 0;
                    X < ne.length;
                    X++
                  )
                    ne[X].key === re && we.push(ne[X].value);
                  return we;
                },
                has: function (K) {
                  o(arguments.length, 1);
                  for (
                    var ne = ce(this).entries, re = K + '', we = 0;
                    we < ne.length;

                  )
                    if (ne[we++].key === re) return !0;
                  return !1;
                },
                set: function (K, ne) {
                  o(arguments.length, 1);
                  for (
                    var re,
                      we = ce(this),
                      X = we.entries,
                      ue = !1,
                      he = K + '',
                      ie = ne + '',
                      xe = 0;
                    xe < X.length;
                    xe++
                  )
                    (re = X[xe]).key === he &&
                      (ue ? X.splice(xe--, 1) : ((ue = !0), (re.value = ie)));
                  ue || X.push({ key: he, value: ie }), we.updateURL();
                },
                sort: function () {
                  var K,
                    ne,
                    re,
                    we = ce(this),
                    X = we.entries,
                    ue = X.slice();
                  for (re = X.length = 0; re < ue.length; re++) {
                    for (K = ue[re], ne = 0; ne < re; ne++)
                      if (X[ne].key > K.key) {
                        X.splice(ne, 0, K);
                        break;
                      }
                    ne === re && X.push(K);
                  }
                  we.updateURL();
                },
                forEach: function (K, ne) {
                  for (
                    var re,
                      we = ce(this).entries,
                      X = E(K, 1 < arguments.length ? ne : void 0, 3),
                      ue = 0;
                    ue < we.length;

                  )
                    X((re = we[ue++]).value, re.key, this);
                },
                keys: function () {
                  return new P(this, 'keys');
                },
                values: function () {
                  return new P(this, 'values');
                },
                entries: function () {
                  return new P(this, 'entries');
                },
              },
              { enumerable: !0 },
            ),
              a(W, $, W.entries),
              a(
                W,
                'toString',
                function () {
                  for (
                    var K, ne = ce(this).entries, re = [], we = 0;
                    we < ne.length;

                  )
                    (K = ne[we++]), re.push(l(K.key) + '=' + l(K.value));
                  return re.join('&');
                },
                { enumerable: !0 },
              ),
              g(U, ee),
              n({ global: !0, forced: !i }, { URLSearchParams: U }),
              i ||
                typeof Z != 'function' ||
                typeof J != 'function' ||
                n(
                  { global: !0, enumerable: !0, forced: !0 },
                  {
                    fetch: function (K, ne) {
                      var re,
                        we,
                        X,
                        ue = [K];
                      return (
                        1 < arguments.length &&
                          (A((re = ne)) &&
                            ((we = re.body),
                            O(we) === ee &&
                              ((X = re.headers
                                ? new J(re.headers)
                                : new J()).has('content-type') ||
                                X.set(
                                  'content-type',
                                  'application/x-www-form-urlencoded;charset=UTF-8',
                                ),
                              (re = k(re, {
                                body: L(0, String(we)),
                                headers: L(0, X),
                              })))),
                          ue.push(re)),
                        Z.apply(this, ue)
                      );
                    },
                  },
                ),
              (v.exports = { URLSearchParams: U, getState: ce });
          },
          {
            '../internals/an-instance': 9,
            '../internals/an-object': 10,
            '../internals/classof': 29,
            '../internals/create-iterator-constructor': 36,
            '../internals/create-property-descriptor': 38,
            '../internals/export': 49,
            '../internals/function-bind-context': 54,
            '../internals/get-built-in': 56,
            '../internals/get-iterator': 58,
            '../internals/get-iterator-method': 57,
            '../internals/has': 60,
            '../internals/internal-state': 70,
            '../internals/is-object': 74,
            '../internals/native-url': 84,
            '../internals/object-create': 90,
            '../internals/redefine': 108,
            '../internals/redefine-all': 107,
            '../internals/set-to-string-tag': 117,
            '../internals/well-known-symbol': 146,
            '../modules/es.array.iterator': 158,
          },
        ],
        231: [
          function (e, v, y) {
            e('../modules/es.string.iterator');
            function m(le, Re) {
              var Ge, Ie, Ye;
              if (Re.charAt(0) == '[') {
                if (
                  Re.charAt(Re.length - 1) != ']' ||
                  !(Ge = he(Re.slice(1, -1)))
                )
                  return ve;
                le.host = Ge;
              } else if (qe(le)) {
                if (((Re = k(Re)), ne.test(Re) || (Ge = ue(Re)) === null))
                  return ve;
                le.host = Ge;
              } else {
                if (re.test(Re)) return ve;
                for (Ge = '', Ie = D(Re), Ye = 0; Ye < Ie.length; Ye++)
                  Ge += Ne(Ie[Ye], ie);
                le.host = Ge;
              }
            }
            function r(le) {
              var Re, Ge, Ie, Ye;
              if (typeof le == 'number') {
                for (Re = [], Ge = 0; Ge < 4; Ge++)
                  Re.unshift(le % 256), (le = Q(le / 256));
                return Re.join('.');
              }
              if (typeof le != 'object') return le;
              for (
                Re = '',
                  Ie = (function (Pe) {
                    for (
                      var ft = null, bt = 1, xt = null, lt = 0, He = 0;
                      He < 8;
                      He++
                    )
                      Pe[He] !== 0
                        ? (bt < lt && ((ft = xt), (bt = lt)),
                          (xt = null),
                          (lt = 0))
                        : (xt === null && (xt = He), ++lt);
                    return bt < lt && ((ft = xt), (bt = lt)), ft;
                  })(le),
                  Ge = 0;
                Ge < 8;
                Ge++
              )
                (Ye && le[Ge] === 0) ||
                  ((Ye = Ye && !1),
                  Ie === Ge
                    ? ((Re += Ge ? ':' : '::'), (Ye = !0))
                    : ((Re += le[Ge].toString(16)), Ge < 7 && (Re += ':')));
              return '[' + Re + ']';
            }
            function c(le) {
              return le.username != '' || le.password != '';
            }
            function l(le) {
              return !le.host || le.cannotBeABaseURL || le.scheme == 'file';
            }
            function h(le, Re) {
              var Ge;
              return (
                le.length == 2 &&
                Se.test(le.charAt(0)) &&
                ((Ge = le.charAt(1)) == ':' || (!Re && Ge == '|'))
              );
            }
            function u(le) {
              var Re;
              return (
                1 < le.length &&
                h(le.slice(0, 2)) &&
                (le.length == 2 ||
                  (Re = le.charAt(2)) === '/' ||
                  Re === '\\' ||
                  Re === '?' ||
                  Re === '#')
              );
            }
            function o(le) {
              var Re = le.path,
                Ge = Re.length;
              !Ge ||
                (le.scheme == 'file' && Ge == 1 && h(Re[0], !0)) ||
                Re.pop();
            }
            function n(le, Re, Ge, Ie) {
              var Ye,
                Pe,
                ft,
                bt,
                xt,
                lt,
                He = Ge || Fe,
                Rt = 0,
                tt = '',
                Qn = !1,
                un = !1,
                Jn = !1;
              for (
                Ge ||
                  ((le.scheme = ''),
                  (le.username = ''),
                  (le.password = ''),
                  (le.host = null),
                  (le.port = null),
                  (le.path = []),
                  (le.query = null),
                  (le.fragment = null),
                  (le.cannotBeABaseURL = !1),
                  (Re = Re.replace(we, ''))),
                  Re = Re.replace(X, ''),
                  Ye = D(Re);
                Rt <= Ye.length;

              ) {
                switch (((Pe = Ye[Rt]), He)) {
                  case Fe:
                    if (!Pe || !Se.test(Pe)) {
                      if (Ge) return ce;
                      He = ke;
                      continue;
                    }
                    (tt += Pe.toLowerCase()), (He = nt);
                    break;
                  case nt:
                    if (
                      Pe &&
                      (fe.test(Pe) || Pe == '+' || Pe == '-' || Pe == '.')
                    )
                      tt += Pe.toLowerCase();
                    else {
                      if (Pe != ':') {
                        if (Ge) return ce;
                        (tt = ''), (He = ke), (Rt = 0);
                        continue;
                      }
                      if (
                        Ge &&
                        (qe(le) != E(ze, tt) ||
                          (tt == 'file' && (c(le) || le.port !== null)) ||
                          (le.scheme == 'file' && !le.host))
                      )
                        return;
                      if (((le.scheme = tt), Ge))
                        return void (
                          qe(le) &&
                          ze[le.scheme] == le.port &&
                          (le.port = null)
                        );
                      (tt = ''),
                        le.scheme == 'file'
                          ? (He = _e)
                          : qe(le) && Ie && Ie.scheme == le.scheme
                          ? (He = Ae)
                          : qe(le)
                          ? (He = Qe)
                          : Ye[Rt + 1] == '/'
                          ? ((He = Ve), Rt++)
                          : ((le.cannotBeABaseURL = !0),
                            le.path.push(''),
                            (He = Ke));
                    }
                    break;
                  case ke:
                    if (!Ie || (Ie.cannotBeABaseURL && Pe != '#')) return ce;
                    if (Ie.cannotBeABaseURL && Pe == '#') {
                      (le.scheme = Ie.scheme),
                        (le.path = Ie.path.slice()),
                        (le.query = Ie.query),
                        (le.fragment = ''),
                        (le.cannotBeABaseURL = !0),
                        (He = at);
                      break;
                    }
                    He = Ie.scheme == 'file' ? _e : We;
                    continue;
                  case Ae:
                    if (Pe != '/' || Ye[Rt + 1] != '/') {
                      He = We;
                      continue;
                    }
                    (He = G), Rt++;
                    break;
                  case Ve:
                    if (Pe == '/') {
                      He = z;
                      break;
                    }
                    He = Be;
                    continue;
                  case We:
                    if (((le.scheme = Ie.scheme), Pe == i))
                      (le.username = Ie.username),
                        (le.password = Ie.password),
                        (le.host = Ie.host),
                        (le.port = Ie.port),
                        (le.path = Ie.path.slice()),
                        (le.query = Ie.query);
                    else if (Pe == '/' || (Pe == '\\' && qe(le))) He = ge;
                    else if (Pe == '?')
                      (le.username = Ie.username),
                        (le.password = Ie.password),
                        (le.host = Ie.host),
                        (le.port = Ie.port),
                        (le.path = Ie.path.slice()),
                        (le.query = ''),
                        (He = st);
                    else {
                      if (Pe != '#') {
                        (le.username = Ie.username),
                          (le.password = Ie.password),
                          (le.host = Ie.host),
                          (le.port = Ie.port),
                          (le.path = Ie.path.slice()),
                          le.path.pop(),
                          (He = Be);
                        continue;
                      }
                      (le.username = Ie.username),
                        (le.password = Ie.password),
                        (le.host = Ie.host),
                        (le.port = Ie.port),
                        (le.path = Ie.path.slice()),
                        (le.query = Ie.query),
                        (le.fragment = ''),
                        (He = at);
                    }
                    break;
                  case ge:
                    if (!qe(le) || (Pe != '/' && Pe != '\\')) {
                      if (Pe != '/') {
                        (le.username = Ie.username),
                          (le.password = Ie.password),
                          (le.host = Ie.host),
                          (le.port = Ie.port),
                          (He = Be);
                        continue;
                      }
                      He = z;
                    } else He = G;
                    break;
                  case Qe:
                    if (((He = G), Pe != '/' || tt.charAt(Rt + 1) != '/'))
                      continue;
                    Rt++;
                    break;
                  case G:
                    if (Pe == '/' || Pe == '\\') break;
                    He = z;
                    continue;
                  case z:
                    if (Pe == '@') {
                      Qn && (tt = '%40' + tt), (Qn = !0), (ft = D(tt));
                      for (var Kn = 0; Kn < ft.length; Kn++) {
                        var es = ft[Kn];
                        if (es != ':' || Jn) {
                          var On = Ne(es, Te);
                          Jn ? (le.password += On) : (le.username += On);
                        } else Jn = !0;
                      }
                      tt = '';
                    } else if (
                      Pe == i ||
                      Pe == '/' ||
                      Pe == '?' ||
                      Pe == '#' ||
                      (Pe == '\\' && qe(le))
                    ) {
                      if (Qn && tt == '') return 'Invalid authority';
                      (Rt -= D(tt).length + 1), (tt = ''), (He = V);
                    } else tt += Pe;
                    break;
                  case V:
                  case H:
                    if (Ge && le.scheme == 'file') {
                      He = De;
                      continue;
                    }
                    if (Pe != ':' || un) {
                      if (
                        Pe == i ||
                        Pe == '/' ||
                        Pe == '?' ||
                        Pe == '#' ||
                        (Pe == '\\' && qe(le))
                      ) {
                        if (qe(le) && tt == '') return ve;
                        if (Ge && tt == '' && (c(le) || le.port !== null))
                          return;
                        if ((bt = m(le, tt))) return bt;
                        if (((tt = ''), (He = me), Ge)) return;
                        continue;
                      }
                      Pe == '[' ? (un = !0) : Pe == ']' && (un = !1),
                        (tt += Pe);
                    } else {
                      if (tt == '') return ve;
                      if ((bt = m(le, tt))) return bt;
                      if (((tt = ''), (He = ae), Ge == H)) return;
                    }
                    break;
                  case ae:
                    if (!ye.test(Pe)) {
                      if (
                        Pe == i ||
                        Pe == '/' ||
                        Pe == '?' ||
                        Pe == '#' ||
                        (Pe == '\\' && qe(le)) ||
                        Ge
                      ) {
                        if (tt != '') {
                          var An = parseInt(tt, 10);
                          if (65535 < An) return de;
                          (le.port =
                            qe(le) && An === ze[le.scheme] ? null : An),
                            (tt = '');
                        }
                        if (Ge) return;
                        He = me;
                        continue;
                      }
                      return de;
                    }
                    tt += Pe;
                    break;
                  case _e:
                    if (((le.scheme = 'file'), Pe == '/' || Pe == '\\'))
                      He = Ee;
                    else {
                      if (!Ie || Ie.scheme != 'file') {
                        He = Be;
                        continue;
                      }
                      if (Pe == i)
                        (le.host = Ie.host),
                          (le.path = Ie.path.slice()),
                          (le.query = Ie.query);
                      else if (Pe == '?')
                        (le.host = Ie.host),
                          (le.path = Ie.path.slice()),
                          (le.query = ''),
                          (He = st);
                      else {
                        if (Pe != '#') {
                          u(Ye.slice(Rt).join('')) ||
                            ((le.host = Ie.host),
                            (le.path = Ie.path.slice()),
                            o(le)),
                            (He = Be);
                          continue;
                        }
                        (le.host = Ie.host),
                          (le.path = Ie.path.slice()),
                          (le.query = Ie.query),
                          (le.fragment = ''),
                          (He = at);
                      }
                    }
                    break;
                  case Ee:
                    if (Pe == '/' || Pe == '\\') {
                      He = De;
                      break;
                    }
                    Ie &&
                      Ie.scheme == 'file' &&
                      !u(Ye.slice(Rt).join('')) &&
                      (h(Ie.path[0], !0)
                        ? le.path.push(Ie.path[0])
                        : (le.host = Ie.host)),
                      (He = Be);
                    continue;
                  case De:
                    if (
                      Pe == i ||
                      Pe == '/' ||
                      Pe == '\\' ||
                      Pe == '?' ||
                      Pe == '#'
                    ) {
                      if (!Ge && h(tt)) He = Be;
                      else if (tt == '') {
                        if (((le.host = ''), Ge)) return;
                        He = me;
                      } else {
                        if ((bt = m(le, tt))) return bt;
                        if ((le.host == 'localhost' && (le.host = ''), Ge))
                          return;
                        (tt = ''), (He = me);
                      }
                      continue;
                    }
                    tt += Pe;
                    break;
                  case me:
                    if (qe(le)) {
                      if (((He = Be), Pe != '/' && Pe != '\\')) continue;
                    } else if (Ge || Pe != '?')
                      if (Ge || Pe != '#') {
                        if (Pe != i && ((He = Be), Pe != '/')) continue;
                      } else (le.fragment = ''), (He = at);
                    else (le.query = ''), (He = st);
                    break;
                  case Be:
                    if (
                      Pe == i ||
                      Pe == '/' ||
                      (Pe == '\\' && qe(le)) ||
                      (!Ge && (Pe == '?' || Pe == '#'))
                    ) {
                      if (
                        ((lt = (lt = tt).toLowerCase()) === '..' ||
                        lt === '%2e.' ||
                        lt === '.%2e' ||
                        lt === '%2e%2e'
                          ? (o(le),
                            Pe == '/' ||
                              (Pe == '\\' && qe(le)) ||
                              le.path.push(''))
                          : (xt = tt) === '.' || xt.toLowerCase() === '%2e'
                          ? Pe == '/' ||
                            (Pe == '\\' && qe(le)) ||
                            le.path.push('')
                          : (le.scheme == 'file' &&
                              !le.path.length &&
                              h(tt) &&
                              (le.host && (le.host = ''),
                              (tt = tt.charAt(0) + ':')),
                            le.path.push(tt)),
                        (tt = ''),
                        le.scheme == 'file' &&
                          (Pe == i || Pe == '?' || Pe == '#'))
                      )
                        for (; 1 < le.path.length && le.path[0] === ''; )
                          le.path.shift();
                      Pe == '?'
                        ? ((le.query = ''), (He = st))
                        : Pe == '#' && ((le.fragment = ''), (He = at));
                    } else tt += Ne(Pe, je);
                    break;
                  case Ke:
                    Pe == '?'
                      ? ((le.query = ''), (He = st))
                      : Pe == '#'
                      ? ((le.fragment = ''), (He = at))
                      : Pe != i && (le.path[0] += Ne(Pe, ie));
                    break;
                  case st:
                    Ge || Pe != '#'
                      ? Pe != i &&
                        (Pe == "'" && qe(le)
                          ? (le.query += '%27')
                          : (le.query += Pe == '#' ? '%23' : Ne(Pe, ie)))
                      : ((le.fragment = ''), (He = at));
                    break;
                  case at:
                    Pe != i && (le.fragment += Ne(Pe, xe));
                }
                Rt++;
              }
            }
            function s(le, Re) {
              return { get: le, set: Re, configurable: !0, enumerable: !0 };
            }
            var i,
              a = e('../internals/export'),
              d = e('../internals/descriptors'),
              g = e('../internals/native-url'),
              _ = e('../internals/global'),
              w = e('../internals/object-define-properties'),
              S = e('../internals/redefine'),
              M = e('../internals/an-instance'),
              E = e('../internals/has'),
              O = e('../internals/object-assign'),
              D = e('../internals/array-from'),
              A = e('../internals/string-multibyte').codeAt,
              k = e('../internals/string-punycode-to-ascii'),
              L = e('../internals/set-to-string-tag'),
              R = e('../modules/web.url-search-params'),
              N = e('../internals/internal-state'),
              B = _.URL,
              Z = R.URLSearchParams,
              J = R.getState,
              $ = N.set,
              ee = N.getterFor('URL'),
              Q = Math.floor,
              oe = Math.pow,
              ce = 'Invalid scheme',
              ve = 'Invalid host',
              de = 'Invalid port',
              Se = /[A-Za-z]/,
              fe = /[\d+-.A-Za-z]/,
              ye = /\d/,
              P = /^(0x|0X)/,
              U = /^[0-7]+$/,
              W = /^\d+$/,
              K = /^[\dA-Fa-f]+$/,
              ne = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,
              re = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/,
              we = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,
              X = /[\u0009\u000A\u000D]/g,
              ue = function (le) {
                var Re,
                  Ge,
                  Ie,
                  Ye,
                  Pe,
                  ft,
                  bt,
                  xt = le.split('.');
                if (
                  (xt.length && xt[xt.length - 1] == '' && xt.pop(),
                  4 < (Re = xt.length))
                )
                  return le;
                for (Ge = [], Ie = 0; Ie < Re; Ie++) {
                  if ((Ye = xt[Ie]) == '') return le;
                  if (
                    ((Pe = 10),
                    1 < Ye.length &&
                      Ye.charAt(0) == '0' &&
                      ((Pe = P.test(Ye) ? 16 : 8),
                      (Ye = Ye.slice(Pe == 8 ? 1 : 2))),
                    Ye === '')
                  )
                    ft = 0;
                  else {
                    if (!(Pe == 10 ? W : Pe == 8 ? U : K).test(Ye)) return le;
                    ft = parseInt(Ye, Pe);
                  }
                  Ge.push(ft);
                }
                for (Ie = 0; Ie < Re; Ie++)
                  if (((ft = Ge[Ie]), Ie == Re - 1)) {
                    if (ft >= oe(256, 5 - Re)) return null;
                  } else if (255 < ft) return null;
                for (bt = Ge.pop(), Ie = 0; Ie < Ge.length; Ie++)
                  bt += Ge[Ie] * oe(256, 3 - Ie);
                return bt;
              },
              he = function (le) {
                function Re() {
                  return le.charAt(tt);
                }
                var Ge,
                  Ie,
                  Ye,
                  Pe,
                  ft,
                  bt,
                  xt,
                  lt = [0, 0, 0, 0, 0, 0, 0, 0],
                  He = 0,
                  Rt = null,
                  tt = 0;
                if (Re() == ':') {
                  if (le.charAt(1) != ':') return;
                  (tt += 2), (Rt = ++He);
                }
                for (; Re(); ) {
                  if (He == 8) return;
                  if (Re() != ':') {
                    for (Ge = Ie = 0; Ie < 4 && K.test(Re()); )
                      (Ge = 16 * Ge + parseInt(Re(), 16)), tt++, Ie++;
                    if (Re() == '.') {
                      if (Ie == 0 || ((tt -= Ie), 6 < He)) return;
                      for (Ye = 0; Re(); ) {
                        if (((Pe = null), 0 < Ye)) {
                          if (!(Re() == '.' && Ye < 4)) return;
                          tt++;
                        }
                        if (!ye.test(Re())) return;
                        for (; ye.test(Re()); ) {
                          if (((ft = parseInt(Re(), 10)), Pe === null)) Pe = ft;
                          else {
                            if (Pe == 0) return;
                            Pe = 10 * Pe + ft;
                          }
                          if (255 < Pe) return;
                          tt++;
                        }
                        (lt[He] = 256 * lt[He] + Pe),
                          (++Ye != 2 && Ye != 4) || He++;
                      }
                      if (Ye != 4) return;
                      break;
                    }
                    if (Re() == ':') {
                      if ((tt++, !Re())) return;
                    } else if (Re()) return;
                    lt[He++] = Ge;
                  } else {
                    if (Rt !== null) return;
                    tt++, (Rt = ++He);
                  }
                }
                if (Rt !== null)
                  for (bt = He - Rt, He = 7; He != 0 && 0 < bt; )
                    (xt = lt[He]),
                      (lt[He--] = lt[Rt + bt - 1]),
                      (lt[Rt + --bt] = xt);
                else if (He != 8) return;
                return lt;
              },
              ie = {},
              xe = O({}, ie, { ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1 }),
              je = O({}, xe, { '#': 1, '?': 1, '{': 1, '}': 1 }),
              Te = O({}, je, {
                '/': 1,
                ':': 1,
                ';': 1,
                '=': 1,
                '@': 1,
                '[': 1,
                '\\': 1,
                ']': 1,
                '^': 1,
                '|': 1,
              }),
              Ne = function (le, Re) {
                var Ge = A(le, 0);
                return 32 < Ge && Ge < 127 && !E(Re, le)
                  ? le
                  : encodeURIComponent(le);
              },
              ze = {
                ftp: 21,
                file: null,
                http: 80,
                https: 443,
                ws: 80,
                wss: 443,
              },
              qe = function (le) {
                return E(ze, le.scheme);
              },
              Fe = {},
              nt = {},
              ke = {},
              Ae = {},
              Ve = {},
              We = {},
              ge = {},
              Qe = {},
              G = {},
              z = {},
              V = {},
              H = {},
              ae = {},
              _e = {},
              Ee = {},
              De = {},
              me = {},
              Be = {},
              Ke = {},
              st = {},
              at = {},
              ot = function (le, Re) {
                var Ge,
                  Ie,
                  Ye = M(this, ot, 'URL'),
                  Pe = 1 < arguments.length ? Re : void 0,
                  ft = String(le),
                  bt = $(Ye, { type: 'URL' });
                if (Pe !== void 0) {
                  if (Pe instanceof ot) Ge = ee(Pe);
                  else if ((Ie = n((Ge = {}), String(Pe)))) throw TypeError(Ie);
                }
                if ((Ie = n(bt, ft, null, Ge))) throw TypeError(Ie);
                var xt = (bt.searchParams = new Z()),
                  lt = J(xt);
                lt.updateSearchParams(bt.query),
                  (lt.updateURL = function () {
                    bt.query = String(xt) || null;
                  }),
                  d ||
                    ((Ye.href = gt.call(Ye)),
                    (Ye.origin = Sr.call(Ye)),
                    (Ye.protocol = tr.call(Ye)),
                    (Ye.username = rn.call(Ye)),
                    (Ye.password = Dr.call(Ye)),
                    (Ye.host = Tr.call(Ye)),
                    (Ye.hostname = nn.call(Ye)),
                    (Ye.port = sn.call(Ye)),
                    (Ye.pathname = on.call(Ye)),
                    (Ye.search = an.call(Ye)),
                    (Ye.searchParams = ln.call(Ye)),
                    (Ye.hash = Cn.call(Ye)));
              },
              it = ot.prototype,
              gt = function () {
                var le = ee(this),
                  Re = le.scheme,
                  Ge = le.username,
                  Ie = le.password,
                  Ye = le.host,
                  Pe = le.port,
                  ft = le.path,
                  bt = le.query,
                  xt = le.fragment,
                  lt = Re + ':';
                return (
                  Ye !== null
                    ? ((lt += '//'),
                      c(le) && (lt += Ge + (Ie ? ':' + Ie : '') + '@'),
                      (lt += r(Ye)),
                      Pe !== null && (lt += ':' + Pe))
                    : Re == 'file' && (lt += '//'),
                  (lt += le.cannotBeABaseURL
                    ? ft[0]
                    : ft.length
                    ? '/' + ft.join('/')
                    : ''),
                  bt !== null && (lt += '?' + bt),
                  xt !== null && (lt += '#' + xt),
                  lt
                );
              },
              Sr = function () {
                var le = ee(this),
                  Re = le.scheme,
                  Ge = le.port;
                if (Re == 'blob')
                  try {
                    return new URL(Re.path[0]).origin;
                  } catch {
                    return 'null';
                  }
                return Re != 'file' && qe(le)
                  ? Re + '://' + r(le.host) + (Ge !== null ? ':' + Ge : '')
                  : 'null';
              },
              tr = function () {
                return ee(this).scheme + ':';
              },
              rn = function () {
                return ee(this).username;
              },
              Dr = function () {
                return ee(this).password;
              },
              Tr = function () {
                var le = ee(this),
                  Re = le.host,
                  Ge = le.port;
                return Re === null
                  ? ''
                  : Ge === null
                  ? r(Re)
                  : r(Re) + ':' + Ge;
              },
              nn = function () {
                var le = ee(this).host;
                return le === null ? '' : r(le);
              },
              sn = function () {
                var le = ee(this).port;
                return le === null ? '' : String(le);
              },
              on = function () {
                var le = ee(this),
                  Re = le.path;
                return le.cannotBeABaseURL
                  ? Re[0]
                  : Re.length
                  ? '/' + Re.join('/')
                  : '';
              },
              an = function () {
                var le = ee(this).query;
                return le ? '?' + le : '';
              },
              ln = function () {
                return ee(this).searchParams;
              },
              Cn = function () {
                var le = ee(this).fragment;
                return le ? '#' + le : '';
              };
            if (
              (d &&
                w(it, {
                  href: s(gt, function (le) {
                    var Re = ee(this),
                      Ge = String(le),
                      Ie = n(Re, Ge);
                    if (Ie) throw TypeError(Ie);
                    J(Re.searchParams).updateSearchParams(Re.query);
                  }),
                  origin: s(Sr),
                  protocol: s(tr, function (le) {
                    var Re = ee(this);
                    n(Re, String(le) + ':', Fe);
                  }),
                  username: s(rn, function (le) {
                    var Re = ee(this),
                      Ge = D(String(le));
                    if (!l(Re)) {
                      Re.username = '';
                      for (var Ie = 0; Ie < Ge.length; Ie++)
                        Re.username += Ne(Ge[Ie], Te);
                    }
                  }),
                  password: s(Dr, function (le) {
                    var Re = ee(this),
                      Ge = D(String(le));
                    if (!l(Re)) {
                      Re.password = '';
                      for (var Ie = 0; Ie < Ge.length; Ie++)
                        Re.password += Ne(Ge[Ie], Te);
                    }
                  }),
                  host: s(Tr, function (le) {
                    var Re = ee(this);
                    Re.cannotBeABaseURL || n(Re, String(le), V);
                  }),
                  hostname: s(nn, function (le) {
                    var Re = ee(this);
                    Re.cannotBeABaseURL || n(Re, String(le), H);
                  }),
                  port: s(sn, function (le) {
                    var Re = ee(this);
                    l(Re) ||
                      ((le = String(le)) == ''
                        ? (Re.port = null)
                        : n(Re, le, ae));
                  }),
                  pathname: s(on, function (le) {
                    var Re = ee(this);
                    Re.cannotBeABaseURL || ((Re.path = []), n(Re, le + '', me));
                  }),
                  search: s(an, function (le) {
                    var Re = ee(this);
                    (le = String(le)) == ''
                      ? (Re.query = null)
                      : (le.charAt(0) == '?' && (le = le.slice(1)),
                        (Re.query = ''),
                        n(Re, le, st)),
                      J(Re.searchParams).updateSearchParams(Re.query);
                  }),
                  searchParams: s(ln),
                  hash: s(Cn, function (le) {
                    var Re = ee(this);
                    (le = String(le)) != ''
                      ? (le.charAt(0) == '#' && (le = le.slice(1)),
                        (Re.fragment = ''),
                        n(Re, le, at))
                      : (Re.fragment = null);
                  }),
                }),
              S(
                it,
                'toJSON',
                function () {
                  return gt.call(this);
                },
                { enumerable: !0 },
              ),
              S(
                it,
                'toString',
                function () {
                  return gt.call(this);
                },
                { enumerable: !0 },
              ),
              B)
            ) {
              var qr = B.createObjectURL,
                zr = B.revokeObjectURL;
              qr &&
                S(ot, 'createObjectURL', function (le) {
                  return qr.apply(B, arguments);
                }),
                zr &&
                  S(ot, 'revokeObjectURL', function (le) {
                    return zr.apply(B, arguments);
                  });
            }
            L(ot, 'URL'), a({ global: !0, forced: !g, sham: !d }, { URL: ot });
          },
          {
            '../internals/an-instance': 9,
            '../internals/array-from': 17,
            '../internals/descriptors': 42,
            '../internals/export': 49,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/internal-state': 70,
            '../internals/native-url': 84,
            '../internals/object-assign': 89,
            '../internals/object-define-properties': 91,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
            '../internals/string-multibyte': 123,
            '../internals/string-punycode-to-ascii': 124,
            '../modules/es.string.iterator': 186,
            '../modules/web.url-search-params': 230,
          },
        ],
        232: [
          function (e, v, y) {
            v.exports = e('./').polyfill();
          },
          { './': 233 },
        ],
        233: [
          function (e, v, y) {
            (function (m, r) {
              var c, l;
              (c = this),
                (l = function () {
                  function h(X) {
                    return typeof X == 'function';
                  }
                  var u = Array.isArray
                      ? Array.isArray
                      : function (X) {
                          return (
                            Object.prototype.toString.call(X) ===
                            '[object Array]'
                          );
                        },
                    o = 0,
                    n = void 0,
                    s = void 0,
                    i = function (X, ue) {
                      (M[o] = X),
                        (M[o + 1] = ue),
                        (o += 2) === 2 && (s ? s(E) : L());
                    },
                    a = typeof window < 'u' ? window : void 0,
                    d = a || {},
                    g = d.MutationObserver || d.WebKitMutationObserver,
                    _ =
                      typeof self > 'u' &&
                      m !== void 0 &&
                      {}.toString.call(m) === '[object process]',
                    w =
                      typeof Uint8ClampedArray < 'u' &&
                      typeof importScripts < 'u' &&
                      typeof MessageChannel < 'u';
                  function S() {
                    var X = setTimeout;
                    return function () {
                      return X(E, 1);
                    };
                  }
                  var M = new Array(1e3);
                  function E() {
                    for (var X = 0; X < o; X += 2)
                      (0, M[X])(M[X + 1]), (M[X] = void 0), (M[X + 1] = void 0);
                    o = 0;
                  }
                  var O,
                    D,
                    A,
                    k,
                    L = void 0;
                  function R(X, ue) {
                    var he = this,
                      ie = new this.constructor(Z);
                    ie[B] === void 0 && W(ie);
                    var xe = he._state;
                    if (xe) {
                      var je = arguments[xe - 1];
                      i(function () {
                        return P(xe, ie, je, he._result);
                      });
                    } else fe(he, ie, X, ue);
                    return ie;
                  }
                  function N(X) {
                    if (X && typeof X == 'object' && X.constructor === this)
                      return X;
                    var ue = new this(Z);
                    return ce(ue, X), ue;
                  }
                  L = _
                    ? function () {
                        return m.nextTick(E);
                      }
                    : g
                    ? ((D = 0),
                      (A = new g(E)),
                      (k = document.createTextNode('')),
                      A.observe(k, { characterData: !0 }),
                      function () {
                        k.data = D = ++D % 2;
                      })
                    : w
                    ? (((O = new MessageChannel()).port1.onmessage = E),
                      function () {
                        return O.port2.postMessage(0);
                      })
                    : a === void 0 && typeof e == 'function'
                    ? (function () {
                        try {
                          var X = Function('return this')().require('vertx');
                          return (n = X.runOnLoop || X.runOnContext) !== void 0
                            ? function () {
                                n(E);
                              }
                            : S();
                        } catch {
                          return S();
                        }
                      })()
                    : S();
                  var B = Math.random().toString(36).substring(2);
                  function Z() {}
                  var J = void 0,
                    $ = 1,
                    ee = 2;
                  function Q(X, ue, he) {
                    i(function (ie) {
                      var xe = !1,
                        je = (function (Te, Ne, ze, qe) {
                          try {
                            Te.call(Ne, ze, qe);
                          } catch (Fe) {
                            return Fe;
                          }
                        })(
                          he,
                          ue,
                          function (Te) {
                            xe ||
                              ((xe = !0), ue !== Te ? ce(ie, Te) : de(ie, Te));
                          },
                          function (Te) {
                            xe || ((xe = !0), Se(ie, Te));
                          },
                          ie._label,
                        );
                      !xe && je && ((xe = !0), Se(ie, je));
                    }, X);
                  }
                  function oe(X, ue, he) {
                    var ie, xe;
                    ue.constructor === X.constructor &&
                    he === R &&
                    ue.constructor.resolve === N
                      ? ((ie = X),
                        (xe = ue)._state === $
                          ? de(ie, xe._result)
                          : xe._state === ee
                          ? Se(ie, xe._result)
                          : fe(
                              xe,
                              void 0,
                              function (je) {
                                return ce(ie, je);
                              },
                              function (je) {
                                return Se(ie, je);
                              },
                            ))
                      : he === void 0
                      ? de(X, ue)
                      : h(he)
                      ? Q(X, ue, he)
                      : de(X, ue);
                  }
                  function ce(X, ue) {
                    if (X === ue)
                      Se(
                        X,
                        new TypeError(
                          'You cannot resolve a promise with itself',
                        ),
                      );
                    else if (
                      ((xe = typeof (ie = ue)),
                      ie === null || (xe != 'object' && xe != 'function'))
                    )
                      de(X, ue);
                    else {
                      var he = void 0;
                      try {
                        he = ue.then;
                      } catch (je) {
                        return void Se(X, je);
                      }
                      oe(X, ue, he);
                    }
                    var ie, xe;
                  }
                  function ve(X) {
                    X._onerror && X._onerror(X._result), ye(X);
                  }
                  function de(X, ue) {
                    X._state === J &&
                      ((X._result = ue),
                      (X._state = $),
                      X._subscribers.length !== 0 && i(ye, X));
                  }
                  function Se(X, ue) {
                    X._state === J &&
                      ((X._state = ee), (X._result = ue), i(ve, X));
                  }
                  function fe(X, ue, he, ie) {
                    var xe = X._subscribers,
                      je = xe.length;
                    (X._onerror = null),
                      (xe[je] = ue),
                      (xe[je + $] = he),
                      (xe[je + ee] = ie),
                      je === 0 && X._state && i(ye, X);
                  }
                  function ye(X) {
                    var ue = X._subscribers,
                      he = X._state;
                    if (ue.length !== 0) {
                      for (
                        var ie = void 0, xe = void 0, je = X._result, Te = 0;
                        Te < ue.length;
                        Te += 3
                      )
                        (ie = ue[Te]),
                          (xe = ue[Te + he]),
                          ie ? P(he, ie, xe, je) : xe(je);
                      X._subscribers.length = 0;
                    }
                  }
                  function P(X, ue, he, ie) {
                    var xe = h(he),
                      je = void 0,
                      Te = void 0,
                      Ne = !0;
                    if (xe) {
                      try {
                        je = he(ie);
                      } catch (ze) {
                        (Ne = !1), (Te = ze);
                      }
                      if (ue === je)
                        return void Se(
                          ue,
                          new TypeError(
                            'A promises callback cannot return that same promise.',
                          ),
                        );
                    } else je = ie;
                    ue._state !== J ||
                      (xe && Ne
                        ? ce(ue, je)
                        : Ne === !1
                        ? Se(ue, Te)
                        : X === $
                        ? de(ue, je)
                        : X === ee && Se(ue, je));
                  }
                  var U = 0;
                  function W(X) {
                    (X[B] = U++),
                      (X._state = void 0),
                      (X._result = void 0),
                      (X._subscribers = []);
                  }
                  var K =
                    ((ne.prototype._enumerate = function (X) {
                      for (var ue = 0; this._state === J && ue < X.length; ue++)
                        this._eachEntry(X[ue], ue);
                    }),
                    (ne.prototype._eachEntry = function (X, ue) {
                      var he = this._instanceConstructor,
                        ie = he.resolve;
                      if (ie === N) {
                        var xe = void 0,
                          je = void 0,
                          Te = !1;
                        try {
                          xe = X.then;
                        } catch (ze) {
                          (Te = !0), (je = ze);
                        }
                        if (xe === R && X._state !== J)
                          this._settledAt(X._state, ue, X._result);
                        else if (typeof xe != 'function')
                          this._remaining--, (this._result[ue] = X);
                        else if (he === re) {
                          var Ne = new he(Z);
                          Te ? Se(Ne, je) : oe(Ne, X, xe),
                            this._willSettleAt(Ne, ue);
                        } else
                          this._willSettleAt(
                            new he(function (ze) {
                              return ze(X);
                            }),
                            ue,
                          );
                      } else this._willSettleAt(ie(X), ue);
                    }),
                    (ne.prototype._settledAt = function (X, ue, he) {
                      var ie = this.promise;
                      ie._state === J &&
                        (this._remaining--,
                        X === ee ? Se(ie, he) : (this._result[ue] = he)),
                        this._remaining === 0 && de(ie, this._result);
                    }),
                    (ne.prototype._willSettleAt = function (X, ue) {
                      var he = this;
                      fe(
                        X,
                        void 0,
                        function (ie) {
                          return he._settledAt($, ue, ie);
                        },
                        function (ie) {
                          return he._settledAt(ee, ue, ie);
                        },
                      );
                    }),
                    ne);
                  function ne(X, ue) {
                    (this._instanceConstructor = X),
                      (this.promise = new X(Z)),
                      this.promise[B] || W(this.promise),
                      u(ue)
                        ? ((this.length = ue.length),
                          (this._remaining = ue.length),
                          (this._result = new Array(this.length)),
                          this.length === 0
                            ? de(this.promise, this._result)
                            : ((this.length = this.length || 0),
                              this._enumerate(ue),
                              this._remaining === 0 &&
                                de(this.promise, this._result)))
                        : Se(
                            this.promise,
                            new Error(
                              'Array Methods must be provided an Array',
                            ),
                          );
                  }
                  var re =
                    ((we.prototype.catch = function (X) {
                      return this.then(null, X);
                    }),
                    (we.prototype.finally = function (X) {
                      var ue = this.constructor;
                      return h(X)
                        ? this.then(
                            function (he) {
                              return ue.resolve(X()).then(function () {
                                return he;
                              });
                            },
                            function (he) {
                              return ue.resolve(X()).then(function () {
                                throw he;
                              });
                            },
                          )
                        : this.then(X, X);
                    }),
                    we);
                  function we(X) {
                    (this[B] = U++),
                      (this._result = this._state = void 0),
                      (this._subscribers = []),
                      Z !== X &&
                        (typeof X != 'function' &&
                          (function () {
                            throw new TypeError(
                              'You must pass a resolver function as the first argument to the promise constructor',
                            );
                          })(),
                        this instanceof we
                          ? (function (ue, he) {
                              try {
                                he(
                                  function (ie) {
                                    ce(ue, ie);
                                  },
                                  function (ie) {
                                    Se(ue, ie);
                                  },
                                );
                              } catch (ie) {
                                Se(ue, ie);
                              }
                            })(this, X)
                          : (function () {
                              throw new TypeError(
                                "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.",
                              );
                            })());
                  }
                  return (
                    (re.prototype.then = R),
                    (re.all = function (X) {
                      return new K(this, X).promise;
                    }),
                    (re.race = function (X) {
                      var ue = this;
                      return u(X)
                        ? new ue(function (he, ie) {
                            for (var xe = X.length, je = 0; je < xe; je++)
                              ue.resolve(X[je]).then(he, ie);
                          })
                        : new ue(function (he, ie) {
                            return ie(
                              new TypeError('You must pass an array to race.'),
                            );
                          });
                    }),
                    (re.resolve = N),
                    (re.reject = function (X) {
                      var ue = new this(Z);
                      return Se(ue, X), ue;
                    }),
                    (re._setScheduler = function (X) {
                      s = X;
                    }),
                    (re._setAsap = function (X) {
                      i = X;
                    }),
                    (re._asap = i),
                    (re.polyfill = function () {
                      var X = void 0;
                      if (r !== void 0) X = r;
                      else if (typeof self < 'u') X = self;
                      else
                        try {
                          X = Function('return this')();
                        } catch {
                          throw new Error(
                            'polyfill failed because global object is unavailable in this environment',
                          );
                        }
                      var ue = X.Promise;
                      if (ue) {
                        var he = null;
                        try {
                          he = Object.prototype.toString.call(ue.resolve());
                        } catch {}
                        if (he === '[object Promise]' && !ue.cast) return;
                      }
                      X.Promise = re;
                    }),
                    (re.Promise = re)
                  );
                }),
                typeof y == 'object' && v !== void 0
                  ? (v.exports = l())
                  : (c.ES6Promise = l());
            }.call(
              this,
              e('_process'),
              typeof Ls < 'u'
                ? Ls
                : typeof self < 'u'
                ? self
                : typeof window < 'u'
                ? window
                : {},
            ));
          },
          { _process: 241 },
        ],
        234: [
          function (e, v, y) {
            (function (m, r) {
              if (y !== void 0 && v !== void 0) r(y, v);
              else {
                var c = { exports: {} };
                r(c.exports, c), (m.fetchJsonp = c.exports);
              }
            })(this, function (m, r) {
              var c = 5e3,
                l = 'callback';
              function h(o) {
                try {
                  delete window[o];
                } catch {
                  window[o] = void 0;
                }
              }
              function u(o) {
                var n = document.getElementById(o);
                n && document.getElementsByTagName('head')[0].removeChild(n);
              }
              r.exports = function (o) {
                var n =
                    arguments.length <= 1 || arguments[1] === void 0
                      ? {}
                      : arguments[1],
                  s = o,
                  i = n.timeout || c,
                  a = n.jsonpCallback || l,
                  d = void 0;
                return new Promise(function (g, _) {
                  var w =
                      n.jsonpCallbackFunction ||
                      'jsonp_' +
                        Date.now() +
                        '_' +
                        Math.ceil(1e5 * Math.random()),
                    S = a + '_' + w;
                  (window[w] = function (E) {
                    g({
                      ok: !0,
                      json: function () {
                        return Promise.resolve(E);
                      },
                    }),
                      d && clearTimeout(d),
                      u(S),
                      h(w);
                  }),
                    (s += s.indexOf('?') === -1 ? '?' : '&');
                  var M = document.createElement('script');
                  M.setAttribute('src', '' + s + a + '=' + w),
                    n.charset && M.setAttribute('charset', n.charset),
                    (M.id = S),
                    document.getElementsByTagName('head')[0].appendChild(M),
                    (d = setTimeout(function () {
                      _(new Error('JSONP request to ' + o + ' timed out')),
                        h(w),
                        u(S),
                        (window[w] = function () {
                          h(w);
                        });
                    }, i)),
                    (M.onerror = function () {
                      _(new Error('JSONP request to ' + o + ' failed')),
                        h(w),
                        u(S),
                        d && clearTimeout(d);
                    });
                });
              };
            });
          },
          {},
        ],
        235: [
          function (e, v, y) {
            var m =
              m ||
              (function (r) {
                if (
                  !(
                    r === void 0 ||
                    (typeof navigator < 'u' &&
                      /MSIE [1-9]\./.test(navigator.userAgent))
                  )
                ) {
                  var c = r.document,
                    l = function () {
                      return r.URL || r.webkitURL || r;
                    },
                    h = c.createElementNS('http://www.w3.org/1999/xhtml', 'a'),
                    u = 'download' in h,
                    o = /constructor/i.test(r.HTMLElement) || r.safari,
                    n = /CriOS\/[\d]+/.test(navigator.userAgent),
                    s = function (_) {
                      (r.setImmediate || r.setTimeout)(function () {
                        throw _;
                      }, 0);
                    },
                    i = function (_) {
                      setTimeout(function () {
                        typeof _ == 'string'
                          ? l().revokeObjectURL(_)
                          : _.remove();
                      }, 4e4);
                    },
                    a = function (_) {
                      return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
                        _.type,
                      )
                        ? new Blob([String.fromCharCode(65279), _], {
                            type: _.type,
                          })
                        : _;
                    },
                    d = function (_, w, S) {
                      S || (_ = a(_));
                      function M() {
                        (function (A, k, L) {
                          for (var R = (k = [].concat(k)).length; R--; ) {
                            var N = A['on' + k[R]];
                            if (typeof N == 'function')
                              try {
                                N.call(A, L || A);
                              } catch (B) {
                                s(B);
                              }
                          }
                        })(O, 'writestart progress write writeend'.split(' '));
                      }
                      var E,
                        O = this,
                        D = _.type === 'application/octet-stream';
                      if (((O.readyState = O.INIT), u))
                        return (
                          (E = l().createObjectURL(_)),
                          void setTimeout(function () {
                            var A, k;
                            (h.href = E),
                              (h.download = w),
                              (A = h),
                              (k = new MouseEvent('click')),
                              A.dispatchEvent(k),
                              M(),
                              i(E),
                              (O.readyState = O.DONE);
                          })
                        );
                      (function () {
                        if ((n || (D && o)) && r.FileReader) {
                          var A = new FileReader();
                          return (
                            (A.onloadend = function () {
                              var k = n
                                ? A.result
                                : A.result.replace(
                                    /^data:[^;]*;/,
                                    'data:attachment/file;',
                                  );
                              r.open(k, '_blank') || (r.location.href = k),
                                (k = void 0),
                                (O.readyState = O.DONE),
                                M();
                            }),
                            A.readAsDataURL(_),
                            (O.readyState = O.INIT)
                          );
                        }
                        (E = E || l().createObjectURL(_)),
                          D
                            ? (r.location.href = E)
                            : r.open(E, '_blank') || (r.location.href = E),
                          (O.readyState = O.DONE),
                          M(),
                          i(E);
                      })();
                    },
                    g = d.prototype;
                  return typeof navigator < 'u' && navigator.msSaveOrOpenBlob
                    ? function (_, w, S) {
                        return (
                          (w = w || _.name || 'download'),
                          S || (_ = a(_)),
                          navigator.msSaveOrOpenBlob(_, w)
                        );
                      }
                    : ((g.abort = function () {}),
                      (g.readyState = g.INIT = 0),
                      (g.WRITING = 1),
                      (g.DONE = 2),
                      (g.error =
                        g.onwritestart =
                        g.onprogress =
                        g.onwrite =
                        g.onabort =
                        g.onerror =
                        g.onwriteend =
                          null),
                      function (_, w, S) {
                        return new d(_, w || _.name || 'download', S);
                      });
                }
              })(
                (typeof self < 'u' && self) ||
                  (typeof window < 'u' && window) ||
                  this.content,
              );
            v !== void 0 && v.exports ? (v.exports.saveAs = m) : p != null;
          },
          {},
        ],
        236: [
          function (e, v, y) {
            (y.read = function (m, r, c, l, h) {
              var u,
                o,
                n = 8 * h - l - 1,
                s = (1 << n) - 1,
                i = s >> 1,
                a = -7,
                d = c ? h - 1 : 0,
                g = c ? -1 : 1,
                _ = m[r + d];
              for (
                d += g, u = _ & ((1 << -a) - 1), _ >>= -a, a += n;
                0 < a;
                u = 256 * u + m[r + d], d += g, a -= 8
              );
              for (
                o = u & ((1 << -a) - 1), u >>= -a, a += l;
                0 < a;
                o = 256 * o + m[r + d], d += g, a -= 8
              );
              if (u === 0) u = 1 - i;
              else {
                if (u === s) return o ? NaN : (1 / 0) * (_ ? -1 : 1);
                (o += Math.pow(2, l)), (u -= i);
              }
              return (_ ? -1 : 1) * o * Math.pow(2, u - l);
            }),
              (y.write = function (m, r, c, l, h, u) {
                var o,
                  n,
                  s,
                  i = 8 * u - h - 1,
                  a = (1 << i) - 1,
                  d = a >> 1,
                  g = h === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                  _ = l ? 0 : u - 1,
                  w = l ? 1 : -1,
                  S = r < 0 || (r === 0 && 1 / r < 0) ? 1 : 0;
                for (
                  r = Math.abs(r),
                    isNaN(r) || r === 1 / 0
                      ? ((n = isNaN(r) ? 1 : 0), (o = a))
                      : ((o = Math.floor(Math.log(r) / Math.LN2)),
                        r * (s = Math.pow(2, -o)) < 1 && (o--, (s *= 2)),
                        2 <=
                          (r += 1 <= o + d ? g / s : g * Math.pow(2, 1 - d)) *
                            s && (o++, (s /= 2)),
                        a <= o + d
                          ? ((n = 0), (o = a))
                          : 1 <= o + d
                          ? ((n = (r * s - 1) * Math.pow(2, h)), (o += d))
                          : ((n = r * Math.pow(2, d - 1) * Math.pow(2, h)),
                            (o = 0)));
                  8 <= h;
                  m[c + _] = 255 & n, _ += w, n /= 256, h -= 8
                );
                for (
                  o = (o << h) | n, i += h;
                  0 < i;
                  m[c + _] = 255 & o, _ += w, o /= 256, i -= 8
                );
                m[c + _ - w] |= 128 * S;
              });
          },
          {},
        ],
        237: [
          function (e, v, y) {
            var m;
            function r(G, z) {
              return G.b === z.b && G.a === z.a;
            }
            function c(G, z) {
              return G.b < z.b || (G.b === z.b && G.a <= z.a);
            }
            function l(G, z, V) {
              var H = z.b - G.b,
                ae = V.b - z.b;
              return 0 < H + ae
                ? H < ae
                  ? z.a - G.a + (H / (H + ae)) * (G.a - V.a)
                  : z.a - V.a + (ae / (H + ae)) * (V.a - G.a)
                : 0;
            }
            function h(G, z, V) {
              var H = z.b - G.b,
                ae = V.b - z.b;
              return 0 < H + ae ? (z.a - V.a) * H + (z.a - G.a) * ae : 0;
            }
            function u(G, z) {
              return G.a < z.a || (G.a === z.a && G.b <= z.b);
            }
            function o(G, z, V) {
              var H = z.a - G.a,
                ae = V.a - z.a;
              return 0 < H + ae
                ? H < ae
                  ? z.b - G.b + (H / (H + ae)) * (G.b - V.b)
                  : z.b - V.b + (ae / (H + ae)) * (V.b - G.b)
                : 0;
            }
            function n(G, z, V) {
              var H = z.a - G.a,
                ae = V.a - z.a;
              return 0 < H + ae ? (z.b - V.b) * H + (z.b - G.b) * ae : 0;
            }
            function s(G, z, V, H) {
              return (G = G < 0 ? 0 : G) <= (V = V < 0 ? 0 : V)
                ? V === 0
                  ? (z + H) / 2
                  : z + (G / (G + V)) * (H - z)
                : H + (V / (G + V)) * (z - H);
            }
            function i(G) {
              var z = w(G.b);
              return M(z, G.c), M(z.b, G.c), E(z, G.a), z;
            }
            function a(G, z) {
              var V = !1,
                H = !1;
              G !== z &&
                (z.a !== G.a && ((H = !0), D(z.a, G.a)),
                z.d !== G.d && ((V = !0), A(z.d, G.d)),
                S(z, G),
                H || (M(z, G.a), (G.a.c = G)),
                V || (E(z, G.d), (G.d.a = G)));
            }
            function d(G) {
              var z = G.b,
                V = !1;
              G.d !== G.b.d && ((V = !0), A(G.d, G.b.d)),
                G.c === G
                  ? D(G.a, null)
                  : ((G.b.d.a = ie(G)),
                    (G.a.c = G.c),
                    S(G, ie(G)),
                    V || E(G, G.d)),
                z.c === z
                  ? (D(z.a, null), A(z.d, null))
                  : ((G.d.a = ie(z)), (z.a.c = z.c), S(z, ie(z))),
                O(G);
            }
            function g(G) {
              var z = w(G),
                V = z.b;
              return (
                S(z, G.e),
                (z.a = G.b.a),
                M(V, z.a),
                (z.d = V.d = G.d),
                (z = z.b),
                S(G.b, ie(G.b)),
                S(G.b, z),
                (G.b.a = z.a),
                (z.b.a.c = z.b),
                (z.b.d = G.b.d),
                (z.f = G.f),
                (z.b.f = G.b.f),
                z
              );
            }
            function _(G, z) {
              var V = !1,
                H = w(G),
                ae = H.b;
              return (
                z.d !== G.d && ((V = !0), A(z.d, G.d)),
                S(H, G.e),
                S(ae, z),
                (H.a = G.b.a),
                (ae.a = z.a),
                (H.d = ae.d = G.d),
                (G.d.a = ae),
                V || E(H, G.d),
                H
              );
            }
            function w(G) {
              var z = new he(),
                V = new he(),
                H = G.b.h;
              return (
                ((((V.h = H).b.h = z).h = G).b.h = V),
                (z.b = V),
                (((z.c = z).e = V).b = z),
                ((V.c = V).e = z)
              );
            }
            function S(G, z) {
              var V = G.c,
                H = z.c;
              (V.b.e = z), ((H.b.e = G).c = H), (z.c = V);
            }
            function M(G, z) {
              var V = z.f,
                H = new je(z, V);
              for (V.e = H, V = (z.f = H).c = G; (V.a = H), (V = V.c) !== G; );
            }
            function E(G, z) {
              var V = z.d,
                H = new ue(z, V);
              for (
                V.b = H, (z.d = H).a = G, H.c = z.c, V = G;
                (V.d = H), (V = V.e) !== G;

              );
            }
            function O(G) {
              var z = G.h;
              (G = G.b.h), ((z.b.h = G).b.h = z);
            }
            function D(G, z) {
              for (var V = G.c, H = V; (H.a = z), (H = H.c) !== V; );
              (V = G.f), (((H = G.e).f = V).e = H);
            }
            function A(G, z) {
              for (var V = G.a, H = V; (H.d = z), (H = H.e) !== V; );
              (V = G.d), (((H = G.b).d = V).b = H);
            }
            function k(G) {
              var z = 0;
              return (
                Math.abs(G[1]) > Math.abs(G[0]) && (z = 1),
                Math.abs(G[2]) > Math.abs(G[z]) && (z = 2),
                z
              );
            }
            function L(G, z) {
              (G.f += z.f), (G.b.f += z.b.f);
            }
            function R(G, z, V) {
              return (
                (G = G.a),
                (z = z.a),
                (V = V.a),
                z.b.a === G
                  ? V.b.a === G
                    ? c(z.a, V.a)
                      ? h(V.b.a, z.a, V.a) <= 0
                      : 0 <= h(z.b.a, V.a, z.a)
                    : h(V.b.a, G, V.a) <= 0
                  : V.b.a === G
                  ? 0 <= h(z.b.a, G, z.a)
                  : ((z = l(z.b.a, G, z.a)), (G = l(V.b.a, G, V.a)) <= z)
              );
            }
            function N(G) {
              G.a.i = null;
              var z = G.e;
              (z.a.c = z.c), (z.c.a = z.a), (G.e = null);
            }
            function B(G, z) {
              d(G.a), (G.c = !1), ((G.a = z).i = G);
            }
            function Z(G) {
              for (var z = G.a.a; (G = Qe(G)).a.a === z; );
              return G.c && (B(G, (z = _(ge(G).a.b, G.a.e))), (G = Qe(G))), G;
            }
            function J(G, z, V) {
              var H = new We();
              return (H.a = V), (H.e = K(G.f, z.e, H)), (V.i = H);
            }
            function $(G, z) {
              switch (G.s) {
                case 100130:
                  return (1 & z) != 0;
                case 100131:
                  return z !== 0;
                case 100132:
                  return 0 < z;
                case 100133:
                  return z < 0;
                case 100134:
                  return 2 <= z || z <= -2;
              }
              return !1;
            }
            function ee(G) {
              var z = G.a,
                V = z.d;
              (V.c = G.d), (V.a = z), N(G);
            }
            function Q(G, z, V) {
              for (z = (G = z).a; G !== V; ) {
                G.c = !1;
                var H = ge(G),
                  ae = H.a;
                if (ae.a !== z.a) {
                  if (!H.c) {
                    ee(G);
                    break;
                  }
                  B(H, (ae = _(z.c.b, ae.b)));
                }
                z.c !== ae && (a(ie(ae), ae), a(z, ae)),
                  ee(G),
                  (z = H.a),
                  (G = H);
              }
              return z;
            }
            function oe(G, z, V, H, ae, _e) {
              for (var Ee = !0; J(G, z, V.b), (V = V.c) !== H; );
              for (
                ae === null && (ae = ge(z).a.b.c);
                (V = (H = ge(z)).a.b).a === ae.a;

              )
                V.c !== ae && (a(ie(V), V), a(ie(ae), V)),
                  (H.f = z.f - V.f),
                  (H.d = $(G, H.f)),
                  (z.b = !0),
                  !Ee && Se(G, z) && (L(V, ae), N(z), d(ae)),
                  (Ee = !1),
                  (z = H),
                  (ae = V);
              (z.b = !0), _e && ye(G, z);
            }
            function ce(G, z, V, H, ae) {
              var _e = [z.g[0], z.g[1], z.g[2]];
              (z.d = null),
                (z.d = (G.o && G.o(_e, V, H, G.c)) || null),
                z.d === null &&
                  (ae ? G.n || (X(G, 100156), (G.n = !0)) : (z.d = V[0]));
            }
            function ve(G, z, V) {
              var H = [null, null, null, null];
              (H[0] = z.a.d),
                (H[1] = V.a.d),
                ce(G, z.a, H, [0.5, 0.5, 0, 0], !1),
                a(z, V);
            }
            function de(G, z, V, H, ae) {
              var _e = Math.abs(z.b - G.b) + Math.abs(z.a - G.a),
                Ee = Math.abs(V.b - G.b) + Math.abs(V.a - G.a),
                De = ae + 1;
              (H[ae] = (0.5 * Ee) / (_e + Ee)),
                (H[De] = (0.5 * _e) / (_e + Ee)),
                (G.g[0] += H[ae] * z.g[0] + H[De] * V.g[0]),
                (G.g[1] += H[ae] * z.g[1] + H[De] * V.g[1]),
                (G.g[2] += H[ae] * z.g[2] + H[De] * V.g[2]);
            }
            function Se(G, z) {
              var V = ge(z),
                H = z.a,
                ae = V.a;
              if (c(H.a, ae.a)) {
                if (0 < h(ae.b.a, H.a, ae.a)) return !1;
                if (r(H.a, ae.a)) {
                  if (H.a !== ae.a) {
                    V = G.e;
                    var _e = H.a.h;
                    if (0 <= _e) {
                      var Ee = (V = V.b).d,
                        De = V.e,
                        me = V.c,
                        Be = me[_e];
                      (Ee[Be] = Ee[V.a]),
                        (me[Ee[Be]] = Be) <= --V.a &&
                          (Be <= 1 || c(De[Ee[Be >> 1]], De[Ee[Be]])
                            ? Ae(V, Be)
                            : Ve(V, Be)),
                        (De[_e] = null),
                        (me[_e] = V.b),
                        (V.b = _e);
                    } else
                      for (
                        V.c[-(_e + 1)] = null;
                        0 < V.a && V.c[V.d[V.a - 1]] === null;

                      )
                        --V.a;
                    ve(G, ie(ae), H);
                  }
                } else g(ae.b), a(H, ie(ae)), (z.b = V.b = !0);
              } else {
                if (h(H.b.a, ae.a, H.a) < 0) return !1;
                (Qe(z).b = z.b = !0), g(H.b), a(ie(ae), H);
              }
              return !0;
            }
            function fe(G, z) {
              var V = ge(z),
                H = z.a,
                ae = V.a,
                _e = H.a,
                Ee = ae.a,
                De = H.b.a,
                me = ae.b.a,
                Be = new je();
              if (
                (h(De, G.a, _e),
                h(me, G.a, Ee),
                _e === Ee || Math.min(_e.a, De.a) > Math.max(Ee.a, me.a))
              )
                return !1;
              if (c(_e, Ee)) {
                if (0 < h(me, _e, Ee)) return !1;
              } else if (h(De, Ee, _e) < 0) return !1;
              var Ke,
                st,
                at = De,
                ot = _e,
                it = me,
                gt = Ee;
              if (
                (c(at, ot) || ((Ke = at), (at = ot), (ot = Ke)),
                c(it, gt) || ((Ke = it), (it = gt), (gt = Ke)),
                c(at, it) ||
                  ((Ke = at),
                  (at = it),
                  (it = Ke),
                  (Ke = ot),
                  (ot = gt),
                  (gt = Ke)),
                c(it, ot)
                  ? c(ot, gt)
                    ? ((Ke = l(at, it, ot)) + (st = l(it, ot, gt)) < 0 &&
                        ((Ke = -Ke), (st = -st)),
                      (Be.b = s(Ke, it.b, st, ot.b)))
                    : ((Ke = h(at, it, ot)) + (st = -h(at, gt, ot)) < 0 &&
                        ((Ke = -Ke), (st = -st)),
                      (Be.b = s(Ke, it.b, st, gt.b)))
                  : (Be.b = (it.b + ot.b) / 2),
                u(at, ot) || ((Ke = at), (at = ot), (ot = Ke)),
                u(it, gt) || ((Ke = it), (it = gt), (gt = Ke)),
                u(at, it) ||
                  ((Ke = at),
                  (at = it),
                  (it = Ke),
                  (Ke = ot),
                  (ot = gt),
                  (gt = Ke)),
                u(it, ot)
                  ? u(ot, gt)
                    ? ((Ke = o(at, it, ot)) + (st = o(it, ot, gt)) < 0 &&
                        ((Ke = -Ke), (st = -st)),
                      (Be.a = s(Ke, it.a, st, ot.a)))
                    : ((Ke = n(at, it, ot)) + (st = -n(at, gt, ot)) < 0 &&
                        ((Ke = -Ke), (st = -st)),
                      (Be.a = s(Ke, it.a, st, gt.a)))
                  : (Be.a = (it.a + ot.a) / 2),
                c(Be, G.a) && ((Be.b = G.a.b), (Be.a = G.a.a)),
                (at = c(_e, Ee) ? _e : Ee),
                c(at, Be) && ((Be.b = at.b), (Be.a = at.a)),
                r(Be, _e) || r(Be, Ee))
              )
                return Se(G, z), !1;
              if (
                (!r(De, G.a) && 0 <= h(De, G.a, Be)) ||
                (!r(me, G.a) && h(me, G.a, Be) <= 0)
              ) {
                if (me === G.a)
                  return (
                    g(H.b),
                    a(ae.b, H),
                    (H = ge((z = Z(z))).a),
                    Q(G, ge(z), V),
                    oe(G, z, ie(H), H, H, !0),
                    !0
                  );
                if (De !== G.a)
                  return (
                    0 <= h(De, G.a, Be) &&
                      ((Qe(z).b = z.b = !0),
                      g(H.b),
                      (H.a.b = G.a.b),
                      (H.a.a = G.a.a)),
                    h(me, G.a, Be) <= 0 &&
                      ((z.b = V.b = !0),
                      g(ae.b),
                      (ae.a.b = G.a.b),
                      (ae.a.a = G.a.a)),
                    !1
                  );
                for (
                  g(ae.b), a(H.e, ie(ae)), Ee = (_e = V = z).a.b.a;
                  (_e = Qe(_e)).a.b.a === Ee;

                );
                return (
                  (_e = ge((z = _e)).a.b.c),
                  (V.a = ie(ae)),
                  oe(G, z, (ae = Q(G, V, null)).c, H.b.c, _e, !0),
                  !0
                );
              }
              return (
                g(H.b),
                g(ae.b),
                a(ie(ae), H),
                (H.a.b = Be.b),
                (H.a.a = Be.a),
                (H.a.h = Ne(G.e, H.a)),
                (H = H.a),
                (ae = [0, 0, 0, 0]),
                (Be = [_e.d, De.d, Ee.d, me.d]),
                (H.g[0] = H.g[1] = H.g[2] = 0),
                de(H, _e, De, ae, 0),
                de(H, Ee, me, ae, 2),
                ce(G, H, Be, ae, !0),
                (Qe(z).b = z.b = V.b = !0),
                !1
              );
            }
            function ye(G, z) {
              for (var V = ge(z); ; ) {
                for (; V.b; ) V = ge((z = V));
                if (!z.b && ((z = Qe((V = z))) === null || !z.b)) break;
                z.b = !1;
                var H,
                  ae = z.a,
                  _e = V.a;
                if ((H = ae.b.a !== _e.b.a))
                  e: {
                    var Ee = ge((H = z)),
                      De = H.a,
                      me = Ee.a,
                      Be = void 0;
                    if (c(De.b.a, me.b.a)) {
                      if (h(De.b.a, me.b.a, De.a) < 0) {
                        H = !1;
                        break e;
                      }
                      (Qe(H).b = H.b = !0),
                        (Be = g(De)),
                        a(me.b, Be),
                        (Be.d.c = H.d);
                    } else {
                      if (0 < h(me.b.a, De.b.a, me.a)) {
                        H = !1;
                        break e;
                      }
                      (H.b = Ee.b = !0),
                        (Be = g(me)),
                        a(De.e, me.b),
                        (Be.b.d.c = H.d);
                    }
                    H = !0;
                  }
                if (
                  (H &&
                    (V.c
                      ? (N(V), d(_e), (_e = (V = ge(z)).a))
                      : z.c && (N(z), d(ae), (ae = (z = Qe(V)).a))),
                  ae.a !== _e.a)
                ) {
                  if (
                    ae.b.a === _e.b.a ||
                    z.c ||
                    V.c ||
                    (ae.b.a !== G.a && _e.b.a !== G.a)
                  )
                    Se(G, z);
                  else if (fe(G, z)) break;
                }
                ae.a === _e.a &&
                  ae.b.a === _e.b.a &&
                  (L(_e, ae), N(z), d(ae), (z = Qe(V)));
              }
            }
            function P(G, z) {
              for (var V = (G.a = z).c; V.i === null; )
                if ((V = V.c) === z.c) {
                  V = G;
                  var H = z;
                  (Ee = new We()).a = H.c.b;
                  for (
                    var ae = (me = V.f).a;
                    (ae = ae.a).b !== null && !me.c(me.b, Ee, ae.b);

                  );
                  var _e = ge((me = ae.b)),
                    Ee = me.a;
                  if (((ae = _e.a), h(Ee.b.a, H, Ee.a) === 0))
                    r((Ee = me.a).a, H) ||
                      r(Ee.b.a, H) ||
                      (g(Ee.b),
                      me.c && (d(Ee.c), (me.c = !1)),
                      a(H.c, Ee),
                      P(V, H));
                  else {
                    var De = c(ae.b.a, Ee.b.a) ? me : _e;
                    (_e = void 0),
                      me.d || De.c
                        ? ((_e =
                            De === me ? _(H.c.b, Ee.e) : _(ae.b.c.b, H.c).b),
                          De.c
                            ? B(De, _e)
                            : (((me = J((Ee = V), me, _e)).f =
                                Qe(me).f + me.a.f),
                              (me.d = $(Ee, me.f))),
                          P(V, H))
                        : oe(V, me, H.c, H.c, null, !0);
                  }
                  return;
                }
              if (
                ((me = (Ee = ge((V = Z(V.i)))).a),
                (Ee = Q(G, Ee, null)).c === me)
              ) {
                (Ee = (me = Ee).c), (ae = ge(V)), (_e = V.a), (De = ae.a);
                var me,
                  Be = !1;
                _e.b.a !== De.b.a && fe(G, V),
                  r(_e.a, G.a) &&
                    (a(ie(Ee), _e),
                    (Ee = ge((V = Z(V))).a),
                    Q(G, ge(V), ae),
                    (Be = !0)),
                  r(De.a, G.a) &&
                    (a(me, ie(De)), (me = Q(G, ae, null)), (Be = !0)),
                  Be
                    ? oe(G, V, me.c, Ee, Ee, !0)
                    : ((H = c(De.a, _e.a) ? ie(De) : _e),
                      oe(G, V, (H = _(me.c.b, H)), H.c, H.c, !1),
                      (H.b.i.c = !0),
                      ye(G, V));
              } else oe(G, V, Ee.c, me, me, !0);
            }
            function U(G, z) {
              var V = new We(),
                H = i(G.b);
              (H.a.b = 4e150),
                (H.a.a = z),
                (H.b.a.b = -4e150),
                (H.b.a.a = z),
                (G.a = H.b.a),
                (V.a = H),
                (V.f = 0),
                (V.d = !1),
                (V.c = !1),
                (V.h = !0),
                (V.b = !1),
                (H = K((H = G.f), H.a, V)),
                (V.e = H);
            }
            function W(G) {
              (this.a = new ne()), (this.b = G), (this.c = R);
            }
            function K(G, z, V) {
              for (; (z = z.c).b !== null && !G.c(G.b, z.b, V); );
              return (G = new ne(V, z.a, z)), (z.a.c = G), (z.a = G);
            }
            function ne(G, z, V) {
              (this.b = G || null), (this.a = z || this), (this.c = V || this);
            }
            function re() {
              (this.d = 0),
                (this.p = this.b = this.q = null),
                (this.j = [0, 0, 0]),
                (this.s = 100130),
                (this.n = !1),
                (this.o = this.a = this.e = this.f = null),
                (this.m = !1),
                (this.c = this.r = this.i = this.k = this.l = this.h = null);
            }
            function we(G, z) {
              if (G.d !== z)
                for (; G.d !== z; )
                  if (G.d < z)
                    switch (G.d) {
                      case 0:
                        X(G, 100151), G.u(null);
                        break;
                      case 1:
                        X(G, 100152), G.t();
                    }
                  else
                    switch (G.d) {
                      case 2:
                        X(G, 100154), G.v();
                        break;
                      case 1:
                        X(G, 100153), G.w();
                    }
            }
            function X(G, z) {
              G.p && G.p(z, G.c);
            }
            function ue(G, z) {
              (this.b = G || this),
                (this.d = z || this),
                (this.a = null),
                (this.c = !1);
            }
            function he() {
              ((this.h = this).i =
                this.d =
                this.a =
                this.e =
                this.c =
                this.b =
                  null),
                (this.f = 0);
            }
            function ie(G) {
              return G.b.e;
            }
            function xe() {
              (this.c = new je()),
                (this.a = new ue()),
                (this.b = new he()),
                (this.d = new he()),
                (this.b.b = this.d),
                (this.d.b = this.b);
            }
            function je(G, z) {
              (this.e = G || this),
                (this.f = z || this),
                (this.d = this.c = null),
                (this.g = [0, 0, 0]),
                (this.h = this.a = this.b = 0);
            }
            function Te() {
              (this.c = []),
                (this.d = null),
                (this.a = 0),
                (this.e = !1),
                (this.b = new qe());
            }
            function Ne(G, z) {
              if (G.e) {
                var V,
                  H = G.b,
                  ae = ++H.a;
                return (
                  2 * ae > H.f && ((H.f *= 2), (H.c = Fe(H.c, H.f + 1))),
                  H.b === 0 ? (V = ae) : ((V = H.b), (H.b = H.c[H.b])),
                  (H.e[V] = z),
                  (H.c[V] = ae),
                  (H.d[ae] = V),
                  H.h && Ve(H, ae),
                  V
                );
              }
              return (H = G.a++), (G.c[H] = z), -(H + 1);
            }
            function ze(G) {
              if (G.a === 0) return ke(G.b);
              var z = G.c[G.d[G.a - 1]];
              if (G.b.a !== 0 && c(nt(G.b), z)) return ke(G.b);
              for (; --G.a, 0 < G.a && G.c[G.d[G.a - 1]] === null; );
              return z;
            }
            function qe() {
              (this.d = Fe([0], 33)),
                (this.e = [null, null]),
                (this.c = [0, 0]),
                (this.a = 0),
                (this.f = 32),
                (this.b = 0),
                (this.h = !1),
                (this.d[1] = 1);
            }
            function Fe(G, z) {
              for (var V = Array(z), H = 0; H < G.length; H++) V[H] = G[H];
              for (; H < z; H++) V[H] = 0;
              return V;
            }
            function nt(G) {
              return G.e[G.d[1]];
            }
            function ke(G) {
              var z = G.d,
                V = G.e,
                H = G.c,
                ae = z[1],
                _e = V[ae];
              return (
                0 < G.a &&
                  ((z[1] = z[G.a]),
                  (H[z[1]] = 1),
                  (V[ae] = null),
                  (H[ae] = G.b),
                  (G.b = ae),
                  0 < --G.a && Ae(G, 1)),
                _e
              );
            }
            function Ae(G, z) {
              for (var V = G.d, H = G.e, ae = G.c, _e = z, Ee = V[_e]; ; ) {
                var De = _e << 1;
                De < G.a && c(H[V[De + 1]], H[V[De]]) && (De += 1);
                var me = V[De];
                if (De > G.a || c(H[Ee], H[me])) {
                  ae[(V[_e] = Ee)] = _e;
                  break;
                }
                (ae[(V[_e] = me)] = _e), (_e = De);
              }
            }
            function Ve(G, z) {
              for (var V = G.d, H = G.e, ae = G.c, _e = z, Ee = V[_e]; ; ) {
                var De = _e >> 1,
                  me = V[De];
                if (De == 0 || c(H[me], H[Ee])) {
                  ae[(V[_e] = Ee)] = _e;
                  break;
                }
                (ae[(V[_e] = me)] = _e), (_e = De);
              }
            }
            function We() {
              (this.e = this.a = null),
                (this.f = 0),
                (this.c = this.b = this.h = this.d = !1);
            }
            function ge(G) {
              return G.e.c.b;
            }
            function Qe(G) {
              return G.e.a.b;
            }
            ((m = re.prototype).x = function () {
              we(this, 0);
            }),
              (m.B = function (G, z) {
                switch (G) {
                  case 100142:
                    return;
                  case 100140:
                    switch (z) {
                      case 100130:
                      case 100131:
                      case 100132:
                      case 100133:
                      case 100134:
                        return void (this.s = z);
                    }
                    break;
                  case 100141:
                    return void (this.m = !!z);
                  default:
                    return void X(this, 100900);
                }
                X(this, 100901);
              }),
              (m.y = function (G) {
                switch (G) {
                  case 100142:
                    return 0;
                  case 100140:
                    return this.s;
                  case 100141:
                    return this.m;
                  default:
                    X(this, 100900);
                }
                return !1;
              }),
              (m.A = function (G, z, V) {
                (this.j[0] = G), (this.j[1] = z), (this.j[2] = V);
              }),
              (m.z = function (G, z) {
                var V = z || null;
                switch (G) {
                  case 100100:
                  case 100106:
                    this.h = V;
                    break;
                  case 100104:
                  case 100110:
                    this.l = V;
                    break;
                  case 100101:
                  case 100107:
                    this.k = V;
                    break;
                  case 100102:
                  case 100108:
                    this.i = V;
                    break;
                  case 100103:
                  case 100109:
                    this.p = V;
                    break;
                  case 100105:
                  case 100111:
                    this.o = V;
                    break;
                  case 100112:
                    this.r = V;
                    break;
                  default:
                    X(this, 100900);
                }
              }),
              (m.C = function (G, z) {
                var V = !1,
                  H = [0, 0, 0];
                we(this, 2);
                for (var ae = 0; ae < 3; ++ae) {
                  var _e = G[ae];
                  _e < -1e150 && ((_e = -1e150), (V = !0)),
                    1e150 < _e && ((_e = 1e150), (V = !0)),
                    (H[ae] = _e);
                }
                V && X(this, 100155),
                  (V = this.q) === null
                    ? a((V = i(this.b)), V.b)
                    : (g(V), (V = V.e)),
                  (V.a.d = z),
                  (V.a.g[0] = H[0]),
                  (V.a.g[1] = H[1]),
                  (V.a.g[2] = H[2]),
                  (V.f = 1),
                  (V.b.f = -1),
                  (this.q = V);
              }),
              (m.u = function (G) {
                we(this, 0), (this.d = 1), (this.b = new xe()), (this.c = G);
              }),
              (m.t = function () {
                we(this, 1), (this.d = 2), (this.q = null);
              }),
              (m.v = function () {
                we(this, 2), (this.d = 1);
              }),
              (m.w = function () {
                we(this, 1), (this.d = 0);
                var G,
                  z,
                  V = !1,
                  H = [(me = this.j[0]), (ae = this.j[1]), (Ee = this.j[2])];
                if (me === 0 && ae === 0 && Ee === 0) {
                  for (
                    var ae = [-2e150, -2e150, -2e150],
                      _e = [2e150, 2e150, 2e150],
                      Ee = [],
                      De = [],
                      me = (V = this.b.c).e;
                    me !== V;
                    me = me.e
                  )
                    for (var Be = 0; Be < 3; ++Be) {
                      var Ke = me.g[Be];
                      Ke < _e[Be] && ((_e[Be] = Ke), (De[Be] = me)),
                        Ke > ae[Be] && ((ae[Be] = Ke), (Ee[Be] = me));
                    }
                  if (
                    ((me = 0),
                    ae[1] - _e[1] > ae[0] - _e[0] && (me = 1),
                    ae[2] - _e[2] > ae[me] - _e[me] && (me = 2),
                    _e[me] >= ae[me])
                  )
                    (H[0] = 0), (H[1] = 0), (H[2] = 1);
                  else {
                    for (
                      ae = 0,
                        _e = De[me],
                        Ee = Ee[me],
                        De = [0, 0, 0],
                        _e = [
                          _e.g[0] - Ee.g[0],
                          _e.g[1] - Ee.g[1],
                          _e.g[2] - Ee.g[2],
                        ],
                        Be = [0, 0, 0],
                        me = V.e;
                      me !== V;
                      me = me.e
                    )
                      (Be[0] = me.g[0] - Ee.g[0]),
                        (Be[1] = me.g[1] - Ee.g[1]),
                        (Be[2] = me.g[2] - Ee.g[2]),
                        (De[0] = _e[1] * Be[2] - _e[2] * Be[1]),
                        (De[1] = _e[2] * Be[0] - _e[0] * Be[2]),
                        (De[2] = _e[0] * Be[1] - _e[1] * Be[0]),
                        ae <
                          (Ke =
                            De[0] * De[0] + De[1] * De[1] + De[2] * De[2]) &&
                          ((ae = Ke),
                          (H[0] = De[0]),
                          (H[1] = De[1]),
                          (H[2] = De[2]));
                    ae <= 0 && ((H[0] = H[1] = H[2] = 0), (H[k(_e)] = 1));
                  }
                  V = !0;
                }
                for (
                  De = k(H),
                    me = this.b.c,
                    ae = (De + 1) % 3,
                    Ee = (De + 2) % 3,
                    De = 0 < H[De] ? 1 : -1,
                    H = me.e;
                  H !== me;
                  H = H.e
                )
                  (H.b = H.g[ae]), (H.a = De * H.g[Ee]);
                if (V) {
                  for (H = 0, me = (V = this.b.a).b; me !== V; me = me.b)
                    if (!((ae = me.a).f <= 0))
                      for (
                        ;
                        (H += (ae.a.b - ae.b.a.b) * (ae.a.a + ae.b.a.a)),
                          (ae = ae.e) !== me.a;

                      );
                  if (H < 0)
                    for (V = (H = this.b.c).e; V !== H; V = V.e) V.a = -V.a;
                }
                for (this.n = !1, me = (H = this.b.b).h; me !== H; me = V)
                  (V = me.h),
                    (ae = me.e),
                    r(me.a, me.b.a) &&
                      me.e.e !== me &&
                      (ve(this, ae, me), d(me), (ae = (me = ae).e)),
                    ae.e === me &&
                      (ae !== me &&
                        ((ae !== V && ae !== V.b) || (V = V.h), d(ae)),
                      (me !== V && me !== V.b) || (V = V.h),
                      d(me));
                for (
                  this.e = H = new Te(), me = (V = this.b.c).e;
                  me !== V;
                  me = me.e
                )
                  me.h = Ne(H, me);
                for (
                  (function (st) {
                    st.d = [];
                    for (var at = 0; at < st.a; at++) st.d[at] = at;
                    st.d.sort(
                      (function (ot) {
                        return function (it, gt) {
                          return c(ot[it], ot[gt]) ? 1 : -1;
                        };
                      })(st.c),
                    ),
                      (st.e = !0),
                      (function (ot) {
                        for (var it = ot.a; 1 <= it; --it) Ae(ot, it);
                        ot.h = !0;
                      })(st.b);
                  })(H),
                    this.f = new W(this),
                    U(this, -4e150),
                    U(this, 4e150);
                  (H = ze(this.e)) !== null;

                ) {
                  for (;;) {
                    e: if (((me = this.e), me.a === 0)) V = nt(me.b);
                    else if (
                      ((V = me.c[me.d[me.a - 1]]),
                      me.b.a !== 0 && ((me = nt(me.b)), c(me, V)))
                    ) {
                      V = me;
                      break e;
                    }
                    if (V === null || !r(V, H)) break;
                    (V = ze(this.e)), ve(this, H.c, V.c);
                  }
                  P(this, H);
                }
                for (
                  this.a = this.f.a.a.b.a.a, H = 0;
                  (V = this.f.a.a.b) !== null;

                )
                  V.h || ++H, N(V);
                for (
                  this.f = null,
                    (H = this.e).b = null,
                    H.d = null,
                    this.e = H.c = null,
                    me = (H = this.b).a.b;
                  me !== H.a;
                  me = V
                )
                  (V = me.b), (me = me.a).e.e === me && (L(me.c, me), d(me));
                if (!this.n) {
                  if (((H = this.b), this.m))
                    for (me = H.b.h; me !== H.b; me = V)
                      (V = me.h),
                        me.b.d.c !== me.d.c ? (me.f = me.d.c ? 1 : -1) : d(me);
                  else
                    for (me = H.a.b; me !== H.a; me = V)
                      if (((V = me.b), me.c)) {
                        for (me = me.a; c(me.b.a, me.a); me = me.c.b);
                        for (; c(me.a, me.b.a); me = me.e);
                        for (ae = me.c.b, Ee = void 0; me.e !== ae; )
                          if (c(me.b.a, ae.a)) {
                            for (
                              ;
                              ae.e !== me &&
                              (c((z = ae.e).b.a, z.a) ||
                                h(ae.a, ae.b.a, ae.e.b.a) <= 0);

                            )
                              ae = (Ee = _(ae.e, ae)).b;
                            ae = ae.c.b;
                          } else {
                            for (
                              ;
                              ae.e !== me &&
                              (c((G = me.c.b).a, G.b.a) ||
                                0 <= h(me.b.a, me.a, me.c.b.a));

                            )
                              me = (Ee = _(me, me.c.b)).b;
                            me = me.e;
                          }
                        for (; ae.e.e !== me; ) ae = (Ee = _(ae.e, ae)).b;
                      }
                  if (this.h || this.i || this.k || this.l)
                    if (this.m) {
                      for (V = (H = this.b).a.b; V !== H.a; V = V.b)
                        if (V.c) {
                          for (
                            this.h && this.h(2, this.c), me = V.a;
                            this.k && this.k(me.a.d, this.c),
                              (me = me.e) !== V.a;

                          );
                          this.i && this.i(this.c);
                        }
                    } else {
                      for (
                        H = this.b, V = !!this.l, me = !1, ae = -1, Ee = H.a.d;
                        Ee !== H.a;
                        Ee = Ee.d
                      )
                        if (Ee.c)
                          for (
                            me || (this.h && this.h(4, this.c), (me = !0)),
                              De = Ee.a;
                            V &&
                              ae !== (_e = De.b.d.c ? 0 : 1) &&
                              ((ae = _e), this.l && this.l(!!ae, this.c)),
                              this.k && this.k(De.a.d, this.c),
                              (De = De.e) !== Ee.a;

                          );
                      me && this.i && this.i(this.c);
                    }
                  if (this.r) {
                    for (me = (H = this.b).a.b; me !== H.a; me = V)
                      if (((V = me.b), !me.c)) {
                        for (
                          Ee = (ae = me.a).e, De = void 0;
                          (Ee = (De = Ee).e),
                            (De.d = null) === De.b.d &&
                              (De.c === De
                                ? D(De.a, null)
                                : ((De.a.c = De.c), S(De, ie(De))),
                              (_e = De.b).c === _e
                                ? D(_e.a, null)
                                : ((_e.a.c = _e.c), S(_e, ie(_e))),
                              O(De)),
                            De !== ae;

                        );
                        (ae = me.d), (((me = me.b).d = ae).b = me);
                      }
                    return this.r(this.b), void (this.c = this.b = null);
                  }
                }
                this.b = this.c = null;
              }),
              (this.libtess = {
                GluTesselator: re,
                windingRule: {
                  GLU_TESS_WINDING_ODD: 100130,
                  GLU_TESS_WINDING_NONZERO: 100131,
                  GLU_TESS_WINDING_POSITIVE: 100132,
                  GLU_TESS_WINDING_NEGATIVE: 100133,
                  GLU_TESS_WINDING_ABS_GEQ_TWO: 100134,
                },
                primitiveType: {
                  GL_LINE_LOOP: 2,
                  GL_TRIANGLES: 4,
                  GL_TRIANGLE_STRIP: 5,
                  GL_TRIANGLE_FAN: 6,
                },
                errorType: {
                  GLU_TESS_MISSING_BEGIN_POLYGON: 100151,
                  GLU_TESS_MISSING_END_POLYGON: 100153,
                  GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,
                  GLU_TESS_MISSING_END_CONTOUR: 100154,
                  GLU_TESS_COORD_TOO_LARGE: 100155,
                  GLU_TESS_NEED_COMBINE_CALLBACK: 100156,
                },
                gluEnum: {
                  GLU_TESS_MESH: 100112,
                  GLU_TESS_TOLERANCE: 100142,
                  GLU_TESS_WINDING_RULE: 100140,
                  GLU_TESS_BOUNDARY_ONLY: 100141,
                  GLU_INVALID_ENUM: 100900,
                  GLU_INVALID_VALUE: 100901,
                  GLU_TESS_BEGIN: 100100,
                  GLU_TESS_VERTEX: 100101,
                  GLU_TESS_END: 100102,
                  GLU_TESS_ERROR: 100103,
                  GLU_TESS_EDGE_FLAG: 100104,
                  GLU_TESS_COMBINE: 100105,
                  GLU_TESS_BEGIN_DATA: 100106,
                  GLU_TESS_VERTEX_DATA: 100107,
                  GLU_TESS_END_DATA: 100108,
                  GLU_TESS_ERROR_DATA: 100109,
                  GLU_TESS_EDGE_FLAG_DATA: 100110,
                  GLU_TESS_COMBINE_DATA: 100111,
                },
              }),
              (re.prototype.gluDeleteTess = re.prototype.x),
              (re.prototype.gluTessProperty = re.prototype.B),
              (re.prototype.gluGetTessProperty = re.prototype.y),
              (re.prototype.gluTessNormal = re.prototype.A),
              (re.prototype.gluTessCallback = re.prototype.z),
              (re.prototype.gluTessVertex = re.prototype.C),
              (re.prototype.gluTessBeginPolygon = re.prototype.u),
              (re.prototype.gluTessBeginContour = re.prototype.t),
              (re.prototype.gluTessEndContour = re.prototype.v),
              (re.prototype.gluTessEndPolygon = re.prototype.w),
              v !== void 0 && (v.exports = this.libtess);
          },
          {},
        ],
        238: [
          function (e, v, y) {
            function m(r, c, l, h) {
              for (
                var u = r[c++],
                  o = 1 << u,
                  n = 1 + o,
                  s = 1 + n,
                  i = u + 1,
                  a = (1 << i) - 1,
                  d = 0,
                  g = 0,
                  _ = 0,
                  w = r[c++],
                  S = new Int32Array(4096),
                  M = null;
                ;

              ) {
                for (; d < 16 && w !== 0; )
                  (g |= r[c++] << d), (d += 8), w === 1 ? (w = r[c++]) : --w;
                if (d < i) break;
                var E = g & a;
                if (((g >>= i), (d -= i), E != o)) {
                  if (E == n) break;
                  for (var O = E < s ? E : M, D = 0, A = O; o < A; )
                    (A = S[A] >> 8), ++D;
                  var k = A;
                  if (h < _ + D + (O !== E ? 1 : 0))
                    return void console.log(
                      'Warning, gif stream longer than expected.',
                    );
                  l[_++] = k;
                  var L = (_ += D);
                  for (O !== E && (l[_++] = k), A = O; D--; )
                    (A = S[A]), (l[--L] = 255 & A), (A >>= 8);
                  M !== null &&
                    s < 4096 &&
                    ((S[s++] = (M << 8) | k),
                    a + 1 <= s && i < 12 && (++i, (a = (a << 1) | 1))),
                    (M = E);
                } else (s = 1 + n), (a = (1 << (i = u + 1)) - 1), (M = null);
              }
              return (
                _ !== h &&
                  console.log('Warning, gif stream shorter than expected.'),
                l
              );
            }
            try {
              (y.GifWriter = function (r, c, l, h) {
                var u = 0,
                  o =
                    (h = h === void 0 ? {} : h).loop === void 0 ? null : h.loop,
                  n = h.palette === void 0 ? null : h.palette;
                if (c <= 0 || l <= 0 || 65535 < c || 65535 < l)
                  throw new Error('Width/Height invalid.');
                function s(M) {
                  var E = M.length;
                  if (E < 2 || 256 < E || E & (E - 1))
                    throw new Error(
                      'Invalid code/color length, must be power of 2 and 2 .. 256.',
                    );
                  return E;
                }
                (r[u++] = 71),
                  (r[u++] = 73),
                  (r[u++] = 70),
                  (r[u++] = 56),
                  (r[u++] = 57),
                  (r[u++] = 97);
                var i = 0,
                  a = 0;
                if (n !== null) {
                  for (var d = s(n); (d >>= 1); ) ++i;
                  if (((d = 1 << i), --i, h.background !== void 0)) {
                    if (d <= (a = h.background))
                      throw new Error('Background index out of range.');
                    if (a === 0)
                      throw new Error(
                        'Background index explicitly passed as 0.',
                      );
                  }
                }
                if (
                  ((r[u++] = 255 & c),
                  (r[u++] = (c >> 8) & 255),
                  (r[u++] = 255 & l),
                  (r[u++] = (l >> 8) & 255),
                  (r[u++] = (n !== null ? 128 : 0) | i),
                  (r[u++] = a),
                  (r[u++] = 0),
                  n !== null)
                )
                  for (var g = 0, _ = n.length; g < _; ++g) {
                    var w = n[g];
                    (r[u++] = (w >> 16) & 255),
                      (r[u++] = (w >> 8) & 255),
                      (r[u++] = 255 & w);
                  }
                if (o !== null) {
                  if (o < 0 || 65535 < o)
                    throw new Error('Loop count invalid.');
                  (r[u++] = 33),
                    (r[u++] = 255),
                    (r[u++] = 11),
                    (r[u++] = 78),
                    (r[u++] = 69),
                    (r[u++] = 84),
                    (r[u++] = 83),
                    (r[u++] = 67),
                    (r[u++] = 65),
                    (r[u++] = 80),
                    (r[u++] = 69),
                    (r[u++] = 50),
                    (r[u++] = 46),
                    (r[u++] = 48),
                    (r[u++] = 3),
                    (r[u++] = 1),
                    (r[u++] = 255 & o),
                    (r[u++] = (o >> 8) & 255),
                    (r[u++] = 0);
                }
                var S = !1;
                (this.addFrame = function (M, E, O, D, A, k) {
                  if (
                    (S === !0 && (--u, (S = !1)),
                    (k = k === void 0 ? {} : k),
                    M < 0 || E < 0 || 65535 < M || 65535 < E)
                  )
                    throw new Error('x/y invalid.');
                  if (O <= 0 || D <= 0 || 65535 < O || 65535 < D)
                    throw new Error('Width/Height invalid.');
                  if (A.length < O * D)
                    throw new Error('Not enough pixels for the frame size.');
                  var L = !0,
                    R = k.palette;
                  if ((R == null && ((L = !1), (R = n)), R == null))
                    throw new Error(
                      'Must supply either a local or global palette.',
                    );
                  for (var N = s(R), B = 0; (N >>= 1); ) ++B;
                  N = 1 << B;
                  var Z = k.delay === void 0 ? 0 : k.delay,
                    J = k.disposal === void 0 ? 0 : k.disposal;
                  if (J < 0 || 3 < J) throw new Error('Disposal out of range.');
                  var $ = !1,
                    ee = 0;
                  if (
                    k.transparent !== void 0 &&
                    k.transparent !== null &&
                    (($ = !0), (ee = k.transparent) < 0 || N <= ee)
                  )
                    throw new Error('Transparent color index.');
                  if (
                    ((J === 0 && !$ && Z === 0) ||
                      ((r[u++] = 33),
                      (r[u++] = 249),
                      (r[u++] = 4),
                      (r[u++] = (J << 2) | ($ === !0 ? 1 : 0)),
                      (r[u++] = 255 & Z),
                      (r[u++] = (Z >> 8) & 255),
                      (r[u++] = ee),
                      (r[u++] = 0)),
                    (r[u++] = 44),
                    (r[u++] = 255 & M),
                    (r[u++] = (M >> 8) & 255),
                    (r[u++] = 255 & E),
                    (r[u++] = (E >> 8) & 255),
                    (r[u++] = 255 & O),
                    (r[u++] = (O >> 8) & 255),
                    (r[u++] = 255 & D),
                    (r[u++] = (D >> 8) & 255),
                    (r[u++] = L === !0 ? 128 | (B - 1) : 0),
                    L === !0)
                  )
                    for (var Q = 0, oe = R.length; Q < oe; ++Q) {
                      var ce = R[Q];
                      (r[u++] = (ce >> 16) & 255),
                        (r[u++] = (ce >> 8) & 255),
                        (r[u++] = 255 & ce);
                    }
                  return (u = (function (ve, de, Se, fe) {
                    ve[de++] = Se;
                    var ye = de++,
                      P = 1 << Se,
                      U = P - 1,
                      W = 1 + P,
                      K = 1 + W,
                      ne = Se + 1,
                      re = 0,
                      we = 0;
                    function X(qe) {
                      for (; qe <= re; )
                        (ve[de++] = 255 & we),
                          (we >>= 8),
                          (re -= 8),
                          de === ye + 256 && ((ve[ye] = 255), (ye = de++));
                    }
                    function ue(qe) {
                      (we |= qe << re), (re += ne), X(8);
                    }
                    var he = fe[0] & U,
                      ie = {};
                    ue(P);
                    for (var xe = 1, je = fe.length; xe < je; ++xe) {
                      var Te = fe[xe] & U,
                        Ne = (he << 8) | Te,
                        ze = ie[Ne];
                      if (ze === void 0) {
                        for (we |= he << re, re += ne; 8 <= re; )
                          (ve[de++] = 255 & we),
                            (we >>= 8),
                            (re -= 8),
                            de === ye + 256 && ((ve[ye] = 255), (ye = de++));
                        K === 4096
                          ? (ue(P), (K = 1 + W), (ne = Se + 1), (ie = {}))
                          : (1 << ne <= K && ++ne, (ie[Ne] = K++)),
                          (he = Te);
                      } else he = ze;
                    }
                    return (
                      ue(he),
                      ue(W),
                      X(1),
                      ye + 1 === de
                        ? (ve[ye] = 0)
                        : ((ve[ye] = de - ye - 1), (ve[de++] = 0)),
                      de
                    );
                  })(r, u, B < 2 ? 2 : B, A));
                }),
                  (this.end = function () {
                    return S === !1 && ((r[u++] = 59), (S = !0)), u;
                  }),
                  (this.getOutputBuffer = function () {
                    return r;
                  }),
                  (this.setOutputBuffer = function (M) {
                    r = M;
                  }),
                  (this.getOutputBufferPosition = function () {
                    return u;
                  }),
                  (this.setOutputBufferPosition = function (M) {
                    u = M;
                  });
              }),
                (y.GifReader = function (r) {
                  var c = 0;
                  if (
                    r[c++] !== 71 ||
                    r[c++] !== 73 ||
                    r[c++] !== 70 ||
                    r[c++] !== 56 ||
                    ((r[c++] + 1) & 253) != 56 ||
                    r[c++] !== 97
                  )
                    throw new Error('Invalid GIF 87a/89a header.');
                  var l = r[c++] | (r[c++] << 8),
                    h = r[c++] | (r[c++] << 8),
                    u = r[c++],
                    o = u >> 7,
                    n = 1 << (1 + (7 & u));
                  r[c++], r[c++];
                  var s = null,
                    i = null;
                  o && ((s = c), (c += 3 * (i = n)));
                  var a = !0,
                    d = [],
                    g = 0,
                    _ = null,
                    w = 0,
                    S = null;
                  for (this.width = l, this.height = h; a && c < r.length; )
                    switch (r[c++]) {
                      case 33:
                        switch (r[c++]) {
                          case 255:
                            if (
                              r[c] !== 11 ||
                              (r[c + 1] == 78 &&
                                r[c + 2] == 69 &&
                                r[c + 3] == 84 &&
                                r[c + 4] == 83 &&
                                r[c + 5] == 67 &&
                                r[c + 6] == 65 &&
                                r[c + 7] == 80 &&
                                r[c + 8] == 69 &&
                                r[c + 9] == 50 &&
                                r[c + 10] == 46 &&
                                r[c + 11] == 48 &&
                                r[c + 12] == 3 &&
                                r[c + 13] == 1 &&
                                r[c + 16] == 0)
                            )
                              (c += 14), (S = r[c++] | (r[c++] << 8)), c++;
                            else
                              for (c += 12; ; ) {
                                if (!(0 <= ($ = r[c++])))
                                  throw Error('Invalid block size');
                                if ($ === 0) break;
                                c += $;
                              }
                            break;
                          case 249:
                            if (r[c++] !== 4 || r[c + 4] !== 0)
                              throw new Error(
                                'Invalid graphics extension block.',
                              );
                            var M = r[c++];
                            (g = r[c++] | (r[c++] << 8)),
                              (_ = r[c++]),
                              (1 & M) == 0 && (_ = null),
                              (w = (M >> 2) & 7),
                              c++;
                            break;
                          case 254:
                            for (;;) {
                              if (!(0 <= ($ = r[c++])))
                                throw Error('Invalid block size');
                              if ($ === 0) break;
                              c += $;
                            }
                            break;
                          default:
                            throw new Error(
                              'Unknown graphic control label: 0x' +
                                r[c - 1].toString(16),
                            );
                        }
                        break;
                      case 44:
                        var E = r[c++] | (r[c++] << 8),
                          O = r[c++] | (r[c++] << 8),
                          D = r[c++] | (r[c++] << 8),
                          A = r[c++] | (r[c++] << 8),
                          k = r[c++],
                          L = (k >> 6) & 1,
                          R = 1 << (1 + (7 & k)),
                          N = s,
                          B = i,
                          Z = !1;
                        k >> 7 && ((Z = !0), (N = c), (c += 3 * (B = R)));
                        var J = c;
                        for (c++; ; ) {
                          var $;
                          if (!(0 <= ($ = r[c++])))
                            throw Error('Invalid block size');
                          if ($ === 0) break;
                          c += $;
                        }
                        d.push({
                          x: E,
                          y: O,
                          width: D,
                          height: A,
                          has_local_palette: Z,
                          palette_offset: N,
                          palette_size: B,
                          data_offset: J,
                          data_length: c - J,
                          transparent_index: _,
                          interlaced: !!L,
                          delay: g,
                          disposal: w,
                        });
                        break;
                      case 59:
                        a = !1;
                        break;
                      default:
                        throw new Error(
                          'Unknown gif block: 0x' + r[c - 1].toString(16),
                        );
                    }
                  (this.numFrames = function () {
                    return d.length;
                  }),
                    (this.loopCount = function () {
                      return S;
                    }),
                    (this.frameInfo = function (ee) {
                      if (ee < 0 || ee >= d.length)
                        throw new Error('Frame index out of range.');
                      return d[ee];
                    }),
                    (this.decodeAndBlitFrameBGRA = function (ee, Q) {
                      var oe = this.frameInfo(ee),
                        ce = oe.width * oe.height,
                        ve = new Uint8Array(ce);
                      m(r, oe.data_offset, ve, ce);
                      var de = oe.palette_offset,
                        Se = oe.transparent_index;
                      Se === null && (Se = 256);
                      var fe = oe.width,
                        ye = l - fe,
                        P = fe,
                        U = 4 * (oe.y * l + oe.x),
                        W = 4 * ((oe.y + oe.height) * l + oe.x),
                        K = U,
                        ne = 4 * ye;
                      oe.interlaced === !0 && (ne += 4 * l * 7);
                      for (var re = 8, we = 0, X = ve.length; we < X; ++we) {
                        var ue = ve[we];
                        if (
                          (P === 0 &&
                            ((P = fe),
                            W <= (K += ne) &&
                              ((ne = 4 * ye + 4 * l * (re - 1)),
                              (K = U + (fe + ye) * (re << 1)),
                              (re >>= 1))),
                          ue === Se)
                        )
                          K += 4;
                        else {
                          var he = r[de + 3 * ue],
                            ie = r[de + 3 * ue + 1],
                            xe = r[de + 3 * ue + 2];
                          (Q[K++] = xe),
                            (Q[K++] = ie),
                            (Q[K++] = he),
                            (Q[K++] = 255);
                        }
                        --P;
                      }
                    }),
                    (this.decodeAndBlitFrameRGBA = function (ee, Q) {
                      var oe = this.frameInfo(ee),
                        ce = oe.width * oe.height,
                        ve = new Uint8Array(ce);
                      m(r, oe.data_offset, ve, ce);
                      var de = oe.palette_offset,
                        Se = oe.transparent_index;
                      Se === null && (Se = 256);
                      var fe = oe.width,
                        ye = l - fe,
                        P = fe,
                        U = 4 * (oe.y * l + oe.x),
                        W = 4 * ((oe.y + oe.height) * l + oe.x),
                        K = U,
                        ne = 4 * ye;
                      oe.interlaced === !0 && (ne += 4 * l * 7);
                      for (var re = 8, we = 0, X = ve.length; we < X; ++we) {
                        var ue = ve[we];
                        if (
                          (P === 0 &&
                            ((P = fe),
                            W <= (K += ne) &&
                              ((ne = 4 * ye + 4 * l * (re - 1)),
                              (K = U + (fe + ye) * (re << 1)),
                              (re >>= 1))),
                          ue === Se)
                        )
                          K += 4;
                        else {
                          var he = r[de + 3 * ue],
                            ie = r[de + 3 * ue + 1],
                            xe = r[de + 3 * ue + 2];
                          (Q[K++] = he),
                            (Q[K++] = ie),
                            (Q[K++] = xe),
                            (Q[K++] = 255);
                        }
                        --P;
                      }
                    });
                });
            } catch {}
          },
          {},
        ],
        239: [
          function (e, v, y) {
            (function (m) {
              var r, c;
              (r = this),
                (c = function (l) {
                  function h(f) {
                    if (this == null) throw TypeError();
                    var b = String(this),
                      x = b.length,
                      j = f ? Number(f) : 0;
                    if ((j != j && (j = 0), !(j < 0 || x <= j))) {
                      var C,
                        I = b.charCodeAt(j);
                      return 55296 <= I &&
                        I <= 56319 &&
                        j + 1 < x &&
                        56320 <= (C = b.charCodeAt(j + 1)) &&
                        C <= 57343
                        ? 1024 * (I - 55296) + C - 56320 + 65536
                        : I;
                    }
                  }
                  var u;
                  String.prototype.codePointAt ||
                    ((u = (function () {
                      try {
                        var f = {},
                          b = Object.defineProperty,
                          x = b(f, f, f) && b;
                      } catch {}
                      return x;
                    })())
                      ? u(String.prototype, 'codePointAt', {
                          value: h,
                          configurable: !0,
                          writable: !0,
                        })
                      : (String.prototype.codePointAt = h));
                  var o = 0,
                    n = -3;
                  function s() {
                    (this.table = new Uint16Array(16)),
                      (this.trans = new Uint16Array(288));
                  }
                  function i(f, b) {
                    (this.source = f),
                      (this.sourceIndex = 0),
                      (this.tag = 0),
                      (this.bitcount = 0),
                      (this.dest = b),
                      (this.destLen = 0),
                      (this.ltree = new s()),
                      (this.dtree = new s());
                  }
                  var a = new s(),
                    d = new s(),
                    g = new Uint8Array(30),
                    _ = new Uint16Array(30),
                    w = new Uint8Array(30),
                    S = new Uint16Array(30),
                    M = new Uint8Array([
                      16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14,
                      1, 15,
                    ]),
                    E = new s(),
                    O = new Uint8Array(320);
                  function D(f, b, x, j) {
                    var C, I;
                    for (C = 0; C < x; ++C) f[C] = 0;
                    for (C = 0; C < 30 - x; ++C) f[C + x] = (C / x) | 0;
                    for (I = j, C = 0; C < 30; ++C)
                      (b[C] = I), (I += 1 << f[C]);
                  }
                  var A = new Uint16Array(16);
                  function k(f, b, x, j) {
                    var C, I;
                    for (C = 0; C < 16; ++C) f.table[C] = 0;
                    for (C = 0; C < j; ++C) f.table[b[x + C]]++;
                    for (C = I = f.table[0] = 0; C < 16; ++C)
                      (A[C] = I), (I += f.table[C]);
                    for (C = 0; C < j; ++C)
                      b[x + C] && (f.trans[A[b[x + C]]++] = C);
                  }
                  function L(f) {
                    f.bitcount-- ||
                      ((f.tag = f.source[f.sourceIndex++]), (f.bitcount = 7));
                    var b = 1 & f.tag;
                    return (f.tag >>>= 1), b;
                  }
                  function R(f, b, x) {
                    if (!b) return x;
                    for (; f.bitcount < 24; )
                      (f.tag |= f.source[f.sourceIndex++] << f.bitcount),
                        (f.bitcount += 8);
                    var j = f.tag & (65535 >>> (16 - b));
                    return (f.tag >>>= b), (f.bitcount -= b), j + x;
                  }
                  function N(f, b) {
                    for (; f.bitcount < 24; )
                      (f.tag |= f.source[f.sourceIndex++] << f.bitcount),
                        (f.bitcount += 8);
                    for (
                      var x = 0, j = 0, C = 0, I = f.tag;
                      (j = 2 * j + (1 & I)),
                        (I >>>= 1),
                        ++C,
                        (x += b.table[C]),
                        0 <= (j -= b.table[C]);

                    );
                    return (f.tag = I), (f.bitcount -= C), b.trans[x + j];
                  }
                  function B(f, b, x) {
                    var j, C, I, F, q, Y;
                    for (
                      j = R(f, 5, 257), C = R(f, 5, 1), I = R(f, 4, 4), F = 0;
                      F < 19;
                      ++F
                    )
                      O[F] = 0;
                    for (F = 0; F < I; ++F) {
                      var se = R(f, 3, 0);
                      O[M[F]] = se;
                    }
                    for (k(E, O, 0, 19), q = 0; q < j + C; ) {
                      var pe = N(f, E);
                      switch (pe) {
                        case 16:
                          var be = O[q - 1];
                          for (Y = R(f, 2, 3); Y; --Y) O[q++] = be;
                          break;
                        case 17:
                          for (Y = R(f, 3, 3); Y; --Y) O[q++] = 0;
                          break;
                        case 18:
                          for (Y = R(f, 7, 11); Y; --Y) O[q++] = 0;
                          break;
                        default:
                          O[q++] = pe;
                      }
                    }
                    k(b, O, 0, j), k(x, O, j, C);
                  }
                  function Z(f, b, x) {
                    for (;;) {
                      var j,
                        C,
                        I,
                        F,
                        q = N(f, b);
                      if (q === 256) return o;
                      if (q < 256) f.dest[f.destLen++] = q;
                      else
                        for (
                          j = R(f, g[(q -= 257)], _[q]),
                            C = N(f, x),
                            F = I = f.destLen - R(f, w[C], S[C]);
                          F < I + j;
                          ++F
                        )
                          f.dest[f.destLen++] = f.dest[F];
                    }
                  }
                  function J(f) {
                    for (var b, x; 8 < f.bitcount; )
                      f.sourceIndex--, (f.bitcount -= 8);
                    if (
                      (b =
                        256 * (b = f.source[f.sourceIndex + 1]) +
                        f.source[f.sourceIndex]) !==
                      (65535 &
                        ~(
                          256 * f.source[f.sourceIndex + 3] +
                          f.source[f.sourceIndex + 2]
                        ))
                    )
                      return n;
                    for (f.sourceIndex += 4, x = b; x; --x)
                      f.dest[f.destLen++] = f.source[f.sourceIndex++];
                    return (f.bitcount = 0), o;
                  }
                  (function (f, b) {
                    var x;
                    for (x = 0; x < 7; ++x) f.table[x] = 0;
                    for (
                      f.table[7] = 24,
                        f.table[8] = 152,
                        f.table[9] = 112,
                        x = 0;
                      x < 24;
                      ++x
                    )
                      f.trans[x] = 256 + x;
                    for (x = 0; x < 144; ++x) f.trans[24 + x] = x;
                    for (x = 0; x < 8; ++x) f.trans[168 + x] = 280 + x;
                    for (x = 0; x < 112; ++x) f.trans[176 + x] = 144 + x;
                    for (x = 0; x < 5; ++x) b.table[x] = 0;
                    for (b.table[5] = 32, x = 0; x < 32; ++x) b.trans[x] = x;
                  })(a, d),
                    D(g, _, 4, 3),
                    D(w, S, 2, 1),
                    (g[28] = 0),
                    (_[28] = 258);
                  var $ = function (f, b) {
                    var x,
                      j,
                      C = new i(f, b);
                    do {
                      switch (((x = L(C)), R(C, 2, 0))) {
                        case 0:
                          j = J(C);
                          break;
                        case 1:
                          j = Z(C, a, d);
                          break;
                        case 2:
                          B(C, C.ltree, C.dtree), (j = Z(C, C.ltree, C.dtree));
                          break;
                        default:
                          j = n;
                      }
                      if (j !== o) throw new Error('Data error');
                    } while (!x);
                    return C.destLen < C.dest.length
                      ? typeof C.dest.slice == 'function'
                        ? C.dest.slice(0, C.destLen)
                        : C.dest.subarray(0, C.destLen)
                      : C.dest;
                  };
                  function ee(f, b, x, j, C) {
                    return (
                      Math.pow(1 - C, 3) * f +
                      3 * Math.pow(1 - C, 2) * C * b +
                      3 * (1 - C) * Math.pow(C, 2) * x +
                      Math.pow(C, 3) * j
                    );
                  }
                  function Q() {
                    (this.x1 = Number.NaN),
                      (this.y1 = Number.NaN),
                      (this.x2 = Number.NaN),
                      (this.y2 = Number.NaN);
                  }
                  function oe() {
                    (this.commands = []),
                      (this.fill = 'black'),
                      (this.stroke = null),
                      (this.strokeWidth = 1);
                  }
                  function ce(f) {
                    throw new Error(f);
                  }
                  function ve(f, b) {
                    f || ce(b);
                  }
                  (Q.prototype.isEmpty = function () {
                    return (
                      isNaN(this.x1) ||
                      isNaN(this.y1) ||
                      isNaN(this.x2) ||
                      isNaN(this.y2)
                    );
                  }),
                    (Q.prototype.addPoint = function (f, b) {
                      typeof f == 'number' &&
                        ((isNaN(this.x1) || isNaN(this.x2)) &&
                          ((this.x1 = f), (this.x2 = f)),
                        f < this.x1 && (this.x1 = f),
                        f > this.x2 && (this.x2 = f)),
                        typeof b == 'number' &&
                          ((isNaN(this.y1) || isNaN(this.y2)) &&
                            ((this.y1 = b), (this.y2 = b)),
                          b < this.y1 && (this.y1 = b),
                          b > this.y2 && (this.y2 = b));
                    }),
                    (Q.prototype.addX = function (f) {
                      this.addPoint(f, null);
                    }),
                    (Q.prototype.addY = function (f) {
                      this.addPoint(null, f);
                    }),
                    (Q.prototype.addBezier = function (f, b, x, j, C, I, F, q) {
                      var Y = [f, b],
                        se = [x, j],
                        pe = [C, I],
                        be = [F, q];
                      this.addPoint(f, b), this.addPoint(F, q);
                      for (var te = 0; te <= 1; te++) {
                        var Ue = 6 * Y[te] - 12 * se[te] + 6 * pe[te],
                          Le =
                            -3 * Y[te] + 9 * se[te] - 9 * pe[te] + 3 * be[te],
                          Oe = 3 * se[te] - 3 * Y[te];
                        if (Le != 0) {
                          var Me = Math.pow(Ue, 2) - 4 * Oe * Le;
                          if (!(Me < 0)) {
                            var Ce = (-Ue + Math.sqrt(Me)) / (2 * Le);
                            0 < Ce &&
                              Ce < 1 &&
                              (te === 0 &&
                                this.addX(
                                  ee(Y[te], se[te], pe[te], be[te], Ce),
                                ),
                              te === 1 &&
                                this.addY(
                                  ee(Y[te], se[te], pe[te], be[te], Ce),
                                ));
                            var $e = (-Ue - Math.sqrt(Me)) / (2 * Le);
                            0 < $e &&
                              $e < 1 &&
                              (te === 0 &&
                                this.addX(
                                  ee(Y[te], se[te], pe[te], be[te], $e),
                                ),
                              te === 1 &&
                                this.addY(
                                  ee(Y[te], se[te], pe[te], be[te], $e),
                                ));
                          }
                        } else {
                          if (Ue == 0) continue;
                          var Ze = -Oe / Ue;
                          0 < Ze &&
                            Ze < 1 &&
                            (te === 0 &&
                              this.addX(ee(Y[te], se[te], pe[te], be[te], Ze)),
                            te === 1 &&
                              this.addY(ee(Y[te], se[te], pe[te], be[te], Ze)));
                        }
                      }
                    }),
                    (Q.prototype.addQuad = function (f, b, x, j, C, I) {
                      var F = f + 0.6666666666666666 * (x - f),
                        q = b + (2 / 3) * (j - b),
                        Y = F + (1 / 3) * (C - f),
                        se = q + (1 / 3) * (I - b);
                      this.addBezier(f, b, F, q, Y, se, C, I);
                    }),
                    (oe.prototype.moveTo = function (f, b) {
                      this.commands.push({ type: 'M', x: f, y: b });
                    }),
                    (oe.prototype.lineTo = function (f, b) {
                      this.commands.push({ type: 'L', x: f, y: b });
                    }),
                    (oe.prototype.curveTo = oe.prototype.bezierCurveTo =
                      function (f, b, x, j, C, I) {
                        this.commands.push({
                          type: 'C',
                          x1: f,
                          y1: b,
                          x2: x,
                          y2: j,
                          x: C,
                          y: I,
                        });
                      }),
                    (oe.prototype.quadTo = oe.prototype.quadraticCurveTo =
                      function (f, b, x, j) {
                        this.commands.push({
                          type: 'Q',
                          x1: f,
                          y1: b,
                          x,
                          y: j,
                        });
                      }),
                    (oe.prototype.close = oe.prototype.closePath =
                      function () {
                        this.commands.push({ type: 'Z' });
                      }),
                    (oe.prototype.extend = function (f) {
                      if (f.commands) f = f.commands;
                      else if (f instanceof Q) {
                        var b = f;
                        return (
                          this.moveTo(b.x1, b.y1),
                          this.lineTo(b.x2, b.y1),
                          this.lineTo(b.x2, b.y2),
                          this.lineTo(b.x1, b.y2),
                          void this.close()
                        );
                      }
                      Array.prototype.push.apply(this.commands, f);
                    }),
                    (oe.prototype.getBoundingBox = function () {
                      for (
                        var f = new Q(), b = 0, x = 0, j = 0, C = 0, I = 0;
                        I < this.commands.length;
                        I++
                      ) {
                        var F = this.commands[I];
                        switch (F.type) {
                          case 'M':
                            f.addPoint(F.x, F.y), (b = j = F.x), (x = C = F.y);
                            break;
                          case 'L':
                            f.addPoint(F.x, F.y), (j = F.x), (C = F.y);
                            break;
                          case 'Q':
                            f.addQuad(j, C, F.x1, F.y1, F.x, F.y),
                              (j = F.x),
                              (C = F.y);
                            break;
                          case 'C':
                            f.addBezier(j, C, F.x1, F.y1, F.x2, F.y2, F.x, F.y),
                              (j = F.x),
                              (C = F.y);
                            break;
                          case 'Z':
                            (j = b), (C = x);
                            break;
                          default:
                            throw new Error(
                              'Unexpected path command ' + F.type,
                            );
                        }
                      }
                      return f.isEmpty() && f.addPoint(0, 0), f;
                    }),
                    (oe.prototype.draw = function (f) {
                      f.beginPath();
                      for (var b = 0; b < this.commands.length; b += 1) {
                        var x = this.commands[b];
                        x.type === 'M'
                          ? f.moveTo(x.x, x.y)
                          : x.type === 'L'
                          ? f.lineTo(x.x, x.y)
                          : x.type === 'C'
                          ? f.bezierCurveTo(x.x1, x.y1, x.x2, x.y2, x.x, x.y)
                          : x.type === 'Q'
                          ? f.quadraticCurveTo(x.x1, x.y1, x.x, x.y)
                          : x.type === 'Z' && f.closePath();
                      }
                      this.fill && ((f.fillStyle = this.fill), f.fill()),
                        this.stroke &&
                          ((f.strokeStyle = this.stroke),
                          (f.lineWidth = this.strokeWidth),
                          f.stroke());
                    }),
                    (oe.prototype.toPathData = function (f) {
                      function b() {
                        for (
                          var I, F = arguments, q = '', Y = 0;
                          Y < arguments.length;
                          Y += 1
                        ) {
                          var se = F[Y];
                          0 <= se && 0 < Y && (q += ' '),
                            (q +=
                              ((I = se),
                              Math.round(I) === I
                                ? '' + Math.round(I)
                                : I.toFixed(f)));
                        }
                        return q;
                      }
                      f = f !== void 0 ? f : 2;
                      for (
                        var x = '', j = 0;
                        j < this.commands.length;
                        j += 1
                      ) {
                        var C = this.commands[j];
                        C.type === 'M'
                          ? (x += 'M' + b(C.x, C.y))
                          : C.type === 'L'
                          ? (x += 'L' + b(C.x, C.y))
                          : C.type === 'C'
                          ? (x += 'C' + b(C.x1, C.y1, C.x2, C.y2, C.x, C.y))
                          : C.type === 'Q'
                          ? (x += 'Q' + b(C.x1, C.y1, C.x, C.y))
                          : C.type === 'Z' && (x += 'Z');
                      }
                      return x;
                    }),
                    (oe.prototype.toSVG = function (f) {
                      var b = '<path d="';
                      return (
                        (b += this.toPathData(f)),
                        (b += '"'),
                        this.fill &&
                          this.fill !== 'black' &&
                          (this.fill === null
                            ? (b += ' fill="none"')
                            : (b += ' fill="' + this.fill + '"')),
                        this.stroke &&
                          (b +=
                            ' stroke="' +
                            this.stroke +
                            '" stroke-width="' +
                            this.strokeWidth +
                            '"'),
                        (b += '/>')
                      );
                    }),
                    (oe.prototype.toDOMElement = function (f) {
                      var b = this.toPathData(f),
                        x = document.createElementNS(
                          'http://www.w3.org/2000/svg',
                          'path',
                        );
                      return x.setAttribute('d', b), x;
                    });
                  var de = { fail: ce, argument: ve, assert: ve },
                    Se = {},
                    fe = {},
                    ye = {};
                  function P(f) {
                    return function () {
                      return f;
                    };
                  }
                  (fe.BYTE = function (f) {
                    return (
                      de.argument(
                        0 <= f && f <= 255,
                        'Byte value should be between 0 and 255.',
                      ),
                      [f]
                    );
                  }),
                    (ye.BYTE = P(1)),
                    (fe.CHAR = function (f) {
                      return [f.charCodeAt(0)];
                    }),
                    (ye.CHAR = P(1)),
                    (fe.CHARARRAY = function (f) {
                      for (var b = [], x = 0; x < f.length; x += 1)
                        b[x] = f.charCodeAt(x);
                      return b;
                    }),
                    (ye.CHARARRAY = function (f) {
                      return f.length;
                    }),
                    (fe.USHORT = function (f) {
                      return [(f >> 8) & 255, 255 & f];
                    }),
                    (ye.USHORT = P(2)),
                    (fe.SHORT = function (f) {
                      return (
                        32768 <= f && (f = -(65536 - f)),
                        [(f >> 8) & 255, 255 & f]
                      );
                    }),
                    (ye.SHORT = P(2)),
                    (fe.UINT24 = function (f) {
                      return [(f >> 16) & 255, (f >> 8) & 255, 255 & f];
                    }),
                    (ye.UINT24 = P(3)),
                    (fe.ULONG = function (f) {
                      return [
                        (f >> 24) & 255,
                        (f >> 16) & 255,
                        (f >> 8) & 255,
                        255 & f,
                      ];
                    }),
                    (ye.ULONG = P(4)),
                    (fe.LONG = function (f) {
                      return (
                        2147483648 <= f && (f = -(4294967296 - f)),
                        [
                          (f >> 24) & 255,
                          (f >> 16) & 255,
                          (f >> 8) & 255,
                          255 & f,
                        ]
                      );
                    }),
                    (ye.LONG = P(4)),
                    (fe.FIXED = fe.ULONG),
                    (ye.FIXED = ye.ULONG),
                    (fe.FWORD = fe.SHORT),
                    (ye.FWORD = ye.SHORT),
                    (fe.UFWORD = fe.USHORT),
                    (ye.UFWORD = ye.USHORT),
                    (fe.LONGDATETIME = function (f) {
                      return [
                        0,
                        0,
                        0,
                        0,
                        (f >> 24) & 255,
                        (f >> 16) & 255,
                        (f >> 8) & 255,
                        255 & f,
                      ];
                    }),
                    (ye.LONGDATETIME = P(8)),
                    (fe.TAG = function (f) {
                      return (
                        de.argument(
                          f.length === 4,
                          'Tag should be exactly 4 ASCII characters.',
                        ),
                        [
                          f.charCodeAt(0),
                          f.charCodeAt(1),
                          f.charCodeAt(2),
                          f.charCodeAt(3),
                        ]
                      );
                    }),
                    (ye.TAG = P(4)),
                    (fe.Card8 = fe.BYTE),
                    (ye.Card8 = ye.BYTE),
                    (fe.Card16 = fe.USHORT),
                    (ye.Card16 = ye.USHORT),
                    (fe.OffSize = fe.BYTE),
                    (ye.OffSize = ye.BYTE),
                    (fe.SID = fe.USHORT),
                    (ye.SID = ye.USHORT),
                    (fe.NUMBER = function (f) {
                      return -107 <= f && f <= 107
                        ? [f + 139]
                        : 108 <= f && f <= 1131
                        ? [247 + ((f -= 108) >> 8), 255 & f]
                        : -1131 <= f && f <= -108
                        ? [251 + ((f = -f - 108) >> 8), 255 & f]
                        : -32768 <= f && f <= 32767
                        ? fe.NUMBER16(f)
                        : fe.NUMBER32(f);
                    }),
                    (ye.NUMBER = function (f) {
                      return fe.NUMBER(f).length;
                    }),
                    (fe.NUMBER16 = function (f) {
                      return [28, (f >> 8) & 255, 255 & f];
                    }),
                    (ye.NUMBER16 = P(3)),
                    (fe.NUMBER32 = function (f) {
                      return [
                        29,
                        (f >> 24) & 255,
                        (f >> 16) & 255,
                        (f >> 8) & 255,
                        255 & f,
                      ];
                    }),
                    (ye.NUMBER32 = P(5)),
                    (fe.REAL = function (f) {
                      var b = f.toString(),
                        x =
                          /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(
                            b,
                          );
                      if (x) {
                        var j = parseFloat(
                          '1e' + ((x[2] ? +x[2] : 0) + x[1].length),
                        );
                        b = (Math.round(f * j) / j).toString();
                      }
                      for (var C = '', I = 0, F = b.length; I < F; I += 1) {
                        var q = b[I];
                        C +=
                          q === 'e'
                            ? b[++I] === '-'
                              ? 'c'
                              : 'b'
                            : q === '.'
                            ? 'a'
                            : q === '-'
                            ? 'e'
                            : q;
                      }
                      for (
                        var Y = [30],
                          se = 0,
                          pe = (C += 1 & C.length ? 'f' : 'ff').length;
                        se < pe;
                        se += 2
                      )
                        Y.push(parseInt(C.substr(se, 2), 16));
                      return Y;
                    }),
                    (ye.REAL = function (f) {
                      return fe.REAL(f).length;
                    }),
                    (fe.NAME = fe.CHARARRAY),
                    (ye.NAME = ye.CHARARRAY),
                    (fe.STRING = fe.CHARARRAY),
                    (ye.STRING = ye.CHARARRAY),
                    (Se.UTF8 = function (f, b, x) {
                      for (var j = [], C = x, I = 0; I < C; I++, b += 1)
                        j[I] = f.getUint8(b);
                      return String.fromCharCode.apply(null, j);
                    }),
                    (Se.UTF16 = function (f, b, x) {
                      for (var j = [], C = x / 2, I = 0; I < C; I++, b += 2)
                        j[I] = f.getUint16(b);
                      return String.fromCharCode.apply(null, j);
                    }),
                    (fe.UTF16 = function (f) {
                      for (var b = [], x = 0; x < f.length; x += 1) {
                        var j = f.charCodeAt(x);
                        (b[b.length] = (j >> 8) & 255), (b[b.length] = 255 & j);
                      }
                      return b;
                    }),
                    (ye.UTF16 = function (f) {
                      return 2 * f.length;
                    });
                  var U = {
                    'x-mac-croatian':
                      '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7',
                    'x-mac-cyrillic':
                      '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E',
                    'x-mac-gaelic':
                      '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83',
                    'x-mac-greek':
                      '\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD',
                    'x-mac-icelandic':
                      '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                    'x-mac-inuit':
                      '\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xA0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142',
                    'x-mac-ce':
                      '\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7',
                    macintosh:
                      '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                    'x-mac-romanian':
                      '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                    'x-mac-turkish':
                      '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                  };
                  Se.MACSTRING = function (f, b, x, j) {
                    var C = U[j];
                    if (C !== void 0) {
                      for (var I = '', F = 0; F < x; F++) {
                        var q = f.getUint8(b + F);
                        I += q <= 127 ? String.fromCharCode(q) : C[127 & q];
                      }
                      return I;
                    }
                  };
                  var W,
                    K = typeof WeakMap == 'function' && new WeakMap();
                  function ne(f) {
                    return -128 <= f && f <= 127;
                  }
                  function re(f, b, x) {
                    for (
                      var j = 0, C = f.length;
                      b < C && j < 64 && f[b] === 0;

                    )
                      ++b, ++j;
                    return x.push(128 | (j - 1)), b;
                  }
                  function we(f, b, x) {
                    for (var j = 0, C = f.length, I = b; I < C && j < 64; ) {
                      var F = f[I];
                      if (!ne(F) || (F === 0 && I + 1 < C && f[I + 1] === 0))
                        break;
                      ++I, ++j;
                    }
                    x.push(j - 1);
                    for (var q = b; q < I; ++q) x.push((f[q] + 256) & 255);
                    return I;
                  }
                  function X(f, b, x) {
                    for (var j = 0, C = f.length, I = b; I < C && j < 64; ) {
                      var F = f[I];
                      if (F === 0 || (ne(F) && I + 1 < C && ne(f[I + 1])))
                        break;
                      ++I, ++j;
                    }
                    x.push(64 | (j - 1));
                    for (var q = b; q < I; ++q) {
                      var Y = f[q];
                      x.push(((Y + 65536) >> 8) & 255, (Y + 256) & 255);
                    }
                    return I;
                  }
                  (fe.MACSTRING = function (f, b) {
                    var x = (function (F) {
                      if (!W) for (var q in ((W = {}), U)) W[q] = new String(q);
                      var Y = W[F];
                      if (Y !== void 0) {
                        if (K) {
                          var se = K.get(Y);
                          if (se !== void 0) return se;
                        }
                        var pe = U[F];
                        if (pe !== void 0) {
                          for (var be = {}, te = 0; te < pe.length; te++)
                            be[pe.charCodeAt(te)] = te + 128;
                          return K && K.set(Y, be), be;
                        }
                      }
                    })(b);
                    if (x !== void 0) {
                      for (var j = [], C = 0; C < f.length; C++) {
                        var I = f.charCodeAt(C);
                        if (128 <= I && (I = x[I]) === void 0) return;
                        j[C] = I;
                      }
                      return j;
                    }
                  }),
                    (ye.MACSTRING = function (f, b) {
                      var x = fe.MACSTRING(f, b);
                      return x !== void 0 ? x.length : 0;
                    }),
                    (fe.VARDELTAS = function (f) {
                      for (var b = 0, x = []; b < f.length; ) {
                        var j = f[b];
                        b =
                          j === 0
                            ? re(f, b, x)
                            : -128 <= j && j <= 127
                            ? we(f, b, x)
                            : X(f, b, x);
                      }
                      return x;
                    }),
                    (fe.INDEX = function (f) {
                      for (
                        var b = 1, x = [b], j = [], C = 0;
                        C < f.length;
                        C += 1
                      ) {
                        var I = fe.OBJECT(f[C]);
                        Array.prototype.push.apply(j, I),
                          (b += I.length),
                          x.push(b);
                      }
                      if (j.length === 0) return [0, 0];
                      for (
                        var F = [],
                          q =
                            (1 + Math.floor(Math.log(b) / Math.log(2)) / 8) | 0,
                          Y = [void 0, fe.BYTE, fe.USHORT, fe.UINT24, fe.ULONG][
                            q
                          ],
                          se = 0;
                        se < x.length;
                        se += 1
                      ) {
                        var pe = Y(x[se]);
                        Array.prototype.push.apply(F, pe);
                      }
                      return Array.prototype.concat(
                        fe.Card16(f.length),
                        fe.OffSize(q),
                        F,
                        j,
                      );
                    }),
                    (ye.INDEX = function (f) {
                      return fe.INDEX(f).length;
                    }),
                    (fe.DICT = function (f) {
                      for (
                        var b = [], x = Object.keys(f), j = x.length, C = 0;
                        C < j;
                        C += 1
                      ) {
                        var I = parseInt(x[C], 0),
                          F = f[I];
                        b = (b = b.concat(fe.OPERAND(F.value, F.type))).concat(
                          fe.OPERATOR(I),
                        );
                      }
                      return b;
                    }),
                    (ye.DICT = function (f) {
                      return fe.DICT(f).length;
                    }),
                    (fe.OPERATOR = function (f) {
                      return f < 1200 ? [f] : [12, f - 1200];
                    }),
                    (fe.OPERAND = function (f, b) {
                      var x = [];
                      if (Array.isArray(b))
                        for (var j = 0; j < b.length; j += 1)
                          de.argument(
                            f.length === b.length,
                            'Not enough arguments given for type' + b,
                          ),
                            (x = x.concat(fe.OPERAND(f[j], b[j])));
                      else if (b === 'SID') x = x.concat(fe.NUMBER(f));
                      else if (b === 'offset') x = x.concat(fe.NUMBER32(f));
                      else if (b === 'number') x = x.concat(fe.NUMBER(f));
                      else {
                        if (b !== 'real')
                          throw new Error('Unknown operand type ' + b);
                        x = x.concat(fe.REAL(f));
                      }
                      return x;
                    }),
                    (fe.OP = fe.BYTE),
                    (ye.OP = ye.BYTE);
                  var ue = typeof WeakMap == 'function' && new WeakMap();
                  function he(f, b, x) {
                    for (var j = 0; j < b.length; j += 1) {
                      var C = b[j];
                      this[C.name] = C.value;
                    }
                    if (((this.tableName = f), (this.fields = b), x))
                      for (
                        var I = Object.keys(x), F = 0;
                        F < I.length;
                        F += 1
                      ) {
                        var q = I[F],
                          Y = x[q];
                        this[q] !== void 0 && (this[q] = Y);
                      }
                  }
                  function ie(f, b, x) {
                    x === void 0 && (x = b.length);
                    var j = new Array(b.length + 1);
                    j[0] = { name: f + 'Count', type: 'USHORT', value: x };
                    for (var C = 0; C < b.length; C++)
                      j[C + 1] = { name: f + C, type: 'USHORT', value: b[C] };
                    return j;
                  }
                  function xe(f, b, x) {
                    var j = b.length,
                      C = new Array(j + 1);
                    C[0] = { name: f + 'Count', type: 'USHORT', value: j };
                    for (var I = 0; I < j; I++)
                      C[I + 1] = {
                        name: f + I,
                        type: 'TABLE',
                        value: x(b[I], I),
                      };
                    return C;
                  }
                  function je(f, b, x) {
                    var j = b.length,
                      C = [];
                    C[0] = { name: f + 'Count', type: 'USHORT', value: j };
                    for (var I = 0; I < j; I++) C = C.concat(x(b[I], I));
                    return C;
                  }
                  function Te(f) {
                    f.format === 1
                      ? he.call(
                          this,
                          'coverageTable',
                          [
                            {
                              name: 'coverageFormat',
                              type: 'USHORT',
                              value: 1,
                            },
                          ].concat(ie('glyph', f.glyphs)),
                        )
                      : de.assert(
                          !1,
                          "Can't create coverage table format 2 yet.",
                        );
                  }
                  function Ne(f) {
                    he.call(
                      this,
                      'scriptListTable',
                      je('scriptRecord', f, function (b, x) {
                        var j = b.script,
                          C = j.defaultLangSys;
                        return (
                          de.assert(
                            !!C,
                            'Unable to write GSUB: script ' +
                              b.tag +
                              ' has no default language system.',
                          ),
                          [
                            {
                              name: 'scriptTag' + x,
                              type: 'TAG',
                              value: b.tag,
                            },
                            {
                              name: 'script' + x,
                              type: 'TABLE',
                              value: new he(
                                'scriptTable',
                                [
                                  {
                                    name: 'defaultLangSys',
                                    type: 'TABLE',
                                    value: new he(
                                      'defaultLangSys',
                                      [
                                        {
                                          name: 'lookupOrder',
                                          type: 'USHORT',
                                          value: 0,
                                        },
                                        {
                                          name: 'reqFeatureIndex',
                                          type: 'USHORT',
                                          value: C.reqFeatureIndex,
                                        },
                                      ].concat(
                                        ie('featureIndex', C.featureIndexes),
                                      ),
                                    ),
                                  },
                                ].concat(
                                  je(
                                    'langSys',
                                    j.langSysRecords,
                                    function (I, F) {
                                      var q = I.langSys;
                                      return [
                                        {
                                          name: 'langSysTag' + F,
                                          type: 'TAG',
                                          value: I.tag,
                                        },
                                        {
                                          name: 'langSys' + F,
                                          type: 'TABLE',
                                          value: new he(
                                            'langSys',
                                            [
                                              {
                                                name: 'lookupOrder',
                                                type: 'USHORT',
                                                value: 0,
                                              },
                                              {
                                                name: 'reqFeatureIndex',
                                                type: 'USHORT',
                                                value: q.reqFeatureIndex,
                                              },
                                            ].concat(
                                              ie(
                                                'featureIndex',
                                                q.featureIndexes,
                                              ),
                                            ),
                                          ),
                                        },
                                      ];
                                    },
                                  ),
                                ),
                              ),
                            },
                          ]
                        );
                      }),
                    );
                  }
                  function ze(f) {
                    he.call(
                      this,
                      'featureListTable',
                      je('featureRecord', f, function (b, x) {
                        var j = b.feature;
                        return [
                          { name: 'featureTag' + x, type: 'TAG', value: b.tag },
                          {
                            name: 'feature' + x,
                            type: 'TABLE',
                            value: new he(
                              'featureTable',
                              [
                                {
                                  name: 'featureParams',
                                  type: 'USHORT',
                                  value: j.featureParams,
                                },
                              ].concat(
                                ie('lookupListIndex', j.lookupListIndexes),
                              ),
                            ),
                          },
                        ];
                      }),
                    );
                  }
                  function qe(f, b) {
                    he.call(
                      this,
                      'lookupListTable',
                      xe('lookup', f, function (x) {
                        var j = b[x.lookupType];
                        return (
                          de.assert(
                            !!j,
                            'Unable to write GSUB lookup type ' +
                              x.lookupType +
                              ' tables.',
                          ),
                          new he(
                            'lookupTable',
                            [
                              {
                                name: 'lookupType',
                                type: 'USHORT',
                                value: x.lookupType,
                              },
                              {
                                name: 'lookupFlag',
                                type: 'USHORT',
                                value: x.lookupFlag,
                              },
                            ].concat(xe('subtable', x.subtables, j)),
                          )
                        );
                      }),
                    );
                  }
                  (fe.CHARSTRING = function (f) {
                    if (ue) {
                      var b = ue.get(f);
                      if (b !== void 0) return b;
                    }
                    for (var x = [], j = f.length, C = 0; C < j; C += 1) {
                      var I = f[C];
                      x = x.concat(fe[I.type](I.value));
                    }
                    return ue && ue.set(f, x), x;
                  }),
                    (ye.CHARSTRING = function (f) {
                      return fe.CHARSTRING(f).length;
                    }),
                    (fe.OBJECT = function (f) {
                      var b = fe[f.type];
                      return (
                        de.argument(
                          b !== void 0,
                          'No encoding function for type ' + f.type,
                        ),
                        b(f.value)
                      );
                    }),
                    (ye.OBJECT = function (f) {
                      var b = ye[f.type];
                      return (
                        de.argument(
                          b !== void 0,
                          'No sizeOf function for type ' + f.type,
                        ),
                        b(f.value)
                      );
                    }),
                    (fe.TABLE = function (f) {
                      for (
                        var b = [], x = f.fields.length, j = [], C = [], I = 0;
                        I < x;
                        I += 1
                      ) {
                        var F = f.fields[I],
                          q = fe[F.type];
                        de.argument(
                          q !== void 0,
                          'No encoding function for field type ' +
                            F.type +
                            ' (' +
                            F.name +
                            ')',
                        );
                        var Y = f[F.name];
                        Y === void 0 && (Y = F.value);
                        var se = q(Y);
                        F.type === 'TABLE'
                          ? (C.push(b.length),
                            (b = b.concat([0, 0])),
                            j.push(se))
                          : (b = b.concat(se));
                      }
                      for (var pe = 0; pe < j.length; pe += 1) {
                        var be = C[pe],
                          te = b.length;
                        de.argument(
                          te < 65536,
                          'Table ' + f.tableName + ' too big.',
                        ),
                          (b[be] = te >> 8),
                          (b[be + 1] = 255 & te),
                          (b = b.concat(j[pe]));
                      }
                      return b;
                    }),
                    (ye.TABLE = function (f) {
                      for (
                        var b = 0, x = f.fields.length, j = 0;
                        j < x;
                        j += 1
                      ) {
                        var C = f.fields[j],
                          I = ye[C.type];
                        de.argument(
                          I !== void 0,
                          'No sizeOf function for field type ' +
                            C.type +
                            ' (' +
                            C.name +
                            ')',
                        );
                        var F = f[C.name];
                        F === void 0 && (F = C.value),
                          (b += I(F)),
                          C.type === 'TABLE' && (b += 2);
                      }
                      return b;
                    }),
                    (fe.RECORD = fe.TABLE),
                    (ye.RECORD = ye.TABLE),
                    (fe.LITERAL = function (f) {
                      return f;
                    }),
                    (ye.LITERAL = function (f) {
                      return f.length;
                    }),
                    (he.prototype.encode = function () {
                      return fe.TABLE(this);
                    }),
                    (he.prototype.sizeOf = function () {
                      return ye.TABLE(this);
                    });
                  var Fe = {
                    Table: he,
                    Record: he,
                    Coverage: ((Te.prototype = Object.create(
                      he.prototype,
                    )).constructor = Te),
                    ScriptList: ((Ne.prototype = Object.create(
                      he.prototype,
                    )).constructor = Ne),
                    FeatureList: ((ze.prototype = Object.create(
                      he.prototype,
                    )).constructor = ze),
                    LookupList: ((qe.prototype = Object.create(
                      he.prototype,
                    )).constructor = qe),
                    ushortList: ie,
                    tableList: xe,
                    recordList: je,
                  };
                  function nt(f, b) {
                    return f.getUint8(b);
                  }
                  function ke(f, b) {
                    return f.getUint16(b, !1);
                  }
                  function Ae(f, b) {
                    return f.getUint32(b, !1);
                  }
                  function Ve(f, b) {
                    return f.getInt16(b, !1) + f.getUint16(b + 2, !1) / 65535;
                  }
                  var We = {
                    byte: 1,
                    uShort: 2,
                    short: 2,
                    uLong: 4,
                    fixed: 4,
                    longDateTime: 8,
                    tag: 4,
                  };
                  function ge(f, b) {
                    (this.data = f),
                      (this.offset = b),
                      (this.relativeOffset = 0);
                  }
                  (ge.prototype.parseByte = function () {
                    var f = this.data.getUint8(
                      this.offset + this.relativeOffset,
                    );
                    return (this.relativeOffset += 1), f;
                  }),
                    (ge.prototype.parseChar = function () {
                      var f = this.data.getInt8(
                        this.offset + this.relativeOffset,
                      );
                      return (this.relativeOffset += 1), f;
                    }),
                    (ge.prototype.parseCard8 = ge.prototype.parseByte),
                    (ge.prototype.parseCard16 = ge.prototype.parseUShort =
                      function () {
                        var f = this.data.getUint16(
                          this.offset + this.relativeOffset,
                        );
                        return (this.relativeOffset += 2), f;
                      }),
                    (ge.prototype.parseSID = ge.prototype.parseUShort),
                    (ge.prototype.parseOffset16 = ge.prototype.parseUShort),
                    (ge.prototype.parseShort = function () {
                      var f = this.data.getInt16(
                        this.offset + this.relativeOffset,
                      );
                      return (this.relativeOffset += 2), f;
                    }),
                    (ge.prototype.parseF2Dot14 = function () {
                      var f =
                        this.data.getInt16(this.offset + this.relativeOffset) /
                        16384;
                      return (this.relativeOffset += 2), f;
                    }),
                    (ge.prototype.parseOffset32 = ge.prototype.parseULong =
                      function () {
                        var f = Ae(
                          this.data,
                          this.offset + this.relativeOffset,
                        );
                        return (this.relativeOffset += 4), f;
                      }),
                    (ge.prototype.parseFixed = function () {
                      var f = Ve(this.data, this.offset + this.relativeOffset);
                      return (this.relativeOffset += 4), f;
                    }),
                    (ge.prototype.parseString = function (f) {
                      var b = this.data,
                        x = this.offset + this.relativeOffset,
                        j = '';
                      this.relativeOffset += f;
                      for (var C = 0; C < f; C++)
                        j += String.fromCharCode(b.getUint8(x + C));
                      return j;
                    }),
                    (ge.prototype.parseTag = function () {
                      return this.parseString(4);
                    }),
                    (ge.prototype.parseLongDateTime = function () {
                      var f = Ae(
                        this.data,
                        this.offset + this.relativeOffset + 4,
                      );
                      return (f -= 2082844800), (this.relativeOffset += 8), f;
                    }),
                    (ge.prototype.parseVersion = function (f) {
                      var b = ke(this.data, this.offset + this.relativeOffset),
                        x = ke(
                          this.data,
                          this.offset + this.relativeOffset + 2,
                        );
                      return (
                        (this.relativeOffset += 4),
                        f === void 0 && (f = 4096),
                        b + x / f / 10
                      );
                    }),
                    (ge.prototype.skip = function (f, b) {
                      b === void 0 && (b = 1),
                        (this.relativeOffset += We[f] * b);
                    }),
                    (ge.prototype.parseULongList = function (f) {
                      f === void 0 && (f = this.parseULong());
                      for (
                        var b = new Array(f),
                          x = this.data,
                          j = this.offset + this.relativeOffset,
                          C = 0;
                        C < f;
                        C++
                      )
                        (b[C] = x.getUint32(j)), (j += 4);
                      return (this.relativeOffset += 4 * f), b;
                    }),
                    (ge.prototype.parseOffset16List =
                      ge.prototype.parseUShortList =
                        function (f) {
                          f === void 0 && (f = this.parseUShort());
                          for (
                            var b = new Array(f),
                              x = this.data,
                              j = this.offset + this.relativeOffset,
                              C = 0;
                            C < f;
                            C++
                          )
                            (b[C] = x.getUint16(j)), (j += 2);
                          return (this.relativeOffset += 2 * f), b;
                        }),
                    (ge.prototype.parseShortList = function (f) {
                      for (
                        var b = new Array(f),
                          x = this.data,
                          j = this.offset + this.relativeOffset,
                          C = 0;
                        C < f;
                        C++
                      )
                        (b[C] = x.getInt16(j)), (j += 2);
                      return (this.relativeOffset += 2 * f), b;
                    }),
                    (ge.prototype.parseByteList = function (f) {
                      for (
                        var b = new Array(f),
                          x = this.data,
                          j = this.offset + this.relativeOffset,
                          C = 0;
                        C < f;
                        C++
                      )
                        b[C] = x.getUint8(j++);
                      return (this.relativeOffset += f), b;
                    }),
                    (ge.prototype.parseList = function (f, b) {
                      b || ((b = f), (f = this.parseUShort()));
                      for (var x = new Array(f), j = 0; j < f; j++)
                        x[j] = b.call(this);
                      return x;
                    }),
                    (ge.prototype.parseList32 = function (f, b) {
                      b || ((b = f), (f = this.parseULong()));
                      for (var x = new Array(f), j = 0; j < f; j++)
                        x[j] = b.call(this);
                      return x;
                    }),
                    (ge.prototype.parseRecordList = function (f, b) {
                      b || ((b = f), (f = this.parseUShort()));
                      for (
                        var x = new Array(f), j = Object.keys(b), C = 0;
                        C < f;
                        C++
                      ) {
                        for (var I = {}, F = 0; F < j.length; F++) {
                          var q = j[F],
                            Y = b[q];
                          I[q] = Y.call(this);
                        }
                        x[C] = I;
                      }
                      return x;
                    }),
                    (ge.prototype.parseRecordList32 = function (f, b) {
                      b || ((b = f), (f = this.parseULong()));
                      for (
                        var x = new Array(f), j = Object.keys(b), C = 0;
                        C < f;
                        C++
                      ) {
                        for (var I = {}, F = 0; F < j.length; F++) {
                          var q = j[F],
                            Y = b[q];
                          I[q] = Y.call(this);
                        }
                        x[C] = I;
                      }
                      return x;
                    }),
                    (ge.prototype.parseStruct = function (f) {
                      if (typeof f == 'function') return f.call(this);
                      for (
                        var b = Object.keys(f), x = {}, j = 0;
                        j < b.length;
                        j++
                      ) {
                        var C = b[j],
                          I = f[C];
                        x[C] = I.call(this);
                      }
                      return x;
                    }),
                    (ge.prototype.parseValueRecord = function (f) {
                      if ((f === void 0 && (f = this.parseUShort()), f !== 0)) {
                        var b = {};
                        return (
                          1 & f && (b.xPlacement = this.parseShort()),
                          2 & f && (b.yPlacement = this.parseShort()),
                          4 & f && (b.xAdvance = this.parseShort()),
                          8 & f && (b.yAdvance = this.parseShort()),
                          16 & f &&
                            ((b.xPlaDevice = void 0), this.parseShort()),
                          32 & f &&
                            ((b.yPlaDevice = void 0), this.parseShort()),
                          64 & f &&
                            ((b.xAdvDevice = void 0), this.parseShort()),
                          128 & f &&
                            ((b.yAdvDevice = void 0), this.parseShort()),
                          b
                        );
                      }
                    }),
                    (ge.prototype.parseValueRecordList = function () {
                      for (
                        var f = this.parseUShort(),
                          b = this.parseUShort(),
                          x = new Array(b),
                          j = 0;
                        j < b;
                        j++
                      )
                        x[j] = this.parseValueRecord(f);
                      return x;
                    }),
                    (ge.prototype.parsePointer = function (f) {
                      var b = this.parseOffset16();
                      if (0 < b)
                        return new ge(this.data, this.offset + b).parseStruct(
                          f,
                        );
                    }),
                    (ge.prototype.parsePointer32 = function (f) {
                      var b = this.parseOffset32();
                      if (0 < b)
                        return new ge(this.data, this.offset + b).parseStruct(
                          f,
                        );
                    }),
                    (ge.prototype.parseListOfLists = function (f) {
                      for (
                        var b = this.parseOffset16List(),
                          x = b.length,
                          j = this.relativeOffset,
                          C = new Array(x),
                          I = 0;
                        I < x;
                        I++
                      ) {
                        var F = b[I];
                        if (F !== 0)
                          if (((this.relativeOffset = F), f)) {
                            for (
                              var q = this.parseOffset16List(),
                                Y = new Array(q.length),
                                se = 0;
                              se < q.length;
                              se++
                            )
                              (this.relativeOffset = F + q[se]),
                                (Y[se] = f.call(this));
                            C[I] = Y;
                          } else C[I] = this.parseUShortList();
                        else C[I] = void 0;
                      }
                      return (this.relativeOffset = j), C;
                    }),
                    (ge.prototype.parseCoverage = function () {
                      var f = this.offset + this.relativeOffset,
                        b = this.parseUShort(),
                        x = this.parseUShort();
                      if (b === 1)
                        return { format: 1, glyphs: this.parseUShortList(x) };
                      if (b !== 2)
                        throw new Error(
                          '0x' +
                            f.toString(16) +
                            ': Coverage format must be 1 or 2.',
                        );
                      for (var j = new Array(x), C = 0; C < x; C++)
                        j[C] = {
                          start: this.parseUShort(),
                          end: this.parseUShort(),
                          index: this.parseUShort(),
                        };
                      return { format: 2, ranges: j };
                    }),
                    (ge.prototype.parseClassDef = function () {
                      var f = this.offset + this.relativeOffset,
                        b = this.parseUShort();
                      if (b === 1)
                        return {
                          format: 1,
                          startGlyph: this.parseUShort(),
                          classes: this.parseUShortList(),
                        };
                      if (b === 2)
                        return {
                          format: 2,
                          ranges: this.parseRecordList({
                            start: ge.uShort,
                            end: ge.uShort,
                            classId: ge.uShort,
                          }),
                        };
                      throw new Error(
                        '0x' +
                          f.toString(16) +
                          ': ClassDef format must be 1 or 2.',
                      );
                    }),
                    (ge.list = function (f, b) {
                      return function () {
                        return this.parseList(f, b);
                      };
                    }),
                    (ge.list32 = function (f, b) {
                      return function () {
                        return this.parseList32(f, b);
                      };
                    }),
                    (ge.recordList = function (f, b) {
                      return function () {
                        return this.parseRecordList(f, b);
                      };
                    }),
                    (ge.recordList32 = function (f, b) {
                      return function () {
                        return this.parseRecordList32(f, b);
                      };
                    }),
                    (ge.pointer = function (f) {
                      return function () {
                        return this.parsePointer(f);
                      };
                    }),
                    (ge.pointer32 = function (f) {
                      return function () {
                        return this.parsePointer32(f);
                      };
                    }),
                    (ge.tag = ge.prototype.parseTag),
                    (ge.byte = ge.prototype.parseByte),
                    (ge.uShort = ge.offset16 = ge.prototype.parseUShort),
                    (ge.uShortList = ge.prototype.parseUShortList),
                    (ge.uLong = ge.offset32 = ge.prototype.parseULong),
                    (ge.uLongList = ge.prototype.parseULongList),
                    (ge.struct = ge.prototype.parseStruct),
                    (ge.coverage = ge.prototype.parseCoverage),
                    (ge.classDef = ge.prototype.parseClassDef);
                  var Qe = {
                    reserved: ge.uShort,
                    reqFeatureIndex: ge.uShort,
                    featureIndexes: ge.uShortList,
                  };
                  (ge.prototype.parseScriptList = function () {
                    return (
                      this.parsePointer(
                        ge.recordList({
                          tag: ge.tag,
                          script: ge.pointer({
                            defaultLangSys: ge.pointer(Qe),
                            langSysRecords: ge.recordList({
                              tag: ge.tag,
                              langSys: ge.pointer(Qe),
                            }),
                          }),
                        }),
                      ) || []
                    );
                  }),
                    (ge.prototype.parseFeatureList = function () {
                      return (
                        this.parsePointer(
                          ge.recordList({
                            tag: ge.tag,
                            feature: ge.pointer({
                              featureParams: ge.offset16,
                              lookupListIndexes: ge.uShortList,
                            }),
                          }),
                        ) || []
                      );
                    }),
                    (ge.prototype.parseLookupList = function (f) {
                      return (
                        this.parsePointer(
                          ge.list(
                            ge.pointer(function () {
                              var b = this.parseUShort();
                              de.argument(
                                1 <= b && b <= 9,
                                'GPOS/GSUB lookup type ' + b + ' unknown.',
                              );
                              var x = this.parseUShort(),
                                j = 16 & x;
                              return {
                                lookupType: b,
                                lookupFlag: x,
                                subtables: this.parseList(ge.pointer(f[b])),
                                markFilteringSet: j
                                  ? this.parseUShort()
                                  : void 0,
                              };
                            }),
                          ),
                        ) || []
                      );
                    }),
                    (ge.prototype.parseFeatureVariationsList = function () {
                      return (
                        this.parsePointer32(function () {
                          var f = this.parseUShort(),
                            b = this.parseUShort();
                          return (
                            de.argument(
                              f === 1 && b < 1,
                              'GPOS/GSUB feature variations table unknown.',
                            ),
                            this.parseRecordList32({
                              conditionSetOffset: ge.offset32,
                              featureTableSubstitutionOffset: ge.offset32,
                            })
                          );
                        }) || []
                      );
                    });
                  var G = {
                      getByte: nt,
                      getCard8: nt,
                      getUShort: ke,
                      getCard16: ke,
                      getShort: function (f, b) {
                        return f.getInt16(b, !1);
                      },
                      getULong: Ae,
                      getFixed: Ve,
                      getTag: function (f, b) {
                        for (var x = '', j = b; j < b + 4; j += 1)
                          x += String.fromCharCode(f.getInt8(j));
                        return x;
                      },
                      getOffset: function (f, b, x) {
                        for (var j = 0, C = 0; C < x; C += 1)
                          (j <<= 8), (j += f.getUint8(b + C));
                        return j;
                      },
                      getBytes: function (f, b, x) {
                        for (var j = [], C = b; C < x; C += 1)
                          j.push(f.getUint8(C));
                        return j;
                      },
                      bytesToString: function (f) {
                        for (var b = '', x = 0; x < f.length; x += 1)
                          b += String.fromCharCode(f[x]);
                        return b;
                      },
                      Parser: ge,
                    },
                    z = {
                      parse: function (f, b) {
                        var x = {};
                        (x.version = G.getUShort(f, b)),
                          de.argument(
                            x.version === 0,
                            'cmap table version should be 0.',
                          ),
                          (x.numTables = G.getUShort(f, b + 2));
                        for (var j = -1, C = x.numTables - 1; 0 <= C; --C) {
                          var I = G.getUShort(f, b + 4 + 8 * C),
                            F = G.getUShort(f, b + 4 + 8 * C + 2);
                          if (
                            (I === 3 && (F === 0 || F === 1 || F === 10)) ||
                            (I === 0 &&
                              (F === 0 ||
                                F === 1 ||
                                F === 2 ||
                                F === 3 ||
                                F === 4))
                          ) {
                            j = G.getULong(f, b + 4 + 8 * C + 4);
                            break;
                          }
                        }
                        if (j === -1)
                          throw new Error('No valid cmap sub-tables found.');
                        var q = new G.Parser(f, b + j);
                        if (((x.format = q.parseUShort()), x.format === 12))
                          (function (Y, se) {
                            var pe;
                            se.parseUShort(),
                              (Y.length = se.parseULong()),
                              (Y.language = se.parseULong()),
                              (Y.groupCount = pe = se.parseULong()),
                              (Y.glyphIndexMap = {});
                            for (var be = 0; be < pe; be += 1)
                              for (
                                var te = se.parseULong(),
                                  Ue = se.parseULong(),
                                  Le = se.parseULong(),
                                  Oe = te;
                                Oe <= Ue;
                                Oe += 1
                              )
                                (Y.glyphIndexMap[Oe] = Le), Le++;
                          })(x, q);
                        else {
                          if (x.format !== 4)
                            throw new Error(
                              'Only format 4 and 12 cmap tables are supported (found format ' +
                                x.format +
                                ').',
                            );
                          (function (Y, se, pe, be, te) {
                            var Ue;
                            (Y.length = se.parseUShort()),
                              (Y.language = se.parseUShort()),
                              (Y.segCount = Ue = se.parseUShort() >> 1),
                              se.skip('uShort', 3),
                              (Y.glyphIndexMap = {});
                            for (
                              var Le = new G.Parser(pe, be + te + 14),
                                Oe = new G.Parser(pe, be + te + 16 + 2 * Ue),
                                Me = new G.Parser(pe, be + te + 16 + 4 * Ue),
                                Ce = new G.Parser(pe, be + te + 16 + 6 * Ue),
                                $e = be + te + 16 + 8 * Ue,
                                Ze = 0;
                              Ze < Ue - 1;
                              Ze += 1
                            )
                              for (
                                var ct = void 0,
                                  et = Le.parseUShort(),
                                  rt = Oe.parseUShort(),
                                  Nt = Me.parseShort(),
                                  pt = Ce.parseUShort(),
                                  ht = rt;
                                ht <= et;
                                ht += 1
                              )
                                pt !== 0
                                  ? (($e = Ce.offset + Ce.relativeOffset - 2),
                                    ($e += pt),
                                    ($e += 2 * (ht - rt)),
                                    (ct = G.getUShort(pe, $e)) !== 0 &&
                                      (ct = (ct + Nt) & 65535))
                                  : (ct = (ht + Nt) & 65535),
                                  (Y.glyphIndexMap[ht] = ct);
                          })(x, q, f, b, j);
                        }
                        return x;
                      },
                      make: function (f) {
                        var b,
                          x = !0;
                        for (b = f.length - 1; 0 < b; --b)
                          if (65535 < f.get(b).unicode) {
                            console.log('Adding CMAP format 12 (needed!)'),
                              (x = !1);
                            break;
                          }
                        var j = [
                          { name: 'version', type: 'USHORT', value: 0 },
                          {
                            name: 'numTables',
                            type: 'USHORT',
                            value: x ? 1 : 2,
                          },
                          { name: 'platformID', type: 'USHORT', value: 3 },
                          { name: 'encodingID', type: 'USHORT', value: 1 },
                          { name: 'offset', type: 'ULONG', value: x ? 12 : 20 },
                        ];
                        x ||
                          (j = j.concat([
                            {
                              name: 'cmap12PlatformID',
                              type: 'USHORT',
                              value: 3,
                            },
                            {
                              name: 'cmap12EncodingID',
                              type: 'USHORT',
                              value: 10,
                            },
                            { name: 'cmap12Offset', type: 'ULONG', value: 0 },
                          ])),
                          (j = j.concat([
                            { name: 'format', type: 'USHORT', value: 4 },
                            { name: 'cmap4Length', type: 'USHORT', value: 0 },
                            { name: 'language', type: 'USHORT', value: 0 },
                            { name: 'segCountX2', type: 'USHORT', value: 0 },
                            { name: 'searchRange', type: 'USHORT', value: 0 },
                            { name: 'entrySelector', type: 'USHORT', value: 0 },
                            { name: 'rangeShift', type: 'USHORT', value: 0 },
                          ]));
                        var C,
                          I,
                          F,
                          q = new Fe.Table('cmap', j);
                        for (q.segments = [], b = 0; b < f.length; b += 1) {
                          for (
                            var Y = f.get(b), se = 0;
                            se < Y.unicodes.length;
                            se += 1
                          )
                            (C = q),
                              (I = Y.unicodes[se]),
                              (F = b),
                              C.segments.push({
                                end: I,
                                start: I,
                                delta: -(I - F),
                                offset: 0,
                                glyphIndex: F,
                              });
                          q.segments = q.segments.sort(function (ct, et) {
                            return ct.start - et.start;
                          });
                        }
                        q.segments.push({
                          end: 65535,
                          start: 65535,
                          delta: 1,
                          offset: 0,
                        });
                        var pe = q.segments.length,
                          be = 0,
                          te = [],
                          Ue = [],
                          Le = [],
                          Oe = [],
                          Me = [],
                          Ce = [];
                        for (b = 0; b < pe; b += 1) {
                          var $e = q.segments[b];
                          $e.end <= 65535 && $e.start <= 65535
                            ? ((te = te.concat({
                                name: 'end_' + b,
                                type: 'USHORT',
                                value: $e.end,
                              })),
                              (Ue = Ue.concat({
                                name: 'start_' + b,
                                type: 'USHORT',
                                value: $e.start,
                              })),
                              (Le = Le.concat({
                                name: 'idDelta_' + b,
                                type: 'SHORT',
                                value: $e.delta,
                              })),
                              (Oe = Oe.concat({
                                name: 'idRangeOffset_' + b,
                                type: 'USHORT',
                                value: $e.offset,
                              })),
                              $e.glyphId !== void 0 &&
                                (Me = Me.concat({
                                  name: 'glyph_' + b,
                                  type: 'USHORT',
                                  value: $e.glyphId,
                                })))
                            : (be += 1),
                            x ||
                              $e.glyphIndex === void 0 ||
                              (Ce = (Ce = (Ce = Ce.concat({
                                name: 'cmap12Start_' + b,
                                type: 'ULONG',
                                value: $e.start,
                              })).concat({
                                name: 'cmap12End_' + b,
                                type: 'ULONG',
                                value: $e.end,
                              })).concat({
                                name: 'cmap12Glyph_' + b,
                                type: 'ULONG',
                                value: $e.glyphIndex,
                              }));
                        }
                        if (
                          ((q.segCountX2 = 2 * (pe - be)),
                          (q.searchRange =
                            2 *
                            Math.pow(
                              2,
                              Math.floor(Math.log(pe - be) / Math.log(2)),
                            )),
                          (q.entrySelector =
                            Math.log(q.searchRange / 2) / Math.log(2)),
                          (q.rangeShift = q.segCountX2 - q.searchRange),
                          (q.fields = q.fields.concat(te)),
                          q.fields.push({
                            name: 'reservedPad',
                            type: 'USHORT',
                            value: 0,
                          }),
                          (q.fields = q.fields.concat(Ue)),
                          (q.fields = q.fields.concat(Le)),
                          (q.fields = q.fields.concat(Oe)),
                          (q.fields = q.fields.concat(Me)),
                          (q.cmap4Length =
                            14 +
                            2 * te.length +
                            2 +
                            2 * Ue.length +
                            2 * Le.length +
                            2 * Oe.length +
                            2 * Me.length),
                          !x)
                        ) {
                          var Ze = 16 + 4 * Ce.length;
                          (q.cmap12Offset = 20 + q.cmap4Length),
                            (q.fields = q.fields.concat([
                              {
                                name: 'cmap12Format',
                                type: 'USHORT',
                                value: 12,
                              },
                              {
                                name: 'cmap12Reserved',
                                type: 'USHORT',
                                value: 0,
                              },
                              {
                                name: 'cmap12Length',
                                type: 'ULONG',
                                value: Ze,
                              },
                              {
                                name: 'cmap12Language',
                                type: 'ULONG',
                                value: 0,
                              },
                              {
                                name: 'cmap12nGroups',
                                type: 'ULONG',
                                value: Ce.length / 3,
                              },
                            ])),
                            (q.fields = q.fields.concat(Ce));
                        }
                        return q;
                      },
                    },
                    V = [
                      '.notdef',
                      'space',
                      'exclam',
                      'quotedbl',
                      'numbersign',
                      'dollar',
                      'percent',
                      'ampersand',
                      'quoteright',
                      'parenleft',
                      'parenright',
                      'asterisk',
                      'plus',
                      'comma',
                      'hyphen',
                      'period',
                      'slash',
                      'zero',
                      'one',
                      'two',
                      'three',
                      'four',
                      'five',
                      'six',
                      'seven',
                      'eight',
                      'nine',
                      'colon',
                      'semicolon',
                      'less',
                      'equal',
                      'greater',
                      'question',
                      'at',
                      'A',
                      'B',
                      'C',
                      'D',
                      'E',
                      'F',
                      'G',
                      'H',
                      'I',
                      'J',
                      'K',
                      'L',
                      'M',
                      'N',
                      'O',
                      'P',
                      'Q',
                      'R',
                      'S',
                      'T',
                      'U',
                      'V',
                      'W',
                      'X',
                      'Y',
                      'Z',
                      'bracketleft',
                      'backslash',
                      'bracketright',
                      'asciicircum',
                      'underscore',
                      'quoteleft',
                      'a',
                      'b',
                      'c',
                      'd',
                      'e',
                      'f',
                      'g',
                      'h',
                      'i',
                      'j',
                      'k',
                      'l',
                      'm',
                      'n',
                      'o',
                      'p',
                      'q',
                      'r',
                      's',
                      't',
                      'u',
                      'v',
                      'w',
                      'x',
                      'y',
                      'z',
                      'braceleft',
                      'bar',
                      'braceright',
                      'asciitilde',
                      'exclamdown',
                      'cent',
                      'sterling',
                      'fraction',
                      'yen',
                      'florin',
                      'section',
                      'currency',
                      'quotesingle',
                      'quotedblleft',
                      'guillemotleft',
                      'guilsinglleft',
                      'guilsinglright',
                      'fi',
                      'fl',
                      'endash',
                      'dagger',
                      'daggerdbl',
                      'periodcentered',
                      'paragraph',
                      'bullet',
                      'quotesinglbase',
                      'quotedblbase',
                      'quotedblright',
                      'guillemotright',
                      'ellipsis',
                      'perthousand',
                      'questiondown',
                      'grave',
                      'acute',
                      'circumflex',
                      'tilde',
                      'macron',
                      'breve',
                      'dotaccent',
                      'dieresis',
                      'ring',
                      'cedilla',
                      'hungarumlaut',
                      'ogonek',
                      'caron',
                      'emdash',
                      'AE',
                      'ordfeminine',
                      'Lslash',
                      'Oslash',
                      'OE',
                      'ordmasculine',
                      'ae',
                      'dotlessi',
                      'lslash',
                      'oslash',
                      'oe',
                      'germandbls',
                      'onesuperior',
                      'logicalnot',
                      'mu',
                      'trademark',
                      'Eth',
                      'onehalf',
                      'plusminus',
                      'Thorn',
                      'onequarter',
                      'divide',
                      'brokenbar',
                      'degree',
                      'thorn',
                      'threequarters',
                      'twosuperior',
                      'registered',
                      'minus',
                      'eth',
                      'multiply',
                      'threesuperior',
                      'copyright',
                      'Aacute',
                      'Acircumflex',
                      'Adieresis',
                      'Agrave',
                      'Aring',
                      'Atilde',
                      'Ccedilla',
                      'Eacute',
                      'Ecircumflex',
                      'Edieresis',
                      'Egrave',
                      'Iacute',
                      'Icircumflex',
                      'Idieresis',
                      'Igrave',
                      'Ntilde',
                      'Oacute',
                      'Ocircumflex',
                      'Odieresis',
                      'Ograve',
                      'Otilde',
                      'Scaron',
                      'Uacute',
                      'Ucircumflex',
                      'Udieresis',
                      'Ugrave',
                      'Yacute',
                      'Ydieresis',
                      'Zcaron',
                      'aacute',
                      'acircumflex',
                      'adieresis',
                      'agrave',
                      'aring',
                      'atilde',
                      'ccedilla',
                      'eacute',
                      'ecircumflex',
                      'edieresis',
                      'egrave',
                      'iacute',
                      'icircumflex',
                      'idieresis',
                      'igrave',
                      'ntilde',
                      'oacute',
                      'ocircumflex',
                      'odieresis',
                      'ograve',
                      'otilde',
                      'scaron',
                      'uacute',
                      'ucircumflex',
                      'udieresis',
                      'ugrave',
                      'yacute',
                      'ydieresis',
                      'zcaron',
                      'exclamsmall',
                      'Hungarumlautsmall',
                      'dollaroldstyle',
                      'dollarsuperior',
                      'ampersandsmall',
                      'Acutesmall',
                      'parenleftsuperior',
                      'parenrightsuperior',
                      '266 ff',
                      'onedotenleader',
                      'zerooldstyle',
                      'oneoldstyle',
                      'twooldstyle',
                      'threeoldstyle',
                      'fouroldstyle',
                      'fiveoldstyle',
                      'sixoldstyle',
                      'sevenoldstyle',
                      'eightoldstyle',
                      'nineoldstyle',
                      'commasuperior',
                      'threequartersemdash',
                      'periodsuperior',
                      'questionsmall',
                      'asuperior',
                      'bsuperior',
                      'centsuperior',
                      'dsuperior',
                      'esuperior',
                      'isuperior',
                      'lsuperior',
                      'msuperior',
                      'nsuperior',
                      'osuperior',
                      'rsuperior',
                      'ssuperior',
                      'tsuperior',
                      'ff',
                      'ffi',
                      'ffl',
                      'parenleftinferior',
                      'parenrightinferior',
                      'Circumflexsmall',
                      'hyphensuperior',
                      'Gravesmall',
                      'Asmall',
                      'Bsmall',
                      'Csmall',
                      'Dsmall',
                      'Esmall',
                      'Fsmall',
                      'Gsmall',
                      'Hsmall',
                      'Ismall',
                      'Jsmall',
                      'Ksmall',
                      'Lsmall',
                      'Msmall',
                      'Nsmall',
                      'Osmall',
                      'Psmall',
                      'Qsmall',
                      'Rsmall',
                      'Ssmall',
                      'Tsmall',
                      'Usmall',
                      'Vsmall',
                      'Wsmall',
                      'Xsmall',
                      'Ysmall',
                      'Zsmall',
                      'colonmonetary',
                      'onefitted',
                      'rupiah',
                      'Tildesmall',
                      'exclamdownsmall',
                      'centoldstyle',
                      'Lslashsmall',
                      'Scaronsmall',
                      'Zcaronsmall',
                      'Dieresissmall',
                      'Brevesmall',
                      'Caronsmall',
                      'Dotaccentsmall',
                      'Macronsmall',
                      'figuredash',
                      'hypheninferior',
                      'Ogoneksmall',
                      'Ringsmall',
                      'Cedillasmall',
                      'questiondownsmall',
                      'oneeighth',
                      'threeeighths',
                      'fiveeighths',
                      'seveneighths',
                      'onethird',
                      'twothirds',
                      'zerosuperior',
                      'foursuperior',
                      'fivesuperior',
                      'sixsuperior',
                      'sevensuperior',
                      'eightsuperior',
                      'ninesuperior',
                      'zeroinferior',
                      'oneinferior',
                      'twoinferior',
                      'threeinferior',
                      'fourinferior',
                      'fiveinferior',
                      'sixinferior',
                      'seveninferior',
                      'eightinferior',
                      'nineinferior',
                      'centinferior',
                      'dollarinferior',
                      'periodinferior',
                      'commainferior',
                      'Agravesmall',
                      'Aacutesmall',
                      'Acircumflexsmall',
                      'Atildesmall',
                      'Adieresissmall',
                      'Aringsmall',
                      'AEsmall',
                      'Ccedillasmall',
                      'Egravesmall',
                      'Eacutesmall',
                      'Ecircumflexsmall',
                      'Edieresissmall',
                      'Igravesmall',
                      'Iacutesmall',
                      'Icircumflexsmall',
                      'Idieresissmall',
                      'Ethsmall',
                      'Ntildesmall',
                      'Ogravesmall',
                      'Oacutesmall',
                      'Ocircumflexsmall',
                      'Otildesmall',
                      'Odieresissmall',
                      'OEsmall',
                      'Oslashsmall',
                      'Ugravesmall',
                      'Uacutesmall',
                      'Ucircumflexsmall',
                      'Udieresissmall',
                      'Yacutesmall',
                      'Thornsmall',
                      'Ydieresissmall',
                      '001.000',
                      '001.001',
                      '001.002',
                      '001.003',
                      'Black',
                      'Bold',
                      'Book',
                      'Light',
                      'Medium',
                      'Regular',
                      'Roman',
                      'Semibold',
                    ],
                    H = [
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'space',
                      'exclam',
                      'quotedbl',
                      'numbersign',
                      'dollar',
                      'percent',
                      'ampersand',
                      'quoteright',
                      'parenleft',
                      'parenright',
                      'asterisk',
                      'plus',
                      'comma',
                      'hyphen',
                      'period',
                      'slash',
                      'zero',
                      'one',
                      'two',
                      'three',
                      'four',
                      'five',
                      'six',
                      'seven',
                      'eight',
                      'nine',
                      'colon',
                      'semicolon',
                      'less',
                      'equal',
                      'greater',
                      'question',
                      'at',
                      'A',
                      'B',
                      'C',
                      'D',
                      'E',
                      'F',
                      'G',
                      'H',
                      'I',
                      'J',
                      'K',
                      'L',
                      'M',
                      'N',
                      'O',
                      'P',
                      'Q',
                      'R',
                      'S',
                      'T',
                      'U',
                      'V',
                      'W',
                      'X',
                      'Y',
                      'Z',
                      'bracketleft',
                      'backslash',
                      'bracketright',
                      'asciicircum',
                      'underscore',
                      'quoteleft',
                      'a',
                      'b',
                      'c',
                      'd',
                      'e',
                      'f',
                      'g',
                      'h',
                      'i',
                      'j',
                      'k',
                      'l',
                      'm',
                      'n',
                      'o',
                      'p',
                      'q',
                      'r',
                      's',
                      't',
                      'u',
                      'v',
                      'w',
                      'x',
                      'y',
                      'z',
                      'braceleft',
                      'bar',
                      'braceright',
                      'asciitilde',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'exclamdown',
                      'cent',
                      'sterling',
                      'fraction',
                      'yen',
                      'florin',
                      'section',
                      'currency',
                      'quotesingle',
                      'quotedblleft',
                      'guillemotleft',
                      'guilsinglleft',
                      'guilsinglright',
                      'fi',
                      'fl',
                      '',
                      'endash',
                      'dagger',
                      'daggerdbl',
                      'periodcentered',
                      '',
                      'paragraph',
                      'bullet',
                      'quotesinglbase',
                      'quotedblbase',
                      'quotedblright',
                      'guillemotright',
                      'ellipsis',
                      'perthousand',
                      '',
                      'questiondown',
                      '',
                      'grave',
                      'acute',
                      'circumflex',
                      'tilde',
                      'macron',
                      'breve',
                      'dotaccent',
                      'dieresis',
                      '',
                      'ring',
                      'cedilla',
                      '',
                      'hungarumlaut',
                      'ogonek',
                      'caron',
                      'emdash',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'AE',
                      '',
                      'ordfeminine',
                      '',
                      '',
                      '',
                      '',
                      'Lslash',
                      'Oslash',
                      'OE',
                      'ordmasculine',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'ae',
                      '',
                      '',
                      '',
                      'dotlessi',
                      '',
                      '',
                      'lslash',
                      'oslash',
                      'oe',
                      'germandbls',
                    ],
                    ae = [
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'space',
                      'exclamsmall',
                      'Hungarumlautsmall',
                      '',
                      'dollaroldstyle',
                      'dollarsuperior',
                      'ampersandsmall',
                      'Acutesmall',
                      'parenleftsuperior',
                      'parenrightsuperior',
                      'twodotenleader',
                      'onedotenleader',
                      'comma',
                      'hyphen',
                      'period',
                      'fraction',
                      'zerooldstyle',
                      'oneoldstyle',
                      'twooldstyle',
                      'threeoldstyle',
                      'fouroldstyle',
                      'fiveoldstyle',
                      'sixoldstyle',
                      'sevenoldstyle',
                      'eightoldstyle',
                      'nineoldstyle',
                      'colon',
                      'semicolon',
                      'commasuperior',
                      'threequartersemdash',
                      'periodsuperior',
                      'questionsmall',
                      '',
                      'asuperior',
                      'bsuperior',
                      'centsuperior',
                      'dsuperior',
                      'esuperior',
                      '',
                      '',
                      'isuperior',
                      '',
                      '',
                      'lsuperior',
                      'msuperior',
                      'nsuperior',
                      'osuperior',
                      '',
                      '',
                      'rsuperior',
                      'ssuperior',
                      'tsuperior',
                      '',
                      'ff',
                      'fi',
                      'fl',
                      'ffi',
                      'ffl',
                      'parenleftinferior',
                      '',
                      'parenrightinferior',
                      'Circumflexsmall',
                      'hyphensuperior',
                      'Gravesmall',
                      'Asmall',
                      'Bsmall',
                      'Csmall',
                      'Dsmall',
                      'Esmall',
                      'Fsmall',
                      'Gsmall',
                      'Hsmall',
                      'Ismall',
                      'Jsmall',
                      'Ksmall',
                      'Lsmall',
                      'Msmall',
                      'Nsmall',
                      'Osmall',
                      'Psmall',
                      'Qsmall',
                      'Rsmall',
                      'Ssmall',
                      'Tsmall',
                      'Usmall',
                      'Vsmall',
                      'Wsmall',
                      'Xsmall',
                      'Ysmall',
                      'Zsmall',
                      'colonmonetary',
                      'onefitted',
                      'rupiah',
                      'Tildesmall',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'exclamdownsmall',
                      'centoldstyle',
                      'Lslashsmall',
                      '',
                      '',
                      'Scaronsmall',
                      'Zcaronsmall',
                      'Dieresissmall',
                      'Brevesmall',
                      'Caronsmall',
                      '',
                      'Dotaccentsmall',
                      '',
                      '',
                      'Macronsmall',
                      '',
                      '',
                      'figuredash',
                      'hypheninferior',
                      '',
                      '',
                      'Ogoneksmall',
                      'Ringsmall',
                      'Cedillasmall',
                      '',
                      '',
                      '',
                      'onequarter',
                      'onehalf',
                      'threequarters',
                      'questiondownsmall',
                      'oneeighth',
                      'threeeighths',
                      'fiveeighths',
                      'seveneighths',
                      'onethird',
                      'twothirds',
                      '',
                      '',
                      'zerosuperior',
                      'onesuperior',
                      'twosuperior',
                      'threesuperior',
                      'foursuperior',
                      'fivesuperior',
                      'sixsuperior',
                      'sevensuperior',
                      'eightsuperior',
                      'ninesuperior',
                      'zeroinferior',
                      'oneinferior',
                      'twoinferior',
                      'threeinferior',
                      'fourinferior',
                      'fiveinferior',
                      'sixinferior',
                      'seveninferior',
                      'eightinferior',
                      'nineinferior',
                      'centinferior',
                      'dollarinferior',
                      'periodinferior',
                      'commainferior',
                      'Agravesmall',
                      'Aacutesmall',
                      'Acircumflexsmall',
                      'Atildesmall',
                      'Adieresissmall',
                      'Aringsmall',
                      'AEsmall',
                      'Ccedillasmall',
                      'Egravesmall',
                      'Eacutesmall',
                      'Ecircumflexsmall',
                      'Edieresissmall',
                      'Igravesmall',
                      'Iacutesmall',
                      'Icircumflexsmall',
                      'Idieresissmall',
                      'Ethsmall',
                      'Ntildesmall',
                      'Ogravesmall',
                      'Oacutesmall',
                      'Ocircumflexsmall',
                      'Otildesmall',
                      'Odieresissmall',
                      'OEsmall',
                      'Oslashsmall',
                      'Ugravesmall',
                      'Uacutesmall',
                      'Ucircumflexsmall',
                      'Udieresissmall',
                      'Yacutesmall',
                      'Thornsmall',
                      'Ydieresissmall',
                    ],
                    _e = [
                      '.notdef',
                      '.null',
                      'nonmarkingreturn',
                      'space',
                      'exclam',
                      'quotedbl',
                      'numbersign',
                      'dollar',
                      'percent',
                      'ampersand',
                      'quotesingle',
                      'parenleft',
                      'parenright',
                      'asterisk',
                      'plus',
                      'comma',
                      'hyphen',
                      'period',
                      'slash',
                      'zero',
                      'one',
                      'two',
                      'three',
                      'four',
                      'five',
                      'six',
                      'seven',
                      'eight',
                      'nine',
                      'colon',
                      'semicolon',
                      'less',
                      'equal',
                      'greater',
                      'question',
                      'at',
                      'A',
                      'B',
                      'C',
                      'D',
                      'E',
                      'F',
                      'G',
                      'H',
                      'I',
                      'J',
                      'K',
                      'L',
                      'M',
                      'N',
                      'O',
                      'P',
                      'Q',
                      'R',
                      'S',
                      'T',
                      'U',
                      'V',
                      'W',
                      'X',
                      'Y',
                      'Z',
                      'bracketleft',
                      'backslash',
                      'bracketright',
                      'asciicircum',
                      'underscore',
                      'grave',
                      'a',
                      'b',
                      'c',
                      'd',
                      'e',
                      'f',
                      'g',
                      'h',
                      'i',
                      'j',
                      'k',
                      'l',
                      'm',
                      'n',
                      'o',
                      'p',
                      'q',
                      'r',
                      's',
                      't',
                      'u',
                      'v',
                      'w',
                      'x',
                      'y',
                      'z',
                      'braceleft',
                      'bar',
                      'braceright',
                      'asciitilde',
                      'Adieresis',
                      'Aring',
                      'Ccedilla',
                      'Eacute',
                      'Ntilde',
                      'Odieresis',
                      'Udieresis',
                      'aacute',
                      'agrave',
                      'acircumflex',
                      'adieresis',
                      'atilde',
                      'aring',
                      'ccedilla',
                      'eacute',
                      'egrave',
                      'ecircumflex',
                      'edieresis',
                      'iacute',
                      'igrave',
                      'icircumflex',
                      'idieresis',
                      'ntilde',
                      'oacute',
                      'ograve',
                      'ocircumflex',
                      'odieresis',
                      'otilde',
                      'uacute',
                      'ugrave',
                      'ucircumflex',
                      'udieresis',
                      'dagger',
                      'degree',
                      'cent',
                      'sterling',
                      'section',
                      'bullet',
                      'paragraph',
                      'germandbls',
                      'registered',
                      'copyright',
                      'trademark',
                      'acute',
                      'dieresis',
                      'notequal',
                      'AE',
                      'Oslash',
                      'infinity',
                      'plusminus',
                      'lessequal',
                      'greaterequal',
                      'yen',
                      'mu',
                      'partialdiff',
                      'summation',
                      'product',
                      'pi',
                      'integral',
                      'ordfeminine',
                      'ordmasculine',
                      'Omega',
                      'ae',
                      'oslash',
                      'questiondown',
                      'exclamdown',
                      'logicalnot',
                      'radical',
                      'florin',
                      'approxequal',
                      'Delta',
                      'guillemotleft',
                      'guillemotright',
                      'ellipsis',
                      'nonbreakingspace',
                      'Agrave',
                      'Atilde',
                      'Otilde',
                      'OE',
                      'oe',
                      'endash',
                      'emdash',
                      'quotedblleft',
                      'quotedblright',
                      'quoteleft',
                      'quoteright',
                      'divide',
                      'lozenge',
                      'ydieresis',
                      'Ydieresis',
                      'fraction',
                      'currency',
                      'guilsinglleft',
                      'guilsinglright',
                      'fi',
                      'fl',
                      'daggerdbl',
                      'periodcentered',
                      'quotesinglbase',
                      'quotedblbase',
                      'perthousand',
                      'Acircumflex',
                      'Ecircumflex',
                      'Aacute',
                      'Edieresis',
                      'Egrave',
                      'Iacute',
                      'Icircumflex',
                      'Idieresis',
                      'Igrave',
                      'Oacute',
                      'Ocircumflex',
                      'apple',
                      'Ograve',
                      'Uacute',
                      'Ucircumflex',
                      'Ugrave',
                      'dotlessi',
                      'circumflex',
                      'tilde',
                      'macron',
                      'breve',
                      'dotaccent',
                      'ring',
                      'cedilla',
                      'hungarumlaut',
                      'ogonek',
                      'caron',
                      'Lslash',
                      'lslash',
                      'Scaron',
                      'scaron',
                      'Zcaron',
                      'zcaron',
                      'brokenbar',
                      'Eth',
                      'eth',
                      'Yacute',
                      'yacute',
                      'Thorn',
                      'thorn',
                      'minus',
                      'multiply',
                      'onesuperior',
                      'twosuperior',
                      'threesuperior',
                      'onehalf',
                      'onequarter',
                      'threequarters',
                      'franc',
                      'Gbreve',
                      'gbreve',
                      'Idotaccent',
                      'Scedilla',
                      'scedilla',
                      'Cacute',
                      'cacute',
                      'Ccaron',
                      'ccaron',
                      'dcroat',
                    ];
                  function Ee(f) {
                    this.font = f;
                  }
                  function De(f) {
                    this.cmap = f;
                  }
                  function me(f, b) {
                    (this.encoding = f), (this.charset = b);
                  }
                  function Be(f) {
                    switch (f.version) {
                      case 1:
                        this.names = _e.slice();
                        break;
                      case 2:
                        this.names = new Array(f.numberOfGlyphs);
                        for (var b = 0; b < f.numberOfGlyphs; b++)
                          f.glyphNameIndex[b] < _e.length
                            ? (this.names[b] = _e[f.glyphNameIndex[b]])
                            : (this.names[b] =
                                f.names[f.glyphNameIndex[b] - _e.length]);
                        break;
                      case 2.5:
                        this.names = new Array(f.numberOfGlyphs);
                        for (var x = 0; x < f.numberOfGlyphs; x++)
                          this.names[x] = _e[x + f.glyphNameIndex[x]];
                        break;
                      case 3:
                      default:
                        this.names = [];
                    }
                  }
                  (Ee.prototype.charToGlyphIndex = function (f) {
                    var b = f.codePointAt(0),
                      x = this.font.glyphs;
                    if (x) {
                      for (var j = 0; j < x.length; j += 1)
                        for (
                          var C = x.get(j), I = 0;
                          I < C.unicodes.length;
                          I += 1
                        )
                          if (C.unicodes[I] === b) return j;
                    }
                    return null;
                  }),
                    (De.prototype.charToGlyphIndex = function (f) {
                      return this.cmap.glyphIndexMap[f.codePointAt(0)] || 0;
                    }),
                    (me.prototype.charToGlyphIndex = function (f) {
                      var b = f.codePointAt(0),
                        x = this.encoding[b];
                      return this.charset.indexOf(x);
                    }),
                    (Be.prototype.nameToGlyphIndex = function (f) {
                      return this.names.indexOf(f);
                    }),
                    (Be.prototype.glyphIndexToName = function (f) {
                      return this.names[f];
                    });
                  var Ke = {
                    line: function (f, b, x, j, C) {
                      f.beginPath(), f.moveTo(b, x), f.lineTo(j, C), f.stroke();
                    },
                  };
                  function st(f) {
                    this.bindConstructorValues(f);
                  }
                  function at(f, b, x) {
                    Object.defineProperty(f, b, {
                      get: function () {
                        return f.path, f[x];
                      },
                      set: function (j) {
                        f[x] = j;
                      },
                      enumerable: !0,
                      configurable: !0,
                    });
                  }
                  function ot(f, b) {
                    if (((this.font = f), (this.glyphs = {}), Array.isArray(b)))
                      for (var x = 0; x < b.length; x++) this.glyphs[x] = b[x];
                    this.length = (b && b.length) || 0;
                  }
                  (st.prototype.bindConstructorValues = function (f) {
                    var b, x;
                    (this.index = f.index || 0),
                      (this.name = f.name || null),
                      (this.unicode = f.unicode || void 0),
                      (this.unicodes =
                        f.unicodes || f.unicode !== void 0 ? [f.unicode] : []),
                      f.xMin && (this.xMin = f.xMin),
                      f.yMin && (this.yMin = f.yMin),
                      f.xMax && (this.xMax = f.xMax),
                      f.yMax && (this.yMax = f.yMax),
                      f.advanceWidth && (this.advanceWidth = f.advanceWidth),
                      Object.defineProperty(
                        this,
                        'path',
                        ((b = f.path),
                        (x = b || new oe()),
                        {
                          configurable: !0,
                          get: function () {
                            return typeof x == 'function' && (x = x()), x;
                          },
                          set: function (j) {
                            x = j;
                          },
                        }),
                      );
                  }),
                    (st.prototype.addUnicode = function (f) {
                      this.unicodes.length === 0 && (this.unicode = f),
                        this.unicodes.push(f);
                    }),
                    (st.prototype.getBoundingBox = function () {
                      return this.path.getBoundingBox();
                    }),
                    (st.prototype.getPath = function (f, b, x, j, C) {
                      var I, F;
                      (f = f !== void 0 ? f : 0),
                        (b = b !== void 0 ? b : 0),
                        (x = x !== void 0 ? x : 72);
                      var q = (j = j || {}).xScale,
                        Y = j.yScale;
                      if (
                        (j.hinting &&
                          C &&
                          C.hinting &&
                          (F = this.path && C.hinting.exec(this, x)),
                        F)
                      )
                        (I = C.hinting.getCommands(F)),
                          (f = Math.round(f)),
                          (b = Math.round(b)),
                          (q = Y = 1);
                      else {
                        I = this.path.commands;
                        var se = (1 / this.path.unitsPerEm) * x;
                        q === void 0 && (q = se), Y === void 0 && (Y = se);
                      }
                      for (var pe = new oe(), be = 0; be < I.length; be += 1) {
                        var te = I[be];
                        te.type === 'M'
                          ? pe.moveTo(f + te.x * q, b + -te.y * Y)
                          : te.type === 'L'
                          ? pe.lineTo(f + te.x * q, b + -te.y * Y)
                          : te.type === 'Q'
                          ? pe.quadraticCurveTo(
                              f + te.x1 * q,
                              b + -te.y1 * Y,
                              f + te.x * q,
                              b + -te.y * Y,
                            )
                          : te.type === 'C'
                          ? pe.curveTo(
                              f + te.x1 * q,
                              b + -te.y1 * Y,
                              f + te.x2 * q,
                              b + -te.y2 * Y,
                              f + te.x * q,
                              b + -te.y * Y,
                            )
                          : te.type === 'Z' && pe.closePath();
                      }
                      return pe;
                    }),
                    (st.prototype.getContours = function () {
                      if (this.points === void 0) return [];
                      for (
                        var f = [], b = [], x = 0;
                        x < this.points.length;
                        x += 1
                      ) {
                        var j = this.points[x];
                        b.push(j),
                          j.lastPointOfContour && (f.push(b), (b = []));
                      }
                      return (
                        de.argument(
                          b.length === 0,
                          'There are still points left in the current contour.',
                        ),
                        f
                      );
                    }),
                    (st.prototype.getMetrics = function () {
                      for (
                        var f = this.path.commands, b = [], x = [], j = 0;
                        j < f.length;
                        j += 1
                      ) {
                        var C = f[j];
                        C.type !== 'Z' && (b.push(C.x), x.push(C.y)),
                          (C.type !== 'Q' && C.type !== 'C') ||
                            (b.push(C.x1), x.push(C.y1)),
                          C.type === 'C' && (b.push(C.x2), x.push(C.y2));
                      }
                      var I = {
                        xMin: Math.min.apply(null, b),
                        yMin: Math.min.apply(null, x),
                        xMax: Math.max.apply(null, b),
                        yMax: Math.max.apply(null, x),
                        leftSideBearing: this.leftSideBearing,
                      };
                      return (
                        isFinite(I.xMin) || (I.xMin = 0),
                        isFinite(I.xMax) || (I.xMax = this.advanceWidth),
                        isFinite(I.yMin) || (I.yMin = 0),
                        isFinite(I.yMax) || (I.yMax = 0),
                        (I.rightSideBearing =
                          this.advanceWidth -
                          I.leftSideBearing -
                          (I.xMax - I.xMin)),
                        I
                      );
                    }),
                    (st.prototype.draw = function (f, b, x, j, C) {
                      this.getPath(b, x, j, C).draw(f);
                    }),
                    (st.prototype.drawPoints = function (f, b, x, j) {
                      function C(be, te, Ue, Le) {
                        var Oe = 2 * Math.PI;
                        f.beginPath();
                        for (var Me = 0; Me < be.length; Me += 1)
                          f.moveTo(te + be[Me].x * Le, Ue + be[Me].y * Le),
                            f.arc(
                              te + be[Me].x * Le,
                              Ue + be[Me].y * Le,
                              2,
                              0,
                              Oe,
                              !1,
                            );
                        f.closePath(), f.fill();
                      }
                      (b = b !== void 0 ? b : 0),
                        (x = x !== void 0 ? x : 0),
                        (j = j !== void 0 ? j : 24);
                      for (
                        var I = (1 / this.path.unitsPerEm) * j,
                          F = [],
                          q = [],
                          Y = this.path,
                          se = 0;
                        se < Y.commands.length;
                        se += 1
                      ) {
                        var pe = Y.commands[se];
                        pe.x !== void 0 && F.push({ x: pe.x, y: -pe.y }),
                          pe.x1 !== void 0 && q.push({ x: pe.x1, y: -pe.y1 }),
                          pe.x2 !== void 0 && q.push({ x: pe.x2, y: -pe.y2 });
                      }
                      (f.fillStyle = 'blue'),
                        C(F, b, x, I),
                        (f.fillStyle = 'red'),
                        C(q, b, x, I);
                    }),
                    (st.prototype.drawMetrics = function (f, b, x, j) {
                      var C;
                      (b = b !== void 0 ? b : 0),
                        (x = x !== void 0 ? x : 0),
                        (j = j !== void 0 ? j : 24),
                        (C = (1 / this.path.unitsPerEm) * j),
                        (f.lineWidth = 1),
                        (f.strokeStyle = 'black'),
                        Ke.line(f, b, -1e4, b, 1e4),
                        Ke.line(f, -1e4, x, 1e4, x);
                      var I = this.xMin || 0,
                        F = this.yMin || 0,
                        q = this.xMax || 0,
                        Y = this.yMax || 0,
                        se = this.advanceWidth || 0;
                      (f.strokeStyle = 'blue'),
                        Ke.line(f, b + I * C, -1e4, b + I * C, 1e4),
                        Ke.line(f, b + q * C, -1e4, b + q * C, 1e4),
                        Ke.line(f, -1e4, x + -F * C, 1e4, x + -F * C),
                        Ke.line(f, -1e4, x + -Y * C, 1e4, x + -Y * C),
                        (f.strokeStyle = 'green'),
                        Ke.line(f, b + se * C, -1e4, b + se * C, 1e4);
                    }),
                    (ot.prototype.get = function (f) {
                      return (
                        typeof this.glyphs[f] == 'function' &&
                          (this.glyphs[f] = this.glyphs[f]()),
                        this.glyphs[f]
                      );
                    }),
                    (ot.prototype.push = function (f, b) {
                      (this.glyphs[f] = b), this.length++;
                    });
                  var it = {
                    GlyphSet: ot,
                    glyphLoader: function (f, b) {
                      return new st({ index: b, font: f });
                    },
                    ttfGlyphLoader: function (f, b, x, j, C, I) {
                      return function () {
                        var F = new st({ index: b, font: f });
                        return (
                          (F.path = function () {
                            x(F, j, C);
                            var q = I(f.glyphs, F);
                            return (q.unitsPerEm = f.unitsPerEm), q;
                          }),
                          at(F, 'xMin', '_xMin'),
                          at(F, 'xMax', '_xMax'),
                          at(F, 'yMin', '_yMin'),
                          at(F, 'yMax', '_yMax'),
                          F
                        );
                      };
                    },
                    cffGlyphLoader: function (f, b, x, j) {
                      return function () {
                        var C = new st({ index: b, font: f });
                        return (
                          (C.path = function () {
                            var I = x(f, C, j);
                            return (I.unitsPerEm = f.unitsPerEm), I;
                          }),
                          C
                        );
                      };
                    },
                  };
                  function gt(f, b) {
                    if (f === b) return !0;
                    if (Array.isArray(f) && Array.isArray(b)) {
                      if (f.length !== b.length) return !1;
                      for (var x = 0; x < f.length; x += 1)
                        if (!gt(f[x], b[x])) return !1;
                      return !0;
                    }
                    return !1;
                  }
                  function Sr(f) {
                    return f.length < 1240
                      ? 107
                      : f.length < 33900
                      ? 1131
                      : 32768;
                  }
                  function tr(f, b, x) {
                    var j,
                      C,
                      I = [],
                      F = [],
                      q = G.getCard16(f, b);
                    if (q !== 0) {
                      var Y = G.getByte(f, b + 2);
                      j = b + (q + 1) * Y + 2;
                      for (var se = b + 3, pe = 0; pe < q + 1; pe += 1)
                        I.push(G.getOffset(f, se, Y)), (se += Y);
                      C = j + I[q];
                    } else C = b + 2;
                    for (var be = 0; be < I.length - 1; be += 1) {
                      var te = G.getBytes(f, j + I[be], j + I[be + 1]);
                      x && (te = x(te)), F.push(te);
                    }
                    return { objects: F, startOffset: b, endOffset: C };
                  }
                  function rn(f, b) {
                    if (b === 28) return (f.parseByte() << 8) | f.parseByte();
                    if (b === 29)
                      return (
                        (f.parseByte() << 24) |
                        (f.parseByte() << 16) |
                        (f.parseByte() << 8) |
                        f.parseByte()
                      );
                    if (b === 30)
                      return (function (x) {
                        for (
                          var j = '',
                            C = [
                              '0',
                              '1',
                              '2',
                              '3',
                              '4',
                              '5',
                              '6',
                              '7',
                              '8',
                              '9',
                              '.',
                              'E',
                              'E-',
                              null,
                              '-',
                            ];
                          ;

                        ) {
                          var I = x.parseByte(),
                            F = I >> 4,
                            q = 15 & I;
                          if (F == 15 || ((j += C[F]), q == 15)) break;
                          j += C[q];
                        }
                        return parseFloat(j);
                      })(f);
                    if (32 <= b && b <= 246) return b - 139;
                    if (247 <= b && b <= 250)
                      return 256 * (b - 247) + f.parseByte() + 108;
                    if (251 <= b && b <= 254)
                      return 256 * -(b - 251) - f.parseByte() - 108;
                    throw new Error('Invalid b0 ' + b);
                  }
                  function Dr(f, b, x) {
                    b = b !== void 0 ? b : 0;
                    var j = new G.Parser(f, b),
                      C = [],
                      I = [];
                    for (
                      x = x !== void 0 ? x : f.length;
                      j.relativeOffset < x;

                    ) {
                      var F = j.parseByte();
                      F <= 21
                        ? (F === 12 && (F = 1200 + j.parseByte()),
                          C.push([F, I]),
                          (I = []))
                        : I.push(rn(j, F));
                    }
                    return (function (q) {
                      for (var Y = {}, se = 0; se < q.length; se += 1) {
                        var pe = q[se][0],
                          be = q[se][1],
                          te = void 0;
                        if (
                          ((te = be.length === 1 ? be[0] : be),
                          Y.hasOwnProperty(pe) && !isNaN(Y[pe]))
                        )
                          throw new Error(
                            'Object ' + Y + ' already has key ' + pe,
                          );
                        Y[pe] = te;
                      }
                      return Y;
                    })(C);
                  }
                  function Tr(f, b) {
                    return (b = b <= 390 ? V[b] : f[b - 391]);
                  }
                  function nn(f, b, x) {
                    for (var j, C = {}, I = 0; I < b.length; I += 1) {
                      var F = b[I];
                      if (Array.isArray(F.type)) {
                        var q = [];
                        q.length = F.type.length;
                        for (var Y = 0; Y < F.type.length; Y++)
                          (j = f[F.op] !== void 0 ? f[F.op][Y] : void 0) ===
                            void 0 &&
                            (j =
                              F.value !== void 0 && F.value[Y] !== void 0
                                ? F.value[Y]
                                : null),
                            F.type[Y] === 'SID' && (j = Tr(x, j)),
                            (q[Y] = j);
                        C[F.name] = q;
                      } else
                        (j = f[F.op]) === void 0 &&
                          (j = F.value !== void 0 ? F.value : null),
                          F.type === 'SID' && (j = Tr(x, j)),
                          (C[F.name] = j);
                    }
                    return C;
                  }
                  var sn = [
                      { name: 'version', op: 0, type: 'SID' },
                      { name: 'notice', op: 1, type: 'SID' },
                      { name: 'copyright', op: 1200, type: 'SID' },
                      { name: 'fullName', op: 2, type: 'SID' },
                      { name: 'familyName', op: 3, type: 'SID' },
                      { name: 'weight', op: 4, type: 'SID' },
                      {
                        name: 'isFixedPitch',
                        op: 1201,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'italicAngle',
                        op: 1202,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'underlinePosition',
                        op: 1203,
                        type: 'number',
                        value: -100,
                      },
                      {
                        name: 'underlineThickness',
                        op: 1204,
                        type: 'number',
                        value: 50,
                      },
                      { name: 'paintType', op: 1205, type: 'number', value: 0 },
                      {
                        name: 'charstringType',
                        op: 1206,
                        type: 'number',
                        value: 2,
                      },
                      {
                        name: 'fontMatrix',
                        op: 1207,
                        type: ['real', 'real', 'real', 'real', 'real', 'real'],
                        value: [0.001, 0, 0, 0.001, 0, 0],
                      },
                      { name: 'uniqueId', op: 13, type: 'number' },
                      {
                        name: 'fontBBox',
                        op: 5,
                        type: ['number', 'number', 'number', 'number'],
                        value: [0, 0, 0, 0],
                      },
                      {
                        name: 'strokeWidth',
                        op: 1208,
                        type: 'number',
                        value: 0,
                      },
                      { name: 'xuid', op: 14, type: [], value: null },
                      { name: 'charset', op: 15, type: 'offset', value: 0 },
                      { name: 'encoding', op: 16, type: 'offset', value: 0 },
                      { name: 'charStrings', op: 17, type: 'offset', value: 0 },
                      {
                        name: 'private',
                        op: 18,
                        type: ['number', 'offset'],
                        value: [0, 0],
                      },
                      { name: 'ros', op: 1230, type: ['SID', 'SID', 'number'] },
                      {
                        name: 'cidFontVersion',
                        op: 1231,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'cidFontRevision',
                        op: 1232,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'cidFontType',
                        op: 1233,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'cidCount',
                        op: 1234,
                        type: 'number',
                        value: 8720,
                      },
                      { name: 'uidBase', op: 1235, type: 'number' },
                      { name: 'fdArray', op: 1236, type: 'offset' },
                      { name: 'fdSelect', op: 1237, type: 'offset' },
                      { name: 'fontName', op: 1238, type: 'SID' },
                    ],
                    on = [
                      { name: 'subrs', op: 19, type: 'offset', value: 0 },
                      {
                        name: 'defaultWidthX',
                        op: 20,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'nominalWidthX',
                        op: 21,
                        type: 'number',
                        value: 0,
                      },
                    ];
                  function an(f, b, x, j) {
                    return nn(Dr(f, b, x), on, j);
                  }
                  function ln(f, b, x, j) {
                    for (var C, I, F = [], q = 0; q < x.length; q += 1) {
                      var Y = new DataView(new Uint8Array(x[q]).buffer),
                        se = ((I = j), nn(Dr((C = Y), 0, C.byteLength), sn, I));
                      (se._subrs = []), (se._subrsBias = 0);
                      var pe = se.private[0],
                        be = se.private[1];
                      if (pe !== 0 && be !== 0) {
                        var te = an(f, be + b, pe, j);
                        if (
                          ((se._defaultWidthX = te.defaultWidthX),
                          (se._nominalWidthX = te.nominalWidthX),
                          te.subrs !== 0)
                        ) {
                          var Ue = tr(f, be + te.subrs + b);
                          (se._subrs = Ue.objects),
                            (se._subrsBias = Sr(se._subrs));
                        }
                        se._privateDict = te;
                      }
                      F.push(se);
                    }
                    return F;
                  }
                  function Cn(f, b, x) {
                    var j,
                      C,
                      I,
                      F,
                      q,
                      Y,
                      se,
                      pe,
                      be = new oe(),
                      te = [],
                      Ue = 0,
                      Le = !1,
                      Oe = !1,
                      Me = 0,
                      Ce = 0;
                    if (f.isCIDFont) {
                      var $e = f.tables.cff.topDict._fdSelect[b.index],
                        Ze = f.tables.cff.topDict._fdArray[$e];
                      (q = Ze._subrs),
                        (Y = Ze._subrsBias),
                        (se = Ze._defaultWidthX),
                        (pe = Ze._nominalWidthX);
                    } else
                      (q = f.tables.cff.topDict._subrs),
                        (Y = f.tables.cff.topDict._subrsBias),
                        (se = f.tables.cff.topDict._defaultWidthX),
                        (pe = f.tables.cff.topDict._nominalWidthX);
                    var ct = se;
                    function et(Nt, pt) {
                      Oe && be.closePath(), be.moveTo(Nt, pt), (Oe = !0);
                    }
                    function rt() {
                      te.length % 2 == 0 || Le || (ct = te.shift() + pe),
                        (Ue += te.length >> 1),
                        (te.length = 0),
                        (Le = !0);
                    }
                    return (
                      (function Nt(pt) {
                        for (
                          var ht,
                            mt,
                            St,
                            _t,
                            Dt,
                            Tt,
                            wt,
                            It,
                            jt,
                            Bt,
                            vt,
                            Wt,
                            Ct = 0;
                          Ct < pt.length;

                        ) {
                          var At = pt[Ct];
                          switch (((Ct += 1), At)) {
                            case 1:
                            case 3:
                              rt();
                              break;
                            case 4:
                              1 < te.length &&
                                !Le &&
                                ((ct = te.shift() + pe), (Le = !0)),
                                (Ce += te.pop()),
                                et(Me, Ce);
                              break;
                            case 5:
                              for (; 0 < te.length; )
                                (Me += te.shift()),
                                  (Ce += te.shift()),
                                  be.lineTo(Me, Ce);
                              break;
                            case 6:
                              for (
                                ;
                                0 < te.length &&
                                ((Me += te.shift()),
                                be.lineTo(Me, Ce),
                                te.length !== 0);

                              )
                                (Ce += te.shift()), be.lineTo(Me, Ce);
                              break;
                            case 7:
                              for (
                                ;
                                0 < te.length &&
                                ((Ce += te.shift()),
                                be.lineTo(Me, Ce),
                                te.length !== 0);

                              )
                                (Me += te.shift()), be.lineTo(Me, Ce);
                              break;
                            case 8:
                              for (; 0 < te.length; )
                                (j = Me + te.shift()),
                                  (C = Ce + te.shift()),
                                  (I = j + te.shift()),
                                  (F = C + te.shift()),
                                  (Me = I + te.shift()),
                                  (Ce = F + te.shift()),
                                  be.curveTo(j, C, I, F, Me, Ce);
                              break;
                            case 10:
                              (Dt = te.pop() + Y), (Tt = q[Dt]) && Nt(Tt);
                              break;
                            case 11:
                              return;
                            case 12:
                              switch (((At = pt[Ct]), (Ct += 1), At)) {
                                case 35:
                                  (j = Me + te.shift()),
                                    (C = Ce + te.shift()),
                                    (I = j + te.shift()),
                                    (F = C + te.shift()),
                                    (wt = I + te.shift()),
                                    (It = F + te.shift()),
                                    (jt = wt + te.shift()),
                                    (Bt = It + te.shift()),
                                    (vt = jt + te.shift()),
                                    (Wt = Bt + te.shift()),
                                    (Me = vt + te.shift()),
                                    (Ce = Wt + te.shift()),
                                    te.shift(),
                                    be.curveTo(j, C, I, F, wt, It),
                                    be.curveTo(jt, Bt, vt, Wt, Me, Ce);
                                  break;
                                case 34:
                                  (j = Me + te.shift()),
                                    (C = Ce),
                                    (I = j + te.shift()),
                                    (F = C + te.shift()),
                                    (wt = I + te.shift()),
                                    (It = F),
                                    (jt = wt + te.shift()),
                                    (Bt = F),
                                    (vt = jt + te.shift()),
                                    (Wt = Ce),
                                    (Me = vt + te.shift()),
                                    be.curveTo(j, C, I, F, wt, It),
                                    be.curveTo(jt, Bt, vt, Wt, Me, Ce);
                                  break;
                                case 36:
                                  (j = Me + te.shift()),
                                    (C = Ce + te.shift()),
                                    (I = j + te.shift()),
                                    (F = C + te.shift()),
                                    (wt = I + te.shift()),
                                    (It = F),
                                    (jt = wt + te.shift()),
                                    (Bt = F),
                                    (vt = jt + te.shift()),
                                    (Wt = Bt + te.shift()),
                                    (Me = vt + te.shift()),
                                    be.curveTo(j, C, I, F, wt, It),
                                    be.curveTo(jt, Bt, vt, Wt, Me, Ce);
                                  break;
                                case 37:
                                  (j = Me + te.shift()),
                                    (C = Ce + te.shift()),
                                    (I = j + te.shift()),
                                    (F = C + te.shift()),
                                    (wt = I + te.shift()),
                                    (It = F + te.shift()),
                                    (jt = wt + te.shift()),
                                    (Bt = It + te.shift()),
                                    (vt = jt + te.shift()),
                                    (Wt = Bt + te.shift()),
                                    Math.abs(vt - Me) > Math.abs(Wt - Ce)
                                      ? (Me = vt + te.shift())
                                      : (Ce = Wt + te.shift()),
                                    be.curveTo(j, C, I, F, wt, It),
                                    be.curveTo(jt, Bt, vt, Wt, Me, Ce);
                                  break;
                                default:
                                  console.log(
                                    'Glyph ' +
                                      b.index +
                                      ': unknown operator 1200' +
                                      At,
                                  ),
                                    (te.length = 0);
                              }
                              break;
                            case 14:
                              0 < te.length &&
                                !Le &&
                                ((ct = te.shift() + pe), (Le = !0)),
                                Oe && (be.closePath(), (Oe = !1));
                              break;
                            case 18:
                              rt();
                              break;
                            case 19:
                            case 20:
                              rt(), (Ct += (Ue + 7) >> 3);
                              break;
                            case 21:
                              2 < te.length &&
                                !Le &&
                                ((ct = te.shift() + pe), (Le = !0)),
                                (Ce += te.pop()),
                                et((Me += te.pop()), Ce);
                              break;
                            case 22:
                              1 < te.length &&
                                !Le &&
                                ((ct = te.shift() + pe), (Le = !0)),
                                et((Me += te.pop()), Ce);
                              break;
                            case 23:
                              rt();
                              break;
                            case 24:
                              for (; 2 < te.length; )
                                (j = Me + te.shift()),
                                  (C = Ce + te.shift()),
                                  (I = j + te.shift()),
                                  (F = C + te.shift()),
                                  (Me = I + te.shift()),
                                  (Ce = F + te.shift()),
                                  be.curveTo(j, C, I, F, Me, Ce);
                              (Me += te.shift()),
                                (Ce += te.shift()),
                                be.lineTo(Me, Ce);
                              break;
                            case 25:
                              for (; 6 < te.length; )
                                (Me += te.shift()),
                                  (Ce += te.shift()),
                                  be.lineTo(Me, Ce);
                              (j = Me + te.shift()),
                                (C = Ce + te.shift()),
                                (I = j + te.shift()),
                                (F = C + te.shift()),
                                (Me = I + te.shift()),
                                (Ce = F + te.shift()),
                                be.curveTo(j, C, I, F, Me, Ce);
                              break;
                            case 26:
                              for (
                                te.length % 2 && (Me += te.shift());
                                0 < te.length;

                              )
                                (j = Me),
                                  (C = Ce + te.shift()),
                                  (I = j + te.shift()),
                                  (F = C + te.shift()),
                                  (Me = I),
                                  (Ce = F + te.shift()),
                                  be.curveTo(j, C, I, F, Me, Ce);
                              break;
                            case 27:
                              for (
                                te.length % 2 && (Ce += te.shift());
                                0 < te.length;

                              )
                                (j = Me + te.shift()),
                                  (C = Ce),
                                  (I = j + te.shift()),
                                  (F = C + te.shift()),
                                  (Me = I + te.shift()),
                                  (Ce = F),
                                  be.curveTo(j, C, I, F, Me, Ce);
                              break;
                            case 28:
                              (ht = pt[Ct]),
                                (mt = pt[Ct + 1]),
                                te.push(((ht << 24) | (mt << 16)) >> 16),
                                (Ct += 2);
                              break;
                            case 29:
                              (Dt = te.pop() + f.gsubrsBias),
                                (Tt = f.gsubrs[Dt]) && Nt(Tt);
                              break;
                            case 30:
                              for (
                                ;
                                0 < te.length &&
                                ((j = Me),
                                (C = Ce + te.shift()),
                                (I = j + te.shift()),
                                (F = C + te.shift()),
                                (Me = I + te.shift()),
                                (Ce = F + (te.length === 1 ? te.shift() : 0)),
                                be.curveTo(j, C, I, F, Me, Ce),
                                te.length !== 0);

                              )
                                (j = Me + te.shift()),
                                  (C = Ce),
                                  (I = j + te.shift()),
                                  (F = C + te.shift()),
                                  (Ce = F + te.shift()),
                                  (Me = I + (te.length === 1 ? te.shift() : 0)),
                                  be.curveTo(j, C, I, F, Me, Ce);
                              break;
                            case 31:
                              for (
                                ;
                                0 < te.length &&
                                ((j = Me + te.shift()),
                                (C = Ce),
                                (I = j + te.shift()),
                                (F = C + te.shift()),
                                (Ce = F + te.shift()),
                                (Me = I + (te.length === 1 ? te.shift() : 0)),
                                be.curveTo(j, C, I, F, Me, Ce),
                                te.length !== 0);

                              )
                                (j = Me),
                                  (C = Ce + te.shift()),
                                  (I = j + te.shift()),
                                  (F = C + te.shift()),
                                  (Me = I + te.shift()),
                                  (Ce = F + (te.length === 1 ? te.shift() : 0)),
                                  be.curveTo(j, C, I, F, Me, Ce);
                              break;
                            default:
                              At < 32
                                ? console.log(
                                    'Glyph ' +
                                      b.index +
                                      ': unknown operator ' +
                                      At,
                                  )
                                : At < 247
                                ? te.push(At - 139)
                                : At < 251
                                ? ((ht = pt[Ct]),
                                  (Ct += 1),
                                  te.push(256 * (At - 247) + ht + 108))
                                : At < 255
                                ? ((ht = pt[Ct]),
                                  (Ct += 1),
                                  te.push(256 * -(At - 251) - ht - 108))
                                : ((ht = pt[Ct]),
                                  (mt = pt[Ct + 1]),
                                  (St = pt[Ct + 2]),
                                  (_t = pt[Ct + 3]),
                                  (Ct += 4),
                                  te.push(
                                    ((ht << 24) | (mt << 16) | (St << 8) | _t) /
                                      65536,
                                  ));
                          }
                        }
                      })(x),
                      (b.advanceWidth = ct),
                      be
                    );
                  }
                  function qr(f, b) {
                    var x,
                      j = V.indexOf(f);
                    return (
                      0 <= j && (x = j),
                      0 <= (j = b.indexOf(f))
                        ? (x = j + V.length)
                        : ((x = V.length + b.length), b.push(f)),
                      x
                    );
                  }
                  function zr(f, b, x) {
                    for (var j = {}, C = 0; C < f.length; C += 1) {
                      var I = f[C],
                        F = b[I.name];
                      F === void 0 ||
                        gt(F, I.value) ||
                        (I.type === 'SID' && (F = qr(F, x)),
                        (j[I.op] = { name: I.name, type: I.type, value: F }));
                    }
                    return j;
                  }
                  function le(f, b) {
                    var x = new Fe.Record('Top DICT', [
                      { name: 'dict', type: 'DICT', value: {} },
                    ]);
                    return (x.dict = zr(sn, f, b)), x;
                  }
                  function Re(f) {
                    var b = new Fe.Record('Top DICT INDEX', [
                      { name: 'topDicts', type: 'INDEX', value: [] },
                    ]);
                    return (
                      (b.topDicts = [
                        { name: 'topDict_0', type: 'TABLE', value: f },
                      ]),
                      b
                    );
                  }
                  function Ge(f) {
                    var b = [],
                      x = f.path;
                    b.push({
                      name: 'width',
                      type: 'NUMBER',
                      value: f.advanceWidth,
                    });
                    for (
                      var j = 0, C = 0, I = 0;
                      I < x.commands.length;
                      I += 1
                    ) {
                      var F = void 0,
                        q = void 0,
                        Y = x.commands[I];
                      if (
                        (Y.type === 'Q' &&
                          (Y = {
                            type: 'C',
                            x: Y.x,
                            y: Y.y,
                            x1: (1 / 3) * j + (2 / 3) * Y.x1,
                            y1: (1 / 3) * C + (2 / 3) * Y.y1,
                            x2: (1 / 3) * Y.x + (2 / 3) * Y.x1,
                            y2: (1 / 3) * Y.y + (2 / 3) * Y.y1,
                          }),
                        Y.type === 'M')
                      )
                        (F = Math.round(Y.x - j)),
                          (q = Math.round(Y.y - C)),
                          b.push({ name: 'dx', type: 'NUMBER', value: F }),
                          b.push({ name: 'dy', type: 'NUMBER', value: q }),
                          b.push({ name: 'rmoveto', type: 'OP', value: 21 }),
                          (j = Math.round(Y.x)),
                          (C = Math.round(Y.y));
                      else if (Y.type === 'L')
                        (F = Math.round(Y.x - j)),
                          (q = Math.round(Y.y - C)),
                          b.push({ name: 'dx', type: 'NUMBER', value: F }),
                          b.push({ name: 'dy', type: 'NUMBER', value: q }),
                          b.push({ name: 'rlineto', type: 'OP', value: 5 }),
                          (j = Math.round(Y.x)),
                          (C = Math.round(Y.y));
                      else if (Y.type === 'C') {
                        var se = Math.round(Y.x1 - j),
                          pe = Math.round(Y.y1 - C),
                          be = Math.round(Y.x2 - Y.x1),
                          te = Math.round(Y.y2 - Y.y1);
                        (F = Math.round(Y.x - Y.x2)),
                          (q = Math.round(Y.y - Y.y2)),
                          b.push({ name: 'dx1', type: 'NUMBER', value: se }),
                          b.push({ name: 'dy1', type: 'NUMBER', value: pe }),
                          b.push({ name: 'dx2', type: 'NUMBER', value: be }),
                          b.push({ name: 'dy2', type: 'NUMBER', value: te }),
                          b.push({ name: 'dx', type: 'NUMBER', value: F }),
                          b.push({ name: 'dy', type: 'NUMBER', value: q }),
                          b.push({ name: 'rrcurveto', type: 'OP', value: 8 }),
                          (j = Math.round(Y.x)),
                          (C = Math.round(Y.y));
                      }
                    }
                    return (
                      b.push({ name: 'endchar', type: 'OP', value: 14 }), b
                    );
                  }
                  var Ie = {
                      parse: function (f, b, x) {
                        x.tables.cff = {};
                        var j,
                          C,
                          I,
                          F = tr(
                            f,
                            ((j = f),
                            (C = b),
                            ((I = {}).formatMajor = G.getCard8(j, C)),
                            (I.formatMinor = G.getCard8(j, C + 1)),
                            (I.size = G.getCard8(j, C + 2)),
                            (I.offsetSize = G.getCard8(j, C + 3)),
                            (I.startOffset = C),
                            (I.endOffset = C + 4),
                            I).endOffset,
                            G.bytesToString,
                          ),
                          q = tr(f, F.endOffset),
                          Y = tr(f, q.endOffset, G.bytesToString),
                          se = tr(f, Y.endOffset);
                        (x.gsubrs = se.objects), (x.gsubrsBias = Sr(x.gsubrs));
                        var pe = ln(f, b, q.objects, Y.objects);
                        if (pe.length !== 1)
                          throw new Error(
                            "CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " +
                              pe.length,
                          );
                        var be = pe[0];
                        if (
                          ((x.tables.cff.topDict = be)._privateDict &&
                            ((x.defaultWidthX = be._privateDict.defaultWidthX),
                            (x.nominalWidthX = be._privateDict.nominalWidthX)),
                          be.ros[0] !== void 0 &&
                            be.ros[1] !== void 0 &&
                            (x.isCIDFont = !0),
                          x.isCIDFont)
                        ) {
                          var te = be.fdArray,
                            Ue = be.fdSelect;
                          if (te === 0 || Ue === 0)
                            throw new Error(
                              'Font is marked as a CID font, but FDArray and/or FDSelect information is missing',
                            );
                          var Le = ln(
                            f,
                            b,
                            tr(f, (te += b)).objects,
                            Y.objects,
                          );
                          (be._fdArray = Le),
                            (Ue += b),
                            (be._fdSelect = (function (rt, Nt, pt, ht) {
                              var mt,
                                St = [],
                                _t = new G.Parser(rt, Nt),
                                Dt = _t.parseCard8();
                              if (Dt === 0)
                                for (var Tt = 0; Tt < pt; Tt++) {
                                  if (ht <= (mt = _t.parseCard8()))
                                    throw new Error(
                                      'CFF table CID Font FDSelect has bad FD index value ' +
                                        mt +
                                        ' (FD count ' +
                                        ht +
                                        ')',
                                    );
                                  St.push(mt);
                                }
                              else {
                                if (Dt !== 3)
                                  throw new Error(
                                    'CFF Table CID Font FDSelect table has unsupported format ' +
                                      Dt,
                                  );
                                var wt,
                                  It = _t.parseCard16(),
                                  jt = _t.parseCard16();
                                if (jt !== 0)
                                  throw new Error(
                                    'CFF Table CID Font FDSelect format 3 range has bad initial GID ' +
                                      jt,
                                  );
                                for (var Bt = 0; Bt < It; Bt++) {
                                  if (
                                    ((mt = _t.parseCard8()),
                                    (wt = _t.parseCard16()),
                                    ht <= mt)
                                  )
                                    throw new Error(
                                      'CFF table CID Font FDSelect has bad FD index value ' +
                                        mt +
                                        ' (FD count ' +
                                        ht +
                                        ')',
                                    );
                                  if (pt < wt)
                                    throw new Error(
                                      'CFF Table CID Font FDSelect format 3 range has bad GID ' +
                                        wt,
                                    );
                                  for (; jt < wt; jt++) St.push(mt);
                                  jt = wt;
                                }
                                if (wt !== pt)
                                  throw new Error(
                                    'CFF Table CID Font FDSelect format 3 range has bad final GID ' +
                                      wt,
                                  );
                              }
                              return St;
                            })(f, Ue, x.numGlyphs, Le.length));
                        }
                        var Oe = b + be.private[1],
                          Me = an(f, Oe, be.private[0], Y.objects);
                        if (
                          ((x.defaultWidthX = Me.defaultWidthX),
                          (x.nominalWidthX = Me.nominalWidthX),
                          Me.subrs !== 0)
                        ) {
                          var Ce = tr(f, Oe + Me.subrs);
                          (x.subrs = Ce.objects), (x.subrsBias = Sr(x.subrs));
                        } else (x.subrs = []), (x.subrsBias = 0);
                        var $e = tr(f, b + be.charStrings);
                        x.nGlyphs = $e.objects.length;
                        var Ze = (function (rt, Nt, pt, ht) {
                          var mt,
                            St,
                            _t = new G.Parser(rt, Nt);
                          --pt;
                          var Dt = ['.notdef'],
                            Tt = _t.parseCard8();
                          if (Tt === 0)
                            for (var wt = 0; wt < pt; wt += 1)
                              (mt = _t.parseSID()), Dt.push(Tr(ht, mt));
                          else if (Tt === 1)
                            for (; Dt.length <= pt; ) {
                              (mt = _t.parseSID()), (St = _t.parseCard8());
                              for (var It = 0; It <= St; It += 1)
                                Dt.push(Tr(ht, mt)), (mt += 1);
                            }
                          else {
                            if (Tt !== 2)
                              throw new Error('Unknown charset format ' + Tt);
                            for (; Dt.length <= pt; ) {
                              (mt = _t.parseSID()), (St = _t.parseCard16());
                              for (var jt = 0; jt <= St; jt += 1)
                                Dt.push(Tr(ht, mt)), (mt += 1);
                            }
                          }
                          return Dt;
                        })(f, b + be.charset, x.nGlyphs, Y.objects);
                        be.encoding === 0
                          ? (x.cffEncoding = new me(H, Ze))
                          : be.encoding === 1
                          ? (x.cffEncoding = new me(ae, Ze))
                          : (x.cffEncoding = (function (rt, Nt, pt) {
                              var ht,
                                mt = {},
                                St = new G.Parser(rt, Nt),
                                _t = St.parseCard8();
                              if (_t === 0)
                                for (
                                  var Dt = St.parseCard8(), Tt = 0;
                                  Tt < Dt;
                                  Tt += 1
                                )
                                  mt[(ht = St.parseCard8())] = Tt;
                              else {
                                if (_t !== 1)
                                  throw new Error(
                                    'Unknown encoding format ' + _t,
                                  );
                                var wt = St.parseCard8();
                                ht = 1;
                                for (var It = 0; It < wt; It += 1)
                                  for (
                                    var jt = St.parseCard8(),
                                      Bt = St.parseCard8(),
                                      vt = jt;
                                    vt <= jt + Bt;
                                    vt += 1
                                  )
                                    (mt[vt] = ht), (ht += 1);
                              }
                              return new me(mt, pt);
                            })(f, b + be.encoding, Ze)),
                          (x.encoding = x.encoding || x.cffEncoding),
                          (x.glyphs = new it.GlyphSet(x));
                        for (var ct = 0; ct < x.nGlyphs; ct += 1) {
                          var et = $e.objects[ct];
                          x.glyphs.push(ct, it.cffGlyphLoader(x, ct, Cn, et));
                        }
                      },
                      make: function (f, b) {
                        for (
                          var x,
                            j = new Fe.Table('CFF ', [
                              { name: 'header', type: 'RECORD' },
                              { name: 'nameIndex', type: 'RECORD' },
                              { name: 'topDictIndex', type: 'RECORD' },
                              { name: 'stringIndex', type: 'RECORD' },
                              { name: 'globalSubrIndex', type: 'RECORD' },
                              { name: 'charsets', type: 'RECORD' },
                              { name: 'charStringsIndex', type: 'RECORD' },
                              { name: 'privateDict', type: 'RECORD' },
                            ]),
                            C = 1 / b.unitsPerEm,
                            I = {
                              version: b.version,
                              fullName: b.fullName,
                              familyName: b.familyName,
                              weight: b.weightName,
                              fontBBox: b.fontBBox || [0, 0, 0, 0],
                              fontMatrix: [C, 0, 0, C, 0, 0],
                              charset: 999,
                              encoding: 0,
                              charStrings: 999,
                              private: [0, 999],
                            },
                            F = [],
                            q = 1;
                          q < f.length;
                          q += 1
                        )
                          (x = f.get(q)), F.push(x.name);
                        var Y = [];
                        (j.header = new Fe.Record('Header', [
                          { name: 'major', type: 'Card8', value: 1 },
                          { name: 'minor', type: 'Card8', value: 0 },
                          { name: 'hdrSize', type: 'Card8', value: 4 },
                          { name: 'major', type: 'Card8', value: 1 },
                        ])),
                          (j.nameIndex = (function (Le) {
                            var Oe = new Fe.Record('Name INDEX', [
                              { name: 'names', type: 'INDEX', value: [] },
                            ]);
                            Oe.names = [];
                            for (var Me = 0; Me < Le.length; Me += 1)
                              Oe.names.push({
                                name: 'name_' + Me,
                                type: 'NAME',
                                value: Le[Me],
                              });
                            return Oe;
                          })([b.postScriptName]));
                        var se,
                          pe,
                          be,
                          te = le(I, Y);
                        (j.topDictIndex = Re(te)),
                          (j.globalSubrIndex = new Fe.Record(
                            'Global Subr INDEX',
                            [{ name: 'subrs', type: 'INDEX', value: [] }],
                          )),
                          (j.charsets = (function (Le, Oe) {
                            for (
                              var Me = new Fe.Record('Charsets', [
                                  { name: 'format', type: 'Card8', value: 0 },
                                ]),
                                Ce = 0;
                              Ce < Le.length;
                              Ce += 1
                            ) {
                              var $e = qr(Le[Ce], Oe);
                              Me.fields.push({
                                name: 'glyph_' + Ce,
                                type: 'SID',
                                value: $e,
                              });
                            }
                            return Me;
                          })(F, Y)),
                          (j.charStringsIndex = (function (Le) {
                            for (
                              var Oe = new Fe.Record('CharStrings INDEX', [
                                  {
                                    name: 'charStrings',
                                    type: 'INDEX',
                                    value: [],
                                  },
                                ]),
                                Me = 0;
                              Me < Le.length;
                              Me += 1
                            ) {
                              var Ce = Le.get(Me),
                                $e = Ge(Ce);
                              Oe.charStrings.push({
                                name: Ce.name,
                                type: 'CHARSTRING',
                                value: $e,
                              });
                            }
                            return Oe;
                          })(f)),
                          (j.privateDict =
                            ((se = {}),
                            (pe = Y),
                            ((be = new Fe.Record('Private DICT', [
                              { name: 'dict', type: 'DICT', value: {} },
                            ])).dict = zr(on, se, pe)),
                            be)),
                          (j.stringIndex = (function (Le) {
                            var Oe = new Fe.Record('String INDEX', [
                              { name: 'strings', type: 'INDEX', value: [] },
                            ]);
                            Oe.strings = [];
                            for (var Me = 0; Me < Le.length; Me += 1)
                              Oe.strings.push({
                                name: 'string_' + Me,
                                type: 'STRING',
                                value: Le[Me],
                              });
                            return Oe;
                          })(Y));
                        var Ue =
                          j.header.sizeOf() +
                          j.nameIndex.sizeOf() +
                          j.topDictIndex.sizeOf() +
                          j.stringIndex.sizeOf() +
                          j.globalSubrIndex.sizeOf();
                        return (
                          (I.charset = Ue),
                          (I.encoding = 0),
                          (I.charStrings = I.charset + j.charsets.sizeOf()),
                          (I.private[1] =
                            I.charStrings + j.charStringsIndex.sizeOf()),
                          (te = le(I, Y)),
                          (j.topDictIndex = Re(te)),
                          j
                        );
                      },
                    },
                    Ye = {
                      parse: function (f, b) {
                        var x = {},
                          j = new G.Parser(f, b);
                        return (
                          (x.version = j.parseVersion()),
                          (x.fontRevision =
                            Math.round(1e3 * j.parseFixed()) / 1e3),
                          (x.checkSumAdjustment = j.parseULong()),
                          (x.magicNumber = j.parseULong()),
                          de.argument(
                            x.magicNumber === 1594834165,
                            'Font header has wrong magic number.',
                          ),
                          (x.flags = j.parseUShort()),
                          (x.unitsPerEm = j.parseUShort()),
                          (x.created = j.parseLongDateTime()),
                          (x.modified = j.parseLongDateTime()),
                          (x.xMin = j.parseShort()),
                          (x.yMin = j.parseShort()),
                          (x.xMax = j.parseShort()),
                          (x.yMax = j.parseShort()),
                          (x.macStyle = j.parseUShort()),
                          (x.lowestRecPPEM = j.parseUShort()),
                          (x.fontDirectionHint = j.parseShort()),
                          (x.indexToLocFormat = j.parseShort()),
                          (x.glyphDataFormat = j.parseShort()),
                          x
                        );
                      },
                      make: function (f) {
                        var b =
                            Math.round(new Date().getTime() / 1e3) + 2082844800,
                          x = b;
                        return (
                          f.createdTimestamp &&
                            (x = f.createdTimestamp + 2082844800),
                          new Fe.Table(
                            'head',
                            [
                              { name: 'version', type: 'FIXED', value: 65536 },
                              {
                                name: 'fontRevision',
                                type: 'FIXED',
                                value: 65536,
                              },
                              {
                                name: 'checkSumAdjustment',
                                type: 'ULONG',
                                value: 0,
                              },
                              {
                                name: 'magicNumber',
                                type: 'ULONG',
                                value: 1594834165,
                              },
                              { name: 'flags', type: 'USHORT', value: 0 },
                              {
                                name: 'unitsPerEm',
                                type: 'USHORT',
                                value: 1e3,
                              },
                              {
                                name: 'created',
                                type: 'LONGDATETIME',
                                value: x,
                              },
                              {
                                name: 'modified',
                                type: 'LONGDATETIME',
                                value: b,
                              },
                              { name: 'xMin', type: 'SHORT', value: 0 },
                              { name: 'yMin', type: 'SHORT', value: 0 },
                              { name: 'xMax', type: 'SHORT', value: 0 },
                              { name: 'yMax', type: 'SHORT', value: 0 },
                              { name: 'macStyle', type: 'USHORT', value: 0 },
                              {
                                name: 'lowestRecPPEM',
                                type: 'USHORT',
                                value: 0,
                              },
                              {
                                name: 'fontDirectionHint',
                                type: 'SHORT',
                                value: 2,
                              },
                              {
                                name: 'indexToLocFormat',
                                type: 'SHORT',
                                value: 0,
                              },
                              {
                                name: 'glyphDataFormat',
                                type: 'SHORT',
                                value: 0,
                              },
                            ],
                            f,
                          )
                        );
                      },
                    },
                    Pe = {
                      parse: function (f, b) {
                        var x = {},
                          j = new G.Parser(f, b);
                        return (
                          (x.version = j.parseVersion()),
                          (x.ascender = j.parseShort()),
                          (x.descender = j.parseShort()),
                          (x.lineGap = j.parseShort()),
                          (x.advanceWidthMax = j.parseUShort()),
                          (x.minLeftSideBearing = j.parseShort()),
                          (x.minRightSideBearing = j.parseShort()),
                          (x.xMaxExtent = j.parseShort()),
                          (x.caretSlopeRise = j.parseShort()),
                          (x.caretSlopeRun = j.parseShort()),
                          (x.caretOffset = j.parseShort()),
                          (j.relativeOffset += 8),
                          (x.metricDataFormat = j.parseShort()),
                          (x.numberOfHMetrics = j.parseUShort()),
                          x
                        );
                      },
                      make: function (f) {
                        return new Fe.Table(
                          'hhea',
                          [
                            { name: 'version', type: 'FIXED', value: 65536 },
                            { name: 'ascender', type: 'FWORD', value: 0 },
                            { name: 'descender', type: 'FWORD', value: 0 },
                            { name: 'lineGap', type: 'FWORD', value: 0 },
                            {
                              name: 'advanceWidthMax',
                              type: 'UFWORD',
                              value: 0,
                            },
                            {
                              name: 'minLeftSideBearing',
                              type: 'FWORD',
                              value: 0,
                            },
                            {
                              name: 'minRightSideBearing',
                              type: 'FWORD',
                              value: 0,
                            },
                            { name: 'xMaxExtent', type: 'FWORD', value: 0 },
                            { name: 'caretSlopeRise', type: 'SHORT', value: 1 },
                            { name: 'caretSlopeRun', type: 'SHORT', value: 0 },
                            { name: 'caretOffset', type: 'SHORT', value: 0 },
                            { name: 'reserved1', type: 'SHORT', value: 0 },
                            { name: 'reserved2', type: 'SHORT', value: 0 },
                            { name: 'reserved3', type: 'SHORT', value: 0 },
                            { name: 'reserved4', type: 'SHORT', value: 0 },
                            {
                              name: 'metricDataFormat',
                              type: 'SHORT',
                              value: 0,
                            },
                            {
                              name: 'numberOfHMetrics',
                              type: 'USHORT',
                              value: 0,
                            },
                          ],
                          f,
                        );
                      },
                    },
                    ft = {
                      parse: function (f, b, x, j, C) {
                        for (
                          var I, F, q = new G.Parser(f, b), Y = 0;
                          Y < j;
                          Y += 1
                        ) {
                          Y < x &&
                            ((I = q.parseUShort()), (F = q.parseShort()));
                          var se = C.get(Y);
                          (se.advanceWidth = I), (se.leftSideBearing = F);
                        }
                      },
                      make: function (f) {
                        for (
                          var b = new Fe.Table('hmtx', []), x = 0;
                          x < f.length;
                          x += 1
                        ) {
                          var j = f.get(x),
                            C = j.advanceWidth || 0,
                            I = j.leftSideBearing || 0;
                          b.fields.push({
                            name: 'advanceWidth_' + x,
                            type: 'USHORT',
                            value: C,
                          }),
                            b.fields.push({
                              name: 'leftSideBearing_' + x,
                              type: 'SHORT',
                              value: I,
                            });
                        }
                        return b;
                      },
                    },
                    bt = {
                      make: function (f) {
                        for (
                          var b = new Fe.Table('ltag', [
                              { name: 'version', type: 'ULONG', value: 1 },
                              { name: 'flags', type: 'ULONG', value: 0 },
                              {
                                name: 'numTags',
                                type: 'ULONG',
                                value: f.length,
                              },
                            ]),
                            x = '',
                            j = 12 + 4 * f.length,
                            C = 0;
                          C < f.length;
                          ++C
                        ) {
                          var I = x.indexOf(f[C]);
                          I < 0 && ((I = x.length), (x += f[C])),
                            b.fields.push({
                              name: 'offset ' + C,
                              type: 'USHORT',
                              value: j + I,
                            }),
                            b.fields.push({
                              name: 'length ' + C,
                              type: 'USHORT',
                              value: f[C].length,
                            });
                        }
                        return (
                          b.fields.push({
                            name: 'stringPool',
                            type: 'CHARARRAY',
                            value: x,
                          }),
                          b
                        );
                      },
                      parse: function (f, b) {
                        var x = new G.Parser(f, b),
                          j = x.parseULong();
                        de.argument(j === 1, 'Unsupported ltag table version.'),
                          x.skip('uLong', 1);
                        for (
                          var C = x.parseULong(), I = [], F = 0;
                          F < C;
                          F++
                        ) {
                          for (
                            var q = '',
                              Y = b + x.parseUShort(),
                              se = x.parseUShort(),
                              pe = Y;
                            pe < Y + se;
                            ++pe
                          )
                            q += String.fromCharCode(f.getInt8(pe));
                          I.push(q);
                        }
                        return I;
                      },
                    },
                    xt = {
                      parse: function (f, b) {
                        var x = {},
                          j = new G.Parser(f, b);
                        return (
                          (x.version = j.parseVersion()),
                          (x.numGlyphs = j.parseUShort()),
                          x.version === 1 &&
                            ((x.maxPoints = j.parseUShort()),
                            (x.maxContours = j.parseUShort()),
                            (x.maxCompositePoints = j.parseUShort()),
                            (x.maxCompositeContours = j.parseUShort()),
                            (x.maxZones = j.parseUShort()),
                            (x.maxTwilightPoints = j.parseUShort()),
                            (x.maxStorage = j.parseUShort()),
                            (x.maxFunctionDefs = j.parseUShort()),
                            (x.maxInstructionDefs = j.parseUShort()),
                            (x.maxStackElements = j.parseUShort()),
                            (x.maxSizeOfInstructions = j.parseUShort()),
                            (x.maxComponentElements = j.parseUShort()),
                            (x.maxComponentDepth = j.parseUShort())),
                          x
                        );
                      },
                      make: function (f) {
                        return new Fe.Table('maxp', [
                          { name: 'version', type: 'FIXED', value: 20480 },
                          { name: 'numGlyphs', type: 'USHORT', value: f },
                        ]);
                      },
                    },
                    lt = [
                      'copyright',
                      'fontFamily',
                      'fontSubfamily',
                      'uniqueID',
                      'fullName',
                      'version',
                      'postScriptName',
                      'trademark',
                      'manufacturer',
                      'designer',
                      'description',
                      'manufacturerURL',
                      'designerURL',
                      'license',
                      'licenseURL',
                      'reserved',
                      'preferredFamily',
                      'preferredSubfamily',
                      'compatibleFullName',
                      'sampleText',
                      'postScriptFindFontName',
                      'wwsFamily',
                      'wwsSubfamily',
                    ],
                    He = {
                      0: 'en',
                      1: 'fr',
                      2: 'de',
                      3: 'it',
                      4: 'nl',
                      5: 'sv',
                      6: 'es',
                      7: 'da',
                      8: 'pt',
                      9: 'no',
                      10: 'he',
                      11: 'ja',
                      12: 'ar',
                      13: 'fi',
                      14: 'el',
                      15: 'is',
                      16: 'mt',
                      17: 'tr',
                      18: 'hr',
                      19: 'zh-Hant',
                      20: 'ur',
                      21: 'hi',
                      22: 'th',
                      23: 'ko',
                      24: 'lt',
                      25: 'pl',
                      26: 'hu',
                      27: 'es',
                      28: 'lv',
                      29: 'se',
                      30: 'fo',
                      31: 'fa',
                      32: 'ru',
                      33: 'zh',
                      34: 'nl-BE',
                      35: 'ga',
                      36: 'sq',
                      37: 'ro',
                      38: 'cz',
                      39: 'sk',
                      40: 'si',
                      41: 'yi',
                      42: 'sr',
                      43: 'mk',
                      44: 'bg',
                      45: 'uk',
                      46: 'be',
                      47: 'uz',
                      48: 'kk',
                      49: 'az-Cyrl',
                      50: 'az-Arab',
                      51: 'hy',
                      52: 'ka',
                      53: 'mo',
                      54: 'ky',
                      55: 'tg',
                      56: 'tk',
                      57: 'mn-CN',
                      58: 'mn',
                      59: 'ps',
                      60: 'ks',
                      61: 'ku',
                      62: 'sd',
                      63: 'bo',
                      64: 'ne',
                      65: 'sa',
                      66: 'mr',
                      67: 'bn',
                      68: 'as',
                      69: 'gu',
                      70: 'pa',
                      71: 'or',
                      72: 'ml',
                      73: 'kn',
                      74: 'ta',
                      75: 'te',
                      76: 'si',
                      77: 'my',
                      78: 'km',
                      79: 'lo',
                      80: 'vi',
                      81: 'id',
                      82: 'tl',
                      83: 'ms',
                      84: 'ms-Arab',
                      85: 'am',
                      86: 'ti',
                      87: 'om',
                      88: 'so',
                      89: 'sw',
                      90: 'rw',
                      91: 'rn',
                      92: 'ny',
                      93: 'mg',
                      94: 'eo',
                      128: 'cy',
                      129: 'eu',
                      130: 'ca',
                      131: 'la',
                      132: 'qu',
                      133: 'gn',
                      134: 'ay',
                      135: 'tt',
                      136: 'ug',
                      137: 'dz',
                      138: 'jv',
                      139: 'su',
                      140: 'gl',
                      141: 'af',
                      142: 'br',
                      143: 'iu',
                      144: 'gd',
                      145: 'gv',
                      146: 'ga',
                      147: 'to',
                      148: 'el-polyton',
                      149: 'kl',
                      150: 'az',
                      151: 'nn',
                    },
                    Rt = {
                      0: 0,
                      1: 0,
                      2: 0,
                      3: 0,
                      4: 0,
                      5: 0,
                      6: 0,
                      7: 0,
                      8: 0,
                      9: 0,
                      10: 5,
                      11: 1,
                      12: 4,
                      13: 0,
                      14: 6,
                      15: 0,
                      16: 0,
                      17: 0,
                      18: 0,
                      19: 2,
                      20: 4,
                      21: 9,
                      22: 21,
                      23: 3,
                      24: 29,
                      25: 29,
                      26: 29,
                      27: 29,
                      28: 29,
                      29: 0,
                      30: 0,
                      31: 4,
                      32: 7,
                      33: 25,
                      34: 0,
                      35: 0,
                      36: 0,
                      37: 0,
                      38: 29,
                      39: 29,
                      40: 0,
                      41: 5,
                      42: 7,
                      43: 7,
                      44: 7,
                      45: 7,
                      46: 7,
                      47: 7,
                      48: 7,
                      49: 7,
                      50: 4,
                      51: 24,
                      52: 23,
                      53: 7,
                      54: 7,
                      55: 7,
                      56: 7,
                      57: 27,
                      58: 7,
                      59: 4,
                      60: 4,
                      61: 4,
                      62: 4,
                      63: 26,
                      64: 9,
                      65: 9,
                      66: 9,
                      67: 13,
                      68: 13,
                      69: 11,
                      70: 10,
                      71: 12,
                      72: 17,
                      73: 16,
                      74: 14,
                      75: 15,
                      76: 18,
                      77: 19,
                      78: 20,
                      79: 22,
                      80: 30,
                      81: 0,
                      82: 0,
                      83: 0,
                      84: 4,
                      85: 28,
                      86: 28,
                      87: 28,
                      88: 0,
                      89: 0,
                      90: 0,
                      91: 0,
                      92: 0,
                      93: 0,
                      94: 0,
                      128: 0,
                      129: 0,
                      130: 0,
                      131: 0,
                      132: 0,
                      133: 0,
                      134: 0,
                      135: 7,
                      136: 4,
                      137: 26,
                      138: 0,
                      139: 0,
                      140: 0,
                      141: 0,
                      142: 0,
                      143: 28,
                      144: 0,
                      145: 0,
                      146: 0,
                      147: 0,
                      148: 6,
                      149: 0,
                      150: 0,
                      151: 0,
                    },
                    tt = {
                      1078: 'af',
                      1052: 'sq',
                      1156: 'gsw',
                      1118: 'am',
                      5121: 'ar-DZ',
                      15361: 'ar-BH',
                      3073: 'ar',
                      2049: 'ar-IQ',
                      11265: 'ar-JO',
                      13313: 'ar-KW',
                      12289: 'ar-LB',
                      4097: 'ar-LY',
                      6145: 'ary',
                      8193: 'ar-OM',
                      16385: 'ar-QA',
                      1025: 'ar-SA',
                      10241: 'ar-SY',
                      7169: 'aeb',
                      14337: 'ar-AE',
                      9217: 'ar-YE',
                      1067: 'hy',
                      1101: 'as',
                      2092: 'az-Cyrl',
                      1068: 'az',
                      1133: 'ba',
                      1069: 'eu',
                      1059: 'be',
                      2117: 'bn',
                      1093: 'bn-IN',
                      8218: 'bs-Cyrl',
                      5146: 'bs',
                      1150: 'br',
                      1026: 'bg',
                      1027: 'ca',
                      3076: 'zh-HK',
                      5124: 'zh-MO',
                      2052: 'zh',
                      4100: 'zh-SG',
                      1028: 'zh-TW',
                      1155: 'co',
                      1050: 'hr',
                      4122: 'hr-BA',
                      1029: 'cs',
                      1030: 'da',
                      1164: 'prs',
                      1125: 'dv',
                      2067: 'nl-BE',
                      1043: 'nl',
                      3081: 'en-AU',
                      10249: 'en-BZ',
                      4105: 'en-CA',
                      9225: 'en-029',
                      16393: 'en-IN',
                      6153: 'en-IE',
                      8201: 'en-JM',
                      17417: 'en-MY',
                      5129: 'en-NZ',
                      13321: 'en-PH',
                      18441: 'en-SG',
                      7177: 'en-ZA',
                      11273: 'en-TT',
                      2057: 'en-GB',
                      1033: 'en',
                      12297: 'en-ZW',
                      1061: 'et',
                      1080: 'fo',
                      1124: 'fil',
                      1035: 'fi',
                      2060: 'fr-BE',
                      3084: 'fr-CA',
                      1036: 'fr',
                      5132: 'fr-LU',
                      6156: 'fr-MC',
                      4108: 'fr-CH',
                      1122: 'fy',
                      1110: 'gl',
                      1079: 'ka',
                      3079: 'de-AT',
                      1031: 'de',
                      5127: 'de-LI',
                      4103: 'de-LU',
                      2055: 'de-CH',
                      1032: 'el',
                      1135: 'kl',
                      1095: 'gu',
                      1128: 'ha',
                      1037: 'he',
                      1081: 'hi',
                      1038: 'hu',
                      1039: 'is',
                      1136: 'ig',
                      1057: 'id',
                      1117: 'iu',
                      2141: 'iu-Latn',
                      2108: 'ga',
                      1076: 'xh',
                      1077: 'zu',
                      1040: 'it',
                      2064: 'it-CH',
                      1041: 'ja',
                      1099: 'kn',
                      1087: 'kk',
                      1107: 'km',
                      1158: 'quc',
                      1159: 'rw',
                      1089: 'sw',
                      1111: 'kok',
                      1042: 'ko',
                      1088: 'ky',
                      1108: 'lo',
                      1062: 'lv',
                      1063: 'lt',
                      2094: 'dsb',
                      1134: 'lb',
                      1071: 'mk',
                      2110: 'ms-BN',
                      1086: 'ms',
                      1100: 'ml',
                      1082: 'mt',
                      1153: 'mi',
                      1146: 'arn',
                      1102: 'mr',
                      1148: 'moh',
                      1104: 'mn',
                      2128: 'mn-CN',
                      1121: 'ne',
                      1044: 'nb',
                      2068: 'nn',
                      1154: 'oc',
                      1096: 'or',
                      1123: 'ps',
                      1045: 'pl',
                      1046: 'pt',
                      2070: 'pt-PT',
                      1094: 'pa',
                      1131: 'qu-BO',
                      2155: 'qu-EC',
                      3179: 'qu',
                      1048: 'ro',
                      1047: 'rm',
                      1049: 'ru',
                      9275: 'smn',
                      4155: 'smj-NO',
                      5179: 'smj',
                      3131: 'se-FI',
                      1083: 'se',
                      2107: 'se-SE',
                      8251: 'sms',
                      6203: 'sma-NO',
                      7227: 'sms',
                      1103: 'sa',
                      7194: 'sr-Cyrl-BA',
                      3098: 'sr',
                      6170: 'sr-Latn-BA',
                      2074: 'sr-Latn',
                      1132: 'nso',
                      1074: 'tn',
                      1115: 'si',
                      1051: 'sk',
                      1060: 'sl',
                      11274: 'es-AR',
                      16394: 'es-BO',
                      13322: 'es-CL',
                      9226: 'es-CO',
                      5130: 'es-CR',
                      7178: 'es-DO',
                      12298: 'es-EC',
                      17418: 'es-SV',
                      4106: 'es-GT',
                      18442: 'es-HN',
                      2058: 'es-MX',
                      19466: 'es-NI',
                      6154: 'es-PA',
                      15370: 'es-PY',
                      10250: 'es-PE',
                      20490: 'es-PR',
                      3082: 'es',
                      1034: 'es',
                      21514: 'es-US',
                      14346: 'es-UY',
                      8202: 'es-VE',
                      2077: 'sv-FI',
                      1053: 'sv',
                      1114: 'syr',
                      1064: 'tg',
                      2143: 'tzm',
                      1097: 'ta',
                      1092: 'tt',
                      1098: 'te',
                      1054: 'th',
                      1105: 'bo',
                      1055: 'tr',
                      1090: 'tk',
                      1152: 'ug',
                      1058: 'uk',
                      1070: 'hsb',
                      1056: 'ur',
                      2115: 'uz-Cyrl',
                      1091: 'uz',
                      1066: 'vi',
                      1106: 'cy',
                      1160: 'wo',
                      1157: 'sah',
                      1144: 'ii',
                      1130: 'yo',
                    };
                  function Qn(f, b, x) {
                    switch (f) {
                      case 0:
                        if (b === 65535) return 'und';
                        if (x) return x[b];
                        break;
                      case 1:
                        return He[b];
                      case 3:
                        return tt[b];
                    }
                  }
                  var un = 'utf-16',
                    Jn = {
                      0: 'macintosh',
                      1: 'x-mac-japanese',
                      2: 'x-mac-chinesetrad',
                      3: 'x-mac-korean',
                      6: 'x-mac-greek',
                      7: 'x-mac-cyrillic',
                      9: 'x-mac-devanagai',
                      10: 'x-mac-gurmukhi',
                      11: 'x-mac-gujarati',
                      12: 'x-mac-oriya',
                      13: 'x-mac-bengali',
                      14: 'x-mac-tamil',
                      15: 'x-mac-telugu',
                      16: 'x-mac-kannada',
                      17: 'x-mac-malayalam',
                      18: 'x-mac-sinhalese',
                      19: 'x-mac-burmese',
                      20: 'x-mac-khmer',
                      21: 'x-mac-thai',
                      22: 'x-mac-lao',
                      23: 'x-mac-georgian',
                      24: 'x-mac-armenian',
                      25: 'x-mac-chinesesimp',
                      26: 'x-mac-tibetan',
                      27: 'x-mac-mongolian',
                      28: 'x-mac-ethiopic',
                      29: 'x-mac-ce',
                      30: 'x-mac-vietnamese',
                      31: 'x-mac-extarabic',
                    },
                    Kn = {
                      15: 'x-mac-icelandic',
                      17: 'x-mac-turkish',
                      18: 'x-mac-croatian',
                      24: 'x-mac-ce',
                      25: 'x-mac-ce',
                      26: 'x-mac-ce',
                      27: 'x-mac-ce',
                      28: 'x-mac-ce',
                      30: 'x-mac-icelandic',
                      37: 'x-mac-romanian',
                      38: 'x-mac-ce',
                      39: 'x-mac-ce',
                      40: 'x-mac-ce',
                      143: 'x-mac-inuit',
                      146: 'x-mac-gaelic',
                    };
                  function es(f, b, x) {
                    switch (f) {
                      case 0:
                        return un;
                      case 1:
                        return Kn[x] || Jn[b];
                      case 3:
                        if (b === 1 || b === 10) return un;
                    }
                  }
                  function On(f) {
                    var b = {};
                    for (var x in f) b[f[x]] = parseInt(x);
                    return b;
                  }
                  function An(f, b, x, j, C, I) {
                    return new Fe.Record('NameRecord', [
                      { name: 'platformID', type: 'USHORT', value: f },
                      { name: 'encodingID', type: 'USHORT', value: b },
                      { name: 'languageID', type: 'USHORT', value: x },
                      { name: 'nameID', type: 'USHORT', value: j },
                      { name: 'length', type: 'USHORT', value: C },
                      { name: 'offset', type: 'USHORT', value: I },
                    ]);
                  }
                  function Mi(f, b) {
                    var x = (function (I, F) {
                      var q = I.length,
                        Y = F.length - q + 1;
                      e: for (var se = 0; se < Y; se++)
                        for (; se < Y; se++) {
                          for (var pe = 0; pe < q; pe++)
                            if (F[se + pe] !== I[pe]) continue e;
                          return se;
                        }
                      return -1;
                    })(f, b);
                    if (x < 0) {
                      x = b.length;
                      for (var j = 0, C = f.length; j < C; ++j) b.push(f[j]);
                    }
                    return x;
                  }
                  var Ei = {
                      parse: function (f, b, x) {
                        for (
                          var j = {},
                            C = new G.Parser(f, b),
                            I = C.parseUShort(),
                            F = C.parseUShort(),
                            q = C.offset + C.parseUShort(),
                            Y = 0;
                          Y < F;
                          Y++
                        ) {
                          var se = C.parseUShort(),
                            pe = C.parseUShort(),
                            be = C.parseUShort(),
                            te = C.parseUShort(),
                            Ue = lt[te] || te,
                            Le = C.parseUShort(),
                            Oe = C.parseUShort(),
                            Me = Qn(se, be, x),
                            Ce = es(se, pe, be);
                          if (Ce !== void 0 && Me !== void 0) {
                            var $e = void 0;
                            if (
                              ($e =
                                Ce === un
                                  ? Se.UTF16(f, q + Oe, Le)
                                  : Se.MACSTRING(f, q + Oe, Le, Ce))
                            ) {
                              var Ze = j[Ue];
                              Ze === void 0 && (Ze = j[Ue] = {}), (Ze[Me] = $e);
                            }
                          }
                        }
                        return I === 1 && C.parseUShort(), j;
                      },
                      make: function (f, b) {
                        var x,
                          j = [],
                          C = {},
                          I = On(lt);
                        for (var F in f) {
                          var q = I[F];
                          if (
                            (q === void 0 && (q = F),
                            (x = parseInt(q)),
                            isNaN(x))
                          )
                            throw new Error(
                              'Name table entry "' +
                                F +
                                '" does not exist, see nameTableNames for complete list.',
                            );
                          (C[x] = f[F]), j.push(x);
                        }
                        for (
                          var Y = On(He), se = On(tt), pe = [], be = [], te = 0;
                          te < j.length;
                          te++
                        ) {
                          var Ue = C[(x = j[te])];
                          for (var Le in Ue) {
                            var Oe = Ue[Le],
                              Me = 1,
                              Ce = Y[Le],
                              $e = Rt[Ce],
                              Ze = es(Me, $e, Ce),
                              ct = fe.MACSTRING(Oe, Ze);
                            ct === void 0 &&
                              ((Me = 0),
                              (Ce = b.indexOf(Le)) < 0 &&
                                ((Ce = b.length), b.push(Le)),
                              ($e = 4),
                              (ct = fe.UTF16(Oe)));
                            var et = Mi(ct, be);
                            pe.push(An(Me, $e, Ce, x, ct.length, et));
                            var rt = se[Le];
                            if (rt !== void 0) {
                              var Nt = fe.UTF16(Oe),
                                pt = Mi(Nt, be);
                              pe.push(An(3, 1, rt, x, Nt.length, pt));
                            }
                          }
                        }
                        pe.sort(function (St, _t) {
                          return (
                            St.platformID - _t.platformID ||
                            St.encodingID - _t.encodingID ||
                            St.languageID - _t.languageID ||
                            St.nameID - _t.nameID
                          );
                        });
                        for (
                          var ht = new Fe.Table('name', [
                              { name: 'format', type: 'USHORT', value: 0 },
                              {
                                name: 'count',
                                type: 'USHORT',
                                value: pe.length,
                              },
                              {
                                name: 'stringOffset',
                                type: 'USHORT',
                                value: 6 + 12 * pe.length,
                              },
                            ]),
                            mt = 0;
                          mt < pe.length;
                          mt++
                        )
                          ht.fields.push({
                            name: 'record_' + mt,
                            type: 'RECORD',
                            value: pe[mt],
                          });
                        return (
                          ht.fields.push({
                            name: 'strings',
                            type: 'LITERAL',
                            value: be,
                          }),
                          ht
                        );
                      },
                    },
                    jo = [
                      { begin: 0, end: 127 },
                      { begin: 128, end: 255 },
                      { begin: 256, end: 383 },
                      { begin: 384, end: 591 },
                      { begin: 592, end: 687 },
                      { begin: 688, end: 767 },
                      { begin: 768, end: 879 },
                      { begin: 880, end: 1023 },
                      { begin: 11392, end: 11519 },
                      { begin: 1024, end: 1279 },
                      { begin: 1328, end: 1423 },
                      { begin: 1424, end: 1535 },
                      { begin: 42240, end: 42559 },
                      { begin: 1536, end: 1791 },
                      { begin: 1984, end: 2047 },
                      { begin: 2304, end: 2431 },
                      { begin: 2432, end: 2559 },
                      { begin: 2560, end: 2687 },
                      { begin: 2688, end: 2815 },
                      { begin: 2816, end: 2943 },
                      { begin: 2944, end: 3071 },
                      { begin: 3072, end: 3199 },
                      { begin: 3200, end: 3327 },
                      { begin: 3328, end: 3455 },
                      { begin: 3584, end: 3711 },
                      { begin: 3712, end: 3839 },
                      { begin: 4256, end: 4351 },
                      { begin: 6912, end: 7039 },
                      { begin: 4352, end: 4607 },
                      { begin: 7680, end: 7935 },
                      { begin: 7936, end: 8191 },
                      { begin: 8192, end: 8303 },
                      { begin: 8304, end: 8351 },
                      { begin: 8352, end: 8399 },
                      { begin: 8400, end: 8447 },
                      { begin: 8448, end: 8527 },
                      { begin: 8528, end: 8591 },
                      { begin: 8592, end: 8703 },
                      { begin: 8704, end: 8959 },
                      { begin: 8960, end: 9215 },
                      { begin: 9216, end: 9279 },
                      { begin: 9280, end: 9311 },
                      { begin: 9312, end: 9471 },
                      { begin: 9472, end: 9599 },
                      { begin: 9600, end: 9631 },
                      { begin: 9632, end: 9727 },
                      { begin: 9728, end: 9983 },
                      { begin: 9984, end: 10175 },
                      { begin: 12288, end: 12351 },
                      { begin: 12352, end: 12447 },
                      { begin: 12448, end: 12543 },
                      { begin: 12544, end: 12591 },
                      { begin: 12592, end: 12687 },
                      { begin: 43072, end: 43135 },
                      { begin: 12800, end: 13055 },
                      { begin: 13056, end: 13311 },
                      { begin: 44032, end: 55215 },
                      { begin: 55296, end: 57343 },
                      { begin: 67840, end: 67871 },
                      { begin: 19968, end: 40959 },
                      { begin: 57344, end: 63743 },
                      { begin: 12736, end: 12783 },
                      { begin: 64256, end: 64335 },
                      { begin: 64336, end: 65023 },
                      { begin: 65056, end: 65071 },
                      { begin: 65040, end: 65055 },
                      { begin: 65104, end: 65135 },
                      { begin: 65136, end: 65279 },
                      { begin: 65280, end: 65519 },
                      { begin: 65520, end: 65535 },
                      { begin: 3840, end: 4095 },
                      { begin: 1792, end: 1871 },
                      { begin: 1920, end: 1983 },
                      { begin: 3456, end: 3583 },
                      { begin: 4096, end: 4255 },
                      { begin: 4608, end: 4991 },
                      { begin: 5024, end: 5119 },
                      { begin: 5120, end: 5759 },
                      { begin: 5760, end: 5791 },
                      { begin: 5792, end: 5887 },
                      { begin: 6016, end: 6143 },
                      { begin: 6144, end: 6319 },
                      { begin: 10240, end: 10495 },
                      { begin: 40960, end: 42127 },
                      { begin: 5888, end: 5919 },
                      { begin: 66304, end: 66351 },
                      { begin: 66352, end: 66383 },
                      { begin: 66560, end: 66639 },
                      { begin: 118784, end: 119039 },
                      { begin: 119808, end: 120831 },
                      { begin: 1044480, end: 1048573 },
                      { begin: 65024, end: 65039 },
                      { begin: 917504, end: 917631 },
                      { begin: 6400, end: 6479 },
                      { begin: 6480, end: 6527 },
                      { begin: 6528, end: 6623 },
                      { begin: 6656, end: 6687 },
                      { begin: 11264, end: 11359 },
                      { begin: 11568, end: 11647 },
                      { begin: 19904, end: 19967 },
                      { begin: 43008, end: 43055 },
                      { begin: 65536, end: 65663 },
                      { begin: 65856, end: 65935 },
                      { begin: 66432, end: 66463 },
                      { begin: 66464, end: 66527 },
                      { begin: 66640, end: 66687 },
                      { begin: 66688, end: 66735 },
                      { begin: 67584, end: 67647 },
                      { begin: 68096, end: 68191 },
                      { begin: 119552, end: 119647 },
                      { begin: 73728, end: 74751 },
                      { begin: 119648, end: 119679 },
                      { begin: 7040, end: 7103 },
                      { begin: 7168, end: 7247 },
                      { begin: 7248, end: 7295 },
                      { begin: 43136, end: 43231 },
                      { begin: 43264, end: 43311 },
                      { begin: 43312, end: 43359 },
                      { begin: 43520, end: 43615 },
                      { begin: 65936, end: 65999 },
                      { begin: 66e3, end: 66047 },
                      { begin: 66208, end: 66271 },
                      { begin: 127024, end: 127135 },
                    ],
                    Mo = {
                      parse: function (f, b) {
                        var x = {},
                          j = new G.Parser(f, b);
                        (x.version = j.parseUShort()),
                          (x.xAvgCharWidth = j.parseShort()),
                          (x.usWeightClass = j.parseUShort()),
                          (x.usWidthClass = j.parseUShort()),
                          (x.fsType = j.parseUShort()),
                          (x.ySubscriptXSize = j.parseShort()),
                          (x.ySubscriptYSize = j.parseShort()),
                          (x.ySubscriptXOffset = j.parseShort()),
                          (x.ySubscriptYOffset = j.parseShort()),
                          (x.ySuperscriptXSize = j.parseShort()),
                          (x.ySuperscriptYSize = j.parseShort()),
                          (x.ySuperscriptXOffset = j.parseShort()),
                          (x.ySuperscriptYOffset = j.parseShort()),
                          (x.yStrikeoutSize = j.parseShort()),
                          (x.yStrikeoutPosition = j.parseShort()),
                          (x.sFamilyClass = j.parseShort()),
                          (x.panose = []);
                        for (var C = 0; C < 10; C++)
                          x.panose[C] = j.parseByte();
                        return (
                          (x.ulUnicodeRange1 = j.parseULong()),
                          (x.ulUnicodeRange2 = j.parseULong()),
                          (x.ulUnicodeRange3 = j.parseULong()),
                          (x.ulUnicodeRange4 = j.parseULong()),
                          (x.achVendID = String.fromCharCode(
                            j.parseByte(),
                            j.parseByte(),
                            j.parseByte(),
                            j.parseByte(),
                          )),
                          (x.fsSelection = j.parseUShort()),
                          (x.usFirstCharIndex = j.parseUShort()),
                          (x.usLastCharIndex = j.parseUShort()),
                          (x.sTypoAscender = j.parseShort()),
                          (x.sTypoDescender = j.parseShort()),
                          (x.sTypoLineGap = j.parseShort()),
                          (x.usWinAscent = j.parseUShort()),
                          (x.usWinDescent = j.parseUShort()),
                          1 <= x.version &&
                            ((x.ulCodePageRange1 = j.parseULong()),
                            (x.ulCodePageRange2 = j.parseULong())),
                          2 <= x.version &&
                            ((x.sxHeight = j.parseShort()),
                            (x.sCapHeight = j.parseShort()),
                            (x.usDefaultChar = j.parseUShort()),
                            (x.usBreakChar = j.parseUShort()),
                            (x.usMaxContent = j.parseUShort())),
                          x
                        );
                      },
                      make: function (f) {
                        return new Fe.Table(
                          'OS/2',
                          [
                            { name: 'version', type: 'USHORT', value: 3 },
                            { name: 'xAvgCharWidth', type: 'SHORT', value: 0 },
                            { name: 'usWeightClass', type: 'USHORT', value: 0 },
                            { name: 'usWidthClass', type: 'USHORT', value: 0 },
                            { name: 'fsType', type: 'USHORT', value: 0 },
                            {
                              name: 'ySubscriptXSize',
                              type: 'SHORT',
                              value: 650,
                            },
                            {
                              name: 'ySubscriptYSize',
                              type: 'SHORT',
                              value: 699,
                            },
                            {
                              name: 'ySubscriptXOffset',
                              type: 'SHORT',
                              value: 0,
                            },
                            {
                              name: 'ySubscriptYOffset',
                              type: 'SHORT',
                              value: 140,
                            },
                            {
                              name: 'ySuperscriptXSize',
                              type: 'SHORT',
                              value: 650,
                            },
                            {
                              name: 'ySuperscriptYSize',
                              type: 'SHORT',
                              value: 699,
                            },
                            {
                              name: 'ySuperscriptXOffset',
                              type: 'SHORT',
                              value: 0,
                            },
                            {
                              name: 'ySuperscriptYOffset',
                              type: 'SHORT',
                              value: 479,
                            },
                            {
                              name: 'yStrikeoutSize',
                              type: 'SHORT',
                              value: 49,
                            },
                            {
                              name: 'yStrikeoutPosition',
                              type: 'SHORT',
                              value: 258,
                            },
                            { name: 'sFamilyClass', type: 'SHORT', value: 0 },
                            { name: 'bFamilyType', type: 'BYTE', value: 0 },
                            { name: 'bSerifStyle', type: 'BYTE', value: 0 },
                            { name: 'bWeight', type: 'BYTE', value: 0 },
                            { name: 'bProportion', type: 'BYTE', value: 0 },
                            { name: 'bContrast', type: 'BYTE', value: 0 },
                            {
                              name: 'bStrokeVariation',
                              type: 'BYTE',
                              value: 0,
                            },
                            { name: 'bArmStyle', type: 'BYTE', value: 0 },
                            { name: 'bLetterform', type: 'BYTE', value: 0 },
                            { name: 'bMidline', type: 'BYTE', value: 0 },
                            { name: 'bXHeight', type: 'BYTE', value: 0 },
                            {
                              name: 'ulUnicodeRange1',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulUnicodeRange2',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulUnicodeRange3',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulUnicodeRange4',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'achVendID',
                              type: 'CHARARRAY',
                              value: 'XXXX',
                            },
                            { name: 'fsSelection', type: 'USHORT', value: 0 },
                            {
                              name: 'usFirstCharIndex',
                              type: 'USHORT',
                              value: 0,
                            },
                            {
                              name: 'usLastCharIndex',
                              type: 'USHORT',
                              value: 0,
                            },
                            { name: 'sTypoAscender', type: 'SHORT', value: 0 },
                            { name: 'sTypoDescender', type: 'SHORT', value: 0 },
                            { name: 'sTypoLineGap', type: 'SHORT', value: 0 },
                            { name: 'usWinAscent', type: 'USHORT', value: 0 },
                            { name: 'usWinDescent', type: 'USHORT', value: 0 },
                            {
                              name: 'ulCodePageRange1',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulCodePageRange2',
                              type: 'ULONG',
                              value: 0,
                            },
                            { name: 'sxHeight', type: 'SHORT', value: 0 },
                            { name: 'sCapHeight', type: 'SHORT', value: 0 },
                            { name: 'usDefaultChar', type: 'USHORT', value: 0 },
                            { name: 'usBreakChar', type: 'USHORT', value: 0 },
                            { name: 'usMaxContext', type: 'USHORT', value: 0 },
                          ],
                          f,
                        );
                      },
                      unicodeRanges: jo,
                      getUnicodeRange: function (f) {
                        for (var b = 0; b < jo.length; b += 1) {
                          var x = jo[b];
                          if (f >= x.begin && f < x.end) return b;
                        }
                        return -1;
                      },
                    },
                    Ci = {
                      parse: function (f, b) {
                        var x = {},
                          j = new G.Parser(f, b);
                        switch (
                          ((x.version = j.parseVersion()),
                          (x.italicAngle = j.parseFixed()),
                          (x.underlinePosition = j.parseShort()),
                          (x.underlineThickness = j.parseShort()),
                          (x.isFixedPitch = j.parseULong()),
                          (x.minMemType42 = j.parseULong()),
                          (x.maxMemType42 = j.parseULong()),
                          (x.minMemType1 = j.parseULong()),
                          (x.maxMemType1 = j.parseULong()),
                          x.version)
                        ) {
                          case 1:
                            x.names = _e.slice();
                            break;
                          case 2:
                            (x.numberOfGlyphs = j.parseUShort()),
                              (x.glyphNameIndex = new Array(x.numberOfGlyphs));
                            for (var C = 0; C < x.numberOfGlyphs; C++)
                              x.glyphNameIndex[C] = j.parseUShort();
                            x.names = [];
                            for (var I = 0; I < x.numberOfGlyphs; I++)
                              if (x.glyphNameIndex[I] >= _e.length) {
                                var F = j.parseChar();
                                x.names.push(j.parseString(F));
                              }
                            break;
                          case 2.5:
                            (x.numberOfGlyphs = j.parseUShort()),
                              (x.offset = new Array(x.numberOfGlyphs));
                            for (var q = 0; q < x.numberOfGlyphs; q++)
                              x.offset[q] = j.parseChar();
                        }
                        return x;
                      },
                      make: function () {
                        return new Fe.Table('post', [
                          { name: 'version', type: 'FIXED', value: 196608 },
                          { name: 'italicAngle', type: 'FIXED', value: 0 },
                          {
                            name: 'underlinePosition',
                            type: 'FWORD',
                            value: 0,
                          },
                          {
                            name: 'underlineThickness',
                            type: 'FWORD',
                            value: 0,
                          },
                          { name: 'isFixedPitch', type: 'ULONG', value: 0 },
                          { name: 'minMemType42', type: 'ULONG', value: 0 },
                          { name: 'maxMemType42', type: 'ULONG', value: 0 },
                          { name: 'minMemType1', type: 'ULONG', value: 0 },
                          { name: 'maxMemType1', type: 'ULONG', value: 0 },
                        ]);
                      },
                    },
                    fr = new Array(9);
                  (fr[1] = function () {
                    var f = this.offset + this.relativeOffset,
                      b = this.parseUShort();
                    return b === 1
                      ? {
                          substFormat: 1,
                          coverage: this.parsePointer(ge.coverage),
                          deltaGlyphId: this.parseUShort(),
                        }
                      : b === 2
                      ? {
                          substFormat: 2,
                          coverage: this.parsePointer(ge.coverage),
                          substitute: this.parseOffset16List(),
                        }
                      : void de.assert(
                          !1,
                          '0x' +
                            f.toString(16) +
                            ': lookup type 1 format must be 1 or 2.',
                        );
                  }),
                    (fr[2] = function () {
                      var f = this.parseUShort();
                      return (
                        de.argument(
                          f === 1,
                          'GSUB Multiple Substitution Subtable identifier-format must be 1',
                        ),
                        {
                          substFormat: f,
                          coverage: this.parsePointer(ge.coverage),
                          sequences: this.parseListOfLists(),
                        }
                      );
                    }),
                    (fr[3] = function () {
                      var f = this.parseUShort();
                      return (
                        de.argument(
                          f === 1,
                          'GSUB Alternate Substitution Subtable identifier-format must be 1',
                        ),
                        {
                          substFormat: f,
                          coverage: this.parsePointer(ge.coverage),
                          alternateSets: this.parseListOfLists(),
                        }
                      );
                    }),
                    (fr[4] = function () {
                      var f = this.parseUShort();
                      return (
                        de.argument(
                          f === 1,
                          'GSUB ligature table identifier-format must be 1',
                        ),
                        {
                          substFormat: f,
                          coverage: this.parsePointer(ge.coverage),
                          ligatureSets: this.parseListOfLists(function () {
                            return {
                              ligGlyph: this.parseUShort(),
                              components: this.parseUShortList(
                                this.parseUShort() - 1,
                              ),
                            };
                          }),
                        }
                      );
                    });
                  var kn = {
                    sequenceIndex: ge.uShort,
                    lookupListIndex: ge.uShort,
                  };
                  (fr[5] = function () {
                    var f = this.offset + this.relativeOffset,
                      b = this.parseUShort();
                    if (b === 1)
                      return {
                        substFormat: b,
                        coverage: this.parsePointer(ge.coverage),
                        ruleSets: this.parseListOfLists(function () {
                          var C = this.parseUShort(),
                            I = this.parseUShort();
                          return {
                            input: this.parseUShortList(C - 1),
                            lookupRecords: this.parseRecordList(I, kn),
                          };
                        }),
                      };
                    if (b === 2)
                      return {
                        substFormat: b,
                        coverage: this.parsePointer(ge.coverage),
                        classDef: this.parsePointer(ge.classDef),
                        classSets: this.parseListOfLists(function () {
                          var C = this.parseUShort(),
                            I = this.parseUShort();
                          return {
                            classes: this.parseUShortList(C - 1),
                            lookupRecords: this.parseRecordList(I, kn),
                          };
                        }),
                      };
                    if (b === 3) {
                      var x = this.parseUShort(),
                        j = this.parseUShort();
                      return {
                        substFormat: b,
                        coverages: this.parseList(x, ge.pointer(ge.coverage)),
                        lookupRecords: this.parseRecordList(j, kn),
                      };
                    }
                    de.assert(
                      !1,
                      '0x' +
                        f.toString(16) +
                        ': lookup type 5 format must be 1, 2 or 3.',
                    );
                  }),
                    (fr[6] = function () {
                      var f = this.offset + this.relativeOffset,
                        b = this.parseUShort();
                      return b === 1
                        ? {
                            substFormat: 1,
                            coverage: this.parsePointer(ge.coverage),
                            chainRuleSets: this.parseListOfLists(function () {
                              return {
                                backtrack: this.parseUShortList(),
                                input: this.parseUShortList(
                                  this.parseShort() - 1,
                                ),
                                lookahead: this.parseUShortList(),
                                lookupRecords: this.parseRecordList(kn),
                              };
                            }),
                          }
                        : b === 2
                        ? {
                            substFormat: 2,
                            coverage: this.parsePointer(ge.coverage),
                            backtrackClassDef: this.parsePointer(ge.classDef),
                            inputClassDef: this.parsePointer(ge.classDef),
                            lookaheadClassDef: this.parsePointer(ge.classDef),
                            chainClassSet: this.parseListOfLists(function () {
                              return {
                                backtrack: this.parseUShortList(),
                                input: this.parseUShortList(
                                  this.parseShort() - 1,
                                ),
                                lookahead: this.parseUShortList(),
                                lookupRecords: this.parseRecordList(kn),
                              };
                            }),
                          }
                        : b === 3
                        ? {
                            substFormat: 3,
                            backtrackCoverage: this.parseList(
                              ge.pointer(ge.coverage),
                            ),
                            inputCoverage: this.parseList(
                              ge.pointer(ge.coverage),
                            ),
                            lookaheadCoverage: this.parseList(
                              ge.pointer(ge.coverage),
                            ),
                            lookupRecords: this.parseRecordList(kn),
                          }
                        : void de.assert(
                            !1,
                            '0x' +
                              f.toString(16) +
                              ': lookup type 6 format must be 1, 2 or 3.',
                          );
                    }),
                    (fr[7] = function () {
                      var f = this.parseUShort();
                      de.argument(
                        f === 1,
                        'GSUB Extension Substitution subtable identifier-format must be 1',
                      );
                      var b = this.parseUShort(),
                        x = new ge(this.data, this.offset + this.parseULong());
                      return {
                        substFormat: 1,
                        lookupType: b,
                        extension: fr[b].call(x),
                      };
                    }),
                    (fr[8] = function () {
                      var f = this.parseUShort();
                      return (
                        de.argument(
                          f === 1,
                          'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1',
                        ),
                        {
                          substFormat: f,
                          coverage: this.parsePointer(ge.coverage),
                          backtrackCoverage: this.parseList(
                            ge.pointer(ge.coverage),
                          ),
                          lookaheadCoverage: this.parseList(
                            ge.pointer(ge.coverage),
                          ),
                          substitutes: this.parseUShortList(),
                        }
                      );
                    });
                  var ks = new Array(9);
                  (ks[1] = function (f) {
                    return f.substFormat === 1
                      ? new Fe.Table('substitutionTable', [
                          { name: 'substFormat', type: 'USHORT', value: 1 },
                          {
                            name: 'coverage',
                            type: 'TABLE',
                            value: new Fe.Coverage(f.coverage),
                          },
                          {
                            name: 'deltaGlyphID',
                            type: 'USHORT',
                            value: f.deltaGlyphId,
                          },
                        ])
                      : new Fe.Table(
                          'substitutionTable',
                          [
                            { name: 'substFormat', type: 'USHORT', value: 2 },
                            {
                              name: 'coverage',
                              type: 'TABLE',
                              value: new Fe.Coverage(f.coverage),
                            },
                          ].concat(Fe.ushortList('substitute', f.substitute)),
                        );
                  }),
                    (ks[3] = function (f) {
                      return (
                        de.assert(
                          f.substFormat === 1,
                          'Lookup type 3 substFormat must be 1.',
                        ),
                        new Fe.Table(
                          'substitutionTable',
                          [
                            { name: 'substFormat', type: 'USHORT', value: 1 },
                            {
                              name: 'coverage',
                              type: 'TABLE',
                              value: new Fe.Coverage(f.coverage),
                            },
                          ].concat(
                            Fe.tableList(
                              'altSet',
                              f.alternateSets,
                              function (b) {
                                return new Fe.Table(
                                  'alternateSetTable',
                                  Fe.ushortList('alternate', b),
                                );
                              },
                            ),
                          ),
                        )
                      );
                    }),
                    (ks[4] = function (f) {
                      return (
                        de.assert(
                          f.substFormat === 1,
                          'Lookup type 4 substFormat must be 1.',
                        ),
                        new Fe.Table(
                          'substitutionTable',
                          [
                            { name: 'substFormat', type: 'USHORT', value: 1 },
                            {
                              name: 'coverage',
                              type: 'TABLE',
                              value: new Fe.Coverage(f.coverage),
                            },
                          ].concat(
                            Fe.tableList(
                              'ligSet',
                              f.ligatureSets,
                              function (b) {
                                return new Fe.Table(
                                  'ligatureSetTable',
                                  Fe.tableList('ligature', b, function (x) {
                                    return new Fe.Table(
                                      'ligatureTable',
                                      [
                                        {
                                          name: 'ligGlyph',
                                          type: 'USHORT',
                                          value: x.ligGlyph,
                                        },
                                      ].concat(
                                        Fe.ushortList(
                                          'component',
                                          x.components,
                                          x.components.length + 1,
                                        ),
                                      ),
                                    );
                                  }),
                                );
                              },
                            ),
                          ),
                        )
                      );
                    });
                  var Oi = {
                      parse: function (f, b) {
                        var x = new ge(f, (b = b || 0)),
                          j = x.parseVersion(1);
                        return (
                          de.argument(
                            j === 1 || j === 1.1,
                            'Unsupported GSUB table version.',
                          ),
                          j === 1
                            ? {
                                version: j,
                                scripts: x.parseScriptList(),
                                features: x.parseFeatureList(),
                                lookups: x.parseLookupList(fr),
                              }
                            : {
                                version: j,
                                scripts: x.parseScriptList(),
                                features: x.parseFeatureList(),
                                lookups: x.parseLookupList(fr),
                                variations: x.parseFeatureVariationsList(),
                              }
                        );
                      },
                      make: function (f) {
                        return new Fe.Table('GSUB', [
                          { name: 'version', type: 'ULONG', value: 65536 },
                          {
                            name: 'scripts',
                            type: 'TABLE',
                            value: new Fe.ScriptList(f.scripts),
                          },
                          {
                            name: 'features',
                            type: 'TABLE',
                            value: new Fe.FeatureList(f.features),
                          },
                          {
                            name: 'lookups',
                            type: 'TABLE',
                            value: new Fe.LookupList(f.lookups, ks),
                          },
                        ]);
                      },
                    },
                    Ai = {
                      parse: function (f, b) {
                        var x = new G.Parser(f, b),
                          j = x.parseULong();
                        de.argument(j === 1, 'Unsupported META table version.'),
                          x.parseULong(),
                          x.parseULong();
                        for (
                          var C = x.parseULong(), I = {}, F = 0;
                          F < C;
                          F++
                        ) {
                          var q = x.parseTag(),
                            Y = x.parseULong(),
                            se = x.parseULong(),
                            pe = Se.UTF8(f, b + Y, se);
                          I[q] = pe;
                        }
                        return I;
                      },
                      make: function (f) {
                        var b = Object.keys(f).length,
                          x = '',
                          j = 16 + 12 * b,
                          C = new Fe.Table('meta', [
                            { name: 'version', type: 'ULONG', value: 1 },
                            { name: 'flags', type: 'ULONG', value: 0 },
                            { name: 'offset', type: 'ULONG', value: j },
                            { name: 'numTags', type: 'ULONG', value: b },
                          ]);
                        for (var I in f) {
                          var F = x.length;
                          (x += f[I]),
                            C.fields.push({
                              name: 'tag ' + I,
                              type: 'TAG',
                              value: I,
                            }),
                            C.fields.push({
                              name: 'offset ' + I,
                              type: 'ULONG',
                              value: j + F,
                            }),
                            C.fields.push({
                              name: 'length ' + I,
                              type: 'ULONG',
                              value: f[I].length,
                            });
                        }
                        return (
                          C.fields.push({
                            name: 'stringPool',
                            type: 'CHARARRAY',
                            value: x,
                          }),
                          C
                        );
                      },
                    };
                  function ki(f) {
                    return (Math.log(f) / Math.log(2)) | 0;
                  }
                  function Eo(f) {
                    for (; f.length % 4 != 0; ) f.push(0);
                    for (var b = 0, x = 0; x < f.length; x += 4)
                      b +=
                        (f[x] << 24) +
                        (f[x + 1] << 16) +
                        (f[x + 2] << 8) +
                        f[x + 3];
                    return (b %= Math.pow(2, 32));
                  }
                  function Pi(f, b, x, j) {
                    return new Fe.Record('Table Record', [
                      {
                        name: 'tag',
                        type: 'TAG',
                        value: f !== void 0 ? f : '',
                      },
                      {
                        name: 'checkSum',
                        type: 'ULONG',
                        value: b !== void 0 ? b : 0,
                      },
                      {
                        name: 'offset',
                        type: 'ULONG',
                        value: x !== void 0 ? x : 0,
                      },
                      {
                        name: 'length',
                        type: 'ULONG',
                        value: j !== void 0 ? j : 0,
                      },
                    ]);
                  }
                  function Ri(f) {
                    var b = new Fe.Table('sfnt', [
                      { name: 'version', type: 'TAG', value: 'OTTO' },
                      { name: 'numTables', type: 'USHORT', value: 0 },
                      { name: 'searchRange', type: 'USHORT', value: 0 },
                      { name: 'entrySelector', type: 'USHORT', value: 0 },
                      { name: 'rangeShift', type: 'USHORT', value: 0 },
                    ]);
                    (b.tables = f), (b.numTables = f.length);
                    var x = Math.pow(2, ki(b.numTables));
                    (b.searchRange = 16 * x),
                      (b.entrySelector = ki(x)),
                      (b.rangeShift = 16 * b.numTables - b.searchRange);
                    for (
                      var j = [],
                        C = [],
                        I = b.sizeOf() + Pi().sizeOf() * b.numTables;
                      I % 4 != 0;

                    )
                      (I += 1),
                        C.push({ name: 'padding', type: 'BYTE', value: 0 });
                    for (var F = 0; F < f.length; F += 1) {
                      var q = f[F];
                      de.argument(
                        q.tableName.length === 4,
                        'Table name' + q.tableName + ' is invalid.',
                      );
                      var Y = q.sizeOf(),
                        se = Pi(q.tableName, Eo(q.encode()), I, Y);
                      for (
                        j.push({
                          name: se.tag + ' Table Record',
                          type: 'RECORD',
                          value: se,
                        }),
                          C.push({
                            name: q.tableName + ' table',
                            type: 'RECORD',
                            value: q,
                          }),
                          I += Y,
                          de.argument(
                            !isNaN(I),
                            'Something went wrong calculating the offset.',
                          );
                        I % 4 != 0;

                      )
                        (I += 1),
                          C.push({ name: 'padding', type: 'BYTE', value: 0 });
                    }
                    return (
                      j.sort(function (pe, be) {
                        return pe.value.tag > be.value.tag ? 1 : -1;
                      }),
                      (b.fields = b.fields.concat(j)),
                      (b.fields = b.fields.concat(C)),
                      b
                    );
                  }
                  function Di(f, b, x) {
                    for (var j = 0; j < b.length; j += 1) {
                      var C = f.charToGlyphIndex(b[j]);
                      if (0 < C) return f.glyphs.get(C).getMetrics();
                    }
                    return x;
                  }
                  var ql = {
                    make: Ri,
                    fontToTable: function (f) {
                      for (
                        var b,
                          x = [],
                          j = [],
                          C = [],
                          I = [],
                          F = [],
                          q = [],
                          Y = [],
                          se = 0,
                          pe = 0,
                          be = 0,
                          te = 0,
                          Ue = 0,
                          Le = 0;
                        Le < f.glyphs.length;
                        Le += 1
                      ) {
                        var Oe = f.glyphs.get(Le),
                          Me = 0 | Oe.unicode;
                        if (isNaN(Oe.advanceWidth))
                          throw new Error(
                            'Glyph ' +
                              Oe.name +
                              ' (' +
                              Le +
                              '): advanceWidth is not a number.',
                          );
                        (Me < b || b === void 0) && 0 < Me && (b = Me),
                          se < Me && (se = Me);
                        var Ce = Mo.getUnicodeRange(Me);
                        if (Ce < 32) pe |= 1 << Ce;
                        else if (Ce < 64) be |= 1 << (Ce - 32);
                        else if (Ce < 96) te |= 1 << (Ce - 64);
                        else {
                          if (!(Ce < 123))
                            throw new Error(
                              'Unicode ranges bits > 123 are reserved for internal usage',
                            );
                          Ue |= 1 << (Ce - 96);
                        }
                        if (Oe.name !== '.notdef') {
                          var $e = Oe.getMetrics();
                          x.push($e.xMin),
                            j.push($e.yMin),
                            C.push($e.xMax),
                            I.push($e.yMax),
                            q.push($e.leftSideBearing),
                            Y.push($e.rightSideBearing),
                            F.push(Oe.advanceWidth);
                        }
                      }
                      var Ze = {
                        xMin: Math.min.apply(null, x),
                        yMin: Math.min.apply(null, j),
                        xMax: Math.max.apply(null, C),
                        yMax: Math.max.apply(null, I),
                        advanceWidthMax: Math.max.apply(null, F),
                        advanceWidthAvg: (function (Dn) {
                          for (var ha = 0, Io = 0; Io < Dn.length; Io += 1)
                            ha += Dn[Io];
                          return ha / Dn.length;
                        })(F),
                        minLeftSideBearing: Math.min.apply(null, q),
                        maxLeftSideBearing: Math.max.apply(null, q),
                        minRightSideBearing: Math.min.apply(null, Y),
                      };
                      (Ze.ascender = f.ascender), (Ze.descender = f.descender);
                      var ct = Ye.make({
                          flags: 3,
                          unitsPerEm: f.unitsPerEm,
                          xMin: Ze.xMin,
                          yMin: Ze.yMin,
                          xMax: Ze.xMax,
                          yMax: Ze.yMax,
                          lowestRecPPEM: 3,
                          createdTimestamp: f.createdTimestamp,
                        }),
                        et = Pe.make({
                          ascender: Ze.ascender,
                          descender: Ze.descender,
                          advanceWidthMax: Ze.advanceWidthMax,
                          minLeftSideBearing: Ze.minLeftSideBearing,
                          minRightSideBearing: Ze.minRightSideBearing,
                          xMaxExtent:
                            Ze.maxLeftSideBearing + (Ze.xMax - Ze.xMin),
                          numberOfHMetrics: f.glyphs.length,
                        }),
                        rt = xt.make(f.glyphs.length),
                        Nt = Mo.make({
                          xAvgCharWidth: Math.round(Ze.advanceWidthAvg),
                          usWeightClass: f.tables.os2.usWeightClass,
                          usWidthClass: f.tables.os2.usWidthClass,
                          usFirstCharIndex: b,
                          usLastCharIndex: se,
                          ulUnicodeRange1: pe,
                          ulUnicodeRange2: be,
                          ulUnicodeRange3: te,
                          ulUnicodeRange4: Ue,
                          fsSelection: f.tables.os2.fsSelection,
                          sTypoAscender: Ze.ascender,
                          sTypoDescender: Ze.descender,
                          sTypoLineGap: 0,
                          usWinAscent: Ze.yMax,
                          usWinDescent: Math.abs(Ze.yMin),
                          ulCodePageRange1: 1,
                          sxHeight: Di(f, 'xyvw', {
                            yMax: Math.round(Ze.ascender / 2),
                          }).yMax,
                          sCapHeight: Di(f, 'HIKLEFJMNTZBDPRAGOQSUVWXY', Ze)
                            .yMax,
                          usDefaultChar: f.hasChar(' ') ? 32 : 0,
                          usBreakChar: f.hasChar(' ') ? 32 : 0,
                        }),
                        pt = ft.make(f.glyphs),
                        ht = z.make(f.glyphs),
                        mt = f.getEnglishName('fontFamily'),
                        St = f.getEnglishName('fontSubfamily'),
                        _t = mt + ' ' + St,
                        Dt = f.getEnglishName('postScriptName');
                      Dt = Dt || mt.replace(/\s/g, '') + '-' + St;
                      var Tt = {};
                      for (var wt in f.names) Tt[wt] = f.names[wt];
                      Tt.uniqueID ||
                        (Tt.uniqueID = {
                          en: f.getEnglishName('manufacturer') + ':' + _t,
                        }),
                        Tt.postScriptName || (Tt.postScriptName = { en: Dt }),
                        Tt.preferredFamily ||
                          (Tt.preferredFamily = f.names.fontFamily),
                        Tt.preferredSubfamily ||
                          (Tt.preferredSubfamily = f.names.fontSubfamily);
                      var It = [],
                        jt = Ei.make(Tt, It),
                        Bt = 0 < It.length ? bt.make(It) : void 0,
                        vt = Ci.make(),
                        Wt = Ie.make(f.glyphs, {
                          version: f.getEnglishName('version'),
                          fullName: _t,
                          familyName: mt,
                          weightName: St,
                          postScriptName: Dt,
                          unitsPerEm: f.unitsPerEm,
                          fontBBox: [
                            0,
                            Ze.yMin,
                            Ze.ascender,
                            Ze.advanceWidthMax,
                          ],
                        }),
                        Ct =
                          f.metas && 0 < Object.keys(f.metas).length
                            ? Ai.make(f.metas)
                            : void 0,
                        At = [ct, et, rt, Nt, jt, ht, vt, Wt, pt];
                      Bt && At.push(Bt),
                        f.tables.gsub && At.push(Oi.make(f.tables.gsub)),
                        Ct && At.push(Ct);
                      for (
                        var Er = Ri(At),
                          Rn = Eo(Er.encode()),
                          hn = Er.fields,
                          cr = !1,
                          dn = 0;
                        dn < hn.length;
                        dn += 1
                      )
                        if (hn[dn].name === 'head table') {
                          (hn[dn].value.checkSumAdjustment = 2981146554 - Rn),
                            (cr = !0);
                          break;
                        }
                      if (!cr)
                        throw new Error(
                          'Could not find head table with checkSum to adjust.',
                        );
                      return Er;
                    },
                    computeCheckSum: Eo,
                  };
                  function Co(f, b) {
                    for (var x = 0, j = f.length - 1; x <= j; ) {
                      var C = (x + j) >>> 1,
                        I = f[C].tag;
                      if (I === b) return C;
                      I < b ? (x = 1 + C) : (j = C - 1);
                    }
                    return -x - 1;
                  }
                  function Ii(f, b) {
                    for (var x = 0, j = f.length - 1; x <= j; ) {
                      var C = (x + j) >>> 1,
                        I = f[C];
                      if (I === b) return C;
                      I < b ? (x = 1 + C) : (j = C - 1);
                    }
                    return -x - 1;
                  }
                  function Li(f, b) {
                    for (var x, j = 0, C = f.length - 1; j <= C; ) {
                      var I = (j + C) >>> 1,
                        F = (x = f[I]).start;
                      if (F === b) return x;
                      F < b ? (j = 1 + I) : (C = I - 1);
                    }
                    if (0 < j) return b > (x = f[j - 1]).end ? 0 : x;
                  }
                  function Ps(f, b) {
                    (this.font = f), (this.tableName = b);
                  }
                  function Rs(f) {
                    Ps.call(this, f, 'gpos');
                  }
                  function jr(f) {
                    Ps.call(this, f, 'gsub');
                  }
                  function zl(f, b) {
                    var x = f.length;
                    if (x !== b.length) return !1;
                    for (var j = 0; j < x; j++) if (f[j] !== b[j]) return !1;
                    return !0;
                  }
                  function Ni(f, b, x) {
                    for (var j = f.subtables, C = 0; C < j.length; C++) {
                      var I = j[C];
                      if (I.substFormat === b) return I;
                    }
                    if (x) return j.push(x), x;
                  }
                  function Fi(f) {
                    for (
                      var b = new ArrayBuffer(f.length),
                        x = new Uint8Array(b),
                        j = 0;
                      j < f.length;
                      ++j
                    )
                      x[j] = f[j];
                    return b;
                  }
                  function Pn(f, b) {
                    if (!f) throw b;
                  }
                  function Ui(f, b, x, j, C) {
                    var I;
                    return (I =
                      0 < (b & j)
                        ? ((I = f.parseByte()), (b & C) == 0 && (I = -I), x + I)
                        : 0 < (b & C)
                        ? x
                        : x + f.parseShort());
                  }
                  function Hl(f, b, x) {
                    var j,
                      C,
                      I = new G.Parser(b, x);
                    if (
                      ((f.numberOfContours = I.parseShort()),
                      (f._xMin = I.parseShort()),
                      (f._yMin = I.parseShort()),
                      (f._xMax = I.parseShort()),
                      (f._yMax = I.parseShort()),
                      0 < f.numberOfContours)
                    ) {
                      for (
                        var F = (f.endPointIndices = []), q = 0;
                        q < f.numberOfContours;
                        q += 1
                      )
                        F.push(I.parseUShort());
                      (f.instructionLength = I.parseUShort()),
                        (f.instructions = []);
                      for (var Y = 0; Y < f.instructionLength; Y += 1)
                        f.instructions.push(I.parseByte());
                      var se = F[F.length - 1] + 1;
                      j = [];
                      for (var pe = 0; pe < se; pe += 1)
                        if (((C = I.parseByte()), j.push(C), 0 < (8 & C)))
                          for (var be = I.parseByte(), te = 0; te < be; te += 1)
                            j.push(C), (pe += 1);
                      if (
                        (de.argument(j.length === se, 'Bad flags.'),
                        0 < F.length)
                      ) {
                        var Ue,
                          Le = [];
                        if (0 < se) {
                          for (var Oe = 0; Oe < se; Oe += 1)
                            (C = j[Oe]),
                              ((Ue = {}).onCurve = !!(1 & C)),
                              (Ue.lastPointOfContour = 0 <= F.indexOf(Oe)),
                              Le.push(Ue);
                          for (var Me = 0, Ce = 0; Ce < se; Ce += 1)
                            (C = j[Ce]),
                              ((Ue = Le[Ce]).x = Ui(I, C, Me, 2, 16)),
                              (Me = Ue.x);
                          for (var $e = 0, Ze = 0; Ze < se; Ze += 1)
                            (C = j[Ze]),
                              ((Ue = Le[Ze]).y = Ui(I, C, $e, 4, 32)),
                              ($e = Ue.y);
                        }
                        f.points = Le;
                      } else f.points = [];
                    } else if (f.numberOfContours === 0) f.points = [];
                    else {
                      (f.isComposite = !0),
                        (f.points = []),
                        (f.components = []);
                      for (var ct = !0; ct; ) {
                        j = I.parseUShort();
                        var et = {
                          glyphIndex: I.parseUShort(),
                          xScale: 1,
                          scale01: 0,
                          scale10: 0,
                          yScale: 1,
                          dx: 0,
                          dy: 0,
                        };
                        0 < (1 & j)
                          ? 0 < (2 & j)
                            ? ((et.dx = I.parseShort()),
                              (et.dy = I.parseShort()))
                            : (et.matchedPoints = [
                                I.parseUShort(),
                                I.parseUShort(),
                              ])
                          : 0 < (2 & j)
                          ? ((et.dx = I.parseChar()), (et.dy = I.parseChar()))
                          : (et.matchedPoints = [I.parseByte(), I.parseByte()]),
                          0 < (8 & j)
                            ? (et.xScale = et.yScale = I.parseF2Dot14())
                            : 0 < (64 & j)
                            ? ((et.xScale = I.parseF2Dot14()),
                              (et.yScale = I.parseF2Dot14()))
                            : 0 < (128 & j) &&
                              ((et.xScale = I.parseF2Dot14()),
                              (et.scale01 = I.parseF2Dot14()),
                              (et.scale10 = I.parseF2Dot14()),
                              (et.yScale = I.parseF2Dot14())),
                          f.components.push(et),
                          (ct = !!(32 & j));
                      }
                      if (256 & j) {
                        (f.instructionLength = I.parseUShort()),
                          (f.instructions = []);
                        for (var rt = 0; rt < f.instructionLength; rt += 1)
                          f.instructions.push(I.parseByte());
                      }
                    }
                  }
                  function Oo(f, b) {
                    for (var x = [], j = 0; j < f.length; j += 1) {
                      var C = f[j],
                        I = {
                          x: b.xScale * C.x + b.scale01 * C.y + b.dx,
                          y: b.scale10 * C.x + b.yScale * C.y + b.dy,
                          onCurve: C.onCurve,
                          lastPointOfContour: C.lastPointOfContour,
                        };
                      x.push(I);
                    }
                    return x;
                  }
                  function Bi(f) {
                    var b = new oe();
                    if (!f) return b;
                    for (
                      var x = (function (be) {
                          for (
                            var te = [], Ue = [], Le = 0;
                            Le < be.length;
                            Le += 1
                          ) {
                            var Oe = be[Le];
                            Ue.push(Oe),
                              Oe.lastPointOfContour && (te.push(Ue), (Ue = []));
                          }
                          return (
                            de.argument(
                              Ue.length === 0,
                              'There are still points left in the current contour.',
                            ),
                            te
                          );
                        })(f),
                        j = 0;
                      j < x.length;
                      ++j
                    ) {
                      var C = x[j],
                        I = null,
                        F = C[C.length - 1],
                        q = C[0];
                      if (F.onCurve) b.moveTo(F.x, F.y);
                      else if (q.onCurve) b.moveTo(q.x, q.y);
                      else {
                        var Y = { x: 0.5 * (F.x + q.x), y: 0.5 * (F.y + q.y) };
                        b.moveTo(Y.x, Y.y);
                      }
                      for (var se = 0; se < C.length; ++se)
                        if (
                          ((I = F),
                          (F = q),
                          (q = C[(se + 1) % C.length]),
                          F.onCurve)
                        )
                          b.lineTo(F.x, F.y);
                        else {
                          var pe = q;
                          I.onCurve || (0.5 * (F.x + I.x), 0.5 * (F.y + I.y)),
                            q.onCurve ||
                              (pe = {
                                x: 0.5 * (F.x + q.x),
                                y: 0.5 * (F.y + q.y),
                              }),
                            b.quadraticCurveTo(F.x, F.y, pe.x, pe.y);
                        }
                      b.closePath();
                    }
                    return b;
                  }
                  function Xl(f, b) {
                    if (b.isComposite)
                      for (var x = 0; x < b.components.length; x += 1) {
                        var j = b.components[x],
                          C = f.get(j.glyphIndex);
                        if ((C.getPath(), C.points)) {
                          var I = void 0;
                          if (j.matchedPoints === void 0) I = Oo(C.points, j);
                          else {
                            if (
                              j.matchedPoints[0] > b.points.length - 1 ||
                              j.matchedPoints[1] > C.points.length - 1
                            )
                              throw Error(
                                'Matched points out of range in ' + b.name,
                              );
                            var F = b.points[j.matchedPoints[0]],
                              q = C.points[j.matchedPoints[1]],
                              Y = {
                                xScale: j.xScale,
                                scale01: j.scale01,
                                scale10: j.scale10,
                                yScale: j.yScale,
                                dx: 0,
                                dy: 0,
                              };
                            (q = Oo([q], Y)[0]),
                              (Y.dx = F.x - q.x),
                              (Y.dy = F.y - q.y),
                              (I = Oo(C.points, Y));
                          }
                          b.points = b.points.concat(I);
                        }
                      }
                    return Bi(b.points);
                  }
                  ((Rs.prototype = Ps.prototype =
                    {
                      searchTag: Co,
                      binSearch: Ii,
                      getTable: function (f) {
                        var b = this.font.tables[this.tableName];
                        return (
                          !b &&
                            f &&
                            (b = this.font.tables[this.tableName] =
                              this.createDefaultTable()),
                          b
                        );
                      },
                      getScriptNames: function () {
                        var f = this.getTable();
                        return f
                          ? f.scripts.map(function (b) {
                              return b.tag;
                            })
                          : [];
                      },
                      getDefaultScriptName: function () {
                        var f = this.getTable();
                        if (f) {
                          for (var b = !1, x = 0; x < f.scripts.length; x++) {
                            var j = f.scripts[x].tag;
                            if (j === 'DFLT') return j;
                            j === 'latn' && (b = !0);
                          }
                          return b ? 'latn' : void 0;
                        }
                      },
                      getScriptTable: function (f, b) {
                        var x = this.getTable(b);
                        if (x) {
                          f = f || 'DFLT';
                          var j = x.scripts,
                            C = Co(x.scripts, f);
                          if (0 <= C) return j[C].script;
                          if (b) {
                            var I = {
                              tag: f,
                              script: {
                                defaultLangSys: {
                                  reserved: 0,
                                  reqFeatureIndex: 65535,
                                  featureIndexes: [],
                                },
                                langSysRecords: [],
                              },
                            };
                            return j.splice(-1 - C, 0, I), I.script;
                          }
                        }
                      },
                      getLangSysTable: function (f, b, x) {
                        var j = this.getScriptTable(f, x);
                        if (j) {
                          if (!b || b === 'dflt' || b === 'DFLT')
                            return j.defaultLangSys;
                          var C = Co(j.langSysRecords, b);
                          if (0 <= C) return j.langSysRecords[C].langSys;
                          if (x) {
                            var I = {
                              tag: b,
                              langSys: {
                                reserved: 0,
                                reqFeatureIndex: 65535,
                                featureIndexes: [],
                              },
                            };
                            return (
                              j.langSysRecords.splice(-1 - C, 0, I), I.langSys
                            );
                          }
                        }
                      },
                      getFeatureTable: function (f, b, x, j) {
                        var C = this.getLangSysTable(f, b, j);
                        if (C) {
                          for (
                            var I,
                              F = C.featureIndexes,
                              q = this.font.tables[this.tableName].features,
                              Y = 0;
                            Y < F.length;
                            Y++
                          )
                            if ((I = q[F[Y]]).tag === x) return I.feature;
                          if (j) {
                            var se = q.length;
                            return (
                              de.assert(
                                se === 0 || x >= q[se - 1].tag,
                                'Features must be added in alphabetical order.',
                              ),
                              (I = {
                                tag: x,
                                feature: { params: 0, lookupListIndexes: [] },
                              }),
                              q.push(I),
                              F.push(se),
                              I.feature
                            );
                          }
                        }
                      },
                      getLookupTables: function (f, b, x, j, C) {
                        var I = this.getFeatureTable(f, b, x, C),
                          F = [];
                        if (I) {
                          for (
                            var q,
                              Y = I.lookupListIndexes,
                              se = this.font.tables[this.tableName].lookups,
                              pe = 0;
                            pe < Y.length;
                            pe++
                          )
                            (q = se[Y[pe]]).lookupType === j && F.push(q);
                          if (F.length === 0 && C) {
                            q = {
                              lookupType: j,
                              lookupFlag: 0,
                              subtables: [],
                              markFilteringSet: void 0,
                            };
                            var be = se.length;
                            return se.push(q), Y.push(be), [q];
                          }
                        }
                        return F;
                      },
                      getGlyphClass: function (f, b) {
                        switch (f.format) {
                          case 1:
                            return f.startGlyph <= b &&
                              b < f.startGlyph + f.classes.length
                              ? f.classes[b - f.startGlyph]
                              : 0;
                          case 2:
                            var x = Li(f.ranges, b);
                            return x ? x.classId : 0;
                        }
                      },
                      getCoverageIndex: function (f, b) {
                        switch (f.format) {
                          case 1:
                            var x = Ii(f.glyphs, b);
                            return 0 <= x ? x : -1;
                          case 2:
                            var j = Li(f.ranges, b);
                            return j ? j.index + b - j.start : -1;
                        }
                      },
                      expandCoverage: function (f) {
                        if (f.format === 1) return f.glyphs;
                        for (var b = [], x = f.ranges, j = 0; j < x.length; j++)
                          for (
                            var C = x[j], I = C.start, F = C.end, q = I;
                            q <= F;
                            q++
                          )
                            b.push(q);
                        return b;
                      },
                    }).init = function () {
                    var f = this.getDefaultScriptName();
                    this.defaultKerningTables = this.getKerningTables(f);
                  }),
                    (Rs.prototype.getKerningValue = function (f, b, x) {
                      for (var j = 0; j < f.length; j++)
                        for (var C = f[j].subtables, I = 0; I < C.length; I++) {
                          var F = C[I],
                            q = this.getCoverageIndex(F.coverage, b);
                          if (!(q < 0))
                            switch (F.posFormat) {
                              case 1:
                                for (
                                  var Y = F.pairSets[q], se = 0;
                                  se < Y.length;
                                  se++
                                ) {
                                  var pe = Y[se];
                                  if (pe.secondGlyph === x)
                                    return (
                                      (pe.value1 && pe.value1.xAdvance) || 0
                                    );
                                }
                                break;
                              case 2:
                                var be = this.getGlyphClass(F.classDef1, b),
                                  te = this.getGlyphClass(F.classDef2, x),
                                  Ue = F.classRecords[be][te];
                                return (Ue.value1 && Ue.value1.xAdvance) || 0;
                            }
                        }
                      return 0;
                    }),
                    (Rs.prototype.getKerningTables = function (f, b) {
                      if (this.font.tables.gpos)
                        return this.getLookupTables(f, b, 'kern', 2);
                    }),
                    ((jr.prototype = Ps.prototype).createDefaultTable =
                      function () {
                        return {
                          version: 1,
                          scripts: [
                            {
                              tag: 'DFLT',
                              script: {
                                defaultLangSys: {
                                  reserved: 0,
                                  reqFeatureIndex: 65535,
                                  featureIndexes: [],
                                },
                                langSysRecords: [],
                              },
                            },
                          ],
                          features: [],
                          lookups: [],
                        };
                      }),
                    (jr.prototype.getSingle = function (f, b, x) {
                      for (
                        var j = [], C = this.getLookupTables(b, x, f, 1), I = 0;
                        I < C.length;
                        I++
                      )
                        for (var F = C[I].subtables, q = 0; q < F.length; q++) {
                          var Y = F[q],
                            se = this.expandCoverage(Y.coverage),
                            pe = void 0;
                          if (Y.substFormat === 1) {
                            var be = Y.deltaGlyphId;
                            for (pe = 0; pe < se.length; pe++) {
                              var te = se[pe];
                              j.push({ sub: te, by: te + be });
                            }
                          } else {
                            var Ue = Y.substitute;
                            for (pe = 0; pe < se.length; pe++)
                              j.push({ sub: se[pe], by: Ue[pe] });
                          }
                        }
                      return j;
                    }),
                    (jr.prototype.getAlternates = function (f, b, x) {
                      for (
                        var j = [], C = this.getLookupTables(b, x, f, 3), I = 0;
                        I < C.length;
                        I++
                      )
                        for (var F = C[I].subtables, q = 0; q < F.length; q++)
                          for (
                            var Y = F[q],
                              se = this.expandCoverage(Y.coverage),
                              pe = Y.alternateSets,
                              be = 0;
                            be < se.length;
                            be++
                          )
                            j.push({ sub: se[be], by: pe[be] });
                      return j;
                    }),
                    (jr.prototype.getLigatures = function (f, b, x) {
                      for (
                        var j = [], C = this.getLookupTables(b, x, f, 4), I = 0;
                        I < C.length;
                        I++
                      )
                        for (var F = C[I].subtables, q = 0; q < F.length; q++)
                          for (
                            var Y = F[q],
                              se = this.expandCoverage(Y.coverage),
                              pe = Y.ligatureSets,
                              be = 0;
                            be < se.length;
                            be++
                          )
                            for (
                              var te = se[be], Ue = pe[be], Le = 0;
                              Le < Ue.length;
                              Le++
                            ) {
                              var Oe = Ue[Le];
                              j.push({
                                sub: [te].concat(Oe.components),
                                by: Oe.ligGlyph,
                              });
                            }
                      return j;
                    }),
                    (jr.prototype.addSingle = function (f, b, x, j) {
                      var C = Ni(this.getLookupTables(x, j, f, 1, !0)[0], 2, {
                        substFormat: 2,
                        coverage: { format: 1, glyphs: [] },
                        substitute: [],
                      });
                      de.assert(
                        C.coverage.format === 1,
                        'Ligature: unable to modify coverage table format ' +
                          C.coverage.format,
                      );
                      var I = b.sub,
                        F = this.binSearch(C.coverage.glyphs, I);
                      F < 0 &&
                        ((F = -1 - F),
                        C.coverage.glyphs.splice(F, 0, I),
                        C.substitute.splice(F, 0, 0)),
                        (C.substitute[F] = b.by);
                    }),
                    (jr.prototype.addAlternate = function (f, b, x, j) {
                      var C = Ni(this.getLookupTables(x, j, f, 3, !0)[0], 1, {
                        substFormat: 1,
                        coverage: { format: 1, glyphs: [] },
                        alternateSets: [],
                      });
                      de.assert(
                        C.coverage.format === 1,
                        'Ligature: unable to modify coverage table format ' +
                          C.coverage.format,
                      );
                      var I = b.sub,
                        F = this.binSearch(C.coverage.glyphs, I);
                      F < 0 &&
                        ((F = -1 - F),
                        C.coverage.glyphs.splice(F, 0, I),
                        C.alternateSets.splice(F, 0, 0)),
                        (C.alternateSets[F] = b.by);
                    }),
                    (jr.prototype.addLigature = function (f, b, x, j) {
                      var C = this.getLookupTables(x, j, f, 4, !0)[0],
                        I = C.subtables[0];
                      I ||
                        ((I = {
                          substFormat: 1,
                          coverage: { format: 1, glyphs: [] },
                          ligatureSets: [],
                        }),
                        (C.subtables[0] = I)),
                        de.assert(
                          I.coverage.format === 1,
                          'Ligature: unable to modify coverage table format ' +
                            I.coverage.format,
                        );
                      var F = b.sub[0],
                        q = b.sub.slice(1),
                        Y = { ligGlyph: b.by, components: q },
                        se = this.binSearch(I.coverage.glyphs, F);
                      if (0 <= se) {
                        for (
                          var pe = I.ligatureSets[se], be = 0;
                          be < pe.length;
                          be++
                        )
                          if (zl(pe[be].components, q)) return;
                        pe.push(Y);
                      } else
                        (se = -1 - se),
                          I.coverage.glyphs.splice(se, 0, F),
                          I.ligatureSets.splice(se, 0, [Y]);
                    }),
                    (jr.prototype.getFeature = function (f, b, x) {
                      if (/ss\d\d/.test(f)) return this.getSingle(f, b, x);
                      switch (f) {
                        case 'aalt':
                        case 'salt':
                          return this.getSingle(f, b, x).concat(
                            this.getAlternates(f, b, x),
                          );
                        case 'dlig':
                        case 'liga':
                        case 'rlig':
                          return this.getLigatures(f, b, x);
                      }
                    }),
                    (jr.prototype.add = function (f, b, x, j) {
                      if (/ss\d\d/.test(f)) return this.addSingle(f, b, x, j);
                      switch (f) {
                        case 'aalt':
                        case 'salt':
                          return typeof b.by == 'number'
                            ? this.addSingle(f, b, x, j)
                            : this.addAlternate(f, b, x, j);
                        case 'dlig':
                        case 'liga':
                        case 'rlig':
                          return this.addLigature(f, b, x, j);
                      }
                    });
                  var Gi,
                    cn,
                    Vi,
                    Ao,
                    Wi = {
                      getPath: Bi,
                      parse: function (f, b, x, j) {
                        for (
                          var C = new it.GlyphSet(j), I = 0;
                          I < x.length - 1;
                          I += 1
                        ) {
                          var F = x[I];
                          F !== x[I + 1]
                            ? C.push(
                                I,
                                it.ttfGlyphLoader(j, I, Hl, f, b + F, Xl),
                              )
                            : C.push(I, it.glyphLoader(j, I));
                        }
                        return C;
                      },
                    };
                  function qi(f) {
                    (this.font = f),
                      (this.getCommands = function (b) {
                        return Wi.getPath(b).commands;
                      }),
                      (this._fpgmState = this._prepState = void 0),
                      (this._errorState = 0);
                  }
                  function Yl(f) {
                    return f;
                  }
                  function zi(f) {
                    return Math.sign(f) * Math.round(Math.abs(f));
                  }
                  function Zl(f) {
                    return (Math.sign(f) * Math.round(Math.abs(2 * f))) / 2;
                  }
                  function $l(f) {
                    return Math.sign(f) * (Math.round(Math.abs(f) + 0.5) - 0.5);
                  }
                  function Ql(f) {
                    return Math.sign(f) * Math.ceil(Math.abs(f));
                  }
                  function Jl(f) {
                    return Math.sign(f) * Math.floor(Math.abs(f));
                  }
                  function Hi(f) {
                    var b = this.srPeriod,
                      x = this.srPhase,
                      j = 1;
                    return (
                      f < 0 && ((f = -f), (j = -1)),
                      (f += this.srThreshold - x),
                      (f = Math.trunc(f / b) * b),
                      (f += x) < 0 ? x * j : f * j
                    );
                  }
                  var Mr = {
                      x: 1,
                      y: 0,
                      axis: 'x',
                      distance: function (f, b, x, j) {
                        return (x ? f.xo : f.x) - (j ? b.xo : b.x);
                      },
                      interpolate: function (f, b, x, j) {
                        var C, I, F, q, Y, se, pe;
                        if (!j || j === this)
                          return (
                            (C = f.xo - b.xo),
                            (I = f.xo - x.xo),
                            (Y = b.x - b.xo),
                            (se = x.x - x.xo),
                            (pe = (F = Math.abs(C)) + (q = Math.abs(I))) === 0
                              ? void (f.x = f.xo + (Y + se) / 2)
                              : void (f.x = f.xo + (Y * q + se * F) / pe)
                          );
                        (C = j.distance(f, b, !0, !0)),
                          (I = j.distance(f, x, !0, !0)),
                          (Y = j.distance(b, b, !1, !0)),
                          (se = j.distance(x, x, !1, !0)),
                          (pe = (F = Math.abs(C)) + (q = Math.abs(I))) !== 0
                            ? Mr.setRelative(f, f, (Y * q + se * F) / pe, j, !0)
                            : Mr.setRelative(f, f, (Y + se) / 2, j, !0);
                      },
                      normalSlope: Number.NEGATIVE_INFINITY,
                      setRelative: function (f, b, x, j, C) {
                        if (j && j !== this) {
                          var I = C ? b.xo : b.x,
                            F = C ? b.yo : b.y,
                            q = I + x * j.x,
                            Y = F + x * j.y;
                          f.x = q + (f.y - Y) / j.normalSlope;
                        } else f.x = (C ? b.xo : b.x) + x;
                      },
                      slope: 0,
                      touch: function (f) {
                        f.xTouched = !0;
                      },
                      touched: function (f) {
                        return f.xTouched;
                      },
                      untouch: function (f) {
                        f.xTouched = !1;
                      },
                    },
                    Ir = {
                      x: 0,
                      y: 1,
                      axis: 'y',
                      distance: function (f, b, x, j) {
                        return (x ? f.yo : f.y) - (j ? b.yo : b.y);
                      },
                      interpolate: function (f, b, x, j) {
                        var C, I, F, q, Y, se, pe;
                        if (!j || j === this)
                          return (
                            (C = f.yo - b.yo),
                            (I = f.yo - x.yo),
                            (Y = b.y - b.yo),
                            (se = x.y - x.yo),
                            (pe = (F = Math.abs(C)) + (q = Math.abs(I))) === 0
                              ? void (f.y = f.yo + (Y + se) / 2)
                              : void (f.y = f.yo + (Y * q + se * F) / pe)
                          );
                        (C = j.distance(f, b, !0, !0)),
                          (I = j.distance(f, x, !0, !0)),
                          (Y = j.distance(b, b, !1, !0)),
                          (se = j.distance(x, x, !1, !0)),
                          (pe = (F = Math.abs(C)) + (q = Math.abs(I))) !== 0
                            ? Ir.setRelative(f, f, (Y * q + se * F) / pe, j, !0)
                            : Ir.setRelative(f, f, (Y + se) / 2, j, !0);
                      },
                      normalSlope: 0,
                      setRelative: function (f, b, x, j, C) {
                        if (j && j !== this) {
                          var I = C ? b.xo : b.x,
                            F = C ? b.yo : b.y,
                            q = I + x * j.x,
                            Y = F + x * j.y;
                          f.y = Y + j.normalSlope * (f.x - q);
                        } else f.y = (C ? b.yo : b.y) + x;
                      },
                      slope: Number.POSITIVE_INFINITY,
                      touch: function (f) {
                        f.yTouched = !0;
                      },
                      touched: function (f) {
                        return f.yTouched;
                      },
                      untouch: function (f) {
                        f.yTouched = !1;
                      },
                    };
                  function ts(f, b) {
                    (this.x = f),
                      (this.y = b),
                      (this.axis = void 0),
                      (this.slope = b / f),
                      (this.normalSlope = -f / b),
                      Object.freeze(this);
                  }
                  function rs(f, b) {
                    var x = Math.sqrt(f * f + b * b);
                    return (
                      (b /= x),
                      (f /= x) === 1 && b === 0
                        ? Mr
                        : f === 0 && b === 1
                        ? Ir
                        : new ts(f, b)
                    );
                  }
                  function Lr(f, b, x, j) {
                    (this.x = this.xo = Math.round(64 * f) / 64),
                      (this.y = this.yo = Math.round(64 * b) / 64),
                      (this.lastPointOfContour = x),
                      (this.onCurve = j),
                      (this.prevPointOnContour = void 0),
                      (this.nextPointOnContour = void 0),
                      (this.xTouched = !1),
                      (this.yTouched = !1),
                      Object.preventExtensions(this);
                  }
                  Object.freeze(Mr),
                    Object.freeze(Ir),
                    (ts.prototype.distance = function (f, b, x, j) {
                      return (
                        this.x * Mr.distance(f, b, x, j) +
                        this.y * Ir.distance(f, b, x, j)
                      );
                    }),
                    (ts.prototype.interpolate = function (f, b, x, j) {
                      var C, I, F, q, Y, se, pe;
                      (F = j.distance(f, b, !0, !0)),
                        (q = j.distance(f, x, !0, !0)),
                        (C = j.distance(b, b, !1, !0)),
                        (I = j.distance(x, x, !1, !0)),
                        (pe = (Y = Math.abs(F)) + (se = Math.abs(q))) !== 0
                          ? this.setRelative(f, f, (C * se + I * Y) / pe, j, !0)
                          : this.setRelative(f, f, (C + I) / 2, j, !0);
                    }),
                    (ts.prototype.setRelative = function (f, b, x, j, C) {
                      j = j || this;
                      var I = C ? b.xo : b.x,
                        F = C ? b.yo : b.y,
                        q = I + x * j.x,
                        Y = F + x * j.y,
                        se = j.normalSlope,
                        pe = this.slope,
                        be = f.x,
                        te = f.y;
                      (f.x = (pe * be - se * q + Y - te) / (pe - se)),
                        (f.y = pe * (f.x - be) + te);
                    }),
                    (ts.prototype.touch = function (f) {
                      (f.xTouched = !0), (f.yTouched = !0);
                    }),
                    (Lr.prototype.nextTouched = function (f) {
                      for (
                        var b = this.nextPointOnContour;
                        !f.touched(b) && b !== this;

                      )
                        b = b.nextPointOnContour;
                      return b;
                    }),
                    (Lr.prototype.prevTouched = function (f) {
                      for (
                        var b = this.prevPointOnContour;
                        !f.touched(b) && b !== this;

                      )
                        b = b.prevPointOnContour;
                      return b;
                    });
                  var ns = Object.freeze(new Lr(0, 0)),
                    Kl = {
                      cvCutIn: 17 / 16,
                      deltaBase: 9,
                      deltaShift: 0.125,
                      loop: 1,
                      minDis: 1,
                      autoFlip: !0,
                    };
                  function Hr(f, b) {
                    switch (
                      ((this.env = f), (this.stack = []), (this.prog = b), f)
                    ) {
                      case 'glyf':
                        (this.zp0 = this.zp1 = this.zp2 = 1),
                          (this.rp0 = this.rp1 = this.rp2 = 0);
                      case 'prep':
                        (this.fv = this.pv = this.dpv = Mr), (this.round = zi);
                    }
                  }
                  function Ds(f) {
                    for (
                      var b = (f.tZone = new Array(f.gZone.length)), x = 0;
                      x < b.length;
                      x++
                    )
                      b[x] = new Lr(0, 0);
                  }
                  function Xi(f, b) {
                    var x,
                      j = f.prog,
                      C = f.ip,
                      I = 1;
                    do
                      if ((x = j[++C]) === 88) I++;
                      else if (x === 89) I--;
                      else if (x === 64) C += j[C + 1] + 1;
                      else if (x === 65) C += 2 * j[C + 1] + 1;
                      else if (176 <= x && x <= 183) C += x - 176 + 1;
                      else if (184 <= x && x <= 191) C += 2 * (x - 184 + 1);
                      else if (b && I === 1 && x === 27) break;
                    while (0 < I);
                    f.ip = C;
                  }
                  function Yi(f, b) {
                    l.DEBUG && console.log(b.step, 'SVTCA[' + f.axis + ']'),
                      (b.fv = b.pv = b.dpv = f);
                  }
                  function Zi(f, b) {
                    l.DEBUG && console.log(b.step, 'SPVTCA[' + f.axis + ']'),
                      (b.pv = b.dpv = f);
                  }
                  function $i(f, b) {
                    l.DEBUG && console.log(b.step, 'SFVTCA[' + f.axis + ']'),
                      (b.fv = f);
                  }
                  function Qi(f, b) {
                    var x,
                      j,
                      C = b.stack,
                      I = C.pop(),
                      F = C.pop(),
                      q = b.z2[I],
                      Y = b.z1[F];
                    l.DEBUG && console.log('SPVTL[' + f + ']', I, F),
                      (j = f
                        ? ((x = q.y - Y.y), Y.x - q.x)
                        : ((x = Y.x - q.x), Y.y - q.y)),
                      (b.pv = b.dpv = rs(x, j));
                  }
                  function Ji(f, b) {
                    var x,
                      j,
                      C = b.stack,
                      I = C.pop(),
                      F = C.pop(),
                      q = b.z2[I],
                      Y = b.z1[F];
                    l.DEBUG && console.log('SFVTL[' + f + ']', I, F),
                      (j = f
                        ? ((x = q.y - Y.y), Y.x - q.x)
                        : ((x = Y.x - q.x), Y.y - q.y)),
                      (b.fv = rs(x, j));
                  }
                  function ko(f) {
                    l.DEBUG && console.log(f.step, 'POP[]'), f.stack.pop();
                  }
                  function Ki(f, b) {
                    var x = b.stack.pop(),
                      j = b.z0[x],
                      C = b.fv,
                      I = b.pv;
                    l.DEBUG && console.log(b.step, 'MDAP[' + f + ']', x);
                    var F = I.distance(j, ns);
                    f && (F = b.round(F)),
                      C.setRelative(j, ns, F, I),
                      C.touch(j),
                      (b.rp0 = b.rp1 = x);
                  }
                  function ea(f, b) {
                    var x,
                      j,
                      C,
                      I = b.z2,
                      F = I.length - 2;
                    l.DEBUG && console.log(b.step, 'IUP[' + f.axis + ']');
                    for (var q = 0; q < F; q++)
                      (x = I[q]),
                        f.touched(x) ||
                          ((j = x.prevTouched(f)) !== x &&
                            (j === (C = x.nextTouched(f)) &&
                              f.setRelative(
                                x,
                                x,
                                f.distance(j, j, !1, !0),
                                f,
                                !0,
                              ),
                            f.interpolate(x, j, C, f)));
                  }
                  function ta(f, b) {
                    for (
                      var x = b.stack,
                        j = f ? b.rp1 : b.rp2,
                        C = (f ? b.z0 : b.z1)[j],
                        I = b.fv,
                        F = b.pv,
                        q = b.loop,
                        Y = b.z2;
                      q--;

                    ) {
                      var se = x.pop(),
                        pe = Y[se],
                        be = F.distance(C, C, !1, !0);
                      I.setRelative(pe, pe, be, F),
                        I.touch(pe),
                        l.DEBUG &&
                          console.log(
                            b.step,
                            (1 < b.loop ? 'loop ' + (b.loop - q) + ': ' : '') +
                              'SHP[' +
                              (f ? 'rp1' : 'rp2') +
                              ']',
                            se,
                          );
                    }
                    b.loop = 1;
                  }
                  function ra(f, b) {
                    var x = b.stack,
                      j = f ? b.rp1 : b.rp2,
                      C = (f ? b.z0 : b.z1)[j],
                      I = b.fv,
                      F = b.pv,
                      q = x.pop(),
                      Y = b.z2[b.contours[q]],
                      se = Y;
                    l.DEBUG && console.log(b.step, 'SHC[' + f + ']', q);
                    for (
                      var pe = F.distance(C, C, !1, !0);
                      se !== C && I.setRelative(se, se, pe, F),
                        (se = se.nextPointOnContour) !== Y;

                    );
                  }
                  function na(f, b) {
                    var x,
                      j,
                      C = b.stack,
                      I = f ? b.rp1 : b.rp2,
                      F = (f ? b.z0 : b.z1)[I],
                      q = b.fv,
                      Y = b.pv,
                      se = C.pop();
                    switch (
                      (l.DEBUG && console.log(b.step, 'SHZ[' + f + ']', se), se)
                    ) {
                      case 0:
                        x = b.tZone;
                        break;
                      case 1:
                        x = b.gZone;
                        break;
                      default:
                        throw new Error('Invalid zone');
                    }
                    for (
                      var pe = Y.distance(F, F, !1, !0),
                        be = x.length - 2,
                        te = 0;
                      te < be;
                      te++
                    )
                      (j = x[te]), q.setRelative(j, j, pe, Y);
                  }
                  function sa(f, b) {
                    var x = b.stack,
                      j = x.pop() / 64,
                      C = x.pop(),
                      I = b.z1[C],
                      F = b.z0[b.rp0],
                      q = b.fv,
                      Y = b.pv;
                    q.setRelative(I, F, j, Y),
                      q.touch(I),
                      l.DEBUG && console.log(b.step, 'MSIRP[' + f + ']', j, C),
                      (b.rp1 = b.rp0),
                      (b.rp2 = C),
                      f && (b.rp0 = C);
                  }
                  function oa(f, b) {
                    var x = b.stack,
                      j = x.pop(),
                      C = x.pop(),
                      I = b.z0[C],
                      F = b.fv,
                      q = b.pv,
                      Y = b.cvt[j];
                    l.DEBUG &&
                      console.log(b.step, 'MIAP[' + f + ']', j, '(', Y, ')', C);
                    var se = q.distance(I, ns);
                    f &&
                      (Math.abs(se - Y) < b.cvCutIn && (se = Y),
                      (se = b.round(se))),
                      F.setRelative(I, ns, se, q),
                      b.zp0 === 0 && ((I.xo = I.x), (I.yo = I.y)),
                      F.touch(I),
                      (b.rp0 = b.rp1 = C);
                  }
                  function ia(f, b) {
                    var x = b.stack,
                      j = x.pop(),
                      C = b.z2[j];
                    l.DEBUG && console.log(b.step, 'GC[' + f + ']', j),
                      x.push(64 * b.dpv.distance(C, ns, f, !1));
                  }
                  function aa(f, b) {
                    var x = b.stack,
                      j = x.pop(),
                      C = x.pop(),
                      I = b.z1[j],
                      F = b.z0[C],
                      q = b.dpv.distance(F, I, f, f);
                    l.DEBUG &&
                      console.log(b.step, 'MD[' + f + ']', j, C, '->', q),
                      b.stack.push(Math.round(64 * q));
                  }
                  function Po(f, b) {
                    var x = b.stack,
                      j = x.pop(),
                      C = b.fv,
                      I = b.pv,
                      F = b.ppem,
                      q = b.deltaBase + 16 * (f - 1),
                      Y = b.deltaShift,
                      se = b.z0;
                    l.DEBUG && console.log(b.step, 'DELTAP[' + f + ']', j, x);
                    for (var pe = 0; pe < j; pe++) {
                      var be = x.pop(),
                        te = x.pop();
                      if (q + ((240 & te) >> 4) === F) {
                        var Ue = (15 & te) - 8;
                        0 <= Ue && Ue++,
                          l.DEBUG &&
                            console.log(b.step, 'DELTAPFIX', be, 'by', Ue * Y);
                        var Le = se[be];
                        C.setRelative(Le, Le, Ue * Y, I);
                      }
                    }
                  }
                  function Is(f, b) {
                    var x = b.stack,
                      j = x.pop();
                    l.DEBUG && console.log(b.step, 'ROUND[]'),
                      x.push(64 * b.round(j / 64));
                  }
                  function Ro(f, b) {
                    var x = b.stack,
                      j = x.pop(),
                      C = b.ppem,
                      I = b.deltaBase + 16 * (f - 1),
                      F = b.deltaShift;
                    l.DEBUG && console.log(b.step, 'DELTAC[' + f + ']', j, x);
                    for (var q = 0; q < j; q++) {
                      var Y = x.pop(),
                        se = x.pop();
                      if (I + ((240 & se) >> 4) === C) {
                        var pe = (15 & se) - 8;
                        0 <= pe && pe++;
                        var be = pe * F;
                        l.DEBUG &&
                          console.log(b.step, 'DELTACFIX', Y, 'by', be),
                          (b.cvt[Y] += be);
                      }
                    }
                  }
                  function la(f, b) {
                    var x,
                      j,
                      C = b.stack,
                      I = C.pop(),
                      F = C.pop(),
                      q = b.z2[I],
                      Y = b.z1[F];
                    l.DEBUG && console.log(b.step, 'SDPVTL[' + f + ']', I, F),
                      (j = f
                        ? ((x = q.y - Y.y), Y.x - q.x)
                        : ((x = Y.x - q.x), Y.y - q.y)),
                      (b.dpv = rs(x, j));
                  }
                  function Xr(f, b) {
                    var x = b.stack,
                      j = b.prog,
                      C = b.ip;
                    l.DEBUG && console.log(b.step, 'PUSHB[' + f + ']');
                    for (var I = 0; I < f; I++) x.push(j[++C]);
                    b.ip = C;
                  }
                  function Yr(f, b) {
                    var x = b.ip,
                      j = b.prog,
                      C = b.stack;
                    l.DEBUG && console.log(b.ip, 'PUSHW[' + f + ']');
                    for (var I = 0; I < f; I++) {
                      var F = (j[++x] << 8) | j[++x];
                      32768 & F && (F = -(1 + (65535 ^ F))), C.push(F);
                    }
                    b.ip = x;
                  }
                  function Je(f, b, x, j, C, I) {
                    var F,
                      q,
                      Y,
                      se,
                      pe = I.stack,
                      be = f && pe.pop(),
                      te = pe.pop(),
                      Ue = I.rp0,
                      Le = I.z0[Ue],
                      Oe = I.z1[te],
                      Me = I.minDis,
                      Ce = I.fv,
                      $e = I.dpv;
                    (Y = 0 <= (q = F = $e.distance(Oe, Le, !0, !0)) ? 1 : -1),
                      (q = Math.abs(q)),
                      f &&
                        ((se = I.cvt[be]),
                        j && Math.abs(q - se) < I.cvCutIn && (q = se)),
                      x && q < Me && (q = Me),
                      j && (q = I.round(q)),
                      Ce.setRelative(Oe, Le, Y * q, $e),
                      Ce.touch(Oe),
                      l.DEBUG &&
                        console.log(
                          I.step,
                          (f ? 'MIRP[' : 'MDRP[') +
                            (b ? 'M' : 'm') +
                            (x ? '>' : '_') +
                            (j ? 'R' : '_') +
                            (C === 0
                              ? 'Gr'
                              : C === 1
                              ? 'Bl'
                              : C === 2
                              ? 'Wh'
                              : '') +
                            ']',
                          f ? be + '(' + I.cvt[be] + ',' + se + ')' : '',
                          te,
                          '(d =',
                          F,
                          '->',
                          Y * q,
                          ')',
                        ),
                      (I.rp1 = I.rp0),
                      (I.rp2 = te),
                      b && (I.rp0 = te);
                  }
                  (qi.prototype.exec = function (f, b) {
                    if (typeof b != 'number')
                      throw new Error('Point size is not a number!');
                    if (!(2 < this._errorState)) {
                      var x = this.font,
                        j = this._prepState;
                      if (!j || j.ppem !== b) {
                        var C = this._fpgmState;
                        if (!C) {
                          (Hr.prototype = Kl),
                            ((C = this._fpgmState =
                              new Hr('fpgm', x.tables.fpgm)).funcs = []),
                            (C.font = x),
                            l.DEBUG &&
                              (console.log('---EXEC FPGM---'), (C.step = -1));
                          try {
                            cn(C);
                          } catch (se) {
                            return (
                              console.log('Hinting error in FPGM:' + se),
                              void (this._errorState = 3)
                            );
                          }
                        }
                        (Hr.prototype = C),
                          ((j = this._prepState =
                            new Hr('prep', x.tables.prep)).ppem = b);
                        var I = x.tables.cvt;
                        if (I)
                          for (
                            var F = (j.cvt = new Array(I.length)),
                              q = b / x.unitsPerEm,
                              Y = 0;
                            Y < I.length;
                            Y++
                          )
                            F[Y] = I[Y] * q;
                        else j.cvt = [];
                        l.DEBUG &&
                          (console.log('---EXEC PREP---'), (j.step = -1));
                        try {
                          cn(j);
                        } catch (se) {
                          this._errorState < 2 &&
                            console.log('Hinting error in PREP:' + se),
                            (this._errorState = 2);
                        }
                      }
                      if (!(1 < this._errorState))
                        try {
                          return Vi(f, j);
                        } catch (se) {
                          return (
                            this._errorState < 1 &&
                              (console.log('Hinting error:' + se),
                              console.log(
                                'Note: further hinting errors are silenced',
                              )),
                            void (this._errorState = 1)
                          );
                        }
                    }
                  }),
                    (Vi = function (f, b) {
                      var x,
                        j,
                        C,
                        I = b.ppem / b.font.unitsPerEm,
                        F = I,
                        q = f.components;
                      if (((Hr.prototype = b), q)) {
                        var Y = b.font;
                        (j = []), (x = []);
                        for (var se = 0; se < q.length; se++) {
                          var pe = q[se],
                            be = Y.glyphs.get(pe.glyphIndex);
                          (C = new Hr('glyf', be.instructions)),
                            l.DEBUG &&
                              (console.log('---EXEC COMP ' + se + '---'),
                              (C.step = -1)),
                            Ao(be, C, I, F);
                          for (
                            var te = Math.round(pe.dx * I),
                              Ue = Math.round(pe.dy * F),
                              Le = C.gZone,
                              Oe = C.contours,
                              Me = 0;
                            Me < Le.length;
                            Me++
                          ) {
                            var Ce = Le[Me];
                            (Ce.xTouched = Ce.yTouched = !1),
                              (Ce.xo = Ce.x = Ce.x + te),
                              (Ce.yo = Ce.y = Ce.y + Ue);
                          }
                          var $e = j.length;
                          j.push.apply(j, Le);
                          for (var Ze = 0; Ze < Oe.length; Ze++)
                            x.push(Oe[Ze] + $e);
                        }
                        f.instructions &&
                          !C.inhibitGridFit &&
                          (((C = new Hr('glyf', f.instructions)).gZone =
                            C.z0 =
                            C.z1 =
                            C.z2 =
                              j),
                          (C.contours = x),
                          j.push(
                            new Lr(0, 0),
                            new Lr(Math.round(f.advanceWidth * I), 0),
                          ),
                          l.DEBUG &&
                            (console.log('---EXEC COMPOSITE---'),
                            (C.step = -1)),
                          cn(C),
                          (j.length -= 2));
                      } else
                        (C = new Hr('glyf', f.instructions)),
                          l.DEBUG &&
                            (console.log('---EXEC GLYPH---'), (C.step = -1)),
                          Ao(f, C, I, F),
                          (j = C.gZone);
                      return j;
                    }),
                    (Ao = function (f, b, x, j) {
                      for (
                        var C,
                          I,
                          F,
                          q = f.points || [],
                          Y = q.length,
                          se = (b.gZone = b.z0 = b.z1 = b.z2 = []),
                          pe = (b.contours = []),
                          be = 0;
                        be < Y;
                        be++
                      )
                        (C = q[be]),
                          (se[be] = new Lr(
                            C.x * x,
                            C.y * j,
                            C.lastPointOfContour,
                            C.onCurve,
                          ));
                      for (var te = 0; te < Y; te++)
                        (C = se[te]),
                          I || ((I = C), pe.push(te)),
                          C.lastPointOfContour
                            ? (((C.nextPointOnContour = I).prevPointOnContour =
                                C),
                              (I = void 0))
                            : ((F = se[te + 1]),
                              ((C.nextPointOnContour = F).prevPointOnContour =
                                C));
                      if (!b.inhibitGridFit) {
                        if (l.DEBUG) {
                          console.log('PROCESSING GLYPH', b.stack);
                          for (var Ue = 0; Ue < Y; Ue++)
                            console.log(Ue, se[Ue].x, se[Ue].y);
                        }
                        if (
                          (se.push(
                            new Lr(0, 0),
                            new Lr(Math.round(f.advanceWidth * x), 0),
                          ),
                          cn(b),
                          (se.length -= 2),
                          l.DEBUG)
                        ) {
                          console.log('FINISHED GLYPH', b.stack);
                          for (var Le = 0; Le < Y; Le++)
                            console.log(Le, se[Le].x, se[Le].y);
                        }
                      }
                    }),
                    (cn = function (f) {
                      var b = f.prog;
                      if (b) {
                        var x,
                          j = b.length;
                        for (f.ip = 0; f.ip < j; f.ip++) {
                          if ((l.DEBUG && f.step++, !(x = Gi[b[f.ip]])))
                            throw new Error(
                              'unknown instruction: 0x' +
                                Number(b[f.ip]).toString(16),
                            );
                          x(f);
                        }
                      }
                    }),
                    (Gi = [
                      Yi.bind(void 0, Ir),
                      Yi.bind(void 0, Mr),
                      Zi.bind(void 0, Ir),
                      Zi.bind(void 0, Mr),
                      $i.bind(void 0, Ir),
                      $i.bind(void 0, Mr),
                      Qi.bind(void 0, 0),
                      Qi.bind(void 0, 1),
                      Ji.bind(void 0, 0),
                      Ji.bind(void 0, 1),
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'SPVFS[]', x, j),
                          (f.pv = f.dpv = rs(j, x));
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'SPVFS[]', x, j),
                          (f.fv = rs(j, x));
                      },
                      function (f) {
                        var b = f.stack,
                          x = f.pv;
                        l.DEBUG && console.log(f.step, 'GPV[]'),
                          b.push(16384 * x.x),
                          b.push(16384 * x.y);
                      },
                      function (f) {
                        var b = f.stack,
                          x = f.fv;
                        l.DEBUG && console.log(f.step, 'GFV[]'),
                          b.push(16384 * x.x),
                          b.push(16384 * x.y);
                      },
                      function (f) {
                        (f.fv = f.pv),
                          l.DEBUG && console.log(f.step, 'SFVTPV[]');
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop(),
                          C = b.pop(),
                          I = b.pop(),
                          F = b.pop(),
                          q = f.z0,
                          Y = f.z1,
                          se = q[x],
                          pe = q[j],
                          be = Y[C],
                          te = Y[I],
                          Ue = f.z2[F];
                        l.DEBUG && console.log('ISECT[], ', x, j, C, I, F);
                        var Le = se.x,
                          Oe = se.y,
                          Me = pe.x,
                          Ce = pe.y,
                          $e = be.x,
                          Ze = be.y,
                          ct = te.x,
                          et = te.y,
                          rt = (Le - Me) * (Ze - et) - (Oe - Ce) * ($e - ct),
                          Nt = Le * Ce - Oe * Me,
                          pt = $e * et - Ze * ct;
                        (Ue.x = (Nt * ($e - ct) - pt * (Le - Me)) / rt),
                          (Ue.y = (Nt * (Ze - et) - pt * (Oe - Ce)) / rt);
                      },
                      function (f) {
                        (f.rp0 = f.stack.pop()),
                          l.DEBUG && console.log(f.step, 'SRP0[]', f.rp0);
                      },
                      function (f) {
                        (f.rp1 = f.stack.pop()),
                          l.DEBUG && console.log(f.step, 'SRP1[]', f.rp1);
                      },
                      function (f) {
                        (f.rp2 = f.stack.pop()),
                          l.DEBUG && console.log(f.step, 'SRP2[]', f.rp2);
                      },
                      function (f) {
                        var b = f.stack.pop();
                        switch (
                          (l.DEBUG && console.log(f.step, 'SZP0[]', b),
                          (f.zp0 = b))
                        ) {
                          case 0:
                            f.tZone || Ds(f), (f.z0 = f.tZone);
                            break;
                          case 1:
                            f.z0 = f.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (f) {
                        var b = f.stack.pop();
                        switch (
                          (l.DEBUG && console.log(f.step, 'SZP1[]', b),
                          (f.zp1 = b))
                        ) {
                          case 0:
                            f.tZone || Ds(f), (f.z1 = f.tZone);
                            break;
                          case 1:
                            f.z1 = f.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (f) {
                        var b = f.stack.pop();
                        switch (
                          (l.DEBUG && console.log(f.step, 'SZP2[]', b),
                          (f.zp2 = b))
                        ) {
                          case 0:
                            f.tZone || Ds(f), (f.z2 = f.tZone);
                            break;
                          case 1:
                            f.z2 = f.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (f) {
                        var b = f.stack.pop();
                        switch (
                          (l.DEBUG && console.log(f.step, 'SZPS[]', b),
                          (f.zp0 = f.zp1 = f.zp2 = b),
                          b)
                        ) {
                          case 0:
                            f.tZone || Ds(f), (f.z0 = f.z1 = f.z2 = f.tZone);
                            break;
                          case 1:
                            f.z0 = f.z1 = f.z2 = f.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (f) {
                        (f.loop = f.stack.pop()),
                          l.DEBUG && console.log(f.step, 'SLOOP[]', f.loop);
                      },
                      function (f) {
                        l.DEBUG && console.log(f.step, 'RTG[]'), (f.round = zi);
                      },
                      function (f) {
                        l.DEBUG && console.log(f.step, 'RTHG[]'),
                          (f.round = $l);
                      },
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'SMD[]', b),
                          (f.minDis = b / 64);
                      },
                      function (f) {
                        l.DEBUG && console.log(f.step, 'ELSE[]'), Xi(f, !1);
                      },
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'JMPR[]', b),
                          (f.ip += b - 1);
                      },
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'SCVTCI[]', b),
                          (f.cvCutIn = b / 64);
                      },
                      void 0,
                      void 0,
                      function (f) {
                        var b = f.stack;
                        l.DEBUG && console.log(f.step, 'DUP[]'),
                          b.push(b[b.length - 1]);
                      },
                      ko,
                      function (f) {
                        l.DEBUG && console.log(f.step, 'CLEAR[]'),
                          (f.stack.length = 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'SWAP[]'),
                          b.push(x),
                          b.push(j);
                      },
                      function (f) {
                        var b = f.stack;
                        l.DEBUG && console.log(f.step, 'DEPTH[]'),
                          b.push(b.length);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'CINDEX[]', x),
                          b.push(b[b.length - x]);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'MINDEX[]', x),
                          b.push(b.splice(b.length - x, 1)[0]);
                      },
                      void 0,
                      void 0,
                      void 0,
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'LOOPCALL[]', x, j);
                        var C = f.ip,
                          I = f.prog;
                        f.prog = f.funcs[x];
                        for (var F = 0; F < j; F++)
                          cn(f),
                            l.DEBUG &&
                              console.log(
                                ++f.step,
                                F + 1 < j ? 'next loopcall' : 'done loopcall',
                                F,
                              );
                        (f.ip = C), (f.prog = I);
                      },
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'CALL[]', b);
                        var x = f.ip,
                          j = f.prog;
                        (f.prog = f.funcs[b]),
                          cn(f),
                          (f.ip = x),
                          (f.prog = j),
                          l.DEBUG && console.log(++f.step, 'returning from', b);
                      },
                      function (f) {
                        if (f.env !== 'fpgm')
                          throw new Error('FDEF not allowed here');
                        var b = f.stack,
                          x = f.prog,
                          j = f.ip,
                          C = b.pop(),
                          I = j;
                        for (
                          l.DEBUG && console.log(f.step, 'FDEF[]', C);
                          x[++j] !== 45;

                        );
                        (f.ip = j), (f.funcs[C] = x.slice(I + 1, j));
                      },
                      void 0,
                      Ki.bind(void 0, 0),
                      Ki.bind(void 0, 1),
                      ea.bind(void 0, Ir),
                      ea.bind(void 0, Mr),
                      ta.bind(void 0, 0),
                      ta.bind(void 0, 1),
                      ra.bind(void 0, 0),
                      ra.bind(void 0, 1),
                      na.bind(void 0, 0),
                      na.bind(void 0, 1),
                      function (f) {
                        for (
                          var b = f.stack,
                            x = f.loop,
                            j = f.fv,
                            C = b.pop() / 64,
                            I = f.z2;
                          x--;

                        ) {
                          var F = b.pop(),
                            q = I[F];
                          l.DEBUG &&
                            console.log(
                              f.step,
                              (1 < f.loop
                                ? 'loop ' + (f.loop - x) + ': '
                                : '') + 'SHPIX[]',
                              F,
                              C,
                            ),
                            j.setRelative(q, q, C),
                            j.touch(q);
                        }
                        f.loop = 1;
                      },
                      function (f) {
                        for (
                          var b = f.stack,
                            x = f.rp1,
                            j = f.rp2,
                            C = f.loop,
                            I = f.z0[x],
                            F = f.z1[j],
                            q = f.fv,
                            Y = f.dpv,
                            se = f.z2;
                          C--;

                        ) {
                          var pe = b.pop(),
                            be = se[pe];
                          l.DEBUG &&
                            console.log(
                              f.step,
                              (1 < f.loop
                                ? 'loop ' + (f.loop - C) + ': '
                                : '') + 'IP[]',
                              pe,
                              x,
                              '<->',
                              j,
                            ),
                            q.interpolate(be, I, F, Y),
                            q.touch(be);
                        }
                        f.loop = 1;
                      },
                      sa.bind(void 0, 0),
                      sa.bind(void 0, 1),
                      function (f) {
                        for (
                          var b = f.stack,
                            x = f.rp0,
                            j = f.z0[x],
                            C = f.loop,
                            I = f.fv,
                            F = f.pv,
                            q = f.z1;
                          C--;

                        ) {
                          var Y = b.pop(),
                            se = q[Y];
                          l.DEBUG &&
                            console.log(
                              f.step,
                              (1 < f.loop
                                ? 'loop ' + (f.loop - C) + ': '
                                : '') + 'ALIGNRP[]',
                              Y,
                            ),
                            I.setRelative(se, j, 0, F),
                            I.touch(se);
                        }
                        f.loop = 1;
                      },
                      function (f) {
                        l.DEBUG && console.log(f.step, 'RTDG[]'),
                          (f.round = Zl);
                      },
                      oa.bind(void 0, 0),
                      oa.bind(void 0, 1),
                      function (f) {
                        var b = f.prog,
                          x = f.ip,
                          j = f.stack,
                          C = b[++x];
                        l.DEBUG && console.log(f.step, 'NPUSHB[]', C);
                        for (var I = 0; I < C; I++) j.push(b[++x]);
                        f.ip = x;
                      },
                      function (f) {
                        var b = f.ip,
                          x = f.prog,
                          j = f.stack,
                          C = x[++b];
                        l.DEBUG && console.log(f.step, 'NPUSHW[]', C);
                        for (var I = 0; I < C; I++) {
                          var F = (x[++b] << 8) | x[++b];
                          32768 & F && (F = -(1 + (65535 ^ F))), j.push(F);
                        }
                        f.ip = b;
                      },
                      function (f) {
                        var b = f.stack,
                          x = f.store;
                        x = x || (f.store = []);
                        var j = b.pop(),
                          C = b.pop();
                        l.DEBUG && console.log(f.step, 'WS', j, C), (x[C] = j);
                      },
                      function (f) {
                        var b = f.stack,
                          x = f.store,
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'RS', j);
                        var C = (x && x[j]) || 0;
                        b.push(C);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'WCVTP', x, j),
                          (f.cvt[j] = x / 64);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'RCVT', x),
                          b.push(64 * f.cvt[x]);
                      },
                      ia.bind(void 0, 0),
                      ia.bind(void 0, 1),
                      void 0,
                      aa.bind(void 0, 0),
                      aa.bind(void 0, 1),
                      function (f) {
                        l.DEBUG && console.log(f.step, 'MPPEM[]'),
                          f.stack.push(f.ppem);
                      },
                      void 0,
                      function (f) {
                        l.DEBUG && console.log(f.step, 'FLIPON[]'),
                          (f.autoFlip = !0);
                      },
                      void 0,
                      void 0,
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'LT[]', x, j),
                          b.push(j < x ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'LTEQ[]', x, j),
                          b.push(j <= x ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'GT[]', x, j),
                          b.push(x < j ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'GTEQ[]', x, j),
                          b.push(x <= j ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'EQ[]', x, j),
                          b.push(x === j ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'NEQ[]', x, j),
                          b.push(x !== j ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'ODD[]', x),
                          b.push(Math.trunc(x) % 2 ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'EVEN[]', x),
                          b.push(Math.trunc(x) % 2 ? 0 : 1);
                      },
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'IF[]', b),
                          b ||
                            (Xi(f, !0),
                            l.DEBUG && console.log(f.step, 'EIF[]'));
                      },
                      function (f) {
                        l.DEBUG && console.log(f.step, 'EIF[]');
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'AND[]', x, j),
                          b.push(x && j ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'OR[]', x, j),
                          b.push(x || j ? 1 : 0);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'NOT[]', x),
                          b.push(x ? 0 : 1);
                      },
                      Po.bind(void 0, 1),
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'SDB[]', b),
                          (f.deltaBase = b);
                      },
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'SDS[]', b),
                          (f.deltaShift = Math.pow(0.5, b));
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'ADD[]', x, j),
                          b.push(j + x);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'SUB[]', x, j),
                          b.push(j - x);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'DIV[]', x, j),
                          b.push((64 * j) / x);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'MUL[]', x, j),
                          b.push((j * x) / 64);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'ABS[]', x),
                          b.push(Math.abs(x));
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'NEG[]', x), b.push(-x);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'FLOOR[]', x),
                          b.push(64 * Math.floor(x / 64));
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop();
                        l.DEBUG && console.log(f.step, 'CEILING[]', x),
                          b.push(64 * Math.ceil(x / 64));
                      },
                      Is.bind(void 0, 0),
                      Is.bind(void 0, 1),
                      Is.bind(void 0, 2),
                      Is.bind(void 0, 3),
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'WCVTF[]', x, j),
                          (f.cvt[j] = (x * f.ppem) / f.font.unitsPerEm);
                      },
                      Po.bind(void 0, 2),
                      Po.bind(void 0, 3),
                      Ro.bind(void 0, 1),
                      Ro.bind(void 0, 2),
                      Ro.bind(void 0, 3),
                      function (f) {
                        var b,
                          x = f.stack.pop();
                        switch (
                          (l.DEBUG && console.log(f.step, 'SROUND[]', x),
                          (f.round = Hi),
                          192 & x)
                        ) {
                          case 0:
                            b = 0.5;
                            break;
                          case 64:
                            b = 1;
                            break;
                          case 128:
                            b = 2;
                            break;
                          default:
                            throw new Error('invalid SROUND value');
                        }
                        switch (((f.srPeriod = b), 48 & x)) {
                          case 0:
                            f.srPhase = 0;
                            break;
                          case 16:
                            f.srPhase = 0.25 * b;
                            break;
                          case 32:
                            f.srPhase = 0.5 * b;
                            break;
                          case 48:
                            f.srPhase = 0.75 * b;
                            break;
                          default:
                            throw new Error('invalid SROUND value');
                        }
                        (x &= 15),
                          (f.srThreshold = x === 0 ? 0 : (x / 8 - 0.5) * b);
                      },
                      function (f) {
                        var b,
                          x = f.stack.pop();
                        switch (
                          (l.DEBUG && console.log(f.step, 'S45ROUND[]', x),
                          (f.round = Hi),
                          192 & x)
                        ) {
                          case 0:
                            b = Math.sqrt(2) / 2;
                            break;
                          case 64:
                            b = Math.sqrt(2);
                            break;
                          case 128:
                            b = 2 * Math.sqrt(2);
                            break;
                          default:
                            throw new Error('invalid S45ROUND value');
                        }
                        switch (((f.srPeriod = b), 48 & x)) {
                          case 0:
                            f.srPhase = 0;
                            break;
                          case 16:
                            f.srPhase = 0.25 * b;
                            break;
                          case 32:
                            f.srPhase = 0.5 * b;
                            break;
                          case 48:
                            f.srPhase = 0.75 * b;
                            break;
                          default:
                            throw new Error('invalid S45ROUND value');
                        }
                        (x &= 15),
                          (f.srThreshold = x === 0 ? 0 : (x / 8 - 0.5) * b);
                      },
                      void 0,
                      void 0,
                      function (f) {
                        l.DEBUG && console.log(f.step, 'ROFF[]'),
                          (f.round = Yl);
                      },
                      void 0,
                      function (f) {
                        l.DEBUG && console.log(f.step, 'RUTG[]'),
                          (f.round = Ql);
                      },
                      function (f) {
                        l.DEBUG && console.log(f.step, 'RDTG[]'),
                          (f.round = Jl);
                      },
                      ko,
                      ko,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'SCANCTRL[]', b);
                      },
                      la.bind(void 0, 0),
                      la.bind(void 0, 1),
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = 0;
                        l.DEBUG && console.log(f.step, 'GETINFO[]', x),
                          1 & x && (j = 35),
                          32 & x && (j |= 4096),
                          b.push(j);
                      },
                      void 0,
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop(),
                          C = b.pop();
                        l.DEBUG && console.log(f.step, 'ROLL[]'),
                          b.push(j),
                          b.push(x),
                          b.push(C);
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'MAX[]', x, j),
                          b.push(Math.max(j, x));
                      },
                      function (f) {
                        var b = f.stack,
                          x = b.pop(),
                          j = b.pop();
                        l.DEBUG && console.log(f.step, 'MIN[]', x, j),
                          b.push(Math.min(j, x));
                      },
                      function (f) {
                        var b = f.stack.pop();
                        l.DEBUG && console.log(f.step, 'SCANTYPE[]', b);
                      },
                      function (f) {
                        var b = f.stack.pop(),
                          x = f.stack.pop();
                        switch (
                          (l.DEBUG && console.log(f.step, 'INSTCTRL[]', b, x),
                          b)
                        ) {
                          case 1:
                            return void (f.inhibitGridFit = !!x);
                          case 2:
                            return void (f.ignoreCvt = !!x);
                          default:
                            throw new Error('invalid INSTCTRL[] selector');
                        }
                      },
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      Xr.bind(void 0, 1),
                      Xr.bind(void 0, 2),
                      Xr.bind(void 0, 3),
                      Xr.bind(void 0, 4),
                      Xr.bind(void 0, 5),
                      Xr.bind(void 0, 6),
                      Xr.bind(void 0, 7),
                      Xr.bind(void 0, 8),
                      Yr.bind(void 0, 1),
                      Yr.bind(void 0, 2),
                      Yr.bind(void 0, 3),
                      Yr.bind(void 0, 4),
                      Yr.bind(void 0, 5),
                      Yr.bind(void 0, 6),
                      Yr.bind(void 0, 7),
                      Yr.bind(void 0, 8),
                      Je.bind(void 0, 0, 0, 0, 0, 0),
                      Je.bind(void 0, 0, 0, 0, 0, 1),
                      Je.bind(void 0, 0, 0, 0, 0, 2),
                      Je.bind(void 0, 0, 0, 0, 0, 3),
                      Je.bind(void 0, 0, 0, 0, 1, 0),
                      Je.bind(void 0, 0, 0, 0, 1, 1),
                      Je.bind(void 0, 0, 0, 0, 1, 2),
                      Je.bind(void 0, 0, 0, 0, 1, 3),
                      Je.bind(void 0, 0, 0, 1, 0, 0),
                      Je.bind(void 0, 0, 0, 1, 0, 1),
                      Je.bind(void 0, 0, 0, 1, 0, 2),
                      Je.bind(void 0, 0, 0, 1, 0, 3),
                      Je.bind(void 0, 0, 0, 1, 1, 0),
                      Je.bind(void 0, 0, 0, 1, 1, 1),
                      Je.bind(void 0, 0, 0, 1, 1, 2),
                      Je.bind(void 0, 0, 0, 1, 1, 3),
                      Je.bind(void 0, 0, 1, 0, 0, 0),
                      Je.bind(void 0, 0, 1, 0, 0, 1),
                      Je.bind(void 0, 0, 1, 0, 0, 2),
                      Je.bind(void 0, 0, 1, 0, 0, 3),
                      Je.bind(void 0, 0, 1, 0, 1, 0),
                      Je.bind(void 0, 0, 1, 0, 1, 1),
                      Je.bind(void 0, 0, 1, 0, 1, 2),
                      Je.bind(void 0, 0, 1, 0, 1, 3),
                      Je.bind(void 0, 0, 1, 1, 0, 0),
                      Je.bind(void 0, 0, 1, 1, 0, 1),
                      Je.bind(void 0, 0, 1, 1, 0, 2),
                      Je.bind(void 0, 0, 1, 1, 0, 3),
                      Je.bind(void 0, 0, 1, 1, 1, 0),
                      Je.bind(void 0, 0, 1, 1, 1, 1),
                      Je.bind(void 0, 0, 1, 1, 1, 2),
                      Je.bind(void 0, 0, 1, 1, 1, 3),
                      Je.bind(void 0, 1, 0, 0, 0, 0),
                      Je.bind(void 0, 1, 0, 0, 0, 1),
                      Je.bind(void 0, 1, 0, 0, 0, 2),
                      Je.bind(void 0, 1, 0, 0, 0, 3),
                      Je.bind(void 0, 1, 0, 0, 1, 0),
                      Je.bind(void 0, 1, 0, 0, 1, 1),
                      Je.bind(void 0, 1, 0, 0, 1, 2),
                      Je.bind(void 0, 1, 0, 0, 1, 3),
                      Je.bind(void 0, 1, 0, 1, 0, 0),
                      Je.bind(void 0, 1, 0, 1, 0, 1),
                      Je.bind(void 0, 1, 0, 1, 0, 2),
                      Je.bind(void 0, 1, 0, 1, 0, 3),
                      Je.bind(void 0, 1, 0, 1, 1, 0),
                      Je.bind(void 0, 1, 0, 1, 1, 1),
                      Je.bind(void 0, 1, 0, 1, 1, 2),
                      Je.bind(void 0, 1, 0, 1, 1, 3),
                      Je.bind(void 0, 1, 1, 0, 0, 0),
                      Je.bind(void 0, 1, 1, 0, 0, 1),
                      Je.bind(void 0, 1, 1, 0, 0, 2),
                      Je.bind(void 0, 1, 1, 0, 0, 3),
                      Je.bind(void 0, 1, 1, 0, 1, 0),
                      Je.bind(void 0, 1, 1, 0, 1, 1),
                      Je.bind(void 0, 1, 1, 0, 1, 2),
                      Je.bind(void 0, 1, 1, 0, 1, 3),
                      Je.bind(void 0, 1, 1, 1, 0, 0),
                      Je.bind(void 0, 1, 1, 1, 0, 1),
                      Je.bind(void 0, 1, 1, 1, 0, 2),
                      Je.bind(void 0, 1, 1, 1, 0, 3),
                      Je.bind(void 0, 1, 1, 1, 1, 0),
                      Je.bind(void 0, 1, 1, 1, 1, 1),
                      Je.bind(void 0, 1, 1, 1, 1, 2),
                      Je.bind(void 0, 1, 1, 1, 1, 3),
                    ]);
                  var eu =
                    Array.from ||
                    function (f) {
                      return (
                        f.match(
                          /[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g,
                        ) || []
                      );
                    };
                  function Et(f) {
                    (f = f || {}).empty ||
                      (Pn(
                        f.familyName,
                        'When creating a new Font object, familyName is required.',
                      ),
                      Pn(
                        f.styleName,
                        'When creating a new Font object, styleName is required.',
                      ),
                      Pn(
                        f.unitsPerEm,
                        'When creating a new Font object, unitsPerEm is required.',
                      ),
                      Pn(
                        f.ascender,
                        'When creating a new Font object, ascender is required.',
                      ),
                      Pn(
                        f.descender,
                        'When creating a new Font object, descender is required.',
                      ),
                      Pn(
                        f.descender < 0,
                        'Descender should be negative (e.g. -512).',
                      ),
                      (this.names = {
                        fontFamily: { en: f.familyName || ' ' },
                        fontSubfamily: { en: f.styleName || ' ' },
                        fullName: {
                          en: f.fullName || f.familyName + ' ' + f.styleName,
                        },
                        postScriptName: {
                          en:
                            f.postScriptName ||
                            (f.familyName + f.styleName).replace(/\s/g, ''),
                        },
                        designer: { en: f.designer || ' ' },
                        designerURL: { en: f.designerURL || ' ' },
                        manufacturer: { en: f.manufacturer || ' ' },
                        manufacturerURL: { en: f.manufacturerURL || ' ' },
                        license: { en: f.license || ' ' },
                        licenseURL: { en: f.licenseURL || ' ' },
                        version: { en: f.version || 'Version 0.1' },
                        description: { en: f.description || ' ' },
                        copyright: { en: f.copyright || ' ' },
                        trademark: { en: f.trademark || ' ' },
                      }),
                      (this.unitsPerEm = f.unitsPerEm || 1e3),
                      (this.ascender = f.ascender),
                      (this.descender = f.descender),
                      (this.createdTimestamp = f.createdTimestamp),
                      (this.tables = {
                        os2: {
                          usWeightClass:
                            f.weightClass || this.usWeightClasses.MEDIUM,
                          usWidthClass:
                            f.widthClass || this.usWidthClasses.MEDIUM,
                          fsSelection:
                            f.fsSelection || this.fsSelectionValues.REGULAR,
                        },
                      })),
                      (this.supported = !0),
                      (this.glyphs = new it.GlyphSet(this, f.glyphs || [])),
                      (this.encoding = new Ee(this)),
                      (this.position = new Rs(this)),
                      (this.substitution = new jr(this)),
                      (this.tables = this.tables || {}),
                      Object.defineProperty(this, 'hinting', {
                        get: function () {
                          return this._hinting
                            ? this._hinting
                            : this.outlinesFormat === 'truetype'
                            ? (this._hinting = new qi(this))
                            : void 0;
                        },
                      });
                  }
                  function ua(f, b) {
                    var x = JSON.stringify(f),
                      j = 256;
                    for (var C in b) {
                      var I = parseInt(C);
                      if (I && !(I < 256)) {
                        if (JSON.stringify(b[C]) === x) return I;
                        j <= I && (j = I + 1);
                      }
                    }
                    return (b[j] = f), j;
                  }
                  function tu(f, b, x, j) {
                    for (
                      var C = [
                          {
                            name: 'nameID_' + f,
                            type: 'USHORT',
                            value: ua(b.name, j),
                          },
                          { name: 'flags_' + f, type: 'USHORT', value: 0 },
                        ],
                        I = 0;
                      I < x.length;
                      ++I
                    ) {
                      var F = x[I].tag;
                      C.push({
                        name: 'axis_' + f + ' ' + F,
                        type: 'FIXED',
                        value: b.coordinates[F] << 16,
                      });
                    }
                    return C;
                  }
                  function ru(f, b, x, j) {
                    var C = {},
                      I = new G.Parser(f, b);
                    (C.name = j[I.parseUShort()] || {}),
                      I.skip('uShort', 1),
                      (C.coordinates = {});
                    for (var F = 0; F < x.length; ++F)
                      C.coordinates[x[F].tag] = I.parseFixed();
                    return C;
                  }
                  (Et.prototype.hasChar = function (f) {
                    return this.encoding.charToGlyphIndex(f) !== null;
                  }),
                    (Et.prototype.charToGlyphIndex = function (f) {
                      return this.encoding.charToGlyphIndex(f);
                    }),
                    (Et.prototype.charToGlyph = function (f) {
                      var b = this.charToGlyphIndex(f),
                        x = this.glyphs.get(b);
                      return (x = x || this.glyphs.get(0));
                    }),
                    (Et.prototype.stringToGlyphs = function (f, b) {
                      b = b || this.defaultRenderOptions;
                      for (var x = eu(f), j = [], C = 0; C < x.length; C += 1) {
                        var I = x[C];
                        j.push(this.charToGlyphIndex(I));
                      }
                      var F = j.length;
                      if (b.features) {
                        var q =
                            b.script ||
                            this.substitution.getDefaultScriptName(),
                          Y = [];
                        b.features.liga &&
                          (Y = Y.concat(
                            this.substitution.getFeature('liga', q, b.language),
                          )),
                          b.features.rlig &&
                            (Y = Y.concat(
                              this.substitution.getFeature(
                                'rlig',
                                q,
                                b.language,
                              ),
                            ));
                        for (var se = 0; se < F; se += 1)
                          for (var pe = 0; pe < Y.length; pe++) {
                            for (
                              var be = Y[pe],
                                te = be.sub,
                                Ue = te.length,
                                Le = 0;
                              Le < Ue && te[Le] === j[se + Le];

                            )
                              Le++;
                            Le === Ue &&
                              (j.splice(se, Ue, be.by), (F = F - Ue + 1));
                          }
                      }
                      for (
                        var Oe = new Array(F), Me = this.glyphs.get(0), Ce = 0;
                        Ce < F;
                        Ce += 1
                      )
                        Oe[Ce] = this.glyphs.get(j[Ce]) || Me;
                      return Oe;
                    }),
                    (Et.prototype.nameToGlyphIndex = function (f) {
                      return this.glyphNames.nameToGlyphIndex(f);
                    }),
                    (Et.prototype.nameToGlyph = function (f) {
                      var b = this.nameToGlyphIndex(f),
                        x = this.glyphs.get(b);
                      return (x = x || this.glyphs.get(0));
                    }),
                    (Et.prototype.glyphIndexToName = function (f) {
                      return this.glyphNames.glyphIndexToName
                        ? this.glyphNames.glyphIndexToName(f)
                        : '';
                    }),
                    (Et.prototype.getKerningValue = function (f, b) {
                      (f = f.index || f), (b = b.index || b);
                      var x = this.position.defaultKerningTables;
                      return x
                        ? this.position.getKerningValue(x, f, b)
                        : this.kerningPairs[f + ',' + b] || 0;
                    }),
                    (Et.prototype.defaultRenderOptions = {
                      kerning: !0,
                      features: { liga: !0, rlig: !0 },
                    }),
                    (Et.prototype.forEachGlyph = function (f, b, x, j, C, I) {
                      (b = b !== void 0 ? b : 0),
                        (x = x !== void 0 ? x : 0),
                        (j = j !== void 0 ? j : 72),
                        (C = C || this.defaultRenderOptions);
                      var F,
                        q = (1 / this.unitsPerEm) * j,
                        Y = this.stringToGlyphs(f, C);
                      if (C.kerning) {
                        var se =
                          C.script || this.position.getDefaultScriptName();
                        F = this.position.getKerningTables(se, C.language);
                      }
                      for (var pe = 0; pe < Y.length; pe += 1) {
                        var be = Y[pe];
                        I.call(this, be, b, x, j, C),
                          be.advanceWidth && (b += be.advanceWidth * q),
                          C.kerning &&
                            pe < Y.length - 1 &&
                            (b +=
                              (F
                                ? this.position.getKerningValue(
                                    F,
                                    be.index,
                                    Y[pe + 1].index,
                                  )
                                : this.getKerningValue(be, Y[pe + 1])) * q),
                          C.letterSpacing
                            ? (b += C.letterSpacing * j)
                            : C.tracking && (b += (C.tracking / 1e3) * j);
                      }
                      return b;
                    }),
                    (Et.prototype.getPath = function (f, b, x, j, C) {
                      var I = new oe();
                      return (
                        this.forEachGlyph(
                          f,
                          b,
                          x,
                          j,
                          C,
                          function (F, q, Y, se) {
                            var pe = F.getPath(q, Y, se, C, this);
                            I.extend(pe);
                          },
                        ),
                        I
                      );
                    }),
                    (Et.prototype.getPaths = function (f, b, x, j, C) {
                      var I = [];
                      return (
                        this.forEachGlyph(
                          f,
                          b,
                          x,
                          j,
                          C,
                          function (F, q, Y, se) {
                            var pe = F.getPath(q, Y, se, C, this);
                            I.push(pe);
                          },
                        ),
                        I
                      );
                    }),
                    (Et.prototype.getAdvanceWidth = function (f, b, x) {
                      return this.forEachGlyph(f, 0, 0, b, x, function () {});
                    }),
                    (Et.prototype.draw = function (f, b, x, j, C, I) {
                      this.getPath(b, x, j, C, I).draw(f);
                    }),
                    (Et.prototype.drawPoints = function (f, b, x, j, C, I) {
                      this.forEachGlyph(b, x, j, C, I, function (F, q, Y, se) {
                        F.drawPoints(f, q, Y, se);
                      });
                    }),
                    (Et.prototype.drawMetrics = function (f, b, x, j, C, I) {
                      this.forEachGlyph(b, x, j, C, I, function (F, q, Y, se) {
                        F.drawMetrics(f, q, Y, se);
                      });
                    }),
                    (Et.prototype.getEnglishName = function (f) {
                      var b = this.names[f];
                      if (b) return b.en;
                    }),
                    (Et.prototype.validate = function () {
                      var f = this;
                      function b(x) {
                        var j = f.getEnglishName(x);
                        j && j.trim().length;
                      }
                      b('fontFamily'),
                        b('weightName'),
                        b('manufacturer'),
                        b('copyright'),
                        b('version'),
                        this.unitsPerEm;
                    }),
                    (Et.prototype.toTables = function () {
                      return ql.fontToTable(this);
                    }),
                    (Et.prototype.toBuffer = function () {
                      return (
                        console.warn(
                          'Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.',
                        ),
                        this.toArrayBuffer()
                      );
                    }),
                    (Et.prototype.toArrayBuffer = function () {
                      for (
                        var f = this.toTables().encode(),
                          b = new ArrayBuffer(f.length),
                          x = new Uint8Array(b),
                          j = 0;
                        j < f.length;
                        j++
                      )
                        x[j] = f[j];
                      return b;
                    }),
                    (Et.prototype.download = function (f) {
                      var b = this.getEnglishName('fontFamily'),
                        x = this.getEnglishName('fontSubfamily');
                      f = f || b.replace(/\s/g, '') + '-' + x + '.otf';
                      var j = this.toArrayBuffer();
                      if (typeof window < 'u')
                        (window.requestFileSystem =
                          window.requestFileSystem ||
                          window.webkitRequestFileSystem),
                          window.requestFileSystem(
                            window.TEMPORARY,
                            j.byteLength,
                            function (F) {
                              F.root.getFile(f, { create: !0 }, function (q) {
                                q.createWriter(function (Y) {
                                  var se = new DataView(j),
                                    pe = new Blob([se], {
                                      type: 'font/opentype',
                                    });
                                  Y.write(pe),
                                    Y.addEventListener(
                                      'writeend',
                                      function () {
                                        location.href = q.toURL();
                                      },
                                      !1,
                                    );
                                });
                              });
                            },
                            function (F) {
                              throw new Error(F.name + ': ' + F.message);
                            },
                          );
                      else {
                        var C = e('fs'),
                          I = (function (F) {
                            for (
                              var q = new m(F.byteLength),
                                Y = new Uint8Array(F),
                                se = 0;
                              se < q.length;
                              ++se
                            )
                              q[se] = Y[se];
                            return q;
                          })(j);
                        C.writeFileSync(f, I);
                      }
                    }),
                    (Et.prototype.fsSelectionValues = {
                      ITALIC: 1,
                      UNDERSCORE: 2,
                      NEGATIVE: 4,
                      OUTLINED: 8,
                      STRIKEOUT: 16,
                      BOLD: 32,
                      REGULAR: 64,
                      USER_TYPO_METRICS: 128,
                      WWS: 256,
                      OBLIQUE: 512,
                    }),
                    (Et.prototype.usWidthClasses = {
                      ULTRA_CONDENSED: 1,
                      EXTRA_CONDENSED: 2,
                      CONDENSED: 3,
                      SEMI_CONDENSED: 4,
                      MEDIUM: 5,
                      SEMI_EXPANDED: 6,
                      EXPANDED: 7,
                      EXTRA_EXPANDED: 8,
                      ULTRA_EXPANDED: 9,
                    }),
                    (Et.prototype.usWeightClasses = {
                      THIN: 100,
                      EXTRA_LIGHT: 200,
                      LIGHT: 300,
                      NORMAL: 400,
                      MEDIUM: 500,
                      SEMI_BOLD: 600,
                      BOLD: 700,
                      EXTRA_BOLD: 800,
                      BLACK: 900,
                    });
                  var nu = {
                      make: function (f, b) {
                        var x,
                          j,
                          C,
                          I,
                          F = new Fe.Table('fvar', [
                            { name: 'version', type: 'ULONG', value: 65536 },
                            { name: 'offsetToData', type: 'USHORT', value: 0 },
                            {
                              name: 'countSizePairs',
                              type: 'USHORT',
                              value: 2,
                            },
                            {
                              name: 'axisCount',
                              type: 'USHORT',
                              value: f.axes.length,
                            },
                            { name: 'axisSize', type: 'USHORT', value: 20 },
                            {
                              name: 'instanceCount',
                              type: 'USHORT',
                              value: f.instances.length,
                            },
                            {
                              name: 'instanceSize',
                              type: 'USHORT',
                              value: 4 + 4 * f.axes.length,
                            },
                          ]);
                        F.offsetToData = F.sizeOf();
                        for (var q = 0; q < f.axes.length; q++)
                          F.fields = F.fields.concat(
                            ((x = q),
                            (j = f.axes[q]),
                            (C = b),
                            (I = ua(j.name, C)),
                            [
                              { name: 'tag_' + x, type: 'TAG', value: j.tag },
                              {
                                name: 'minValue_' + x,
                                type: 'FIXED',
                                value: j.minValue << 16,
                              },
                              {
                                name: 'defaultValue_' + x,
                                type: 'FIXED',
                                value: j.defaultValue << 16,
                              },
                              {
                                name: 'maxValue_' + x,
                                type: 'FIXED',
                                value: j.maxValue << 16,
                              },
                              { name: 'flags_' + x, type: 'USHORT', value: 0 },
                              { name: 'nameID_' + x, type: 'USHORT', value: I },
                            ]),
                          );
                        for (var Y = 0; Y < f.instances.length; Y++)
                          F.fields = F.fields.concat(
                            tu(Y, f.instances[Y], f.axes, b),
                          );
                        return F;
                      },
                      parse: function (f, b, x) {
                        var j = new G.Parser(f, b),
                          C = j.parseULong();
                        de.argument(
                          C === 65536,
                          'Unsupported fvar table version.',
                        );
                        var I = j.parseOffset16();
                        j.skip('uShort', 1);
                        for (
                          var F,
                            q,
                            Y,
                            se,
                            pe,
                            be = j.parseUShort(),
                            te = j.parseUShort(),
                            Ue = j.parseUShort(),
                            Le = j.parseUShort(),
                            Oe = [],
                            Me = 0;
                          Me < be;
                          Me++
                        )
                          Oe.push(
                            ((F = f),
                            (q = b + I + Me * te),
                            (Y = x),
                            (pe = se = void 0),
                            (se = {}),
                            (pe = new G.Parser(F, q)),
                            (se.tag = pe.parseTag()),
                            (se.minValue = pe.parseFixed()),
                            (se.defaultValue = pe.parseFixed()),
                            (se.maxValue = pe.parseFixed()),
                            pe.skip('uShort', 1),
                            (se.name = Y[pe.parseUShort()] || {}),
                            se),
                          );
                        for (
                          var Ce = [], $e = b + I + be * te, Ze = 0;
                          Ze < Ue;
                          Ze++
                        )
                          Ce.push(ru(f, $e + Ze * Le, Oe, x));
                        return { axes: Oe, instances: Ce };
                      },
                    },
                    pr = new Array(10);
                  (pr[1] = function () {
                    var f = this.offset + this.relativeOffset,
                      b = this.parseUShort();
                    return b === 1
                      ? {
                          posFormat: 1,
                          coverage: this.parsePointer(ge.coverage),
                          value: this.parseValueRecord(),
                        }
                      : b === 2
                      ? {
                          posFormat: 2,
                          coverage: this.parsePointer(ge.coverage),
                          values: this.parseValueRecordList(),
                        }
                      : void de.assert(
                          !1,
                          '0x' +
                            f.toString(16) +
                            ': GPOS lookup type 1 format must be 1 or 2.',
                        );
                  }),
                    (pr[2] = function () {
                      var f = this.offset + this.relativeOffset,
                        b = this.parseUShort();
                      de.assert(
                        b === 1 || b === 2,
                        '0x' +
                          f.toString(16) +
                          ': GPOS lookup type 2 format must be 1 or 2.',
                      );
                      var x = this.parsePointer(ge.coverage),
                        j = this.parseUShort(),
                        C = this.parseUShort();
                      if (b === 1)
                        return {
                          posFormat: b,
                          coverage: x,
                          valueFormat1: j,
                          valueFormat2: C,
                          pairSets: this.parseList(
                            ge.pointer(
                              ge.list(function () {
                                return {
                                  secondGlyph: this.parseUShort(),
                                  value1: this.parseValueRecord(j),
                                  value2: this.parseValueRecord(C),
                                };
                              }),
                            ),
                          ),
                        };
                      if (b === 2) {
                        var I = this.parsePointer(ge.classDef),
                          F = this.parsePointer(ge.classDef),
                          q = this.parseUShort(),
                          Y = this.parseUShort();
                        return {
                          posFormat: b,
                          coverage: x,
                          valueFormat1: j,
                          valueFormat2: C,
                          classDef1: I,
                          classDef2: F,
                          class1Count: q,
                          class2Count: Y,
                          classRecords: this.parseList(
                            q,
                            ge.list(Y, function () {
                              return {
                                value1: this.parseValueRecord(j),
                                value2: this.parseValueRecord(C),
                              };
                            }),
                          ),
                        };
                      }
                    }),
                    (pr[3] = function () {
                      return { error: 'GPOS Lookup 3 not supported' };
                    }),
                    (pr[4] = function () {
                      return { error: 'GPOS Lookup 4 not supported' };
                    }),
                    (pr[5] = function () {
                      return { error: 'GPOS Lookup 5 not supported' };
                    }),
                    (pr[6] = function () {
                      return { error: 'GPOS Lookup 6 not supported' };
                    }),
                    (pr[7] = function () {
                      return { error: 'GPOS Lookup 7 not supported' };
                    }),
                    (pr[8] = function () {
                      return { error: 'GPOS Lookup 8 not supported' };
                    }),
                    (pr[9] = function () {
                      return { error: 'GPOS Lookup 9 not supported' };
                    });
                  var su = new Array(10),
                    ou = {
                      parse: function (f, b) {
                        var x = new ge(f, (b = b || 0)),
                          j = x.parseVersion(1);
                        return (
                          de.argument(
                            j === 1 || j === 1.1,
                            'Unsupported GPOS table version ' + j,
                          ),
                          j === 1
                            ? {
                                version: j,
                                scripts: x.parseScriptList(),
                                features: x.parseFeatureList(),
                                lookups: x.parseLookupList(pr),
                              }
                            : {
                                version: j,
                                scripts: x.parseScriptList(),
                                features: x.parseFeatureList(),
                                lookups: x.parseLookupList(pr),
                                variations: x.parseFeatureVariationsList(),
                              }
                        );
                      },
                      make: function (f) {
                        return new Fe.Table('GPOS', [
                          { name: 'version', type: 'ULONG', value: 65536 },
                          {
                            name: 'scripts',
                            type: 'TABLE',
                            value: new Fe.ScriptList(f.scripts),
                          },
                          {
                            name: 'features',
                            type: 'TABLE',
                            value: new Fe.FeatureList(f.features),
                          },
                          {
                            name: 'lookups',
                            type: 'TABLE',
                            value: new Fe.LookupList(f.lookups, su),
                          },
                        ]);
                      },
                    },
                    iu = {
                      parse: function (f, b) {
                        var x = new G.Parser(f, b),
                          j = x.parseUShort();
                        if (j === 0)
                          return (function (C) {
                            var I = {};
                            C.skip('uShort');
                            var F = C.parseUShort();
                            de.argument(
                              F === 0,
                              'Unsupported kern sub-table version.',
                            ),
                              C.skip('uShort', 2);
                            var q = C.parseUShort();
                            C.skip('uShort', 3);
                            for (var Y = 0; Y < q; Y += 1) {
                              var se = C.parseUShort(),
                                pe = C.parseUShort(),
                                be = C.parseShort();
                              I[se + ',' + pe] = be;
                            }
                            return I;
                          })(x);
                        if (j === 1)
                          return (function (C) {
                            var I = {};
                            C.skip('uShort'),
                              1 < C.parseULong() &&
                                console.warn(
                                  'Only the first kern subtable is supported.',
                                ),
                              C.skip('uLong');
                            var F = 255 & C.parseUShort();
                            if ((C.skip('uShort'), F == 0)) {
                              var q = C.parseUShort();
                              C.skip('uShort', 3);
                              for (var Y = 0; Y < q; Y += 1) {
                                var se = C.parseUShort(),
                                  pe = C.parseUShort(),
                                  be = C.parseShort();
                                I[se + ',' + pe] = be;
                              }
                            }
                            return I;
                          })(x);
                        throw new Error(
                          'Unsupported kern table version (' + j + ').',
                        );
                      },
                    },
                    au = {
                      parse: function (f, b, x, j) {
                        for (
                          var C = new G.Parser(f, b),
                            I = j ? C.parseUShort : C.parseULong,
                            F = [],
                            q = 0;
                          q < x + 1;
                          q += 1
                        ) {
                          var Y = I.call(C);
                          j && (Y *= 2), F.push(Y);
                        }
                        return F;
                      },
                    };
                  function lu(f, b) {
                    e('fs').readFile(f, function (x, j) {
                      if (x) return b(x.message);
                      b(null, Fi(j));
                    });
                  }
                  function uu(f, b) {
                    var x = new XMLHttpRequest();
                    x.open('get', f, !0),
                      (x.responseType = 'arraybuffer'),
                      (x.onload = function () {
                        return x.response
                          ? b(null, x.response)
                          : b('Font could not be loaded: ' + x.statusText);
                      }),
                      (x.onerror = function () {
                        b('Font could not be loaded');
                      }),
                      x.send();
                  }
                  function ca(f, b) {
                    for (var x = [], j = 12, C = 0; C < b; C += 1) {
                      var I = G.getTag(f, j),
                        F = G.getULong(f, j + 4),
                        q = G.getULong(f, j + 8),
                        Y = G.getULong(f, j + 12);
                      x.push({
                        tag: I,
                        checksum: F,
                        offset: q,
                        length: Y,
                        compression: !1,
                      }),
                        (j += 16);
                    }
                    return x;
                  }
                  function Xt(f, b) {
                    if (b.compression !== 'WOFF')
                      return { data: f, offset: b.offset };
                    var x = new Uint8Array(
                        f.buffer,
                        b.offset + 2,
                        b.compressedLength - 2,
                      ),
                      j = new Uint8Array(b.length);
                    if (($(x, j), j.byteLength !== b.length))
                      throw new Error(
                        'Decompression error: ' +
                          b.tag +
                          " decompressed length doesn't match recorded length",
                      );
                    return { data: new DataView(j.buffer, 0), offset: 0 };
                  }
                  function Do(f) {
                    var b,
                      x,
                      j,
                      C,
                      I,
                      F,
                      q,
                      Y,
                      se,
                      pe,
                      be,
                      te,
                      Ue,
                      Le,
                      Oe = new Et({ empty: !0 }),
                      Me = new DataView(f, 0),
                      Ce = [],
                      $e = G.getTag(Me, 0);
                    if (
                      $e === String.fromCharCode(0, 1, 0, 0) ||
                      $e === 'true' ||
                      $e === 'typ1'
                    )
                      (Oe.outlinesFormat = 'truetype'),
                        (Ce = ca(Me, (j = G.getUShort(Me, 4))));
                    else if ($e === 'OTTO')
                      (Oe.outlinesFormat = 'cff'),
                        (Ce = ca(Me, (j = G.getUShort(Me, 4))));
                    else {
                      if ($e !== 'wOFF')
                        throw new Error('Unsupported OpenType signature ' + $e);
                      var Ze = G.getTag(Me, 4);
                      if (Ze === String.fromCharCode(0, 1, 0, 0))
                        Oe.outlinesFormat = 'truetype';
                      else {
                        if (Ze !== 'OTTO')
                          throw new Error('Unsupported OpenType flavor ' + $e);
                        Oe.outlinesFormat = 'cff';
                      }
                      Ce = (function (vt, Wt) {
                        for (var Ct = [], At = 44, Er = 0; Er < Wt; Er += 1) {
                          var Rn = G.getTag(vt, At),
                            hn = G.getULong(vt, At + 4),
                            cr = G.getULong(vt, At + 8),
                            dn = G.getULong(vt, At + 12),
                            Dn = void 0;
                          (Dn = cr < dn && 'WOFF'),
                            Ct.push({
                              tag: Rn,
                              offset: hn,
                              compression: Dn,
                              compressedLength: cr,
                              length: dn,
                            }),
                            (At += 20);
                        }
                        return Ct;
                      })(Me, (j = G.getUShort(Me, 12)));
                    }
                    for (var ct = 0; ct < j; ct += 1) {
                      var et = Ce[ct],
                        rt = void 0;
                      switch (et.tag) {
                        case 'cmap':
                          (rt = Xt(Me, et)),
                            (Oe.tables.cmap = z.parse(rt.data, rt.offset)),
                            (Oe.encoding = new De(Oe.tables.cmap));
                          break;
                        case 'cvt ':
                          (rt = Xt(Me, et)),
                            (Le = new G.Parser(rt.data, rt.offset)),
                            (Oe.tables.cvt = Le.parseShortList(et.length / 2));
                          break;
                        case 'fvar':
                          I = et;
                          break;
                        case 'fpgm':
                          (rt = Xt(Me, et)),
                            (Le = new G.Parser(rt.data, rt.offset)),
                            (Oe.tables.fpgm = Le.parseByteList(et.length));
                          break;
                        case 'head':
                          (rt = Xt(Me, et)),
                            (Oe.tables.head = Ye.parse(rt.data, rt.offset)),
                            (Oe.unitsPerEm = Oe.tables.head.unitsPerEm),
                            (b = Oe.tables.head.indexToLocFormat);
                          break;
                        case 'hhea':
                          (rt = Xt(Me, et)),
                            (Oe.tables.hhea = Pe.parse(rt.data, rt.offset)),
                            (Oe.ascender = Oe.tables.hhea.ascender),
                            (Oe.descender = Oe.tables.hhea.descender),
                            (Oe.numberOfHMetrics =
                              Oe.tables.hhea.numberOfHMetrics);
                          break;
                        case 'hmtx':
                          se = et;
                          break;
                        case 'ltag':
                          (rt = Xt(Me, et)), (x = bt.parse(rt.data, rt.offset));
                          break;
                        case 'maxp':
                          (rt = Xt(Me, et)),
                            (Oe.tables.maxp = xt.parse(rt.data, rt.offset)),
                            (Oe.numGlyphs = Oe.tables.maxp.numGlyphs);
                          break;
                        case 'name':
                          te = et;
                          break;
                        case 'OS/2':
                          (rt = Xt(Me, et)),
                            (Oe.tables.os2 = Mo.parse(rt.data, rt.offset));
                          break;
                        case 'post':
                          (rt = Xt(Me, et)),
                            (Oe.tables.post = Ci.parse(rt.data, rt.offset)),
                            (Oe.glyphNames = new Be(Oe.tables.post));
                          break;
                        case 'prep':
                          (rt = Xt(Me, et)),
                            (Le = new G.Parser(rt.data, rt.offset)),
                            (Oe.tables.prep = Le.parseByteList(et.length));
                          break;
                        case 'glyf':
                          F = et;
                          break;
                        case 'loca':
                          be = et;
                          break;
                        case 'CFF ':
                          C = et;
                          break;
                        case 'kern':
                          pe = et;
                          break;
                        case 'GPOS':
                          q = et;
                          break;
                        case 'GSUB':
                          Y = et;
                          break;
                        case 'meta':
                          Ue = et;
                      }
                    }
                    var Nt = Xt(Me, te);
                    if (
                      ((Oe.tables.name = Ei.parse(Nt.data, Nt.offset, x)),
                      (Oe.names = Oe.tables.name),
                      F && be)
                    ) {
                      var pt = b === 0,
                        ht = Xt(Me, be),
                        mt = au.parse(ht.data, ht.offset, Oe.numGlyphs, pt),
                        St = Xt(Me, F);
                      Oe.glyphs = Wi.parse(St.data, St.offset, mt, Oe);
                    } else {
                      if (!C)
                        throw new Error(
                          "Font doesn't contain TrueType or CFF outlines.",
                        );
                      var _t = Xt(Me, C);
                      Ie.parse(_t.data, _t.offset, Oe);
                    }
                    var Dt = Xt(Me, se);
                    if (
                      (ft.parse(
                        Dt.data,
                        Dt.offset,
                        Oe.numberOfHMetrics,
                        Oe.numGlyphs,
                        Oe.glyphs,
                      ),
                      (function (vt) {
                        for (
                          var Wt,
                            Ct = vt.tables.cmap.glyphIndexMap,
                            At = Object.keys(Ct),
                            Er = 0;
                          Er < At.length;
                          Er += 1
                        ) {
                          var Rn = At[Er],
                            hn = Ct[Rn];
                          (Wt = vt.glyphs.get(hn)).addUnicode(parseInt(Rn));
                        }
                        for (var cr = 0; cr < vt.glyphs.length; cr += 1)
                          (Wt = vt.glyphs.get(cr)),
                            vt.cffEncoding
                              ? vt.isCIDFont
                                ? (Wt.name = 'gid' + cr)
                                : (Wt.name = vt.cffEncoding.charset[cr])
                              : vt.glyphNames.names &&
                                (Wt.name = vt.glyphNames.glyphIndexToName(cr));
                      })(Oe),
                      pe)
                    ) {
                      var Tt = Xt(Me, pe);
                      Oe.kerningPairs = iu.parse(Tt.data, Tt.offset);
                    } else Oe.kerningPairs = {};
                    if (q) {
                      var wt = Xt(Me, q);
                      (Oe.tables.gpos = ou.parse(wt.data, wt.offset)),
                        Oe.position.init();
                    }
                    if (Y) {
                      var It = Xt(Me, Y);
                      Oe.tables.gsub = Oi.parse(It.data, It.offset);
                    }
                    if (I) {
                      var jt = Xt(Me, I);
                      Oe.tables.fvar = nu.parse(jt.data, jt.offset, Oe.names);
                    }
                    if (Ue) {
                      var Bt = Xt(Me, Ue);
                      (Oe.tables.meta = Ai.parse(Bt.data, Bt.offset)),
                        (Oe.metas = Oe.tables.meta);
                    }
                    return Oe;
                  }
                  (l.Font = Et),
                    (l.Glyph = st),
                    (l.Path = oe),
                    (l.BoundingBox = Q),
                    (l._parse = G),
                    (l.parse = Do),
                    (l.load = function (f, b) {
                      (typeof window > 'u' ? lu : uu)(f, function (x, j) {
                        if (x) return b(x);
                        var C;
                        try {
                          C = Do(j);
                        } catch (I) {
                          return b(I, null);
                        }
                        return b(null, C);
                      });
                    }),
                    (l.loadSync = function (f) {
                      return Do(Fi(e('fs').readFileSync(f)));
                    }),
                    Object.defineProperty(l, '__esModule', { value: !0 });
                }),
                c(typeof y == 'object' && v !== void 0 ? y : (r.opentype = {}));
            }.call(this, e('buffer').Buffer));
          },
          { buffer: 4, fs: 2 },
        ],
        240: [
          function (e, v, y) {
            (function (m) {
              function r(h, u) {
                for (var o = 0, n = h.length - 1; 0 <= n; n--) {
                  var s = h[n];
                  s === '.'
                    ? h.splice(n, 1)
                    : s === '..'
                    ? (h.splice(n, 1), o++)
                    : o && (h.splice(n, 1), o--);
                }
                if (u) for (; o--; ) h.unshift('..');
                return h;
              }
              function c(h, u) {
                if (h.filter) return h.filter(u);
                for (var o = [], n = 0; n < h.length; n++)
                  u(h[n], n, h) && o.push(h[n]);
                return o;
              }
              (y.resolve = function () {
                for (
                  var h = '', u = !1, o = arguments.length - 1;
                  -1 <= o && !u;
                  o--
                ) {
                  var n = 0 <= o ? arguments[o] : m.cwd();
                  if (typeof n != 'string')
                    throw new TypeError(
                      'Arguments to path.resolve must be strings',
                    );
                  n && ((h = n + '/' + h), (u = n.charAt(0) === '/'));
                }
                return (
                  (u ? '/' : '') +
                    (h = r(
                      c(h.split('/'), function (s) {
                        return !!s;
                      }),
                      !u,
                    ).join('/')) || '.'
                );
              }),
                (y.normalize = function (h) {
                  var u = y.isAbsolute(h),
                    o = l(h, -1) === '/';
                  return (
                    (h = r(
                      c(h.split('/'), function (n) {
                        return !!n;
                      }),
                      !u,
                    ).join('/')) ||
                      u ||
                      (h = '.'),
                    h && o && (h += '/'),
                    (u ? '/' : '') + h
                  );
                }),
                (y.isAbsolute = function (h) {
                  return h.charAt(0) === '/';
                }),
                (y.join = function () {
                  var h = Array.prototype.slice.call(arguments, 0);
                  return y.normalize(
                    c(h, function (u, o) {
                      if (typeof u != 'string')
                        throw new TypeError(
                          'Arguments to path.join must be strings',
                        );
                      return u;
                    }).join('/'),
                  );
                }),
                (y.relative = function (h, u) {
                  function o(_) {
                    for (var w = 0; w < _.length && _[w] === ''; w++);
                    for (var S = _.length - 1; 0 <= S && _[S] === ''; S--);
                    return S < w ? [] : _.slice(w, S - w + 1);
                  }
                  (h = y.resolve(h).substr(1)), (u = y.resolve(u).substr(1));
                  for (
                    var n = o(h.split('/')),
                      s = o(u.split('/')),
                      i = Math.min(n.length, s.length),
                      a = i,
                      d = 0;
                    d < i;
                    d++
                  )
                    if (n[d] !== s[d]) {
                      a = d;
                      break;
                    }
                  var g = [];
                  for (d = a; d < n.length; d++) g.push('..');
                  return (g = g.concat(s.slice(a))).join('/');
                }),
                (y.sep = '/'),
                (y.delimiter = ':'),
                (y.dirname = function (h) {
                  if ((typeof h != 'string' && (h += ''), h.length === 0))
                    return '.';
                  for (
                    var u = h.charCodeAt(0),
                      o = u === 47,
                      n = -1,
                      s = !0,
                      i = h.length - 1;
                    1 <= i;
                    --i
                  )
                    if ((u = h.charCodeAt(i)) === 47) {
                      if (!s) {
                        n = i;
                        break;
                      }
                    } else s = !1;
                  return n === -1
                    ? o
                      ? '/'
                      : '.'
                    : o && n === 1
                    ? '/'
                    : h.slice(0, n);
                }),
                (y.basename = function (h, u) {
                  var o = (function (n) {
                    typeof n != 'string' && (n += '');
                    var s,
                      i = 0,
                      a = -1,
                      d = !0;
                    for (s = n.length - 1; 0 <= s; --s)
                      if (n.charCodeAt(s) === 47) {
                        if (!d) {
                          i = s + 1;
                          break;
                        }
                      } else a === -1 && ((d = !1), (a = s + 1));
                    return a === -1 ? '' : n.slice(i, a);
                  })(h);
                  return (
                    u &&
                      o.substr(-1 * u.length) === u &&
                      (o = o.substr(0, o.length - u.length)),
                    o
                  );
                }),
                (y.extname = function (h) {
                  typeof h != 'string' && (h += '');
                  for (
                    var u = -1, o = 0, n = -1, s = !0, i = 0, a = h.length - 1;
                    0 <= a;
                    --a
                  ) {
                    var d = h.charCodeAt(a);
                    if (d === 47) {
                      if (s) continue;
                      o = a + 1;
                      break;
                    }
                    n === -1 && ((s = !1), (n = a + 1)),
                      d === 46
                        ? u === -1
                          ? (u = a)
                          : i !== 1 && (i = 1)
                        : u !== -1 && (i = -1);
                  }
                  return u === -1 ||
                    n === -1 ||
                    i === 0 ||
                    (i === 1 && u === n - 1 && u === o + 1)
                    ? ''
                    : h.slice(u, n);
                });
              var l =
                'ab'.substr(-1) === 'b'
                  ? function (h, u, o) {
                      return h.substr(u, o);
                    }
                  : function (h, u, o) {
                      return u < 0 && (u = h.length + u), h.substr(u, o);
                    };
            }.call(this, e('_process')));
          },
          { _process: 241 },
        ],
        241: [
          function (e, v, y) {
            var m,
              r,
              c = (v.exports = {});
            function l() {
              throw new Error('setTimeout has not been defined');
            }
            function h() {
              throw new Error('clearTimeout has not been defined');
            }
            function u(w) {
              if (m === setTimeout) return setTimeout(w, 0);
              if ((m === l || !m) && setTimeout)
                return (m = setTimeout), setTimeout(w, 0);
              try {
                return m(w, 0);
              } catch {
                try {
                  return m.call(null, w, 0);
                } catch {
                  return m.call(this, w, 0);
                }
              }
            }
            (function () {
              try {
                m = typeof setTimeout == 'function' ? setTimeout : l;
              } catch {
                m = l;
              }
              try {
                r = typeof clearTimeout == 'function' ? clearTimeout : h;
              } catch {
                r = h;
              }
            })();
            var o,
              n = [],
              s = !1,
              i = -1;
            function a() {
              s &&
                o &&
                ((s = !1),
                o.length ? (n = o.concat(n)) : (i = -1),
                n.length && d());
            }
            function d() {
              if (!s) {
                var w = u(a);
                s = !0;
                for (var S = n.length; S; ) {
                  for (o = n, n = []; ++i < S; ) o && o[i].run();
                  (i = -1), (S = n.length);
                }
                (o = null),
                  (s = !1),
                  (function (M) {
                    if (r === clearTimeout) return clearTimeout(M);
                    if ((r === h || !r) && clearTimeout)
                      return (r = clearTimeout), clearTimeout(M);
                    try {
                      r(M);
                    } catch {
                      try {
                        return r.call(null, M);
                      } catch {
                        return r.call(this, M);
                      }
                    }
                  })(w);
              }
            }
            function g(w, S) {
              (this.fun = w), (this.array = S);
            }
            function _() {}
            (c.nextTick = function (w) {
              var S = new Array(arguments.length - 1);
              if (1 < arguments.length)
                for (var M = 1; M < arguments.length; M++)
                  S[M - 1] = arguments[M];
              n.push(new g(w, S)), n.length !== 1 || s || u(d);
            }),
              (g.prototype.run = function () {
                this.fun.apply(null, this.array);
              }),
              (c.title = 'browser'),
              (c.browser = !0),
              (c.env = {}),
              (c.argv = []),
              (c.version = ''),
              (c.versions = {}),
              (c.on = _),
              (c.addListener = _),
              (c.once = _),
              (c.off = _),
              (c.removeListener = _),
              (c.removeAllListeners = _),
              (c.emit = _),
              (c.prependListener = _),
              (c.prependOnceListener = _),
              (c.listeners = function (w) {
                return [];
              }),
              (c.binding = function (w) {
                throw new Error('process.binding is not supported');
              }),
              (c.cwd = function () {
                return '/';
              }),
              (c.chdir = function (w) {
                throw new Error('process.chdir is not supported');
              }),
              (c.umask = function () {
                return 0;
              });
          },
          {},
        ],
        242: [
          function (e, v, y) {
            (function (m) {
              if (!m.fetch) {
                var r = 'URLSearchParams' in m,
                  c = 'Symbol' in m && 'iterator' in Symbol,
                  l =
                    'FileReader' in m &&
                    'Blob' in m &&
                    (function () {
                      try {
                        return new Blob(), !0;
                      } catch {
                        return !1;
                      }
                    })(),
                  h = 'FormData' in m,
                  u = 'ArrayBuffer' in m;
                if (u)
                  var o = [
                      '[object Int8Array]',
                      '[object Uint8Array]',
                      '[object Uint8ClampedArray]',
                      '[object Int16Array]',
                      '[object Uint16Array]',
                      '[object Int32Array]',
                      '[object Uint32Array]',
                      '[object Float32Array]',
                      '[object Float64Array]',
                    ],
                    n = function (R) {
                      return R && DataView.prototype.isPrototypeOf(R);
                    },
                    s =
                      ArrayBuffer.isView ||
                      function (R) {
                        return (
                          R && -1 < o.indexOf(Object.prototype.toString.call(R))
                        );
                      };
                (w.prototype.append = function (R, N) {
                  (R = d(R)), (N = g(N));
                  var B = this.map[R];
                  this.map[R] = B ? B + ',' + N : N;
                }),
                  (w.prototype.delete = function (R) {
                    delete this.map[d(R)];
                  }),
                  (w.prototype.get = function (R) {
                    return (R = d(R)), this.has(R) ? this.map[R] : null;
                  }),
                  (w.prototype.has = function (R) {
                    return this.map.hasOwnProperty(d(R));
                  }),
                  (w.prototype.set = function (R, N) {
                    this.map[d(R)] = g(N);
                  }),
                  (w.prototype.forEach = function (R, N) {
                    for (var B in this.map)
                      this.map.hasOwnProperty(B) &&
                        R.call(N, this.map[B], B, this);
                  }),
                  (w.prototype.keys = function () {
                    var R = [];
                    return (
                      this.forEach(function (N, B) {
                        R.push(B);
                      }),
                      _(R)
                    );
                  }),
                  (w.prototype.values = function () {
                    var R = [];
                    return (
                      this.forEach(function (N) {
                        R.push(N);
                      }),
                      _(R)
                    );
                  }),
                  (w.prototype.entries = function () {
                    var R = [];
                    return (
                      this.forEach(function (N, B) {
                        R.push([B, N]);
                      }),
                      _(R)
                    );
                  }),
                  c && (w.prototype[Symbol.iterator] = w.prototype.entries);
                var i = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];
                (A.prototype.clone = function () {
                  return new A(this, { body: this._bodyInit });
                }),
                  D.call(A.prototype),
                  D.call(L.prototype),
                  (L.prototype.clone = function () {
                    return new L(this._bodyInit, {
                      status: this.status,
                      statusText: this.statusText,
                      headers: new w(this.headers),
                      url: this.url,
                    });
                  }),
                  (L.error = function () {
                    var R = new L(null, { status: 0, statusText: '' });
                    return (R.type = 'error'), R;
                  });
                var a = [301, 302, 303, 307, 308];
                (L.redirect = function (R, N) {
                  if (a.indexOf(N) === -1)
                    throw new RangeError('Invalid status code');
                  return new L(null, { status: N, headers: { location: R } });
                }),
                  (m.Headers = w),
                  (m.Request = A),
                  (m.Response = L),
                  (m.fetch = function (R, N) {
                    return new Promise(function (B, Z) {
                      var J = new A(R, N),
                        $ = new XMLHttpRequest();
                      ($.onload = function () {
                        var ee,
                          Q,
                          oe = {
                            status: $.status,
                            statusText: $.statusText,
                            headers:
                              ((ee = $.getAllResponseHeaders() || ''),
                              (Q = new w()),
                              ee
                                .replace(/\r?\n[\t ]+/g, ' ')
                                .split(/\r?\n/)
                                .forEach(function (ve) {
                                  var de = ve.split(':'),
                                    Se = de.shift().trim();
                                  if (Se) {
                                    var fe = de.join(':').trim();
                                    Q.append(Se, fe);
                                  }
                                }),
                              Q),
                          };
                        oe.url =
                          'responseURL' in $
                            ? $.responseURL
                            : oe.headers.get('X-Request-URL');
                        var ce = 'response' in $ ? $.response : $.responseText;
                        B(new L(ce, oe));
                      }),
                        ($.onerror = function () {
                          Z(new TypeError('Network request failed'));
                        }),
                        ($.ontimeout = function () {
                          Z(new TypeError('Network request failed'));
                        }),
                        $.open(J.method, J.url, !0),
                        J.credentials === 'include'
                          ? ($.withCredentials = !0)
                          : J.credentials === 'omit' &&
                            ($.withCredentials = !1),
                        'responseType' in $ && l && ($.responseType = 'blob'),
                        J.headers.forEach(function (ee, Q) {
                          $.setRequestHeader(Q, ee);
                        }),
                        $.send(J._bodyInit === void 0 ? null : J._bodyInit);
                    });
                  }),
                  (m.fetch.polyfill = !0);
              }
              function d(R) {
                if (
                  (typeof R != 'string' && (R = String(R)),
                  /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(R))
                )
                  throw new TypeError('Invalid character in header field name');
                return R.toLowerCase();
              }
              function g(R) {
                return typeof R != 'string' && (R = String(R)), R;
              }
              function _(R) {
                var N = {
                  next: function () {
                    var B = R.shift();
                    return { done: B === void 0, value: B };
                  },
                };
                return (
                  c &&
                    (N[Symbol.iterator] = function () {
                      return N;
                    }),
                  N
                );
              }
              function w(R) {
                (this.map = {}),
                  R instanceof w
                    ? R.forEach(function (N, B) {
                        this.append(B, N);
                      }, this)
                    : Array.isArray(R)
                    ? R.forEach(function (N) {
                        this.append(N[0], N[1]);
                      }, this)
                    : R &&
                      Object.getOwnPropertyNames(R).forEach(function (N) {
                        this.append(N, R[N]);
                      }, this);
              }
              function S(R) {
                if (R.bodyUsed)
                  return Promise.reject(new TypeError('Already read'));
                R.bodyUsed = !0;
              }
              function M(R) {
                return new Promise(function (N, B) {
                  (R.onload = function () {
                    N(R.result);
                  }),
                    (R.onerror = function () {
                      B(R.error);
                    });
                });
              }
              function E(R) {
                var N = new FileReader(),
                  B = M(N);
                return N.readAsArrayBuffer(R), B;
              }
              function O(R) {
                if (R.slice) return R.slice(0);
                var N = new Uint8Array(R.byteLength);
                return N.set(new Uint8Array(R)), N.buffer;
              }
              function D() {
                return (
                  (this.bodyUsed = !1),
                  (this._initBody = function (R) {
                    if ((this._bodyInit = R))
                      if (typeof R == 'string') this._bodyText = R;
                      else if (l && Blob.prototype.isPrototypeOf(R))
                        this._bodyBlob = R;
                      else if (h && FormData.prototype.isPrototypeOf(R))
                        this._bodyFormData = R;
                      else if (r && URLSearchParams.prototype.isPrototypeOf(R))
                        this._bodyText = R.toString();
                      else if (u && l && n(R))
                        (this._bodyArrayBuffer = O(R.buffer)),
                          (this._bodyInit = new Blob([this._bodyArrayBuffer]));
                      else {
                        if (
                          !u ||
                          (!ArrayBuffer.prototype.isPrototypeOf(R) && !s(R))
                        )
                          throw new Error('unsupported BodyInit type');
                        this._bodyArrayBuffer = O(R);
                      }
                    else this._bodyText = '';
                    this.headers.get('content-type') ||
                      (typeof R == 'string'
                        ? this.headers.set(
                            'content-type',
                            'text/plain;charset=UTF-8',
                          )
                        : this._bodyBlob && this._bodyBlob.type
                        ? this.headers.set('content-type', this._bodyBlob.type)
                        : r &&
                          URLSearchParams.prototype.isPrototypeOf(R) &&
                          this.headers.set(
                            'content-type',
                            'application/x-www-form-urlencoded;charset=UTF-8',
                          ));
                  }),
                  l &&
                    ((this.blob = function () {
                      var R = S(this);
                      if (R) return R;
                      if (this._bodyBlob)
                        return Promise.resolve(this._bodyBlob);
                      if (this._bodyArrayBuffer)
                        return Promise.resolve(
                          new Blob([this._bodyArrayBuffer]),
                        );
                      if (this._bodyFormData)
                        throw new Error('could not read FormData body as blob');
                      return Promise.resolve(new Blob([this._bodyText]));
                    }),
                    (this.arrayBuffer = function () {
                      return this._bodyArrayBuffer
                        ? S(this) || Promise.resolve(this._bodyArrayBuffer)
                        : this.blob().then(E);
                    })),
                  (this.text = function () {
                    var R,
                      N,
                      B,
                      Z = S(this);
                    if (Z) return Z;
                    if (this._bodyBlob)
                      return (
                        (R = this._bodyBlob),
                        (N = new FileReader()),
                        (B = M(N)),
                        N.readAsText(R),
                        B
                      );
                    if (this._bodyArrayBuffer)
                      return Promise.resolve(
                        (function (J) {
                          for (
                            var $ = new Uint8Array(J),
                              ee = new Array($.length),
                              Q = 0;
                            Q < $.length;
                            Q++
                          )
                            ee[Q] = String.fromCharCode($[Q]);
                          return ee.join('');
                        })(this._bodyArrayBuffer),
                      );
                    if (this._bodyFormData)
                      throw new Error('could not read FormData body as text');
                    return Promise.resolve(this._bodyText);
                  }),
                  h &&
                    (this.formData = function () {
                      return this.text().then(k);
                    }),
                  (this.json = function () {
                    return this.text().then(JSON.parse);
                  }),
                  this
                );
              }
              function A(R, N) {
                var B,
                  Z,
                  J = (N = N || {}).body;
                if (R instanceof A) {
                  if (R.bodyUsed) throw new TypeError('Already read');
                  (this.url = R.url),
                    (this.credentials = R.credentials),
                    N.headers || (this.headers = new w(R.headers)),
                    (this.method = R.method),
                    (this.mode = R.mode),
                    J ||
                      R._bodyInit == null ||
                      ((J = R._bodyInit), (R.bodyUsed = !0));
                } else this.url = String(R);
                if (
                  ((this.credentials =
                    N.credentials || this.credentials || 'omit'),
                  (!N.headers && this.headers) ||
                    (this.headers = new w(N.headers)),
                  (this.method =
                    ((B = N.method || this.method || 'GET'),
                    (Z = B.toUpperCase()),
                    -1 < i.indexOf(Z) ? Z : B)),
                  (this.mode = N.mode || this.mode || null),
                  (this.referrer = null),
                  (this.method === 'GET' || this.method === 'HEAD') && J)
                )
                  throw new TypeError(
                    'Body not allowed for GET or HEAD requests',
                  );
                this._initBody(J);
              }
              function k(R) {
                var N = new FormData();
                return (
                  R.trim()
                    .split('&')
                    .forEach(function (B) {
                      if (B) {
                        var Z = B.split('='),
                          J = Z.shift().replace(/\+/g, ' '),
                          $ = Z.join('=').replace(/\+/g, ' ');
                        N.append(decodeURIComponent(J), decodeURIComponent($));
                      }
                    }),
                  N
                );
              }
              function L(R, N) {
                (N = N || {}),
                  (this.type = 'default'),
                  (this.status = N.status === void 0 ? 200 : N.status),
                  (this.ok = 200 <= this.status && this.status < 300),
                  (this.statusText = 'statusText' in N ? N.statusText : 'OK'),
                  (this.headers = new w(N.headers)),
                  (this.url = N.url || ''),
                  this._initBody(R);
              }
            })(typeof self < 'u' ? self : this);
          },
          {},
        ],
        243: [
          function (e, v, y) {
            e('core-js/modules/es.function.name'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = l(e('../core/main')),
              c = l(e('../color/color_conversion'));
            function l(n) {
              return n && n.__esModule ? n : { default: n };
            }
            var h = [
                { h: 0, s: 0, b: 0.8275, name: 'gray' },
                { h: 0, s: 0, b: 0.8627, name: 'gray' },
                { h: 0, s: 0, b: 0.7529, name: 'gray' },
                { h: 0.0167, s: 0.1176, b: 1, name: 'light pink' },
              ],
              u = [
                { h: 0, s: 0, b: 0, name: 'black' },
                { h: 0, s: 0, b: 0.5, name: 'gray' },
                { h: 0, s: 0, b: 1, name: 'white' },
                { h: 0, s: 0.5, b: 0.5, name: 'dark maroon' },
                { h: 0, s: 0.5, b: 1, name: 'salmon pink' },
                { h: 0, s: 1, b: 0, name: 'black' },
                { h: 0, s: 1, b: 0.5, name: 'dark red' },
                { h: 0, s: 1, b: 1, name: 'red' },
                { h: 5, s: 0, b: 1, name: 'very light peach' },
                { h: 5, s: 0.5, b: 0.5, name: 'brown' },
                { h: 5, s: 0.5, b: 1, name: 'peach' },
                { h: 5, s: 1, b: 0.5, name: 'brick red' },
                { h: 5, s: 1, b: 1, name: 'crimson' },
                { h: 10, s: 0, b: 1, name: 'light peach' },
                { h: 10, s: 0.5, b: 0.5, name: 'brown' },
                { h: 10, s: 0.5, b: 1, name: 'light orange' },
                { h: 10, s: 1, b: 0.5, name: 'brown' },
                { h: 10, s: 1, b: 1, name: 'orange' },
                { h: 15, s: 0, b: 1, name: 'very light yellow' },
                { h: 15, s: 0.5, b: 0.5, name: 'olive green' },
                { h: 15, s: 0.5, b: 1, name: 'light yellow' },
                { h: 15, s: 1, b: 0, name: 'dark olive green' },
                { h: 15, s: 1, b: 0.5, name: 'olive green' },
                { h: 15, s: 1, b: 1, name: 'yellow' },
                { h: 20, s: 0, b: 1, name: 'very light yellow' },
                { h: 20, s: 0.5, b: 0.5, name: 'olive green' },
                { h: 20, s: 0.5, b: 1, name: 'light yellow green' },
                { h: 20, s: 1, b: 0, name: 'dark olive green' },
                { h: 20, s: 1, b: 0.5, name: 'dark yellow green' },
                { h: 20, s: 1, b: 1, name: 'yellow green' },
                { h: 25, s: 0.5, b: 0.5, name: 'dark yellow green' },
                { h: 25, s: 0.5, b: 1, name: 'light green' },
                { h: 25, s: 1, b: 0.5, name: 'dark green' },
                { h: 25, s: 1, b: 1, name: 'green' },
                { h: 30, s: 0.5, b: 1, name: 'light green' },
                { h: 30, s: 1, b: 0.5, name: 'dark green' },
                { h: 30, s: 1, b: 1, name: 'green' },
                { h: 35, s: 0, b: 0.5, name: 'light green' },
                { h: 35, s: 0, b: 1, name: 'very light green' },
                { h: 35, s: 0.5, b: 0.5, name: 'dark green' },
                { h: 35, s: 0.5, b: 1, name: 'light green' },
                { h: 35, s: 1, b: 0, name: 'very dark green' },
                { h: 35, s: 1, b: 0.5, name: 'dark green' },
                { h: 35, s: 1, b: 1, name: 'green' },
                { h: 40, s: 0, b: 1, name: 'very light green' },
                { h: 40, s: 0.5, b: 0.5, name: 'dark green' },
                { h: 40, s: 0.5, b: 1, name: 'light green' },
                { h: 40, s: 1, b: 0.5, name: 'dark green' },
                { h: 40, s: 1, b: 1, name: 'green' },
                { h: 45, s: 0.5, b: 1, name: 'light turquoise' },
                { h: 45, s: 1, b: 0.5, name: 'dark turquoise' },
                { h: 45, s: 1, b: 1, name: 'turquoise' },
                { h: 50, s: 0, b: 1, name: 'light sky blue' },
                { h: 50, s: 0.5, b: 0.5, name: 'dark cyan' },
                { h: 50, s: 0.5, b: 1, name: 'light cyan' },
                { h: 50, s: 1, b: 0.5, name: 'dark cyan' },
                { h: 50, s: 1, b: 1, name: 'cyan' },
                { h: 55, s: 0, b: 1, name: 'light sky blue' },
                { h: 55, s: 0.5, b: 1, name: 'light sky blue' },
                { h: 55, s: 1, b: 0.5, name: 'dark blue' },
                { h: 55, s: 1, b: 1, name: 'sky blue' },
                { h: 60, s: 0, b: 0.5, name: 'gray' },
                { h: 60, s: 0, b: 1, name: 'very light blue' },
                { h: 60, s: 0.5, b: 0.5, name: 'blue' },
                { h: 60, s: 0.5, b: 1, name: 'light blue' },
                { h: 60, s: 1, b: 0.5, name: 'navy blue' },
                { h: 60, s: 1, b: 1, name: 'blue' },
                { h: 65, s: 0, b: 1, name: 'lavender' },
                { h: 65, s: 0.5, b: 0.5, name: 'navy blue' },
                { h: 65, s: 0.5, b: 1, name: 'light purple' },
                { h: 65, s: 1, b: 0.5, name: 'dark navy blue' },
                { h: 65, s: 1, b: 1, name: 'blue' },
                { h: 70, s: 0, b: 1, name: 'lavender' },
                { h: 70, s: 0.5, b: 0.5, name: 'navy blue' },
                { h: 70, s: 0.5, b: 1, name: 'lavender blue' },
                { h: 70, s: 1, b: 0.5, name: 'dark navy blue' },
                { h: 70, s: 1, b: 1, name: 'blue' },
                { h: 75, s: 0.5, b: 1, name: 'lavender' },
                { h: 75, s: 1, b: 0.5, name: 'dark purple' },
                { h: 75, s: 1, b: 1, name: 'purple' },
                { h: 80, s: 0.5, b: 1, name: 'pinkish purple' },
                { h: 80, s: 1, b: 0.5, name: 'dark purple' },
                { h: 80, s: 1, b: 1, name: 'purple' },
                { h: 85, s: 0, b: 1, name: 'light pink' },
                { h: 85, s: 0.5, b: 0.5, name: 'purple' },
                { h: 85, s: 0.5, b: 1, name: 'light fuchsia' },
                { h: 85, s: 1, b: 0.5, name: 'dark fuchsia' },
                { h: 85, s: 1, b: 1, name: 'fuchsia' },
                { h: 90, s: 0.5, b: 0.5, name: 'dark fuchsia' },
                { h: 90, s: 0.5, b: 1, name: 'hot pink' },
                { h: 90, s: 1, b: 0.5, name: 'dark fuchsia' },
                { h: 90, s: 1, b: 1, name: 'fuchsia' },
                { h: 95, s: 0, b: 1, name: 'pink' },
                { h: 95, s: 0.5, b: 1, name: 'light pink' },
                { h: 95, s: 1, b: 0.5, name: 'dark magenta' },
                { h: 95, s: 1, b: 1, name: 'magenta' },
              ];
            r.default.prototype._rgbColorName = function (n) {
              var s = c.default._rgbaToHSBA(n);
              return (function (i) {
                var a;
                if (i[0] !== 0) {
                  i[0] = Math.round(100 * i[0]);
                  var d = i[0].toString().split(''),
                    g = d.length - 1;
                  (d[g] = parseInt(d[g])),
                    d[g] < 2.5
                      ? (d[g] = 0)
                      : 2.5 <= d[g] && d[g] < 7.5 && (d[g] = 5),
                    d.length === 2
                      ? ((d[0] = parseInt(d[0])),
                        7.5 <= d[g] && ((d[g] = 0), (d[0] = d[0] + 1)),
                        (i[0] = 10 * d[0] + d[1]))
                      : 7.5 <= d[g]
                      ? (i[0] = 10)
                      : (i[0] = d[g]);
                }
                i[2] = i[2] / 255;
                for (var _ = i.length - 1; 1 <= _; _--)
                  i[_] <= 0.25
                    ? (i[_] = 0)
                    : 0.25 < i[_] && i[_] < 0.75
                    ? (i[_] = 0.5)
                    : (i[_] = 1);
                if (i[0] === 0 && i[1] === 0 && i[2] === 1) {
                  for (var w = 2; 0 <= w; w--)
                    m[w] = Math.round(1e4 * m[w]) / 1e4;
                  for (var S = 0; S < h.length; S++) {
                    if (h[S].h === m[0] && h[S].s === m[1] && h[S].b === m[2]) {
                      a = h[S].name;
                      break;
                    }
                    a = 'white';
                  }
                } else
                  for (var M = 0; M < u.length; M++)
                    if (u[M].h === i[0] && u[M].s === i[1] && u[M].b === i[2]) {
                      a = u[M].name;
                      break;
                    }
                return a;
              })([(m = s)[0], s[1], s[2]]);
            };
            var o = r.default;
            y.default = o;
          },
          {
            '../color/color_conversion': 249,
            '../core/main': 264,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.split': 191,
          },
        ],
        244: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.ends-with'),
              e('core-js/modules/es.string.replace'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m },
              c = '_Description',
              l = '_fallbackDesc',
              h = '_fallbackTable',
              u = '_Label',
              o = '_labelDesc',
              n = '_labelTable';
            function s(a) {
              if (a === 'label' || a === 'fallback')
                throw new Error('description should not be LABEL or FALLBACK');
              return (
                a.endsWith('.') ||
                  a.endsWith(';') ||
                  a.endsWith(',') ||
                  a.endsWith('?') ||
                  a.endsWith('!') ||
                  (a += '.'),
                a
              );
            }
            (r.default.prototype.describe = function (a, d) {
              if (
                (r.default._validateParameters('describe', arguments),
                typeof a == 'string')
              ) {
                var g = this.canvas.id;
                (a = s(a)),
                  this.dummyDOM ||
                    (this.dummyDOM = document.getElementById(g).parentNode),
                  this.descriptions || (this.descriptions = {}),
                  this.descriptions.fallback
                    ? this.descriptions.fallback.innerHTML !== a &&
                      (this.descriptions.fallback.innerHTML = a)
                    : this._describeHTML('fallback', a),
                  d === this.LABEL &&
                    (this.descriptions.label
                      ? this.descriptions.label.innerHTML !== a &&
                        (this.descriptions.label.innerHTML = a)
                      : this._describeHTML('label', a));
              }
            }),
              (r.default.prototype.describeElement = function (a, d, g) {
                if (
                  (r.default._validateParameters('describeElement', arguments),
                  typeof d == 'string' && typeof a == 'string')
                ) {
                  var _ = this.canvas.id;
                  d = s(d);
                  var w = (function (M) {
                    if (M === 'label' || M === 'fallback')
                      throw new Error(
                        'element name should not be LABEL or FALLBACK',
                      );
                    return (
                      M.endsWith('.') || M.endsWith(';') || M.endsWith(',')
                        ? (M = M.replace(/.$/, ':'))
                        : M.endsWith(':') || (M += ':'),
                      M
                    );
                  })(a);
                  a = a.replace(/[^a-zA-Z0-9]/g, '');
                  var S = '<th scope="row">'
                    .concat(w, '</th><td>')
                    .concat(d, '</td>');
                  this.dummyDOM ||
                    (this.dummyDOM = document.getElementById(_).parentNode),
                    this.descriptions
                      ? this.descriptions.fallbackElements ||
                        (this.descriptions.fallbackElements = {})
                      : (this.descriptions = { fallbackElements: {} }),
                    this.descriptions.fallbackElements[a]
                      ? this.descriptions.fallbackElements[a].innerHTML !== S &&
                        (this.descriptions.fallbackElements[a].innerHTML = S)
                      : this._describeElementHTML('fallback', a, S),
                    g === this.LABEL &&
                      (this.descriptions.labelElements ||
                        (this.descriptions.labelElements = {}),
                      this.descriptions.labelElements[a]
                        ? this.descriptions.labelElements[a].innerHTML !== S &&
                          (this.descriptions.labelElements[a].innerHTML = S)
                        : this._describeElementHTML('label', a, S));
                }
              }),
              (r.default.prototype._describeHTML = function (a, d) {
                var g = this.canvas.id;
                if (a === 'fallback') {
                  if (this.dummyDOM.querySelector('#'.concat(g + c)))
                    this.dummyDOM
                      .querySelector('#' + g + h)
                      .insertAdjacentHTML(
                        'beforebegin',
                        '<p id="'.concat(g + l, '"></p>'),
                      );
                  else {
                    var _ = '<div id="'
                      .concat(g)
                      .concat(
                        c,
                        '" role="region" aria-label="Canvas Description"><p id="',
                      )
                      .concat(g)
                      .concat(l, '"></p></div>');
                    this.dummyDOM.querySelector(
                      '#'.concat(g, 'accessibleOutput'),
                    )
                      ? this.dummyDOM
                          .querySelector('#'.concat(g, 'accessibleOutput'))
                          .insertAdjacentHTML('beforebegin', _)
                      : (this.dummyDOM.querySelector('#'.concat(g)).innerHTML =
                          _);
                  }
                  return (
                    (this.descriptions.fallback = this.dummyDOM.querySelector(
                      '#'.concat(g).concat(l),
                    )),
                    void (this.descriptions.fallback.innerHTML = d)
                  );
                }
                if (a === 'label') {
                  if (this.dummyDOM.querySelector('#'.concat(g + u)))
                    this.dummyDOM.querySelector('#'.concat(g + n)) &&
                      this.dummyDOM
                        .querySelector('#'.concat(g + n))
                        .insertAdjacentHTML(
                          'beforebegin',
                          '<p id="'.concat(g).concat(o, '"></p>'),
                        );
                  else {
                    var w = '<div id="'
                      .concat(g)
                      .concat(u, '" class="p5Label"><p id="')
                      .concat(g)
                      .concat(o, '"></p></div>');
                    this.dummyDOM.querySelector(
                      '#'.concat(g, 'accessibleOutputLabel'),
                    )
                      ? this.dummyDOM
                          .querySelector('#'.concat(g, 'accessibleOutputLabel'))
                          .insertAdjacentHTML('beforebegin', w)
                      : this.dummyDOM
                          .querySelector('#' + g)
                          .insertAdjacentHTML('afterend', w);
                  }
                  return (
                    (this.descriptions.label = this.dummyDOM.querySelector(
                      '#' + g + o,
                    )),
                    void (this.descriptions.label.innerHTML = d)
                  );
                }
              }),
              (r.default.prototype._describeElementHTML = function (a, d, g) {
                var _ = this.canvas.id;
                if (a === 'fallback') {
                  if (this.dummyDOM.querySelector('#'.concat(_ + c)))
                    this.dummyDOM.querySelector('#' + _ + h) ||
                      this.dummyDOM
                        .querySelector('#' + _ + l)
                        .insertAdjacentHTML(
                          'afterend',
                          '<table id="'
                            .concat(_)
                            .concat(
                              h,
                              '"><caption>Canvas elements and their descriptions</caption></table>',
                            ),
                        );
                  else {
                    var w = '<div id="'
                      .concat(_)
                      .concat(
                        c,
                        '" role="region" aria-label="Canvas Description"><table id="',
                      )
                      .concat(_)
                      .concat(
                        h,
                        '"><caption>Canvas elements and their descriptions</caption></table></div>',
                      );
                    this.dummyDOM.querySelector(
                      '#'.concat(_, 'accessibleOutput'),
                    )
                      ? this.dummyDOM
                          .querySelector('#'.concat(_, 'accessibleOutput'))
                          .insertAdjacentHTML('beforebegin', w)
                      : (this.dummyDOM.querySelector('#' + _).innerHTML = w);
                  }
                  var S = document.createElement('tr');
                  return (
                    (S.id = _ + '_fte_' + d),
                    this.dummyDOM.querySelector('#' + _ + h).appendChild(S),
                    (this.descriptions.fallbackElements[d] =
                      this.dummyDOM.querySelector(
                        '#'.concat(_).concat('_fte_').concat(d),
                      )),
                    void (this.descriptions.fallbackElements[d].innerHTML = g)
                  );
                }
                if (a === 'label') {
                  if (this.dummyDOM.querySelector('#'.concat(_ + u)))
                    this.dummyDOM.querySelector('#'.concat(_ + n)) ||
                      this.dummyDOM
                        .querySelector('#' + _ + o)
                        .insertAdjacentHTML(
                          'afterend',
                          '<table id="'.concat(_ + n, '"></table>'),
                        );
                  else {
                    var M = '<div id="'
                      .concat(_)
                      .concat(u, '" class="p5Label"><table id="')
                      .concat(_)
                      .concat(n, '"></table></div>');
                    this.dummyDOM.querySelector(
                      '#'.concat(_, 'accessibleOutputLabel'),
                    )
                      ? this.dummyDOM
                          .querySelector('#'.concat(_, 'accessibleOutputLabel'))
                          .insertAdjacentHTML('beforebegin', M)
                      : this.dummyDOM
                          .querySelector('#' + _)
                          .insertAdjacentHTML('afterend', M);
                  }
                  var E = document.createElement('tr');
                  (E.id = _ + '_lte_' + d),
                    this.dummyDOM.querySelector('#' + _ + n).appendChild(E),
                    (this.descriptions.labelElements[d] =
                      this.dummyDOM.querySelector(
                        '#'.concat(_).concat('_lte_').concat(d),
                      )),
                    (this.descriptions.labelElements[d].innerHTML = g);
                }
              });
            var i = r.default;
            y.default = i;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.ends-with': 184,
            'core-js/modules/es.string.replace': 189,
          },
        ],
        245: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.map'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            r.default.prototype._updateGridOutput = function (l) {
              if (this.dummyDOM.querySelector('#'.concat(l, '_summary'))) {
                var h = this._accessibleOutputs[l],
                  u = (function (s, i) {
                    var a = '',
                      d = '',
                      g = 0;
                    for (var _ in i) {
                      var w = 0;
                      for (var S in i[_]) {
                        var M = '<li id="'
                          .concat(s, 'shape')
                          .concat(g, '">')
                          .concat(i[_][S].color, ' ')
                          .concat(_, ',');
                        _ === 'line'
                          ? (M += ' location = '
                              .concat(i[_][S].pos, ', length = ')
                              .concat(i[_][S].length, ' pixels'))
                          : ((M += ' location = '.concat(i[_][S].pos)),
                            _ !== 'point' &&
                              (M += ', area = '.concat(i[_][S].area, ' %')),
                            (M += '</li>')),
                          (a += M),
                          w++,
                          g++;
                      }
                      d =
                        1 < w
                          ? ''.concat(d, ' ').concat(w, ' ').concat(_, 's')
                          : ''.concat(d, ' ').concat(w, ' ').concat(_);
                    }
                    return { numShapes: [g, d], details: a };
                  })(l, this.ingredients.shapes),
                  o = (function (s, i, a, d) {
                    var g = ''
                      .concat(i, ' canvas, ')
                      .concat(a, ' by ')
                      .concat(d, ' pixels, contains ')
                      .concat(s[0]);
                    return (
                      (g =
                        s[0] === 1
                          ? ''.concat(g, ' shape: ').concat(s[1])
                          : ''.concat(g, ' shapes: ').concat(s[1])),
                      g
                    );
                  })(
                    u.numShapes,
                    this.ingredients.colors.background,
                    this.width,
                    this.height,
                  ),
                  n = (function (s, i) {
                    var a = 0,
                      d = '',
                      g = Array.apply(null, Array(10)).map(function () {});
                    for (var _ in g)
                      g[_] = Array.apply(null, Array(10)).map(function () {});
                    for (var w in i)
                      for (var S in i[w]) {
                        var M = void 0;
                        (M =
                          w !== 'line'
                            ? '<a href="#'
                                .concat(s, 'shape')
                                .concat(a, '">')
                                .concat(i[w][S].color, ' ')
                                .concat(w, '</a>')
                            : '<a href="#'
                                .concat(s, 'shape')
                                .concat(a, '">')
                                .concat(i[w][S].color, ' ')
                                .concat(w, ' midpoint</a>')),
                          g[i[w][S].loc.locY][i[w][S].loc.locX]
                            ? (g[i[w][S].loc.locY][i[w][S].loc.locX] =
                                g[i[w][S].loc.locY][i[w][S].loc.locX] +
                                '  ' +
                                M)
                            : (g[i[w][S].loc.locY][i[w][S].loc.locX] = M),
                          a++;
                      }
                    for (var E in g) {
                      var O = '<tr>';
                      for (var D in g[E])
                        (O += '<td>'),
                          g[E][D] !== void 0 && (O += g[E][D]),
                          (O += '</td>');
                      d = d + O + '</tr>';
                    }
                    return d;
                  })(l, this.ingredients.shapes);
                o !== h.summary.innerHTML && (h.summary.innerHTML = o),
                  n !== h.map.innerHTML && (h.map.innerHTML = n),
                  u.details !== h.shapeDetails.innerHTML &&
                    (h.shapeDetails.innerHTML = u.details),
                  (this._accessibleOutputs[l] = h);
              }
            };
            var c = r.default;
            y.default = c;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.map': 161,
          },
        ],
        246: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.fill'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.number.to-fixed'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(u, o, n) {
              return u[0] < 0.4 * o
                ? u[1] < 0.4 * n
                  ? 'top left'
                  : u[1] > 0.6 * n
                  ? 'bottom left'
                  : 'mid left'
                : u[0] > 0.6 * o
                ? u[1] < 0.4 * n
                  ? 'top right'
                  : u[1] > 0.6 * n
                  ? 'bottom right'
                  : 'mid right'
                : u[1] < 0.4 * n
                ? 'top middle'
                : u[1] > 0.6 * n
                ? 'bottom middle'
                : 'middle';
            }
            function l(u, o, n) {
              var s = Math.floor((u[0] / o) * 10),
                i = Math.floor((u[1] / n) * 10);
              return s === 10 && --s, i === 10 && --i, { locX: s, locY: i };
            }
            (r.default.prototype.textOutput = function (u) {
              r.default._validateParameters('textOutput', arguments),
                this._accessibleOutputs.text ||
                  ((this._accessibleOutputs.text = !0),
                  this._createOutput('textOutput', 'Fallback'),
                  u === this.LABEL &&
                    ((this._accessibleOutputs.textLabel = !0),
                    this._createOutput('textOutput', 'Label')));
            }),
              (r.default.prototype.gridOutput = function (u) {
                r.default._validateParameters('gridOutput', arguments),
                  this._accessibleOutputs.grid ||
                    ((this._accessibleOutputs.grid = !0),
                    this._createOutput('gridOutput', 'Fallback'),
                    u === this.LABEL &&
                      ((this._accessibleOutputs.gridLabel = !0),
                      this._createOutput('gridOutput', 'Label')));
              }),
              (r.default.prototype._addAccsOutput = function () {
                return (
                  this._accessibleOutputs ||
                    (this._accessibleOutputs = {
                      text: !1,
                      grid: !1,
                      textLabel: !1,
                      gridLabel: !1,
                    }),
                  this._accessibleOutputs.grid || this._accessibleOutputs.text
                );
              }),
              (r.default.prototype._createOutput = function (u, o) {
                var n,
                  s,
                  i,
                  a = this.canvas.id;
                this.ingredients ||
                  (this.ingredients = {
                    shapes: {},
                    colors: {
                      background: 'white',
                      fill: 'white',
                      stroke: 'black',
                    },
                    pShapes: '',
                  }),
                  this.dummyDOM ||
                    (this.dummyDOM = document.getElementById(a).parentNode);
                var d = '';
                o === 'Fallback'
                  ? ((n = a + u),
                    (s = a + 'accessibleOutput'),
                    this.dummyDOM.querySelector('#'.concat(s)) ||
                      (this.dummyDOM.querySelector(
                        '#'.concat(a, '_Description'),
                      )
                        ? this.dummyDOM
                            .querySelector('#'.concat(a, '_Description'))
                            .insertAdjacentHTML(
                              'afterend',
                              '<div id="'.concat(
                                s,
                                '" role="region" aria-label="Canvas Outputs"></div>',
                              ),
                            )
                        : (this.dummyDOM.querySelector(
                            '#'.concat(a),
                          ).innerHTML = '<div id="'.concat(
                            s,
                            '" role="region" aria-label="Canvas Outputs"></div>',
                          ))))
                  : o === 'Label' &&
                    ((n = a + u + (d = o)),
                    (s = a + 'accessibleOutput' + o),
                    this.dummyDOM.querySelector('#'.concat(s)) ||
                      (this.dummyDOM.querySelector('#'.concat(a, '_Label'))
                        ? this.dummyDOM
                            .querySelector('#'.concat(a, '_Label'))
                            .insertAdjacentHTML(
                              'afterend',
                              '<div id="'.concat(s, '"></div>'),
                            )
                        : this.dummyDOM
                            .querySelector('#'.concat(a))
                            .insertAdjacentHTML(
                              'afterend',
                              '<div id="'.concat(s, '"></div>'),
                            ))),
                  (this._accessibleOutputs[n] = {}),
                  u === 'textOutput'
                    ? ((d = '#'.concat(a, 'gridOutput').concat(d)),
                      (i = '<div id="'
                        .concat(n, '">Text Output<div id="')
                        .concat(
                          n,
                          'Summary" aria-label="text output summary"><p id="',
                        )
                        .concat(n, '_summary"></p><ul id="')
                        .concat(n, '_list"></ul></div><table id="')
                        .concat(
                          n,
                          '_shapeDetails" summary="text output shape details"></table></div>',
                        )),
                      this.dummyDOM.querySelector(d)
                        ? this.dummyDOM
                            .querySelector(d)
                            .insertAdjacentHTML('beforebegin', i)
                        : (this.dummyDOM.querySelector(
                            '#'.concat(s),
                          ).innerHTML = i),
                      (this._accessibleOutputs[n].list =
                        this.dummyDOM.querySelector('#'.concat(n, '_list'))))
                    : u === 'gridOutput' &&
                      ((d = '#'.concat(a, 'textOutput').concat(d)),
                      (i = '<div id="'
                        .concat(n, '">Grid Output<p id="')
                        .concat(
                          n,
                          '_summary" aria-label="grid output summary"><table id="',
                        )
                        .concat(
                          n,
                          '_map" summary="grid output content"></table><ul id="',
                        )
                        .concat(
                          n,
                          '_shapeDetails" aria-label="grid output shape details"></ul></div>',
                        )),
                      this.dummyDOM.querySelector(d)
                        ? this.dummyDOM
                            .querySelector(d)
                            .insertAdjacentHTML('afterend', i)
                        : (this.dummyDOM.querySelector(
                            '#'.concat(s),
                          ).innerHTML = i),
                      (this._accessibleOutputs[n].map =
                        this.dummyDOM.querySelector('#'.concat(n, '_map')))),
                  (this._accessibleOutputs[n].shapeDetails =
                    this.dummyDOM.querySelector(
                      '#'.concat(n, '_shapeDetails'),
                    )),
                  (this._accessibleOutputs[n].summary =
                    this.dummyDOM.querySelector('#'.concat(n, '_summary')));
              }),
              (r.default.prototype._updateAccsOutput = function () {
                var u = this.canvas.id;
                JSON.stringify(this.ingredients.shapes) !==
                  this.ingredients.pShapes &&
                  ((this.ingredients.pShapes = JSON.stringify(
                    this.ingredients.shapes,
                  )),
                  this._accessibleOutputs.text &&
                    this._updateTextOutput(u + 'textOutput'),
                  this._accessibleOutputs.grid &&
                    this._updateGridOutput(u + 'gridOutput'),
                  this._accessibleOutputs.textLabel &&
                    this._updateTextOutput(u + 'textOutputLabel'),
                  this._accessibleOutputs.gridLabel &&
                    this._updateGridOutput(u + 'gridOutputLabel'));
              }),
              (r.default.prototype._accsBackground = function (u) {
                (this.ingredients.pShapes = JSON.stringify(
                  this.ingredients.shapes,
                )),
                  (this.ingredients.shapes = {}),
                  this.ingredients.colors.backgroundRGBA !== u &&
                    ((this.ingredients.colors.backgroundRGBA = u),
                    (this.ingredients.colors.background =
                      this._rgbColorName(u)));
              }),
              (r.default.prototype._accsCanvasColors = function (u, o) {
                u === 'fill'
                  ? this.ingredients.colors.fillRGBA !== o &&
                    ((this.ingredients.colors.fillRGBA = o),
                    (this.ingredients.colors.fill = this._rgbColorName(o)))
                  : u === 'stroke' &&
                    this.ingredients.colors.strokeRGBA !== o &&
                    ((this.ingredients.colors.strokeRGBA = o),
                    (this.ingredients.colors.stroke = this._rgbColorName(o)));
              }),
              (r.default.prototype._accsOutput = function (u, o) {
                u === 'ellipse' && o[2] === o[3]
                  ? (u = 'circle')
                  : u === 'rectangle' && o[2] === o[3] && (u = 'square');
                var n = {},
                  s = !0,
                  i = (function (_, w) {
                    var S, M;
                    return (
                      (M =
                        _ === 'rectangle' ||
                        _ === 'ellipse' ||
                        _ === 'arc' ||
                        _ === 'circle' ||
                        _ === 'square'
                          ? ((S = Math.round(w[0] + w[2] / 2)),
                            Math.round(w[1] + w[3] / 2))
                          : _ === 'triangle'
                          ? ((S = (w[0] + w[2] + w[4]) / 3),
                            (w[1] + w[3] + w[5]) / 3)
                          : _ === 'quadrilateral'
                          ? ((S = (w[0] + w[2] + w[4] + w[6]) / 4),
                            (w[1] + w[3] + w[5] + w[7]) / 4)
                          : _ === 'line'
                          ? ((S = (w[0] + w[2]) / 2), (w[1] + w[3]) / 2)
                          : ((S = w[0]), w[1])),
                      [S, M]
                    );
                  })(u, o);
                if (u === 'line') {
                  (n.color = this.ingredients.colors.stroke),
                    (n.length = Math.round(this.dist(o[0], o[1], o[2], o[3])));
                  var a = c([o[0], [1]], this.width, this.height),
                    d = c([o[2], [3]], this.width, this.height);
                  (n.loc = l(i, this.width, this.height)),
                    (n.pos =
                      a === d
                        ? 'at '.concat(a)
                        : 'from '.concat(a, ' to ').concat(d));
                } else
                  u === 'point'
                    ? (n.color = this.ingredients.colors.stroke)
                    : ((n.color = this.ingredients.colors.fill),
                      (n.area = (function (_, w, S, M) {
                        var E = 0;
                        if (_ === 'arc') {
                          var O =
                            (((w[5] - w[4]) % (2 * Math.PI)) + 2 * Math.PI) %
                            (2 * Math.PI);
                          if (
                            ((E = (O * w[2] * w[3]) / 8),
                            w[6] === 'open' || w[6] === 'chord')
                          ) {
                            var D = w[0],
                              A = w[1],
                              k = w[0] + (w[2] / 2) * Math.cos(w[4]).toFixed(2),
                              L = w[1] + (w[3] / 2) * Math.sin(w[4]).toFixed(2),
                              R = w[0] + (w[2] / 2) * Math.cos(w[5]).toFixed(2),
                              N = w[1] + (w[3] / 2) * Math.sin(w[5]).toFixed(2),
                              B =
                                Math.abs(
                                  D * (L - N) + k * (N - A) + R * (A - L),
                                ) / 2;
                            O > Math.PI ? (E += B) : (E -= B);
                          }
                        } else
                          _ === 'ellipse' || _ === 'circle'
                            ? (E = (((3.14 * w[2]) / 2) * w[3]) / 2)
                            : _ === 'line' || _ === 'point'
                            ? (E = 0)
                            : _ === 'quadrilateral'
                            ? (E =
                                Math.abs(
                                  (w[6] + w[0]) * (w[7] - w[1]) +
                                    (w[0] + w[2]) * (w[1] - w[3]) +
                                    (w[2] + w[4]) * (w[3] - w[5]) +
                                    (w[4] + w[6]) * (w[5] - w[7]),
                                ) / 2)
                            : _ === 'rectangle' || _ === 'square'
                            ? (E = w[2] * w[3])
                            : _ === 'triangle' &&
                              (E =
                                Math.abs(
                                  w[0] * (w[3] - w[5]) +
                                    w[2] * (w[5] - w[1]) +
                                    w[4] * (w[1] - w[3]),
                                ) / 2);
                        return Math.round((100 * E) / (S * M));
                      })(u, o, this.width, this.height))),
                    (n.pos = c(i, this.width, this.height)),
                    (n.loc = l(i, this.width, this.height));
                if (this.ingredients.shapes[u]) {
                  if (this.ingredients.shapes[u] !== [n]) {
                    for (var g in this.ingredients.shapes[u])
                      JSON.stringify(this.ingredients.shapes[u][g]) ===
                        JSON.stringify(n) && (s = !1);
                    s === !0 && this.ingredients.shapes[u].push(n);
                  }
                } else this.ingredients.shapes[u] = [n];
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 151,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.number.to-fixed': 172,
          },
        ],
        247: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            r.default.prototype._updateTextOutput = function (l) {
              if (this.dummyDOM.querySelector('#'.concat(l, '_summary'))) {
                var h = this._accessibleOutputs[l],
                  u = (function (s, i) {
                    var a = '',
                      d = 0;
                    for (var g in i)
                      for (var _ in i[g]) {
                        var w = '<li><a href="#'
                          .concat(s, 'shape')
                          .concat(d, '">')
                          .concat(i[g][_].color, ' ')
                          .concat(g, '</a>');
                        g === 'line'
                          ? (w += ', '
                              .concat(i[g][_].pos, ', ')
                              .concat(i[g][_].length, ' pixels long.</li>'))
                          : ((w += ', at '.concat(i[g][_].pos)),
                            g !== 'point' &&
                              (w += ', covering '.concat(
                                i[g][_].area,
                                '% of the canvas',
                              )),
                            (w += '.</li>')),
                          (a += w),
                          d++;
                      }
                    return { numShapes: d, listShapes: a };
                  })(l, this.ingredients.shapes),
                  o = (function (s, i, a, d) {
                    var g = 'Your output is a, '
                      .concat(a, ' by ')
                      .concat(d, ' pixels, ')
                      .concat(i, ' canvas containing the following');
                    return (
                      (g =
                        s === 1
                          ? ''.concat(g, ' shape:')
                          : ''.concat(g, ' ').concat(s, ' shapes:')),
                      g
                    );
                  })(
                    u.numShapes,
                    this.ingredients.colors.background,
                    this.width,
                    this.height,
                  ),
                  n = (function (s, i) {
                    var a = '',
                      d = 0;
                    for (var g in i)
                      for (var _ in i[g]) {
                        var w = '<tr id="'
                          .concat(s, 'shape')
                          .concat(d, '"><th>')
                          .concat(i[g][_].color, ' ')
                          .concat(g, '</th>');
                        g === 'line'
                          ? (w += '<td>location = '
                              .concat(i[g][_].pos, '</td><td>length = ')
                              .concat(i[g][_].length, ' pixels</td></tr>'))
                          : ((w += '<td>location = '.concat(
                              i[g][_].pos,
                              '</td>',
                            )),
                            g !== 'point' &&
                              (w += '<td> area = '.concat(
                                i[g][_].area,
                                '%</td>',
                              )),
                            (w += '</tr>')),
                          (a += w),
                          d++;
                      }
                    return a;
                  })(l, this.ingredients.shapes);
                o !== h.summary.innerHTML && (h.summary.innerHTML = o),
                  u.listShapes !== h.list.innerHTML &&
                    (h.list.innerHTML = u.listShapes),
                  n !== h.shapeDetails.innerHTML &&
                    (h.shapeDetails.innerHTML = n),
                  (this._accessibleOutputs[l] = h);
              }
            };
            var c = r.default;
            y.default = c;
          },
          { '../core/main': 264, 'core-js/modules/es.array.concat': 149 },
        ],
        248: [
          function (e, v, y) {
            var m,
              r = (m = e('./core/main')) && m.__esModule ? m : { default: m };
            e('./core/constants'),
              e('./core/environment'),
              e('./core/friendly_errors/stacktrace'),
              e('./core/friendly_errors/validate_params'),
              e('./core/friendly_errors/file_errors'),
              e('./core/friendly_errors/fes_core'),
              e('./core/friendly_errors/sketch_reader'),
              e('./core/helpers'),
              e('./core/legacy'),
              e('./core/preload'),
              e('./core/p5.Element'),
              e('./core/p5.Graphics'),
              e('./core/p5.Renderer'),
              e('./core/p5.Renderer2D'),
              e('./core/rendering'),
              e('./core/shim'),
              e('./core/structure'),
              e('./core/transform'),
              e('./core/shape/2d_primitives'),
              e('./core/shape/attributes'),
              e('./core/shape/curves'),
              e('./core/shape/vertex'),
              e('./accessibility/outputs'),
              e('./accessibility/textOutput'),
              e('./accessibility/gridOutput'),
              e('./accessibility/color_namer'),
              e('./color/color_conversion'),
              e('./color/creating_reading'),
              e('./color/p5.Color'),
              e('./color/setting'),
              e('./data/p5.TypedDict'),
              e('./data/local_storage.js'),
              e('./dom/dom'),
              e('./accessibility/describe'),
              e('./events/acceleration'),
              e('./events/keyboard'),
              e('./events/mouse'),
              e('./events/touch'),
              e('./image/filters'),
              e('./image/image'),
              e('./image/loading_displaying'),
              e('./image/p5.Image'),
              e('./image/pixels'),
              e('./io/files'),
              e('./io/p5.Table'),
              e('./io/p5.TableRow'),
              e('./io/p5.XML'),
              e('./math/calculation'),
              e('./math/math'),
              e('./math/noise'),
              e('./math/p5.Vector'),
              e('./math/random'),
              e('./math/trigonometry'),
              e('./typography/attributes'),
              e('./typography/loading_displaying'),
              e('./typography/p5.Font'),
              e('./utilities/array_functions'),
              e('./utilities/conversion'),
              e('./utilities/string_functions'),
              e('./utilities/time_date'),
              e('./webgl/3d_primitives'),
              e('./webgl/interaction'),
              e('./webgl/light'),
              e('./webgl/loading'),
              e('./webgl/material'),
              e('./webgl/p5.Camera'),
              e('./webgl/p5.Geometry'),
              e('./webgl/p5.Matrix'),
              e('./webgl/p5.RendererGL.Immediate'),
              e('./webgl/p5.RendererGL'),
              e('./webgl/p5.RendererGL.Retained'),
              e('./webgl/p5.Shader'),
              e('./webgl/p5.RenderBuffer'),
              e('./webgl/p5.Texture'),
              e('./webgl/text'),
              e('./core/init'),
              (v.exports = r.default);
          },
          {
            './accessibility/color_namer': 243,
            './accessibility/describe': 244,
            './accessibility/gridOutput': 245,
            './accessibility/outputs': 246,
            './accessibility/textOutput': 247,
            './color/color_conversion': 249,
            './color/creating_reading': 250,
            './color/p5.Color': 251,
            './color/setting': 252,
            './core/constants': 253,
            './core/environment': 254,
            './core/friendly_errors/fes_core': 255,
            './core/friendly_errors/file_errors': 256,
            './core/friendly_errors/sketch_reader': 257,
            './core/friendly_errors/stacktrace': 258,
            './core/friendly_errors/validate_params': 259,
            './core/helpers': 260,
            './core/init': 261,
            './core/legacy': 263,
            './core/main': 264,
            './core/p5.Element': 265,
            './core/p5.Graphics': 266,
            './core/p5.Renderer': 267,
            './core/p5.Renderer2D': 268,
            './core/preload': 269,
            './core/rendering': 270,
            './core/shape/2d_primitives': 271,
            './core/shape/attributes': 272,
            './core/shape/curves': 273,
            './core/shape/vertex': 274,
            './core/shim': 275,
            './core/structure': 276,
            './core/transform': 277,
            './data/local_storage.js': 278,
            './data/p5.TypedDict': 279,
            './dom/dom': 280,
            './events/acceleration': 281,
            './events/keyboard': 282,
            './events/mouse': 283,
            './events/touch': 284,
            './image/filters': 285,
            './image/image': 286,
            './image/loading_displaying': 287,
            './image/p5.Image': 288,
            './image/pixels': 289,
            './io/files': 290,
            './io/p5.Table': 291,
            './io/p5.TableRow': 292,
            './io/p5.XML': 293,
            './math/calculation': 294,
            './math/math': 295,
            './math/noise': 296,
            './math/p5.Vector': 297,
            './math/random': 298,
            './math/trigonometry': 299,
            './typography/attributes': 300,
            './typography/loading_displaying': 301,
            './typography/p5.Font': 302,
            './utilities/array_functions': 303,
            './utilities/conversion': 304,
            './utilities/string_functions': 305,
            './utilities/time_date': 306,
            './webgl/3d_primitives': 307,
            './webgl/interaction': 308,
            './webgl/light': 309,
            './webgl/loading': 310,
            './webgl/material': 311,
            './webgl/p5.Camera': 312,
            './webgl/p5.Geometry': 313,
            './webgl/p5.Matrix': 314,
            './webgl/p5.RenderBuffer': 315,
            './webgl/p5.RendererGL': 318,
            './webgl/p5.RendererGL.Immediate': 316,
            './webgl/p5.RendererGL.Retained': 317,
            './webgl/p5.Shader': 319,
            './webgl/p5.Texture': 320,
            './webgl/text': 321,
          },
        ],
        249: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.ColorConversion = {}),
              (r.default.ColorConversion._hsbaToHSLA = function (l) {
                var h = l[0],
                  u = l[1],
                  o = l[2],
                  n = ((2 - u) * o) / 2;
                return (
                  n != 0 &&
                    (n == 1
                      ? (u = 0)
                      : n < 0.5
                      ? (u /= 2 - u)
                      : (u = (u * o) / (2 - 2 * n))),
                  [h, u, n, l[3]]
                );
              }),
              (r.default.ColorConversion._hsbaToRGBA = function (l) {
                var h = 6 * l[0],
                  u = l[1],
                  o = l[2],
                  n = [];
                if (u === 0) n = [o, o, o, l[3]];
                else {
                  var s,
                    i,
                    a,
                    d = Math.floor(h),
                    g = o * (1 - u),
                    _ = o * (1 - u * (h - d)),
                    w = o * (1 - u * (1 + d - h));
                  (a =
                    d === 1
                      ? ((s = _), (i = o), g)
                      : d === 2
                      ? ((s = g), (i = o), w)
                      : d === 3
                      ? ((s = g), (i = _), o)
                      : d === 4
                      ? ((s = w), (i = g), o)
                      : d === 5
                      ? ((s = o), (i = g), _)
                      : ((s = o), (i = w), g)),
                    (n = [s, i, a, l[3]]);
                }
                return n;
              }),
              (r.default.ColorConversion._hslaToHSBA = function (l) {
                var h,
                  u = l[0],
                  o = l[1],
                  n = l[2];
                return [
                  u,
                  (o =
                    (2 * ((h = n < 0.5 ? (1 + o) * n : n + o - n * o) - n)) /
                    h),
                  h,
                  l[3],
                ];
              }),
              (r.default.ColorConversion._hslaToRGBA = function (l) {
                var h = 6 * l[0],
                  u = l[1],
                  o = l[2],
                  n = [];
                if (u === 0) n = [o, o, o, l[3]];
                else {
                  var s,
                    i = 2 * o - (s = o < 0.5 ? (1 + u) * o : o + u - o * u),
                    a = function (d, g, _) {
                      return (
                        d < 0 ? (d += 6) : 6 <= d && (d -= 6),
                        d < 1
                          ? g + (_ - g) * d
                          : d < 3
                          ? _
                          : d < 4
                          ? g + (_ - g) * (4 - d)
                          : g
                      );
                    };
                  n = [a(2 + h, i, s), a(h, i, s), a(h - 2, i, s), l[3]];
                }
                return n;
              }),
              (r.default.ColorConversion._rgbaToHSBA = function (l) {
                var h,
                  u,
                  o = l[0],
                  n = l[1],
                  s = l[2],
                  i = Math.max(o, n, s),
                  a = i - Math.min(o, n, s);
                return (
                  a == 0
                    ? (u = h = 0)
                    : ((u = a / i),
                      o === i
                        ? (h = (n - s) / a)
                        : n === i
                        ? (h = 2 + (s - o) / a)
                        : s === i && (h = 4 + (o - n) / a),
                      h < 0 ? (h += 6) : 6 <= h && (h -= 6)),
                  [h / 6, u, i, l[3]]
                );
              }),
              (r.default.ColorConversion._rgbaToHSLA = function (l) {
                var h,
                  u,
                  o = l[0],
                  n = l[1],
                  s = l[2],
                  i = Math.max(o, n, s),
                  a = Math.min(o, n, s),
                  d = i + a,
                  g = i - a;
                return (
                  g == 0
                    ? (u = h = 0)
                    : ((u = d < 1 ? g / d : g / (2 - d)),
                      o === i
                        ? (h = (n - s) / g)
                        : n === i
                        ? (h = 2 + (s - o) / g)
                        : s === i && (h = 4 + (o - n) / g),
                      h < 0 ? (h += 6) : 6 <= h && (h -= 6)),
                  [h / 6, u, d / 2, l[3]]
                );
              });
            var c = r.default.ColorConversion;
            y.default = c;
          },
          { '../core/main': 264 },
        ],
        250: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.array.map'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            e('./p5.Color'),
              e('../core/friendly_errors/validate_params'),
              e('../core/friendly_errors/file_errors'),
              e('../core/friendly_errors/fes_core'),
              (c.default.prototype.alpha = function (o) {
                return (
                  c.default._validateParameters('alpha', arguments),
                  this.color(o)._getAlpha()
                );
              }),
              (c.default.prototype.blue = function (o) {
                return (
                  c.default._validateParameters('blue', arguments),
                  this.color(o)._getBlue()
                );
              }),
              (c.default.prototype.brightness = function (o) {
                return (
                  c.default._validateParameters('brightness', arguments),
                  this.color(o)._getBrightness()
                );
              }),
              (c.default.prototype.color = function () {
                if (
                  (c.default._validateParameters('color', arguments),
                  arguments[0] instanceof c.default.Color)
                )
                  return arguments[0];
                var o =
                  arguments[0] instanceof Array ? arguments[0] : arguments;
                return new c.default.Color(this, o);
              }),
              (c.default.prototype.green = function (o) {
                return (
                  c.default._validateParameters('green', arguments),
                  this.color(o)._getGreen()
                );
              }),
              (c.default.prototype.hue = function (o) {
                return (
                  c.default._validateParameters('hue', arguments),
                  this.color(o)._getHue()
                );
              }),
              (c.default.prototype.lerpColor = function (o, n, s) {
                c.default._validateParameters('lerpColor', arguments);
                var i,
                  a,
                  d,
                  g,
                  _,
                  w,
                  S = this._colorMode,
                  M = this._colorMaxes;
                if (S === l.RGB)
                  (_ = o.levels.map(function (E) {
                    return E / 255;
                  })),
                    (w = n.levels.map(function (E) {
                      return E / 255;
                    }));
                else if (S === l.HSB)
                  o._getBrightness(),
                    n._getBrightness(),
                    (_ = o.hsba),
                    (w = n.hsba);
                else {
                  if (S !== l.HSL)
                    throw new Error(
                      ''.concat(S, 'cannot be used for interpolation.'),
                    );
                  o._getLightness(),
                    n._getLightness(),
                    (_ = o.hsla),
                    (w = n.hsla);
                }
                return (
                  (s = Math.max(Math.min(s, 1), 0)),
                  this.lerp === void 0 &&
                    (this.lerp = function (E, O, D) {
                      return D * (O - E) + E;
                    }),
                  (i = this.lerp(_[0], w[0], s)),
                  (a = this.lerp(_[1], w[1], s)),
                  (d = this.lerp(_[2], w[2], s)),
                  (g = this.lerp(_[3], w[3], s)),
                  (i *= M[S][0]),
                  (a *= M[S][1]),
                  (d *= M[S][2]),
                  (g *= M[S][3]),
                  this.color(i, a, d, g)
                );
              }),
              (c.default.prototype.lightness = function (o) {
                return (
                  c.default._validateParameters('lightness', arguments),
                  this.color(o)._getLightness()
                );
              }),
              (c.default.prototype.red = function (o) {
                return (
                  c.default._validateParameters('red', arguments),
                  this.color(o)._getRed()
                );
              }),
              (c.default.prototype.saturation = function (o) {
                return (
                  c.default._validateParameters('saturation', arguments),
                  this.color(o)._getSaturation()
                );
              });
            var u = c.default;
            y.default = u;
          },
          {
            '../core/constants': 253,
            '../core/friendly_errors/fes_core': 255,
            '../core/friendly_errors/file_errors': 256,
            '../core/friendly_errors/validate_params': 259,
            '../core/main': 264,
            './p5.Color': 251,
            'core-js/modules/es.array.map': 161,
          },
        ],
        251: [
          function (e, v, y) {
            function m(_) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (w) {
                      return typeof w;
                    }
                  : function (w) {
                      return w &&
                        typeof Symbol == 'function' &&
                        w.constructor === Symbol &&
                        w !== Symbol.prototype
                        ? 'symbol'
                        : typeof w;
                    })(_);
            }
            e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.constructor'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = u(e('../core/main')),
              c = (function (_) {
                if (_ && _.__esModule) return _;
                if (_ === null || (m(_) !== 'object' && typeof _ != 'function'))
                  return { default: _ };
                var w = h();
                if (w && w.has(_)) return w.get(_);
                var S = {},
                  M = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var E in _)
                  if (Object.prototype.hasOwnProperty.call(_, E)) {
                    var O = M ? Object.getOwnPropertyDescriptor(_, E) : null;
                    O && (O.get || O.set)
                      ? Object.defineProperty(S, E, O)
                      : (S[E] = _[E]);
                  }
                return (S.default = _), w && w.set(_, S), S;
              })(e('../core/constants')),
              l = u(e('./color_conversion'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var _ = new WeakMap();
              return (
                (h = function () {
                  return _;
                }),
                _
              );
            }
            function u(_) {
              return _ && _.__esModule ? _ : { default: _ };
            }
            (r.default.Color = function (_, w) {
              if (
                (this._storeModeAndMaxes(_._colorMode, _._colorMaxes),
                this.mode !== c.RGB &&
                  this.mode !== c.HSL &&
                  this.mode !== c.HSB)
              )
                throw new Error(
                  ''.concat(this.mode, ' is an invalid colorMode.'),
                );
              return (
                (this._array = r.default.Color._parseInputs.apply(this, w)),
                this._calculateLevels(),
                this
              );
            }),
              (r.default.Color.prototype.toString = function (_) {
                var w = this.levels,
                  S = this._array,
                  M = S[3];
                switch (_) {
                  case '#rrggbb':
                    return '#'.concat(
                      w[0] < 16
                        ? '0'.concat(w[0].toString(16))
                        : w[0].toString(16),
                      w[1] < 16
                        ? '0'.concat(w[1].toString(16))
                        : w[1].toString(16),
                      w[2] < 16
                        ? '0'.concat(w[2].toString(16))
                        : w[2].toString(16),
                    );
                  case '#rrggbbaa':
                    return '#'.concat(
                      w[0] < 16
                        ? '0'.concat(w[0].toString(16))
                        : w[0].toString(16),
                      w[1] < 16
                        ? '0'.concat(w[1].toString(16))
                        : w[1].toString(16),
                      w[2] < 16
                        ? '0'.concat(w[2].toString(16))
                        : w[2].toString(16),
                      w[3] < 16
                        ? '0'.concat(w[3].toString(16))
                        : w[3].toString(16),
                    );
                  case '#rgb':
                    return '#'.concat(
                      Math.round(15 * S[0]).toString(16),
                      Math.round(15 * S[1]).toString(16),
                      Math.round(15 * S[2]).toString(16),
                    );
                  case '#rgba':
                    return '#'.concat(
                      Math.round(15 * S[0]).toString(16),
                      Math.round(15 * S[1]).toString(16),
                      Math.round(15 * S[2]).toString(16),
                      Math.round(15 * S[3]).toString(16),
                    );
                  case 'rgb':
                    return 'rgb('.concat(w[0], ', ', w[1], ', ', w[2], ')');
                  case 'rgb%':
                    return 'rgb('.concat(
                      (100 * S[0]).toPrecision(3),
                      '%, ',
                      (100 * S[1]).toPrecision(3),
                      '%, ',
                      (100 * S[2]).toPrecision(3),
                      '%)',
                    );
                  case 'rgba%':
                    return 'rgba('.concat(
                      (100 * S[0]).toPrecision(3),
                      '%, ',
                      (100 * S[1]).toPrecision(3),
                      '%, ',
                      (100 * S[2]).toPrecision(3),
                      '%, ',
                      (100 * S[3]).toPrecision(3),
                      '%)',
                    );
                  case 'hsb':
                  case 'hsv':
                    return (
                      this.hsba ||
                        (this.hsba = l.default._rgbaToHSBA(this._array)),
                      'hsb('.concat(
                        this.hsba[0] * this.maxes[c.HSB][0],
                        ', ',
                        this.hsba[1] * this.maxes[c.HSB][1],
                        ', ',
                        this.hsba[2] * this.maxes[c.HSB][2],
                        ')',
                      )
                    );
                  case 'hsb%':
                  case 'hsv%':
                    return (
                      this.hsba ||
                        (this.hsba = l.default._rgbaToHSBA(this._array)),
                      'hsb('.concat(
                        (100 * this.hsba[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[2]).toPrecision(3),
                        '%)',
                      )
                    );
                  case 'hsba':
                  case 'hsva':
                    return (
                      this.hsba ||
                        (this.hsba = l.default._rgbaToHSBA(this._array)),
                      'hsba('.concat(
                        this.hsba[0] * this.maxes[c.HSB][0],
                        ', ',
                        this.hsba[1] * this.maxes[c.HSB][1],
                        ', ',
                        this.hsba[2] * this.maxes[c.HSB][2],
                        ', ',
                        M,
                        ')',
                      )
                    );
                  case 'hsba%':
                  case 'hsva%':
                    return (
                      this.hsba ||
                        (this.hsba = l.default._rgbaToHSBA(this._array)),
                      'hsba('.concat(
                        (100 * this.hsba[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[2]).toPrecision(3),
                        '%, ',
                        (100 * M).toPrecision(3),
                        '%)',
                      )
                    );
                  case 'hsl':
                    return (
                      this.hsla ||
                        (this.hsla = l.default._rgbaToHSLA(this._array)),
                      'hsl('.concat(
                        this.hsla[0] * this.maxes[c.HSL][0],
                        ', ',
                        this.hsla[1] * this.maxes[c.HSL][1],
                        ', ',
                        this.hsla[2] * this.maxes[c.HSL][2],
                        ')',
                      )
                    );
                  case 'hsl%':
                    return (
                      this.hsla ||
                        (this.hsla = l.default._rgbaToHSLA(this._array)),
                      'hsl('.concat(
                        (100 * this.hsla[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[2]).toPrecision(3),
                        '%)',
                      )
                    );
                  case 'hsla':
                    return (
                      this.hsla ||
                        (this.hsla = l.default._rgbaToHSLA(this._array)),
                      'hsla('.concat(
                        this.hsla[0] * this.maxes[c.HSL][0],
                        ', ',
                        this.hsla[1] * this.maxes[c.HSL][1],
                        ', ',
                        this.hsla[2] * this.maxes[c.HSL][2],
                        ', ',
                        M,
                        ')',
                      )
                    );
                  case 'hsla%':
                    return (
                      this.hsla ||
                        (this.hsla = l.default._rgbaToHSLA(this._array)),
                      'hsl('.concat(
                        (100 * this.hsla[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[2]).toPrecision(3),
                        '%, ',
                        (100 * M).toPrecision(3),
                        '%)',
                      )
                    );
                  case 'rgba':
                  default:
                    return 'rgba('.concat(
                      w[0],
                      ',',
                      w[1],
                      ',',
                      w[2],
                      ',',
                      M,
                      ')',
                    );
                }
              }),
              (r.default.Color.prototype.setRed = function (_) {
                (this._array[0] = _ / this.maxes[c.RGB][0]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype.setGreen = function (_) {
                (this._array[1] = _ / this.maxes[c.RGB][1]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype.setBlue = function (_) {
                (this._array[2] = _ / this.maxes[c.RGB][2]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype.setAlpha = function (_) {
                (this._array[3] = _ / this.maxes[this.mode][3]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype._calculateLevels = function () {
                for (
                  var _ = this._array,
                    w = (this.levels = new Array(_.length)),
                    S = _.length - 1;
                  0 <= S;
                  --S
                )
                  w[S] = Math.round(255 * _[S]);
                (this.hsla = null), (this.hsba = null);
              }),
              (r.default.Color.prototype._getAlpha = function () {
                return this._array[3] * this.maxes[this.mode][3];
              }),
              (r.default.Color.prototype._storeModeAndMaxes = function (_, w) {
                (this.mode = _), (this.maxes = w);
              }),
              (r.default.Color.prototype._getMode = function () {
                return this.mode;
              }),
              (r.default.Color.prototype._getMaxes = function () {
                return this.maxes;
              }),
              (r.default.Color.prototype._getBlue = function () {
                return this._array[2] * this.maxes[c.RGB][2];
              }),
              (r.default.Color.prototype._getBrightness = function () {
                return (
                  this.hsba || (this.hsba = l.default._rgbaToHSBA(this._array)),
                  this.hsba[2] * this.maxes[c.HSB][2]
                );
              }),
              (r.default.Color.prototype._getGreen = function () {
                return this._array[1] * this.maxes[c.RGB][1];
              }),
              (r.default.Color.prototype._getHue = function () {
                return this.mode === c.HSB
                  ? (this.hsba ||
                      (this.hsba = l.default._rgbaToHSBA(this._array)),
                    this.hsba[0] * this.maxes[c.HSB][0])
                  : (this.hsla ||
                      (this.hsla = l.default._rgbaToHSLA(this._array)),
                    this.hsla[0] * this.maxes[c.HSL][0]);
              }),
              (r.default.Color.prototype._getLightness = function () {
                return (
                  this.hsla || (this.hsla = l.default._rgbaToHSLA(this._array)),
                  this.hsla[2] * this.maxes[c.HSL][2]
                );
              }),
              (r.default.Color.prototype._getRed = function () {
                return this._array[0] * this.maxes[c.RGB][0];
              }),
              (r.default.Color.prototype._getSaturation = function () {
                return this.mode === c.HSB
                  ? (this.hsba ||
                      (this.hsba = l.default._rgbaToHSBA(this._array)),
                    this.hsba[1] * this.maxes[c.HSB][1])
                  : (this.hsla ||
                      (this.hsla = l.default._rgbaToHSLA(this._array)),
                    this.hsla[1] * this.maxes[c.HSL][1]);
              });
            var o = {
                aliceblue: '#f0f8ff',
                antiquewhite: '#faebd7',
                aqua: '#00ffff',
                aquamarine: '#7fffd4',
                azure: '#f0ffff',
                beige: '#f5f5dc',
                bisque: '#ffe4c4',
                black: '#000000',
                blanchedalmond: '#ffebcd',
                blue: '#0000ff',
                blueviolet: '#8a2be2',
                brown: '#a52a2a',
                burlywood: '#deb887',
                cadetblue: '#5f9ea0',
                chartreuse: '#7fff00',
                chocolate: '#d2691e',
                coral: '#ff7f50',
                cornflowerblue: '#6495ed',
                cornsilk: '#fff8dc',
                crimson: '#dc143c',
                cyan: '#00ffff',
                darkblue: '#00008b',
                darkcyan: '#008b8b',
                darkgoldenrod: '#b8860b',
                darkgray: '#a9a9a9',
                darkgreen: '#006400',
                darkgrey: '#a9a9a9',
                darkkhaki: '#bdb76b',
                darkmagenta: '#8b008b',
                darkolivegreen: '#556b2f',
                darkorange: '#ff8c00',
                darkorchid: '#9932cc',
                darkred: '#8b0000',
                darksalmon: '#e9967a',
                darkseagreen: '#8fbc8f',
                darkslateblue: '#483d8b',
                darkslategray: '#2f4f4f',
                darkslategrey: '#2f4f4f',
                darkturquoise: '#00ced1',
                darkviolet: '#9400d3',
                deeppink: '#ff1493',
                deepskyblue: '#00bfff',
                dimgray: '#696969',
                dimgrey: '#696969',
                dodgerblue: '#1e90ff',
                firebrick: '#b22222',
                floralwhite: '#fffaf0',
                forestgreen: '#228b22',
                fuchsia: '#ff00ff',
                gainsboro: '#dcdcdc',
                ghostwhite: '#f8f8ff',
                gold: '#ffd700',
                goldenrod: '#daa520',
                gray: '#808080',
                green: '#008000',
                greenyellow: '#adff2f',
                grey: '#808080',
                honeydew: '#f0fff0',
                hotpink: '#ff69b4',
                indianred: '#cd5c5c',
                indigo: '#4b0082',
                ivory: '#fffff0',
                khaki: '#f0e68c',
                lavender: '#e6e6fa',
                lavenderblush: '#fff0f5',
                lawngreen: '#7cfc00',
                lemonchiffon: '#fffacd',
                lightblue: '#add8e6',
                lightcoral: '#f08080',
                lightcyan: '#e0ffff',
                lightgoldenrodyellow: '#fafad2',
                lightgray: '#d3d3d3',
                lightgreen: '#90ee90',
                lightgrey: '#d3d3d3',
                lightpink: '#ffb6c1',
                lightsalmon: '#ffa07a',
                lightseagreen: '#20b2aa',
                lightskyblue: '#87cefa',
                lightslategray: '#778899',
                lightslategrey: '#778899',
                lightsteelblue: '#b0c4de',
                lightyellow: '#ffffe0',
                lime: '#00ff00',
                limegreen: '#32cd32',
                linen: '#faf0e6',
                magenta: '#ff00ff',
                maroon: '#800000',
                mediumaquamarine: '#66cdaa',
                mediumblue: '#0000cd',
                mediumorchid: '#ba55d3',
                mediumpurple: '#9370db',
                mediumseagreen: '#3cb371',
                mediumslateblue: '#7b68ee',
                mediumspringgreen: '#00fa9a',
                mediumturquoise: '#48d1cc',
                mediumvioletred: '#c71585',
                midnightblue: '#191970',
                mintcream: '#f5fffa',
                mistyrose: '#ffe4e1',
                moccasin: '#ffe4b5',
                navajowhite: '#ffdead',
                navy: '#000080',
                oldlace: '#fdf5e6',
                olive: '#808000',
                olivedrab: '#6b8e23',
                orange: '#ffa500',
                orangered: '#ff4500',
                orchid: '#da70d6',
                palegoldenrod: '#eee8aa',
                palegreen: '#98fb98',
                paleturquoise: '#afeeee',
                palevioletred: '#db7093',
                papayawhip: '#ffefd5',
                peachpuff: '#ffdab9',
                peru: '#cd853f',
                pink: '#ffc0cb',
                plum: '#dda0dd',
                powderblue: '#b0e0e6',
                purple: '#800080',
                rebeccapurple: '#663399',
                red: '#ff0000',
                rosybrown: '#bc8f8f',
                royalblue: '#4169e1',
                saddlebrown: '#8b4513',
                salmon: '#fa8072',
                sandybrown: '#f4a460',
                seagreen: '#2e8b57',
                seashell: '#fff5ee',
                sienna: '#a0522d',
                silver: '#c0c0c0',
                skyblue: '#87ceeb',
                slateblue: '#6a5acd',
                slategray: '#708090',
                slategrey: '#708090',
                snow: '#fffafa',
                springgreen: '#00ff7f',
                steelblue: '#4682b4',
                tan: '#d2b48c',
                teal: '#008080',
                thistle: '#d8bfd8',
                tomato: '#ff6347',
                turquoise: '#40e0d0',
                violet: '#ee82ee',
                wheat: '#f5deb3',
                white: '#ffffff',
                whitesmoke: '#f5f5f5',
                yellow: '#ffff00',
                yellowgreen: '#9acd32',
              },
              n = /\s*/,
              s = /(\d{1,3})/,
              i = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/,
              a = new RegExp(''.concat(i.source, '%')),
              d = {
                HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                RGB: new RegExp(
                  [
                    '^rgb\\(',
                    s.source,
                    ',',
                    s.source,
                    ',',
                    s.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                RGB_PERCENT: new RegExp(
                  [
                    '^rgb\\(',
                    a.source,
                    ',',
                    a.source,
                    ',',
                    a.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                RGBA: new RegExp(
                  [
                    '^rgba\\(',
                    s.source,
                    ',',
                    s.source,
                    ',',
                    s.source,
                    ',',
                    i.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                RGBA_PERCENT: new RegExp(
                  [
                    '^rgba\\(',
                    a.source,
                    ',',
                    a.source,
                    ',',
                    a.source,
                    ',',
                    i.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSL: new RegExp(
                  [
                    '^hsl\\(',
                    s.source,
                    ',',
                    a.source,
                    ',',
                    a.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSLA: new RegExp(
                  [
                    '^hsla\\(',
                    s.source,
                    ',',
                    a.source,
                    ',',
                    a.source,
                    ',',
                    i.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSB: new RegExp(
                  [
                    '^hsb\\(',
                    s.source,
                    ',',
                    a.source,
                    ',',
                    a.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSBA: new RegExp(
                  [
                    '^hsba\\(',
                    s.source,
                    ',',
                    a.source,
                    ',',
                    a.source,
                    ',',
                    i.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
              };
            r.default.Color._parseInputs = function (_, w, S, M) {
              var E,
                O = arguments.length,
                D = this.mode,
                A = this.maxes[D],
                k = [];
              if (3 <= O) {
                for (
                  k[0] = _ / A[0],
                    k[1] = w / A[1],
                    k[2] = S / A[2],
                    k[3] = typeof M == 'number' ? M / A[3] : 1,
                    E = k.length - 1;
                  0 <= E;
                  --E
                ) {
                  var L = k[E];
                  L < 0 ? (k[E] = 0) : 1 < L && (k[E] = 1);
                }
                return D === c.HSL
                  ? l.default._hslaToRGBA(k)
                  : D === c.HSB
                  ? l.default._hsbaToRGBA(k)
                  : k;
              }
              if (O === 1 && typeof _ == 'string') {
                var R = _.trim().toLowerCase();
                if (o[R]) return r.default.Color._parseInputs.call(this, o[R]);
                if (d.HEX3.test(R))
                  return (
                    ((k = d.HEX3.exec(R)
                      .slice(1)
                      .map(function (N) {
                        return parseInt(N + N, 16) / 255;
                      }))[3] = 1),
                    k
                  );
                if (d.HEX6.test(R))
                  return (
                    ((k = d.HEX6.exec(R)
                      .slice(1)
                      .map(function (N) {
                        return parseInt(N, 16) / 255;
                      }))[3] = 1),
                    k
                  );
                if (d.HEX4.test(R))
                  return (k = d.HEX4.exec(R)
                    .slice(1)
                    .map(function (N) {
                      return parseInt(N + N, 16) / 255;
                    }));
                if (d.HEX8.test(R))
                  return (k = d.HEX8.exec(R)
                    .slice(1)
                    .map(function (N) {
                      return parseInt(N, 16) / 255;
                    }));
                if (d.RGB.test(R))
                  return (
                    ((k = d.RGB.exec(R)
                      .slice(1)
                      .map(function (N) {
                        return N / 255;
                      }))[3] = 1),
                    k
                  );
                if (d.RGB_PERCENT.test(R))
                  return (
                    ((k = d.RGB_PERCENT.exec(R)
                      .slice(1)
                      .map(function (N) {
                        return parseFloat(N) / 100;
                      }))[3] = 1),
                    k
                  );
                if (d.RGBA.test(R))
                  return (k = d.RGBA.exec(R)
                    .slice(1)
                    .map(function (N, B) {
                      return B === 3 ? parseFloat(N) : N / 255;
                    }));
                if (d.RGBA_PERCENT.test(R))
                  return (k = d.RGBA_PERCENT.exec(R)
                    .slice(1)
                    .map(function (N, B) {
                      return B === 3 ? parseFloat(N) : parseFloat(N) / 100;
                    }));
                if (
                  (d.HSL.test(R)
                    ? ((k = d.HSL.exec(R)
                        .slice(1)
                        .map(function (N, B) {
                          return B === 0
                            ? parseInt(N, 10) / 360
                            : parseInt(N, 10) / 100;
                        }))[3] = 1)
                    : d.HSLA.test(R) &&
                      (k = d.HSLA.exec(R)
                        .slice(1)
                        .map(function (N, B) {
                          return B === 0
                            ? parseInt(N, 10) / 360
                            : B === 3
                            ? parseFloat(N)
                            : parseInt(N, 10) / 100;
                        })),
                  (k = k.map(function (N) {
                    return Math.max(Math.min(N, 1), 0);
                  })).length)
                )
                  return l.default._hslaToRGBA(k);
                if (
                  (d.HSB.test(R)
                    ? ((k = d.HSB.exec(R)
                        .slice(1)
                        .map(function (N, B) {
                          return B === 0
                            ? parseInt(N, 10) / 360
                            : parseInt(N, 10) / 100;
                        }))[3] = 1)
                    : d.HSBA.test(R) &&
                      (k = d.HSBA.exec(R)
                        .slice(1)
                        .map(function (N, B) {
                          return B === 0
                            ? parseInt(N, 10) / 360
                            : B === 3
                            ? parseFloat(N)
                            : parseInt(N, 10) / 100;
                        })),
                  k.length)
                ) {
                  for (E = k.length - 1; 0 <= E; --E)
                    k[E] = Math.max(Math.min(k[E], 1), 0);
                  return l.default._hsbaToRGBA(k);
                }
                k = [1, 1, 1, 1];
              } else {
                if ((O !== 1 && O !== 2) || typeof _ != 'number')
                  throw new Error(
                    ''.concat(
                      arguments,
                      'is not a valid color representation.',
                    ),
                  );
                (k[0] = _ / A[2]),
                  (k[1] = _ / A[2]),
                  (k[2] = _ / A[2]),
                  (k[3] = typeof w == 'number' ? w / A[3] : 1),
                  (k = k.map(function (N) {
                    return Math.max(Math.min(N, 1), 0);
                  }));
              }
              return k;
            };
            var g = r.default.Color;
            y.default = g;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            './color_conversion': 249,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.trim': 193,
          },
        ],
        252: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.array.fill'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            e('./p5.Color'),
              (c.default.prototype.background = function () {
                var o;
                return (
                  (o = this._renderer).background.apply(o, arguments), this
                );
              }),
              (c.default.prototype.clear = function () {
                var o = (arguments.length <= 0 ? void 0 : arguments[0]) || 0,
                  n = (arguments.length <= 1 ? void 0 : arguments[1]) || 0,
                  s = (arguments.length <= 2 ? void 0 : arguments[2]) || 0,
                  i = (arguments.length <= 3 ? void 0 : arguments[3]) || 0;
                return this._renderer.clear(o, n, s, i), this;
              }),
              (c.default.prototype.colorMode = function (o, n, s, i, a) {
                if (
                  (c.default._validateParameters('colorMode', arguments),
                  o === l.RGB || o === l.HSB || o === l.HSL)
                ) {
                  this._colorMode = o;
                  var d = this._colorMaxes[o];
                  arguments.length === 2
                    ? ((d[0] = n), (d[1] = n), (d[2] = n), (d[3] = n))
                    : arguments.length === 4
                    ? ((d[0] = n), (d[1] = s), (d[2] = i))
                    : arguments.length === 5 &&
                      ((d[0] = n), (d[1] = s), (d[2] = i), (d[3] = a));
                }
                return this;
              }),
              (c.default.prototype.fill = function () {
                var o;
                return (
                  this._renderer._setProperty('_fillSet', !0),
                  this._renderer._setProperty('_doFill', !0),
                  (o = this._renderer).fill.apply(o, arguments),
                  this
                );
              }),
              (c.default.prototype.noFill = function () {
                return this._renderer._setProperty('_doFill', !1), this;
              }),
              (c.default.prototype.noStroke = function () {
                return this._renderer._setProperty('_doStroke', !1), this;
              }),
              (c.default.prototype.stroke = function () {
                var o;
                return (
                  this._renderer._setProperty('_strokeSet', !0),
                  this._renderer._setProperty('_doStroke', !0),
                  (o = this._renderer).stroke.apply(o, arguments),
                  this
                );
              }),
              (c.default.prototype.erase = function () {
                var o =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : 255,
                  n =
                    1 < arguments.length && arguments[1] !== void 0
                      ? arguments[1]
                      : 255;
                return this._renderer.erase(o, n), this;
              }),
              (c.default.prototype.noErase = function () {
                return this._renderer.noErase(), this;
              });
            var u = c.default;
            y.default = u;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            './p5.Color': 251,
            'core-js/modules/es.array.fill': 151,
          },
        ],
        253: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.BEZIER =
                y.QUADRATIC =
                y.LINEAR =
                y._CTX_MIDDLE =
                y._DEFAULT_LEADMULT =
                y._DEFAULT_TEXT_FILL =
                y.WORD =
                y.CHAR =
                y.BOLDITALIC =
                y.BOLD =
                y.ITALIC =
                y.NORMAL =
                y.BLUR =
                y.ERODE =
                y.DILATE =
                y.POSTERIZE =
                y.INVERT =
                y.OPAQUE =
                y.GRAY =
                y.THRESHOLD =
                y.BURN =
                y.DODGE =
                y.SOFT_LIGHT =
                y.HARD_LIGHT =
                y.OVERLAY =
                y.REPLACE =
                y.SCREEN =
                y.MULTIPLY =
                y.EXCLUSION =
                y.SUBTRACT =
                y.DIFFERENCE =
                y.LIGHTEST =
                y.DARKEST =
                y.ADD =
                y.REMOVE =
                y.BLEND =
                y.UP_ARROW =
                y.TAB =
                y.SHIFT =
                y.RIGHT_ARROW =
                y.RETURN =
                y.OPTION =
                y.LEFT_ARROW =
                y.ESCAPE =
                y.ENTER =
                y.DOWN_ARROW =
                y.DELETE =
                y.CONTROL =
                y.BACKSPACE =
                y.ALT =
                y.AUTO =
                y.HSL =
                y.HSB =
                y.RGB =
                y.MITER =
                y.BEVEL =
                y.ROUND =
                y.SQUARE =
                y.PROJECT =
                y.PIE =
                y.CHORD =
                y.OPEN =
                y.CLOSE =
                y.TESS =
                y.QUAD_STRIP =
                y.QUADS =
                y.TRIANGLE_STRIP =
                y.TRIANGLE_FAN =
                y.TRIANGLES =
                y.LINE_LOOP =
                y.LINE_STRIP =
                y.LINES =
                y.POINTS =
                y.BASELINE =
                y.BOTTOM =
                y.TOP =
                y.CENTER =
                y.LEFT =
                y.RIGHT =
                y.RADIUS =
                y.CORNERS =
                y.CORNER =
                y.RAD_TO_DEG =
                y.DEG_TO_RAD =
                y.RADIANS =
                y.DEGREES =
                y.TWO_PI =
                y.TAU =
                y.QUARTER_PI =
                y.PI =
                y.HALF_PI =
                y.WAIT =
                y.TEXT =
                y.MOVE =
                y.HAND =
                y.CROSS =
                y.ARROW =
                y.WEBGL =
                y.P2D =
                y.VERSION =
                  void 0),
              (y.FALLBACK =
                y.LABEL =
                y.AXES =
                y.GRID =
                y._DEFAULT_FILL =
                y._DEFAULT_STROKE =
                y.PORTRAIT =
                y.LANDSCAPE =
                y.MIRROR =
                y.CLAMP =
                y.REPEAT =
                y.NEAREST =
                y.IMAGE =
                y.IMMEDIATE =
                y.TEXTURE =
                y.FILL =
                y.STROKE =
                y.CURVE =
                  void 0);
            var m = Math.PI;
            (y.VERSION = '1.4.2'),
              (y.P2D = 'p2d'),
              (y.WEBGL = 'webgl'),
              (y.ARROW = 'default'),
              (y.CROSS = 'crosshair'),
              (y.HAND = 'pointer'),
              (y.MOVE = 'move'),
              (y.TEXT = 'text'),
              (y.WAIT = 'wait');
            var r = m / 2;
            y.HALF_PI = r;
            var c = m;
            y.PI = c;
            var l = m / 4;
            y.QUARTER_PI = l;
            var h = 2 * m;
            y.TAU = h;
            var u = 2 * m;
            (y.TWO_PI = u), (y.DEGREES = 'degrees'), (y.RADIANS = 'radians');
            var o = m / 180;
            y.DEG_TO_RAD = o;
            var n = 180 / m;
            (y.RAD_TO_DEG = n),
              (y.CORNER = 'corner'),
              (y.CORNERS = 'corners'),
              (y.RADIUS = 'radius'),
              (y.RIGHT = 'right'),
              (y.LEFT = 'left'),
              (y.CENTER = 'center'),
              (y.TOP = 'top'),
              (y.BOTTOM = 'bottom'),
              (y.BASELINE = 'alphabetic'),
              (y.POINTS = 0),
              (y.LINES = 1),
              (y.LINE_STRIP = 3),
              (y.LINE_LOOP = 2),
              (y.TRIANGLES = 4),
              (y.TRIANGLE_FAN = 6),
              (y.TRIANGLE_STRIP = 5),
              (y.QUADS = 'quads'),
              (y.QUAD_STRIP = 'quad_strip'),
              (y.TESS = 'tess'),
              (y.CLOSE = 'close'),
              (y.OPEN = 'open'),
              (y.CHORD = 'chord'),
              (y.PIE = 'pie'),
              (y.PROJECT = 'square'),
              (y.SQUARE = 'butt'),
              (y.ROUND = 'round'),
              (y.BEVEL = 'bevel'),
              (y.MITER = 'miter'),
              (y.RGB = 'rgb'),
              (y.HSB = 'hsb'),
              (y.HSL = 'hsl'),
              (y.AUTO = 'auto'),
              (y.ALT = 18),
              (y.BACKSPACE = 8),
              (y.CONTROL = 17),
              (y.DELETE = 46),
              (y.DOWN_ARROW = 40),
              (y.ENTER = 13),
              (y.ESCAPE = 27),
              (y.LEFT_ARROW = 37),
              (y.OPTION = 18),
              (y.RETURN = 13),
              (y.RIGHT_ARROW = 39),
              (y.SHIFT = 16),
              (y.TAB = 9),
              (y.UP_ARROW = 38),
              (y.BLEND = 'source-over'),
              (y.REMOVE = 'destination-out'),
              (y.ADD = 'lighter'),
              (y.DARKEST = 'darken'),
              (y.LIGHTEST = 'lighten'),
              (y.DIFFERENCE = 'difference'),
              (y.SUBTRACT = 'subtract'),
              (y.EXCLUSION = 'exclusion'),
              (y.MULTIPLY = 'multiply'),
              (y.SCREEN = 'screen'),
              (y.REPLACE = 'copy'),
              (y.OVERLAY = 'overlay'),
              (y.HARD_LIGHT = 'hard-light'),
              (y.SOFT_LIGHT = 'soft-light'),
              (y.DODGE = 'color-dodge'),
              (y.BURN = 'color-burn'),
              (y.THRESHOLD = 'threshold'),
              (y.GRAY = 'gray'),
              (y.OPAQUE = 'opaque'),
              (y.INVERT = 'invert'),
              (y.POSTERIZE = 'posterize'),
              (y.DILATE = 'dilate'),
              (y.ERODE = 'erode'),
              (y.BLUR = 'blur'),
              (y.NORMAL = 'normal'),
              (y.ITALIC = 'italic'),
              (y.BOLD = 'bold'),
              (y.BOLDITALIC = 'bold italic'),
              (y.CHAR = 'CHAR'),
              (y.WORD = 'WORD'),
              (y._DEFAULT_TEXT_FILL = '#000000'),
              (y._DEFAULT_LEADMULT = 1.25),
              (y._CTX_MIDDLE = 'middle'),
              (y.LINEAR = 'linear'),
              (y.QUADRATIC = 'quadratic'),
              (y.BEZIER = 'bezier'),
              (y.CURVE = 'curve'),
              (y.STROKE = 'stroke'),
              (y.FILL = 'fill'),
              (y.TEXTURE = 'texture'),
              (y.IMMEDIATE = 'immediate'),
              (y.IMAGE = 'image'),
              (y.NEAREST = 'nearest'),
              (y.REPEAT = 'repeat'),
              (y.CLAMP = 'clamp'),
              (y.MIRROR = 'mirror'),
              (y.LANDSCAPE = 'landscape'),
              (y.PORTRAIT = 'portrait'),
              (y._DEFAULT_STROKE = '#000000'),
              (y._DEFAULT_FILL = '#FFFFFF'),
              (y.GRID = 'grid'),
              (y.AXES = 'axes'),
              (y.LABEL = 'label'),
              (y.FALLBACK = 'fallback');
          },
          {},
        ],
        254: [
          function (e, v, y) {
            function m(a) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (d) {
                      return typeof d;
                    }
                  : function (d) {
                      return d &&
                        typeof Symbol == 'function' &&
                        d.constructor === Symbol &&
                        d !== Symbol.prototype
                        ? 'symbol'
                        : typeof d;
                    })(a);
            }
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.includes'),
              e('core-js/modules/es.string.search'),
              e('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('./main')) && r.__esModule ? r : { default: r },
              l = (function (a) {
                if (a && a.__esModule) return a;
                if (a === null || (m(a) !== 'object' && typeof a != 'function'))
                  return { default: a };
                var d = h();
                if (d && d.has(a)) return d.get(a);
                var g = {},
                  _ = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var w in a)
                  if (Object.prototype.hasOwnProperty.call(a, w)) {
                    var S = _ ? Object.getOwnPropertyDescriptor(a, w) : null;
                    S && (S.get || S.set)
                      ? Object.defineProperty(g, w, S)
                      : (g[w] = a[w]);
                  }
                return (g.default = a), d && d.set(a, g), g;
              })(e('./constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var a = new WeakMap();
              return (
                (h = function () {
                  return a;
                }),
                a
              );
            }
            var u = [l.ARROW, l.CROSS, l.HAND, l.MOVE, l.TEXT, l.WAIT];
            (c.default.prototype._frameRate = 0),
              (c.default.prototype._lastFrameTime = window.performance.now()),
              (c.default.prototype._targetFrameRate = 60);
            var o = window.print;
            function n() {
              return (
                window.innerWidth ||
                (document.documentElement &&
                  document.documentElement.clientWidth) ||
                (document.body && document.body.clientWidth) ||
                0
              );
            }
            function s() {
              return (
                window.innerHeight ||
                (document.documentElement &&
                  document.documentElement.clientHeight) ||
                (document.body && document.body.clientHeight) ||
                0
              );
            }
            (c.default.prototype.print = function () {
              var a;
              arguments.length ? (a = console).log.apply(a, arguments) : o();
            }),
              (c.default.prototype.frameCount = 0),
              (c.default.prototype.deltaTime = 0),
              (c.default.prototype.focused = document.hasFocus()),
              (c.default.prototype.cursor = function (a, d, g) {
                var _ = 'auto',
                  w = this._curElement.elt;
                if (u.includes(a)) _ = a;
                else if (typeof a == 'string') {
                  var S = '';
                  d &&
                    g &&
                    typeof d == 'number' &&
                    typeof g == 'number' &&
                    (S = ''.concat(d, ' ').concat(g)),
                    (_ =
                      a.substring(0, 7) === 'http://' ||
                      a.substring(0, 8) === 'https://' ||
                      /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(a)
                        ? 'url('.concat(a, ') ').concat(S, ', auto')
                        : a);
                }
                w.style.cursor = _;
              }),
              (c.default.prototype.frameRate = function (a) {
                return (
                  c.default._validateParameters('frameRate', arguments),
                  typeof a != 'number' || a < 0
                    ? this._frameRate
                    : (this._setProperty('_targetFrameRate', a),
                      a === 0 && this._setProperty('_frameRate', a),
                      this)
                );
              }),
              (c.default.prototype.getFrameRate = function () {
                return this.frameRate();
              }),
              (c.default.prototype.setFrameRate = function (a) {
                return this.frameRate(a);
              }),
              (c.default.prototype.noCursor = function () {
                this._curElement.elt.style.cursor = 'none';
              }),
              (c.default.prototype.displayWidth = screen.width),
              (c.default.prototype.displayHeight = screen.height),
              (c.default.prototype.windowWidth = n()),
              (c.default.prototype.windowHeight = s()),
              (c.default.prototype._onresize = function (a) {
                this._setProperty('windowWidth', n()),
                  this._setProperty('windowHeight', s());
                var d,
                  g = this._isGlobal ? window : this;
                typeof g.windowResized == 'function' &&
                  ((d = g.windowResized(a)) === void 0 ||
                    d ||
                    a.preventDefault());
              }),
              (c.default.prototype.width = 0),
              (c.default.prototype.height = 0),
              (c.default.prototype.fullscreen = function (a) {
                if (
                  (c.default._validateParameters('fullscreen', arguments),
                  a === void 0)
                )
                  return (
                    document.fullscreenElement ||
                    document.webkitFullscreenElement ||
                    document.mozFullScreenElement ||
                    document.msFullscreenElement
                  );
                a
                  ? (function (d) {
                      if (
                        !(
                          document.fullscreenEnabled ||
                          document.webkitFullscreenEnabled ||
                          document.mozFullScreenEnabled ||
                          document.msFullscreenEnabled
                        )
                      )
                        throw new Error(
                          'Fullscreen not enabled in this browser.',
                        );
                      d.requestFullscreen
                        ? d.requestFullscreen()
                        : d.mozRequestFullScreen
                        ? d.mozRequestFullScreen()
                        : d.webkitRequestFullscreen
                        ? d.webkitRequestFullscreen()
                        : d.msRequestFullscreen && d.msRequestFullscreen();
                    })(document.documentElement)
                  : document.exitFullscreen
                  ? document.exitFullscreen()
                  : document.mozCancelFullScreen
                  ? document.mozCancelFullScreen()
                  : document.webkitExitFullscreen
                  ? document.webkitExitFullscreen()
                  : document.msExitFullscreen && document.msExitFullscreen();
              }),
              (c.default.prototype.pixelDensity = function (a) {
                var d;
                return (
                  c.default._validateParameters('pixelDensity', arguments),
                  typeof a == 'number'
                    ? (a !== this._pixelDensity && (this._pixelDensity = a),
                      (d = this).resizeCanvas(this.width, this.height, !0))
                    : (d = this._pixelDensity),
                  d
                );
              }),
              (c.default.prototype.displayDensity = function () {
                return window.devicePixelRatio;
              }),
              (c.default.prototype.getURL = function () {
                return location.href;
              }),
              (c.default.prototype.getURLPath = function () {
                return location.pathname.split('/').filter(function (a) {
                  return a !== '';
                });
              }),
              (c.default.prototype.getURLParams = function () {
                for (
                  var a, d = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, g = {};
                  (a = d.exec(location.search)) != null;

                )
                  a.index === d.lastIndex && d.lastIndex++, (g[a[1]] = a[2]);
                return g;
              });
            var i = c.default;
            y.default = i;
          },
          {
            './constants': 253,
            './main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.search': 190,
            'core-js/modules/es.string.split': 191,
          },
        ],
        255: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.for-each'),
              e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.some'),
              e('core-js/modules/es.function.name'),
              e('core-js/modules/es.object.assign'),
              e('core-js/modules/es.object.get-own-property-names'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.constructor'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.match'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.search'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/web.dom-collections.for-each'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../main')) && m.__esModule ? m : { default: m };
            e('../internationalization');
            var c = null,
              l = null;
            (r.default._friendlyError =
              r.default._checkForUserDefinedFunctions =
              r.default._fesErrorMonitor =
                function () {}),
              (c = null);
            var h =
              'https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup';
            l = function () {
              function n(i) {
                return Object.getOwnPropertyNames(i)
                  .filter(function (a) {
                    return a[0] !== '_' && !(a in s) && (s[a] = !0);
                  })
                  .map(function (a) {
                    var d;
                    return (
                      (d =
                        typeof i[a] == 'function'
                          ? 'function'
                          : a === a.toUpperCase()
                          ? 'constant'
                          : 'variable'),
                      { name: a, type: d }
                    );
                  });
              }
              var s = {};
              (c = [].concat(
                n(r.default.prototype),
                n(e('../constants')),
              )).sort(function (i, a) {
                return a.name.length - i.name.length;
              });
            };
            function u(n, s) {
              (s = s || console.log.bind(console)),
                c || l(),
                c.some(function (i) {
                  if (
                    n.message &&
                    n.message.match('\\W?'.concat(i.name, '\\W')) !== null
                  ) {
                    var a =
                      i.type === 'function' ? ''.concat(i.name, '()') : i.name;
                    return (
                      s(
                        "Did you just try to use p5.js's "
                          .concat(a, ' ')
                          .concat(
                            i.type,
                            `? If so, you may want to move it into your sketch's setup() function.

For more details, see: `,
                          )
                          .concat(h),
                      ),
                      !0
                    );
                  }
                });
            }
            (r.default.prototype._helpForMisusedAtTopLevelCode = u),
              document.readyState !== 'complete' &&
                (window.addEventListener('error', u, !1),
                window.addEventListener('load', function () {
                  window.removeEventListener('error', u, !1);
                }));
            var o = r.default;
            y.default = o;
          },
          {
            '../constants': 253,
            '../internationalization': 262,
            '../main': 264,
            './browser_errors': void 0,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.some': 163,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.object.assign': 173,
            'core-js/modules/es.object.get-own-property-names': 174,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.search': 190,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.for-each': 228,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        256: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../main')) && m.__esModule ? m : { default: m };
            e('../internationalization'),
              (r.default._friendlyFileLoadError = function () {});
            var c = r.default;
            y.default = c;
          },
          { '../internationalization': 262, '../main': 264 },
        ],
        257: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.flat-map'),
              e('core-js/modules/es.array.for-each'),
              e('core-js/modules/es.array.from'),
              e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.unscopables.flat-map'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.constructor'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.includes'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.match'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.string.trim'),
              e('core-js/modules/web.dom-collections.for-each'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = h(e('../main'));
            e('../internationalization'), l(e('../constants'));
            function c() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (c = function () {
                  return o;
                }),
                o
              );
            }
            function l(o) {
              if (o && o.__esModule) return o;
              if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                return { default: o };
              var n = c();
              if (n && n.has(o)) return n.get(o);
              var s = {},
                i = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var a in o)
                if (Object.prototype.hasOwnProperty.call(o, a)) {
                  var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                  d && (d.get || d.set)
                    ? Object.defineProperty(s, a, d)
                    : (s[a] = o[a]);
                }
              return (s.default = o), n && n.set(o, s), s;
            }
            function h(o) {
              return o && o.__esModule ? o : { default: o };
            }
            r.default._fesCodeReader = function () {};
            var u = r.default;
            y.default = u;
          },
          {
            '../constants': 253,
            '../internationalization': 262,
            '../main': 264,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.flat-map': 153,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.unscopables.flat-map': 165,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.for-each': 228,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        258: [
          function (e, v, y) {
            e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.match'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../main')) && m.__esModule ? m : { default: m };
            function c() {
              var h = /(^|@)\S+:\d+/,
                u = /^\s*at .*(\S+:\d+|\(native\))/m,
                o = /^(eval@)?(\[native code])?$/;
              return {
                parse: function (n) {
                  return n.stacktrace !== void 0 ||
                    n['opera#sourceloc'] !== void 0
                    ? this.parseOpera(n)
                    : n.stack && n.stack.match(u)
                    ? this.parseV8OrIE(n)
                    : n.stack
                    ? this.parseFFOrSafari(n)
                    : void 0;
                },
                extractLocation: function (n) {
                  if (n.indexOf(':') === -1) return [n];
                  var s = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(
                    n.replace(/[()]/g, ''),
                  );
                  return [s[1], s[2] || void 0, s[3] || void 0];
                },
                parseV8OrIE: function (n) {
                  return n.stack
                    .split(
                      `
`,
                    )
                    .filter(function (s) {
                      return !!s.match(u);
                    }, this)
                    .map(function (s) {
                      -1 < s.indexOf('(eval ') &&
                        (s = s
                          .replace(/eval code/g, 'eval')
                          .replace(/(\(eval at [^()]*)|(\),.*$)/g, ''));
                      var i = s
                          .replace(/^\s+/, '')
                          .replace(/\(eval code/g, '('),
                        a = i.match(/ (\((.+):(\d+):(\d+)\)$)/),
                        d = (i = a ? i.replace(a[0], '') : i)
                          .split(/\s+/)
                          .slice(1),
                        g = this.extractLocation(a ? a[1] : d.pop());
                      return {
                        functionName: d.join(' ') || void 0,
                        fileName:
                          -1 < ['eval', '<anonymous>'].indexOf(g[0])
                            ? void 0
                            : g[0],
                        lineNumber: g[1],
                        columnNumber: g[2],
                        source: s,
                      };
                    }, this);
                },
                parseFFOrSafari: function (n) {
                  return n.stack
                    .split(
                      `
`,
                    )
                    .filter(function (s) {
                      return !s.match(o);
                    }, this)
                    .map(function (s) {
                      if (
                        (-1 < s.indexOf(' > eval') &&
                          (s = s.replace(
                            / line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,
                            ':$1',
                          )),
                        s.indexOf('@') === -1 && s.indexOf(':') === -1)
                      )
                        return { functionName: s };
                      var i = /((.*".+"[^@]*)?[^@]*)(?:@)/,
                        a = s.match(i),
                        d = a && a[1] ? a[1] : void 0,
                        g = this.extractLocation(s.replace(i, ''));
                      return {
                        functionName: d,
                        fileName: g[0],
                        lineNumber: g[1],
                        columnNumber: g[2],
                        source: s,
                      };
                    }, this);
                },
                parseOpera: function (n) {
                  return !n.stacktrace ||
                    (-1 <
                      n.message.indexOf(`
`) &&
                      n.message.split(`
`).length >
                        n.stacktrace.split(`
`).length)
                    ? this.parseOpera9(n)
                    : n.stack
                    ? this.parseOpera11(n)
                    : this.parseOpera10(n);
                },
                parseOpera9: function (n) {
                  for (
                    var s = /Line (\d+).*script (?:in )?(\S+)/i,
                      i = n.message.split(`
`),
                      a = [],
                      d = 2,
                      g = i.length;
                    d < g;
                    d += 2
                  ) {
                    var _ = s.exec(i[d]);
                    _ &&
                      a.push({
                        fileName: _[2],
                        lineNumber: _[1],
                        source: i[d],
                      });
                  }
                  return a;
                },
                parseOpera10: function (n) {
                  for (
                    var s =
                        /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,
                      i = n.stacktrace.split(`
`),
                      a = [],
                      d = 0,
                      g = i.length;
                    d < g;
                    d += 2
                  ) {
                    var _ = s.exec(i[d]);
                    _ &&
                      a.push({
                        functionName: _[3] || void 0,
                        fileName: _[2],
                        lineNumber: _[1],
                        source: i[d],
                      });
                  }
                  return a;
                },
                parseOpera11: function (n) {
                  return n.stack
                    .split(
                      `
`,
                    )
                    .filter(function (s) {
                      return !!s.match(h) && !s.match(/^Error created at/);
                    }, this)
                    .map(function (s) {
                      var i,
                        a = s.split('@'),
                        d = this.extractLocation(a.pop()),
                        g = a.shift() || '',
                        _ =
                          g
                            .replace(/<anonymous function(: (\w+))?>/, '$2')
                            .replace(/\([^)]*\)/g, '') || void 0;
                      return (
                        g.match(/\(([^)]*)\)/) &&
                          (i = g.replace(/^[^(]+\(([^)]*)\)$/, '$1')),
                        {
                          functionName: _,
                          args:
                            i === void 0 || i === '[arguments not available]'
                              ? void 0
                              : i.split(','),
                          fileName: d[0],
                          lineNumber: d[1],
                          columnNumber: d[2],
                          source: s,
                        }
                      );
                    }, this);
                },
              };
            }
            r.default._getErrorStackParser = function () {
              return new c();
            };
            var l = r.default;
            y.default = l;
          },
          {
            '../main': 264,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
          },
        ],
        259: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.for-each'),
              e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.last-index-of'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.function.name'),
              e('core-js/modules/es.map'),
              e('core-js/modules/es.number.constructor'),
              e('core-js/modules/es.object.get-prototype-of'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.reflect.construct'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.set'),
              e('core-js/modules/es.string.includes'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/web.dom-collections.for-each'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../main')) && m.__esModule ? m : { default: m };
            (function (u) {
              if (
                !(u && u.__esModule) &&
                !(u === null || (l(u) !== 'object' && typeof u != 'function'))
              ) {
                var o = c();
                if (o && o.has(u)) return o.get(u);
                var n = {},
                  s = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var i in u)
                  if (Object.prototype.hasOwnProperty.call(u, i)) {
                    var a = s ? Object.getOwnPropertyDescriptor(u, i) : null;
                    a && (a.get || a.set)
                      ? Object.defineProperty(n, i, a)
                      : (n[i] = u[i]);
                  }
                (n.default = u), o && o.set(u, n);
              }
            })(e('../constants')),
              e('../internationalization');
            function c() {
              if (typeof WeakMap != 'function') return null;
              var u = new WeakMap();
              return (
                (c = function () {
                  return u;
                }),
                u
              );
            }
            function l(u) {
              return (l =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (o) {
                      return typeof o;
                    }
                  : function (o) {
                      return o &&
                        typeof Symbol == 'function' &&
                        o.constructor === Symbol &&
                        o !== Symbol.prototype
                        ? 'symbol'
                        : typeof o;
                    })(u);
            }
            r.default._validateParameters =
              r.default._clearValidateParamsCache = function () {};
            var h = r.default;
            y.default = h;
          },
          {
            '../../../docs/parameterData.json': void 0,
            '../constants': 253,
            '../internationalization': 262,
            '../main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.last-index-of': 160,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.map': 167,
            'core-js/modules/es.number.constructor': 170,
            'core-js/modules/es.object.get-prototype-of': 175,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.reflect.construct': 179,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.set': 183,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.for-each': 228,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        260: [
          function (e, v, y) {
            function m(h) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (u) {
                      return typeof u;
                    }
                  : function (u) {
                      return u &&
                        typeof Symbol == 'function' &&
                        u.constructor === Symbol &&
                        u !== Symbol.prototype
                        ? 'symbol'
                        : typeof u;
                    })(h);
            }
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = (function (h) {
              if (h && h.__esModule) return h;
              if (h === null || (m(h) !== 'object' && typeof h != 'function'))
                return { default: h };
              var u = c();
              if (u && u.has(h)) return u.get(h);
              var o = {},
                n = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var s in h)
                if (Object.prototype.hasOwnProperty.call(h, s)) {
                  var i = n ? Object.getOwnPropertyDescriptor(h, s) : null;
                  i && (i.get || i.set)
                    ? Object.defineProperty(o, s, i)
                    : (o[s] = h[s]);
                }
              return (o.default = h), u && u.set(h, o), o;
            })(e('./constants'));
            function c() {
              if (typeof WeakMap != 'function') return null;
              var h = new WeakMap();
              return (
                (c = function () {
                  return h;
                }),
                h
              );
            }
            var l = {
              modeAdjust: function (h, u, o, n, s) {
                return s === r.CORNER
                  ? { x: h, y: u, w: o, h: n }
                  : s === r.CORNERS
                  ? { x: h, y: u, w: o - h, h: n - u }
                  : s === r.RADIUS
                  ? { x: h - o, y: u - n, w: 2 * o, h: 2 * n }
                  : s === r.CENTER
                  ? { x: h - 0.5 * o, y: u - 0.5 * n, w: o, h: n }
                  : void 0;
              },
            };
            y.default = l;
          },
          { './constants': 253 },
        ],
        261: [
          function (e, v, y) {
            e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.promise'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/web.dom-collections.iterator');
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            e('./internationalization');
            var c = Promise.resolve();
            Promise.all([
              new Promise(function (l, h) {
                document.readyState === 'complete'
                  ? l()
                  : window.addEventListener('load', l, !1);
              }),
              c,
            ]).then(function () {
              window._setupDone === void 0
                ? window.mocha ||
                  (((window.setup && typeof window.setup == 'function') ||
                    (window.draw && typeof window.draw == 'function')) &&
                    !r.default.instance &&
                    new r.default())
                : console.warn(
                    'p5.js seems to have been imported multiple times. Please remove the duplicate import',
                  );
            });
          },
          {
            '../core/main': 264,
            './internationalization': 262,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        262: [
          function (e, v, y) {
            e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.promise'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.includes'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.setTranslatorLanguage =
                y.currentTranslatorLanguage =
                y.availableTranslatorLanguages =
                y.initialize =
                y.translator =
                  void 0);
            var m,
              r,
              c = h(e('i18next')),
              l = h(e('i18next-browser-languagedetector'));
            function h(s) {
              return s && s.__esModule ? s : { default: s };
            }
            function u(s, i) {
              for (var a = 0; a < i.length; a++) {
                var d = i[a];
                (d.enumerable = d.enumerable || !1),
                  (d.configurable = !0),
                  'value' in d && (d.writable = !0),
                  Object.defineProperty(s, d.key, d);
              }
            }
            var o = (function () {
              function s(d, g) {
                (function (_, w) {
                  if (!(_ instanceof w))
                    throw new TypeError('Cannot call a class as a function');
                })(this, s),
                  this.init(d, g);
              }
              var i, a;
              return (
                (i = s),
                (a = [
                  {
                    key: 'fetchWithTimeout',
                    value: function (d, g, _) {
                      var w = 2 < arguments.length && _ !== void 0 ? _ : 2e3;
                      return Promise.race([
                        fetch(d, g),
                        new Promise(function (S, M) {
                          return setTimeout(function () {
                            return M(new Error('timeout'));
                          }, w);
                        }),
                      ]);
                    },
                  },
                  {
                    key: 'init',
                    value: function (d, g) {
                      var _ = 1 < arguments.length && g !== void 0 ? g : {};
                      (this.services = d), (this.options = _);
                    },
                  },
                  {
                    key: 'read',
                    value: function (d, g, _) {
                      var w = this.options.loadPath;
                      if (d === this.options.fallback) _(null, m[d][g]);
                      else if (r.includes(d)) {
                        var S = this.services.interpolator.interpolate(w, {
                          lng: d,
                          ns: g,
                        });
                        this.loadUrl(S, _);
                      } else _('Not found', !1);
                    },
                  },
                  {
                    key: 'loadUrl',
                    value: function (d, g) {
                      this.fetchWithTimeout(d)
                        .then(
                          function (_) {
                            if (!_.ok)
                              throw new Error('failed loading '.concat(d));
                            return _.json();
                          },
                          function () {
                            throw new Error('failed loading '.concat(d));
                          },
                        )
                        .then(function (_) {
                          return g(null, _);
                        })
                        .catch(g);
                    },
                  },
                ]) && u(i.prototype, a),
                s
              );
            })();
            o.type = 'backend';
            var n = function (s, i) {
              console.debug(
                'p5.js translator called before translations were loaded',
              ),
                c.default.t(s, i);
            };
            (y.translator = n),
              (y.initialize = function () {
                return c.default
                  .use(l.default)
                  .use(o)
                  .init({
                    fallbackLng: 'en',
                    nestingPrefix: '$tr(',
                    nestingSuffix: ')',
                    defaultNS: 'translation',
                    returnEmptyString: !1,
                    interpolation: { escapeValue: !1 },
                    detection: {
                      checkWhitelist: !1,
                      order: [
                        'querystring',
                        'navigator',
                        'htmlTag',
                        'path',
                        'subdomain',
                      ],
                      caches: [],
                    },
                    backend: {
                      fallback: 'en',
                      loadPath:
                        'https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json',
                    },
                    partialBundledLanguages: !0,
                    resources: m,
                  })
                  .then(
                    function (s) {
                      y.translator = n = s;
                    },
                    function (s) {
                      return console.debug(
                        'Translations failed to load ('.concat(s, ')'),
                      );
                    },
                  );
              }),
              (y.availableTranslatorLanguages = function () {
                return c.default.languages;
              }),
              (y.currentTranslatorLanguage = function () {
                return c.default.language;
              }),
              (y.setTranslatorLanguage = function (s) {
                return c.default.changeLanguage(s || void 0, function (i) {
                  return console.debug(
                    'Translations failed to load ('.concat(i, ')'),
                  );
                });
              });
          },
          {
            '../../translations': void 0,
            '../../translations/dev': void 0,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/web.dom-collections.iterator': 229,
            i18next: 3,
            'i18next-browser-languagedetector': 3,
          },
        ],
        263: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('./main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.pushStyle = function () {
              throw new Error('pushStyle() not used, see push()');
            }),
              (r.default.prototype.popStyle = function () {
                throw new Error('popStyle() not used, see pop()');
              }),
              (r.default.prototype.popMatrix = function () {
                throw new Error('popMatrix() not used, see pop()');
              }),
              (r.default.prototype.pushMatrix = function () {
                throw new Error('pushMatrix() not used, see push()');
              });
            var c = r.default;
            y.default = c;
          },
          { './main': 264 },
        ],
        264: [
          function (e, v, y) {
            function m(n) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(n);
            }
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.for-each'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.get-own-property-names'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/web.dom-collections.for-each'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              e('./shim');
            var r = (function (n) {
              if (n && n.__esModule) return n;
              if (n === null || (m(n) !== 'object' && typeof n != 'function'))
                return { default: n };
              var s = c();
              if (s && s.has(n)) return s.get(n);
              var i = {},
                a = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var d in n)
                if (Object.prototype.hasOwnProperty.call(n, d)) {
                  var g = a ? Object.getOwnPropertyDescriptor(n, d) : null;
                  g && (g.get || g.set)
                    ? Object.defineProperty(i, d, g)
                    : (i[d] = n[d]);
                }
              return (i.default = n), s && s.set(n, i), i;
            })(e('./constants'));
            function c() {
              if (typeof WeakMap != 'function') return null;
              var n = new WeakMap();
              return (
                (c = function () {
                  return n;
                }),
                n
              );
            }
            function l(n, s) {
              for (var i = 0; i < s.length; i++) {
                var a = s[i];
                (a.enumerable = a.enumerable || !1),
                  (a.configurable = !0),
                  'value' in a && (a.writable = !0),
                  Object.defineProperty(n, a.key, a);
              }
            }
            var h = (function () {
              function n(a, d, g) {
                var _ = this;
                (function (Q, oe) {
                  if (!(Q instanceof oe))
                    throw new TypeError('Cannot call a class as a function');
                })(this, n),
                  (this._setupDone = !1),
                  (this._pixelDensity =
                    Math.ceil(window.devicePixelRatio) || 1),
                  (this._userNode = d),
                  (this._curElement = null),
                  (this._elements = []),
                  (this._glAttributes = null),
                  (this._requestAnimId = 0),
                  (this._preloadCount = 0),
                  (this._isGlobal = !1),
                  (this._loop = !0),
                  this._initializeInstanceVariables(),
                  (this._defaultCanvasSize = { width: 100, height: 100 }),
                  (this._events = {
                    mousemove: null,
                    mousedown: null,
                    mouseup: null,
                    dragend: null,
                    dragover: null,
                    click: null,
                    dblclick: null,
                    mouseover: null,
                    mouseout: null,
                    keydown: null,
                    keyup: null,
                    keypress: null,
                    touchstart: null,
                    touchmove: null,
                    touchend: null,
                    resize: null,
                    blur: null,
                  }),
                  (this._millisStart = -1),
                  (this._lcg_random_state = null),
                  (this._gaussian_previous = !1),
                  (this._events.wheel = null),
                  (this._loadingScreenId = 'p5_loading'),
                  (this._registeredMethods = {});
                var w = Object.getOwnPropertyNames(
                    n.prototype._registeredMethods,
                  ),
                  S = !0,
                  M = !1,
                  E = void 0;
                try {
                  for (
                    var O, D = w[Symbol.iterator]();
                    !(S = (O = D.next()).done);
                    S = !0
                  ) {
                    var A = O.value;
                    this._registeredMethods[A] =
                      n.prototype._registeredMethods[A].slice();
                  }
                } catch (Q) {
                  (M = !0), (E = Q);
                } finally {
                  try {
                    S || D.return == null || D.return();
                  } finally {
                    if (M) throw E;
                  }
                }
                window.DeviceOrientationEvent &&
                  (this._events.deviceorientation = null),
                  window.DeviceMotionEvent &&
                    !window._isNodeWebkit &&
                    (this._events.devicemotion = null),
                  (this._start = function () {
                    _._userNode &&
                      typeof _._userNode == 'string' &&
                      (_._userNode = document.getElementById(_._userNode));
                    var Q = _._isGlobal ? window : _;
                    if (Q.preload) {
                      var oe = document.getElementById(_._loadingScreenId);
                      oe ||
                        (((oe = document.createElement('div')).innerHTML =
                          'Loading...'),
                        (oe.style.position = 'absolute'),
                        (oe.id = _._loadingScreenId),
                        (_._userNode || document.body).appendChild(oe));
                      var ce = _._preloadMethods;
                      for (var ve in ce) {
                        ce[ve] = ce[ve] || n;
                        var de = ce[ve];
                        (de !== n.prototype && de !== n) ||
                          (_._isGlobal && (window[ve] = _._wrapPreload(_, ve)),
                          (de = _)),
                          (_._registeredPreloadMethods[ve] = de[ve]),
                          (de[ve] = _._wrapPreload(de, ve));
                      }
                      Q.preload(), _._runIfPreloadsAreDone();
                    } else _._setup(), _._draw();
                  }),
                  (this._runIfPreloadsAreDone = function () {
                    var Q = this._isGlobal ? window : this;
                    if (Q._preloadCount === 0) {
                      var oe = document.getElementById(Q._loadingScreenId);
                      oe && oe.parentNode.removeChild(oe),
                        this._setupDone ||
                          ((this._lastFrameTime = window.performance.now()),
                          Q._setup(),
                          Q._draw());
                    }
                  }),
                  (this._decrementPreload = function () {
                    var Q = this._isGlobal ? window : this;
                    typeof Q.preload == 'function' &&
                      (Q._setProperty('_preloadCount', Q._preloadCount - 1),
                      Q._runIfPreloadsAreDone());
                  }),
                  (this._wrapPreload = function (Q, oe) {
                    var ce = this;
                    return function () {
                      ce._incrementPreload();
                      for (
                        var ve = arguments.length, de = new Array(ve), Se = 0;
                        Se < ve;
                        Se++
                      )
                        de[Se] = arguments[Se];
                      return ce._registeredPreloadMethods[oe].apply(Q, de);
                    };
                  }),
                  (this._incrementPreload = function () {
                    var Q = this._isGlobal ? window : this;
                    Q._setProperty('_preloadCount', Q._preloadCount + 1);
                  }),
                  (this._setup = function () {
                    _.createCanvas(
                      _._defaultCanvasSize.width,
                      _._defaultCanvasSize.height,
                      'p2d',
                    );
                    var Q = _._isGlobal ? window : _;
                    if (typeof Q.preload == 'function')
                      for (var oe in _._preloadMethods)
                        (Q[oe] = _._preloadMethods[oe][oe]),
                          Q[oe] && _ && (Q[oe] = Q[oe].bind(_));
                    (_._millisStart = window.performance.now()),
                      typeof Q.setup == 'function' && Q.setup();
                    var ce = document.getElementsByTagName('canvas'),
                      ve = !0,
                      de = !1,
                      Se = void 0;
                    try {
                      for (
                        var fe, ye = ce[Symbol.iterator]();
                        !(ve = (fe = ye.next()).done);
                        ve = !0
                      ) {
                        var P = fe.value;
                        P.dataset.hidden === 'true' &&
                          ((P.style.visibility = ''), delete P.dataset.hidden);
                      }
                    } catch (U) {
                      (de = !0), (Se = U);
                    } finally {
                      try {
                        ve || ye.return == null || ye.return();
                      } finally {
                        if (de) throw Se;
                      }
                    }
                    (_._lastFrameTime = window.performance.now()),
                      (_._setupDone = !0),
                      (_._accessibleOutputs.grid ||
                        _._accessibleOutputs.text) &&
                        _._updateAccsOutput();
                  }),
                  (this._draw = function () {
                    var Q = window.performance.now(),
                      oe = Q - _._lastFrameTime,
                      ce = 1e3 / _._targetFrameRate;
                    (!_._loop || ce - 5 <= oe) &&
                      (_.redraw(),
                      (_._frameRate = 1e3 / (Q - _._lastFrameTime)),
                      (_.deltaTime = Q - _._lastFrameTime),
                      _._setProperty('deltaTime', _.deltaTime),
                      (_._lastFrameTime = Q),
                      _._updateMouseCoords !== void 0 &&
                        (_._updateMouseCoords(),
                        _._setProperty('movedX', 0),
                        _._setProperty('movedY', 0))),
                      _._loop &&
                        (_._requestAnimId = window.requestAnimationFrame(
                          _._draw,
                        ));
                  }),
                  (this._setProperty = function (Q, oe) {
                    (_[Q] = oe), _._isGlobal && (window[Q] = oe);
                  }),
                  (this.remove = function () {
                    var Q = document.getElementById(_._loadingScreenId);
                    if (
                      (Q &&
                        (Q.parentNode.removeChild(Q), _._incrementPreload()),
                      _._curElement)
                    ) {
                      for (var oe in ((_._loop = !1),
                      _._requestAnimId &&
                        window.cancelAnimationFrame(_._requestAnimId),
                      _._events))
                        window.removeEventListener(oe, _._events[oe]);
                      var ce = !0,
                        ve = !1,
                        de = void 0;
                      try {
                        for (
                          var Se, fe = _._elements[Symbol.iterator]();
                          !(ce = (Se = fe.next()).done);
                          ce = !0
                        ) {
                          var ye = Se.value;
                          for (var P in (ye.elt &&
                            ye.elt.parentNode &&
                            ye.elt.parentNode.removeChild(ye.elt),
                          ye._events))
                            ye.elt.removeEventListener(P, ye._events[P]);
                        }
                      } catch (ne) {
                        (ve = !0), (de = ne);
                      } finally {
                        try {
                          ce || fe.return == null || fe.return();
                        } finally {
                          if (ve) throw de;
                        }
                      }
                      var U = _;
                      _._registeredMethods.remove.forEach(function (ne) {
                        ne !== void 0 && ne.call(U);
                      });
                    }
                    if (_._isGlobal) {
                      for (var W in n.prototype)
                        try {
                          delete window[W];
                        } catch {
                          window[W] = void 0;
                        }
                      for (var K in _)
                        if (_.hasOwnProperty(K))
                          try {
                            delete window[K];
                          } catch {
                            window[K] = void 0;
                          }
                      n.instance = null;
                    }
                  }),
                  this._registeredMethods.init.forEach(function (Q) {
                    Q !== void 0 && Q.call(this);
                  }, this),
                  this._setupPromisePreloads();
                var k = this._createFriendlyGlobalFunctionBinder();
                if (a) a(this), n._checkForUserDefinedFunctions(this);
                else {
                  for (var L in ((this._isGlobal = !0),
                  (n.instance = this),
                  n.prototype))
                    if (typeof n.prototype[L] == 'function') {
                      var R = L.substring(2);
                      this._events.hasOwnProperty(R) ||
                        (Math.hasOwnProperty(L) && Math[L] === n.prototype[L]
                          ? k(L, n.prototype[L])
                          : k(L, n.prototype[L].bind(this)));
                    } else k(L, n.prototype[L]);
                  for (var N in this) this.hasOwnProperty(N) && k(N, this[N]);
                }
                for (var B in this._events) {
                  var Z = this['_on'.concat(B)];
                  if (Z) {
                    var J = Z.bind(this);
                    window.addEventListener(B, J, { passive: !1 }),
                      (this._events[B] = J);
                  }
                }
                function $() {
                  _._setProperty('focused', !0);
                }
                function ee() {
                  _._setProperty('focused', !1);
                }
                window.addEventListener('focus', $),
                  window.addEventListener('blur', ee),
                  this.registerMethod('remove', function () {
                    window.removeEventListener('focus', $),
                      window.removeEventListener('blur', ee);
                  }),
                  document.readyState === 'complete'
                    ? this._start()
                    : window.addEventListener(
                        'load',
                        this._start.bind(this),
                        !1,
                      );
              }
              var s, i;
              return (
                (s = n),
                (i = [
                  {
                    key: '_initializeInstanceVariables',
                    value: function () {
                      (this._accessibleOutputs = {
                        text: !1,
                        grid: !1,
                        textLabel: !1,
                        gridLabel: !1,
                      }),
                        (this._styles = []),
                        (this._bezierDetail = 20),
                        (this._curveDetail = 20),
                        (this._colorMode = r.RGB),
                        (this._colorMaxes = {
                          rgb: [255, 255, 255, 255],
                          hsb: [360, 100, 100, 1],
                          hsl: [360, 100, 100, 1],
                        }),
                        (this._downKeys = {});
                    },
                  },
                  {
                    key: 'registerPreloadMethod',
                    value: function (a, d) {
                      n.prototype._preloadMethods.hasOwnProperty(a) ||
                        (n.prototype._preloadMethods[a] = d);
                    },
                  },
                  {
                    key: 'registerMethod',
                    value: function (a, d) {
                      var g = this || n.prototype;
                      g._registeredMethods.hasOwnProperty(a) ||
                        (g._registeredMethods[a] = []),
                        g._registeredMethods[a].push(d);
                    },
                  },
                  {
                    key: '_createFriendlyGlobalFunctionBinder',
                    value: function (a) {
                      var d = 0 < arguments.length && a !== void 0 ? a : {},
                        g = d.globalObject || window;
                      return (
                        d.log || console.log.bind(console),
                        function (_, w) {
                          g[_] = w;
                        }
                      );
                    },
                  },
                ]) && l(s.prototype, i),
                n
              );
            })();
            for (var u in ((h.instance = null),
            (h.disableFriendlyErrors = !1),
            r))
              h.prototype[u] = r[u];
            (h.VERSION = r.VERSION),
              (h.prototype._preloadMethods = {
                loadJSON: h.prototype,
                loadImage: h.prototype,
                loadStrings: h.prototype,
                loadXML: h.prototype,
                loadBytes: h.prototype,
                loadTable: h.prototype,
                loadFont: h.prototype,
                loadModel: h.prototype,
                loadShader: h.prototype,
              }),
              (h.prototype._registeredMethods = {
                init: [],
                pre: [],
                post: [],
                remove: [],
              }),
              (h.prototype._registeredPreloadMethods = {});
            var o = h;
            y.default = o;
          },
          {
            './constants': 253,
            './shim': 275,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-names': 174,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.for-each': 228,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        265: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('./main')) && m.__esModule ? m : { default: m };
            (r.default.Element = function (l, h) {
              (this.elt = l),
                (this._pInst = this._pixelsState = h),
                (this._events = {}),
                (this.width = this.elt.offsetWidth),
                (this.height = this.elt.offsetHeight);
            }),
              (r.default.Element.prototype.parent = function (l) {
                return l === void 0
                  ? this.elt.parentNode
                  : (typeof l == 'string'
                      ? (l[0] === '#' && (l = l.substring(1)),
                        (l = document.getElementById(l)))
                      : l instanceof r.default.Element && (l = l.elt),
                    l.appendChild(this.elt),
                    this);
              }),
              (r.default.Element.prototype.id = function (l) {
                return l === void 0
                  ? this.elt.id
                  : ((this.elt.id = l),
                    (this.width = this.elt.offsetWidth),
                    (this.height = this.elt.offsetHeight),
                    this);
              }),
              (r.default.Element.prototype.class = function (l) {
                return l === void 0
                  ? this.elt.className
                  : ((this.elt.className = l), this);
              }),
              (r.default.Element.prototype.mousePressed = function (l) {
                return (
                  r.default.Element._adjustListener(
                    'mousedown',
                    function (h) {
                      return (
                        this._pInst._setProperty('mouseIsPressed', !0),
                        this._pInst._setMouseButton(h),
                        l.call(this, h)
                      );
                    },
                    this,
                  ),
                  this
                );
              }),
              (r.default.Element.prototype.doubleClicked = function (l) {
                return (
                  r.default.Element._adjustListener('dblclick', l, this), this
                );
              }),
              (r.default.Element.prototype.mouseWheel = function (l) {
                return (
                  r.default.Element._adjustListener('wheel', l, this), this
                );
              }),
              (r.default.Element.prototype.mouseReleased = function (l) {
                return (
                  r.default.Element._adjustListener('mouseup', l, this), this
                );
              }),
              (r.default.Element.prototype.mouseClicked = function (l) {
                return (
                  r.default.Element._adjustListener('click', l, this), this
                );
              }),
              (r.default.Element.prototype.mouseMoved = function (l) {
                return (
                  r.default.Element._adjustListener('mousemove', l, this), this
                );
              }),
              (r.default.Element.prototype.mouseOver = function (l) {
                return (
                  r.default.Element._adjustListener('mouseover', l, this), this
                );
              }),
              (r.default.Element.prototype.mouseOut = function (l) {
                return (
                  r.default.Element._adjustListener('mouseout', l, this), this
                );
              }),
              (r.default.Element.prototype.touchStarted = function (l) {
                return (
                  r.default.Element._adjustListener('touchstart', l, this), this
                );
              }),
              (r.default.Element.prototype.touchMoved = function (l) {
                return (
                  r.default.Element._adjustListener('touchmove', l, this), this
                );
              }),
              (r.default.Element.prototype.touchEnded = function (l) {
                return (
                  r.default.Element._adjustListener('touchend', l, this), this
                );
              }),
              (r.default.Element.prototype.dragOver = function (l) {
                return (
                  r.default.Element._adjustListener('dragover', l, this), this
                );
              }),
              (r.default.Element.prototype.dragLeave = function (l) {
                return (
                  r.default.Element._adjustListener('dragleave', l, this), this
                );
              }),
              (r.default.Element._adjustListener = function (l, h, u) {
                return (
                  h === !1
                    ? r.default.Element._detachListener(l, u)
                    : r.default.Element._attachListener(l, h, u),
                  this
                );
              }),
              (r.default.Element._attachListener = function (l, h, u) {
                u._events[l] && r.default.Element._detachListener(l, u);
                var o = h.bind(u);
                u.elt.addEventListener(l, o, !1), (u._events[l] = o);
              }),
              (r.default.Element._detachListener = function (l, h) {
                var u = h._events[l];
                h.elt.removeEventListener(l, u, !1), (h._events[l] = null);
              }),
              (r.default.Element.prototype._setProperty = function (l, h) {
                this[l] = h;
              });
            var c = r.default.Element;
            y.default = c;
          },
          { './main': 264 },
        ],
        266: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.splice'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('./main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('./constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            (c.default.Graphics = function (o, n, s, i) {
              var a = s || l.P2D;
              this.canvas = document.createElement('canvas');
              var d = i._userNode || document.body;
              for (var g in (d.appendChild(this.canvas),
              c.default.Element.call(this, this.canvas, i),
              c.default.prototype))
                this[g] ||
                  (typeof c.default.prototype[g] == 'function'
                    ? (this[g] = c.default.prototype[g].bind(this))
                    : (this[g] = c.default.prototype[g]));
              return (
                c.default.prototype._initializeInstanceVariables.apply(this),
                (this.width = o),
                (this.height = n),
                (this._pixelDensity = i._pixelDensity),
                a === l.WEBGL
                  ? (this._renderer = new c.default.RendererGL(
                      this.canvas,
                      this,
                      !1,
                    ))
                  : (this._renderer = new c.default.Renderer2D(
                      this.canvas,
                      this,
                      !1,
                    )),
                i._elements.push(this),
                Object.defineProperty(this, 'deltaTime', {
                  get: function () {
                    return this._pInst.deltaTime;
                  },
                }),
                this._renderer.resize(o, n),
                this._renderer._applyDefaults(),
                this
              );
            }),
              (c.default.Graphics.prototype = Object.create(
                c.default.Element.prototype,
              )),
              (c.default.Graphics.prototype.reset = function () {
                this._renderer.resetMatrix(),
                  this._renderer.isP3D && this._renderer._update();
              }),
              (c.default.Graphics.prototype.remove = function () {
                this.elt.parentNode &&
                  this.elt.parentNode.removeChild(this.elt);
                var o = this._pInst._elements.indexOf(this);
                for (var n in (o !== -1 && this._pInst._elements.splice(o, 1),
                this._events))
                  this.elt.removeEventListener(n, this._events[n]);
              });
            var u = c.default.Graphics;
            y.default = u;
          },
          {
            './constants': 253,
            './main': 264,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.splice': 164,
          },
        ],
        267: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.number.constructor'),
              e('core-js/modules/es.object.assign'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.string.trim'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('./main')) && m.__esModule ? m : { default: m },
              c = (function (n) {
                if (n && n.__esModule) return n;
                if (n === null || (h(n) !== 'object' && typeof n != 'function'))
                  return { default: n };
                var s = l();
                if (s && s.has(n)) return s.get(n);
                var i = {},
                  a = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var d in n)
                  if (Object.prototype.hasOwnProperty.call(n, d)) {
                    var g = a ? Object.getOwnPropertyDescriptor(n, d) : null;
                    g && (g.get || g.set)
                      ? Object.defineProperty(i, d, g)
                      : (i[d] = n[d]);
                  }
                return (i.default = n), s && s.set(n, i), i;
              })(e('../core/constants'));
            function l() {
              if (typeof WeakMap != 'function') return null;
              var n = new WeakMap();
              return (
                (l = function () {
                  return n;
                }),
                n
              );
            }
            function h(n) {
              return (h =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(n);
            }
            function u(n) {
              var s = 0,
                i = 0;
              if (n.offsetParent)
                for (
                  ;
                  (s += n.offsetLeft), (i += n.offsetTop), (n = n.offsetParent);

                );
              else (s += n.offsetLeft), (i += n.offsetTop);
              return [s, i];
            }
            (r.default.Renderer = function (n, s, i) {
              r.default.Element.call(this, n, s),
                (this.canvas = n),
                (this._pixelsState = s),
                i
                  ? ((this._isMainCanvas = !0),
                    this._pInst._setProperty('_curElement', this),
                    this._pInst._setProperty('canvas', this.canvas),
                    this._pInst._setProperty('width', this.width),
                    this._pInst._setProperty('height', this.height))
                  : ((this.canvas.style.display = 'none'), (this._styles = [])),
                (this._textSize = 12),
                (this._textLeading = 15),
                (this._textFont = 'sans-serif'),
                (this._textStyle = c.NORMAL),
                (this._textAscent = null),
                (this._textDescent = null),
                (this._textAlign = c.LEFT),
                (this._textBaseline = c.BASELINE),
                (this._textWrap = c.WORD),
                (this._rectMode = c.CORNER),
                (this._ellipseMode = c.CENTER),
                (this._curveTightness = 0),
                (this._imageMode = c.CORNER),
                (this._tint = null),
                (this._doStroke = !0),
                (this._doFill = !0),
                (this._strokeSet = !1),
                (this._fillSet = !1),
                (this._leadingSet = !1);
            }),
              (r.default.Renderer.prototype = Object.create(
                r.default.Element.prototype,
              )),
              (r.default.Renderer.prototype.push = function () {
                return {
                  properties: {
                    _doStroke: this._doStroke,
                    _strokeSet: this._strokeSet,
                    _doFill: this._doFill,
                    _fillSet: this._fillSet,
                    _tint: this._tint,
                    _imageMode: this._imageMode,
                    _rectMode: this._rectMode,
                    _ellipseMode: this._ellipseMode,
                    _textFont: this._textFont,
                    _textLeading: this._textLeading,
                    _leadingSet: this._leadingSet,
                    _textSize: this._textSize,
                    _textAlign: this._textAlign,
                    _textBaseline: this._textBaseline,
                    _textStyle: this._textStyle,
                    _textWrap: this._textWrap,
                  },
                };
              }),
              (r.default.Renderer.prototype.pop = function (n) {
                n.properties && Object.assign(this, n.properties);
              }),
              (r.default.Renderer.prototype.resize = function (n, s) {
                (this.width = n),
                  (this.height = s),
                  (this.elt.width = n * this._pInst._pixelDensity),
                  (this.elt.height = s * this._pInst._pixelDensity),
                  (this.elt.style.width = ''.concat(n, 'px')),
                  (this.elt.style.height = ''.concat(s, 'px')),
                  this._isMainCanvas &&
                    (this._pInst._setProperty('width', this.width),
                    this._pInst._setProperty('height', this.height));
              }),
              (r.default.Renderer.prototype.get = function (n, s, i, a) {
                var d = this._pixelsState,
                  g = d._pixelDensity,
                  _ = this.canvas;
                if (n === void 0 && s === void 0)
                  (n = s = 0), (i = d.width), (a = d.height);
                else if (((n *= g), (s *= g), i === void 0 && a === void 0))
                  return n < 0 || s < 0 || n >= _.width || s >= _.height
                    ? [0, 0, 0, 0]
                    : this._getPixel(n, s);
                var w = new r.default.Image(i, a);
                return (
                  w.canvas
                    .getContext('2d')
                    .drawImage(_, n, s, i * g, a * g, 0, 0, i, a),
                  w
                );
              }),
              (r.default.Renderer.prototype.textLeading = function (n) {
                return typeof n == 'number'
                  ? (this._setProperty('_leadingSet', !0),
                    this._setProperty('_textLeading', n),
                    this._pInst)
                  : this._textLeading;
              }),
              (r.default.Renderer.prototype.textSize = function (n) {
                return typeof n == 'number'
                  ? (this._setProperty('_textSize', n),
                    this._leadingSet ||
                      this._setProperty(
                        '_textLeading',
                        n * c._DEFAULT_LEADMULT,
                      ),
                    this._applyTextProperties())
                  : this._textSize;
              }),
              (r.default.Renderer.prototype.textStyle = function (n) {
                return n
                  ? ((n !== c.NORMAL &&
                      n !== c.ITALIC &&
                      n !== c.BOLD &&
                      n !== c.BOLDITALIC) ||
                      this._setProperty('_textStyle', n),
                    this._applyTextProperties())
                  : this._textStyle;
              }),
              (r.default.Renderer.prototype.textAscent = function () {
                return (
                  this._textAscent === null && this._updateTextMetrics(),
                  this._textAscent
                );
              }),
              (r.default.Renderer.prototype.textDescent = function () {
                return (
                  this._textDescent === null && this._updateTextMetrics(),
                  this._textDescent
                );
              }),
              (r.default.Renderer.prototype.textAlign = function (n, s) {
                return n !== void 0
                  ? (this._setProperty('_textAlign', n),
                    s !== void 0 && this._setProperty('_textBaseline', s),
                    this._applyTextProperties())
                  : {
                      horizontal: this._textAlign,
                      vertical: this._textBaseline,
                    };
              }),
              (r.default.Renderer.prototype.textWrap = function (n) {
                return this._setProperty('_textWrap', n), this._textWrap;
              }),
              (r.default.Renderer.prototype.text = function (n, s, i, a, d) {
                var g,
                  _,
                  w,
                  S,
                  M,
                  E,
                  O,
                  D = this._pInst,
                  A = this._textWrap,
                  k = Number.MAX_VALUE;
                if ((this._doFill || this._doStroke) && n !== void 0) {
                  if (
                    (typeof n != 'string' && (n = n.toString()),
                    (g = (n = n.replace(/(\t)/g, '  ')).split(`
`)),
                    a !== void 0)
                  ) {
                    switch (
                      (this._rectMode === c.CENTER && (s -= a / 2),
                      this._textAlign)
                    ) {
                      case c.CENTER:
                        s += a / 2;
                        break;
                      case c.RIGHT:
                        s += a;
                    }
                    var L = !1;
                    if (d !== void 0) {
                      switch (
                        (this._rectMode === c.CENTER && (i -= d / 2),
                        this._textBaseline)
                      ) {
                        case c.BOTTOM:
                          (O = i + d), (i = Math.max(O, i));
                          break;
                        case c.CENTER:
                          (O = i + d / 2), (i = Math.max(O, i));
                          break;
                        case c.BASELINE:
                          (L = !0), (this._textBaseline = c.TOP);
                      }
                      k = i + d - D.textAscent();
                    }
                    if (A === c.WORD) {
                      for (var R = [], N = 0; N < g.length; N++) {
                        (_ = ''), (M = g[N].split(' '));
                        for (var B = 0; B < M.length; B++)
                          (w = ''.concat(_ + M[B]) + ' '),
                            (_ =
                              a < (S = this.textWidth(w)) && 0 < _.length
                                ? (R.push(_), ''.concat(M[B]) + ' ')
                                : w);
                        R.push(_);
                      }
                      var Z = 0,
                        J = D.textAlign().vertical;
                      J === c.CENTER
                        ? (Z = ((R.length - 1) * D.textLeading()) / 2)
                        : J === c.BOTTOM &&
                          (Z = (R.length - 1) * D.textLeading());
                      for (var $ = 0; $ < g.length; $++) {
                        (_ = ''), (M = g[$].split(' '));
                        for (var ee = 0; ee < M.length; ee++)
                          (w = ''.concat(_ + M[ee]) + ' '),
                            a < (S = this.textWidth(w)) && 0 < _.length
                              ? (this._renderText(D, _.trim(), s, i - Z, k),
                                (_ = ''.concat(M[ee]) + ' '),
                                (i += D.textLeading()))
                              : (_ = w);
                        this._renderText(D, _.trim(), s, i - Z, k),
                          (i += D.textLeading()),
                          L && (this._textBaseline = c.BASELINE);
                      }
                    } else {
                      for (var Q = [], oe = 0; oe < g.length; oe++) {
                        (_ = ''), (E = g[oe].split(''));
                        for (var ce = 0; ce < E.length; ce++)
                          (w = ''.concat(_ + E[ce])),
                            (S = this.textWidth(w)) <= a
                              ? (_ += E[ce])
                              : a < S &&
                                0 < _.length &&
                                (Q.push(_), (_ = ''.concat(E[ce])));
                      }
                      Q.push(_);
                      var ve = 0,
                        de = D.textAlign().vertical;
                      de === c.CENTER
                        ? (ve = ((Q.length - 1) * D.textLeading()) / 2)
                        : de === c.BOTTOM &&
                          (ve = (Q.length - 1) * D.textLeading());
                      for (var Se = 0; Se < g.length; Se++) {
                        (_ = ''), (E = g[Se].split(''));
                        for (var fe = 0; fe < E.length; fe++)
                          (w = ''.concat(_ + E[fe])),
                            (S = this.textWidth(w)) <= a
                              ? (_ += E[fe])
                              : a < S &&
                                0 < _.length &&
                                (this._renderText(D, _.trim(), s, i - ve, k),
                                (i += D.textLeading()),
                                (_ = ''.concat(E[fe])));
                      }
                      this._renderText(D, _.trim(), s, i - ve, k),
                        (i += D.textLeading()),
                        L && (this._textBaseline = c.BASELINE);
                    }
                  } else {
                    var ye = 0,
                      P = D.textAlign().vertical;
                    P === c.CENTER
                      ? (ye = ((g.length - 1) * D.textLeading()) / 2)
                      : P === c.BOTTOM &&
                        (ye = (g.length - 1) * D.textLeading());
                    for (var U = 0; U < g.length; U++)
                      this._renderText(D, g[U], s, i - ye, k),
                        (i += D.textLeading());
                  }
                  return D;
                }
              }),
              (r.default.Renderer.prototype._applyDefaults = function () {
                return this;
              }),
              (r.default.Renderer.prototype._isOpenType = function () {
                var n =
                  0 < arguments.length && arguments[0] !== void 0
                    ? arguments[0]
                    : this._textFont;
                return h(n) === 'object' && n.font && n.font.supported;
              }),
              (r.default.Renderer.prototype._updateTextMetrics = function () {
                if (this._isOpenType())
                  return (
                    this._setProperty(
                      '_textAscent',
                      this._textFont._textAscent(),
                    ),
                    this._setProperty(
                      '_textDescent',
                      this._textFont._textDescent(),
                    ),
                    this
                  );
                var n = document.createElement('span');
                (n.style.fontFamily = this._textFont),
                  (n.style.fontSize = ''.concat(this._textSize, 'px')),
                  (n.innerHTML = 'ABCjgq|');
                var s = document.createElement('div');
                (s.style.display = 'inline-block'),
                  (s.style.width = '1px'),
                  (s.style.height = '0px');
                var i = document.createElement('div');
                i.appendChild(n),
                  i.appendChild(s),
                  (i.style.height = '0px'),
                  (i.style.overflow = 'hidden'),
                  document.body.appendChild(i),
                  (s.style.verticalAlign = 'baseline');
                var a = u(s),
                  d = u(n),
                  g = a[1] - d[1];
                (s.style.verticalAlign = 'bottom'), (a = u(s)), (d = u(n));
                var _ = a[1] - d[1] - g;
                return (
                  document.body.removeChild(i),
                  this._setProperty('_textAscent', g),
                  this._setProperty('_textDescent', _),
                  this
                );
              });
            var o = r.default.Renderer;
            y.default = o;
          },
          {
            '../core/constants': 253,
            './main': 264,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.number.constructor': 170,
            'core-js/modules/es.object.assign': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        268: [
          function (e, v, y) {
            function m(s) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (i) {
                      return typeof i;
                    }
                  : function (i) {
                      return i &&
                        typeof Symbol == 'function' &&
                        i.constructor === Symbol &&
                        i !== Symbol.prototype
                        ? 'symbol'
                        : typeof i;
                    })(s);
            }
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.fill'),
              e('core-js/modules/es.array.for-each'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.function.name'),
              e('core-js/modules/es.number.to-fixed'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = u(e('./main')),
              c = (function (s) {
                if (s && s.__esModule) return s;
                if (s === null || (m(s) !== 'object' && typeof s != 'function'))
                  return { default: s };
                var i = h();
                if (i && i.has(s)) return i.get(s);
                var a = {},
                  d = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var g in s)
                  if (Object.prototype.hasOwnProperty.call(s, g)) {
                    var _ = d ? Object.getOwnPropertyDescriptor(s, g) : null;
                    _ && (_.get || _.set)
                      ? Object.defineProperty(a, g, _)
                      : (a[g] = s[g]);
                  }
                return (a.default = s), i && i.set(s, a), a;
              })(e('./constants')),
              l = u(e('../image/filters'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var s = new WeakMap();
              return (
                (h = function () {
                  return s;
                }),
                s
              );
            }
            function u(s) {
              return s && s.__esModule ? s : { default: s };
            }
            e('./p5.Renderer');
            var o = 'rgba(0,0,0,0)';
            (r.default.Renderer2D = function (s, i, a) {
              return (
                r.default.Renderer.call(this, s, i, a),
                (this.drawingContext = this.canvas.getContext('2d')),
                this._pInst._setProperty('drawingContext', this.drawingContext),
                this
              );
            }),
              (r.default.Renderer2D.prototype = Object.create(
                r.default.Renderer.prototype,
              )),
              (r.default.Renderer2D.prototype._applyDefaults = function () {
                (this._cachedFillStyle = this._cachedStrokeStyle = void 0),
                  (this._cachedBlendMode = c.BLEND),
                  this._setFill(c._DEFAULT_FILL),
                  this._setStroke(c._DEFAULT_STROKE),
                  (this.drawingContext.lineCap = c.ROUND),
                  (this.drawingContext.font = 'normal 12px sans-serif');
              }),
              (r.default.Renderer2D.prototype.resize = function (s, i) {
                r.default.Renderer.prototype.resize.call(this, s, i),
                  this.drawingContext.scale(
                    this._pInst._pixelDensity,
                    this._pInst._pixelDensity,
                  );
              }),
              (r.default.Renderer2D.prototype.background = function () {
                if (
                  (this.drawingContext.save(),
                  this.resetMatrix(),
                  (arguments.length <= 0 ? void 0 : arguments[0]) instanceof
                    r.default.Image)
                )
                  if (0 <= (arguments.length <= 1 ? void 0 : arguments[1])) {
                    var s = arguments.length <= 0 ? void 0 : arguments[0];
                    (this.drawingContext.globalAlpha =
                      (arguments.length <= 1 ? void 0 : arguments[1]) / 255),
                      this._pInst.image(s, 0, 0, this.width, this.height);
                  } else
                    this._pInst.image(
                      arguments.length <= 0 ? void 0 : arguments[0],
                      0,
                      0,
                      this.width,
                      this.height,
                    );
                else {
                  var i,
                    a = this._getFill(),
                    d = (i = this._pInst).color.apply(i, arguments);
                  this._pInst._addAccsOutput() &&
                    this._pInst._accsBackground(d.levels);
                  var g = d.toString();
                  this._setFill(g),
                    this._isErasing && this.blendMode(this._cachedBlendMode),
                    this.drawingContext.fillRect(0, 0, this.width, this.height),
                    this._setFill(a),
                    this._isErasing && this._pInst.erase();
                }
                this.drawingContext.restore();
              }),
              (r.default.Renderer2D.prototype.clear = function () {
                this.drawingContext.save(),
                  this.resetMatrix(),
                  this.drawingContext.clearRect(0, 0, this.width, this.height),
                  this.drawingContext.restore();
              }),
              (r.default.Renderer2D.prototype.fill = function () {
                var s,
                  i = (s = this._pInst).color.apply(s, arguments);
                this._setFill(i.toString()),
                  this._pInst._addAccsOutput() &&
                    this._pInst._accsCanvasColors('fill', i.levels);
              }),
              (r.default.Renderer2D.prototype.stroke = function () {
                var s,
                  i = (s = this._pInst).color.apply(s, arguments);
                this._setStroke(i.toString()),
                  this._pInst._addAccsOutput() &&
                    this._pInst._accsCanvasColors('stroke', i.levels);
              }),
              (r.default.Renderer2D.prototype.erase = function (s, i) {
                if (!this._isErasing) {
                  this._cachedFillStyle = this.drawingContext.fillStyle;
                  var a = this._pInst.color(255, s).toString();
                  (this.drawingContext.fillStyle = a),
                    (this._cachedStrokeStyle = this.drawingContext.strokeStyle);
                  var d = this._pInst.color(255, i).toString();
                  this.drawingContext.strokeStyle = d;
                  var g = this._cachedBlendMode;
                  this.blendMode(c.REMOVE),
                    (this._cachedBlendMode = g),
                    (this._isErasing = !0);
                }
              }),
              (r.default.Renderer2D.prototype.noErase = function () {
                this._isErasing &&
                  ((this.drawingContext.fillStyle = this._cachedFillStyle),
                  (this.drawingContext.strokeStyle = this._cachedStrokeStyle),
                  this.blendMode(this._cachedBlendMode),
                  (this._isErasing = !1));
              }),
              (r.default.Renderer2D.prototype.image = function (
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
                M,
              ) {
                var E;
                s.gifProperties && s._animateGif(this._pInst);
                try {
                  this._tint &&
                    (r.default.MediaElement &&
                      s instanceof r.default.MediaElement &&
                      s.loadPixels(),
                    s.canvas && (E = this._getTintedImageCanvas(s))),
                    (E = E || s.canvas || s.elt);
                  var O = 1;
                  s.width && 0 < s.width && (O = E.width / s.width),
                    this._isErasing && this.blendMode(this._cachedBlendMode),
                    this.drawingContext.drawImage(
                      E,
                      O * i,
                      O * a,
                      O * d,
                      O * g,
                      _,
                      w,
                      S,
                      M,
                    ),
                    this._isErasing && this._pInst.erase();
                } catch (D) {
                  if (D.name !== 'NS_ERROR_NOT_AVAILABLE') throw D;
                }
              }),
              (r.default.Renderer2D.prototype._getTintedImageCanvas = function (
                s,
              ) {
                if (!s.canvas) return s;
                var i = l.default._toPixels(s.canvas),
                  a = document.createElement('canvas');
                (a.width = s.canvas.width), (a.height = s.canvas.height);
                for (
                  var d = a.getContext('2d'),
                    g = d.createImageData(s.canvas.width, s.canvas.height),
                    _ = g.data,
                    w = 0;
                  w < i.length;
                  w += 4
                ) {
                  var S = i[w],
                    M = i[w + 1],
                    E = i[w + 2],
                    O = i[w + 3];
                  (_[w] = (S * this._tint[0]) / 255),
                    (_[w + 1] = (M * this._tint[1]) / 255),
                    (_[w + 2] = (E * this._tint[2]) / 255),
                    (_[w + 3] = (O * this._tint[3]) / 255);
                }
                return d.putImageData(g, 0, 0), a;
              }),
              (r.default.Renderer2D.prototype.blendMode = function (s) {
                if (s === c.SUBTRACT)
                  console.warn('blendMode(SUBTRACT) only works in WEBGL mode.');
                else {
                  if (
                    s !== c.BLEND &&
                    s !== c.REMOVE &&
                    s !== c.DARKEST &&
                    s !== c.LIGHTEST &&
                    s !== c.DIFFERENCE &&
                    s !== c.MULTIPLY &&
                    s !== c.EXCLUSION &&
                    s !== c.SCREEN &&
                    s !== c.REPLACE &&
                    s !== c.OVERLAY &&
                    s !== c.HARD_LIGHT &&
                    s !== c.SOFT_LIGHT &&
                    s !== c.DODGE &&
                    s !== c.BURN &&
                    s !== c.ADD
                  )
                    throw new Error('Mode '.concat(s, ' not recognized.'));
                  (this._cachedBlendMode = s),
                    (this.drawingContext.globalCompositeOperation = s);
                }
              }),
              (r.default.Renderer2D.prototype.blend = function () {
                for (
                  var s = this.drawingContext.globalCompositeOperation,
                    i = arguments.length,
                    a = new Array(i),
                    d = 0;
                  d < i;
                  d++
                )
                  a[d] = arguments[d];
                var g = a[a.length - 1],
                  _ = Array.prototype.slice.call(a, 0, a.length - 1);
                (this.drawingContext.globalCompositeOperation = g),
                  r.default.prototype.copy.apply(this, _),
                  (this.drawingContext.globalCompositeOperation = s);
              }),
              (r.default.Renderer2D.prototype._getPixel = function (s, i) {
                var a;
                return [
                  (a = this.drawingContext.getImageData(s, i, 1, 1).data)[0],
                  a[1],
                  a[2],
                  a[3],
                ];
              }),
              (r.default.Renderer2D.prototype.loadPixels = function () {
                var s = this._pixelsState,
                  i = s._pixelDensity,
                  a = this.width * i,
                  d = this.height * i,
                  g = this.drawingContext.getImageData(0, 0, a, d);
                s._setProperty('imageData', g),
                  s._setProperty('pixels', g.data);
              }),
              (r.default.Renderer2D.prototype.set = function (s, i, a) {
                (s = Math.floor(s)), (i = Math.floor(i));
                var d = this._pixelsState;
                if (a instanceof r.default.Image)
                  this.drawingContext.save(),
                    this.drawingContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.drawingContext.scale(d._pixelDensity, d._pixelDensity),
                    this.drawingContext.clearRect(s, i, a.width, a.height),
                    this.drawingContext.drawImage(a.canvas, s, i),
                    this.drawingContext.restore();
                else {
                  var g = 0,
                    _ = 0,
                    w = 0,
                    S = 0,
                    M =
                      4 *
                      (i * d._pixelDensity * (this.width * d._pixelDensity) +
                        s * d._pixelDensity);
                  if (
                    (d.imageData || d.loadPixels.call(d), typeof a == 'number')
                  )
                    M < d.pixels.length && ((w = _ = g = a), (S = 255));
                  else if (a instanceof Array) {
                    if (a.length < 4)
                      throw new Error(
                        'pixel array must be of the form [R, G, B, A]',
                      );
                    M < d.pixels.length &&
                      ((g = a[0]), (_ = a[1]), (w = a[2]), (S = a[3]));
                  } else
                    a instanceof r.default.Color &&
                      M < d.pixels.length &&
                      ((g = a.levels[0]),
                      (_ = a.levels[1]),
                      (w = a.levels[2]),
                      (S = a.levels[3]));
                  for (var E = 0; E < d._pixelDensity; E++)
                    for (var O = 0; O < d._pixelDensity; O++)
                      (M =
                        4 *
                        ((i * d._pixelDensity + O) *
                          this.width *
                          d._pixelDensity +
                          (s * d._pixelDensity + E))),
                        (d.pixels[M] = g),
                        (d.pixels[M + 1] = _),
                        (d.pixels[M + 2] = w),
                        (d.pixels[M + 3] = S);
                }
              }),
              (r.default.Renderer2D.prototype.updatePixels = function (
                s,
                i,
                a,
                d,
              ) {
                var g = this._pixelsState,
                  _ = g._pixelDensity;
                s === void 0 &&
                  i === void 0 &&
                  a === void 0 &&
                  d === void 0 &&
                  ((i = s = 0), (a = this.width), (d = this.height)),
                  (s *= _),
                  (i *= _),
                  (a *= _),
                  (d *= _),
                  this.gifProperties &&
                    (this.gifProperties.frames[
                      this.gifProperties.displayIndex
                    ].image = g.imageData),
                  this.drawingContext.putImageData(
                    g.imageData,
                    s,
                    i,
                    0,
                    0,
                    a,
                    d,
                  );
              }),
              (r.default.Renderer2D.prototype._acuteArcToBezier = function (
                s,
                i,
              ) {
                var a = i / 2,
                  d = Math.cos(a),
                  g = Math.sin(a),
                  _ = 1 / Math.tan(a),
                  w = s + a,
                  S = Math.cos(w),
                  M = Math.sin(w),
                  E = (4 - d) / 3,
                  O = g + (d - E) * _;
                return {
                  ax: Math.cos(s).toFixed(7),
                  ay: Math.sin(s).toFixed(7),
                  bx: (E * S + O * M).toFixed(7),
                  by: (E * M - O * S).toFixed(7),
                  cx: (E * S - O * M).toFixed(7),
                  cy: (E * M + O * S).toFixed(7),
                  dx: Math.cos(s + i).toFixed(7),
                  dy: Math.sin(s + i).toFixed(7),
                };
              }),
              (r.default.Renderer2D.prototype.arc = function (
                s,
                i,
                a,
                d,
                g,
                _,
                w,
              ) {
                var S = this.drawingContext,
                  M = a / 2,
                  E = d / 2,
                  O = 0,
                  D = [];
                for (s += M, i += E; 1e-5 <= _ - g; )
                  (O = Math.min(_ - g, c.HALF_PI)),
                    D.push(this._acuteArcToBezier(g, O)),
                    (g += O);
                return (
                  this._doFill &&
                    (S.beginPath(),
                    D.forEach(function (A, k) {
                      k === 0 && S.moveTo(s + A.ax * M, i + A.ay * E),
                        S.bezierCurveTo(
                          s + A.bx * M,
                          i + A.by * E,
                          s + A.cx * M,
                          i + A.cy * E,
                          s + A.dx * M,
                          i + A.dy * E,
                        );
                    }),
                    (w !== c.PIE && w != null) || S.lineTo(s, i),
                    S.closePath(),
                    S.fill()),
                  this._doStroke &&
                    (S.beginPath(),
                    D.forEach(function (A, k) {
                      k === 0 && S.moveTo(s + A.ax * M, i + A.ay * E),
                        S.bezierCurveTo(
                          s + A.bx * M,
                          i + A.by * E,
                          s + A.cx * M,
                          i + A.cy * E,
                          s + A.dx * M,
                          i + A.dy * E,
                        );
                    }),
                    w === c.PIE
                      ? (S.lineTo(s, i), S.closePath())
                      : w === c.CHORD && S.closePath(),
                    S.stroke()),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.ellipse = function (s) {
                var i = this.drawingContext,
                  a = this._doFill,
                  d = this._doStroke,
                  g = parseFloat(s[0]),
                  _ = parseFloat(s[1]),
                  w = parseFloat(s[2]),
                  S = parseFloat(s[3]);
                if (a && !d) {
                  if (this._getFill() === o) return this;
                } else if (!a && d && this._getStroke() === o) return this;
                var M = (w / 2) * 0.5522847498,
                  E = (S / 2) * 0.5522847498,
                  O = g + w,
                  D = _ + S,
                  A = g + w / 2,
                  k = _ + S / 2;
                i.beginPath(),
                  i.moveTo(g, k),
                  i.bezierCurveTo(g, k - E, A - M, _, A, _),
                  i.bezierCurveTo(A + M, _, O, k - E, O, k),
                  i.bezierCurveTo(O, k + E, A + M, D, A, D),
                  i.bezierCurveTo(A - M, D, g, k + E, g, k),
                  a && i.fill(),
                  d && i.stroke();
              }),
              (r.default.Renderer2D.prototype.line = function (s, i, a, d) {
                var g = this.drawingContext;
                return (
                  this._doStroke &&
                    (this._getStroke() === o ||
                      (g.beginPath(),
                      g.moveTo(s, i),
                      g.lineTo(a, d),
                      g.stroke())),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.point = function (s, i) {
                var a = this.drawingContext;
                if (!this._doStroke) return this;
                if (this._getStroke() === o) return this;
                var d = this._getStroke(),
                  g = this._getFill();
                this._setFill(d),
                  a.beginPath(),
                  a.arc(s, i, a.lineWidth / 2, 0, c.TWO_PI, !1),
                  a.fill(),
                  this._setFill(g);
              }),
              (r.default.Renderer2D.prototype.quad = function (
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
              ) {
                var M = this.drawingContext,
                  E = this._doFill,
                  O = this._doStroke;
                if (E && !O) {
                  if (this._getFill() === o) return this;
                } else if (!E && O && this._getStroke() === o) return this;
                return (
                  M.beginPath(),
                  M.moveTo(s, i),
                  M.lineTo(a, d),
                  M.lineTo(g, _),
                  M.lineTo(w, S),
                  M.closePath(),
                  E && M.fill(),
                  O && M.stroke(),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.rect = function (s) {
                var i = s[0],
                  a = s[1],
                  d = s[2],
                  g = s[3],
                  _ = s[4],
                  w = s[5],
                  S = s[6],
                  M = s[7],
                  E = this.drawingContext,
                  O = this._doFill,
                  D = this._doStroke;
                if (O && !D) {
                  if (this._getFill() === o) return this;
                } else if (!O && D && this._getStroke() === o) return this;
                if ((E.beginPath(), _ === void 0)) E.rect(i, a, d, g);
                else {
                  w === void 0 && (w = _),
                    S === void 0 && (S = w),
                    M === void 0 && (M = S);
                  var A = Math.abs(d),
                    k = Math.abs(g),
                    L = A / 2,
                    R = k / 2;
                  A < 2 * _ && (_ = L),
                    k < 2 * _ && (_ = R),
                    A < 2 * w && (w = L),
                    k < 2 * w && (w = R),
                    A < 2 * S && (S = L),
                    k < 2 * S && (S = R),
                    A < 2 * M && (M = L),
                    k < 2 * M && (M = R),
                    E.beginPath(),
                    E.moveTo(i + _, a),
                    E.arcTo(i + d, a, i + d, a + g, w),
                    E.arcTo(i + d, a + g, i, a + g, S),
                    E.arcTo(i, a + g, i, a, M),
                    E.arcTo(i, a, i + d, a, _),
                    E.closePath();
                }
                return (
                  this._doFill && E.fill(), this._doStroke && E.stroke(), this
                );
              }),
              (r.default.Renderer2D.prototype.triangle = function (s) {
                var i = this.drawingContext,
                  a = this._doFill,
                  d = this._doStroke,
                  g = s[0],
                  _ = s[1],
                  w = s[2],
                  S = s[3],
                  M = s[4],
                  E = s[5];
                if (a && !d) {
                  if (this._getFill() === o) return this;
                } else if (!a && d && this._getStroke() === o) return this;
                i.beginPath(),
                  i.moveTo(g, _),
                  i.lineTo(w, S),
                  i.lineTo(M, E),
                  i.closePath(),
                  a && i.fill(),
                  d && i.stroke();
              }),
              (r.default.Renderer2D.prototype.endShape = function (
                s,
                i,
                a,
                d,
                g,
                _,
                w,
              ) {
                if (i.length === 0) return this;
                if (!this._doStroke && !this._doFill) return this;
                var S,
                  M,
                  E,
                  O = s === c.CLOSE;
                O && !_ && i.push(i[0]);
                var D = i.length;
                if (!a || (w !== c.POLYGON && w !== null))
                  if (!d || (w !== c.POLYGON && w !== null))
                    if (!g || (w !== c.POLYGON && w !== null))
                      if (w === c.POINTS)
                        for (M = 0; M < D; M++)
                          (S = i[M]),
                            this._doStroke && this._pInst.stroke(S[6]),
                            this._pInst.point(S[0], S[1]);
                      else if (w === c.LINES)
                        for (M = 0; M + 1 < D; M += 2)
                          (S = i[M]),
                            this._doStroke && this._pInst.stroke(i[M + 1][6]),
                            this._pInst.line(
                              S[0],
                              S[1],
                              i[M + 1][0],
                              i[M + 1][1],
                            );
                      else if (w === c.TRIANGLES)
                        for (M = 0; M + 2 < D; M += 3)
                          (S = i[M]),
                            this.drawingContext.beginPath(),
                            this.drawingContext.moveTo(S[0], S[1]),
                            this.drawingContext.lineTo(
                              i[M + 1][0],
                              i[M + 1][1],
                            ),
                            this.drawingContext.lineTo(
                              i[M + 2][0],
                              i[M + 2][1],
                            ),
                            this.drawingContext.closePath(),
                            this._doFill &&
                              (this._pInst.fill(i[M + 2][5]),
                              this.drawingContext.fill()),
                            this._doStroke &&
                              (this._pInst.stroke(i[M + 2][6]),
                              this.drawingContext.stroke());
                      else if (w === c.TRIANGLE_STRIP)
                        for (M = 0; M + 1 < D; M++)
                          (S = i[M]),
                            this.drawingContext.beginPath(),
                            this.drawingContext.moveTo(
                              i[M + 1][0],
                              i[M + 1][1],
                            ),
                            this.drawingContext.lineTo(S[0], S[1]),
                            this._doStroke && this._pInst.stroke(i[M + 1][6]),
                            this._doFill && this._pInst.fill(i[M + 1][5]),
                            M + 2 < D &&
                              (this.drawingContext.lineTo(
                                i[M + 2][0],
                                i[M + 2][1],
                              ),
                              this._doStroke && this._pInst.stroke(i[M + 2][6]),
                              this._doFill && this._pInst.fill(i[M + 2][5])),
                            this._doFillStrokeClose(O);
                      else if (w === c.TRIANGLE_FAN) {
                        if (2 < D) {
                          for (
                            this.drawingContext.beginPath(), M = 2;
                            M < D;
                            M++
                          )
                            (S = i[M]),
                              this.drawingContext.moveTo(i[0][0], i[0][1]),
                              this.drawingContext.lineTo(
                                i[M - 1][0],
                                i[M - 1][1],
                              ),
                              this.drawingContext.lineTo(S[0], S[1]),
                              this.drawingContext.lineTo(i[0][0], i[0][1]),
                              M < D - 1 &&
                                ((this._doFill && S[5] !== i[M + 1][5]) ||
                                  (this._doStroke && S[6] !== i[M + 1][6])) &&
                                (this._doFill &&
                                  (this._pInst.fill(S[5]),
                                  this.drawingContext.fill(),
                                  this._pInst.fill(i[M + 1][5])),
                                this._doStroke &&
                                  (this._pInst.stroke(S[6]),
                                  this.drawingContext.stroke(),
                                  this._pInst.stroke(i[M + 1][6])),
                                this.drawingContext.closePath(),
                                this.drawingContext.beginPath());
                          this._doFillStrokeClose(O);
                        }
                      } else if (w === c.QUADS)
                        for (M = 0; M + 3 < D; M += 4) {
                          for (
                            S = i[M],
                              this.drawingContext.beginPath(),
                              this.drawingContext.moveTo(S[0], S[1]),
                              E = 1;
                            E < 4;
                            E++
                          )
                            this.drawingContext.lineTo(
                              i[M + E][0],
                              i[M + E][1],
                            );
                          this.drawingContext.lineTo(S[0], S[1]),
                            this._doFill && this._pInst.fill(i[M + 3][5]),
                            this._doStroke && this._pInst.stroke(i[M + 3][6]),
                            this._doFillStrokeClose(O);
                        }
                      else if (w === c.QUAD_STRIP) {
                        if (3 < D)
                          for (M = 0; M + 1 < D; M += 2)
                            (S = i[M]),
                              this.drawingContext.beginPath(),
                              M + 3 < D
                                ? (this.drawingContext.moveTo(
                                    i[M + 2][0],
                                    i[M + 2][1],
                                  ),
                                  this.drawingContext.lineTo(S[0], S[1]),
                                  this.drawingContext.lineTo(
                                    i[M + 1][0],
                                    i[M + 1][1],
                                  ),
                                  this.drawingContext.lineTo(
                                    i[M + 3][0],
                                    i[M + 3][1],
                                  ),
                                  this._doFill && this._pInst.fill(i[M + 3][5]),
                                  this._doStroke &&
                                    this._pInst.stroke(i[M + 3][6]))
                                : (this.drawingContext.moveTo(S[0], S[1]),
                                  this.drawingContext.lineTo(
                                    i[M + 1][0],
                                    i[M + 1][1],
                                  )),
                              this._doFillStrokeClose(O);
                      } else {
                        for (
                          this.drawingContext.beginPath(),
                            this.drawingContext.moveTo(i[0][0], i[0][1]),
                            M = 1;
                          M < D;
                          M++
                        )
                          (S = i[M]).isVert &&
                            (S.moveTo
                              ? this.drawingContext.moveTo(S[0], S[1])
                              : this.drawingContext.lineTo(S[0], S[1]));
                        this._doFillStrokeClose(O);
                      }
                    else {
                      for (this.drawingContext.beginPath(), M = 0; M < D; M++)
                        i[M].isVert
                          ? i[M].moveTo
                            ? this.drawingContext.moveTo(i[M][0], i[M][1])
                            : this.drawingContext.lineTo(i[M][0], i[M][1])
                          : this.drawingContext.quadraticCurveTo(
                              i[M][0],
                              i[M][1],
                              i[M][2],
                              i[M][3],
                            );
                      this._doFillStrokeClose(O);
                    }
                  else {
                    for (this.drawingContext.beginPath(), M = 0; M < D; M++)
                      i[M].isVert
                        ? i[M].moveTo
                          ? this.drawingContext.moveTo(i[M][0], i[M][1])
                          : this.drawingContext.lineTo(i[M][0], i[M][1])
                        : this.drawingContext.bezierCurveTo(
                            i[M][0],
                            i[M][1],
                            i[M][2],
                            i[M][3],
                            i[M][4],
                            i[M][5],
                          );
                    this._doFillStrokeClose(O);
                  }
                else if (3 < D) {
                  var A = [],
                    k = 1 - this._curveTightness;
                  for (
                    this.drawingContext.beginPath(),
                      this.drawingContext.moveTo(i[1][0], i[1][1]),
                      M = 1;
                    M + 2 < D;
                    M++
                  )
                    (S = i[M]),
                      (A[0] = [S[0], S[1]]),
                      (A[1] = [
                        S[0] + (k * i[M + 1][0] - k * i[M - 1][0]) / 6,
                        S[1] + (k * i[M + 1][1] - k * i[M - 1][1]) / 6,
                      ]),
                      (A[2] = [
                        i[M + 1][0] + (k * i[M][0] - k * i[M + 2][0]) / 6,
                        i[M + 1][1] + (k * i[M][1] - k * i[M + 2][1]) / 6,
                      ]),
                      (A[3] = [i[M + 1][0], i[M + 1][1]]),
                      this.drawingContext.bezierCurveTo(
                        A[1][0],
                        A[1][1],
                        A[2][0],
                        A[2][1],
                        A[3][0],
                        A[3][1],
                      );
                  O && this.drawingContext.lineTo(i[M + 1][0], i[M + 1][1]),
                    this._doFillStrokeClose(O);
                }
                return (_ = g = d = a = !1), O && i.pop(), this;
              }),
              (r.default.Renderer2D.prototype.strokeCap = function (s) {
                return (
                  (s !== c.ROUND && s !== c.SQUARE && s !== c.PROJECT) ||
                    (this.drawingContext.lineCap = s),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.strokeJoin = function (s) {
                return (
                  (s !== c.ROUND && s !== c.BEVEL && s !== c.MITER) ||
                    (this.drawingContext.lineJoin = s),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.strokeWeight = function (s) {
                return (
                  (this.drawingContext.lineWidth =
                    s === void 0 || s === 0 ? 1e-4 : s),
                  this
                );
              }),
              (r.default.Renderer2D.prototype._getFill = function () {
                return (
                  this._cachedFillStyle ||
                    (this._cachedFillStyle = this.drawingContext.fillStyle),
                  this._cachedFillStyle
                );
              }),
              (r.default.Renderer2D.prototype._setFill = function (s) {
                s !== this._cachedFillStyle &&
                  ((this.drawingContext.fillStyle = s),
                  (this._cachedFillStyle = s));
              }),
              (r.default.Renderer2D.prototype._getStroke = function () {
                return (
                  this._cachedStrokeStyle ||
                    (this._cachedStrokeStyle = this.drawingContext.strokeStyle),
                  this._cachedStrokeStyle
                );
              }),
              (r.default.Renderer2D.prototype._setStroke = function (s) {
                s !== this._cachedStrokeStyle &&
                  ((this.drawingContext.strokeStyle = s),
                  (this._cachedStrokeStyle = s));
              }),
              (r.default.Renderer2D.prototype.bezier = function (
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
              ) {
                return (
                  this._pInst.beginShape(),
                  this._pInst.vertex(s, i),
                  this._pInst.bezierVertex(a, d, g, _, w, S),
                  this._pInst.endShape(),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.curve = function (
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
              ) {
                return (
                  this._pInst.beginShape(),
                  this._pInst.curveVertex(s, i),
                  this._pInst.curveVertex(a, d),
                  this._pInst.curveVertex(g, _),
                  this._pInst.curveVertex(w, S),
                  this._pInst.endShape(),
                  this
                );
              }),
              (r.default.Renderer2D.prototype._doFillStrokeClose = function (
                s,
              ) {
                s && this.drawingContext.closePath(),
                  this._doFill && this.drawingContext.fill(),
                  this._doStroke && this.drawingContext.stroke();
              }),
              (r.default.Renderer2D.prototype.applyMatrix = function (
                s,
                i,
                a,
                d,
                g,
                _,
              ) {
                this.drawingContext.transform(s, i, a, d, g, _);
              }),
              (r.default.Renderer2D.prototype.resetMatrix = function () {
                return (
                  this.drawingContext.setTransform(1, 0, 0, 1, 0, 0),
                  this.drawingContext.scale(
                    this._pInst._pixelDensity,
                    this._pInst._pixelDensity,
                  ),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.rotate = function (s) {
                this.drawingContext.rotate(s);
              }),
              (r.default.Renderer2D.prototype.scale = function (s, i) {
                return this.drawingContext.scale(s, i), this;
              }),
              (r.default.Renderer2D.prototype.translate = function (s, i) {
                return (
                  s instanceof r.default.Vector && ((i = s.y), (s = s.x)),
                  this.drawingContext.translate(s, i),
                  this
                );
              }),
              (r.default.Renderer2D.prototype.text = function (s, i, a, d, g) {
                var _;
                d !== void 0 &&
                  this.drawingContext.textBaseline === c.BASELINE &&
                  ((_ = !0), (this.drawingContext.textBaseline = c.TOP));
                var w = r.default.Renderer.prototype.text.apply(
                  this,
                  arguments,
                );
                return _ && (this.drawingContext.textBaseline = c.BASELINE), w;
              }),
              (r.default.Renderer2D.prototype._renderText = function (
                s,
                i,
                a,
                d,
                g,
              ) {
                if (!(g <= d))
                  return (
                    s.push(),
                    this._isOpenType()
                      ? this._textFont._renderPath(i, a, d, { renderer: this })
                      : (this._doStroke &&
                          this._strokeSet &&
                          this.drawingContext.strokeText(i, a, d),
                        this._doFill &&
                          (this._fillSet || this._setFill(c._DEFAULT_TEXT_FILL),
                          this.drawingContext.fillText(i, a, d))),
                    s.pop(),
                    s
                  );
              }),
              (r.default.Renderer2D.prototype.textWidth = function (s) {
                return this._isOpenType()
                  ? this._textFont._textWidth(s, this._textSize)
                  : this.drawingContext.measureText(s).width;
              }),
              (r.default.Renderer2D.prototype._applyTextProperties =
                function () {
                  var s,
                    i = this._pInst;
                  return (
                    this._setProperty('_textAscent', null),
                    this._setProperty('_textDescent', null),
                    (s = this._textFont),
                    this._isOpenType() &&
                      ((s = this._textFont.font.familyName),
                      this._setProperty(
                        '_textStyle',
                        this._textFont.font.styleName,
                      )),
                    (this.drawingContext.font = ''
                      .concat(this._textStyle || 'normal', ' ')
                      .concat(this._textSize || 12, 'px ')
                      .concat(s || 'sans-serif')),
                    (this.drawingContext.textAlign = this._textAlign),
                    this._textBaseline === c.CENTER
                      ? (this.drawingContext.textBaseline = c._CTX_MIDDLE)
                      : (this.drawingContext.textBaseline = this._textBaseline),
                    i
                  );
                }),
              (r.default.Renderer2D.prototype.push = function () {
                return (
                  this.drawingContext.save(),
                  r.default.Renderer.prototype.push.apply(this)
                );
              }),
              (r.default.Renderer2D.prototype.pop = function (s) {
                this.drawingContext.restore(),
                  (this._cachedFillStyle = this.drawingContext.fillStyle),
                  (this._cachedStrokeStyle = this.drawingContext.strokeStyle),
                  r.default.Renderer.prototype.pop.call(this, s);
              });
            var n = r.default.Renderer2D;
            y.default = n;
          },
          {
            '../image/filters': 285,
            './constants': 253,
            './main': 264,
            './p5.Renderer': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 151,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.number.to-fixed': 172,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
          },
        ],
        269: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.assign'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.promise'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/web.dom-collections.iterator');
            var m,
              r = (m = e('./main')) && m.__esModule ? m : { default: m };
            r.default.prototype._promisePreloads = [];
            var c = !(r.default.prototype.registerPromisePreload = function (
              h,
            ) {
              r.default.prototype._promisePreloads.push(h);
            });
            (r.default.prototype._setupPromisePreloads = function () {
              var h = !0,
                u = !1,
                o = void 0;
              try {
                for (
                  var n, s = this._promisePreloads[Symbol.iterator]();
                  !(h = (n = s.next()).done);
                  h = !0
                ) {
                  var i = n.value,
                    a = this,
                    d = i.method,
                    g = i.addCallbacks,
                    _ = i.legacyPreloadSetup,
                    w = i.target || this,
                    S = w[d].bind(w);
                  if (w === r.default.prototype) {
                    if (c) continue;
                    (a = null), (S = w[d]);
                  }
                  (w[d] = this._wrapPromisePreload(a, S, g)),
                    _ &&
                      (w[_.method] = this._legacyPreloadGenerator(a, _, w[d]));
                }
              } catch (M) {
                (u = !0), (o = M);
              } finally {
                try {
                  h || s.return == null || s.return();
                } finally {
                  if (u) throw o;
                }
              }
              c = !0;
            }),
              (r.default.prototype._wrapPromisePreload = function (h, u, o) {
                var n = function () {
                  var s = this;
                  this._incrementPreload();
                  for (
                    var i = null,
                      a = null,
                      d = arguments.length,
                      g = new Array(d),
                      _ = 0;
                    _ < d;
                    _++
                  )
                    g[_] = arguments[_];
                  if (o)
                    for (
                      var w = g.length - 1;
                      0 <= w && !a && typeof g[w] == 'function';
                      w--
                    )
                      (a = i), (i = g.pop());
                  var S = Promise.resolve(u.apply(this, g));
                  return (
                    i && S.then(i),
                    a && S.catch(a),
                    S.then(function () {
                      return s._decrementPreload();
                    }),
                    S
                  );
                };
                return h && (n = n.bind(h)), n;
              });
            function l() {
              return {};
            }
            r.default.prototype._legacyPreloadGenerator = function (h, u, o) {
              var n = u.createBaseObject || l,
                s = function () {
                  var i = this;
                  this._incrementPreload();
                  var a = n.apply(this, arguments);
                  return (
                    o.apply(this, arguments).then(function (d) {
                      Object.assign(a, d), i._decrementPreload();
                    }),
                    a
                  );
                };
              return h && (s = s.bind(h)), s;
            };
          },
          {
            './main': 264,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.assign': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        270: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('./main')) && m.__esModule ? m : { default: m },
              c = (function (n) {
                if (n && n.__esModule) return n;
                if (n === null || (h(n) !== 'object' && typeof n != 'function'))
                  return { default: n };
                var s = l();
                if (s && s.has(n)) return s.get(n);
                var i = {},
                  a = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var d in n)
                  if (Object.prototype.hasOwnProperty.call(n, d)) {
                    var g = a ? Object.getOwnPropertyDescriptor(n, d) : null;
                    g && (g.get || g.set)
                      ? Object.defineProperty(i, d, g)
                      : (i[d] = n[d]);
                  }
                return (i.default = n), s && s.set(n, i), i;
              })(e('./constants'));
            function l() {
              if (typeof WeakMap != 'function') return null;
              var n = new WeakMap();
              return (
                (l = function () {
                  return n;
                }),
                n
              );
            }
            function h(n) {
              return (h =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(n);
            }
            e('./p5.Graphics'),
              e('./p5.Renderer2D'),
              e('../webgl/p5.RendererGL');
            var u = 'defaultCanvas0';
            (r.default.prototype.createCanvas = function (n, s, i) {
              r.default._validateParameters('createCanvas', arguments);
              var a,
                d = i || c.P2D;
              if (d === c.WEBGL) {
                if ((a = document.getElementById(u))) {
                  a.parentNode.removeChild(a);
                  var g = this._renderer;
                  this._elements = this._elements.filter(function (S) {
                    return S !== g;
                  });
                }
                ((a = document.createElement('canvas')).id = u),
                  a.classList.add('p5Canvas');
              } else if (this._defaultGraphicsCreated) a = this.canvas;
              else {
                a = document.createElement('canvas');
                for (
                  var _ = 0;
                  document.getElementById('defaultCanvas'.concat(_));

                )
                  _++;
                (u = 'defaultCanvas'.concat(_)),
                  (a.id = u),
                  a.classList.add('p5Canvas');
              }
              if (
                (this._setupDone ||
                  ((a.dataset.hidden = !0), (a.style.visibility = 'hidden')),
                this._userNode)
              )
                this._userNode.appendChild(a);
              else {
                if (document.getElementsByTagName('main').length === 0) {
                  var w = document.createElement('main');
                  document.body.appendChild(w);
                }
                document.getElementsByTagName('main')[0].appendChild(a);
              }
              return (
                d === c.WEBGL
                  ? (this._setProperty(
                      '_renderer',
                      new r.default.RendererGL(a, this, !0),
                    ),
                    this._elements.push(this._renderer))
                  : this._defaultGraphicsCreated ||
                    (this._setProperty(
                      '_renderer',
                      new r.default.Renderer2D(a, this, !0),
                    ),
                    (this._defaultGraphicsCreated = !0),
                    this._elements.push(this._renderer)),
                this._renderer.resize(n, s),
                this._renderer._applyDefaults(),
                this._renderer
              );
            }),
              (r.default.prototype.resizeCanvas = function (n, s, i) {
                if (
                  (r.default._validateParameters('resizeCanvas', arguments),
                  this._renderer)
                ) {
                  var a = {};
                  for (var d in this.drawingContext) {
                    var g = this.drawingContext[d];
                    h(g) !== 'object' && typeof g != 'function' && (a[d] = g);
                  }
                  for (var _ in (this._renderer.resize(n, s),
                  (this.width = n),
                  (this.height = s),
                  a))
                    try {
                      this.drawingContext[_] = a[_];
                    } catch {}
                  i || this.redraw();
                }
                this._addAccsOutput() && this._updateAccsOutput();
              }),
              (r.default.prototype.noCanvas = function () {
                this.canvas && this.canvas.parentNode.removeChild(this.canvas);
              }),
              (r.default.prototype.createGraphics = function (n, s, i) {
                return (
                  r.default._validateParameters('createGraphics', arguments),
                  new r.default.Graphics(n, s, i, this)
                );
              }),
              (r.default.prototype.blendMode = function (n) {
                r.default._validateParameters('blendMode', arguments),
                  n === c.NORMAL &&
                    (console.warn(
                      'NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead.',
                    ),
                    (n = c.BLEND)),
                  this._renderer.blendMode(n);
              });
            var o = r.default;
            y.default = o;
          },
          {
            '../webgl/p5.RendererGL': 318,
            './constants': 253,
            './main': 264,
            './p5.Graphics': 266,
            './p5.Renderer2D': 268,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        271: [
          function (e, v, y) {
            function m(n) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(n);
            }
            e('core-js/modules/es.array.slice'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = u(e('../main')),
              c = (function (n) {
                if (n && n.__esModule) return n;
                if (n === null || (m(n) !== 'object' && typeof n != 'function'))
                  return { default: n };
                var s = h();
                if (s && s.has(n)) return s.get(n);
                var i = {},
                  a = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var d in n)
                  if (Object.prototype.hasOwnProperty.call(n, d)) {
                    var g = a ? Object.getOwnPropertyDescriptor(n, d) : null;
                    g && (g.get || g.set)
                      ? Object.defineProperty(i, d, g)
                      : (i[d] = n[d]);
                  }
                return (i.default = n), s && s.set(n, i), i;
              })(e('../constants')),
              l = u(e('../helpers'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var n = new WeakMap();
              return (
                (h = function () {
                  return n;
                }),
                n
              );
            }
            function u(n) {
              return n && n.__esModule ? n : { default: n };
            }
            e('../friendly_errors/fes_core'),
              e('../friendly_errors/file_errors'),
              e('../friendly_errors/validate_params'),
              (r.default.prototype._normalizeArcAngles = function (
                n,
                s,
                i,
                a,
                d,
              ) {
                var g;
                return (
                  (n -= c.TWO_PI * Math.floor(n / c.TWO_PI)),
                  (s -= c.TWO_PI * Math.floor(s / c.TWO_PI)),
                  (g = Math.min(Math.abs(n - s), c.TWO_PI - Math.abs(n - s))),
                  d &&
                    ((n =
                      n <= c.HALF_PI
                        ? Math.atan((i / a) * Math.tan(n))
                        : n > c.HALF_PI && n <= 3 * c.HALF_PI
                        ? Math.atan((i / a) * Math.tan(n)) + c.PI
                        : Math.atan((i / a) * Math.tan(n)) + c.TWO_PI),
                    (s =
                      s <= c.HALF_PI
                        ? Math.atan((i / a) * Math.tan(s))
                        : s > c.HALF_PI && s <= 3 * c.HALF_PI
                        ? Math.atan((i / a) * Math.tan(s)) + c.PI
                        : Math.atan((i / a) * Math.tan(s)) + c.TWO_PI)),
                  s < n && (s += c.TWO_PI),
                  { start: n, stop: s, correspondToSamePoint: g < 1e-5 }
                );
              }),
              (r.default.prototype.arc = function (n, s, i, a, d, g, _, w) {
                if (
                  (r.default._validateParameters('arc', arguments),
                  !this._renderer._doStroke && !this._renderer._doFill)
                )
                  return this;
                if (d === g) return this;
                (d = this._toRadians(d)),
                  (g = this._toRadians(g)),
                  (i = Math.abs(i)),
                  (a = Math.abs(a));
                var S = l.default.modeAdjust(
                    n,
                    s,
                    i,
                    a,
                    this._renderer._ellipseMode,
                  ),
                  M = this._normalizeArcAngles(d, g, S.w, S.h, !0);
                return (
                  M.correspondToSamePoint
                    ? this._renderer.ellipse([S.x, S.y, S.w, S.h, w])
                    : (this._renderer.arc(
                        S.x,
                        S.y,
                        S.w,
                        S.h,
                        M.start,
                        M.stop,
                        _,
                        w,
                      ),
                      (this._accessibleOutputs.grid ||
                        this._accessibleOutputs.text) &&
                        this._accsOutput('arc', [
                          S.x,
                          S.y,
                          S.w,
                          S.h,
                          M.start,
                          M.stop,
                          _,
                        ])),
                  this
                );
              }),
              (r.default.prototype.ellipse = function (n, s, i, a, d) {
                return (
                  r.default._validateParameters('ellipse', arguments),
                  this._renderEllipse.apply(this, arguments)
                );
              }),
              (r.default.prototype.circle = function () {
                r.default._validateParameters('circle', arguments);
                var n = Array.prototype.slice.call(arguments, 0, 2);
                return (
                  n.push(arguments[2]),
                  n.push(arguments[2]),
                  this._renderEllipse.apply(this, n)
                );
              }),
              (r.default.prototype._renderEllipse = function (n, s, i, a, d) {
                if (!this._renderer._doStroke && !this._renderer._doFill)
                  return this;
                i < 0 && (i = Math.abs(i)),
                  a === void 0 ? (a = i) : a < 0 && (a = Math.abs(a));
                var g = l.default.modeAdjust(
                  n,
                  s,
                  i,
                  a,
                  this._renderer._ellipseMode,
                );
                return (
                  this._renderer.ellipse([g.x, g.y, g.w, g.h, d]),
                  (this._accessibleOutputs.grid ||
                    this._accessibleOutputs.text) &&
                    this._accsOutput('ellipse', [g.x, g.y, g.w, g.h]),
                  this
                );
              }),
              (r.default.prototype.line = function () {
                for (
                  var n = arguments.length, s = new Array(n), i = 0;
                  i < n;
                  i++
                )
                  s[i] = arguments[i];
                var a;
                return (
                  r.default._validateParameters('line', s),
                  this._renderer._doStroke &&
                    (a = this._renderer).line.apply(a, s),
                  (this._accessibleOutputs.grid ||
                    this._accessibleOutputs.text) &&
                    this._accsOutput('line', s),
                  this
                );
              }),
              (r.default.prototype.point = function () {
                for (
                  var n = arguments.length, s = new Array(n), i = 0;
                  i < n;
                  i++
                )
                  s[i] = arguments[i];
                var a;
                return (
                  r.default._validateParameters('point', s),
                  this._renderer._doStroke &&
                    (s.length === 1 && s[0] instanceof r.default.Vector
                      ? this._renderer.point.call(
                          this._renderer,
                          s[0].x,
                          s[0].y,
                          s[0].z,
                        )
                      : ((a = this._renderer).point.apply(a, s),
                        (this._accessibleOutputs.grid ||
                          this._accessibleOutputs.text) &&
                          this._accsOutput('point', s))),
                  this
                );
              }),
              (r.default.prototype.quad = function () {
                for (
                  var n = arguments.length, s = new Array(n), i = 0;
                  i < n;
                  i++
                )
                  s[i] = arguments[i];
                var a;
                return (
                  r.default._validateParameters('quad', s),
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    (this._renderer.isP3D && s.length <= 12
                      ? this._renderer.quad.call(
                          this._renderer,
                          s[0],
                          s[1],
                          0,
                          s[2],
                          s[3],
                          0,
                          s[4],
                          s[5],
                          0,
                          s[6],
                          s[7],
                          0,
                          s[8],
                          s[9],
                        )
                      : ((a = this._renderer).quad.apply(a, s),
                        (this._accessibleOutputs.grid ||
                          this._accessibleOutputs.text) &&
                          this._accsOutput('quadrilateral', s))),
                  this
                );
              }),
              (r.default.prototype.rect = function () {
                return (
                  r.default._validateParameters('rect', arguments),
                  this._renderRect.apply(this, arguments)
                );
              }),
              (r.default.prototype.square = function (n, s, i, a, d, g, _) {
                return (
                  r.default._validateParameters('square', arguments),
                  this._renderRect.call(this, n, s, i, i, a, d, g, _)
                );
              }),
              (r.default.prototype._renderRect = function () {
                if (this._renderer._doStroke || this._renderer._doFill) {
                  arguments.length === 3 && (arguments[3] = arguments[2]);
                  for (
                    var n = l.default.modeAdjust(
                        arguments[0],
                        arguments[1],
                        arguments[2],
                        arguments[3],
                        this._renderer._rectMode,
                      ),
                      s = [n.x, n.y, n.w, n.h],
                      i = 4;
                    i < arguments.length;
                    i++
                  )
                    s[i] = arguments[i];
                  this._renderer.rect(s),
                    (this._accessibleOutputs.grid ||
                      this._accessibleOutputs.text) &&
                      this._accsOutput('rectangle', [n.x, n.y, n.w, n.h]);
                }
                return this;
              }),
              (r.default.prototype.triangle = function () {
                for (
                  var n = arguments.length, s = new Array(n), i = 0;
                  i < n;
                  i++
                )
                  s[i] = arguments[i];
                return (
                  r.default._validateParameters('triangle', s),
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    this._renderer.triangle(s),
                  (this._accessibleOutputs.grid ||
                    this._accessibleOutputs.text) &&
                    this._accsOutput('triangle', s),
                  this
                );
              });
            var o = r.default;
            y.default = o;
          },
          {
            '../constants': 253,
            '../friendly_errors/fes_core': 255,
            '../friendly_errors/file_errors': 256,
            '../friendly_errors/validate_params': 259,
            '../helpers': 260,
            '../main': 264,
            'core-js/modules/es.array.slice': 162,
          },
        ],
        272: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            (c.default.prototype.ellipseMode = function (o) {
              return (
                c.default._validateParameters('ellipseMode', arguments),
                (o !== l.CORNER &&
                  o !== l.CORNERS &&
                  o !== l.RADIUS &&
                  o !== l.CENTER) ||
                  (this._renderer._ellipseMode = o),
                this
              );
            }),
              (c.default.prototype.noSmooth = function () {
                return (
                  this._renderer.isP3D
                    ? this.setAttributes('antialias', !1)
                    : 'imageSmoothingEnabled' in this.drawingContext &&
                      (this.drawingContext.imageSmoothingEnabled = !1),
                  this
                );
              }),
              (c.default.prototype.rectMode = function (o) {
                return (
                  c.default._validateParameters('rectMode', arguments),
                  (o !== l.CORNER &&
                    o !== l.CORNERS &&
                    o !== l.RADIUS &&
                    o !== l.CENTER) ||
                    (this._renderer._rectMode = o),
                  this
                );
              }),
              (c.default.prototype.smooth = function () {
                return (
                  this.setAttributes('antialias', !0),
                  this._renderer.isP3D ||
                    ('imageSmoothingEnabled' in this.drawingContext &&
                      (this.drawingContext.imageSmoothingEnabled = !0)),
                  this
                );
              }),
              (c.default.prototype.strokeCap = function (o) {
                return (
                  c.default._validateParameters('strokeCap', arguments),
                  (o !== l.ROUND && o !== l.SQUARE && o !== l.PROJECT) ||
                    this._renderer.strokeCap(o),
                  this
                );
              }),
              (c.default.prototype.strokeJoin = function (o) {
                return (
                  c.default._validateParameters('strokeJoin', arguments),
                  (o !== l.ROUND && o !== l.BEVEL && o !== l.MITER) ||
                    this._renderer.strokeJoin(o),
                  this
                );
              }),
              (c.default.prototype.strokeWeight = function (o) {
                return (
                  c.default._validateParameters('strokeWeight', arguments),
                  this._renderer.strokeWeight(o),
                  this
                );
              });
            var u = c.default;
            y.default = u;
          },
          { '../constants': 253, '../main': 264 },
        ],
        273: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../main')) && m.__esModule ? m : { default: m };
            e('../friendly_errors/fes_core'),
              e('../friendly_errors/file_errors'),
              e('../friendly_errors/validate_params'),
              (r.default.prototype.bezier = function () {
                for (
                  var l, h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return (
                  r.default._validateParameters('bezier', u),
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    (l = this._renderer).bezier.apply(l, u),
                  this
                );
              }),
              (r.default.prototype.bezierDetail = function (l) {
                return (
                  r.default._validateParameters('bezierDetail', arguments),
                  (this._bezierDetail = l),
                  this
                );
              }),
              (r.default.prototype.bezierPoint = function (l, h, u, o, n) {
                r.default._validateParameters('bezierPoint', arguments);
                var s = 1 - n;
                return (
                  Math.pow(s, 3) * l +
                  3 * Math.pow(s, 2) * n * h +
                  3 * s * Math.pow(n, 2) * u +
                  Math.pow(n, 3) * o
                );
              }),
              (r.default.prototype.bezierTangent = function (l, h, u, o, n) {
                r.default._validateParameters('bezierTangent', arguments);
                var s = 1 - n;
                return (
                  3 * o * Math.pow(n, 2) -
                  3 * u * Math.pow(n, 2) +
                  6 * u * s * n -
                  6 * h * s * n +
                  3 * h * Math.pow(s, 2) -
                  3 * l * Math.pow(s, 2)
                );
              }),
              (r.default.prototype.curve = function () {
                for (
                  var l = arguments.length, h = new Array(l), u = 0;
                  u < l;
                  u++
                )
                  h[u] = arguments[u];
                var o;
                return (
                  r.default._validateParameters('curve', h),
                  this._renderer._doStroke &&
                    (o = this._renderer).curve.apply(o, h),
                  this
                );
              }),
              (r.default.prototype.curveDetail = function (l) {
                return (
                  r.default._validateParameters('curveDetail', arguments),
                  (this._curveDetail = l < 3 ? 3 : l),
                  this
                );
              }),
              (r.default.prototype.curveTightness = function (l) {
                return (
                  r.default._validateParameters('curveTightness', arguments),
                  (this._renderer._curveTightness = l),
                  this
                );
              }),
              (r.default.prototype.curvePoint = function (l, h, u, o, n) {
                r.default._validateParameters('curvePoint', arguments);
                var s = n * n * n,
                  i = n * n;
                return (
                  l * (-0.5 * s + i - 0.5 * n) +
                  h * (1.5 * s - 2.5 * i + 1) +
                  u * (-1.5 * s + 2 * i + 0.5 * n) +
                  o * (0.5 * s - 0.5 * i)
                );
              }),
              (r.default.prototype.curveTangent = function (l, h, u, o, n) {
                r.default._validateParameters('curveTangent', arguments);
                var s = n * n;
                return (
                  l * ((-3 * s) / 2 + 2 * n - 0.5) +
                  h * ((9 * s) / 2 - 5 * n) +
                  u * ((-9 * s) / 2 + 4 * n + 0.5) +
                  o * ((3 * s) / 2 - n)
                );
              });
            var c = r.default;
            y.default = c;
          },
          {
            '../friendly_errors/fes_core': 255,
            '../friendly_errors/file_errors': 256,
            '../friendly_errors/validate_params': 259,
            '../main': 264,
          },
        ],
        274: [
          function (e, v, y) {
            function m(w) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (S) {
                      return typeof S;
                    }
                  : function (S) {
                      return S &&
                        typeof Symbol == 'function' &&
                        S.constructor === Symbol &&
                        S !== Symbol.prototype
                        ? 'symbol'
                        : typeof S;
                    })(w);
            }
            e('core-js/modules/es.array.slice'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../main')) && r.__esModule ? r : { default: r },
              l = (function (w) {
                if (w && w.__esModule) return w;
                if (w === null || (m(w) !== 'object' && typeof w != 'function'))
                  return { default: w };
                var S = h();
                if (S && S.has(w)) return S.get(w);
                var M = {},
                  E = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var O in w)
                  if (Object.prototype.hasOwnProperty.call(w, O)) {
                    var D = E ? Object.getOwnPropertyDescriptor(w, O) : null;
                    D && (D.get || D.set)
                      ? Object.defineProperty(M, O, D)
                      : (M[O] = w[O]);
                  }
                return (M.default = w), S && S.set(w, M), M;
              })(e('../constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var w = new WeakMap();
              return (
                (h = function () {
                  return w;
                }),
                w
              );
            }
            var u = null,
              o = [],
              n = [],
              s = !1,
              i = !1,
              a = !1,
              d = !1,
              g = !0;
            (c.default.prototype.beginContour = function () {
              return (n = []), (d = !0), this;
            }),
              (c.default.prototype.beginShape = function (w) {
                var S;
                return (
                  c.default._validateParameters('beginShape', arguments),
                  this._renderer.isP3D
                    ? (S = this._renderer).beginShape.apply(S, arguments)
                    : ((u =
                        w === l.POINTS ||
                        w === l.LINES ||
                        w === l.TRIANGLES ||
                        w === l.TRIANGLE_FAN ||
                        w === l.TRIANGLE_STRIP ||
                        w === l.QUADS ||
                        w === l.QUAD_STRIP
                          ? w
                          : null),
                      (o = []),
                      (n = [])),
                  this
                );
              }),
              (c.default.prototype.bezierVertex = function () {
                for (
                  var w = arguments.length, S = new Array(w), M = 0;
                  M < w;
                  M++
                )
                  S[M] = arguments[M];
                var E;
                if (
                  (c.default._validateParameters('bezierVertex', S),
                  this._renderer.isP3D)
                )
                  (E = this._renderer).bezierVertex.apply(E, S);
                else if (o.length === 0)
                  c.default._friendlyError(
                    'vertex() must be used once before calling bezierVertex()',
                    'bezierVertex',
                  );
                else {
                  s = !0;
                  for (var O = [], D = 0; D < S.length; D++) O[D] = S[D];
                  (O.isVert = !1), d ? n.push(O) : o.push(O);
                }
                return this;
              }),
              (c.default.prototype.curveVertex = function () {
                for (
                  var w = arguments.length, S = new Array(w), M = 0;
                  M < w;
                  M++
                )
                  S[M] = arguments[M];
                var E;
                return (
                  c.default._validateParameters('curveVertex', S),
                  this._renderer.isP3D
                    ? (E = this._renderer).curveVertex.apply(E, S)
                    : ((i = !0), this.vertex(S[0], S[1])),
                  this
                );
              }),
              (c.default.prototype.endContour = function () {
                var w = n[0].slice();
                (w.isVert = n[0].isVert),
                  (w.moveTo = !1),
                  n.push(w),
                  g && (o.push(o[0]), (g = !1));
                for (var S = 0; S < n.length; S++) o.push(n[S]);
                return this;
              }),
              (c.default.prototype.endShape = function (w) {
                if (
                  (c.default._validateParameters('endShape', arguments),
                  this._renderer.isP3D)
                )
                  this._renderer.endShape(w, i, s, a, d, u);
                else {
                  if (o.length === 0) return this;
                  if (!this._renderer._doStroke && !this._renderer._doFill)
                    return this;
                  var S = w === l.CLOSE;
                  S && !d && o.push(o[0]),
                    this._renderer.endShape(w, o, i, s, a, d, u),
                    (g = !(d = a = s = i = !1)),
                    S && o.pop();
                }
                return this;
              }),
              (c.default.prototype.quadraticVertex = function () {
                for (
                  var w = arguments.length, S = new Array(w), M = 0;
                  M < w;
                  M++
                )
                  S[M] = arguments[M];
                if (
                  (c.default._validateParameters('quadraticVertex', S),
                  this._renderer.isP3D)
                ) {
                  var E;
                  (E = this._renderer).quadraticVertex.apply(E, S);
                } else {
                  if (this._contourInited) {
                    var O = {};
                    return (
                      (O.x = S[0]),
                      (O.y = S[1]),
                      (O.x3 = S[2]),
                      (O.y3 = S[3]),
                      (O.type = l.QUADRATIC),
                      this._contourVertices.push(O),
                      this
                    );
                  }
                  if (0 < o.length) {
                    a = !0;
                    for (var D = [], A = 0; A < S.length; A++) D[A] = S[A];
                    (D.isVert = !1), d ? n.push(D) : o.push(D);
                  } else
                    c.default._friendlyError(
                      'vertex() must be used once before calling quadraticVertex()',
                      'quadraticVertex',
                    );
                }
                return this;
              }),
              (c.default.prototype.vertex = function (w, S, M, E, O) {
                if (this._renderer.isP3D) {
                  var D;
                  (D = this._renderer).vertex.apply(D, arguments);
                } else {
                  var A = [];
                  (A.isVert = !0),
                    (A[0] = w),
                    (A[1] = S),
                    (A[2] = 0),
                    (A[3] = 0),
                    (A[4] = 0),
                    (A[5] = this._renderer._getFill()),
                    (A[6] = this._renderer._getStroke()),
                    M && (A.moveTo = M),
                    d
                      ? (n.length === 0 && (A.moveTo = !0), n.push(A))
                      : o.push(A);
                }
                return this;
              }),
              (c.default.prototype.normal = function (w, S, M) {
                var E;
                return (
                  this._assert3d('normal'),
                  c.default._validateParameters('normal', arguments),
                  (E = this._renderer).normal.apply(E, arguments),
                  this
                );
              });
            var _ = c.default;
            y.default = _;
          },
          {
            '../constants': 253,
            '../main': 264,
            'core-js/modules/es.array.slice': 162,
          },
        ],
        275: [
          function (e, v, y) {
            function m(r) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (c) {
                      return typeof c;
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : typeof c;
                    })(r);
            }
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.assign'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.typed-array.uint8-clamped-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              e('core-js/modules/web.dom-collections.iterator'),
              (window.requestAnimationFrame =
                window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function (r, c) {
                  window.setTimeout(r, 1e3 / 60);
                }),
              typeof Uint8ClampedArray > 'u' ||
                Uint8ClampedArray.prototype.slice ||
                Object.defineProperty(Uint8ClampedArray.prototype, 'slice', {
                  value: Array.prototype.slice,
                  writable: !0,
                  configurable: !0,
                  enumerable: !1,
                }),
              (function () {
                if (!Object.assign) {
                  var r = Object.keys,
                    c = Object.defineProperty,
                    l = typeof Symbol == 'function' && m(Symbol()) === 'symbol',
                    h = Object.prototype.propertyIsEnumerable,
                    u = function (o) {
                      return function (n) {
                        return h.call(o, n);
                      };
                    };
                  c(Object, 'assign', {
                    value: function (o, n) {
                      if (o == null)
                        throw new TypeError('target must be an object');
                      var s,
                        i,
                        a,
                        d,
                        g = Object(o);
                      for (s = 1; s < arguments.length; ++s)
                        for (
                          i = Object(arguments[s]),
                            d = r(i),
                            l &&
                              Object.getOwnPropertySymbols &&
                              d.push.apply(
                                d,
                                Object.getOwnPropertySymbols(i).filter(u(i)),
                              ),
                            a = 0;
                          a < d.length;
                          ++a
                        )
                          g[d[a]] = i[d[a]];
                      return g;
                    },
                    configurable: !0,
                    enumerable: !1,
                    writable: !0,
                  });
                }
              })();
          },
          {
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.assign': 173,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-clamped-array': 227,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        276: [
          function (e, v, y) {
            e('core-js/modules/es.array.for-each'),
              e('core-js/modules/es.object.assign'),
              e('core-js/modules/web.dom-collections.for-each'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('./main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.noLoop = function () {
              this._loop = !1;
            }),
              (r.default.prototype.loop = function () {
                this._loop ||
                  ((this._loop = !0), this._setupDone && this._draw());
              }),
              (r.default.prototype.isLooping = function () {
                return this._loop;
              }),
              (r.default.prototype.push = function () {
                this._styles.push({
                  props: { _colorMode: this._colorMode },
                  renderer: this._renderer.push(),
                });
              }),
              (r.default.prototype.pop = function () {
                var l = this._styles.pop();
                l
                  ? (this._renderer.pop(l.renderer),
                    Object.assign(this, l.props))
                  : console.warn('pop() was called without matching push()');
              }),
              (r.default.prototype.redraw = function (l) {
                if (!this._inUserDraw && this._setupDone) {
                  var h = parseInt(l);
                  (isNaN(h) || h < 1) && (h = 1);
                  var u = this._isGlobal ? window : this;
                  if (typeof u.draw == 'function') {
                    u.setup === void 0 &&
                      u.scale(u._pixelDensity, u._pixelDensity);
                    for (
                      var o = function (s) {
                          s.call(u);
                        },
                        n = 0;
                      n < h;
                      n++
                    ) {
                      u.resetMatrix(),
                        (this._accessibleOutputs.grid ||
                          this._accessibleOutputs.text) &&
                          this._updateAccsOutput(),
                        u._renderer.isP3D && u._renderer._update(),
                        u._setProperty('frameCount', u.frameCount + 1),
                        u._registeredMethods.pre.forEach(o),
                        (this._inUserDraw = !0);
                      try {
                        u.draw();
                      } finally {
                        this._inUserDraw = !1;
                      }
                      u._registeredMethods.post.forEach(o);
                    }
                  }
                }
              });
            var c = r.default;
            y.default = c;
          },
          {
            './main': 264,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.object.assign': 173,
            'core-js/modules/web.dom-collections.for-each': 228,
          },
        ],
        277: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.from'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.get-prototype-of'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.typed-array.uint8-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('./main')) && m.__esModule ? m : { default: m };
            function c(h) {
              return (
                (function (u) {
                  if (Array.isArray(u)) {
                    for (var o = 0, n = new Array(u.length); o < u.length; o++)
                      n[o] = u[o];
                    return n;
                  }
                })(h) ||
                (function (u) {
                  if (
                    Symbol.iterator in Object(u) ||
                    Object.prototype.toString.call(u) === '[object Arguments]'
                  )
                    return Array.from(u);
                })(h) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            (r.default.prototype.applyMatrix = function () {
              var h,
                u,
                o = arguments[0] instanceof Object.getPrototypeOf(Uint8Array);
              return (
                Array.isArray(arguments[0]) || o
                  ? (h = this._renderer).applyMatrix.apply(h, c(arguments[0]))
                  : (u = this._renderer).applyMatrix.apply(u, arguments),
                this
              );
            }),
              (r.default.prototype.resetMatrix = function () {
                return this._renderer.resetMatrix(), this;
              }),
              (r.default.prototype.rotate = function (h, u) {
                return (
                  r.default._validateParameters('rotate', arguments),
                  this._renderer.rotate(this._toRadians(h), u),
                  this
                );
              }),
              (r.default.prototype.rotateX = function (h) {
                return (
                  this._assert3d('rotateX'),
                  r.default._validateParameters('rotateX', arguments),
                  this._renderer.rotateX(this._toRadians(h)),
                  this
                );
              }),
              (r.default.prototype.rotateY = function (h) {
                return (
                  this._assert3d('rotateY'),
                  r.default._validateParameters('rotateY', arguments),
                  this._renderer.rotateY(this._toRadians(h)),
                  this
                );
              }),
              (r.default.prototype.rotateZ = function (h) {
                return (
                  this._assert3d('rotateZ'),
                  r.default._validateParameters('rotateZ', arguments),
                  this._renderer.rotateZ(this._toRadians(h)),
                  this
                );
              }),
              (r.default.prototype.scale = function (h, u, o) {
                if (
                  (r.default._validateParameters('scale', arguments),
                  h instanceof r.default.Vector)
                ) {
                  var n = h;
                  (h = n.x), (u = n.y), (o = n.z);
                } else if (h instanceof Array) {
                  var s = h;
                  (h = s[0]), (u = s[1]), (o = s[2] || 1);
                }
                return (
                  isNaN(u) ? (u = o = h) : isNaN(o) && (o = 1),
                  this._renderer.scale.call(this._renderer, h, u, o),
                  this
                );
              }),
              (r.default.prototype.shearX = function (h) {
                r.default._validateParameters('shearX', arguments);
                var u = this._toRadians(h);
                return (
                  this._renderer.applyMatrix(1, 0, Math.tan(u), 1, 0, 0), this
                );
              }),
              (r.default.prototype.shearY = function (h) {
                r.default._validateParameters('shearY', arguments);
                var u = this._toRadians(h);
                return (
                  this._renderer.applyMatrix(1, Math.tan(u), 0, 1, 0, 0), this
                );
              }),
              (r.default.prototype.translate = function (h, u, o) {
                return (
                  r.default._validateParameters('translate', arguments),
                  this._renderer.isP3D
                    ? this._renderer.translate(h, u, o)
                    : this._renderer.translate(h, u),
                  this
                );
              });
            var l = r.default;
            y.default = l;
          },
          {
            './main': 264,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-prototype-of': 175,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        278: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.from'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.ends-with'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/web.dom-collections.iterator');
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(h) {
              return (
                (function (u) {
                  if (Array.isArray(u)) {
                    for (var o = 0, n = new Array(u.length); o < u.length; o++)
                      n[o] = u[o];
                    return n;
                  }
                })(h) ||
                (function (u) {
                  if (
                    Symbol.iterator in Object(u) ||
                    Object.prototype.toString.call(u) === '[object Arguments]'
                  )
                    return Array.from(u);
                })(h) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            function l(h) {
              return (l =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (u) {
                      return typeof u;
                    }
                  : function (u) {
                      return u &&
                        typeof Symbol == 'function' &&
                        u.constructor === Symbol &&
                        u !== Symbol.prototype
                        ? 'symbol'
                        : typeof u;
                    })(h);
            }
            (r.default.prototype.storeItem = function (h, u) {
              typeof h != 'string' &&
                console.log(
                  'The argument that you passed to storeItem() - '.concat(
                    h,
                    ' is not a string.',
                  ),
                ),
                h.endsWith('p5TypeID') &&
                  console.log(
                    'The argument that you passed to storeItem() - '.concat(
                      h,
                      " must not end with 'p5TypeID'.",
                    ),
                  ),
                u === void 0 &&
                  console.log(
                    'You cannot store undefined variables using storeItem().',
                  );
              var o = l(u);
              switch (o) {
                case 'number':
                case 'boolean':
                  u = u.toString();
                  break;
                case 'object':
                  u instanceof r.default.Color
                    ? (o = 'p5.Color')
                    : u instanceof r.default.Vector &&
                      ((o = 'p5.Vector'), (u = [u.x, u.y, u.z])),
                    (u = JSON.stringify(u));
              }
              localStorage.setItem(h, u);
              var n = ''.concat(h, 'p5TypeID');
              localStorage.setItem(n, o);
            }),
              (r.default.prototype.getItem = function (h) {
                var u = localStorage.getItem(h),
                  o = localStorage.getItem(''.concat(h, 'p5TypeID'));
                if (o === void 0)
                  console.log(
                    'Unable to determine type of item stored under '.concat(
                      h,
                      'in local storage. Did you save the item with something other than setItem()?',
                    ),
                  );
                else if (u !== null)
                  switch (o) {
                    case 'number':
                      u = parseFloat(u);
                      break;
                    case 'boolean':
                      u = u === 'true';
                      break;
                    case 'object':
                      u = JSON.parse(u);
                      break;
                    case 'p5.Color':
                      (u = JSON.parse(u)),
                        (u = this.color.apply(this, c(u.levels)));
                      break;
                    case 'p5.Vector':
                      (u = JSON.parse(u)),
                        (u = this.createVector.apply(this, c(u)));
                  }
                return u;
              }),
              (r.default.prototype.clearStorage = function () {
                localStorage.clear();
              }),
              (r.default.prototype.removeItem = function (h) {
                typeof h != 'string' &&
                  console.log(
                    'The argument that you passed to removeItem() - '.concat(
                      h,
                      ' is not a string.',
                    ),
                  ),
                  localStorage.removeItem(h),
                  localStorage.removeItem(''.concat(h, 'p5TypeID'));
              });
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.ends-with': 184,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        279: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.string.sub'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.createStringDict = function (l, h) {
              return (
                r.default._validateParameters('createStringDict', arguments),
                new r.default.StringDict(l, h)
              );
            }),
              (r.default.prototype.createNumberDict = function (l, h) {
                return (
                  r.default._validateParameters('createNumberDict', arguments),
                  new r.default.NumberDict(l, h)
                );
              }),
              (r.default.TypedDict = function (l, h) {
                return (
                  l instanceof Object
                    ? (this.data = l)
                    : ((this.data = {}), (this.data[l] = h)),
                  this
                );
              }),
              (r.default.TypedDict.prototype.size = function () {
                return Object.keys(this.data).length;
              }),
              (r.default.TypedDict.prototype.hasKey = function (l) {
                return this.data.hasOwnProperty(l);
              }),
              (r.default.TypedDict.prototype.get = function (l) {
                if (this.data.hasOwnProperty(l)) return this.data[l];
                console.log(''.concat(l, ' does not exist in this Dictionary'));
              }),
              (r.default.TypedDict.prototype.set = function (l, h) {
                this._validate(h)
                  ? (this.data[l] = h)
                  : console.log(
                      'Those values dont work for this dictionary type.',
                    );
              }),
              (r.default.TypedDict.prototype._addObj = function (l) {
                for (var h in l) this.set(h, l[h]);
              }),
              (r.default.TypedDict.prototype.create = function (l, h) {
                l instanceof Object && h === void 0
                  ? this._addObj(l)
                  : l !== void 0
                  ? this.set(l, h)
                  : console.log(
                      'In order to create a new Dictionary entry you must pass an object or a key, value pair',
                    );
              }),
              (r.default.TypedDict.prototype.clear = function () {
                this.data = {};
              }),
              (r.default.TypedDict.prototype.remove = function (l) {
                if (!this.data.hasOwnProperty(l))
                  throw new Error(
                    ''.concat(l, ' does not exist in this Dictionary'),
                  );
                delete this.data[l];
              }),
              (r.default.TypedDict.prototype.print = function () {
                for (var l in this.data)
                  console.log('key:'.concat(l, ' value:').concat(this.data[l]));
              }),
              (r.default.TypedDict.prototype.saveTable = function (l) {
                var h = '';
                for (var u in this.data)
                  h += ''.concat(u, ',').concat(
                    this.data[u],
                    `
`,
                  );
                var o = new Blob([h], { type: 'text/csv' });
                r.default.prototype.downloadFile(o, l || 'mycsv', 'csv');
              }),
              (r.default.TypedDict.prototype.saveJSON = function (l, h) {
                r.default.prototype.saveJSON(this.data, l, h);
              }),
              (r.default.TypedDict.prototype._validate = function (l) {
                return !0;
              }),
              (r.default.StringDict = function () {
                for (
                  var l = arguments.length, h = new Array(l), u = 0;
                  u < l;
                  u++
                )
                  h[u] = arguments[u];
                r.default.TypedDict.apply(this, h);
              }),
              (r.default.StringDict.prototype = Object.create(
                r.default.TypedDict.prototype,
              )),
              (r.default.StringDict.prototype._validate = function (l) {
                return typeof l == 'string';
              }),
              (r.default.NumberDict = function () {
                for (
                  var l = arguments.length, h = new Array(l), u = 0;
                  u < l;
                  u++
                )
                  h[u] = arguments[u];
                r.default.TypedDict.apply(this, h);
              }),
              (r.default.NumberDict.prototype = Object.create(
                r.default.TypedDict.prototype,
              )),
              (r.default.NumberDict.prototype._validate = function (l) {
                return typeof l == 'number';
              }),
              (r.default.NumberDict.prototype.add = function (l, h) {
                this.data.hasOwnProperty(l)
                  ? (this.data[l] += h)
                  : console.log(
                      'The key - '.concat(
                        l,
                        ' does not exist in this dictionary.',
                      ),
                    );
              }),
              (r.default.NumberDict.prototype.sub = function (l, h) {
                this.add(l, -h);
              }),
              (r.default.NumberDict.prototype.mult = function (l, h) {
                this.data.hasOwnProperty(l)
                  ? (this.data[l] *= h)
                  : console.log(
                      'The key - '.concat(
                        l,
                        ' does not exist in this dictionary.',
                      ),
                    );
              }),
              (r.default.NumberDict.prototype.div = function (l, h) {
                this.data.hasOwnProperty(l)
                  ? (this.data[l] /= h)
                  : console.log(
                      'The key - '.concat(
                        l,
                        ' does not exist in this dictionary.',
                      ),
                    );
              }),
              (r.default.NumberDict.prototype._valueTest = function (l) {
                if (Object.keys(this.data).length === 0)
                  throw new Error(
                    'Unable to search for a minimum or maximum value on an empty NumberDict',
                  );
                if (Object.keys(this.data).length === 1)
                  return this.data[Object.keys(this.data)[0]];
                var h = this.data[Object.keys(this.data)[0]];
                for (var u in this.data)
                  this.data[u] * l < h * l && (h = this.data[u]);
                return h;
              }),
              (r.default.NumberDict.prototype.minValue = function () {
                return this._valueTest(1);
              }),
              (r.default.NumberDict.prototype.maxValue = function () {
                return this._valueTest(-1);
              }),
              (r.default.NumberDict.prototype._keyTest = function (l) {
                if (Object.keys(this.data).length === 0)
                  throw new Error(
                    'Unable to use minValue on an empty NumberDict',
                  );
                if (Object.keys(this.data).length === 1)
                  return Object.keys(this.data)[0];
                for (
                  var h = Object.keys(this.data)[0], u = 1;
                  u < Object.keys(this.data).length;
                  u++
                )
                  Object.keys(this.data)[u] * l < h * l &&
                    (h = Object.keys(this.data)[u]);
                return h;
              }),
              (r.default.NumberDict.prototype.minKey = function () {
                return this._keyTest(1);
              }),
              (r.default.NumberDict.prototype.maxKey = function () {
                return this._keyTest(-1);
              });
            var c = r.default.TypedDict;
            y.default = c;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.string.sub': 192,
          },
        ],
        280: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.every'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.for-each'),
              e('core-js/modules/es.array.from'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.splice'),
              e('core-js/modules/es.function.name'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.promise'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.string.trim'),
              e('core-js/modules/web.dom-collections.for-each'),
              e('core-js/modules/web.dom-collections.iterator'),
              e('core-js/modules/web.url'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(n) {
              return (c =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(n);
            }
            function l(n, s, i) {
              (s._userNode ? s._userNode : document.body).appendChild(n);
              var a = i
                ? new r.default.MediaElement(n, s)
                : new r.default.Element(n, s);
              return s._elements.push(a), a;
            }
            function h(n, s, i, a) {
              var d = document.createElement(s);
              typeof (i = i || '') == 'string' && (i = [i]);
              var g = !0,
                _ = !1,
                w = void 0;
              try {
                for (
                  var S, M = i[Symbol.iterator]();
                  !(g = (S = M.next()).done);
                  g = !0
                ) {
                  var E = S.value,
                    O = document.createElement('source');
                  O.setAttribute('src', E), d.appendChild(O);
                }
              } catch (A) {
                (_ = !0), (w = A);
              } finally {
                try {
                  g || M.return == null || M.return();
                } finally {
                  if (_) throw w;
                }
              }
              typeof a == 'function' &&
                d.addEventListener('canplaythrough', function A() {
                  a(), d.removeEventListener('canplaythrough', A);
                });
              var D = l(d, n, !0);
              return (
                (D.loadedmetadata = !1),
                d.addEventListener('loadedmetadata', function () {
                  (D.width = d.videoWidth),
                    (D.height = d.videoHeight),
                    D.elt.width === 0 && (D.elt.width = d.videoWidth),
                    D.elt.height === 0 && (D.elt.height = d.videoHeight),
                    D.presetPlaybackRate &&
                      ((D.elt.playbackRate = D.presetPlaybackRate),
                      delete D.presetPlaybackRate),
                    (D.loadedmetadata = !0);
                }),
                D
              );
            }
            (r.default.prototype.select = function (n, s) {
              r.default._validateParameters('select', arguments);
              var i = this._getContainer(s).querySelector(n);
              return i ? this._wrapElement(i) : null;
            }),
              (r.default.prototype.selectAll = function (n, s) {
                r.default._validateParameters('selectAll', arguments);
                var i = [],
                  a = this._getContainer(s).querySelectorAll(n);
                if (a)
                  for (var d = 0; d < a.length; d++) {
                    var g = this._wrapElement(a[d]);
                    i.push(g);
                  }
                return i;
              }),
              (r.default.prototype._getContainer = function (n) {
                var s = document;
                return (
                  typeof n == 'string'
                    ? (s = document.querySelector(n) || document)
                    : n instanceof r.default.Element
                    ? (s = n.elt)
                    : n instanceof HTMLElement && (s = n),
                  s
                );
              }),
              (r.default.prototype._wrapElement = function (n) {
                var s = Array.prototype.slice.call(n.children);
                if (n.tagName !== 'INPUT' || n.type !== 'checkbox')
                  return n.tagName === 'VIDEO' || n.tagName === 'AUDIO'
                    ? new r.default.MediaElement(n, this)
                    : n.tagName === 'SELECT'
                    ? this.createSelect(new r.default.Element(n, this))
                    : 0 < s.length &&
                      s.every(function (a) {
                        return a.tagName === 'INPUT' || a.tagName === 'LABEL';
                      })
                    ? this.createRadio(new r.default.Element(n, this))
                    : new r.default.Element(n, this);
                var i = new r.default.Element(n, this);
                return (
                  (i.checked = function () {
                    return arguments.length === 0
                      ? this.elt.checked
                      : ((this.elt.checked = !!arguments[0]), this);
                  }),
                  i
                );
              }),
              (r.default.prototype.removeElements = function (n) {
                r.default._validateParameters('removeElements', arguments),
                  this._elements
                    .filter(function (s) {
                      return !(s.elt instanceof HTMLCanvasElement);
                    })
                    .map(function (s) {
                      return s.remove();
                    });
              }),
              (r.default.Element.prototype.changed = function (n) {
                return (
                  r.default.Element._adjustListener('change', n, this), this
                );
              }),
              (r.default.Element.prototype.input = function (n) {
                return (
                  r.default.Element._adjustListener('input', n, this), this
                );
              }),
              (r.default.prototype.createDiv = function () {
                var n =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s = document.createElement('div');
                return (s.innerHTML = n), l(s, this);
              }),
              (r.default.prototype.createP = function () {
                var n =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s = document.createElement('p');
                return (s.innerHTML = n), l(s, this);
              }),
              (r.default.prototype.createSpan = function () {
                var n =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s = document.createElement('span');
                return (s.innerHTML = n), l(s, this);
              }),
              (r.default.prototype.createImg = function () {
                r.default._validateParameters('createImg', arguments);
                var n,
                  s = document.createElement('img'),
                  i = arguments;
                return (
                  1 < i.length && typeof i[1] == 'string' && (s.alt = i[1]),
                  2 < i.length &&
                    typeof i[2] == 'string' &&
                    (s.crossOrigin = i[2]),
                  (s.src = i[0]),
                  (n = l(s, this)),
                  s.addEventListener('load', function () {
                    (n.width = s.offsetWidth || s.width),
                      (n.height = s.offsetHeight || s.height);
                    var a = i[i.length - 1];
                    typeof a == 'function' && a(n);
                  }),
                  n
                );
              }),
              (r.default.prototype.createA = function (n, s, i) {
                r.default._validateParameters('createA', arguments);
                var a = document.createElement('a');
                return (
                  (a.href = n),
                  (a.innerHTML = s),
                  i && (a.target = i),
                  l(a, this)
                );
              }),
              (r.default.prototype.createSlider = function (n, s, i, a) {
                r.default._validateParameters('createSlider', arguments);
                var d = document.createElement('input');
                return (
                  (d.type = 'range'),
                  (d.min = n),
                  (d.max = s),
                  a === 0 ? (d.step = 1e-18) : a && (d.step = a),
                  typeof i == 'number' && (d.value = i),
                  l(d, this)
                );
              }),
              (r.default.prototype.createButton = function (n, s) {
                r.default._validateParameters('createButton', arguments);
                var i = document.createElement('button');
                return (i.innerHTML = n), s && (i.value = s), l(i, this);
              }),
              (r.default.prototype.createCheckbox = function () {
                r.default._validateParameters('createCheckbox', arguments);
                var n = document.createElement('div'),
                  s = document.createElement('input');
                s.type = 'checkbox';
                var i = document.createElement('label');
                i.appendChild(s), n.appendChild(i);
                var a = l(n, this);
                if (
                  ((a.checked = function () {
                    var g =
                      a.elt.firstElementChild.getElementsByTagName('input')[0];
                    if (g) {
                      if (arguments.length === 0) return g.checked;
                      g.checked = !!arguments[0];
                    }
                    return a;
                  }),
                  (this.value = function (g) {
                    return (a.value = g), this;
                  }),
                  arguments[0])
                ) {
                  a.value(arguments[0]);
                  var d = document.createElement('span');
                  (d.innerHTML = arguments[0]), i.appendChild(d);
                }
                return arguments[1] && (s.checked = !0), a;
              }),
              (r.default.prototype.createSelect = function () {
                var n;
                r.default._validateParameters('createSelect', arguments);
                var s = arguments[0];
                if (
                  s instanceof r.default.Element &&
                  s.elt instanceof HTMLSelectElement
                )
                  (n = s), (this.elt = s.elt);
                else if (s instanceof HTMLSelectElement)
                  (n = l(s, this)), (this.elt = s);
                else {
                  var i = document.createElement('select');
                  s &&
                    typeof s == 'boolean' &&
                    i.setAttribute('multiple', 'true'),
                    (n = l(i, this)),
                    (this.elt = i);
                }
                return (
                  (n.option = function (a, d) {
                    var g;
                    if (a !== void 0) {
                      for (var _ = 0; _ < this.elt.length; _ += 1)
                        if (this.elt[_].innerHTML === a) {
                          g = _;
                          break;
                        }
                      if (g !== void 0)
                        d === !1 ? this.elt.remove(g) : (this.elt[g].value = d);
                      else {
                        var w = document.createElement('option');
                        (w.innerHTML = a),
                          (w.value = d === void 0 ? a : d),
                          this.elt.appendChild(w),
                          this._pInst._elements.push(w);
                      }
                    }
                  }),
                  (n.selected = function (a) {
                    if (a !== void 0) {
                      for (var d = 0; d < this.elt.length; d += 1)
                        this.elt[d].value.toString() === a.toString() &&
                          (this.elt.selectedIndex = d);
                      return this;
                    }
                    if (this.elt.getAttribute('multiple')) {
                      var g = [],
                        _ = !0,
                        w = !1,
                        S = void 0;
                      try {
                        for (
                          var M,
                            E = this.elt.selectedOptions[Symbol.iterator]();
                          !(_ = (M = E.next()).done);
                          _ = !0
                        ) {
                          var O = M.value;
                          g.push(O.value);
                        }
                      } catch (D) {
                        (w = !0), (S = D);
                      } finally {
                        try {
                          _ || E.return == null || E.return();
                        } finally {
                          if (w) throw S;
                        }
                      }
                      return g;
                    }
                    return this.elt.value;
                  }),
                  (n.disable = function (a) {
                    if (typeof a == 'string')
                      for (var d = 0; d < this.elt.length; d++)
                        this.elt[d].value.toString() === a &&
                          ((this.elt[d].disabled = !0),
                          (this.elt[d].selected = !1));
                    else this.elt.disabled = !0;
                    return this;
                  }),
                  n
                );
              }),
              (r.default.prototype.createRadio = function () {
                var n,
                  s,
                  i = arguments[0];
                i instanceof HTMLDivElement || i instanceof HTMLSpanElement
                  ? ((n = i),
                    typeof arguments[1] == 'string' && (s = arguments[1]))
                  : (typeof i == 'string' && (s = i),
                    (n = document.createElement('div')));
                var a = l((this.elt = n), this);
                a._name = s || 'radioOption';
                function d(_) {
                  return _ instanceof HTMLInputElement && _.type === 'radio';
                }
                function g(_) {
                  return _ instanceof HTMLLabelElement;
                }
                return (
                  (a._getOptionsArray = function () {
                    return Array.from(this.elt.children)
                      .filter(function (_) {
                        return d(_) || (g(_) && d(_.firstElementChild));
                      })
                      .map(function (_) {
                        return d(_) ? _ : _.firstElementChild;
                      });
                  }),
                  (a.option = function (_, w) {
                    var S,
                      M,
                      E,
                      O = !0,
                      D = !1,
                      A = void 0;
                    try {
                      for (
                        var k, L = a._getOptionsArray()[Symbol.iterator]();
                        !(O = (k = L.next()).done);
                        O = !0
                      ) {
                        var R = k.value;
                        if (R.value === _) {
                          S = R;
                          break;
                        }
                      }
                    } catch (N) {
                      (D = !0), (A = N);
                    } finally {
                      try {
                        O || L.return == null || L.return();
                      } finally {
                        if (D) throw A;
                      }
                    }
                    return (
                      S === void 0 &&
                        ((S = document.createElement('input')).setAttribute(
                          'type',
                          'radio',
                        ),
                        S.setAttribute('value', _)),
                      S.setAttribute('name', a._name),
                      g(S.parentElement)
                        ? (M = S.parentElement)
                        : (M =
                            document.createElement(
                              'label',
                            )).insertAdjacentElement('afterbegin', S),
                      M.lastElementChild instanceof HTMLSpanElement
                        ? (E = M.lastElementChild)
                        : ((E = document.createElement('span')),
                          S.insertAdjacentElement('afterend', E)),
                      (E.innerHTML = w === void 0 ? _ : w),
                      this.elt.appendChild(M),
                      S
                    );
                  }),
                  (a.remove = function (_) {
                    var w = !0,
                      S = !1,
                      M = void 0;
                    try {
                      for (
                        var E, O = a._getOptionsArray()[Symbol.iterator]();
                        !(w = (E = O.next()).done);
                        w = !0
                      ) {
                        var D = E.value;
                        if (D.value === _)
                          return void (g(D.parentElement)
                            ? D.parentElement.remove()
                            : D.remove());
                      }
                    } catch (A) {
                      (S = !0), (M = A);
                    } finally {
                      try {
                        w || O.return == null || O.return();
                      } finally {
                        if (S) throw M;
                      }
                    }
                  }),
                  (a.value = function () {
                    var _ = '',
                      w = !0,
                      S = !1,
                      M = void 0;
                    try {
                      for (
                        var E, O = a._getOptionsArray()[Symbol.iterator]();
                        !(w = (E = O.next()).done);
                        w = !0
                      ) {
                        var D = E.value;
                        if (D.checked) {
                          _ = D.value;
                          break;
                        }
                      }
                    } catch (A) {
                      (S = !0), (M = A);
                    } finally {
                      try {
                        w || O.return == null || O.return();
                      } finally {
                        if (S) throw M;
                      }
                    }
                    return _;
                  }),
                  (a.selected = function (_) {
                    var w = null;
                    if (_ === void 0) {
                      var S = !0,
                        M = !1,
                        E = void 0;
                      try {
                        for (
                          var O, D = a._getOptionsArray()[Symbol.iterator]();
                          !(S = (O = D.next()).done);
                          S = !0
                        ) {
                          var A = O.value;
                          if (A.checked) {
                            w = A;
                            break;
                          }
                        }
                      } catch (J) {
                        (M = !0), (E = J);
                      } finally {
                        try {
                          S || D.return == null || D.return();
                        } finally {
                          if (M) throw E;
                        }
                      }
                    } else {
                      a._getOptionsArray().forEach(function (J) {
                        (J.checked = !1), J.removeAttribute('checked');
                      });
                      var k = !0,
                        L = !1,
                        R = void 0;
                      try {
                        for (
                          var N, B = a._getOptionsArray()[Symbol.iterator]();
                          !(k = (N = B.next()).done);
                          k = !0
                        ) {
                          var Z = N.value;
                          Z.value === _ &&
                            (Z.setAttribute('checked', !0),
                            (Z.checked = !0),
                            (w = Z));
                        }
                      } catch (J) {
                        (L = !0), (R = J);
                      } finally {
                        try {
                          k || B.return == null || B.return();
                        } finally {
                          if (L) throw R;
                        }
                      }
                    }
                    return w;
                  }),
                  (a.disable = function () {
                    var _ =
                        !(0 < arguments.length && arguments[0] !== void 0) ||
                        arguments[0],
                      w = !0,
                      S = !1,
                      M = void 0;
                    try {
                      for (
                        var E, O = a._getOptionsArray()[Symbol.iterator]();
                        !(w = (E = O.next()).done);
                        w = !0
                      )
                        E.value.setAttribute('disabled', _);
                    } catch (D) {
                      (S = !0), (M = D);
                    } finally {
                      try {
                        w || O.return == null || O.return();
                      } finally {
                        if (S) throw M;
                      }
                    }
                  }),
                  a
                );
              }),
              (r.default.prototype.createColorPicker = function (n) {
                r.default._validateParameters('createColorPicker', arguments);
                var s,
                  i = document.createElement('input');
                return (
                  (i.type = 'color'),
                  n
                    ? n instanceof r.default.Color
                      ? (i.value = n.toString('#rrggbb'))
                      : ((r.default.prototype._colorMode = 'rgb'),
                        (r.default.prototype._colorMaxes = {
                          rgb: [255, 255, 255, 255],
                          hsb: [360, 100, 100, 1],
                          hsl: [360, 100, 100, 1],
                        }),
                        (i.value = r.default.prototype
                          .color(n)
                          .toString('#rrggbb')))
                    : (i.value = '#000000'),
                  ((s = l(i, this)).color = function () {
                    return (
                      n &&
                        (n.mode && (r.default.prototype._colorMode = n.mode),
                        n.maxes && (r.default.prototype._colorMaxes = n.maxes)),
                      r.default.prototype.color(this.elt.value)
                    );
                  }),
                  s
                );
              }),
              (r.default.prototype.createInput = function () {
                var n =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s =
                    1 < arguments.length && arguments[1] !== void 0
                      ? arguments[1]
                      : 'text';
                r.default._validateParameters('createInput', arguments);
                var i = document.createElement('input');
                return (
                  i.setAttribute('value', n),
                  i.setAttribute('type', s),
                  l(i, this)
                );
              }),
              (r.default.prototype.createFileInput = function (n) {
                var s =
                  1 < arguments.length &&
                  arguments[1] !== void 0 &&
                  arguments[1];
                if (
                  (r.default._validateParameters('createFileInput', arguments),
                  window.File &&
                    window.FileReader &&
                    window.FileList &&
                    window.Blob)
                ) {
                  var i = document.createElement('input');
                  return (
                    i.setAttribute('type', 'file'),
                    s && i.setAttribute('multiple', !0),
                    i.addEventListener(
                      'change',
                      function (a) {
                        var d = !0,
                          g = !1,
                          _ = void 0;
                        try {
                          for (
                            var w, S = a.target.files[Symbol.iterator]();
                            !(d = (w = S.next()).done);
                            d = !0
                          ) {
                            var M = w.value;
                            r.default.File._load(M, n);
                          }
                        } catch (E) {
                          (g = !0), (_ = E);
                        } finally {
                          try {
                            d || S.return == null || S.return();
                          } finally {
                            if (g) throw _;
                          }
                        }
                      },
                      !1,
                    ),
                    l(i, this)
                  );
                }
                console.log(
                  'The File APIs are not fully supported in this browser. Cannot create element.',
                );
              }),
              (r.default.prototype.createVideo = function (n, s) {
                return (
                  r.default._validateParameters('createVideo', arguments),
                  h(this, 'video', n, s)
                );
              }),
              (r.default.prototype.createAudio = function (n, s) {
                return (
                  r.default._validateParameters('createAudio', arguments),
                  h(this, 'audio', n, s)
                );
              }),
              (r.default.prototype.VIDEO = 'video'),
              (r.default.prototype.AUDIO = 'audio'),
              navigator.mediaDevices === void 0 &&
                (navigator.mediaDevices = {}),
              navigator.mediaDevices.getUserMedia === void 0 &&
                (navigator.mediaDevices.getUserMedia = function (n) {
                  var s =
                    navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
                  return s
                    ? new Promise(function (i, a) {
                        s.call(navigator, n, i, a);
                      })
                    : Promise.reject(
                        new Error(
                          'getUserMedia is not implemented in this browser',
                        ),
                      );
                }),
              (r.default.prototype.createCapture = function () {
                if (
                  (r.default._validateParameters('createCapture', arguments),
                  !navigator.mediaDevices ||
                    !navigator.mediaDevices.getUserMedia)
                )
                  throw new DOMException(
                    'getUserMedia not supported in this browser',
                  );
                var n,
                  s,
                  i = !0,
                  a = !0,
                  d = !0,
                  g = !1,
                  _ = void 0;
                try {
                  for (
                    var w, S = arguments[Symbol.iterator]();
                    !(d = (w = S.next()).done);
                    d = !0
                  ) {
                    var M = w.value;
                    M === r.default.prototype.VIDEO
                      ? (a = !1)
                      : M === r.default.prototype.AUDIO
                      ? (i = !1)
                      : c(M) === 'object'
                      ? (n = M)
                      : typeof M == 'function' && (s = M);
                  }
                } catch (D) {
                  (g = !0), (_ = D);
                } finally {
                  try {
                    d || S.return == null || S.return();
                  } finally {
                    if (g) throw _;
                  }
                }
                n = n || { video: i, audio: a };
                var E = document.createElement('video');
                E.setAttribute('playsinline', ''),
                  navigator.mediaDevices.getUserMedia(n).then(function (D) {
                    try {
                      'srcObject' in E
                        ? (E.srcObject = D)
                        : (E.src = window.URL.createObjectURL(D));
                    } catch {
                      E.src = D;
                    }
                  }, console.log);
                var O = l(E, this, !0);
                return (
                  (O.loadedmetadata = !1),
                  E.addEventListener('loadedmetadata', function () {
                    E.play(),
                      E.width
                        ? ((O.width = E.width), (O.height = E.height))
                        : ((O.width = O.elt.width = E.videoWidth),
                          (O.height = O.elt.height = E.videoHeight)),
                      (O.loadedmetadata = !0),
                      s && s(E.srcObject);
                  }),
                  O
                );
              }),
              (r.default.prototype.createElement = function (n, s) {
                r.default._validateParameters('createElement', arguments);
                var i = document.createElement(n);
                return s !== void 0 && (i.innerHTML = s), l(i, this);
              }),
              (r.default.Element.prototype.addClass = function (n) {
                return (
                  this.elt.className
                    ? this.hasClass(n) ||
                      (this.elt.className = this.elt.className + ' ' + n)
                    : (this.elt.className = n),
                  this
                );
              }),
              (r.default.Element.prototype.removeClass = function (n) {
                return this.elt.classList.remove(n), this;
              }),
              (r.default.Element.prototype.hasClass = function (n) {
                return this.elt.classList.contains(n);
              }),
              (r.default.Element.prototype.toggleClass = function (n) {
                return (
                  this.elt.classList.contains(n)
                    ? this.elt.classList.remove(n)
                    : this.elt.classList.add(n),
                  this
                );
              }),
              (r.default.Element.prototype.child = function (n) {
                return n === void 0
                  ? this.elt.childNodes
                  : (typeof n == 'string'
                      ? (n[0] === '#' && (n = n.substring(1)),
                        (n = document.getElementById(n)))
                      : n instanceof r.default.Element && (n = n.elt),
                    n instanceof HTMLElement && this.elt.appendChild(n),
                    this);
              }),
              (r.default.Element.prototype.center = function (n) {
                var s = this.elt.style.display,
                  i = this.elt.style.display === 'none',
                  a = this.parent().style.display === 'none',
                  d = { x: this.elt.offsetLeft, y: this.elt.offsetTop };
                i && this.show(),
                  a && this.parent().show(),
                  (this.elt.style.display = 'block'),
                  this.position(0, 0);
                var g = Math.abs(
                    this.parent().offsetWidth - this.elt.offsetWidth,
                  ),
                  _ = Math.abs(
                    this.parent().offsetHeight - this.elt.offsetHeight,
                  );
                return (
                  n === 'both' || n === void 0
                    ? this.position(
                        g / 2 + this.parent().offsetLeft,
                        _ / 2 + this.parent().offsetTop,
                      )
                    : n === 'horizontal'
                    ? this.position(g / 2 + this.parent().offsetLeft, d.y)
                    : n === 'vertical' &&
                      this.position(d.x, _ / 2 + this.parent().offsetTop),
                  this.style('display', s),
                  i && this.hide(),
                  a && this.parent().hide(),
                  this
                );
              }),
              (r.default.Element.prototype.html = function () {
                return arguments.length === 0
                  ? this.elt.innerHTML
                  : (arguments[1]
                      ? this.elt.insertAdjacentHTML('beforeend', arguments[0])
                      : (this.elt.innerHTML = arguments[0]),
                    this);
              }),
              (r.default.Element.prototype.position = function () {
                if (arguments.length === 0)
                  return { x: this.elt.offsetLeft, y: this.elt.offsetTop };
                var n = 'absolute';
                return (
                  (arguments[2] !== 'static' &&
                    arguments[2] !== 'fixed' &&
                    arguments[2] !== 'relative' &&
                    arguments[2] !== 'sticky' &&
                    arguments[2] !== 'initial' &&
                    arguments[2] !== 'inherit') ||
                    (n = arguments[2]),
                  (this.elt.style.position = n),
                  (this.elt.style.left = arguments[0] + 'px'),
                  (this.elt.style.top = arguments[1] + 'px'),
                  (this.x = arguments[0]),
                  (this.y = arguments[1]),
                  this
                );
              }),
              (r.default.Element.prototype._translate = function () {
                this.elt.style.position = 'absolute';
                var n = '';
                return (
                  this.elt.style.transform &&
                    (n = (n = this.elt.style.transform.replace(
                      /translate3d\(.*\)/g,
                      '',
                    )).replace(/translate[X-Z]?\(.*\)/g, '')),
                  arguments.length === 2
                    ? (this.elt.style.transform =
                        'translate(' +
                        arguments[0] +
                        'px, ' +
                        arguments[1] +
                        'px)')
                    : 2 < arguments.length &&
                      ((this.elt.style.transform =
                        'translate3d(' +
                        arguments[0] +
                        'px,' +
                        arguments[1] +
                        'px,' +
                        arguments[2] +
                        'px)'),
                      (this.elt.parentElement.style.perspective =
                        arguments.length === 3
                          ? '1000px'
                          : arguments[3] + 'px')),
                  (this.elt.style.transform += n),
                  this
                );
              }),
              (r.default.Element.prototype._rotate = function () {
                var n = '';
                return (
                  this.elt.style.transform &&
                    (n = (n = this.elt.style.transform.replace(
                      /rotate3d\(.*\)/g,
                      '',
                    )).replace(/rotate[X-Z]?\(.*\)/g, '')),
                  arguments.length === 1
                    ? (this.elt.style.transform =
                        'rotate(' + arguments[0] + 'deg)')
                    : arguments.length === 2
                    ? (this.elt.style.transform =
                        'rotate(' +
                        arguments[0] +
                        'deg, ' +
                        arguments[1] +
                        'deg)')
                    : arguments.length === 3 &&
                      ((this.elt.style.transform =
                        'rotateX(' + arguments[0] + 'deg)'),
                      (this.elt.style.transform +=
                        'rotateY(' + arguments[1] + 'deg)'),
                      (this.elt.style.transform +=
                        'rotateZ(' + arguments[2] + 'deg)')),
                  (this.elt.style.transform += n),
                  this
                );
              }),
              (r.default.Element.prototype.style = function (n, s) {
                if (
                  (s instanceof r.default.Color &&
                    (s =
                      'rgba(' +
                      s.levels[0] +
                      ',' +
                      s.levels[1] +
                      ',' +
                      s.levels[2] +
                      ',' +
                      s.levels[3] / 255 +
                      ')'),
                  s === void 0)
                ) {
                  if (n.indexOf(':') === -1)
                    return window
                      .getComputedStyle(this.elt)
                      .getPropertyValue(n);
                  for (var i = n.split(';'), a = 0; a < i.length; a++) {
                    var d = i[a].split(':');
                    d[0] && d[1] && (this.elt.style[d[0].trim()] = d[1].trim());
                  }
                } else if (
                  ((this.elt.style[n] = s),
                  n === 'width' ||
                    n === 'height' ||
                    n === 'left' ||
                    n === 'top')
                ) {
                  var g = window
                    .getComputedStyle(this.elt)
                    .getPropertyValue(n)
                    .replace(/\D+/g, '');
                  this[n] = parseInt(g, 10);
                }
                return this;
              }),
              (r.default.Element.prototype.attribute = function (n, s) {
                if (
                  this.elt.firstChild == null ||
                  (this.elt.firstChild.type !== 'checkbox' &&
                    this.elt.firstChild.type !== 'radio')
                )
                  return s === void 0
                    ? this.elt.getAttribute(n)
                    : (this.elt.setAttribute(n, s), this);
                if (s === void 0) return this.elt.firstChild.getAttribute(n);
                for (var i = 0; i < this.elt.childNodes.length; i++)
                  this.elt.childNodes[i].setAttribute(n, s);
              }),
              (r.default.Element.prototype.removeAttribute = function (n) {
                if (
                  this.elt.firstChild != null &&
                  (this.elt.firstChild.type === 'checkbox' ||
                    this.elt.firstChild.type === 'radio')
                )
                  for (var s = 0; s < this.elt.childNodes.length; s++)
                    this.elt.childNodes[s].removeAttribute(n);
                return this.elt.removeAttribute(n), this;
              }),
              (r.default.Element.prototype.value = function () {
                return 0 < arguments.length
                  ? ((this.elt.value = arguments[0]), this)
                  : this.elt.type === 'range'
                  ? parseFloat(this.elt.value)
                  : this.elt.value;
              }),
              (r.default.Element.prototype.show = function () {
                return (this.elt.style.display = 'block'), this;
              }),
              (r.default.Element.prototype.hide = function () {
                return (this.elt.style.display = 'none'), this;
              }),
              (r.default.Element.prototype.size = function (n, s) {
                if (arguments.length === 0)
                  return {
                    width: this.elt.offsetWidth,
                    height: this.elt.offsetHeight,
                  };
                var i = n,
                  a = s,
                  d = r.default.prototype.AUTO;
                if (i !== d || a !== d) {
                  if (
                    (i === d
                      ? (i = (s * this.width) / this.height)
                      : a === d && (a = (n * this.height) / this.width),
                    this.elt instanceof HTMLCanvasElement)
                  ) {
                    var g,
                      _ = {},
                      w = this.elt.getContext('2d');
                    for (g in w) _[g] = w[g];
                    for (g in (this.elt.setAttribute(
                      'width',
                      i * this._pInst._pixelDensity,
                    ),
                    this.elt.setAttribute(
                      'height',
                      a * this._pInst._pixelDensity,
                    ),
                    (this.elt.style.width = i + 'px'),
                    (this.elt.style.height = a + 'px'),
                    this._pInst.scale(
                      this._pInst._pixelDensity,
                      this._pInst._pixelDensity,
                    ),
                    _))
                      this.elt.getContext('2d')[g] = _[g];
                  } else
                    (this.elt.style.width = i + 'px'),
                      (this.elt.style.height = a + 'px'),
                      (this.elt.width = i),
                      (this.elt.height = a);
                  (this.width = this.elt.offsetWidth),
                    (this.height = this.elt.offsetHeight),
                    this._pInst &&
                      this._pInst._curElement &&
                      this._pInst._curElement.elt === this.elt &&
                      (this._pInst._setProperty('width', this.elt.offsetWidth),
                      this._pInst._setProperty(
                        'height',
                        this.elt.offsetHeight,
                      ));
                }
                return this;
              }),
              (r.default.Element.prototype.remove = function () {
                if (this instanceof r.default.MediaElement) {
                  this.stop();
                  var n = this.elt.srcObject;
                  n !== null &&
                    n.getTracks().forEach(function (a) {
                      a.stop();
                    });
                }
                var s = this._pInst._elements.indexOf(this);
                for (var i in (s !== -1 && this._pInst._elements.splice(s, 1),
                this._events))
                  this.elt.removeEventListener(i, this._events[i]);
                this.elt &&
                  this.elt.parentNode &&
                  this.elt.parentNode.removeChild(this.elt);
              }),
              (r.default.Element.prototype.drop = function (n, s) {
                if (
                  window.File &&
                  window.FileReader &&
                  window.FileList &&
                  window.Blob
                ) {
                  if (!this._dragDisabled) {
                    this._dragDisabled = !0;
                    var i = function (a) {
                      a.preventDefault();
                    };
                    this.elt.addEventListener('dragover', i),
                      this.elt.addEventListener('dragleave', i);
                  }
                  r.default.Element._attachListener(
                    'drop',
                    function (a) {
                      a.preventDefault(),
                        typeof s == 'function' && s.call(this, a);
                      for (
                        var d = a.dataTransfer.files, g = 0;
                        g < d.length;
                        g++
                      ) {
                        var _ = d[g];
                        r.default.File._load(_, n);
                      }
                    },
                    this,
                  );
                } else
                  console.log(
                    'The File APIs are not fully supported in this browser.',
                  );
                return this;
              }),
              (r.default.MediaElement = function (n, s) {
                r.default.Element.call(this, n, s);
                var i = this;
                (this.elt.crossOrigin = 'anonymous'),
                  (this._prevTime = 0),
                  (this._cueIDCounter = 0),
                  (this._cues = []),
                  ((this._pixelsState = this)._pixelDensity = 1),
                  (this._modified = !1),
                  Object.defineProperty(i, 'src', {
                    get: function () {
                      var a = i.elt.children[0].src,
                        d = i.elt.src === window.location.href ? '' : i.elt.src;
                      return a === window.location.href ? d : a;
                    },
                    set: function (a) {
                      for (var d = 0; d < i.elt.children.length; d++)
                        i.elt.removeChild(i.elt.children[d]);
                      var g = document.createElement('source');
                      (g.src = a),
                        n.appendChild(g),
                        (i.elt.src = a),
                        (i.modified = !0);
                    },
                  }),
                  (i._onended = function () {}),
                  (i.elt.onended = function () {
                    i._onended(i);
                  });
              }),
              (r.default.MediaElement.prototype = Object.create(
                r.default.Element.prototype,
              )),
              (r.default.MediaElement.prototype.play = function () {
                var n,
                  s = this;
                return (
                  this.elt.currentTime === this.elt.duration &&
                    (this.elt.currentTime = 0),
                  (n =
                    (1 < this.elt.readyState || this.elt.load(),
                    this.elt.play())) &&
                    n.catch &&
                    n.catch(function (i) {
                      i.name === 'NotAllowedError'
                        ? r.default._friendlyAutoplayError(s.src)
                        : console.error(
                            'Media play method encountered an unexpected error',
                            i,
                          );
                    }),
                  this
                );
              }),
              (r.default.MediaElement.prototype.stop = function () {
                return this.elt.pause(), (this.elt.currentTime = 0), this;
              }),
              (r.default.MediaElement.prototype.pause = function () {
                return this.elt.pause(), this;
              }),
              (r.default.MediaElement.prototype.loop = function () {
                return this.elt.setAttribute('loop', !0), this.play(), this;
              }),
              (r.default.MediaElement.prototype.noLoop = function () {
                return this.elt.removeAttribute('loop'), this;
              }),
              (r.default.MediaElement.prototype._setupAutoplayFailDetection =
                function () {
                  var n = this,
                    s = setTimeout(function () {
                      return r.default._friendlyAutoplayError(n.src);
                    }, 500);
                  this.elt.addEventListener(
                    'play',
                    function () {
                      return clearTimeout(s);
                    },
                    { passive: !0, once: !0 },
                  );
                }),
              (r.default.MediaElement.prototype.autoplay = function (n) {
                var s = this,
                  i = this.elt.getAttribute('autoplay');
                if ((this.elt.setAttribute('autoplay', n), n && !i)) {
                  var a = function () {
                    return s._setupAutoplayFailDetection();
                  };
                  this.elt.readyState === 4
                    ? a()
                    : this.elt.addEventListener('canplay', a, {
                        passive: !0,
                        once: !0,
                      });
                }
                return this;
              }),
              (r.default.MediaElement.prototype.volume = function (n) {
                if (n === void 0) return this.elt.volume;
                this.elt.volume = n;
              }),
              (r.default.MediaElement.prototype.speed = function (n) {
                if (n === void 0)
                  return this.presetPlaybackRate || this.elt.playbackRate;
                this.loadedmetadata
                  ? (this.elt.playbackRate = n)
                  : (this.presetPlaybackRate = n);
              }),
              (r.default.MediaElement.prototype.time = function (n) {
                return n === void 0
                  ? this.elt.currentTime
                  : ((this.elt.currentTime = n), this);
              }),
              (r.default.MediaElement.prototype.duration = function () {
                return this.elt.duration;
              }),
              (r.default.MediaElement.prototype.pixels = []),
              (r.default.MediaElement.prototype._ensureCanvas = function () {
                this.canvas ||
                  ((this.canvas = document.createElement('canvas')),
                  (this.drawingContext = this.canvas.getContext('2d')),
                  this.setModified(!0)),
                  this.loadedmetadata &&
                    (this.canvas.width !== this.elt.width &&
                      ((this.canvas.width = this.elt.width),
                      (this.canvas.height = this.elt.height),
                      (this.width = this.canvas.width),
                      (this.height = this.canvas.height)),
                    this.drawingContext.drawImage(
                      this.elt,
                      0,
                      0,
                      this.canvas.width,
                      this.canvas.height,
                    ),
                    this.setModified(!0));
              }),
              (r.default.MediaElement.prototype.loadPixels = function () {
                return (
                  this._ensureCanvas(),
                  r.default.Renderer2D.prototype.loadPixels.apply(
                    this,
                    arguments,
                  )
                );
              }),
              (r.default.MediaElement.prototype.updatePixels = function (
                n,
                s,
                i,
                a,
              ) {
                return (
                  this.loadedmetadata &&
                    (this._ensureCanvas(),
                    r.default.Renderer2D.prototype.updatePixels.call(
                      this,
                      n,
                      s,
                      i,
                      a,
                    )),
                  this.setModified(!0),
                  this
                );
              }),
              (r.default.MediaElement.prototype.get = function () {
                return (
                  this._ensureCanvas(),
                  r.default.Renderer2D.prototype.get.apply(this, arguments)
                );
              }),
              (r.default.MediaElement.prototype._getPixel = function () {
                return (
                  this.loadPixels(),
                  r.default.Renderer2D.prototype._getPixel.apply(
                    this,
                    arguments,
                  )
                );
              }),
              (r.default.MediaElement.prototype.set = function (n, s, i) {
                this.loadedmetadata &&
                  (this._ensureCanvas(),
                  r.default.Renderer2D.prototype.set.call(this, n, s, i),
                  this.setModified(!0));
              }),
              (r.default.MediaElement.prototype.copy = function () {
                this._ensureCanvas(),
                  r.default.prototype.copy.apply(this, arguments);
              }),
              (r.default.MediaElement.prototype.mask = function () {
                this.loadPixels(),
                  this.setModified(!0),
                  r.default.Image.prototype.mask.apply(this, arguments);
              }),
              (r.default.MediaElement.prototype.isModified = function () {
                return this._modified;
              }),
              (r.default.MediaElement.prototype.setModified = function (n) {
                this._modified = n;
              }),
              (r.default.MediaElement.prototype.onended = function (n) {
                return (this._onended = n), this;
              }),
              (r.default.MediaElement.prototype.connect = function (n) {
                var s, i;
                if (typeof r.default.prototype.getAudioContext == 'function')
                  (s = r.default.prototype.getAudioContext()),
                    (i = r.default.soundOut.input);
                else
                  try {
                    i = (s = n.context).destination;
                  } catch {
                    throw 'connect() is meant to be used with Web Audio API or p5.sound.js';
                  }
                this.audioSourceNode ||
                  ((this.audioSourceNode = s.createMediaElementSource(
                    this.elt,
                  )),
                  this.audioSourceNode.connect(i)),
                  n
                    ? n.input
                      ? this.audioSourceNode.connect(n.input)
                      : this.audioSourceNode.connect(n)
                    : this.audioSourceNode.connect(i);
              }),
              (r.default.MediaElement.prototype.disconnect = function () {
                if (!this.audioSourceNode) throw 'nothing to disconnect';
                this.audioSourceNode.disconnect();
              }),
              (r.default.MediaElement.prototype.showControls = function () {
                (this.elt.style['text-align'] = 'inherit'),
                  (this.elt.controls = !0);
              }),
              (r.default.MediaElement.prototype.hideControls = function () {
                this.elt.controls = !1;
              });
            function u(n, s, i, a) {
              (this.callback = n),
                (this.time = s),
                (this.id = i),
                (this.val = a);
            }
            (r.default.MediaElement.prototype.addCue = function (n, s, i) {
              var a = this._cueIDCounter++,
                d = new u(s, n, a, i);
              return (
                this._cues.push(d),
                this.elt.ontimeupdate ||
                  (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)),
                a
              );
            }),
              (r.default.MediaElement.prototype.removeCue = function (n) {
                for (var s = 0; s < this._cues.length; s++)
                  this._cues[s].id === n &&
                    (console.log(n), this._cues.splice(s, 1));
                this._cues.length === 0 && (this.elt.ontimeupdate = null);
              }),
              (r.default.MediaElement.prototype.clearCues = function () {
                (this._cues = []), (this.elt.ontimeupdate = null);
              }),
              (r.default.MediaElement.prototype._onTimeUpdate = function () {
                for (var n = this.time(), s = 0; s < this._cues.length; s++) {
                  var i = this._cues[s].time,
                    a = this._cues[s].val;
                  this._prevTime < i && i <= n && this._cues[s].callback(a);
                }
                this._prevTime = n;
              }),
              (r.default.File = function (n, s) {
                (this.file = n), (this._pInst = s);
                var i = n.type.split('/');
                (this.type = i[0]),
                  (this.subtype = i[1]),
                  (this.name = n.name),
                  (this.size = n.size),
                  (this.data = void 0);
              }),
              (r.default.File._createLoader = function (n, s) {
                var i = new FileReader();
                return (
                  (i.onload = function (a) {
                    var d = new r.default.File(n);
                    if (d.file.type === 'application/json')
                      d.data = JSON.parse(a.target.result);
                    else if (d.file.type === 'text/xml') {
                      var g = new DOMParser().parseFromString(
                        a.target.result,
                        'text/xml',
                      );
                      d.data = new r.default.XML(g.documentElement);
                    } else d.data = a.target.result;
                    s(d);
                  }),
                  i
                );
              }),
              (r.default.File._load = function (n, s) {
                if (/^text\//.test(n.type) || n.type === 'application/json')
                  r.default.File._createLoader(n, s).readAsText(n);
                else if (/^(video|audio)\//.test(n.type)) {
                  var i = new r.default.File(n);
                  (i.data = URL.createObjectURL(n)), s(i);
                } else r.default.File._createLoader(n, s).readAsDataURL(n);
              });
            var o = r.default;
            y.default = o;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.every': 150,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.for-each': 228,
            'core-js/modules/web.dom-collections.iterator': 229,
            'core-js/modules/web.url': 231,
          },
        ],
        281: [
          function (e, v, y) {
            function m(w) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (S) {
                      return typeof S;
                    }
                  : function (S) {
                      return S &&
                        typeof Symbol == 'function' &&
                        S.constructor === Symbol &&
                        S !== Symbol.prototype
                        ? 'symbol'
                        : typeof S;
                    })(w);
            }
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (w) {
                if (w && w.__esModule) return w;
                if (w === null || (m(w) !== 'object' && typeof w != 'function'))
                  return { default: w };
                var S = h();
                if (S && S.has(w)) return S.get(w);
                var M = {},
                  E = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var O in w)
                  if (Object.prototype.hasOwnProperty.call(w, O)) {
                    var D = E ? Object.getOwnPropertyDescriptor(w, O) : null;
                    D && (D.get || D.set)
                      ? Object.defineProperty(M, O, D)
                      : (M[O] = w[O]);
                  }
                return (M.default = w), S && S.set(w, M), M;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var w = new WeakMap();
              return (
                (h = function () {
                  return w;
                }),
                w
              );
            }
            (c.default.prototype.deviceOrientation =
              1 < window.innerWidth / window.innerHeight
                ? 'landscape'
                : 'portrait'),
              (c.default.prototype.accelerationX = 0),
              (c.default.prototype.accelerationY = 0),
              (c.default.prototype.accelerationZ = 0),
              (c.default.prototype.pAccelerationX = 0),
              (c.default.prototype.pAccelerationY = 0),
              (c.default.prototype.pAccelerationZ = 0),
              (c.default.prototype._updatePAccelerations = function () {
                this._setProperty('pAccelerationX', this.accelerationX),
                  this._setProperty('pAccelerationY', this.accelerationY),
                  this._setProperty('pAccelerationZ', this.accelerationZ);
              }),
              (c.default.prototype.rotationX = 0),
              (c.default.prototype.rotationY = 0),
              (c.default.prototype.rotationZ = 0),
              (c.default.prototype.pRotationX = 0),
              (c.default.prototype.pRotationY = 0);
            var u = (c.default.prototype.pRotationZ = 0),
              o = 0,
              n = 0,
              s = 'clockwise',
              i = 'clockwise',
              a = 'clockwise';
            (c.default.prototype.pRotateDirectionX = void 0),
              (c.default.prototype.pRotateDirectionY = void 0),
              (c.default.prototype.pRotateDirectionZ = void 0),
              (c.default.prototype._updatePRotations = function () {
                this._setProperty('pRotationX', this.rotationX),
                  this._setProperty('pRotationY', this.rotationY),
                  this._setProperty('pRotationZ', this.rotationZ);
              }),
              (c.default.prototype.turnAxis = void 0);
            var d = 0.5,
              g = 30;
            (c.default.prototype.setMoveThreshold = function (w) {
              c.default._validateParameters('setMoveThreshold', arguments),
                (d = w);
            }),
              (c.default.prototype.setShakeThreshold = function (w) {
                c.default._validateParameters('setShakeThreshold', arguments),
                  (g = w);
              }),
              (c.default.prototype._ondeviceorientation = function (w) {
                this._updatePRotations(),
                  this._angleMode === l.radians &&
                    ((w.beta = w.beta * (_PI / 180)),
                    (w.gamma = w.gamma * (_PI / 180)),
                    (w.alpha = w.alpha * (_PI / 180))),
                  this._setProperty('rotationX', w.beta),
                  this._setProperty('rotationY', w.gamma),
                  this._setProperty('rotationZ', w.alpha),
                  this._handleMotion();
              }),
              (c.default.prototype._ondevicemotion = function (w) {
                this._updatePAccelerations(),
                  this._setProperty('accelerationX', 2 * w.acceleration.x),
                  this._setProperty('accelerationY', 2 * w.acceleration.y),
                  this._setProperty('accelerationZ', 2 * w.acceleration.z),
                  this._handleMotion();
              }),
              (c.default.prototype._handleMotion = function () {
                window.orientation === 90 || window.orientation === -90
                  ? this._setProperty('deviceOrientation', 'landscape')
                  : window.orientation === 0
                  ? this._setProperty('deviceOrientation', 'portrait')
                  : window.orientation === void 0 &&
                    this._setProperty('deviceOrientation', 'undefined');
                var w,
                  S,
                  M = this._isGlobal ? window : this;
                if (
                  (typeof M.deviceMoved == 'function' &&
                    (Math.abs(this.accelerationX - this.pAccelerationX) > d ||
                      Math.abs(this.accelerationY - this.pAccelerationY) > d ||
                      Math.abs(this.accelerationZ - this.pAccelerationZ) > d) &&
                    M.deviceMoved(),
                  typeof M.deviceTurned == 'function')
                ) {
                  var E = this.rotationX + 180,
                    O = this.pRotationX + 180,
                    D = u + 180;
                  (0 < E - O && E - O < 270) || E - O < -270
                    ? (s = 'clockwise')
                    : (E - O < 0 || 270 < E - O) && (s = 'counter-clockwise'),
                    s !== this.pRotateDirectionX && (D = E),
                    90 < Math.abs(E - D) &&
                      Math.abs(E - D) < 270 &&
                      ((D = E),
                      this._setProperty('turnAxis', 'X'),
                      M.deviceTurned()),
                    (this.pRotateDirectionX = s),
                    (u = D - 180);
                  var A = this.rotationY + 180,
                    k = this.pRotationY + 180,
                    L = o + 180;
                  (0 < A - k && A - k < 270) || A - k < -270
                    ? (i = 'clockwise')
                    : (A - k < 0 || 270 < A - this.pRotationY) &&
                      (i = 'counter-clockwise'),
                    i !== this.pRotateDirectionY && (L = A),
                    90 < Math.abs(A - L) &&
                      Math.abs(A - L) < 270 &&
                      ((L = A),
                      this._setProperty('turnAxis', 'Y'),
                      M.deviceTurned()),
                    (this.pRotateDirectionY = i),
                    (o = L - 180),
                    (0 < this.rotationZ - this.pRotationZ &&
                      this.rotationZ - this.pRotationZ < 270) ||
                    this.rotationZ - this.pRotationZ < -270
                      ? (a = 'clockwise')
                      : (this.rotationZ - this.pRotationZ < 0 ||
                          270 < this.rotationZ - this.pRotationZ) &&
                        (a = 'counter-clockwise'),
                    a !== this.pRotateDirectionZ && (n = this.rotationZ),
                    90 < Math.abs(this.rotationZ - n) &&
                      Math.abs(this.rotationZ - n) < 270 &&
                      ((n = this.rotationZ),
                      this._setProperty('turnAxis', 'Z'),
                      M.deviceTurned()),
                    (this.pRotateDirectionZ = a),
                    this._setProperty('turnAxis', void 0);
                }
                typeof M.deviceShaken == 'function' &&
                  (this.pAccelerationX !== null &&
                    ((w = Math.abs(this.accelerationX - this.pAccelerationX)),
                    (S = Math.abs(this.accelerationY - this.pAccelerationY))),
                  g < w + S && M.deviceShaken());
              });
            var _ = c.default;
            y.default = _;
          },
          { '../core/constants': 253, '../core/main': 264 },
        ],
        282: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.isKeyPressed = !1),
              (r.default.prototype.keyIsPressed = !1),
              (r.default.prototype.key = ''),
              (r.default.prototype.keyCode = 0),
              (r.default.prototype._onkeydown = function (l) {
                if (!this._downKeys[l.which]) {
                  this._setProperty('isKeyPressed', !0),
                    this._setProperty('keyIsPressed', !0),
                    this._setProperty('keyCode', l.which),
                    (this._downKeys[l.which] = !0),
                    this._setProperty(
                      'key',
                      l.key || String.fromCharCode(l.which) || l.which,
                    );
                  var h = this._isGlobal ? window : this;
                  typeof h.keyPressed == 'function' &&
                    !l.charCode &&
                    h.keyPressed(l) === !1 &&
                    l.preventDefault();
                }
              }),
              (r.default.prototype._onkeyup = function (l) {
                (this._downKeys[l.which] = !1),
                  this._areDownKeys() ||
                    (this._setProperty('isKeyPressed', !1),
                    this._setProperty('keyIsPressed', !1)),
                  this._setProperty('_lastKeyCodeTyped', null),
                  this._setProperty(
                    'key',
                    l.key || String.fromCharCode(l.which) || l.which,
                  ),
                  this._setProperty('keyCode', l.which);
                var h = this._isGlobal ? window : this;
                typeof h.keyReleased == 'function' &&
                  h.keyReleased(l) === !1 &&
                  l.preventDefault();
              }),
              (r.default.prototype._onkeypress = function (l) {
                if (l.which !== this._lastKeyCodeTyped) {
                  this._setProperty('_lastKeyCodeTyped', l.which),
                    this._setProperty(
                      'key',
                      l.key || String.fromCharCode(l.which) || l.which,
                    );
                  var h = this._isGlobal ? window : this;
                  typeof h.keyTyped == 'function' &&
                    h.keyTyped(l) === !1 &&
                    l.preventDefault();
                }
              }),
              (r.default.prototype._onblur = function (l) {
                this._downKeys = {};
              }),
              (r.default.prototype.keyIsDown = function (l) {
                return (
                  r.default._validateParameters('keyIsDown', arguments),
                  this._downKeys[l] || !1
                );
              }),
              (r.default.prototype._areDownKeys = function () {
                for (var l in this._downKeys)
                  if (
                    this._downKeys.hasOwnProperty(l) &&
                    this._downKeys[l] === !0
                  )
                    return !0;
                return !1;
              });
            var c = r.default;
            y.default = c;
          },
          { '../core/main': 264 },
        ],
        283: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.string.includes'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            (c.default.prototype.movedX = 0),
              (c.default.prototype.movedY = 0),
              (c.default.prototype._hasMouseInteracted = !1),
              (c.default.prototype.mouseX = 0),
              (c.default.prototype.mouseY = 0),
              (c.default.prototype.pmouseX = 0),
              (c.default.prototype.pmouseY = 0),
              (c.default.prototype.winMouseX = 0),
              (c.default.prototype.winMouseY = 0),
              (c.default.prototype.pwinMouseX = 0),
              (c.default.prototype.pwinMouseY = 0),
              (c.default.prototype.mouseButton = 0),
              (c.default.prototype.mouseIsPressed = !1),
              (c.default.prototype._updateNextMouseCoords = function (o) {
                if (
                  this._curElement !== null &&
                  (!o.touches || 0 < o.touches.length)
                ) {
                  var n = (function (s, i, a, d) {
                    d &&
                      !d.clientX &&
                      (d.touches
                        ? (d = d.touches[0])
                        : d.changedTouches && (d = d.changedTouches[0]));
                    var g = s.getBoundingClientRect(),
                      _ = s.scrollWidth / i || 1,
                      w = s.scrollHeight / a || 1;
                    return {
                      x: (d.clientX - g.left) / _,
                      y: (d.clientY - g.top) / w,
                      winX: d.clientX,
                      winY: d.clientY,
                      id: d.identifier,
                    };
                  })(this._curElement.elt, this.width, this.height, o);
                  this._setProperty('movedX', o.movementX),
                    this._setProperty('movedY', o.movementY),
                    this._setProperty('mouseX', n.x),
                    this._setProperty('mouseY', n.y),
                    this._setProperty('winMouseX', n.winX),
                    this._setProperty('winMouseY', n.winY);
                }
                this._hasMouseInteracted ||
                  (this._updateMouseCoords(),
                  this._setProperty('_hasMouseInteracted', !0));
              }),
              (c.default.prototype._updateMouseCoords = function () {
                this._setProperty('pmouseX', this.mouseX),
                  this._setProperty('pmouseY', this.mouseY),
                  this._setProperty('pwinMouseX', this.winMouseX),
                  this._setProperty('pwinMouseY', this.winMouseY),
                  this._setProperty(
                    '_pmouseWheelDeltaY',
                    this._mouseWheelDeltaY,
                  );
              }),
              (c.default.prototype._setMouseButton = function (o) {
                o.button === 1
                  ? this._setProperty('mouseButton', l.CENTER)
                  : o.button === 2
                  ? this._setProperty('mouseButton', l.RIGHT)
                  : this._setProperty('mouseButton', l.LEFT);
              }),
              (c.default.prototype._onmousemove = function (o) {
                var n = this._isGlobal ? window : this;
                this._updateNextMouseCoords(o),
                  this.mouseIsPressed
                    ? typeof n.mouseDragged == 'function'
                      ? n.mouseDragged(o) === !1 && o.preventDefault()
                      : typeof n.touchMoved == 'function' &&
                        n.touchMoved(o) === !1 &&
                        o.preventDefault()
                    : typeof n.mouseMoved == 'function' &&
                      n.mouseMoved(o) === !1 &&
                      o.preventDefault();
              }),
              (c.default.prototype._onmousedown = function (o) {
                var n = this._isGlobal ? window : this;
                this._setProperty('mouseIsPressed', !0),
                  this._setMouseButton(o),
                  this._updateNextMouseCoords(o),
                  typeof n.mousePressed == 'function'
                    ? n.mousePressed(o) === !1 && o.preventDefault()
                    : navigator.userAgent.toLowerCase().includes('safari') &&
                      typeof n.touchStarted == 'function' &&
                      n.touchStarted(o) === !1 &&
                      o.preventDefault();
              }),
              (c.default.prototype._onmouseup = function (o) {
                var n = this._isGlobal ? window : this;
                this._setProperty('mouseIsPressed', !1),
                  typeof n.mouseReleased == 'function'
                    ? n.mouseReleased(o) === !1 && o.preventDefault()
                    : typeof n.touchEnded == 'function' &&
                      n.touchEnded(o) === !1 &&
                      o.preventDefault();
              }),
              (c.default.prototype._ondragend = c.default.prototype._onmouseup),
              (c.default.prototype._ondragover =
                c.default.prototype._onmousemove),
              (c.default.prototype._onclick = function (o) {
                var n = this._isGlobal ? window : this;
                typeof n.mouseClicked == 'function' &&
                  n.mouseClicked(o) === !1 &&
                  o.preventDefault();
              }),
              (c.default.prototype._ondblclick = function (o) {
                var n = this._isGlobal ? window : this;
                typeof n.doubleClicked == 'function' &&
                  n.doubleClicked(o) === !1 &&
                  o.preventDefault();
              }),
              (c.default.prototype._mouseWheelDeltaY = 0),
              (c.default.prototype._pmouseWheelDeltaY = 0),
              (c.default.prototype._onwheel = function (o) {
                var n = this._isGlobal ? window : this;
                this._setProperty('_mouseWheelDeltaY', o.deltaY),
                  typeof n.mouseWheel == 'function' &&
                    ((o.delta = o.deltaY),
                    n.mouseWheel(o) === !1 && o.preventDefault());
              }),
              (c.default.prototype.requestPointerLock = function () {
                var o = this._curElement.elt;
                return (
                  (o.requestPointerLock =
                    o.requestPointerLock || o.mozRequestPointerLock),
                  o.requestPointerLock
                    ? (o.requestPointerLock(), !0)
                    : (console.log(
                        'requestPointerLock is not implemented in this browser',
                      ),
                      !1)
                );
              }),
              (c.default.prototype.exitPointerLock = function () {
                document.exitPointerLock();
              });
            var u = c.default;
            y.default = u;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.string.includes': 185,
          },
        ],
        284: [
          function (e, v, y) {
            e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.string.includes'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(h, u, o, n, s) {
              var i = 4 < arguments.length && s !== void 0 ? s : 0,
                a = h.getBoundingClientRect(),
                d = h.scrollWidth / u || 1,
                g = h.scrollHeight / o || 1,
                _ = n.touches[i] || n.changedTouches[i];
              return {
                x: (_.clientX - a.left) / d,
                y: (_.clientY - a.top) / g,
                winX: _.clientX,
                winY: _.clientY,
                id: _.identifier,
              };
            }
            (r.default.prototype.touches = []),
              (r.default.prototype._updateTouchCoords = function (h) {
                if (this._curElement !== null) {
                  for (var u = [], o = 0; o < h.touches.length; o++)
                    u[o] = c(
                      this._curElement.elt,
                      this.width,
                      this.height,
                      h,
                      o,
                    );
                  this._setProperty('touches', u);
                }
              }),
              (r.default.prototype._ontouchstart = function (h) {
                var u = this._isGlobal ? window : this;
                this._setProperty('mouseIsPressed', !0),
                  this._updateTouchCoords(h),
                  this._updateNextMouseCoords(h),
                  this._updateMouseCoords(),
                  typeof u.touchStarted == 'function'
                    ? u.touchStarted(h) === !1 && h.preventDefault()
                    : navigator.userAgent.toLowerCase().includes('safari') &&
                      typeof u.mousePressed == 'function' &&
                      u.mousePressed(h) === !1 &&
                      h.preventDefault();
              }),
              (r.default.prototype._ontouchmove = function (h) {
                var u = this._isGlobal ? window : this;
                this._updateTouchCoords(h),
                  this._updateNextMouseCoords(h),
                  typeof u.touchMoved == 'function'
                    ? u.touchMoved(h) === !1 && h.preventDefault()
                    : typeof u.mouseDragged == 'function' &&
                      u.mouseDragged(h) === !1 &&
                      h.preventDefault();
              }),
              (r.default.prototype._ontouchend = function (h) {
                this._setProperty('mouseIsPressed', !1),
                  this._updateTouchCoords(h),
                  this._updateNextMouseCoords(h);
                var u = this._isGlobal ? window : this;
                typeof u.touchEnded == 'function'
                  ? u.touchEnded(h) === !1 && h.preventDefault()
                  : typeof u.mouseReleased == 'function' &&
                    u.mouseReleased(h) === !1 &&
                    h.preventDefault();
              });
            var l = r.default;
            y.default = l;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.string.includes': 185,
          },
        ],
        285: [
          function (e, v, y) {
            e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.typed-array.int32-array'),
              e('core-js/modules/es.typed-array.uint8-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r,
              c,
              l,
              h = {};
            function u(n, s) {
              for (
                var i,
                  a,
                  d,
                  g,
                  _,
                  w,
                  S,
                  M,
                  E,
                  O,
                  D = h._toPixels(n),
                  A = n.width,
                  k = n.height,
                  L = A * k,
                  R = new Int32Array(L),
                  N = 0;
                N < L;
                N++
              )
                R[N] = h._getARGB(D, N);
              var B,
                Z,
                J,
                $,
                ee = new Int32Array(L),
                Q = new Int32Array(L),
                oe = new Int32Array(L),
                ce = new Int32Array(L),
                ve = 0;
              for (
                (function (Se) {
                  var fe = (3.5 * Se) | 0;
                  if (m !== (fe = fe < 1 ? 1 : fe < 248 ? fe : 248)) {
                    (r = (1 + (m = fe)) << 1),
                      (c = new Int32Array(r)),
                      (l = new Array(r));
                    for (var ye = 0; ye < r; ye++) l[ye] = new Int32Array(256);
                    for (var P, U, W, K, ne = 1, re = fe - 1; ne < fe; ne++) {
                      (c[fe + ne] = c[re] = U = re * re),
                        (W = l[fe + ne]),
                        (K = l[re--]);
                      for (var we = 0; we < 256; we++) W[we] = K[we] = U * we;
                    }
                    (P = c[fe] = fe * fe), (W = l[fe]);
                    for (var X = 0; X < 256; X++) W[X] = P * X;
                  }
                })(s),
                  Z = 0;
                Z < k;
                Z++
              ) {
                for (B = 0; B < A; B++) {
                  if (((g = d = a = _ = i = 0), (w = B - m) < 0))
                    (O = -w), (w = 0);
                  else {
                    if (A <= w) break;
                    O = 0;
                  }
                  for (J = O; J < r && !(A <= w); J++) {
                    var de = R[w + ve];
                    (_ += ($ = l[J])[(-16777216 & de) >>> 24]),
                      (a += $[(16711680 & de) >> 16]),
                      (d += $[(65280 & de) >> 8]),
                      (g += $[255 & de]),
                      (i += c[J]),
                      w++;
                  }
                  (ee[(S = ve + B)] = _ / i),
                    (Q[S] = a / i),
                    (oe[S] = d / i),
                    (ce[S] = g / i);
                }
                ve += A;
              }
              for (E = (M = -m) * A, Z = ve = 0; Z < k; Z++) {
                for (B = 0; B < A; B++) {
                  if (((g = d = a = _ = i = 0), M < 0)) (O = S = -M), (w = B);
                  else {
                    if (k <= M) break;
                    (O = 0), (S = M), (w = B + E);
                  }
                  for (J = O; J < r && !(k <= S); J++)
                    (_ += ($ = l[J])[ee[w]]),
                      (a += $[Q[w]]),
                      (d += $[oe[w]]),
                      (g += $[ce[w]]),
                      (i += c[J]),
                      S++,
                      (w += A);
                  R[B + ve] =
                    ((_ / i) << 24) |
                    ((a / i) << 16) |
                    ((d / i) << 8) |
                    (g / i);
                }
                (ve += A), (E += A), M++;
              }
              h._setPixels(D, R);
            }
            (h._toPixels = function (n) {
              if (n instanceof ImageData) return n.data;
              if (n.getContext('2d'))
                return n.getContext('2d').getImageData(0, 0, n.width, n.height)
                  .data;
              if (n.getContext('webgl')) {
                var s = n.getContext('webgl'),
                  i = s.drawingBufferWidth * s.drawingBufferHeight * 4,
                  a = new Uint8Array(i);
                return (
                  s.readPixels(
                    0,
                    0,
                    n.width,
                    n.height,
                    s.RGBA,
                    s.UNSIGNED_BYTE,
                    a,
                  ),
                  a
                );
              }
            }),
              (h._getARGB = function (n, s) {
                var i = 4 * s;
                return (
                  ((n[3 + i] << 24) & 4278190080) |
                  ((n[i] << 16) & 16711680) |
                  ((n[1 + i] << 8) & 65280) |
                  (255 & n[2 + i])
                );
              }),
              (h._setPixels = function (n, s) {
                for (var i = 0, a = 0, d = n.length; a < d; a++)
                  (n[(i = 4 * a) + 0] = (16711680 & s[a]) >>> 16),
                    (n[i + 1] = (65280 & s[a]) >>> 8),
                    (n[i + 2] = 255 & s[a]),
                    (n[i + 3] = (4278190080 & s[a]) >>> 24);
              }),
              (h._toImageData = function (n) {
                return n instanceof ImageData
                  ? n
                  : n.getContext('2d').getImageData(0, 0, n.width, n.height);
              }),
              (h._createImageData = function (n, s) {
                return (
                  (h._tmpCanvas = document.createElement('canvas')),
                  (h._tmpCtx = h._tmpCanvas.getContext('2d')),
                  this._tmpCtx.createImageData(n, s)
                );
              }),
              (h.apply = function (n, s, i) {
                var a = n.getContext('2d'),
                  d = a.getImageData(0, 0, n.width, n.height),
                  g = s(d, i);
                g instanceof ImageData
                  ? a.putImageData(g, 0, 0, 0, 0, n.width, n.height)
                  : a.putImageData(d, 0, 0, 0, 0, n.width, n.height);
              }),
              (h.threshold = function (n, s) {
                var i = h._toPixels(n);
                s === void 0 && (s = 0.5);
                for (var a = Math.floor(255 * s), d = 0; d < i.length; d += 4) {
                  var g = void 0;
                  (g =
                    a <= 0.2126 * i[d] + 0.7152 * i[d + 1] + 0.0722 * i[d + 2]
                      ? 255
                      : 0),
                    (i[d] = i[d + 1] = i[d + 2] = g);
                }
              }),
              (h.gray = function (n) {
                for (var s = h._toPixels(n), i = 0; i < s.length; i += 4) {
                  var a = 0.2126 * s[i] + 0.7152 * s[i + 1] + 0.0722 * s[i + 2];
                  s[i] = s[i + 1] = s[i + 2] = a;
                }
              }),
              (h.opaque = function (n) {
                for (var s = h._toPixels(n), i = 0; i < s.length; i += 4)
                  s[i + 3] = 255;
                return s;
              }),
              (h.invert = function (n) {
                for (var s = h._toPixels(n), i = 0; i < s.length; i += 4)
                  (s[i] = 255 - s[i]),
                    (s[i + 1] = 255 - s[i + 1]),
                    (s[i + 2] = 255 - s[i + 2]);
              }),
              (h.posterize = function (n, s) {
                var i = h._toPixels(n);
                if (s < 2 || 255 < s)
                  throw new Error(
                    'Level must be greater than 2 and less than 255 for posterize',
                  );
                for (var a = s - 1, d = 0; d < i.length; d += 4) {
                  var g = i[d],
                    _ = i[d + 1],
                    w = i[d + 2];
                  (i[d] = (255 * ((g * s) >> 8)) / a),
                    (i[d + 1] = (255 * ((_ * s) >> 8)) / a),
                    (i[d + 2] = (255 * ((w * s) >> 8)) / a);
                }
              }),
              (h.dilate = function (n) {
                for (
                  var s,
                    i,
                    a,
                    d,
                    g,
                    _,
                    w,
                    S,
                    M,
                    E,
                    O,
                    D,
                    A,
                    k,
                    L,
                    R,
                    N,
                    B = h._toPixels(n),
                    Z = 0,
                    J = B.length ? B.length / 4 : 0,
                    $ = new Int32Array(J);
                  Z < J;

                )
                  for (i = (s = Z) + n.width; Z < i; )
                    (a = d = h._getARGB(B, Z)),
                      (w = Z - 1) < s && (w = Z),
                      i <= (_ = Z + 1) && (_ = Z),
                      (S = Z - n.width) < 0 && (S = 0),
                      J <= (M = Z + n.width) && (M = Z),
                      (D = h._getARGB(B, S)),
                      (O = h._getARGB(B, w)),
                      (A = h._getARGB(B, M)),
                      (g =
                        77 * ((a >> 16) & 255) +
                        151 * ((a >> 8) & 255) +
                        28 * (255 & a)) <
                        (L =
                          77 * ((O >> 16) & 255) +
                          151 * ((O >> 8) & 255) +
                          28 * (255 & O)) && ((d = O), (g = L)),
                      g <
                        (k =
                          77 * (((E = h._getARGB(B, _)) >> 16) & 255) +
                          151 * ((E >> 8) & 255) +
                          28 * (255 & E)) && ((d = E), (g = k)),
                      g <
                        (R =
                          77 * ((D >> 16) & 255) +
                          151 * ((D >> 8) & 255) +
                          28 * (255 & D)) && ((d = D), (g = R)),
                      g <
                        (N =
                          77 * ((A >> 16) & 255) +
                          151 * ((A >> 8) & 255) +
                          28 * (255 & A)) && ((d = A), (g = N)),
                      ($[Z++] = d);
                h._setPixels(B, $);
              }),
              (h.erode = function (n) {
                for (
                  var s,
                    i,
                    a,
                    d,
                    g,
                    _,
                    w,
                    S,
                    M,
                    E,
                    O,
                    D,
                    A,
                    k,
                    L,
                    R,
                    N,
                    B = h._toPixels(n),
                    Z = 0,
                    J = B.length ? B.length / 4 : 0,
                    $ = new Int32Array(J);
                  Z < J;

                )
                  for (i = (s = Z) + n.width; Z < i; )
                    (a = d = h._getARGB(B, Z)),
                      (w = Z - 1) < s && (w = Z),
                      i <= (_ = Z + 1) && (_ = Z),
                      (S = Z - n.width) < 0 && (S = 0),
                      J <= (M = Z + n.width) && (M = Z),
                      (D = h._getARGB(B, S)),
                      (O = h._getARGB(B, w)),
                      (A = h._getARGB(B, M)),
                      (L =
                        77 * ((O >> 16) & 255) +
                        151 * ((O >> 8) & 255) +
                        28 * (255 & O)) <
                        (g =
                          77 * ((a >> 16) & 255) +
                          151 * ((a >> 8) & 255) +
                          28 * (255 & a)) && ((d = O), (g = L)),
                      (k =
                        77 * (((E = h._getARGB(B, _)) >> 16) & 255) +
                        151 * ((E >> 8) & 255) +
                        28 * (255 & E)) < g && ((d = E), (g = k)),
                      (R =
                        77 * ((D >> 16) & 255) +
                        151 * ((D >> 8) & 255) +
                        28 * (255 & D)) < g && ((d = D), (g = R)),
                      (N =
                        77 * ((A >> 16) & 255) +
                        151 * ((A >> 8) & 255) +
                        28 * (255 & A)) < g && ((d = A), (g = N)),
                      ($[Z++] = d);
                h._setPixels(B, $);
              }),
              (h.blur = function (n, s) {
                u(n, s);
              });
            var o = h;
            y.default = o;
          },
          {
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.int32-array': 209,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
          },
        ],
        286: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.from'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.set'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.typed-array.uint8-array'),
              e('core-js/modules/es.typed-array.uint32-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m = c(e('../core/main')),
              r = c(e('omggif'));
            function c(u) {
              return u && u.__esModule ? u : { default: u };
            }
            function l(u) {
              return (
                (function (o) {
                  if (Array.isArray(o)) {
                    for (var n = 0, s = new Array(o.length); n < o.length; n++)
                      s[n] = o[n];
                    return s;
                  }
                })(u) ||
                (function (o) {
                  if (
                    Symbol.iterator in Object(o) ||
                    Object.prototype.toString.call(o) === '[object Arguments]'
                  )
                    return Array.from(o);
                })(u) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            (m.default.prototype.createImage = function (u, o) {
              return (
                m.default._validateParameters('createImage', arguments),
                new m.default.Image(u, o)
              );
            }),
              (m.default.prototype.saveCanvas = function () {
                m.default._validateParameters('saveCanvas', arguments);
                var u,
                  o,
                  n,
                  s,
                  i = [].slice.call(arguments);
                switch (
                  (arguments[0] instanceof HTMLCanvasElement
                    ? ((u = arguments[0]), i.shift())
                    : arguments[0] instanceof m.default.Element
                    ? ((u = arguments[0].elt), i.shift())
                    : (u = this._curElement && this._curElement.elt),
                  1 <= i.length && (o = i[0]),
                  2 <= i.length && (n = i[1]),
                  (n =
                    n ||
                    m.default.prototype._checkFileExtension(o, n)[1] ||
                    'png'))
                ) {
                  default:
                    s = 'image/png';
                    break;
                  case 'jpeg':
                  case 'jpg':
                    s = 'image/jpeg';
                }
                u.toBlob(function (a) {
                  m.default.prototype.downloadFile(a, o, n);
                }, s);
              }),
              (m.default.prototype.saveGif = function (u, o) {
                var n = u.gifProperties,
                  s = n.loopLimit;
                s === 1 ? (s = null) : s === null && (s = 0);
                for (
                  var i = new Uint8Array(u.width * u.height * n.numFrames),
                    a = [],
                    d = {},
                    g = 0;
                  g < n.numFrames;
                  g++
                ) {
                  for (
                    var _ = new Set(),
                      w = n.frames[g].image.data,
                      S = w.length,
                      M = new Uint32Array(u.width * u.height),
                      E = 0,
                      O = 0;
                    E < S;
                    E += 4, O++
                  ) {
                    var D =
                      (w[E + 0] << 16) | (w[E + 1] << 8) | (w[E + 2] << 0);
                    _.add(D), (M[O] = D);
                  }
                  var A = l(_).sort().toString();
                  d[A] === void 0
                    ? (d[A] = { freq: 1, frames: [g] })
                    : ((d[A].freq += 1), d[A].frames.push(g)),
                    a.push(M);
                }
                var k = [],
                  L = Object.keys(d).sort(function (ye, P) {
                    return d[P].freq - d[ye].freq;
                  }),
                  R = L[0].split(',').map(function (ye) {
                    return parseInt(ye);
                  });
                k = k.concat(d[R].frames);
                for (var N = new Set(R), B = 1; B < L.length; B++) {
                  var Z = L[B].split(',')
                    .map(function (ye) {
                      return parseInt(ye);
                    })
                    .filter(function (ye) {
                      return !N.has(ye);
                    });
                  if (R.length + Z.length <= 256) {
                    for (var J = 0; J < Z.length; J++)
                      R.push(Z[J]), N.add(Z[J]);
                    k = k.concat(d[L[B]].frames);
                  }
                }
                k = new Set(k);
                for (var $ = {}, ee = 0; ee < R.length; ee++)
                  $[R[ee]] || ($[R[ee]] = ee);
                for (var Q = 1; Q < R.length; ) Q <<= 1;
                R.length = Q;
                for (
                  var oe = { loop: s, palette: new Uint32Array(R) },
                    ce = new r.default.GifWriter(i, u.width, u.height, oe),
                    ve = {},
                    de = function (ye) {
                      for (
                        var P = !k.has(ye),
                          U = P ? [] : R,
                          W = new Uint8Array(u.width * u.height),
                          K = {},
                          ne = new Set(),
                          re = 0;
                        re < a[ye].length;
                        re++
                      ) {
                        var we = a[ye][re];
                        P
                          ? (K[we] === void 0 &&
                              ((K[we] = U.length), U.push(we)),
                            (W[re] = K[we]))
                          : (W[re] = $[we]),
                          0 < ye && a[ye - 1][re] !== we && ne.add(we);
                      }
                      var X = {},
                        ue = U.filter(function (Te) {
                          return !ne.has(Te);
                        });
                      if (0 < ue.length) {
                        var he = ue[0],
                          ie = P ? K[he] : $[he];
                        if (0 < ye) {
                          for (var xe = 0; xe < a[ye].length; xe++)
                            a[ye - 1][xe] === a[ye][xe] && (W[xe] = ie);
                          (X.transparent = ie), (ve.frameOpts.disposal = 1);
                        }
                      }
                      if (((X.delay = n.frames[ye].delay / 10), P)) {
                        for (var je = 1; je < U.length; ) je <<= 1;
                        (U.length = je), (X.palette = new Uint32Array(U));
                      }
                      0 < ye &&
                        ce.addFrame(
                          0,
                          0,
                          u.width,
                          u.height,
                          ve.pixelPaletteIndex,
                          ve.frameOpts,
                        ),
                        (ve = { pixelPaletteIndex: W, frameOpts: X });
                    },
                    Se = 0;
                  Se < n.numFrames;
                  Se++
                )
                  de(Se);
                (ve.frameOpts.disposal = 1),
                  ce.addFrame(
                    0,
                    0,
                    u.width,
                    u.height,
                    ve.pixelPaletteIndex,
                    ve.frameOpts,
                  );
                var fe = new Blob([i.slice(0, ce.end())], {
                  type: 'image/gif',
                });
                m.default.prototype.downloadFile(fe, o, 'gif');
              }),
              (m.default.prototype.saveFrames = function (u, o, n, s, i) {
                m.default._validateParameters('saveFrames', arguments);
                var a = n || 3;
                (a = m.default.prototype.constrain(a, 0, 15)), (a *= 1e3);
                var d = s || 15;
                d = m.default.prototype.constrain(d, 0, 22);
                var g = 0,
                  _ = m.default.prototype._makeFrame,
                  w = this._curElement.elt,
                  S = [],
                  M = setInterval(function () {
                    S.push(_(u + g, o, w)), g++;
                  }, 1e3 / d);
                setTimeout(function () {
                  if ((clearInterval(M), i)) i(S);
                  else {
                    var E = !0,
                      O = !1,
                      D = void 0;
                    try {
                      for (
                        var A, k = S[Symbol.iterator]();
                        !(E = (A = k.next()).done);
                        E = !0
                      ) {
                        var L = A.value;
                        m.default.prototype.downloadFile(
                          L.imageData,
                          L.filename,
                          L.ext,
                        );
                      }
                    } catch (R) {
                      (O = !0), (D = R);
                    } finally {
                      try {
                        E || k.return == null || k.return();
                      } finally {
                        if (O) throw D;
                      }
                    }
                  }
                  S = [];
                }, a + 0.01);
              }),
              (m.default.prototype._makeFrame = function (u, o, n) {
                var s, i;
                if (((s = this ? this._curElement.elt : n), o))
                  switch (o.toLowerCase()) {
                    case 'png':
                      i = 'image/png';
                      break;
                    case 'jpeg':
                    case 'jpg':
                      i = 'image/jpeg';
                      break;
                    default:
                      i = 'image/png';
                  }
                else (o = 'png'), (i = 'image/png');
                var a = s.toDataURL(i);
                a = a.replace(i, 'image/octet-stream');
                var d = {};
                return (d.imageData = a), (d.filename = u), (d.ext = o), d;
              });
            var h = m.default;
            y.default = h;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.set': 183,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint32-array': 225,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/web.dom-collections.iterator': 229,
            omggif: 238,
          },
        ],
        287: [
          function (e, v, y) {
            function m(a) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (d) {
                      return typeof d;
                    }
                  : function (d) {
                      return d &&
                        typeof Symbol == 'function' &&
                        d.constructor === Symbol &&
                        d !== Symbol.prototype
                        ? 'symbol'
                        : typeof d;
                    })(a);
            }
            e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.promise'),
              e('core-js/modules/es.string.includes'),
              e('core-js/modules/es.typed-array.uint8-array'),
              e('core-js/modules/es.typed-array.uint8-clamped-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = n(e('../core/main')),
              c = n(e('./filters')),
              l = n(e('../core/helpers')),
              h = (function (a) {
                if (a && a.__esModule) return a;
                if (a === null || (m(a) !== 'object' && typeof a != 'function'))
                  return { default: a };
                var d = o();
                if (d && d.has(a)) return d.get(a);
                var g = {},
                  _ = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var w in a)
                  if (Object.prototype.hasOwnProperty.call(a, w)) {
                    var S = _ ? Object.getOwnPropertyDescriptor(a, w) : null;
                    S && (S.get || S.set)
                      ? Object.defineProperty(g, w, S)
                      : (g[w] = a[w]);
                  }
                return (g.default = a), d && d.set(a, g), g;
              })(e('../core/constants')),
              u = n(e('omggif'));
            function o() {
              if (typeof WeakMap != 'function') return null;
              var a = new WeakMap();
              return (
                (o = function () {
                  return a;
                }),
                a
              );
            }
            function n(a) {
              return a && a.__esModule ? a : { default: a };
            }
            function s(a, d) {
              return 0 < a && a < d ? a : d;
            }
            e('../core/friendly_errors/validate_params'),
              e('../core/friendly_errors/file_errors'),
              e('../core/friendly_errors/fes_core'),
              (r.default.prototype.loadImage = function (a, d, g) {
                r.default._validateParameters('loadImage', arguments);
                var _ = new r.default.Image(1, 1, this),
                  w = this,
                  S = new Request(a, { method: 'GET', mode: 'cors' });
                return (
                  fetch(a, S)
                    .then(function (M) {
                      var E = M.headers.get('content-type');
                      if (
                        (E === null &&
                          console.warn(
                            'The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset.',
                          ),
                        E && E.includes('image/gif'))
                      )
                        M.arrayBuffer().then(
                          function (D) {
                            D &&
                              (function (A, k, L, R, N) {
                                var B = new u.default.GifReader(A);
                                (k.width = k.canvas.width = B.width),
                                  (k.height = k.canvas.height = B.height);
                                var Z = [],
                                  J = B.numFrames(),
                                  $ = new Uint8ClampedArray(
                                    k.width * k.height * 4,
                                  );
                                if (1 < J) {
                                  for (
                                    var ee = function (fe, ye) {
                                        try {
                                          ye.decodeAndBlitFrameRGBA(fe, $);
                                        } catch (P) {
                                          r.default._friendlyFileLoadError(
                                            8,
                                            k.src,
                                          ),
                                            typeof R == 'function'
                                              ? R(P)
                                              : console.error(P);
                                        }
                                      },
                                      Q = 0;
                                    Q < J;
                                    Q++
                                  ) {
                                    var oe = B.frameInfo(Q),
                                      ce = k.drawingContext.getImageData(
                                        0,
                                        0,
                                        k.width,
                                        k.height,
                                      );
                                    ($ = ce.data.slice()), ee(Q, B);
                                    var ve = new ImageData(
                                      $,
                                      k.width,
                                      k.height,
                                    );
                                    k.drawingContext.putImageData(ve, 0, 0);
                                    var de = oe.delay;
                                    de === 0 && (de = 10),
                                      Z.push({
                                        image: k.drawingContext.getImageData(
                                          0,
                                          0,
                                          k.width,
                                          k.height,
                                        ),
                                        delay: 10 * de,
                                      }),
                                      oe.disposal === 2
                                        ? k.drawingContext.clearRect(
                                            oe.x,
                                            oe.y,
                                            oe.width,
                                            oe.height,
                                          )
                                        : oe.disposal === 3 &&
                                          k.drawingContext.putImageData(
                                            ce,
                                            0,
                                            0,
                                            oe.x,
                                            oe.y,
                                            oe.width,
                                            oe.height,
                                          );
                                  }
                                  var Se = B.loopCount();
                                  Se === null
                                    ? (Se = 1)
                                    : Se === 0 && (Se = null),
                                    k.drawingContext.putImageData(
                                      Z[0].image,
                                      0,
                                      0,
                                    ),
                                    (k.gifProperties = {
                                      displayIndex: 0,
                                      loopLimit: Se,
                                      loopCount: 0,
                                      frames: Z,
                                      numFrames: J,
                                      playing: !0,
                                      timeDisplayed: 0,
                                      lastChangeTime: 0,
                                    });
                                }
                                typeof L == 'function' && L(k), N();
                              })(
                                new Uint8Array(D),
                                _,
                                d,
                                g,
                                function (A) {
                                  w._decrementPreload();
                                }.bind(w),
                              );
                          },
                          function (D) {
                            typeof g == 'function' ? g(D) : console.error(D);
                          },
                        );
                      else {
                        var O = new Image();
                        (O.onload = function () {
                          (_.width = _.canvas.width = O.width),
                            (_.height = _.canvas.height = O.height),
                            _.drawingContext.drawImage(O, 0, 0),
                            (_.modified = !0),
                            typeof d == 'function' && d(_),
                            w._decrementPreload();
                        }),
                          (O.onerror = function (D) {
                            r.default._friendlyFileLoadError(0, O.src),
                              typeof g == 'function' ? g(D) : console.error(D);
                          }),
                          a.indexOf('data:image/') !== 0 &&
                            (O.crossOrigin = 'Anonymous'),
                          (O.src = a);
                      }
                      _.modified = !0;
                    })
                    .catch(function (M) {
                      r.default._friendlyFileLoadError(0, a),
                        typeof g == 'function' ? g(M) : console.error(M);
                    }),
                  _
                );
              }),
              (r.default.prototype.image = function (
                a,
                d,
                g,
                _,
                w,
                S,
                M,
                E,
                O,
              ) {
                r.default._validateParameters('image', arguments);
                var D = a.width,
                  A = a.height;
                a.elt &&
                  a.elt.videoWidth &&
                  !a.canvas &&
                  ((D = a.elt.videoWidth), (A = a.elt.videoHeight));
                var k = d,
                  L = g,
                  R = _ || D,
                  N = w || A,
                  B = S || 0,
                  Z = M || 0,
                  J = E || D,
                  $ = O || A;
                (J = s(J, D)), ($ = s($, A));
                var ee = 1;
                a.elt &&
                  !a.canvas &&
                  a.elt.style.width &&
                  ((ee =
                    a.elt.videoWidth && !_ ? a.elt.videoWidth : a.elt.width),
                  (ee /= parseInt(a.elt.style.width, 10))),
                  (B *= ee),
                  (Z *= ee),
                  ($ *= ee),
                  (J *= ee);
                var Q = l.default.modeAdjust(
                  k,
                  L,
                  R,
                  N,
                  this._renderer._imageMode,
                );
                this._renderer.image(a, B, Z, J, $, Q.x, Q.y, Q.w, Q.h);
              }),
              (r.default.prototype.tint = function () {
                for (
                  var a = arguments.length, d = new Array(a), g = 0;
                  g < a;
                  g++
                )
                  d[g] = arguments[g];
                r.default._validateParameters('tint', d);
                var _ = this.color.apply(this, d);
                this._renderer._tint = _.levels;
              }),
              (r.default.prototype.noTint = function () {
                this._renderer._tint = null;
              }),
              (r.default.prototype._getTintedImageCanvas = function (a) {
                if (!a.canvas) return a;
                var d = c.default._toPixels(a.canvas),
                  g = document.createElement('canvas');
                (g.width = a.canvas.width), (g.height = a.canvas.height);
                for (
                  var _ = g.getContext('2d'),
                    w = _.createImageData(a.canvas.width, a.canvas.height),
                    S = w.data,
                    M = 0;
                  M < d.length;
                  M += 4
                ) {
                  var E = d[M],
                    O = d[M + 1],
                    D = d[M + 2],
                    A = d[M + 3];
                  (S[M] = (E * this._renderer._tint[0]) / 255),
                    (S[M + 1] = (O * this._renderer._tint[1]) / 255),
                    (S[M + 2] = (D * this._renderer._tint[2]) / 255),
                    (S[M + 3] = (A * this._renderer._tint[3]) / 255);
                }
                return _.putImageData(w, 0, 0), g;
              }),
              (r.default.prototype.imageMode = function (a) {
                r.default._validateParameters('imageMode', arguments),
                  (a !== h.CORNER && a !== h.CORNERS && a !== h.CENTER) ||
                    (this._renderer._imageMode = a);
              });
            var i = r.default;
            y.default = i;
          },
          {
            '../core/constants': 253,
            '../core/friendly_errors/fes_core': 255,
            '../core/friendly_errors/file_errors': 256,
            '../core/friendly_errors/validate_params': 259,
            '../core/helpers': 260,
            '../core/main': 264,
            './filters': 285,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/es.typed-array.uint8-clamped-array': 227,
            omggif: 238,
          },
        ],
        288: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m = c(e('../core/main')),
              r = c(e('./filters'));
            function c(h) {
              return h && h.__esModule ? h : { default: h };
            }
            (m.default.Image = function (h, u) {
              (this.width = h),
                (this.height = u),
                (this.canvas = document.createElement('canvas')),
                (this.canvas.width = this.width),
                (this.canvas.height = this.height),
                (this.drawingContext = this.canvas.getContext('2d')),
                ((this._pixelsState = this)._pixelDensity = 1),
                (this.gifProperties = null),
                (this._modified = !1),
                (this.pixels = []);
            }),
              (m.default.Image.prototype._animateGif = function (h) {
                var u = this.gifProperties,
                  o = h._lastFrameTime;
                if (
                  (u.lastChangeTime === 0 && (u.lastChangeTime = o), u.playing)
                ) {
                  u.timeDisplayed = o - u.lastChangeTime;
                  var n = u.frames[u.displayIndex].delay;
                  if (u.timeDisplayed >= n) {
                    var s = Math.floor(u.timeDisplayed / n);
                    if (
                      ((u.timeDisplayed = 0),
                      (u.lastChangeTime = o),
                      (u.displayIndex += s),
                      (u.loopCount = Math.floor(u.displayIndex / u.numFrames)),
                      u.loopLimit !== null && u.loopCount >= u.loopLimit)
                    )
                      u.playing = !1;
                    else {
                      var i = u.displayIndex % u.numFrames;
                      this.drawingContext.putImageData(u.frames[i].image, 0, 0),
                        (u.displayIndex = i),
                        this.setModified(!0);
                    }
                  }
                }
              }),
              (m.default.Image.prototype._setProperty = function (h, u) {
                (this[h] = u), this.setModified(!0);
              }),
              (m.default.Image.prototype.loadPixels = function () {
                m.default.Renderer2D.prototype.loadPixels.call(this),
                  this.setModified(!0);
              }),
              (m.default.Image.prototype.updatePixels = function (h, u, o, n) {
                m.default.Renderer2D.prototype.updatePixels.call(
                  this,
                  h,
                  u,
                  o,
                  n,
                ),
                  this.setModified(!0);
              }),
              (m.default.Image.prototype.get = function (h, u, o, n) {
                return (
                  m.default._validateParameters('p5.Image.get', arguments),
                  m.default.Renderer2D.prototype.get.apply(this, arguments)
                );
              }),
              (m.default.Image.prototype._getPixel =
                m.default.Renderer2D.prototype._getPixel),
              (m.default.Image.prototype.set = function (h, u, o) {
                m.default.Renderer2D.prototype.set.call(this, h, u, o),
                  this.setModified(!0);
              }),
              (m.default.Image.prototype.resize = function (h, u) {
                h === 0 && u === 0
                  ? ((h = this.canvas.width), (u = this.canvas.height))
                  : h === 0
                  ? (h = (this.canvas.width * u) / this.canvas.height)
                  : u === 0 &&
                    (u = (this.canvas.height * h) / this.canvas.width),
                  (h = Math.floor(h)),
                  (u = Math.floor(u));
                var o = document.createElement('canvas');
                if (((o.width = h), (o.height = u), this.gifProperties))
                  for (
                    var n = this.gifProperties,
                      s = function (d, g) {
                        for (var _ = 0, w = 0; w < g.height; w++)
                          for (var S = 0; S < g.width; S++) {
                            var M = Math.floor((S * d.width) / g.width),
                              E =
                                4 *
                                (Math.floor((w * d.height) / g.height) *
                                  d.width +
                                  M);
                            (g.data[_++] = d.data[E++]),
                              (g.data[_++] = d.data[E++]),
                              (g.data[_++] = d.data[E++]),
                              (g.data[_++] = d.data[E++]);
                          }
                      },
                      i = 0;
                    i < n.numFrames;
                    i++
                  ) {
                    var a = this.drawingContext.createImageData(h, u);
                    s(n.frames[i].image, a), (n.frames[i].image = a);
                  }
                o
                  .getContext('2d')
                  .drawImage(
                    this.canvas,
                    0,
                    0,
                    this.canvas.width,
                    this.canvas.height,
                    0,
                    0,
                    o.width,
                    o.height,
                  ),
                  (this.canvas.width = this.width = h),
                  (this.canvas.height = this.height = u),
                  this.drawingContext.drawImage(o, 0, 0, h, u, 0, 0, h, u),
                  0 < this.pixels.length && this.loadPixels(),
                  this.setModified(!0);
              }),
              (m.default.Image.prototype.copy = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                m.default.prototype.copy.apply(this, u);
              }),
              (m.default.Image.prototype.mask = function (h) {
                h === void 0 && (h = this);
                var u = this.drawingContext.globalCompositeOperation,
                  o = 1;
                h instanceof m.default.Renderer && (o = h._pInst._pixelDensity);
                var n = [
                  h,
                  0,
                  0,
                  o * h.width,
                  o * h.height,
                  0,
                  0,
                  this.width,
                  this.height,
                ];
                (this.drawingContext.globalCompositeOperation =
                  'destination-in'),
                  m.default.Image.prototype.copy.apply(this, n),
                  (this.drawingContext.globalCompositeOperation = u),
                  this.setModified(!0);
              }),
              (m.default.Image.prototype.filter = function (h, u) {
                r.default.apply(this.canvas, r.default[h], u),
                  this.setModified(!0);
              }),
              (m.default.Image.prototype.blend = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                m.default._validateParameters('p5.Image.blend', arguments),
                  m.default.prototype.blend.apply(this, u),
                  this.setModified(!0);
              }),
              (m.default.Image.prototype.setModified = function (h) {
                this._modified = h;
              }),
              (m.default.Image.prototype.isModified = function () {
                return this._modified;
              }),
              (m.default.Image.prototype.save = function (h, u) {
                this.gifProperties
                  ? m.default.prototype.saveGif(this, h)
                  : m.default.prototype.saveCanvas(this.canvas, h, u);
              }),
              (m.default.Image.prototype.reset = function () {
                if (this.gifProperties) {
                  var h = this.gifProperties;
                  (h.playing = !0),
                    (h.timeSinceStart = 0),
                    (h.timeDisplayed = 0),
                    (h.lastChangeTime = 0),
                    (h.loopCount = 0),
                    (h.displayIndex = 0),
                    this.drawingContext.putImageData(h.frames[0].image, 0, 0);
                }
              }),
              (m.default.Image.prototype.getCurrentFrame = function () {
                if (this.gifProperties) {
                  var h = this.gifProperties;
                  return h.displayIndex % h.numFrames;
                }
              }),
              (m.default.Image.prototype.setFrame = function (h) {
                if (this.gifProperties) {
                  var u = this.gifProperties;
                  h < u.numFrames && 0 <= h
                    ? ((u.timeDisplayed = 0),
                      (u.lastChangeTime = 0),
                      (u.displayIndex = h),
                      this.drawingContext.putImageData(u.frames[h].image, 0, 0))
                    : console.log(
                        'Cannot set GIF to a frame number that is higher than total number of frames or below zero.',
                      );
                }
              }),
              (m.default.Image.prototype.numFrames = function () {
                if (this.gifProperties) return this.gifProperties.numFrames;
              }),
              (m.default.Image.prototype.play = function () {
                this.gifProperties && (this.gifProperties.playing = !0);
              }),
              (m.default.Image.prototype.pause = function () {
                this.gifProperties && (this.gifProperties.playing = !1);
              }),
              (m.default.Image.prototype.delay = function (h, u) {
                if (this.gifProperties) {
                  var o = this.gifProperties;
                  if (u < o.numFrames && 0 <= u) o.frames[u].delay = h;
                  else {
                    var n = !0,
                      s = !1,
                      i = void 0;
                    try {
                      for (
                        var a, d = o.frames[Symbol.iterator]();
                        !(n = (a = d.next()).done);
                        n = !0
                      )
                        a.value.delay = h;
                    } catch (g) {
                      (s = !0), (i = g);
                    } finally {
                      try {
                        n || d.return == null || d.return();
                      } finally {
                        if (s) throw i;
                      }
                    }
                  }
                }
              });
            var l = m.default.Image;
            y.default = l;
          },
          {
            '../core/main': 264,
            './filters': 285,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        289: [
          function (e, v, y) {
            e('core-js/modules/es.array.filter'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m = c(e('../core/main')),
              r = c(e('./filters'));
            function c(h) {
              return h && h.__esModule ? h : { default: h };
            }
            e('../color/p5.Color'),
              (m.default.prototype.pixels = []),
              (m.default.prototype.blend = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                var n;
                m.default._validateParameters('blend', u),
                  this._renderer
                    ? (n = this._renderer).blend.apply(n, u)
                    : m.default.Renderer2D.prototype.blend.apply(this, u);
              }),
              (m.default.prototype.copy = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                var n, s, i, a, d, g, _, w, S;
                if ((m.default._validateParameters('copy', u), u.length === 9))
                  (n = u[0]),
                    (s = u[1]),
                    (i = u[2]),
                    (a = u[3]),
                    (d = u[4]),
                    (g = u[5]),
                    (_ = u[6]),
                    (w = u[7]),
                    (S = u[8]);
                else {
                  if (u.length !== 8)
                    throw new Error('Signature not supported');
                  (n = this),
                    (s = u[0]),
                    (i = u[1]),
                    (a = u[2]),
                    (d = u[3]),
                    (g = u[4]),
                    (_ = u[5]),
                    (w = u[6]),
                    (S = u[7]);
                }
                m.default.prototype._copyHelper(
                  this,
                  n,
                  s,
                  i,
                  a,
                  d,
                  g,
                  _,
                  w,
                  S,
                );
              }),
              (m.default.prototype._copyHelper = function (
                h,
                u,
                o,
                n,
                s,
                i,
                a,
                d,
                g,
                _,
              ) {
                u.loadPixels();
                var w = u.canvas.width / u.width,
                  S = 0,
                  M = 0;
                u._renderer &&
                  u._renderer.isP3D &&
                  ((S = u.width / 2), (M = u.height / 2)),
                  h._renderer && h._renderer.isP3D
                    ? m.default.RendererGL.prototype.image.call(
                        h._renderer,
                        u,
                        o + S,
                        n + M,
                        s,
                        i,
                        a,
                        d,
                        g,
                        _,
                      )
                    : h.drawingContext.drawImage(
                        u.canvas,
                        w * (o + S),
                        w * (n + M),
                        w * s,
                        w * i,
                        a,
                        d,
                        g,
                        _,
                      );
              }),
              (m.default.prototype.filter = function (h, u) {
                m.default._validateParameters('filter', arguments),
                  this.canvas !== void 0
                    ? r.default.apply(this.canvas, r.default[h], u)
                    : r.default.apply(this.elt, r.default[h], u);
              }),
              (m.default.prototype.get = function (h, u, o, n) {
                var s;
                return (
                  m.default._validateParameters('get', arguments),
                  (s = this._renderer).get.apply(s, arguments)
                );
              }),
              (m.default.prototype.loadPixels = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                m.default._validateParameters('loadPixels', u),
                  this._renderer.loadPixels();
              }),
              (m.default.prototype.set = function (h, u, o) {
                this._renderer.set(h, u, o);
              }),
              (m.default.prototype.updatePixels = function (h, u, o, n) {
                m.default._validateParameters('updatePixels', arguments),
                  this.pixels.length !== 0 &&
                    this._renderer.updatePixels(h, u, o, n);
              });
            var l = m.default;
            y.default = l;
          },
          {
            '../color/p5.Color': 251,
            '../core/main': 264,
            './filters': 285,
            'core-js/modules/es.array.filter': 152,
          },
        ],
        290: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.last-index-of'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.splice'),
              e('core-js/modules/es.function.name'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.promise'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.includes'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.typed-array.uint8-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              e('core-js/modules/web.dom-collections.iterator'),
              e('core-js/modules/web.url'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m = l(e('../core/main'));
            e('whatwg-fetch'), e('es6-promise/auto');
            var r = l(e('fetch-jsonp')),
              c = l(e('file-saver'));
            function l(i) {
              return i && i.__esModule ? i : { default: i };
            }
            function h(i) {
              return (h =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (a) {
                      return typeof a;
                    }
                  : function (a) {
                      return a &&
                        typeof Symbol == 'function' &&
                        a.constructor === Symbol &&
                        a !== Symbol.prototype
                        ? 'symbol'
                        : typeof a;
                    })(i);
            }
            function u(i, a) {
              var d = {};
              if ((a = a || []) === void 0)
                for (var g = 0; g < i.length; g++) a[g.toString()] = g;
              for (var _ = 0; _ < a.length; _++) {
                var w = a[_],
                  S = i[_];
                d[w] = S;
              }
              return d;
            }
            function o(i) {
              return i
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/"/g, '&quot;')
                .replace(/'/g, '&#039;');
            }
            function n(i, a) {
              (a && a !== !0 && a !== 'true') || (a = '');
              var d = '';
              return (
                (i = i || 'untitled') &&
                  i.includes('.') &&
                  (d = i.split('.').pop()),
                a && d !== a && ((d = a), (i = ''.concat(i, '.').concat(d))),
                [i, d]
              );
            }
            e('../core/friendly_errors/validate_params'),
              e('../core/friendly_errors/file_errors'),
              e('../core/friendly_errors/fes_core'),
              (m.default.prototype.loadJSON = function () {
                for (
                  var i = arguments.length, a = new Array(i), d = 0;
                  d < i;
                  d++
                )
                  a[d] = arguments[d];
                m.default._validateParameters('loadJSON', a);
                for (
                  var g, _, w, S = a[0], M = {}, E = 'json', O = 1;
                  O < a.length;
                  O++
                ) {
                  var D = a[O];
                  typeof D == 'string'
                    ? (D !== 'jsonp' && D !== 'json') || (E = D)
                    : typeof D == 'function'
                    ? g
                      ? (_ = D)
                      : (g = D)
                    : h(D) === 'object' &&
                      (D.hasOwnProperty('jsonpCallback') ||
                        D.hasOwnProperty('jsonpCallbackFunction')) &&
                      ((E = 'jsonp'), (w = D));
                }
                var A = this;
                return (
                  this.httpDo(
                    S,
                    'GET',
                    w,
                    E,
                    function (k) {
                      for (var L in k) M[L] = k[L];
                      g !== void 0 && g(k), A._decrementPreload();
                    },
                    function (k) {
                      if ((m.default._friendlyFileLoadError(5, S), !_)) throw k;
                      _(k);
                    },
                  ),
                  M
                );
              }),
              (m.default.prototype.loadStrings = function () {
                for (
                  var i = arguments.length, a = new Array(i), d = 0;
                  d < i;
                  d++
                )
                  a[d] = arguments[d];
                m.default._validateParameters('loadStrings', a);
                for (var g, _, w = [], S = 1; S < a.length; S++) {
                  var M = a[S];
                  typeof M == 'function' &&
                    (g === void 0 ? (g = M) : _ === void 0 && (_ = M));
                }
                var E = this;
                return (
                  m.default.prototype.httpDo.call(
                    this,
                    a[0],
                    'GET',
                    'text',
                    function (O) {
                      for (
                        var D = O.replace(/\r\n/g, '\r')
                            .replace(/\n/g, '\r')
                            .split(/\r/),
                          A = 0,
                          k = D.length;
                        A < k;
                        A += 32768
                      )
                        Array.prototype.push.apply(
                          w,
                          D.slice(A, Math.min(A + 32768, k)),
                        );
                      g !== void 0 && g(w), E._decrementPreload();
                    },
                    function (O) {
                      if ((m.default._friendlyFileLoadError(3, O), !_)) throw O;
                      _(O);
                    },
                  ),
                  w
                );
              }),
              (m.default.prototype.loadTable = function (i) {
                var a,
                  d,
                  g,
                  _ = !1,
                  w = i.substring(i.lastIndexOf('.') + 1, i.length);
                w === 'csv'
                  ? (g = ',')
                  : w === 'ssv'
                  ? (g = ';')
                  : w === 'tsv' && (g = '	');
                for (var S = 1; S < arguments.length; S++)
                  typeof arguments[S] == 'function'
                    ? a === void 0
                      ? (a = arguments[S])
                      : d === void 0 && (d = arguments[S])
                    : typeof arguments[S] == 'string' &&
                      (arguments[S] === 'header' && (_ = !0),
                      arguments[S] === 'csv'
                        ? (g = ',')
                        : arguments[S] === 'ssv'
                        ? (g = ';')
                        : arguments[S] === 'tsv' && (g = '	'));
                var M = new m.default.Table(),
                  E = this;
                return (
                  this.httpDo(
                    i,
                    'GET',
                    'table',
                    function (O) {
                      for (
                        var D,
                          A,
                          k = {},
                          L = [],
                          R = 0,
                          N = null,
                          B = function () {
                            (k.currentState = 0), (k.token = '');
                          },
                          Z = function () {
                            N.push(k.token), B();
                          },
                          J = function () {
                            (k.currentState = 4), L.push(N), (N = null);
                          };
                        ;

                      ) {
                        if ((D = O[R++]) == null) {
                          if (k.escaped)
                            throw new Error('Unclosed quote in file.');
                          if (N) {
                            Z(), J();
                            break;
                          }
                        }
                        if (
                          (N === null && ((k.escaped = !1), (N = []), B()),
                          k.currentState === 0)
                        ) {
                          if (D === '"') {
                            (k.escaped = !0), (k.currentState = 1);
                            continue;
                          }
                          k.currentState = 1;
                        }
                        if (k.currentState === 1 && k.escaped)
                          if (D === '"')
                            O[R] === '"'
                              ? ((k.token += '"'), R++)
                              : ((k.escaped = !1), (k.currentState = 2));
                          else {
                            if (D === '\r') continue;
                            k.token += D;
                          }
                        else
                          D === '\r'
                            ? (O[R] ===
                                `
` && R++,
                              Z(),
                              J())
                            : D ===
                              `
`
                            ? (Z(), J())
                            : D === g
                            ? Z()
                            : k.currentState === 1 && (k.token += D);
                      }
                      if (_) M.columns = L.shift();
                      else
                        for (var $ = 0; $ < L[0].length; $++)
                          M.columns[$] = 'null';
                      for (var ee = 0; ee < L.length; ee++)
                        (L[ee].length !== 1 ||
                          (L[ee][0] !== 'undefined' && L[ee][0] !== '')) &&
                          (((A = new m.default.TableRow()).arr = L[ee]),
                          (A.obj = u(L[ee], M.columns)),
                          M.addRow(A));
                      typeof a == 'function' && a(M), E._decrementPreload();
                    },
                    function (O) {
                      m.default._friendlyFileLoadError(2, i),
                        d ? d(O) : console.error(O);
                    },
                  ),
                  M
                );
              }),
              (m.default.prototype.loadXML = function () {
                for (
                  var i = arguments.length, a = new Array(i), d = 0;
                  d < i;
                  d++
                )
                  a[d] = arguments[d];
                for (
                  var g, _, w = new m.default.XML(), S = 1;
                  S < a.length;
                  S++
                ) {
                  var M = a[S];
                  typeof M == 'function' &&
                    (g === void 0 ? (g = M) : _ === void 0 && (_ = M));
                }
                var E = this;
                return (
                  this.httpDo(
                    a[0],
                    'GET',
                    'xml',
                    function (O) {
                      for (var D in O) w[D] = O[D];
                      g !== void 0 && g(w), E._decrementPreload();
                    },
                    function (O) {
                      if ((m.default._friendlyFileLoadError(1, O), !_)) throw O;
                      _(O);
                    },
                  ),
                  w
                );
              }),
              (m.default.prototype.loadBytes = function (i, a, d) {
                var g = {},
                  _ = this;
                return (
                  this.httpDo(
                    i,
                    'GET',
                    'arrayBuffer',
                    function (w) {
                      (g.bytes = new Uint8Array(w)),
                        typeof a == 'function' && a(g),
                        _._decrementPreload();
                    },
                    function (w) {
                      if ((m.default._friendlyFileLoadError(6, i), !d)) throw w;
                      d(w);
                    },
                  ),
                  g
                );
              }),
              (m.default.prototype.httpGet = function () {
                m.default._validateParameters('httpGet', arguments);
                var i = Array.prototype.slice.call(arguments);
                return (
                  i.splice(1, 0, 'GET'),
                  m.default.prototype.httpDo.apply(this, i)
                );
              }),
              (m.default.prototype.httpPost = function () {
                m.default._validateParameters('httpPost', arguments);
                var i = Array.prototype.slice.call(arguments);
                return (
                  i.splice(1, 0, 'POST'),
                  m.default.prototype.httpDo.apply(this, i)
                );
              }),
              (m.default.prototype.httpDo = function () {
                for (
                  var i,
                    a,
                    d,
                    g,
                    _,
                    w = {},
                    S = 0,
                    M = 'text/plain',
                    E = arguments.length - 1;
                  0 < E &&
                  typeof (E < 0 || arguments.length <= E
                    ? void 0
                    : arguments[E]) == 'function';
                  E--
                )
                  S++;
                var O = arguments.length <= 0 ? void 0 : arguments[0];
                if (
                  arguments.length - S == 2 &&
                  typeof O == 'string' &&
                  h(arguments.length <= 1 ? void 0 : arguments[1]) === 'object'
                )
                  (g = new Request(
                    O,
                    arguments.length <= 1 ? void 0 : arguments[1],
                  )),
                    (a = arguments.length <= 2 ? void 0 : arguments[2]),
                    (d = arguments.length <= 3 ? void 0 : arguments[3]);
                else {
                  for (var D, A = 'GET', k = 1; k < arguments.length; k++) {
                    var L =
                      k < 0 || arguments.length <= k ? void 0 : arguments[k];
                    if (typeof L == 'string')
                      L === 'GET' ||
                      L === 'POST' ||
                      L === 'PUT' ||
                      L === 'DELETE'
                        ? (A = L)
                        : L === 'json' ||
                          L === 'jsonp' ||
                          L === 'binary' ||
                          L === 'arrayBuffer' ||
                          L === 'xml' ||
                          L === 'text' ||
                          L === 'table'
                        ? (i = L)
                        : (D = L);
                    else if (typeof L == 'number') D = L.toString();
                    else if (h(L) === 'object')
                      if (
                        L.hasOwnProperty('jsonpCallback') ||
                        L.hasOwnProperty('jsonpCallbackFunction')
                      )
                        for (var R in L) w[R] = L[R];
                      else
                        M =
                          L instanceof m.default.XML
                            ? ((D = L.serialize()), 'application/xml')
                            : ((D = JSON.stringify(L)), 'application/json');
                    else typeof L == 'function' && (a ? (d = L) : (a = L));
                  }
                  var N =
                    A === 'GET'
                      ? new Headers()
                      : new Headers({ 'Content-Type': M });
                  g = new Request(O, {
                    method: A,
                    mode: 'cors',
                    body: D,
                    headers: N,
                  });
                }
                return (
                  (_ = (_ =
                    (i =
                      i ||
                      (O.includes('json')
                        ? 'json'
                        : O.includes('xml')
                        ? 'xml'
                        : 'text')) === 'jsonp'
                      ? (0, r.default)(O, w)
                      : fetch(g)).then(function (B) {
                    if (!B.ok) {
                      var Z = new Error(B.body);
                      throw ((Z.status = B.status), (Z.ok = !1), Z);
                    }
                    var J = 0;
                    switch (
                      (i !== 'jsonp' && (J = B.headers.get('content-length')),
                      J && 64e6 < J && m.default._friendlyFileLoadError(7, O),
                      i)
                    ) {
                      case 'json':
                      case 'jsonp':
                        return B.json();
                      case 'binary':
                        return B.blob();
                      case 'arrayBuffer':
                        return B.arrayBuffer();
                      case 'xml':
                        return B.text().then(function ($) {
                          var ee = new DOMParser().parseFromString(
                            $,
                            'text/xml',
                          );
                          return new m.default.XML(ee.documentElement);
                        });
                      default:
                        return B.text();
                    }
                  })).then(a || function () {}),
                  _.catch(d || console.error),
                  _
                );
              }),
              (window.URL = window.URL || window.webkitURL),
              (m.default.prototype._pWriters = []),
              (m.default.prototype.createWriter = function (i, a) {
                var d;
                for (var g in m.default.prototype._pWriters)
                  if (m.default.prototype._pWriters[g].name === i)
                    return (
                      (d = new m.default.PrintWriter(i + this.millis(), a)),
                      m.default.prototype._pWriters.push(d),
                      d
                    );
                return (
                  (d = new m.default.PrintWriter(i, a)),
                  m.default.prototype._pWriters.push(d),
                  d
                );
              }),
              (m.default.PrintWriter = function (i, a) {
                var d = this;
                (this.name = i),
                  (this.content = ''),
                  (this.write = function (g) {
                    this.content += g;
                  }),
                  (this.print = function (g) {
                    this.content += ''.concat(
                      g,
                      `
`,
                    );
                  }),
                  (this.clear = function () {
                    this.content = '';
                  }),
                  (this.close = function () {
                    var g = [];
                    for (var _ in (g.push(this.content),
                    m.default.prototype.writeFile(g, i, a),
                    m.default.prototype._pWriters))
                      m.default.prototype._pWriters[_].name === this.name &&
                        m.default.prototype._pWriters.splice(_, 1);
                    d.clear(), (d = {});
                  });
              }),
              (m.default.prototype.save = function (i, a, d) {
                var g = arguments,
                  _ = this._curElement ? this._curElement.elt : this.elt;
                if (g.length !== 0)
                  if (
                    g[0] instanceof m.default.Renderer ||
                    g[0] instanceof m.default.Graphics
                  )
                    m.default.prototype.saveCanvas(g[0].elt, g[1], g[2]);
                  else if (g.length === 1 && typeof g[0] == 'string')
                    m.default.prototype.saveCanvas(_, g[0]);
                  else
                    switch (n(g[1], g[2])[1]) {
                      case 'json':
                        return void m.default.prototype.saveJSON(
                          g[0],
                          g[1],
                          g[2],
                        );
                      case 'txt':
                        return void m.default.prototype.saveStrings(
                          g[0],
                          g[1],
                          g[2],
                        );
                      default:
                        g[0] instanceof Array
                          ? m.default.prototype.saveStrings(g[0], g[1], g[2])
                          : g[0] instanceof m.default.Table
                          ? m.default.prototype.saveTable(g[0], g[1], g[2])
                          : g[0] instanceof m.default.Image
                          ? m.default.prototype.saveCanvas(g[0].canvas, g[1])
                          : g[0] instanceof m.default.SoundFile &&
                            m.default.prototype.saveSound(
                              g[0],
                              g[1],
                              g[2],
                              g[3],
                            );
                    }
                else m.default.prototype.saveCanvas(_);
              }),
              (m.default.prototype.saveJSON = function (i, a, d) {
                var g;
                m.default._validateParameters('saveJSON', arguments),
                  (g = d ? JSON.stringify(i) : JSON.stringify(i, void 0, 2)),
                  this.saveStrings(
                    g.split(`
`),
                    a,
                    'json',
                  );
              }),
              (m.default.prototype.saveJSONObject =
                m.default.prototype.saveJSON),
              (m.default.prototype.saveJSONArray =
                m.default.prototype.saveJSON),
              (m.default.prototype.saveStrings = function (i, a, d, g) {
                m.default._validateParameters('saveStrings', arguments);
                for (
                  var _ = d || 'txt', w = this.createWriter(a, _), S = 0;
                  S < i.length;
                  S++
                )
                  g
                    ? w.write(
                        i[S] +
                          `\r
`,
                      )
                    : w.write(
                        i[S] +
                          `
`,
                      );
                w.close(), w.clear();
              }),
              (m.default.prototype.saveTable = function (i, a, d) {
                var g;
                m.default._validateParameters('saveTable', arguments),
                  (g =
                    d === void 0
                      ? a.substring(a.lastIndexOf('.') + 1, a.length)
                      : d);
                var _ = this.createWriter(a, g),
                  w = i.columns,
                  S = ',';
                if ((g === 'tsv' && (S = '	'), g !== 'html')) {
                  if (w[0] !== '0') {
                    for (var M = 0; M < w.length; M++)
                      M < w.length - 1 ? _.write(w[M] + S) : _.write(w[M]);
                    _.write(`
`);
                  }
                  for (var E = 0; E < i.rows.length; E++) {
                    var O = void 0;
                    for (O = 0; O < i.rows[E].arr.length; O++)
                      O < i.rows[E].arr.length - 1
                        ? g === 'csv' && String(i.rows[E].arr[O]).includes(',')
                          ? _.write('"' + i.rows[E].arr[O] + '"' + S)
                          : _.write(i.rows[E].arr[O] + S)
                        : g === 'csv' && String(i.rows[E].arr[O]).includes(',')
                        ? _.write('"' + i.rows[E].arr[O] + '"')
                        : _.write(i.rows[E].arr[O]);
                    _.write(`
`);
                  }
                } else {
                  if (
                    (_.print('<html>'),
                    _.print('<head>'),
                    _.print(
                      '  <meta http-equiv="content-type" content="text/html;charset=utf-8" />',
                    ),
                    _.print('</head>'),
                    _.print('<body>'),
                    _.print('  <table>'),
                    w[0] !== '0')
                  ) {
                    _.print('    <tr>');
                    for (var D = 0; D < w.length; D++) {
                      var A = o(w[D]);
                      _.print('      <td>'.concat(A)), _.print('      </td>');
                    }
                    _.print('    </tr>');
                  }
                  for (var k = 0; k < i.rows.length; k++) {
                    _.print('    <tr>');
                    for (var L = 0; L < i.columns.length; L++) {
                      var R = o(i.rows[k].getString(L));
                      _.print('      <td>'.concat(R)), _.print('      </td>');
                    }
                    _.print('    </tr>');
                  }
                  _.print('  </table>'), _.print('</body>'), _.print('</html>');
                }
                _.close(), _.clear();
              }),
              (m.default.prototype.writeFile = function (i, a, d) {
                var g = 'application/octet-stream';
                m.default.prototype._isSafari() && (g = 'text/plain');
                var _ = new Blob(i, { type: g });
                m.default.prototype.downloadFile(_, a, d);
              }),
              (m.default.prototype.downloadFile = function (i, a, d) {
                var g = n(a, d),
                  _ = g[0];
                if (i instanceof Blob) c.default.saveAs(i, _);
                else {
                  var w = document.createElement('a');
                  if (
                    ((w.href = i),
                    (w.download = _),
                    (w.onclick = function (M) {
                      var E;
                      (E = M),
                        document.body.removeChild(E.target),
                        M.stopPropagation();
                    }),
                    (w.style.display = 'none'),
                    document.body.appendChild(w),
                    m.default.prototype._isSafari())
                  ) {
                    var S = `Hello, Safari user! To download this file...
`;
                    (S += `1. Go to File --> Save As.
`),
                      (S += `2. Choose "Page Source" as the Format.
`),
                      (S += '3. Name it with this extension: ."'.concat(
                        g[1],
                        '"',
                      )),
                      alert(S);
                  }
                  w.click();
                }
              }),
              (m.default.prototype._checkFileExtension = n),
              (m.default.prototype._isSafari = function () {
                return (
                  0 <
                  Object.prototype.toString
                    .call(window.HTMLElement)
                    .indexOf('Constructor')
                );
              });
            var s = m.default;
            y.default = s;
          },
          {
            '../core/friendly_errors/fes_core': 255,
            '../core/friendly_errors/file_errors': 256,
            '../core/friendly_errors/validate_params': 259,
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.last-index-of': 160,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/web.dom-collections.iterator': 229,
            'core-js/modules/web.url': 231,
            'es6-promise/auto': 232,
            'fetch-jsonp': 234,
            'file-saver': 235,
            'whatwg-fetch': 242,
          },
        ],
        291: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.splice'),
              e('core-js/modules/es.regexp.constructor'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.match'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.Table = function (l) {
              (this.columns = []), (this.rows = []);
            }),
              (r.default.Table.prototype.addRow = function (l) {
                var h = l || new r.default.TableRow();
                if (h.arr === void 0 || h.obj === void 0)
                  throw new Error('invalid TableRow: '.concat(h));
                return (h.table = this).rows.push(h), h;
              }),
              (r.default.Table.prototype.removeRow = function (l) {
                this.rows[l].table = null;
                var h = this.rows.splice(l + 1, this.rows.length);
                this.rows.pop(), (this.rows = this.rows.concat(h));
              }),
              (r.default.Table.prototype.getRow = function (l) {
                return this.rows[l];
              }),
              (r.default.Table.prototype.getRows = function () {
                return this.rows;
              }),
              (r.default.Table.prototype.findRow = function (l, h) {
                if (typeof h == 'string') {
                  for (var u = 0; u < this.rows.length; u++)
                    if (this.rows[u].obj[h] === l) return this.rows[u];
                } else
                  for (var o = 0; o < this.rows.length; o++)
                    if (this.rows[o].arr[h] === l) return this.rows[o];
                return null;
              }),
              (r.default.Table.prototype.findRows = function (l, h) {
                var u = [];
                if (typeof h == 'string')
                  for (var o = 0; o < this.rows.length; o++)
                    this.rows[o].obj[h] === l && u.push(this.rows[o]);
                else
                  for (var n = 0; n < this.rows.length; n++)
                    this.rows[n].arr[h] === l && u.push(this.rows[n]);
                return u;
              }),
              (r.default.Table.prototype.matchRow = function (l, h) {
                if (typeof h == 'number') {
                  for (var u = 0; u < this.rows.length; u++)
                    if (this.rows[u].arr[h].match(l)) return this.rows[u];
                } else
                  for (var o = 0; o < this.rows.length; o++)
                    if (this.rows[o].obj[h].match(l)) return this.rows[o];
                return null;
              }),
              (r.default.Table.prototype.matchRows = function (l, h) {
                var u = [];
                if (typeof h == 'number')
                  for (var o = 0; o < this.rows.length; o++)
                    this.rows[o].arr[h].match(l) && u.push(this.rows[o]);
                else
                  for (var n = 0; n < this.rows.length; n++)
                    this.rows[n].obj[h].match(l) && u.push(this.rows[n]);
                return u;
              }),
              (r.default.Table.prototype.getColumn = function (l) {
                var h = [];
                if (typeof l == 'string')
                  for (var u = 0; u < this.rows.length; u++)
                    h.push(this.rows[u].obj[l]);
                else
                  for (var o = 0; o < this.rows.length; o++)
                    h.push(this.rows[o].arr[l]);
                return h;
              }),
              (r.default.Table.prototype.clearRows = function () {
                delete this.rows, (this.rows = []);
              }),
              (r.default.Table.prototype.addColumn = function (l) {
                var h = l || null;
                this.columns.push(h);
              }),
              (r.default.Table.prototype.getColumnCount = function () {
                return this.columns.length;
              }),
              (r.default.Table.prototype.getRowCount = function () {
                return this.rows.length;
              }),
              (r.default.Table.prototype.removeTokens = function (l, h) {
                for (var u = [], o = 0; o < l.length; o++)
                  u.push(l.charAt(o).replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&'));
                var n = new RegExp(u.join('|'), 'g');
                if (h === void 0)
                  for (var s = 0; s < this.columns.length; s++)
                    for (var i = 0; i < this.rows.length; i++) {
                      var a = this.rows[i].arr[s];
                      (a = a.replace(n, '')),
                        (this.rows[i].arr[s] = a),
                        (this.rows[i].obj[this.columns[s]] = a);
                    }
                else if (typeof h == 'string')
                  for (var d = 0; d < this.rows.length; d++) {
                    var g = this.rows[d].obj[h];
                    (g = g.replace(n, '')), (this.rows[d].obj[h] = g);
                    var _ = this.columns.indexOf(h);
                    this.rows[d].arr[_] = g;
                  }
                else
                  for (var w = 0; w < this.rows.length; w++) {
                    var S = this.rows[w].arr[h];
                    (S = S.replace(n, '')),
                      (this.rows[w].arr[h] = S),
                      (this.rows[w].obj[this.columns[h]] = S);
                  }
              }),
              (r.default.Table.prototype.trim = function (l) {
                var h = new RegExp(' ', 'g');
                if (l === void 0)
                  for (var u = 0; u < this.columns.length; u++)
                    for (var o = 0; o < this.rows.length; o++) {
                      var n = this.rows[o].arr[u];
                      (n = n.replace(h, '')),
                        (this.rows[o].arr[u] = n),
                        (this.rows[o].obj[this.columns[u]] = n);
                    }
                else if (typeof l == 'string')
                  for (var s = 0; s < this.rows.length; s++) {
                    var i = this.rows[s].obj[l];
                    (i = i.replace(h, '')), (this.rows[s].obj[l] = i);
                    var a = this.columns.indexOf(l);
                    this.rows[s].arr[a] = i;
                  }
                else
                  for (var d = 0; d < this.rows.length; d++) {
                    var g = this.rows[d].arr[l];
                    (g = g.replace(h, '')),
                      (this.rows[d].arr[l] = g),
                      (this.rows[d].obj[this.columns[l]] = g);
                  }
              }),
              (r.default.Table.prototype.removeColumn = function (l) {
                var h, u;
                typeof l == 'string'
                  ? ((h = l), (u = this.columns.indexOf(l)))
                  : ((u = l), (h = this.columns[l]));
                var o = this.columns.splice(u + 1, this.columns.length);
                this.columns.pop(), (this.columns = this.columns.concat(o));
                for (var n = 0; n < this.rows.length; n++) {
                  var s = this.rows[n].arr,
                    i = s.splice(u + 1, s.length);
                  s.pop(),
                    (this.rows[n].arr = s.concat(i)),
                    delete this.rows[n].obj[h];
                }
              }),
              (r.default.Table.prototype.set = function (l, h, u) {
                this.rows[l].set(h, u);
              }),
              (r.default.Table.prototype.setNum = function (l, h, u) {
                this.rows[l].setNum(h, u);
              }),
              (r.default.Table.prototype.setString = function (l, h, u) {
                this.rows[l].setString(h, u);
              }),
              (r.default.Table.prototype.get = function (l, h) {
                return this.rows[l].get(h);
              }),
              (r.default.Table.prototype.getNum = function (l, h) {
                return this.rows[l].getNum(h);
              }),
              (r.default.Table.prototype.getString = function (l, h) {
                return this.rows[l].getString(h);
              }),
              (r.default.Table.prototype.getObject = function (l) {
                for (var h, u = {}, o = 0; o < this.rows.length; o++)
                  if (((h = this.rows[o].obj), typeof l == 'string')) {
                    if (!(0 <= this.columns.indexOf(l)))
                      throw new Error(
                        'This table has no column named "'.concat(l, '"'),
                      );
                    u[h[l]] = h;
                  } else u[o] = this.rows[o].obj;
                return u;
              }),
              (r.default.Table.prototype.getArray = function () {
                for (var l = [], h = 0; h < this.rows.length; h++)
                  l.push(this.rows[h].arr);
                return l;
              });
            var c = r.default;
            y.default = c;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.trim': 193,
          },
        ],
        292: [
          function (e, v, y) {
            e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.TableRow = function (l, h) {
              var u = [],
                o = {};
              l && ((h = h || ','), (u = l.split(h)));
              for (var n = 0; n < u.length; n++) {
                var s = n,
                  i = u[n];
                o[s] = i;
              }
              (this.arr = u), (this.obj = o), (this.table = null);
            }),
              (r.default.TableRow.prototype.set = function (l, h) {
                if (typeof l == 'string') {
                  var u = this.table.columns.indexOf(l);
                  if (!(0 <= u))
                    throw new Error(
                      'This table has no column named "'.concat(l, '"'),
                    );
                  (this.obj[l] = h), (this.arr[u] = h);
                } else {
                  if (!(l < this.table.columns.length))
                    throw new Error(
                      'Column #'.concat(
                        l,
                        ' is out of the range of this table',
                      ),
                    );
                  this.arr[l] = h;
                  var o = this.table.columns[l];
                  this.obj[o] = h;
                }
              }),
              (r.default.TableRow.prototype.setNum = function (l, h) {
                var u = parseFloat(h);
                this.set(l, u);
              }),
              (r.default.TableRow.prototype.setString = function (l, h) {
                var u = h.toString();
                this.set(l, u);
              }),
              (r.default.TableRow.prototype.get = function (l) {
                return typeof l == 'string' ? this.obj[l] : this.arr[l];
              }),
              (r.default.TableRow.prototype.getNum = function (l) {
                var h;
                if (
                  (h = parseFloat(
                    typeof l == 'string' ? this.obj[l] : this.arr[l],
                  )).toString() === 'NaN'
                )
                  throw 'Error: '.concat(this.obj[l], ' is NaN (Not a Number)');
                return h;
              }),
              (r.default.TableRow.prototype.getString = function (l) {
                return typeof l == 'string'
                  ? this.obj[l].toString()
                  : this.arr[l].toString();
              });
            var c = r.default;
            y.default = c;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.split': 191,
          },
        ],
        293: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.number.constructor'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(h) {
              for (var u = [], o = 0; o < h.length; o++)
                u.push(new r.default.XML(h[o]));
              return u;
            }
            (r.default.XML = function (h) {
              if (h) this.DOM = h;
              else {
                var u = document.implementation.createDocument(null, 'doc');
                this.DOM = u.createElement('root');
              }
            }),
              (r.default.XML.prototype.getParent = function () {
                return new r.default.XML(this.DOM.parentElement);
              }),
              (r.default.XML.prototype.getName = function () {
                return this.DOM.tagName;
              }),
              (r.default.XML.prototype.setName = function (h) {
                var u = this.DOM.innerHTML,
                  o = this.DOM.attributes,
                  n = document.implementation
                    .createDocument(null, 'default')
                    .createElement(h);
                n.innerHTML = u;
                for (var s = 0; s < o.length; s++)
                  n.setAttribute(o[s].nodeName, o.nodeValue);
                this.DOM = n;
              }),
              (r.default.XML.prototype.hasChildren = function () {
                return 0 < this.DOM.children.length;
              }),
              (r.default.XML.prototype.listChildren = function () {
                for (var h = [], u = 0; u < this.DOM.childNodes.length; u++)
                  h.push(this.DOM.childNodes[u].nodeName);
                return h;
              }),
              (r.default.XML.prototype.getChildren = function (h) {
                return c(
                  h ? this.DOM.getElementsByTagName(h) : this.DOM.children,
                );
              }),
              (r.default.XML.prototype.getChild = function (h) {
                if (typeof h != 'string')
                  return new r.default.XML(this.DOM.children[h]);
                var u = !0,
                  o = !1,
                  n = void 0;
                try {
                  for (
                    var s, i = this.DOM.children[Symbol.iterator]();
                    !(u = (s = i.next()).done);
                    u = !0
                  ) {
                    var a = s.value;
                    if (a.tagName === h) return new r.default.XML(a);
                  }
                } catch (d) {
                  (o = !0), (n = d);
                } finally {
                  try {
                    u || i.return == null || i.return();
                  } finally {
                    if (o) throw n;
                  }
                }
              }),
              (r.default.XML.prototype.addChild = function (h) {
                h instanceof r.default.XML && this.DOM.appendChild(h.DOM);
              }),
              (r.default.XML.prototype.removeChild = function (h) {
                var u = -1;
                if (typeof h == 'string') {
                  for (var o = 0; o < this.DOM.children.length; o++)
                    if (this.DOM.children[o].tagName === h) {
                      u = o;
                      break;
                    }
                } else u = h;
                u !== -1 && this.DOM.removeChild(this.DOM.children[u]);
              }),
              (r.default.XML.prototype.getAttributeCount = function () {
                return this.DOM.attributes.length;
              }),
              (r.default.XML.prototype.listAttributes = function () {
                var h = [],
                  u = !0,
                  o = !1,
                  n = void 0;
                try {
                  for (
                    var s, i = this.DOM.attributes[Symbol.iterator]();
                    !(u = (s = i.next()).done);
                    u = !0
                  ) {
                    var a = s.value;
                    h.push(a.nodeName);
                  }
                } catch (d) {
                  (o = !0), (n = d);
                } finally {
                  try {
                    u || i.return == null || i.return();
                  } finally {
                    if (o) throw n;
                  }
                }
                return h;
              }),
              (r.default.XML.prototype.hasAttribute = function (h) {
                var u = {},
                  o = !0,
                  n = !1,
                  s = void 0;
                try {
                  for (
                    var i, a = this.DOM.attributes[Symbol.iterator]();
                    !(o = (i = a.next()).done);
                    o = !0
                  ) {
                    var d = i.value;
                    u[d.nodeName] = d.nodeValue;
                  }
                } catch (g) {
                  (n = !0), (s = g);
                } finally {
                  try {
                    o || a.return == null || a.return();
                  } finally {
                    if (n) throw s;
                  }
                }
                return !!u[h];
              }),
              (r.default.XML.prototype.getNum = function (h, u) {
                var o = {},
                  n = !0,
                  s = !1,
                  i = void 0;
                try {
                  for (
                    var a, d = this.DOM.attributes[Symbol.iterator]();
                    !(n = (a = d.next()).done);
                    n = !0
                  ) {
                    var g = a.value;
                    o[g.nodeName] = g.nodeValue;
                  }
                } catch (_) {
                  (s = !0), (i = _);
                } finally {
                  try {
                    n || d.return == null || d.return();
                  } finally {
                    if (s) throw i;
                  }
                }
                return Number(o[h]) || u || 0;
              }),
              (r.default.XML.prototype.getString = function (h, u) {
                var o = {},
                  n = !0,
                  s = !1,
                  i = void 0;
                try {
                  for (
                    var a, d = this.DOM.attributes[Symbol.iterator]();
                    !(n = (a = d.next()).done);
                    n = !0
                  ) {
                    var g = a.value;
                    o[g.nodeName] = g.nodeValue;
                  }
                } catch (_) {
                  (s = !0), (i = _);
                } finally {
                  try {
                    n || d.return == null || d.return();
                  } finally {
                    if (s) throw i;
                  }
                }
                return o[h] ? String(o[h]) : u || null;
              }),
              (r.default.XML.prototype.setAttribute = function (h, u) {
                this.DOM.setAttribute(h, u);
              }),
              (r.default.XML.prototype.getContent = function (h) {
                return this.DOM.textContent.replace(/\s\s+/g, ',') || h || null;
              }),
              (r.default.XML.prototype.setContent = function (h) {
                this.DOM.children.length || (this.DOM.textContent = h);
              }),
              (r.default.XML.prototype.serialize = function () {
                return new XMLSerializer().serializeToString(this.DOM);
              });
            var l = r.default;
            y.default = l;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.number.constructor': 170,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        294: [
          function (e, v, y) {
            e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.math.hypot'),
              e('core-js/modules/es.number.constructor'),
              e('core-js/modules/es.string.includes'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c() {
              if (typeof Math.hypot == 'function')
                return Math.hypot.apply(null, arguments);
              for (var h = arguments.length, u = [], o = 0, n = 0; n < h; n++) {
                var s = arguments[n];
                if ((s = +s) === 1 / 0 || s === -1 / 0) return 1 / 0;
                o < (s = Math.abs(s)) && (o = s), (u[n] = s);
              }
              o === 0 && (o = 1);
              for (var i = 0, a = 0, d = 0; d < h; d++) {
                var g = u[d] / o,
                  _ = g * g - a,
                  w = i + _;
                (a = w - i - _), (i = w);
              }
              return Math.sqrt(i) * o;
            }
            (r.default.prototype.abs = Math.abs),
              (r.default.prototype.ceil = Math.ceil),
              (r.default.prototype.constrain = function (h, u, o) {
                return (
                  r.default._validateParameters('constrain', arguments),
                  Math.max(Math.min(h, o), u)
                );
              }),
              (r.default.prototype.dist = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return (
                  r.default._validateParameters('dist', u),
                  u.length === 4
                    ? c(u[2] - u[0], u[3] - u[1])
                    : u.length === 6
                    ? c(u[3] - u[0], u[4] - u[1], u[5] - u[2])
                    : void 0
                );
              }),
              (r.default.prototype.exp = Math.exp),
              (r.default.prototype.floor = Math.floor),
              (r.default.prototype.lerp = function (h, u, o) {
                return (
                  r.default._validateParameters('lerp', arguments),
                  o * (u - h) + h
                );
              }),
              (r.default.prototype.log = Math.log),
              (r.default.prototype.mag = function (h, u) {
                return r.default._validateParameters('mag', arguments), c(h, u);
              }),
              (r.default.prototype.map = function (h, u, o, n, s, i) {
                r.default._validateParameters('map', arguments);
                var a = ((h - u) / (o - u)) * (s - n) + n;
                return i
                  ? n < s
                    ? this.constrain(a, n, s)
                    : this.constrain(a, s, n)
                  : a;
              }),
              (r.default.prototype.max = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return u[0] instanceof Array
                  ? Math.max.apply(null, u[0])
                  : Math.max.apply(null, u);
              }),
              (r.default.prototype.min = function () {
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return u[0] instanceof Array
                  ? Math.min.apply(null, u[0])
                  : Math.min.apply(null, u);
              }),
              (r.default.prototype.norm = function (h, u, o) {
                return (
                  r.default._validateParameters('norm', arguments),
                  this.map(h, u, o, 0, 1)
                );
              }),
              (r.default.prototype.pow = Math.pow),
              (r.default.prototype.round = function (h, u) {
                if (!u) return Math.round(h);
                var o = Math.pow(10, u);
                return Math.round(h * o) / o;
              }),
              (r.default.prototype.sq = function (h) {
                return h * h;
              }),
              (r.default.prototype.sqrt = Math.sqrt),
              (r.default.prototype.fract = function (h) {
                r.default._validateParameters('fract', arguments);
                var u = 0,
                  o = Number(h);
                if (isNaN(o) || Math.abs(o) === 1 / 0) return o;
                if (
                  (o < 0 && ((o = -o), (u = 1)),
                  !String(o).includes('.') || String(o).includes('e'))
                )
                  return o < 1 ? Math.abs(u - o) : 0;
                var n = String(o);
                return (
                  (n = Number('0' + n.slice(n.indexOf('.')))), Math.abs(u - n)
                );
              });
            var l = r.default;
            y.default = l;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.math.hypot': 168,
            'core-js/modules/es.number.constructor': 170,
            'core-js/modules/es.string.includes': 185,
          },
        ],
        295: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.reflect.construct'),
              e('core-js/modules/es.regexp.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(u, o, n) {
              return (c = (function () {
                if (
                  typeof Reflect > 'u' ||
                  !Reflect.construct ||
                  Reflect.construct.sham
                )
                  return !1;
                if (typeof Proxy == 'function') return !0;
                try {
                  return (
                    Date.prototype.toString.call(
                      Reflect.construct(Date, [], function () {}),
                    ),
                    !0
                  );
                } catch {
                  return !1;
                }
              })()
                ? Reflect.construct
                : function (s, i, a) {
                    var d = [null];
                    d.push.apply(d, i);
                    var g = new (Function.bind.apply(s, d))();
                    return a && l(g, a.prototype), g;
                  }).apply(null, arguments);
            }
            function l(u, o) {
              return (l =
                Object.setPrototypeOf ||
                function (n, s) {
                  return (n.__proto__ = s), n;
                })(u, o);
            }
            r.default.prototype.createVector = function (u, o, n) {
              return this instanceof r.default
                ? c(
                    r.default.Vector,
                    [
                      this._fromRadians.bind(this),
                      this._toRadians.bind(this),
                    ].concat(Array.prototype.slice.call(arguments)),
                  )
                : new r.default.Vector(u, o, n);
            };
            var h = r.default;
            y.default = h;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.reflect.construct': 179,
            'core-js/modules/es.regexp.to-string': 182,
          },
        ],
        296: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(s) {
              return 0.5 * (1 - Math.cos(s * Math.PI));
            }
            var l,
              h = 4095,
              u = 4,
              o = 0.5;
            (r.default.prototype.noise = function (s) {
              var i =
                  1 < arguments.length && arguments[1] !== void 0
                    ? arguments[1]
                    : 0,
                a =
                  2 < arguments.length && arguments[2] !== void 0
                    ? arguments[2]
                    : 0;
              if (l == null) {
                l = new Array(4096);
                for (var d = 0; d < 4096; d++) l[d] = Math.random();
              }
              s < 0 && (s = -s), i < 0 && (i = -i), a < 0 && (a = -a);
              for (
                var g,
                  _,
                  w,
                  S,
                  M,
                  E = Math.floor(s),
                  O = Math.floor(i),
                  D = Math.floor(a),
                  A = s - E,
                  k = i - O,
                  L = a - D,
                  R = 0,
                  N = 0.5,
                  B = 0;
                B < u;
                B++
              ) {
                var Z = E + (O << 4) + (D << 8);
                (g = c(A)),
                  (_ = c(k)),
                  (w = l[Z & h]),
                  (w += g * (l[(Z + 1) & h] - w)),
                  (S = l[(Z + 16) & h]),
                  (w += _ * ((S += g * (l[(Z + 16 + 1) & h] - S)) - w)),
                  (S = l[(Z += 256) & h]),
                  (S += g * (l[(Z + 1) & h] - S)),
                  (M = l[(Z + 16) & h]),
                  (S += _ * ((M += g * (l[(Z + 16 + 1) & h] - M)) - S)),
                  (R += (w += c(L) * (S - w)) * N),
                  (N *= o),
                  (E <<= 1),
                  (O <<= 1),
                  (D <<= 1),
                  1 <= (A *= 2) && (E++, A--),
                  1 <= (k *= 2) && (O++, k--),
                  1 <= (L *= 2) && (D++, L--);
              }
              return R;
            }),
              (r.default.prototype.noiseDetail = function (s, i) {
                0 < s && (u = s), 0 < i && (o = i);
              }),
              (r.default.prototype.noiseSeed = function (s) {
                var i,
                  a,
                  d,
                  g =
                    ((d = 4294967296),
                    {
                      setSeed: function (w) {
                        a = i = (w == null ? Math.random() * d : w) >>> 0;
                      },
                      getSeed: function () {
                        return i;
                      },
                      rand: function () {
                        return (a = (1664525 * a + 1013904223) % d) / d;
                      },
                    });
                g.setSeed(s), (l = new Array(4096));
                for (var _ = 0; _ < 4096; _++) l[_] = g.rand();
              });
            var n = r.default;
            y.default = n;
          },
          { '../core/main': 264 },
        ],
        297: [
          function (e, v, y) {
            function m(s) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (i) {
                      return typeof i;
                    }
                  : function (i) {
                      return i &&
                        typeof Symbol == 'function' &&
                        i.constructor === Symbol &&
                        i !== Symbol.prototype
                        ? 'symbol'
                        : typeof i;
                    })(s);
            }
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.every'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.some'),
              e('core-js/modules/es.math.sign'),
              e('core-js/modules/es.number.constructor'),
              e('core-js/modules/es.number.is-finite'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.sub'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (s) {
                if (s && s.__esModule) return s;
                if (s === null || (m(s) !== 'object' && typeof s != 'function'))
                  return { default: s };
                var i = h();
                if (i && i.has(s)) return i.get(s);
                var a = {},
                  d = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var g in s)
                  if (Object.prototype.hasOwnProperty.call(s, g)) {
                    var _ = d ? Object.getOwnPropertyDescriptor(s, g) : null;
                    _ && (_.get || _.set)
                      ? Object.defineProperty(a, g, _)
                      : (a[g] = s[g]);
                  }
                return (a.default = s), i && i.set(s, a), a;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var s = new WeakMap();
              return (
                (h = function () {
                  return s;
                }),
                s
              );
            }
            (c.default.Vector = function (s, i, a, d, g) {
              var _, w, S;
              (S =
                {}.toString.call(s) === '[object Function]'
                  ? ((this.isPInst = !0),
                    (this._fromRadians = s),
                    (this._toRadians = i),
                    (_ = a || 0),
                    (w = d || 0),
                    g || 0)
                  : ((_ = s || 0), (w = i || 0), a || 0)),
                (this.x = _),
                (this.y = w),
                (this.z = S);
            }),
              (c.default.Vector.prototype.toString = function () {
                return 'p5.Vector Object : ['
                  .concat(this.x, ', ')
                  .concat(this.y, ', ')
                  .concat(this.z, ']');
              }),
              (c.default.Vector.prototype.set = function (s, i, a) {
                return (
                  s instanceof c.default.Vector
                    ? ((this.x = s.x || 0),
                      (this.y = s.y || 0),
                      (this.z = s.z || 0))
                    : s instanceof Array
                    ? ((this.x = s[0] || 0),
                      (this.y = s[1] || 0),
                      (this.z = s[2] || 0))
                    : ((this.x = s || 0), (this.y = i || 0), (this.z = a || 0)),
                  this
                );
              }),
              (c.default.Vector.prototype.copy = function () {
                return this.isPInst
                  ? new c.default.Vector(
                      this._fromRadians,
                      this._toRadians,
                      this.x,
                      this.y,
                      this.z,
                    )
                  : new c.default.Vector(this.x, this.y, this.z);
              }),
              (c.default.Vector.prototype.add = function (s, i, a) {
                return (
                  s instanceof c.default.Vector
                    ? ((this.x += s.x || 0),
                      (this.y += s.y || 0),
                      (this.z += s.z || 0))
                    : s instanceof Array
                    ? ((this.x += s[0] || 0),
                      (this.y += s[1] || 0),
                      (this.z += s[2] || 0))
                    : ((this.x += s || 0),
                      (this.y += i || 0),
                      (this.z += a || 0)),
                  this
                );
              });
            function u(s, i) {
              return (
                s !== 0 && (this.x = this.x % s),
                i !== 0 && (this.y = this.y % i),
                this
              );
            }
            function o(s, i, a) {
              return (
                s !== 0 && (this.x = this.x % s),
                i !== 0 && (this.y = this.y % i),
                a !== 0 && (this.z = this.z % a),
                this
              );
            }
            (c.default.Vector.prototype.rem = function (s, i, a) {
              if (s instanceof c.default.Vector) {
                if (
                  Number.isFinite(s.x) &&
                  Number.isFinite(s.y) &&
                  Number.isFinite(s.z)
                ) {
                  var d = parseFloat(s.x),
                    g = parseFloat(s.y),
                    _ = parseFloat(s.z);
                  return o.call(this, d, g, _);
                }
              } else if (s instanceof Array) {
                if (
                  s.every(function (M) {
                    return Number.isFinite(M);
                  })
                ) {
                  if (s.length === 2) return u.call(this, s[0], s[1]);
                  if (s.length === 3) return o.call(this, s[0], s[1], s[2]);
                }
              } else if (arguments.length === 1) {
                if (Number.isFinite(s) && s !== 0)
                  return (
                    (this.x = this.x % s),
                    (this.y = this.y % s),
                    (this.z = this.z % s),
                    this
                  );
              } else if (arguments.length === 2) {
                var w = Array.prototype.slice.call(arguments);
                if (
                  w.every(function (M) {
                    return Number.isFinite(M);
                  }) &&
                  w.length === 2
                )
                  return u.call(this, w[0], w[1]);
              } else if (arguments.length === 3) {
                var S = Array.prototype.slice.call(arguments);
                if (
                  S.every(function (M) {
                    return Number.isFinite(M);
                  }) &&
                  S.length === 3
                )
                  return o.call(this, S[0], S[1], S[2]);
              }
            }),
              (c.default.Vector.prototype.sub = function (s, i, a) {
                return (
                  s instanceof c.default.Vector
                    ? ((this.x -= s.x || 0),
                      (this.y -= s.y || 0),
                      (this.z -= s.z || 0))
                    : s instanceof Array
                    ? ((this.x -= s[0] || 0),
                      (this.y -= s[1] || 0),
                      (this.z -= s[2] || 0))
                    : ((this.x -= s || 0),
                      (this.y -= i || 0),
                      (this.z -= a || 0)),
                  this
                );
              }),
              (c.default.Vector.prototype.mult = function (s, i, a) {
                if (s instanceof c.default.Vector)
                  return (
                    Number.isFinite(s.x) &&
                    Number.isFinite(s.y) &&
                    Number.isFinite(s.z) &&
                    typeof s.x == 'number' &&
                    typeof s.y == 'number' &&
                    typeof s.z == 'number'
                      ? ((this.x *= s.x), (this.y *= s.y), (this.z *= s.z))
                      : console.warn(
                          'p5.Vector.prototype.mult:',
                          'x contains components that are either undefined or not finite numbers',
                        ),
                    this
                  );
                if (s instanceof Array)
                  return (
                    s.every(function (g) {
                      return Number.isFinite(g);
                    }) &&
                    s.every(function (g) {
                      return typeof g == 'number';
                    })
                      ? s.length === 1
                        ? ((this.x *= s[0]), (this.y *= s[0]), (this.z *= s[0]))
                        : s.length === 2
                        ? ((this.x *= s[0]), (this.y *= s[1]))
                        : s.length === 3 &&
                          ((this.x *= s[0]), (this.y *= s[1]), (this.z *= s[2]))
                      : console.warn(
                          'p5.Vector.prototype.mult:',
                          'x contains elements that are either undefined or not finite numbers',
                        ),
                    this
                  );
                var d = Array.prototype.slice.call(arguments);
                return (
                  d.every(function (g) {
                    return Number.isFinite(g);
                  }) &&
                  d.every(function (g) {
                    return typeof g == 'number';
                  })
                    ? (arguments.length === 1 &&
                        ((this.x *= s), (this.y *= s), (this.z *= s)),
                      arguments.length === 2 && ((this.x *= s), (this.y *= i)),
                      arguments.length === 3 &&
                        ((this.x *= s), (this.y *= i), (this.z *= a)))
                    : console.warn(
                        'p5.Vector.prototype.mult:',
                        'x, y, or z arguments are either undefined or not a finite number',
                      ),
                  this
                );
              }),
              (c.default.Vector.prototype.div = function (s, i, a) {
                if (s instanceof c.default.Vector) {
                  if (
                    Number.isFinite(s.x) &&
                    Number.isFinite(s.y) &&
                    Number.isFinite(s.z) &&
                    typeof s.x == 'number' &&
                    typeof s.y == 'number' &&
                    typeof s.z == 'number'
                  ) {
                    if (s.x === 0 || s.y === 0 || s.z === 0)
                      return (
                        console.warn('p5.Vector.prototype.div:', 'divide by 0'),
                        this
                      );
                    (this.x /= s.x), (this.y /= s.y), (this.z /= s.z);
                  } else
                    console.warn(
                      'p5.Vector.prototype.div:',
                      'x contains components that are either undefined or not finite numbers',
                    );
                  return this;
                }
                if (s instanceof Array) {
                  if (
                    s.every(function (g) {
                      return Number.isFinite(g);
                    }) &&
                    s.every(function (g) {
                      return typeof g == 'number';
                    })
                  ) {
                    if (
                      s.some(function (g) {
                        return g === 0;
                      })
                    )
                      return (
                        console.warn('p5.Vector.prototype.div:', 'divide by 0'),
                        this
                      );
                    s.length === 1
                      ? ((this.x /= s[0]), (this.y /= s[0]), (this.z /= s[0]))
                      : s.length === 2
                      ? ((this.x /= s[0]), (this.y /= s[1]))
                      : s.length === 3 &&
                        ((this.x /= s[0]), (this.y /= s[1]), (this.z /= s[2]));
                  } else
                    console.warn(
                      'p5.Vector.prototype.div:',
                      'x contains components that are either undefined or not finite numbers',
                    );
                  return this;
                }
                var d = Array.prototype.slice.call(arguments);
                if (
                  d.every(function (g) {
                    return Number.isFinite(g);
                  }) &&
                  d.every(function (g) {
                    return typeof g == 'number';
                  })
                ) {
                  if (
                    d.some(function (g) {
                      return g === 0;
                    })
                  )
                    return (
                      console.warn('p5.Vector.prototype.div:', 'divide by 0'),
                      this
                    );
                  arguments.length === 1 &&
                    ((this.x /= s), (this.y /= s), (this.z /= s)),
                    arguments.length === 2 && ((this.x /= s), (this.y /= i)),
                    arguments.length === 3 &&
                      ((this.x /= s), (this.y /= i), (this.z /= a));
                } else
                  console.warn(
                    'p5.Vector.prototype.div:',
                    'x, y, or z arguments are either undefined or not a finite number',
                  );
                return this;
              }),
              (c.default.Vector.prototype.mag = function () {
                return Math.sqrt(this.magSq());
              }),
              (c.default.Vector.prototype.magSq = function () {
                var s = this.x,
                  i = this.y,
                  a = this.z;
                return s * s + i * i + a * a;
              }),
              (c.default.Vector.prototype.dot = function (s, i, a) {
                return s instanceof c.default.Vector
                  ? this.dot(s.x, s.y, s.z)
                  : this.x * (s || 0) + this.y * (i || 0) + this.z * (a || 0);
              }),
              (c.default.Vector.prototype.cross = function (s) {
                var i = this.y * s.z - this.z * s.y,
                  a = this.z * s.x - this.x * s.z,
                  d = this.x * s.y - this.y * s.x;
                return this.isPInst
                  ? new c.default.Vector(
                      this._fromRadians,
                      this._toRadians,
                      i,
                      a,
                      d,
                    )
                  : new c.default.Vector(i, a, d);
              }),
              (c.default.Vector.prototype.dist = function (s) {
                return s.copy().sub(this).mag();
              }),
              (c.default.Vector.prototype.normalize = function () {
                var s = this.mag();
                return s !== 0 && this.mult(1 / s), this;
              }),
              (c.default.Vector.prototype.limit = function (s) {
                var i = this.magSq();
                return s * s < i && this.div(Math.sqrt(i)).mult(s), this;
              }),
              (c.default.Vector.prototype.setMag = function (s) {
                return this.normalize().mult(s);
              }),
              (c.default.Vector.prototype.heading = function () {
                var s = Math.atan2(this.y, this.x);
                return this.isPInst ? this._fromRadians(s) : s;
              }),
              (c.default.Vector.prototype.setHeading = function (s) {
                var i = this.mag();
                return (
                  (this.x = i * Math.cos(s)), (this.y = i * Math.sin(s)), this
                );
              }),
              (c.default.Vector.prototype.rotate = function (s) {
                var i = this.heading() + s;
                this.isPInst && (i = this._toRadians(i));
                var a = this.mag();
                return (
                  (this.x = Math.cos(i) * a), (this.y = Math.sin(i) * a), this
                );
              }),
              (c.default.Vector.prototype.angleBetween = function (s) {
                var i,
                  a = this.dot(s) / (this.mag() * s.mag());
                return (
                  (i = Math.acos(Math.min(1, Math.max(-1, a)))),
                  (i *= Math.sign(this.cross(s).z || 1)),
                  this.isPInst && (i = this._fromRadians(i)),
                  i
                );
              }),
              (c.default.Vector.prototype.lerp = function (s, i, a, d) {
                return s instanceof c.default.Vector
                  ? this.lerp(s.x, s.y, s.z, i)
                  : ((this.x += (s - this.x) * d || 0),
                    (this.y += (i - this.y) * d || 0),
                    (this.z += (a - this.z) * d || 0),
                    this);
              }),
              (c.default.Vector.prototype.reflect = function (s) {
                return s.normalize(), this.sub(s.mult(2 * this.dot(s)));
              }),
              (c.default.Vector.prototype.array = function () {
                return [this.x || 0, this.y || 0, this.z || 0];
              }),
              (c.default.Vector.prototype.equals = function (s, i, a) {
                var d, g, _;
                return (
                  (_ =
                    s instanceof c.default.Vector
                      ? ((d = s.x || 0), (g = s.y || 0), s.z || 0)
                      : s instanceof Array
                      ? ((d = s[0] || 0), (g = s[1] || 0), s[2] || 0)
                      : ((d = s || 0), (g = i || 0), a || 0)),
                  this.x === d && this.y === g && this.z === _
                );
              }),
              (c.default.Vector.fromAngle = function (s, i) {
                return (
                  i === void 0 && (i = 1),
                  new c.default.Vector(i * Math.cos(s), i * Math.sin(s), 0)
                );
              }),
              (c.default.Vector.fromAngles = function (s, i, a) {
                a === void 0 && (a = 1);
                var d = Math.cos(i),
                  g = Math.sin(i),
                  _ = Math.cos(s),
                  w = Math.sin(s);
                return new c.default.Vector(a * w * g, -a * _, a * w * d);
              }),
              (c.default.Vector.random2D = function () {
                return this.fromAngle(Math.random() * l.TWO_PI);
              }),
              (c.default.Vector.random3D = function () {
                var s = Math.random() * l.TWO_PI,
                  i = 2 * Math.random() - 1,
                  a = Math.sqrt(1 - i * i),
                  d = a * Math.cos(s),
                  g = a * Math.sin(s);
                return new c.default.Vector(d, g, i);
              }),
              (c.default.Vector.add = function (s, i, a) {
                return (
                  a
                    ? a.set(s)
                    : ((a = s.copy()),
                      arguments.length === 3 &&
                        c.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.add',
                        )),
                  a.add(i),
                  a
                );
              }),
              (c.default.Vector.rem = function (s, i) {
                if (
                  s instanceof c.default.Vector &&
                  i instanceof c.default.Vector
                ) {
                  var a = s.copy();
                  return a.rem(i), a;
                }
              }),
              (c.default.Vector.sub = function (s, i, a) {
                return (
                  a
                    ? a.set(s)
                    : ((a = s.copy()),
                      arguments.length === 3 &&
                        c.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.sub',
                        )),
                  a.sub(i),
                  a
                );
              }),
              (c.default.Vector.mult = function (s, i, a) {
                return (
                  a
                    ? a.set(s)
                    : ((a = s.copy()),
                      arguments.length === 3 &&
                        c.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.mult',
                        )),
                  a.mult(i),
                  a
                );
              }),
              (c.default.Vector.rotate = function (s, i, a) {
                return (
                  arguments.length === 2
                    ? (a = s.copy())
                    : (a instanceof c.default.Vector ||
                        c.default._friendlyError(
                          'The target parameter should be of type p5.Vector',
                          'p5.Vector.rotate',
                        ),
                      a.set(s)),
                  a.rotate(i),
                  a
                );
              }),
              (c.default.Vector.div = function (s, i, a) {
                return (
                  a
                    ? a.set(s)
                    : ((a = s.copy()),
                      arguments.length === 3 &&
                        c.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.div',
                        )),
                  a.div(i),
                  a
                );
              }),
              (c.default.Vector.dot = function (s, i) {
                return s.dot(i);
              }),
              (c.default.Vector.cross = function (s, i) {
                return s.cross(i);
              }),
              (c.default.Vector.dist = function (s, i) {
                return s.dist(i);
              }),
              (c.default.Vector.lerp = function (s, i, a, d) {
                return (
                  d
                    ? d.set(s)
                    : ((d = s.copy()),
                      arguments.length === 4 &&
                        c.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.lerp',
                        )),
                  d.lerp(i, a),
                  d
                );
              }),
              (c.default.Vector.mag = function (s) {
                var i = s.x,
                  a = s.y,
                  d = s.z,
                  g = i * i + a * a + d * d;
                return Math.sqrt(g);
              }),
              (c.default.Vector.normalize = function (s, i) {
                return (
                  arguments.length < 2
                    ? (i = s.copy())
                    : (i instanceof c.default.Vector ||
                        c.default._friendlyError(
                          'The target parameter should be of type p5.Vector',
                          'p5.Vector.normalize',
                        ),
                      i.set(s)),
                  i.normalize()
                );
              });
            var n = c.default.Vector;
            y.default = n;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.every': 150,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.some': 163,
            'core-js/modules/es.math.sign': 169,
            'core-js/modules/es.number.constructor': 170,
            'core-js/modules/es.number.is-finite': 171,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.sub': 192,
          },
        ],
        298: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m },
              c = '_lcg_random_state',
              l = 4294967296,
              h = 0;
            (r.default.prototype._lcg = function (o) {
              return (
                (this[o] = (1664525 * this[o] + 1013904223) % l), this[o] / l
              );
            }),
              (r.default.prototype._lcgSetSeed = function (o, n) {
                this[o] = (n == null ? Math.random() * l : n) >>> 0;
              }),
              (r.default.prototype.randomSeed = function (o) {
                this._lcgSetSeed(c, o), (this._gaussian_previous = !1);
              }),
              (r.default.prototype.random = function (o, n) {
                var s;
                if (
                  (r.default._validateParameters('random', arguments),
                  (s = this[c] != null ? this._lcg(c) : Math.random()),
                  o === void 0)
                )
                  return s;
                if (n === void 0)
                  return o instanceof Array
                    ? o[Math.floor(s * o.length)]
                    : s * o;
                if (n < o) {
                  var i = o;
                  (o = n), (n = i);
                }
                return s * (n - o) + o;
              }),
              (r.default.prototype.randomGaussian = function (o) {
                var n,
                  s,
                  i,
                  a,
                  d =
                    1 < arguments.length && arguments[1] !== void 0
                      ? arguments[1]
                      : 1;
                if (this._gaussian_previous)
                  (n = h), (this._gaussian_previous = !1);
                else {
                  for (
                    ;
                    1 <=
                    (a =
                      (s = this.random(2) - 1) * s +
                      (i = this.random(2) - 1) * i);

                  );
                  (n = s * (a = Math.sqrt((-2 * Math.log(a)) / a))),
                    (h = i * a),
                    (this._gaussian_previous = !0);
                }
                return n * d + (o || 0);
              });
            var u = r.default;
            y.default = u;
          },
          { '../core/main': 264 },
        ],
        299: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            (c.default.prototype._angleMode = l.RADIANS),
              (c.default.prototype.acos = function (o) {
                return this._fromRadians(Math.acos(o));
              }),
              (c.default.prototype.asin = function (o) {
                return this._fromRadians(Math.asin(o));
              }),
              (c.default.prototype.atan = function (o) {
                return this._fromRadians(Math.atan(o));
              }),
              (c.default.prototype.atan2 = function (o, n) {
                return this._fromRadians(Math.atan2(o, n));
              }),
              (c.default.prototype.cos = function (o) {
                return Math.cos(this._toRadians(o));
              }),
              (c.default.prototype.sin = function (o) {
                return Math.sin(this._toRadians(o));
              }),
              (c.default.prototype.tan = function (o) {
                return Math.tan(this._toRadians(o));
              }),
              (c.default.prototype.degrees = function (o) {
                return o * l.RAD_TO_DEG;
              }),
              (c.default.prototype.radians = function (o) {
                return o * l.DEG_TO_RAD;
              }),
              (c.default.prototype.angleMode = function (o) {
                if (
                  (c.default._validateParameters('angleMode', arguments),
                  o === void 0)
                )
                  return this._angleMode;
                (o !== l.DEGREES && o !== l.RADIANS) || (this._angleMode = o);
              }),
              (c.default.prototype._toRadians = function (o) {
                return this._angleMode === l.DEGREES ? o * l.DEG_TO_RAD : o;
              }),
              (c.default.prototype._toDegrees = function (o) {
                return this._angleMode === l.RADIANS ? o * l.RAD_TO_DEG : o;
              }),
              (c.default.prototype._fromRadians = function (o) {
                return this._angleMode === l.DEGREES ? o * l.RAD_TO_DEG : o;
              });
            var u = c.default;
            y.default = u;
          },
          { '../core/constants': 253, '../core/main': 264 },
        ],
        300: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.textAlign = function (l, h) {
              var u;
              return (
                r.default._validateParameters('textAlign', arguments),
                (u = this._renderer).textAlign.apply(u, arguments)
              );
            }),
              (r.default.prototype.textLeading = function (l) {
                var h;
                return (
                  r.default._validateParameters('textLeading', arguments),
                  (h = this._renderer).textLeading.apply(h, arguments)
                );
              }),
              (r.default.prototype.textSize = function (l) {
                var h;
                return (
                  r.default._validateParameters('textSize', arguments),
                  (h = this._renderer).textSize.apply(h, arguments)
                );
              }),
              (r.default.prototype.textStyle = function (l) {
                var h;
                return (
                  r.default._validateParameters('textStyle', arguments),
                  (h = this._renderer).textStyle.apply(h, arguments)
                );
              }),
              (r.default.prototype.textWidth = function () {
                for (
                  var l, h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return (
                  (u[0] += ''),
                  r.default._validateParameters('textWidth', u),
                  u[0].length === 0
                    ? 0
                    : (l = this._renderer).textWidth.apply(l, u)
                );
              }),
              (r.default.prototype.textAscent = function () {
                for (
                  var l = arguments.length, h = new Array(l), u = 0;
                  u < l;
                  u++
                )
                  h[u] = arguments[u];
                return (
                  r.default._validateParameters('textAscent', h),
                  this._renderer.textAscent()
                );
              }),
              (r.default.prototype.textDescent = function () {
                for (
                  var l = arguments.length, h = new Array(l), u = 0;
                  u < l;
                  u++
                )
                  h[u] = arguments[u];
                return (
                  r.default._validateParameters('textDescent', h),
                  this._renderer.textDescent()
                );
              }),
              (r.default.prototype._updateTextMetrics = function () {
                return this._renderer._updateTextMetrics();
              }),
              (r.default.prototype.textWrap = function (l) {
                if (l !== 'WORD' && l !== 'CHAR')
                  throw 'Error: textWrap accepts only WORD or CHAR';
                return this._renderer.textWrap(l);
              });
            var c = r.default;
            y.default = c;
          },
          { '../core/main': 264 },
        ],
        301: [
          function (e, v, y) {
            function m(s) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (i) {
                      return typeof i;
                    }
                  : function (i) {
                      return i &&
                        typeof Symbol == 'function' &&
                        i.constructor === Symbol &&
                        i !== Symbol.prototype
                        ? 'symbol'
                        : typeof i;
                    })(s);
            }
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.last-index-of'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = o(e('../core/constants')),
              h = o(e('opentype.js'));
            function u() {
              if (typeof WeakMap != 'function') return null;
              var s = new WeakMap();
              return (
                (u = function () {
                  return s;
                }),
                s
              );
            }
            function o(s) {
              if (s && s.__esModule) return s;
              if (s === null || (m(s) !== 'object' && typeof s != 'function'))
                return { default: s };
              var i = u();
              if (i && i.has(s)) return i.get(s);
              var a = {},
                d = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var g in s)
                if (Object.prototype.hasOwnProperty.call(s, g)) {
                  var _ = d ? Object.getOwnPropertyDescriptor(s, g) : null;
                  _ && (_.get || _.set)
                    ? Object.defineProperty(a, g, _)
                    : (a[g] = s[g]);
                }
              return (a.default = s), i && i.set(s, a), a;
            }
            e('../core/friendly_errors/validate_params'),
              e('../core/friendly_errors/file_errors'),
              e('../core/friendly_errors/fes_core'),
              (c.default.prototype.loadFont = function (s, i, a) {
                c.default._validateParameters('loadFont', arguments);
                var d = new c.default.Font(this),
                  g = this;
                return (
                  h.load(s, function (_, w) {
                    if (_)
                      return (
                        c.default._friendlyFileLoadError(4, s),
                        a !== void 0 ? a(_) : void console.error(_, s)
                      );
                    (d.font = w), i !== void 0 && i(d), g._decrementPreload();
                    var S,
                      M,
                      E = s.split('\\').pop().split('/').pop(),
                      O = E.lastIndexOf('.'),
                      D = O < 1 ? null : E.slice(O + 1);
                    ['ttf', 'otf', 'woff', 'woff2'].includes(D) &&
                      ((S = E.slice(0, O !== -1 ? O : 0)),
                      (M = document.createElement('style')).appendChild(
                        document.createTextNode(
                          `
@font-face {
font-family: `
                            .concat(
                              S,
                              `;
src: url(`,
                            )
                            .concat(
                              s,
                              `);
}
`,
                            ),
                        ),
                      ),
                      document.head.appendChild(M));
                  }),
                  d
                );
              }),
              (c.default.prototype.text = function (s, i, a, d, g) {
                var _;
                return (
                  c.default._validateParameters('text', arguments),
                  this._renderer._doFill || this._renderer._doStroke
                    ? (_ = this._renderer).text.apply(_, arguments)
                    : this
                );
              }),
              (c.default.prototype.textFont = function (s, i) {
                if (
                  (c.default._validateParameters('textFont', arguments),
                  arguments.length)
                ) {
                  if (!s) throw new Error('null font passed to textFont');
                  return (
                    this._renderer._setProperty('_textFont', s),
                    i &&
                      (this._renderer._setProperty('_textSize', i),
                      this._renderer._leadingSet ||
                        this._renderer._setProperty(
                          '_textLeading',
                          i * l._DEFAULT_LEADMULT,
                        )),
                    this._renderer._applyTextProperties()
                  );
                }
                return this._renderer._textFont;
              });
            var n = c.default;
            y.default = n;
          },
          {
            '../core/constants': 253,
            '../core/friendly_errors/fes_core': 255,
            '../core/friendly_errors/file_errors': 256,
            '../core/friendly_errors/validate_params': 259,
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.last-index-of': 160,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.split': 191,
            'opentype.js': 239,
          },
        ],
        302: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.fill'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.splice'),
              e('core-js/modules/es.function.name'),
              e('core-js/modules/es.number.to-fixed'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m },
              c = (function (A) {
                if (A && A.__esModule) return A;
                if (A === null || (h(A) !== 'object' && typeof A != 'function'))
                  return { default: A };
                var k = l();
                if (k && k.has(A)) return k.get(A);
                var L = {},
                  R = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var N in A)
                  if (Object.prototype.hasOwnProperty.call(A, N)) {
                    var B = R ? Object.getOwnPropertyDescriptor(A, N) : null;
                    B && (B.get || B.set)
                      ? Object.defineProperty(L, N, B)
                      : (L[N] = A[N]);
                  }
                return (L.default = A), k && k.set(A, L), L;
              })(e('../core/constants'));
            function l() {
              if (typeof WeakMap != 'function') return null;
              var A = new WeakMap();
              return (
                (l = function () {
                  return A;
                }),
                A
              );
            }
            function h(A) {
              return (h =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (k) {
                      return typeof k;
                    }
                  : function (k) {
                      return k &&
                        typeof Symbol == 'function' &&
                        k.constructor === Symbol &&
                        k !== Symbol.prototype
                        ? 'symbol'
                        : typeof k;
                    })(A);
            }
            function u(A, k) {
              for (
                var L = (function (J, $) {
                    if (h(J) !== 'object') J = $;
                    else for (var ee in $) J[ee] === void 0 && (J[ee] = $[ee]);
                    return J;
                  })(k, { sampleFactor: 0.1, simplifyThreshold: 0 }),
                  R = g(A, 0, 1),
                  N = R / (R * L.sampleFactor),
                  B = [],
                  Z = 0;
                Z < R;
                Z += N
              )
                B.push(g(A, Z));
              return (
                L.simplifyThreshold &&
                  (function (J) {
                    for (
                      var $ =
                          1 < arguments.length && arguments[1] !== void 0
                            ? arguments[1]
                            : 0,
                        ee = 0,
                        Q = J.length - 1;
                      3 < J.length && 0 <= Q;
                      --Q
                    )
                      i(s(J, Q - 1), s(J, Q), s(J, Q + 1), $) &&
                        (J.splice(Q % J.length, 1), ee++);
                  })(B, L.simplifyThreshold),
                B
              );
            }
            function o(A) {
              for (var k, L = [], R = 0; R < A.length; R++)
                A[R].type === 'M' && (k && L.push(k), (k = [])),
                  k.push(n(A[R]));
              return L.push(k), L;
            }
            function n(A) {
              var k = [A.type];
              return (
                A.type === 'M' || A.type === 'L'
                  ? k.push(A.x, A.y)
                  : A.type === 'C'
                  ? k.push(A.x1, A.y1, A.x2, A.y2, A.x, A.y)
                  : A.type === 'Q' && k.push(A.x1, A.y1, A.x, A.y),
                k
              );
            }
            function s(A, k) {
              var L = A.length;
              return A[k < 0 ? (k % L) + L : k % L];
            }
            function i(A, k, L, R) {
              if (!R)
                return (
                  (N = A),
                  (Z = L),
                  ((B = k)[0] - N[0]) * (Z[1] - N[1]) -
                    (Z[0] - N[0]) * (B[1] - N[1]) ==
                    0
                );
              var N, B, Z;
              i.tmpPoint1 === void 0 &&
                ((i.tmpPoint1 = []), (i.tmpPoint2 = []));
              var J = i.tmpPoint1,
                $ = i.tmpPoint2;
              (J.x = k.x - A.x),
                (J.y = k.y - A.y),
                ($.x = L.x - k.x),
                ($.y = L.y - k.y);
              var ee = J.x * $.x + J.y * $.y,
                Q = Math.sqrt(J.x * J.x + J.y * J.y),
                oe = Math.sqrt($.x * $.x + $.y * $.y);
              return Math.acos(ee / (Q * oe)) < R;
            }
            function a(A, k, L, R, N, B, Z, J, $) {
              var ee = 1 - $,
                Q = Math.pow(ee, 3),
                oe = Math.pow(ee, 2),
                ce = $ * $,
                ve = ce * $,
                de = Q * A + 3 * oe * $ * L + 3 * ee * $ * $ * N + ve * Z,
                Se = Q * k + 3 * oe * $ * R + 3 * ee * $ * $ * B + ve * J,
                fe = A + 2 * $ * (L - A) + ce * (N - 2 * L + A),
                ye = k + 2 * $ * (R - k) + ce * (B - 2 * R + k),
                P = L + 2 * $ * (N - L) + ce * (Z - 2 * N + L),
                U = R + 2 * $ * (B - R) + ce * (J - 2 * B + R),
                W = ee * A + $ * L,
                K = ee * k + $ * R,
                ne = ee * N + $ * Z,
                re = ee * B + $ * J,
                we = 90 - (180 * Math.atan2(fe - P, ye - U)) / Math.PI;
              return (
                (P < fe || ye < U) && (we += 180),
                {
                  x: de,
                  y: Se,
                  m: { x: fe, y: ye },
                  n: { x: P, y: U },
                  start: { x: W, y: K },
                  end: { x: ne, y: re },
                  alpha: we,
                }
              );
            }
            function d(A, k, L, R, N, B, Z, J, $) {
              return $ == null
                ? E(A, k, L, R, N, B, Z, J)
                : a(
                    A,
                    k,
                    L,
                    R,
                    N,
                    B,
                    Z,
                    J,
                    (function (ee, Q, oe, ce, ve, de, Se, fe, ye) {
                      if (!(ye < 0 || E(ee, Q, oe, ce, ve, de, Se, fe) < ye)) {
                        var P,
                          U = 0.5,
                          W = 1 - U;
                        for (
                          P = E(ee, Q, oe, ce, ve, de, Se, fe, W);
                          0.01 < Math.abs(P - ye);

                        )
                          P = E(
                            ee,
                            Q,
                            oe,
                            ce,
                            ve,
                            de,
                            Se,
                            fe,
                            (W += (P < ye ? 1 : -1) * (U /= 2)),
                          );
                        return W;
                      }
                    })(A, k, L, R, N, B, Z, J, $),
                  );
            }
            function g(A, k, L) {
              for (
                var R,
                  N,
                  B,
                  Z,
                  J,
                  $ = 0,
                  ee = 0,
                  Q = (A = (function (oe, ce) {
                    function ve(je, Te, Ne) {
                      var ze, qe;
                      if (!je) return ['C', Te.x, Te.y, Te.x, Te.y, Te.x, Te.y];
                      switch (
                        ((je[0] in { T: 1, Q: 1 }) || (Te.qx = Te.qy = null),
                        je[0])
                      ) {
                        case 'M':
                          (Te.X = je[1]), (Te.Y = je[2]);
                          break;
                        case 'A':
                          je = ['C'].concat(
                            function Fe(nt, ke, Ae, Ve, We, ge, Qe, G, z, V) {
                              var H = Math.PI,
                                ae = (120 * H) / 180,
                                _e,
                                Ee,
                                De,
                                me,
                                Be = (H / 180) * (+We || 0),
                                Ke = [],
                                st,
                                at = function (xt, lt, He) {
                                  var Rt =
                                      xt * Math.cos(He) - lt * Math.sin(He),
                                    tt = xt * Math.sin(He) + lt * Math.cos(He);
                                  return { x: Rt, y: tt };
                                };
                              if (V)
                                (_e = V[0]),
                                  (Ee = V[1]),
                                  (De = V[2]),
                                  (me = V[3]);
                              else {
                                (st = at(nt, ke, -Be)),
                                  (nt = st.x),
                                  (ke = st.y),
                                  (st = at(G, z, -Be)),
                                  (G = st.x),
                                  (z = st.y);
                                var ot = (nt - G) / 2,
                                  it = (ke - z) / 2,
                                  gt =
                                    (ot * ot) / (Ae * Ae) +
                                    (it * it) / (Ve * Ve);
                                1 < gt &&
                                  ((gt = Math.sqrt(gt)),
                                  (Ae *= gt),
                                  (Ve *= gt));
                                var Sr = Ae * Ae,
                                  tr = Ve * Ve,
                                  rn =
                                    (ge === Qe ? -1 : 1) *
                                    Math.sqrt(
                                      Math.abs(
                                        (Sr * tr -
                                          Sr * it * it -
                                          tr * ot * ot) /
                                          (Sr * it * it + tr * ot * ot),
                                      ),
                                    );
                                (De = (rn * Ae * it) / Ve + (nt + G) / 2),
                                  (me = (rn * -Ve * ot) / Ae + (ke + z) / 2),
                                  (_e = Math.asin(((ke - me) / Ve).toFixed(9))),
                                  (Ee = Math.asin(((z - me) / Ve).toFixed(9))),
                                  (_e = nt < De ? H - _e : _e) < 0 &&
                                    (_e = 2 * H + _e),
                                  (Ee = G < De ? H - Ee : Ee) < 0 &&
                                    (Ee = 2 * H + Ee),
                                  Qe && Ee < _e && (_e -= 2 * H),
                                  !Qe && _e < Ee && (Ee -= 2 * H);
                              }
                              var Dr = Ee - _e;
                              if (Math.abs(Dr) > ae) {
                                var Tr = Ee,
                                  nn = G,
                                  sn = z;
                                (Ee = _e + ae * (Qe && _e < Ee ? 1 : -1)),
                                  (G = De + Ae * Math.cos(Ee)),
                                  (z = me + Ve * Math.sin(Ee)),
                                  (Ke = Fe(G, z, Ae, Ve, We, 0, Qe, nn, sn, [
                                    Ee,
                                    Tr,
                                    De,
                                    me,
                                  ]));
                              }
                              Dr = Ee - _e;
                              var on = Math.cos(_e),
                                an = Math.sin(_e),
                                ln = Math.cos(Ee),
                                Cn = Math.sin(Ee),
                                qr = Math.tan(Dr / 4),
                                zr = (4 / 3) * Ae * qr,
                                le = (4 / 3) * Ve * qr,
                                Re = [nt, ke],
                                Ge = [nt + zr * an, ke - le * on],
                                Ie = [G + zr * Cn, z - le * ln],
                                Ye = [G, z];
                              (Ge[0] = 2 * Re[0] - Ge[0]),
                                (Ge[1] = 2 * Re[1] - Ge[1]);
                              {
                                if (V) return [Ge, Ie, Ye].concat(Ke);
                                Ke = [Ge, Ie, Ye].concat(Ke).join().split(',');
                                for (
                                  var Pe = [], ft = 0, bt = Ke.length;
                                  ft < bt;
                                  ft++
                                )
                                  Pe[ft] =
                                    ft % 2
                                      ? at(Ke[ft - 1], Ke[ft], Be).y
                                      : at(Ke[ft], Ke[ft + 1], Be).x;
                                return Pe;
                              }
                            }.apply(0, [Te.x, Te.y].concat(je.slice(1))),
                          );
                          break;
                        case 'S':
                          (qe =
                            Ne === 'C' || Ne === 'S'
                              ? ((ze = 2 * Te.x - Te.bx), 2 * Te.y - Te.by)
                              : ((ze = Te.x), Te.y)),
                            (je = ['C', ze, qe].concat(je.slice(1)));
                          break;
                        case 'T':
                          Ne === 'Q' || Ne === 'T'
                            ? ((Te.qx = 2 * Te.x - Te.qx),
                              (Te.qy = 2 * Te.y - Te.qy))
                            : ((Te.qx = Te.x), (Te.qy = Te.y)),
                            (je = ['C'].concat(
                              M(Te.x, Te.y, Te.qx, Te.qy, je[1], je[2]),
                            ));
                          break;
                        case 'Q':
                          (Te.qx = je[1]),
                            (Te.qy = je[2]),
                            (je = ['C'].concat(
                              M(Te.x, Te.y, je[1], je[2], je[3], je[4]),
                            ));
                          break;
                        case 'L':
                          je = ['C'].concat(S(Te.x, Te.y, je[1], je[2]));
                          break;
                        case 'H':
                          je = ['C'].concat(S(Te.x, Te.y, je[1], Te.y));
                          break;
                        case 'V':
                          je = ['C'].concat(S(Te.x, Te.y, Te.x, je[1]));
                          break;
                        case 'Z':
                          je = ['C'].concat(S(Te.x, Te.y, Te.X, Te.Y));
                      }
                      return je;
                    }
                    function de(je, Te) {
                      if (7 < je[Te].length) {
                        je[Te].shift();
                        for (var Ne = je[Te]; Ne.length; )
                          (K[Te] = 'A'),
                            P && (ne[Te] = 'A'),
                            je.splice(Te++, 0, ['C'].concat(Ne.splice(0, 6)));
                        je.splice(Te, 1),
                          (fe = Math.max(ye.length, (P && P.length) || 0));
                      }
                    }
                    function Se(je, Te, Ne, ze, qe) {
                      je &&
                        Te &&
                        je[qe][0] === 'M' &&
                        Te[qe][0] !== 'M' &&
                        (Te.splice(qe, 0, ['M', ze.x, ze.y]),
                        (Ne.bx = 0),
                        (Ne.by = 0),
                        (Ne.x = je[qe][1]),
                        (Ne.y = je[qe][2]),
                        (fe = Math.max(ye.length, (P && P.length) || 0)));
                    }
                    var fe,
                      ye = _(oe),
                      P = ce && _(ce),
                      U = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null,
                      },
                      W = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null,
                      },
                      K = [],
                      ne = [],
                      re = '',
                      we = '';
                    fe = Math.max(ye.length, (P && P.length) || 0);
                    for (var X = 0; X < fe; X++) {
                      ye[X] && (re = ye[X][0]),
                        re !== 'C' && ((K[X] = re), X && (we = K[X - 1])),
                        (ye[X] = ve(ye[X], U, we)),
                        K[X] !== 'A' && re === 'C' && (K[X] = 'C'),
                        de(ye, X),
                        P &&
                          (P[X] && (re = P[X][0]),
                          re !== 'C' && ((ne[X] = re), X && (we = ne[X - 1])),
                          (P[X] = ve(P[X], W, we)),
                          ne[X] !== 'A' && re === 'C' && (ne[X] = 'C'),
                          de(P, X)),
                        Se(ye, P, U, W, X),
                        Se(P, ye, W, U, X);
                      var ue = ye[X],
                        he = P && P[X],
                        ie = ue.length,
                        xe = P && he.length;
                      (U.x = ue[ie - 2]),
                        (U.y = ue[ie - 1]),
                        (U.bx = parseFloat(ue[ie - 4]) || U.x),
                        (U.by = parseFloat(ue[ie - 3]) || U.y),
                        (W.bx = P && (parseFloat(he[xe - 4]) || W.x)),
                        (W.by = P && (parseFloat(he[xe - 3]) || W.y)),
                        (W.x = P && he[xe - 2]),
                        (W.y = P && he[xe - 1]);
                    }
                    return P ? [ye, P] : ye;
                  })(A)).length;
                ee < Q;
                ee++
              ) {
                if ((B = A[ee])[0] === 'M') (R = +B[1]), (N = +B[2]);
                else {
                  if (
                    k < $ + (Z = d(R, N, B[1], B[2], B[3], B[4], B[5], B[6])) &&
                    !L
                  )
                    return {
                      x: (J = d(
                        R,
                        N,
                        B[1],
                        B[2],
                        B[3],
                        B[4],
                        B[5],
                        B[6],
                        k - $,
                      )).x,
                      y: J.y,
                      alpha: J.alpha,
                    };
                  ($ += Z), (R = +B[5]), (N = +B[6]);
                }
                B.shift() + B;
              }
              return (
                (J = L ? $ : a(R, N, B[0], B[1], B[2], B[3], B[4], B[5], 1))
                  .alpha && (J = { x: J.x, y: J.y, alpha: J.alpha }),
                J
              );
            }
            function _(A) {
              var k,
                L = [],
                R = 0,
                N = 0,
                B = 0,
                Z = 0,
                J = 0;
              if (!A) return L;
              A[0][0] === 'M' &&
                ((B = R = +A[0][1]),
                (Z = N = +A[0][2]),
                J++,
                (L[0] = ['M', R, N]));
              for (
                var $,
                  ee,
                  Q =
                    A.length === 3 &&
                    A[0][0] === 'M' &&
                    A[1][0].toUpperCase() === 'R' &&
                    A[2][0].toUpperCase() === 'Z',
                  oe = J,
                  ce = A.length;
                oe < ce;
                oe++
              ) {
                if (
                  (L.push(($ = [])),
                  (ee = A[oe])[0] !== String.prototype.toUpperCase.call(ee[0]))
                )
                  switch (
                    (($[0] = String.prototype.toUpperCase.call(ee[0])), $[0])
                  ) {
                    case 'A':
                      ($[1] = ee[1]),
                        ($[2] = ee[2]),
                        ($[3] = ee[3]),
                        ($[4] = ee[4]),
                        ($[5] = ee[5]),
                        ($[6] = +(ee[6] + R)),
                        ($[7] = +(ee[7] + N));
                      break;
                    case 'V':
                      $[1] = +ee[1] + N;
                      break;
                    case 'H':
                      $[1] = +ee[1] + R;
                      break;
                    case 'R':
                      for (
                        var ve = 2,
                          de = (k = [R, N].concat(ee.slice(1))).length;
                        ve < de;
                        ve++
                      )
                        (k[ve] = +k[ve] + R), (k[++ve] = +k[ve] + N);
                      L.pop(), (L = L.concat(w(k, Q)));
                      break;
                    case 'M':
                      (B = +ee[1] + R), (Z = +ee[2] + N);
                      break;
                    default:
                      for (var Se = 1, fe = ee.length; Se < fe; Se++)
                        $[Se] = +ee[Se] + (Se % 2 ? R : N);
                  }
                else if (ee[0] === 'R')
                  (k = [R, N].concat(ee.slice(1))),
                    L.pop(),
                    (L = L.concat(w(k, Q))),
                    ($ = ['R'].concat(ee.slice(-2)));
                else
                  for (var ye = 0, P = ee.length; ye < P; ye++) $[ye] = ee[ye];
                switch ($[0]) {
                  case 'Z':
                    (R = B), (N = Z);
                    break;
                  case 'H':
                    R = $[1];
                    break;
                  case 'V':
                    N = $[1];
                    break;
                  case 'M':
                    (B = $[$.length - 2]), (Z = $[$.length - 1]);
                    break;
                  default:
                    (R = $[$.length - 2]), (N = $[$.length - 1]);
                }
              }
              return L;
            }
            function w(A, k) {
              for (var L = [], R = 0, N = A.length; R < N - 2 * !k; R += 2) {
                var B = [
                  { x: +A[R - 2], y: +A[R - 1] },
                  { x: +A[R], y: +A[R + 1] },
                  { x: +A[R + 2], y: +A[R + 3] },
                  { x: +A[R + 4], y: +A[R + 5] },
                ];
                k
                  ? R
                    ? N - 4 === R
                      ? (B[3] = { x: +A[0], y: +A[1] })
                      : N - 2 === R &&
                        ((B[2] = { x: +A[0], y: +A[1] }),
                        (B[3] = { x: +A[2], y: +A[3] }))
                    : (B[0] = { x: +A[N - 2], y: +A[N - 1] })
                  : N - 4 === R
                  ? (B[3] = B[2])
                  : R || (B[0] = { x: +A[R], y: +A[R + 1] }),
                  L.push([
                    'C',
                    (-B[0].x + 6 * B[1].x + B[2].x) / 6,
                    (-B[0].y + 6 * B[1].y + B[2].y) / 6,
                    (B[1].x + 6 * B[2].x - B[3].x) / 6,
                    (B[1].y + 6 * B[2].y - B[3].y) / 6,
                    B[2].x,
                    B[2].y,
                  ]);
              }
              return L;
            }
            function S(A, k, L, R) {
              return [A, k, L, R, L, R];
            }
            function M(A, k, L, R, N, B) {
              return [
                (1 / 3) * A + (2 / 3) * L,
                (1 / 3) * k + (2 / 3) * R,
                (1 / 3) * N + (2 / 3) * L,
                (1 / 3) * B + (2 / 3) * R,
                N,
                B,
              ];
            }
            function E(A, k, L, R, N, B, Z, J, $) {
              $ == null && ($ = 1);
              for (
                var ee = ($ = 1 < $ ? 1 : $ < 0 ? 0 : $) / 2,
                  Q = [
                    -0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699,
                    0.7699, -0.9041, 0.9041, -0.9816, 0.9816,
                  ],
                  oe = 0,
                  ce = [
                    0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601,
                    0.1601, 0.1069, 0.1069, 0.0472, 0.0472,
                  ],
                  ve = 0;
                ve < 12;
                ve++
              ) {
                var de = ee * Q[ve] + ee,
                  Se = O(de, A, L, N, Z),
                  fe = O(de, k, R, B, J),
                  ye = Se * Se + fe * fe;
                oe += ce[ve] * Math.sqrt(ye);
              }
              return ee * oe;
            }
            function O(A, k, L, R, N) {
              return (
                A *
                  (A * (-3 * k + 9 * L - 9 * R + 3 * N) +
                    6 * k -
                    12 * L +
                    6 * R) -
                3 * k +
                3 * L
              );
            }
            (r.default.Font = function (A) {
              (this.parent = A), (this.cache = {}), (this.font = void 0);
            }),
              (r.default.Font.prototype.textBounds = function (A) {
                var k,
                  L =
                    1 < arguments.length && arguments[1] !== void 0
                      ? arguments[1]
                      : 0,
                  R =
                    2 < arguments.length && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  N = 3 < arguments.length ? arguments[3] : void 0,
                  B = 4 < arguments.length ? arguments[4] : void 0,
                  Z = (B && B.renderer && B.renderer._pInst) || this.parent,
                  J = Z._renderer.drawingContext;
                if (
                  (J.textAlign || c.LEFT,
                  J.textBaseline || c.BASELINE,
                  (N = N || Z._renderer._textSize),
                  !k)
                ) {
                  var $,
                    ee,
                    Q = [],
                    oe = [],
                    ce = [];
                  ce[0] = [];
                  var ve = [],
                    de = this._scale(N),
                    Se = Z._renderer.textLeading(),
                    fe = 0;
                  this.font.forEachGlyph(
                    A,
                    L,
                    R,
                    N,
                    B,
                    function (K, ne, re, we) {
                      var X = K.getMetrics();
                      K.index === 0 || K.index === 10
                        ? (ce[(fe += 1)] = [])
                        : (ce[fe].push(ne + X.xMin * de),
                          ce[fe].push(ne + X.xMax * de),
                          ve.push(re + fe * Se + -X.yMin * de),
                          ve.push(re + fe * Se + -X.yMax * de));
                    },
                  ),
                    0 < ce[fe].length &&
                      ((Q[fe] = Math.min.apply(null, ce[fe])),
                      (oe[fe] = Math.max.apply(null, ce[fe])));
                  for (var ye = 0, P = 0; P <= fe; P++) {
                    (Q[P] = Math.min.apply(null, ce[P])),
                      (oe[P] = Math.max.apply(null, ce[P]));
                    var U = oe[P] - Q[P];
                    ye < U && (ye = U);
                  }
                  var W = Math.min.apply(null, Q);
                  (k = {
                    x: W,
                    y: ($ = Math.min.apply(null, ve)),
                    h: Math.max.apply(null, ve) - $,
                    w: ye,
                    advance: W - L,
                  }),
                    (ee = this._handleAlignment(
                      Z._renderer,
                      A,
                      k.x,
                      k.y,
                      k.w + k.advance,
                    )),
                    (k.x = ee.x),
                    (k.y = ee.y);
                }
                return k;
              }),
              (r.default.Font.prototype.textToPoints = function (
                A,
                k,
                L,
                R,
                N,
              ) {
                var B,
                  Z = 0,
                  J = [],
                  $ = this._getGlyphs(A);
                R = R || this.parent._renderer._textSize;
                for (var ee = 0; ee < $.length; ee++) {
                  if (
                    !(
                      ($[(B = ee)].name && $[B].name === 'space') ||
                      (A.length === $.length && A[B] === ' ')
                    )
                  )
                    for (
                      var Q = o($[ee].getPath(k, L, R).commands), oe = 0;
                      oe < Q.length;
                      oe++
                    )
                      for (var ce = u(Q[oe], N), ve = 0; ve < ce.length; ve++)
                        (ce[ve].x += Z), J.push(ce[ve]);
                  Z += $[ee].advanceWidth * this._scale(R);
                }
                return J;
              }),
              (r.default.Font.prototype._getGlyphs = function (A) {
                return this.font.stringToGlyphs(A);
              }),
              (r.default.Font.prototype._getPath = function (A, k, L, R) {
                var N = ((R && R.renderer && R.renderer._pInst) || this.parent)
                    ._renderer,
                  B = this._handleAlignment(N, A, k, L);
                return this.font.getPath(A, B.x, B.y, N._textSize, R);
              }),
              (r.default.Font.prototype._getPathData = function (A, k, L, R) {
                var N = 3;
                return (
                  typeof A == 'string' && 2 < arguments.length
                    ? (A = this._getPath(A, k, L, R))
                    : h(k) === 'object' && (R = k),
                  R && typeof R.decimals == 'number' && (N = R.decimals),
                  A.toPathData(N)
                );
              }),
              (r.default.Font.prototype._getSVG = function (A, k, L, R) {
                var N = 3;
                return (
                  typeof A == 'string' && 2 < arguments.length
                    ? (A = this._getPath(A, k, L, R))
                    : h(k) === 'object' && (R = k),
                  R &&
                    (typeof R.decimals == 'number' && (N = R.decimals),
                    typeof R.strokeWidth == 'number' &&
                      (A.strokeWidth = R.strokeWidth),
                    R.fill !== void 0 && (A.fill = R.fill),
                    R.stroke !== void 0 && (A.stroke = R.stroke)),
                  A.toSVG(N)
                );
              }),
              (r.default.Font.prototype._renderPath = function (A, k, L, R) {
                var N,
                  B = (R && R.renderer) || this.parent._renderer,
                  Z = B.drawingContext;
                (N =
                  h(A) === 'object' && A.commands
                    ? A.commands
                    : this._getPath(A, k, L, R).commands),
                  Z.beginPath();
                var J = !0,
                  $ = !1,
                  ee = void 0;
                try {
                  for (
                    var Q, oe = N[Symbol.iterator]();
                    !(J = (Q = oe.next()).done);
                    J = !0
                  ) {
                    var ce = Q.value;
                    ce.type === 'M'
                      ? Z.moveTo(ce.x, ce.y)
                      : ce.type === 'L'
                      ? Z.lineTo(ce.x, ce.y)
                      : ce.type === 'C'
                      ? Z.bezierCurveTo(ce.x1, ce.y1, ce.x2, ce.y2, ce.x, ce.y)
                      : ce.type === 'Q'
                      ? Z.quadraticCurveTo(ce.x1, ce.y1, ce.x, ce.y)
                      : ce.type === 'Z' && Z.closePath();
                  }
                } catch (ve) {
                  ($ = !0), (ee = ve);
                } finally {
                  try {
                    J || oe.return == null || oe.return();
                  } finally {
                    if ($) throw ee;
                  }
                }
                return (
                  B._doStroke && B._strokeSet && Z.stroke(),
                  B._doFill &&
                    (B._fillSet || B._setFill(c._DEFAULT_TEXT_FILL), Z.fill()),
                  this
                );
              }),
              (r.default.Font.prototype._textWidth = function (A, k) {
                return this.font.getAdvanceWidth(A, k);
              }),
              (r.default.Font.prototype._textAscent = function (A) {
                return this.font.ascender * this._scale(A);
              }),
              (r.default.Font.prototype._textDescent = function (A) {
                return -this.font.descender * this._scale(A);
              }),
              (r.default.Font.prototype._scale = function (A) {
                return (
                  (1 / this.font.unitsPerEm) *
                  (A || this.parent._renderer._textSize)
                );
              }),
              (r.default.Font.prototype._handleAlignment = function (
                A,
                k,
                L,
                R,
                N,
              ) {
                var B = A._textSize;
                switch (
                  (N === void 0 && (N = this._textWidth(k, B)), A._textAlign)
                ) {
                  case c.CENTER:
                    L -= N / 2;
                    break;
                  case c.RIGHT:
                    L -= N;
                }
                switch (A._textBaseline) {
                  case c.TOP:
                    R += this._textAscent(B);
                    break;
                  case c.CENTER:
                    R += this._textAscent(B) / 2;
                    break;
                  case c.BOTTOM:
                    R -= this._textDescent(B);
                }
                return { x: L, y: R };
              });
            var D = r.default;
            y.default = D;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 151,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.number.to-fixed': 172,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        303: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.splice'),
              e('core-js/modules/es.array-buffer.constructor'),
              e('core-js/modules/es.object.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.append = function (l, h) {
              return l.push(h), l;
            }),
              (r.default.prototype.arrayCopy = function (l, h, u, o, n) {
                var s, i;
                (l =
                  n !== void 0
                    ? ((i = Math.min(n, l.length)), (s = o), l.slice(h, i + h))
                    : ((i =
                        u !== void 0
                          ? ((i = u), Math.min(i, l.length))
                          : l.length),
                      (s = 0),
                      (u = h),
                      l.slice(0, i))),
                  Array.prototype.splice.apply(u, [s, i].concat(l));
              }),
              (r.default.prototype.concat = function (l, h) {
                return l.concat(h);
              }),
              (r.default.prototype.reverse = function (l) {
                return l.reverse();
              }),
              (r.default.prototype.shorten = function (l) {
                return l.pop(), l;
              }),
              (r.default.prototype.shuffle = function (l, h) {
                for (
                  var u,
                    o,
                    n =
                      ArrayBuffer &&
                      ArrayBuffer.isView &&
                      ArrayBuffer.isView(l),
                    s = (l = h || n ? l : l.slice()).length;
                  1 < s;

                )
                  (u = (this.random(0, 1) * s) | 0),
                    (o = l[--s]),
                    (l[s] = l[u]),
                    (l[u] = o);
                return l;
              }),
              (r.default.prototype.sort = function (l, h) {
                var u = h ? l.slice(0, Math.min(h, l.length)) : l,
                  o = h ? l.slice(Math.min(h, l.length)) : [];
                return (u =
                  typeof u[0] == 'string'
                    ? u.sort()
                    : u.sort(function (n, s) {
                        return n - s;
                      })).concat(o);
              }),
              (r.default.prototype.splice = function (l, h, u) {
                return Array.prototype.splice.apply(l, [u, 0].concat(h)), l;
              }),
              (r.default.prototype.subset = function (l, h, u) {
                return u !== void 0 ? l.slice(h, h + u) : l.slice(h, l.length);
              });
            var c = r.default;
            y.default = c;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array-buffer.constructor': 148,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.object.to-string': 177,
          },
        ],
        304: [
          function (e, v, y) {
            e('core-js/modules/es.array.map'),
              e('core-js/modules/es.number.constructor'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.repeat'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.float = function (l) {
              return l instanceof Array ? l.map(parseFloat) : parseFloat(l);
            }),
              (r.default.prototype.int = function (l) {
                var h =
                  1 < arguments.length && arguments[1] !== void 0
                    ? arguments[1]
                    : 10;
                return l === 1 / 0 || l === 'Infinity'
                  ? 1 / 0
                  : l === -1 / 0 || l === '-Infinity'
                  ? -1 / 0
                  : typeof l == 'string'
                  ? parseInt(l, h)
                  : typeof l == 'number'
                  ? 0 | l
                  : typeof l == 'boolean'
                  ? l
                    ? 1
                    : 0
                  : l instanceof Array
                  ? l.map(function (u) {
                      return r.default.prototype.int(u, h);
                    })
                  : void 0;
              }),
              (r.default.prototype.str = function (l) {
                return l instanceof Array
                  ? l.map(r.default.prototype.str)
                  : String(l);
              }),
              (r.default.prototype.boolean = function (l) {
                return typeof l == 'number'
                  ? l !== 0
                  : typeof l == 'string'
                  ? l.toLowerCase() === 'true'
                  : typeof l == 'boolean'
                  ? l
                  : l instanceof Array
                  ? l.map(r.default.prototype.boolean)
                  : void 0;
              }),
              (r.default.prototype.byte = function (l) {
                var h = r.default.prototype.int(l, 10);
                return typeof h == 'number'
                  ? ((h + 128) % 256) - 128
                  : h instanceof Array
                  ? h.map(r.default.prototype.byte)
                  : void 0;
              }),
              (r.default.prototype.char = function (l) {
                return typeof l != 'number' || isNaN(l)
                  ? l instanceof Array
                    ? l.map(r.default.prototype.char)
                    : typeof l == 'string'
                    ? r.default.prototype.char(parseInt(l, 10))
                    : void 0
                  : String.fromCharCode(l);
              }),
              (r.default.prototype.unchar = function (l) {
                return typeof l == 'string' && l.length === 1
                  ? l.charCodeAt(0)
                  : l instanceof Array
                  ? l.map(r.default.prototype.unchar)
                  : void 0;
              }),
              (r.default.prototype.hex = function (l, h) {
                if (((h = h == null ? (h = 8) : h), l instanceof Array))
                  return l.map(function (o) {
                    return r.default.prototype.hex(o, h);
                  });
                if (l === 1 / 0 || l === -1 / 0)
                  return (l === 1 / 0 ? 'F' : '0').repeat(h);
                if (typeof l == 'number') {
                  l < 0 && (l = 4294967295 + l + 1);
                  for (
                    var u = Number(l).toString(16).toUpperCase();
                    u.length < h;

                  )
                    u = '0'.concat(u);
                  return (
                    u.length >= h && (u = u.substring(u.length - h, u.length)),
                    u
                  );
                }
              }),
              (r.default.prototype.unhex = function (l) {
                return l instanceof Array
                  ? l.map(r.default.prototype.unhex)
                  : parseInt('0x'.concat(l), 16);
              });
            var c = r.default;
            y.default = c;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.number.constructor': 170,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.repeat': 188,
          },
        ],
        305: [
          function (e, v, y) {
            e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.join'),
              e('core-js/modules/es.array.map'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.constructor'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.match'),
              e('core-js/modules/es.string.replace'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(n, s, i) {
              var a = n < 0,
                d = a ? n.toString().substring(1) : n.toString(),
                g = d.indexOf('.'),
                _ = g !== -1 ? d.substring(0, g) : d,
                w = g !== -1 ? d.substring(g + 1) : '',
                S = a ? '-' : '';
              if (i !== void 0) {
                var M = '';
                (g !== -1 || 0 < i - w.length) && (M = '.'),
                  w.length > i && (w = w.substring(0, i));
                for (var E = 0; E < s - _.length; E++) S += '0';
                (S += _), (S += M), (S += w);
                for (var O = 0; O < i - w.length; O++) S += '0';
                return S;
              }
              for (var D = 0; D < Math.max(s - _.length, 0); D++) S += '0';
              return (S += d);
            }
            function l(n, s) {
              var i = (n = n.toString()).indexOf('.'),
                a = i !== -1 ? n.substring(i) : '',
                d = i !== -1 ? n.substring(0, i) : n;
              if (
                ((d = d.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')),
                s === 0)
              )
                a = '';
              else if (s !== void 0)
                if (s > a.length)
                  for (
                    var g = s - (a += i === -1 ? '.' : '').length + 1, _ = 0;
                    _ < g;
                    _++
                  )
                    a += '0';
                else a = a.substring(0, s + 1);
              return d + a;
            }
            function h(n) {
              return 0 < parseFloat(n)
                ? '+'.concat(n.toString())
                : n.toString();
            }
            function u(n) {
              return 0 <= parseFloat(n)
                ? ' '.concat(n.toString())
                : n.toString();
            }
            e('../core/friendly_errors/validate_params'),
              e('../core/friendly_errors/file_errors'),
              e('../core/friendly_errors/fes_core'),
              (r.default.prototype.join = function (n, s) {
                return (
                  r.default._validateParameters('join', arguments), n.join(s)
                );
              }),
              (r.default.prototype.match = function (n, s) {
                return (
                  r.default._validateParameters('match', arguments), n.match(s)
                );
              }),
              (r.default.prototype.matchAll = function (n, s) {
                r.default._validateParameters('matchAll', arguments);
                for (
                  var i = new RegExp(s, 'g'), a = i.exec(n), d = [];
                  a !== null;

                )
                  d.push(a), (a = i.exec(n));
                return d;
              }),
              (r.default.prototype.nf = function (n, s, i) {
                return (
                  r.default._validateParameters('nf', arguments),
                  n instanceof Array
                    ? n.map(function (a) {
                        return c(a, s, i);
                      })
                    : Object.prototype.toString.call(n) === '[object Arguments]'
                    ? n.length === 3
                      ? this.nf(n[0], n[1], n[2])
                      : n.length === 2
                      ? this.nf(n[0], n[1])
                      : this.nf(n[0])
                    : c(n, s, i)
                );
              }),
              (r.default.prototype.nfc = function (n, s) {
                return (
                  r.default._validateParameters('nfc', arguments),
                  n instanceof Array
                    ? n.map(function (i) {
                        return l(i, s);
                      })
                    : l(n, s)
                );
              }),
              (r.default.prototype.nfp = function () {
                for (
                  var n = arguments.length, s = new Array(n), i = 0;
                  i < n;
                  i++
                )
                  s[i] = arguments[i];
                r.default._validateParameters('nfp', s);
                var a = r.default.prototype.nf.apply(this, s);
                return a instanceof Array ? a.map(h) : h(a);
              }),
              (r.default.prototype.nfs = function () {
                for (
                  var n = arguments.length, s = new Array(n), i = 0;
                  i < n;
                  i++
                )
                  s[i] = arguments[i];
                r.default._validateParameters('nfs', s);
                var a = r.default.prototype.nf.apply(this, s);
                return a instanceof Array ? a.map(u) : u(a);
              }),
              (r.default.prototype.split = function (n, s) {
                return (
                  r.default._validateParameters('split', arguments), n.split(s)
                );
              }),
              (r.default.prototype.splitTokens = function (n, s) {
                var i;
                if (
                  (r.default._validateParameters('splitTokens', arguments),
                  s !== void 0)
                ) {
                  var a = s,
                    d = /\]/g.exec(a),
                    g = /\[/g.exec(a);
                  i =
                    g && d
                      ? ((a = a.slice(0, d.index) + a.slice(d.index + 1)),
                        (g = /\[/g.exec(a)),
                        (a = a.slice(0, g.index) + a.slice(g.index + 1)),
                        new RegExp('[\\['.concat(a, '\\]]'), 'g'))
                      : d
                      ? ((a = a.slice(0, d.index) + a.slice(d.index + 1)),
                        new RegExp('['.concat(a, '\\]]'), 'g'))
                      : g
                      ? ((a = a.slice(0, g.index) + a.slice(g.index + 1)),
                        new RegExp('['.concat(a, '\\[]'), 'g'))
                      : new RegExp('['.concat(a, ']'), 'g');
                } else i = /\s/g;
                return n.split(i).filter(function (_) {
                  return _;
                });
              }),
              (r.default.prototype.trim = function (n) {
                return (
                  r.default._validateParameters('trim', arguments),
                  n instanceof Array ? n.map(this.trim) : n.trim()
                );
              });
            var o = r.default;
            y.default = o;
          },
          {
            '../core/friendly_errors/fes_core': 255,
            '../core/friendly_errors/file_errors': 256,
            '../core/friendly_errors/validate_params': 259,
            '../core/main': 264,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
          },
        ],
        306: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.day = function () {
              return new Date().getDate();
            }),
              (r.default.prototype.hour = function () {
                return new Date().getHours();
              }),
              (r.default.prototype.minute = function () {
                return new Date().getMinutes();
              }),
              (r.default.prototype.millis = function () {
                return this._millisStart === -1
                  ? 0
                  : window.performance.now() - this._millisStart;
              }),
              (r.default.prototype.month = function () {
                return new Date().getMonth() + 1;
              }),
              (r.default.prototype.second = function () {
                return new Date().getSeconds();
              }),
              (r.default.prototype.year = function () {
                return new Date().getFullYear();
              });
            var c = r.default;
            y.default = c;
          },
          { '../core/main': 264 },
        ],
        307: [
          function (e, v, y) {
            function m(n) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(n);
            }
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.number.to-fixed'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r };
            e('./p5.Geometry');
            var l = (function (n) {
              if (n && n.__esModule) return n;
              if (n === null || (m(n) !== 'object' && typeof n != 'function'))
                return { default: n };
              var s = h();
              if (s && s.has(n)) return s.get(n);
              var i = {},
                a = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var d in n)
                if (Object.prototype.hasOwnProperty.call(n, d)) {
                  var g = a ? Object.getOwnPropertyDescriptor(n, d) : null;
                  g && (g.get || g.set)
                    ? Object.defineProperty(i, d, g)
                    : (i[d] = n[d]);
                }
              return (i.default = n), s && s.set(n, i), i;
            })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var n = new WeakMap();
              return (
                (h = function () {
                  return n;
                }),
                n
              );
            }
            (c.default.prototype.plane = function (n, s, i, a) {
              this._assert3d('plane'),
                c.default._validateParameters('plane', arguments),
                n === void 0 && (n = 50),
                s === void 0 && (s = n),
                i === void 0 && (i = 1),
                a === void 0 && (a = 1);
              var d = 'plane|'.concat(i, '|').concat(a);
              if (!this._renderer.geometryInHash(d)) {
                var g = new c.default.Geometry(i, a, function () {
                  for (var _, w, S, M = 0; M <= this.detailY; M++) {
                    w = M / this.detailY;
                    for (var E = 0; E <= this.detailX; E++)
                      (_ = E / this.detailX),
                        (S = new c.default.Vector(_ - 0.5, w - 0.5, 0)),
                        this.vertices.push(S),
                        this.uvs.push(_, w);
                  }
                });
                g.computeFaces().computeNormals(),
                  i <= 1 && a <= 1
                    ? g._makeTriangleEdges()._edgesToVertices()
                    : this._renderer._doStroke &&
                      console.log(
                        'Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY',
                      ),
                  this._renderer.createBuffers(d, g);
              }
              return this._renderer.drawBuffersScaled(d, n, s, 1), this;
            }),
              (c.default.prototype.box = function (n, s, i, a, d) {
                this._assert3d('box'),
                  c.default._validateParameters('box', arguments),
                  n === void 0 && (n = 50),
                  s === void 0 && (s = n),
                  i === void 0 && (i = s);
                var g =
                  this._renderer.attributes &&
                  this._renderer.attributes.perPixelLighting;
                a === void 0 && (a = g ? 1 : 4),
                  d === void 0 && (d = g ? 1 : 4);
                var _ = 'box|'.concat(a, '|').concat(d);
                if (!this._renderer.geometryInHash(_)) {
                  var w = new c.default.Geometry(a, d, function () {
                    var S = [
                      [0, 4, 2, 6],
                      [1, 3, 5, 7],
                      [0, 1, 4, 5],
                      [2, 6, 3, 7],
                      [0, 2, 1, 3],
                      [4, 5, 6, 7],
                    ];
                    this.strokeIndices = [
                      [0, 1],
                      [1, 3],
                      [3, 2],
                      [6, 7],
                      [8, 9],
                      [9, 11],
                      [14, 15],
                      [16, 17],
                      [17, 19],
                      [18, 19],
                      [20, 21],
                      [22, 23],
                    ];
                    for (var M = 0; M < S.length; M++) {
                      for (var E = S[M], O = 4 * M, D = 0; D < 4; D++) {
                        var A = E[D],
                          k = new c.default.Vector(
                            (2 * (1 & A) - 1) / 2,
                            ((2 & A) - 1) / 2,
                            ((4 & A) / 2 - 1) / 2,
                          );
                        this.vertices.push(k),
                          this.uvs.push(1 & D, (2 & D) / 2);
                      }
                      this.faces.push([O, 1 + O, 2 + O]),
                        this.faces.push([2 + O, 1 + O, 3 + O]);
                    }
                  });
                  w.computeNormals(),
                    a <= 4 && d <= 4
                      ? w._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw stroke on box objects with more than 4 detailX or 4 detailY',
                        ),
                    this._renderer.createBuffers(_, w);
                }
                return this._renderer.drawBuffersScaled(_, n, s, i), this;
              }),
              (c.default.prototype.sphere = function (n, s, i) {
                return (
                  this._assert3d('sphere'),
                  c.default._validateParameters('sphere', arguments),
                  n === void 0 && (n = 50),
                  s === void 0 && (s = 24),
                  i === void 0 && (i = 16),
                  this.ellipsoid(n, n, n, s, i),
                  this
                );
              });
            function u(n, s, i, a, d, g, _) {
              (n = n <= 0 ? 1 : n),
                (s = s < 0 ? 0 : s),
                (i = i <= 0 ? n : i),
                (a = a < 3 ? 3 : a);
              var w,
                S,
                M,
                E = (g = g === void 0 || g) ? -2 : 0,
                O =
                  (d = d < 1 ? 1 : d) +
                  ((_ = _ === void 0 ? s !== 0 : _) ? 2 : 0),
                D = Math.atan2(n - s, i),
                A = Math.sin(D),
                k = Math.cos(D);
              for (w = E; w <= O; ++w) {
                var L = w / d,
                  R = i * L,
                  N = void 0;
                for (
                  N =
                    w < 0
                      ? ((L = R = 0), n)
                      : d < w
                      ? ((R = i), (L = 1), s)
                      : n + (s - n) * L,
                    (w !== -2 && w !== d + 2) || (N = 0),
                    R -= i / 2,
                    S = 0;
                  S < a;
                  ++S
                ) {
                  var B = S / (a - 1),
                    Z = 2 * Math.PI * B,
                    J = Math.sin(Z),
                    $ = Math.cos(Z);
                  this.vertices.push(new c.default.Vector(J * N, R, $ * N));
                  var ee = void 0;
                  (ee =
                    w < 0
                      ? new c.default.Vector(0, -1, 0)
                      : d < w && s
                      ? new c.default.Vector(0, 1, 0)
                      : new c.default.Vector(J * k, A, $ * k)),
                    this.vertexNormals.push(ee),
                    this.uvs.push(B, L);
                }
              }
              var Q = 0;
              if (g) {
                for (M = 0; M < a; ++M) {
                  var oe = (M + 1) % a;
                  this.faces.push([Q + M, Q + a + oe, Q + a + M]);
                }
                Q += 2 * a;
              }
              for (w = 0; w < d; ++w) {
                for (S = 0; S < a; ++S) {
                  var ce = (S + 1) % a;
                  this.faces.push([Q + S, Q + ce, Q + a + ce]),
                    this.faces.push([Q + S, Q + a + ce, Q + a + S]);
                }
                Q += a;
              }
              if (_)
                for (Q += a, S = 0; S < a; ++S)
                  this.faces.push([Q + S, Q + ((S + 1) % a), Q + a]);
            }
            (c.default.prototype.cylinder = function (n, s, i, a, d, g) {
              this._assert3d('cylinder'),
                c.default._validateParameters('cylinder', arguments),
                n === void 0 && (n = 50),
                s === void 0 && (s = n),
                i === void 0 && (i = 24),
                a === void 0 && (a = 1),
                g === void 0 && (g = !0),
                d === void 0 && (d = !0);
              var _ = 'cylinder|'
                .concat(i, '|')
                .concat(a, '|')
                .concat(d, '|')
                .concat(g);
              if (!this._renderer.geometryInHash(_)) {
                var w = new c.default.Geometry(i, a);
                u.call(w, 1, 1, 1, i, a, d, g),
                  i <= 24 && a <= 16
                    ? w._makeTriangleEdges()._edgesToVertices()
                    : this._renderer._doStroke &&
                      console.log(
                        'Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY',
                      ),
                  this._renderer.createBuffers(_, w);
              }
              return this._renderer.drawBuffersScaled(_, n, s, n), this;
            }),
              (c.default.prototype.cone = function (n, s, i, a, d) {
                this._assert3d('cone'),
                  c.default._validateParameters('cone', arguments),
                  n === void 0 && (n = 50),
                  s === void 0 && (s = n),
                  i === void 0 && (i = 24),
                  a === void 0 && (a = 1),
                  d === void 0 && (d = !0);
                var g = 'cone|'.concat(i, '|').concat(a, '|').concat(d);
                if (!this._renderer.geometryInHash(g)) {
                  var _ = new c.default.Geometry(i, a);
                  u.call(_, 1, 0, 1, i, a, d, !1),
                    i <= 24 && a <= 16
                      ? _._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY',
                        ),
                    this._renderer.createBuffers(g, _);
                }
                return this._renderer.drawBuffersScaled(g, n, s, n), this;
              }),
              (c.default.prototype.ellipsoid = function (n, s, i, a, d) {
                this._assert3d('ellipsoid'),
                  c.default._validateParameters('ellipsoid', arguments),
                  n === void 0 && (n = 50),
                  s === void 0 && (s = n),
                  i === void 0 && (i = n),
                  a === void 0 && (a = 24),
                  d === void 0 && (d = 16);
                var g = 'ellipsoid|'.concat(a, '|').concat(d);
                if (!this._renderer.geometryInHash(g)) {
                  var _ = new c.default.Geometry(a, d, function () {
                    for (var w = 0; w <= this.detailY; w++)
                      for (
                        var S = w / this.detailY,
                          M = Math.PI * S - Math.PI / 2,
                          E = Math.cos(M),
                          O = Math.sin(M),
                          D = 0;
                        D <= this.detailX;
                        D++
                      ) {
                        var A = D / this.detailX,
                          k = 2 * Math.PI * A,
                          L = Math.cos(k),
                          R = Math.sin(k),
                          N = new c.default.Vector(E * R, O, E * L);
                        this.vertices.push(N),
                          this.vertexNormals.push(N),
                          this.uvs.push(A, S);
                      }
                  });
                  _.computeFaces(),
                    a <= 24 && d <= 24
                      ? _._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY',
                        ),
                    this._renderer.createBuffers(g, _);
                }
                return this._renderer.drawBuffersScaled(g, n, s, i), this;
              }),
              (c.default.prototype.torus = function (n, s, i, a) {
                if (
                  (this._assert3d('torus'),
                  c.default._validateParameters('torus', arguments),
                  n === void 0)
                )
                  n = 50;
                else if (!n) return;
                if (s === void 0) s = 10;
                else if (!s) return;
                i === void 0 && (i = 24), a === void 0 && (a = 16);
                var d = (s / n).toPrecision(4),
                  g = 'torus|'.concat(d, '|').concat(i, '|').concat(a);
                if (!this._renderer.geometryInHash(g)) {
                  var _ = new c.default.Geometry(i, a, function () {
                    for (var w = 0; w <= this.detailY; w++)
                      for (
                        var S = w / this.detailY,
                          M = 2 * Math.PI * S,
                          E = Math.cos(M),
                          O = Math.sin(M),
                          D = 1 + d * E,
                          A = 0;
                        A <= this.detailX;
                        A++
                      ) {
                        var k = A / this.detailX,
                          L = 2 * Math.PI * k,
                          R = Math.cos(L),
                          N = Math.sin(L),
                          B = new c.default.Vector(D * R, D * N, d * O),
                          Z = new c.default.Vector(E * R, E * N, O);
                        this.vertices.push(B),
                          this.vertexNormals.push(Z),
                          this.uvs.push(k, S);
                      }
                  });
                  _.computeFaces(),
                    i <= 24 && a <= 16
                      ? _._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw strokes on torus object with more than 24 detailX or 16 detailY',
                        ),
                    this._renderer.createBuffers(g, _);
                }
                return this._renderer.drawBuffersScaled(g, n, n, n), this;
              }),
              (c.default.RendererGL.prototype.point = function (n, s, i) {
                i === void 0 && (i = 0);
                var a = [];
                return (
                  a.push(new c.default.Vector(n, s, i)),
                  this._drawPoints(a, this.immediateMode.buffers.point),
                  this
                );
              }),
              (c.default.RendererGL.prototype.triangle = function (n) {
                var s = n[0],
                  i = n[1],
                  a = n[2],
                  d = n[3],
                  g = n[4],
                  _ = n[5];
                if (!this.geometryInHash('tri')) {
                  var w = new c.default.Geometry(1, 1, function () {
                    var E = [];
                    E.push(new c.default.Vector(0, 0, 0)),
                      E.push(new c.default.Vector(0, 1, 0)),
                      E.push(new c.default.Vector(1, 0, 0)),
                      (this.strokeIndices = [
                        [0, 1],
                        [1, 2],
                        [2, 0],
                      ]),
                      (this.vertices = E),
                      (this.faces = [[0, 1, 2]]),
                      (this.uvs = [0, 0, 0, 1, 1, 1]);
                  });
                  w._makeTriangleEdges()._edgesToVertices(),
                    w.computeNormals(),
                    this.createBuffers('tri', w);
                }
                var S = this.uMVMatrix.copy();
                try {
                  var M = new c.default.Matrix([
                    a - s,
                    d - i,
                    0,
                    0,
                    g - s,
                    _ - i,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    s,
                    i,
                    0,
                    1,
                  ]).mult(this.uMVMatrix);
                  (this.uMVMatrix = M), this.drawBuffers('tri');
                } finally {
                  this.uMVMatrix = S;
                }
                return this;
              }),
              (c.default.RendererGL.prototype.ellipse = function (n) {
                this.arc(n[0], n[1], n[2], n[3], 0, l.TWO_PI, l.OPEN, n[4]);
              }),
              (c.default.RendererGL.prototype.arc = function (n) {
                var s,
                  i,
                  a = n,
                  d = arguments[1],
                  g = arguments[2],
                  _ = arguments[3],
                  w = arguments[4],
                  S = arguments[5],
                  M = arguments[6],
                  E = arguments[7] || 25;
                if (
                  ((i =
                    Math.abs(S - w) >= l.TWO_PI
                      ? ''.concat((s = 'ellipse'), '|').concat(E, '|')
                      : ''
                          .concat((s = 'arc'), '|')
                          .concat(w, '|')
                          .concat(S, '|')
                          .concat(M, '|')
                          .concat(E, '|')),
                  !this.geometryInHash(i))
                ) {
                  var O = new c.default.Geometry(E, 1, function () {
                    if (
                      ((this.strokeIndices = []),
                      w.toFixed(10) !== S.toFixed(10))
                    ) {
                      (M !== l.PIE && M !== void 0) ||
                        (this.vertices.push(new c.default.Vector(0.5, 0.5, 0)),
                        this.uvs.push([0.5, 0.5]));
                      for (var A = 0; A <= E; A++) {
                        var k = (S - w) * (A / E) + w,
                          L = 0.5 + Math.cos(k) / 2,
                          R = 0.5 + Math.sin(k) / 2;
                        this.vertices.push(new c.default.Vector(L, R, 0)),
                          this.uvs.push([L, R]),
                          A < E - 1 &&
                            (this.faces.push([0, A + 1, A + 2]),
                            this.strokeIndices.push([A + 1, A + 2]));
                      }
                      switch (M) {
                        case l.PIE:
                          this.faces.push([
                            0,
                            this.vertices.length - 2,
                            this.vertices.length - 1,
                          ]),
                            this.strokeIndices.push([0, 1]),
                            this.strokeIndices.push([
                              this.vertices.length - 2,
                              this.vertices.length - 1,
                            ]),
                            this.strokeIndices.push([
                              0,
                              this.vertices.length - 1,
                            ]);
                          break;
                        case l.CHORD:
                          this.strokeIndices.push([0, 1]),
                            this.strokeIndices.push([
                              0,
                              this.vertices.length - 1,
                            ]);
                          break;
                        case l.OPEN:
                          this.strokeIndices.push([0, 1]);
                          break;
                        default:
                          this.faces.push([
                            0,
                            this.vertices.length - 2,
                            this.vertices.length - 1,
                          ]),
                            this.strokeIndices.push([
                              this.vertices.length - 2,
                              this.vertices.length - 1,
                            ]);
                      }
                    }
                  });
                  O.computeNormals(),
                    E <= 50
                      ? O._makeTriangleEdges()._edgesToVertices(O)
                      : this._doStroke &&
                        console.log(
                          'Cannot apply a stroke to an '.concat(
                            s,
                            ' with more than 50 detail',
                          ),
                        ),
                    this.createBuffers(i, O);
                }
                var D = this.uMVMatrix.copy();
                try {
                  this.uMVMatrix.translate([a, d, 0]),
                    this.uMVMatrix.scale(g, _, 1),
                    this.drawBuffers(i);
                } finally {
                  this.uMVMatrix = D;
                }
                return this;
              }),
              (c.default.RendererGL.prototype.rect = function (n) {
                var s = this._pInst._glAttributes.perPixelLighting,
                  i = n[0],
                  a = n[1],
                  d = n[2],
                  g = n[3],
                  _ = n[4] || (s ? 1 : 24),
                  w = n[5] || (s ? 1 : 16),
                  S = 'rect|'.concat(_, '|').concat(w);
                if (!this.geometryInHash(S)) {
                  var M = new c.default.Geometry(_, w, function () {
                    for (var O = 0; O <= this.detailY; O++)
                      for (
                        var D = O / this.detailY, A = 0;
                        A <= this.detailX;
                        A++
                      ) {
                        var k = A / this.detailX,
                          L = new c.default.Vector(k, D, 0);
                        this.vertices.push(L), this.uvs.push(k, D);
                      }
                    0 < _ &&
                      0 < w &&
                      (this.strokeIndices = [
                        [0, _],
                        [_, (_ + 1) * (w + 1) - 1],
                        [(_ + 1) * (w + 1) - 1, (_ + 1) * w],
                        [(_ + 1) * w, 0],
                      ]);
                  });
                  M.computeFaces()
                    .computeNormals()
                    ._makeTriangleEdges()
                    ._edgesToVertices(),
                    this.createBuffers(S, M);
                }
                var E = this.uMVMatrix.copy();
                try {
                  this.uMVMatrix.translate([i, a, 0]),
                    this.uMVMatrix.scale(d, g, 1),
                    this.drawBuffers(S);
                } finally {
                  this.uMVMatrix = E;
                }
                return this;
              }),
              (c.default.RendererGL.prototype.quad = function (
                n,
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
                M,
                E,
                O,
                D,
                A,
              ) {
                D === void 0 && (D = 2), A === void 0 && (A = 2);
                var k = 'quad|'
                  .concat(n, '|')
                  .concat(s, '|')
                  .concat(i, '|')
                  .concat(a, '|')
                  .concat(d, '|')
                  .concat(g, '|')
                  .concat(_, '|')
                  .concat(w, '|')
                  .concat(S, '|')
                  .concat(M, '|')
                  .concat(E, '|')
                  .concat(O, '|')
                  .concat(D, '|')
                  .concat(A);
                if (!this.geometryInHash(k)) {
                  var L = new c.default.Geometry(D, A, function () {
                    for (
                      var ee = 1 / (this.detailX - 1),
                        Q = 1 / (this.detailY - 1),
                        oe = 0;
                      oe < this.detailY;
                      oe++
                    )
                      for (var ce = 0; ce < this.detailX; ce++) {
                        var ve = ce * ee,
                          de = oe * Q,
                          Se =
                            (1 - ve) * ((1 - de) * n + de * M) +
                            ve * ((1 - de) * a + de * _),
                          fe =
                            (1 - ve) * ((1 - de) * s + de * E) +
                            ve * ((1 - de) * d + de * w),
                          ye =
                            (1 - ve) * ((1 - de) * i + de * O) +
                            ve * ((1 - de) * g + de * S);
                        this.vertices.push(new c.default.Vector(Se, fe, ye)),
                          this.uvs.push([ve, de]);
                      }
                  });
                  L.faces = [];
                  for (var R = 0; R < A - 1; R++)
                    for (var N = 0; N < D - 1; N++) {
                      var B = N + R * D,
                        Z = N + 1 + R * D,
                        J = N + 1 + (R + 1) * D,
                        $ = N + (R + 1) * D;
                      L.faces.push([B, Z, J]), L.faces.push([B, J, $]);
                    }
                  L.computeNormals()._makeTriangleEdges()._edgesToVertices(),
                    this.createBuffers(k, L);
                }
                return this.drawBuffers(k), this;
              }),
              (c.default.RendererGL.prototype.bezier = function (
                n,
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
                M,
                E,
                O,
              ) {
                arguments.length === 8 &&
                  ((E = w),
                  (M = _),
                  (w = g),
                  (_ = d),
                  (d = a),
                  (a = i),
                  (i = g = S = O = 0));
                var D = this._pInst._bezierDetail || 20;
                this.beginShape();
                for (var A = 0; A <= D; A++) {
                  var k = Math.pow(1 - A / D, 3),
                    L = (A / D) * 3 * Math.pow(1 - A / D, 2),
                    R = 3 * Math.pow(A / D, 2) * (1 - A / D),
                    N = Math.pow(A / D, 3);
                  this.vertex(
                    n * k + a * L + _ * R + M * N,
                    s * k + d * L + w * R + E * N,
                    i * k + g * L + S * R + O * N,
                  );
                }
                return this.endShape(), this;
              }),
              (c.default.RendererGL.prototype.curve = function (
                n,
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
                M,
                E,
                O,
              ) {
                arguments.length === 8 &&
                  ((M = _),
                  (E = w),
                  (_ = d),
                  (w = a),
                  (d = a = i),
                  (i = g = S = O = 0));
                var D = this._pInst._curveDetail;
                this.beginShape();
                for (var A = 0; A <= D; A++) {
                  var k = 0.5 * Math.pow(A / D, 3),
                    L = 0.5 * Math.pow(A / D, 2),
                    R = (A / D) * 0.5,
                    N =
                      k * (3 * a - n - 3 * _ + M) +
                      L * (2 * n - 5 * a + 4 * _ - M) +
                      R * (-n + _) +
                      2 * a * 0.5,
                    B =
                      k * (3 * d - s - 3 * w + E) +
                      L * (2 * s - 5 * d + 4 * w - E) +
                      R * (-s + w) +
                      2 * d * 0.5,
                    Z =
                      k * (3 * g - i - 3 * S + O) +
                      L * (2 * i - 5 * g + 4 * S - O) +
                      R * (-i + S) +
                      2 * g * 0.5;
                  this.vertex(N, B, Z);
                }
                return this.endShape(), this;
              }),
              (c.default.RendererGL.prototype.line = function () {
                return (
                  arguments.length === 6
                    ? (this.beginShape(l.LINES),
                      this.vertex(
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        arguments.length <= 2 ? void 0 : arguments[2],
                      ),
                      this.vertex(
                        arguments.length <= 3 ? void 0 : arguments[3],
                        arguments.length <= 4 ? void 0 : arguments[4],
                        arguments.length <= 5 ? void 0 : arguments[5],
                      ),
                      this.endShape())
                    : arguments.length === 4 &&
                      (this.beginShape(l.LINES),
                      this.vertex(
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        0,
                      ),
                      this.vertex(
                        arguments.length <= 2 ? void 0 : arguments[2],
                        arguments.length <= 3 ? void 0 : arguments[3],
                        0,
                      ),
                      this.endShape()),
                  this
                );
              }),
              (c.default.RendererGL.prototype.bezierVertex = function () {
                if (this.immediateMode._bezierVertex.length === 0)
                  throw Error(
                    'vertex() must be used once before calling bezierVertex()',
                  );
                var n,
                  s,
                  i,
                  a,
                  d,
                  g = [],
                  _ = [],
                  w = [],
                  S = arguments.length;
                if (
                  (n = 0) === this._lookUpTableBezier.length ||
                  this._lutBezierDetail !== this._pInst._curveDetail
                ) {
                  (this._lookUpTableBezier = []),
                    (this._lutBezierDetail = this._pInst._curveDetail);
                  for (
                    var M = 1 / this._lutBezierDetail, E = 0, O = 1, D = 0;
                    E < 1;

                  ) {
                    if (
                      ((n = parseFloat(E.toFixed(6))),
                      (this._lookUpTableBezier[D] =
                        this._bezierCoefficients(n)),
                      O.toFixed(6) === M.toFixed(6))
                    ) {
                      (n = parseFloat(O.toFixed(6)) + parseFloat(E.toFixed(6))),
                        ++D,
                        (this._lookUpTableBezier[D] =
                          this._bezierCoefficients(n));
                      break;
                    }
                    (E += M), (O -= M), ++D;
                  }
                }
                var A = this._lookUpTableBezier.length;
                if (S === 6) {
                  for (
                    this.isBezier = !0,
                      g = [
                        this.immediateMode._bezierVertex[0],
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 2 ? void 0 : arguments[2],
                        arguments.length <= 4 ? void 0 : arguments[4],
                      ],
                      _ = [
                        this.immediateMode._bezierVertex[1],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        arguments.length <= 3 ? void 0 : arguments[3],
                        arguments.length <= 5 ? void 0 : arguments[5],
                      ],
                      d = 0;
                    d < A;
                    d++
                  )
                    (s =
                      g[0] * this._lookUpTableBezier[d][0] +
                      g[1] * this._lookUpTableBezier[d][1] +
                      g[2] * this._lookUpTableBezier[d][2] +
                      g[3] * this._lookUpTableBezier[d][3]),
                      (i =
                        _[0] * this._lookUpTableBezier[d][0] +
                        _[1] * this._lookUpTableBezier[d][1] +
                        _[2] * this._lookUpTableBezier[d][2] +
                        _[3] * this._lookUpTableBezier[d][3]),
                      this.vertex(s, i);
                  (this.immediateMode._bezierVertex[0] =
                    arguments.length <= 4 ? void 0 : arguments[4]),
                    (this.immediateMode._bezierVertex[1] =
                      arguments.length <= 5 ? void 0 : arguments[5]);
                } else if (S === 9) {
                  for (
                    this.isBezier = !0,
                      g = [
                        this.immediateMode._bezierVertex[0],
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 3 ? void 0 : arguments[3],
                        arguments.length <= 6 ? void 0 : arguments[6],
                      ],
                      _ = [
                        this.immediateMode._bezierVertex[1],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        arguments.length <= 4 ? void 0 : arguments[4],
                        arguments.length <= 7 ? void 0 : arguments[7],
                      ],
                      w = [
                        this.immediateMode._bezierVertex[2],
                        arguments.length <= 2 ? void 0 : arguments[2],
                        arguments.length <= 5 ? void 0 : arguments[5],
                        arguments.length <= 8 ? void 0 : arguments[8],
                      ],
                      d = 0;
                    d < A;
                    d++
                  )
                    (s =
                      g[0] * this._lookUpTableBezier[d][0] +
                      g[1] * this._lookUpTableBezier[d][1] +
                      g[2] * this._lookUpTableBezier[d][2] +
                      g[3] * this._lookUpTableBezier[d][3]),
                      (i =
                        _[0] * this._lookUpTableBezier[d][0] +
                        _[1] * this._lookUpTableBezier[d][1] +
                        _[2] * this._lookUpTableBezier[d][2] +
                        _[3] * this._lookUpTableBezier[d][3]),
                      (a =
                        w[0] * this._lookUpTableBezier[d][0] +
                        w[1] * this._lookUpTableBezier[d][1] +
                        w[2] * this._lookUpTableBezier[d][2] +
                        w[3] * this._lookUpTableBezier[d][3]),
                      this.vertex(s, i, a);
                  (this.immediateMode._bezierVertex[0] =
                    arguments.length <= 6 ? void 0 : arguments[6]),
                    (this.immediateMode._bezierVertex[1] =
                      arguments.length <= 7 ? void 0 : arguments[7]),
                    (this.immediateMode._bezierVertex[2] =
                      arguments.length <= 8 ? void 0 : arguments[8]);
                }
              }),
              (c.default.RendererGL.prototype.quadraticVertex = function () {
                if (this.immediateMode._quadraticVertex.length === 0)
                  throw Error(
                    'vertex() must be used once before calling quadraticVertex()',
                  );
                var n,
                  s,
                  i,
                  a,
                  d,
                  g = [],
                  _ = [],
                  w = [],
                  S = arguments.length;
                if (
                  (n = 0) === this._lookUpTableQuadratic.length ||
                  this._lutQuadraticDetail !== this._pInst._curveDetail
                ) {
                  (this._lookUpTableQuadratic = []),
                    (this._lutQuadraticDetail = this._pInst._curveDetail);
                  for (
                    var M = 1 / this._lutQuadraticDetail, E = 0, O = 1, D = 0;
                    E < 1;

                  ) {
                    if (
                      ((n = parseFloat(E.toFixed(6))),
                      (this._lookUpTableQuadratic[D] =
                        this._quadraticCoefficients(n)),
                      O.toFixed(6) === M.toFixed(6))
                    ) {
                      (n = parseFloat(O.toFixed(6)) + parseFloat(E.toFixed(6))),
                        ++D,
                        (this._lookUpTableQuadratic[D] =
                          this._quadraticCoefficients(n));
                      break;
                    }
                    (E += M), (O -= M), ++D;
                  }
                }
                var A = this._lookUpTableQuadratic.length;
                if (S === 4) {
                  for (
                    this.isQuadratic = !0,
                      g = [
                        this.immediateMode._quadraticVertex[0],
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 2 ? void 0 : arguments[2],
                      ],
                      _ = [
                        this.immediateMode._quadraticVertex[1],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        arguments.length <= 3 ? void 0 : arguments[3],
                      ],
                      d = 0;
                    d < A;
                    d++
                  )
                    (s =
                      g[0] * this._lookUpTableQuadratic[d][0] +
                      g[1] * this._lookUpTableQuadratic[d][1] +
                      g[2] * this._lookUpTableQuadratic[d][2]),
                      (i =
                        _[0] * this._lookUpTableQuadratic[d][0] +
                        _[1] * this._lookUpTableQuadratic[d][1] +
                        _[2] * this._lookUpTableQuadratic[d][2]),
                      this.vertex(s, i);
                  (this.immediateMode._quadraticVertex[0] =
                    arguments.length <= 2 ? void 0 : arguments[2]),
                    (this.immediateMode._quadraticVertex[1] =
                      arguments.length <= 3 ? void 0 : arguments[3]);
                } else if (S === 6) {
                  for (
                    this.isQuadratic = !0,
                      g = [
                        this.immediateMode._quadraticVertex[0],
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 3 ? void 0 : arguments[3],
                      ],
                      _ = [
                        this.immediateMode._quadraticVertex[1],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        arguments.length <= 4 ? void 0 : arguments[4],
                      ],
                      w = [
                        this.immediateMode._quadraticVertex[2],
                        arguments.length <= 2 ? void 0 : arguments[2],
                        arguments.length <= 5 ? void 0 : arguments[5],
                      ],
                      d = 0;
                    d < A;
                    d++
                  )
                    (s =
                      g[0] * this._lookUpTableQuadratic[d][0] +
                      g[1] * this._lookUpTableQuadratic[d][1] +
                      g[2] * this._lookUpTableQuadratic[d][2]),
                      (i =
                        _[0] * this._lookUpTableQuadratic[d][0] +
                        _[1] * this._lookUpTableQuadratic[d][1] +
                        _[2] * this._lookUpTableQuadratic[d][2]),
                      (a =
                        w[0] * this._lookUpTableQuadratic[d][0] +
                        w[1] * this._lookUpTableQuadratic[d][1] +
                        w[2] * this._lookUpTableQuadratic[d][2]),
                      this.vertex(s, i, a);
                  (this.immediateMode._quadraticVertex[0] =
                    arguments.length <= 3 ? void 0 : arguments[3]),
                    (this.immediateMode._quadraticVertex[1] =
                      arguments.length <= 4 ? void 0 : arguments[4]),
                    (this.immediateMode._quadraticVertex[2] =
                      arguments.length <= 5 ? void 0 : arguments[5]);
                }
              }),
              (c.default.RendererGL.prototype.curveVertex = function () {
                var n,
                  s,
                  i,
                  a,
                  d,
                  g = [],
                  _ = [],
                  w = [],
                  S = arguments.length;
                if (
                  (n = 0) === this._lookUpTableBezier.length ||
                  this._lutBezierDetail !== this._pInst._curveDetail
                ) {
                  (this._lookUpTableBezier = []),
                    (this._lutBezierDetail = this._pInst._curveDetail);
                  for (
                    var M = 1 / this._lutBezierDetail, E = 0, O = 1, D = 0;
                    E < 1;

                  ) {
                    if (
                      ((n = parseFloat(E.toFixed(6))),
                      (this._lookUpTableBezier[D] =
                        this._bezierCoefficients(n)),
                      O.toFixed(6) === M.toFixed(6))
                    ) {
                      (n = parseFloat(O.toFixed(6)) + parseFloat(E.toFixed(6))),
                        ++D,
                        (this._lookUpTableBezier[D] =
                          this._bezierCoefficients(n));
                      break;
                    }
                    (E += M), (O -= M), ++D;
                  }
                }
                var A = this._lookUpTableBezier.length;
                if (S === 2) {
                  if (
                    (this.immediateMode._curveVertex.push(
                      arguments.length <= 0 ? void 0 : arguments[0],
                    ),
                    this.immediateMode._curveVertex.push(
                      arguments.length <= 1 ? void 0 : arguments[1],
                    ),
                    this.immediateMode._curveVertex.length === 8)
                  ) {
                    for (
                      this.isCurve = !0,
                        g = this._bezierToCatmull([
                          this.immediateMode._curveVertex[0],
                          this.immediateMode._curveVertex[2],
                          this.immediateMode._curveVertex[4],
                          this.immediateMode._curveVertex[6],
                        ]),
                        _ = this._bezierToCatmull([
                          this.immediateMode._curveVertex[1],
                          this.immediateMode._curveVertex[3],
                          this.immediateMode._curveVertex[5],
                          this.immediateMode._curveVertex[7],
                        ]),
                        d = 0;
                      d < A;
                      d++
                    )
                      (s =
                        g[0] * this._lookUpTableBezier[d][0] +
                        g[1] * this._lookUpTableBezier[d][1] +
                        g[2] * this._lookUpTableBezier[d][2] +
                        g[3] * this._lookUpTableBezier[d][3]),
                        (i =
                          _[0] * this._lookUpTableBezier[d][0] +
                          _[1] * this._lookUpTableBezier[d][1] +
                          _[2] * this._lookUpTableBezier[d][2] +
                          _[3] * this._lookUpTableBezier[d][3]),
                        this.vertex(s, i);
                    for (d = 0; d < S; d++)
                      this.immediateMode._curveVertex.shift();
                  }
                } else if (
                  S === 3 &&
                  (this.immediateMode._curveVertex.push(
                    arguments.length <= 0 ? void 0 : arguments[0],
                  ),
                  this.immediateMode._curveVertex.push(
                    arguments.length <= 1 ? void 0 : arguments[1],
                  ),
                  this.immediateMode._curveVertex.push(
                    arguments.length <= 2 ? void 0 : arguments[2],
                  ),
                  this.immediateMode._curveVertex.length === 12)
                ) {
                  for (
                    this.isCurve = !0,
                      g = this._bezierToCatmull([
                        this.immediateMode._curveVertex[0],
                        this.immediateMode._curveVertex[3],
                        this.immediateMode._curveVertex[6],
                        this.immediateMode._curveVertex[9],
                      ]),
                      _ = this._bezierToCatmull([
                        this.immediateMode._curveVertex[1],
                        this.immediateMode._curveVertex[4],
                        this.immediateMode._curveVertex[7],
                        this.immediateMode._curveVertex[10],
                      ]),
                      w = this._bezierToCatmull([
                        this.immediateMode._curveVertex[2],
                        this.immediateMode._curveVertex[5],
                        this.immediateMode._curveVertex[8],
                        this.immediateMode._curveVertex[11],
                      ]),
                      d = 0;
                    d < A;
                    d++
                  )
                    (s =
                      g[0] * this._lookUpTableBezier[d][0] +
                      g[1] * this._lookUpTableBezier[d][1] +
                      g[2] * this._lookUpTableBezier[d][2] +
                      g[3] * this._lookUpTableBezier[d][3]),
                      (i =
                        _[0] * this._lookUpTableBezier[d][0] +
                        _[1] * this._lookUpTableBezier[d][1] +
                        _[2] * this._lookUpTableBezier[d][2] +
                        _[3] * this._lookUpTableBezier[d][3]),
                      (a =
                        w[0] * this._lookUpTableBezier[d][0] +
                        w[1] * this._lookUpTableBezier[d][1] +
                        w[2] * this._lookUpTableBezier[d][2] +
                        w[3] * this._lookUpTableBezier[d][3]),
                      this.vertex(s, i, a);
                  for (d = 0; d < S; d++)
                    this.immediateMode._curveVertex.shift();
                }
              }),
              (c.default.RendererGL.prototype.image = function (
                n,
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
              ) {
                this._isErasing && this.blendMode(this._cachedBlendMode),
                  this._pInst.push(),
                  this._pInst.noLights(),
                  this._pInst.texture(n),
                  this._pInst.textureMode(l.NORMAL);
                var M = 0;
                s <= n.width && (M = s / n.width);
                var E = 1;
                s + a <= n.width && (E = (s + a) / n.width);
                var O = 0;
                i <= n.height && (O = i / n.height);
                var D = 1;
                i + d <= n.height && (D = (i + d) / n.height),
                  this.beginShape(),
                  this.vertex(g, _, 0, M, O),
                  this.vertex(g + w, _, 0, E, O),
                  this.vertex(g + w, _ + S, 0, E, D),
                  this.vertex(g, _ + S, 0, M, D),
                  this.endShape(l.CLOSE),
                  this._pInst.pop(),
                  this._isErasing && this.blendMode(l.REMOVE);
              });
            var o = c.default;
            y.default = o;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            './p5.Geometry': 313,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.number.to-fixed': 172,
          },
        ],
        308: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.array.splice'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            (c.default.prototype.orbitControl = function (o, n, s) {
              if (
                (this._assert3d('orbitControl'),
                c.default._validateParameters('orbitControl', arguments),
                this.mouseX < this.width &&
                  0 < this.mouseX &&
                  this.mouseY < this.height &&
                  0 < this.mouseY)
              ) {
                var i = this._renderer._curCamera;
                o === void 0 && (o = 1),
                  n === void 0 && (n = o),
                  s === void 0 && (s = 0.5),
                  this.contextMenuDisabled !== !0 &&
                    ((this.canvas.oncontextmenu = function () {
                      return !1;
                    }),
                    this._setProperty('contextMenuDisabled', !0)),
                  this.wheelDefaultDisabled !== !0 &&
                    ((this.canvas.onwheel = function () {
                      return !1;
                    }),
                    this._setProperty('wheelDefaultDisabled', !0));
                var a = this.height < this.width ? this.height : this.width;
                if (
                  (this._mouseWheelDeltaY !== this._pmouseWheelDeltaY &&
                    (0 < this._mouseWheelDeltaY
                      ? this._renderer._curCamera._orbit(0, 0, s * a)
                      : this._renderer._curCamera._orbit(0, 0, -s * a)),
                  this.mouseIsPressed)
                ) {
                  if (this.mouseButton === this.LEFT) {
                    var d = (-o * (this.mouseX - this.pmouseX)) / a,
                      g = (n * (this.mouseY - this.pmouseY)) / a;
                    this._renderer._curCamera._orbit(d, g, 0);
                  } else if (this.mouseButton === this.RIGHT) {
                    var _ = i._getLocalAxes(),
                      w = Math.sqrt(_.x[0] * _.x[0] + _.x[2] * _.x[2]);
                    w !== 0 && ((_.x[0] /= w), (_.x[2] /= w));
                    var S = Math.sqrt(_.y[0] * _.y[0] + _.y[2] * _.y[2]);
                    S !== 0 && ((_.y[0] /= S), (_.y[2] /= S));
                    var M = -1 * o * (this.mouseX - this.pmouseX),
                      E = -1 * n * (this.mouseY - this.pmouseY);
                    i.setPosition(
                      i.eyeX + M * _.x[0] + E * _.z[0],
                      i.eyeY,
                      i.eyeZ + M * _.x[2] + E * _.z[2],
                    );
                  }
                }
                return this;
              }
            }),
              (c.default.prototype.debugMode = function () {
                this._assert3d('debugMode');
                for (
                  var o = arguments.length, n = new Array(o), s = 0;
                  s < o;
                  s++
                )
                  n[s] = arguments[s];
                c.default._validateParameters('debugMode', n);
                for (
                  var i = this._registeredMethods.post.length - 1;
                  0 <= i;
                  i--
                )
                  (this._registeredMethods.post[i].toString() !==
                    this._grid().toString() &&
                    this._registeredMethods.post[i].toString() !==
                      this._axesIcon().toString()) ||
                    this._registeredMethods.post.splice(i, 1);
                n[0] === l.GRID
                  ? this.registerMethod(
                      'post',
                      this._grid.call(this, n[1], n[2], n[3], n[4], n[5]),
                    )
                  : n[0] === l.AXES
                  ? this.registerMethod(
                      'post',
                      this._axesIcon.call(this, n[1], n[2], n[3], n[4]),
                    )
                  : (this.registerMethod(
                      'post',
                      this._grid.call(this, n[0], n[1], n[2], n[3], n[4]),
                    ),
                    this.registerMethod(
                      'post',
                      this._axesIcon.call(this, n[5], n[6], n[7], n[8]),
                    ));
              }),
              (c.default.prototype.noDebugMode = function () {
                this._assert3d('noDebugMode');
                for (
                  var o = this._registeredMethods.post.length - 1;
                  0 <= o;
                  o--
                )
                  (this._registeredMethods.post[o].toString() !==
                    this._grid().toString() &&
                    this._registeredMethods.post[o].toString() !==
                      this._axesIcon().toString()) ||
                    this._registeredMethods.post.splice(o, 1);
              }),
              (c.default.prototype._grid = function (o, n, s, i, a) {
                o === void 0 && (o = this.width / 2),
                  n === void 0 &&
                    (n = Math.round(o / 30) < 4 ? 4 : Math.round(o / 30)),
                  s === void 0 && (s = 0),
                  i === void 0 && (i = 0),
                  a === void 0 && (a = 0);
                var d = o / n,
                  g = o / 2;
                return function () {
                  this.push(),
                    this.stroke(
                      255 * this._renderer.curStrokeColor[0],
                      255 * this._renderer.curStrokeColor[1],
                      255 * this._renderer.curStrokeColor[2],
                    ),
                    this._renderer.uMVMatrix.set(
                      this._renderer._curCamera.cameraMatrix.mat4[0],
                      this._renderer._curCamera.cameraMatrix.mat4[1],
                      this._renderer._curCamera.cameraMatrix.mat4[2],
                      this._renderer._curCamera.cameraMatrix.mat4[3],
                      this._renderer._curCamera.cameraMatrix.mat4[4],
                      this._renderer._curCamera.cameraMatrix.mat4[5],
                      this._renderer._curCamera.cameraMatrix.mat4[6],
                      this._renderer._curCamera.cameraMatrix.mat4[7],
                      this._renderer._curCamera.cameraMatrix.mat4[8],
                      this._renderer._curCamera.cameraMatrix.mat4[9],
                      this._renderer._curCamera.cameraMatrix.mat4[10],
                      this._renderer._curCamera.cameraMatrix.mat4[11],
                      this._renderer._curCamera.cameraMatrix.mat4[12],
                      this._renderer._curCamera.cameraMatrix.mat4[13],
                      this._renderer._curCamera.cameraMatrix.mat4[14],
                      this._renderer._curCamera.cameraMatrix.mat4[15],
                    );
                  for (var _ = 0; _ <= n; _++)
                    this.beginShape(this.LINES),
                      this.vertex(-g + s, i, _ * d - g + a),
                      this.vertex(+g + s, i, _ * d - g + a),
                      this.endShape();
                  for (var w = 0; w <= n; w++)
                    this.beginShape(this.LINES),
                      this.vertex(w * d - g + s, i, -g + a),
                      this.vertex(w * d - g + s, i, +g + a),
                      this.endShape();
                  this.pop();
                };
              }),
              (c.default.prototype._axesIcon = function (o, n, s, i) {
                return (
                  o === void 0 &&
                    (o = 40 < this.width / 20 ? this.width / 20 : 40),
                  n === void 0 && (n = -this.width / 4),
                  s === void 0 && (s = n),
                  i === void 0 && (i = n),
                  function () {
                    this.push(),
                      this._renderer.uMVMatrix.set(
                        this._renderer._curCamera.cameraMatrix.mat4[0],
                        this._renderer._curCamera.cameraMatrix.mat4[1],
                        this._renderer._curCamera.cameraMatrix.mat4[2],
                        this._renderer._curCamera.cameraMatrix.mat4[3],
                        this._renderer._curCamera.cameraMatrix.mat4[4],
                        this._renderer._curCamera.cameraMatrix.mat4[5],
                        this._renderer._curCamera.cameraMatrix.mat4[6],
                        this._renderer._curCamera.cameraMatrix.mat4[7],
                        this._renderer._curCamera.cameraMatrix.mat4[8],
                        this._renderer._curCamera.cameraMatrix.mat4[9],
                        this._renderer._curCamera.cameraMatrix.mat4[10],
                        this._renderer._curCamera.cameraMatrix.mat4[11],
                        this._renderer._curCamera.cameraMatrix.mat4[12],
                        this._renderer._curCamera.cameraMatrix.mat4[13],
                        this._renderer._curCamera.cameraMatrix.mat4[14],
                        this._renderer._curCamera.cameraMatrix.mat4[15],
                      ),
                      this.strokeWeight(2),
                      this.stroke(255, 0, 0),
                      this.beginShape(this.LINES),
                      this.vertex(n, s, i),
                      this.vertex(n + o, s, i),
                      this.endShape(),
                      this.stroke(0, 255, 0),
                      this.beginShape(this.LINES),
                      this.vertex(n, s, i),
                      this.vertex(n, s + o, i),
                      this.endShape(),
                      this.stroke(0, 0, 255),
                      this.beginShape(this.LINES),
                      this.vertex(n, s, i),
                      this.vertex(n, s, i + o),
                      this.endShape(),
                      this.pop();
                  }
                );
              });
            var u = c.default;
            y.default = u;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
          },
        ],
        309: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            (c.default.prototype.ambientLight = function (o, n, s, i) {
              this._assert3d('ambientLight'),
                c.default._validateParameters('ambientLight', arguments);
              var a = this.color.apply(this, arguments);
              return (
                this._renderer.ambientLightColors.push(
                  a._array[0],
                  a._array[1],
                  a._array[2],
                ),
                (this._renderer._enableLighting = !0),
                this
              );
            }),
              (c.default.prototype.specularColor = function (o, n, s) {
                this._assert3d('specularColor'),
                  c.default._validateParameters('specularColor', arguments);
                var i = this.color.apply(this, arguments);
                return (
                  (this._renderer.specularColors = [
                    i._array[0],
                    i._array[1],
                    i._array[2],
                  ]),
                  this
                );
              }),
              (c.default.prototype.directionalLight = function (
                o,
                n,
                s,
                i,
                a,
                d,
              ) {
                var g, _, w, S;
                this._assert3d('directionalLight'),
                  c.default._validateParameters('directionalLight', arguments),
                  (g = o instanceof c.default.Color ? o : this.color(o, n, s));
                var M = arguments[arguments.length - 1];
                S =
                  typeof M == 'number'
                    ? ((_ = arguments[arguments.length - 3]),
                      (w = arguments[arguments.length - 2]),
                      arguments[arguments.length - 1])
                    : ((_ = M.x), (w = M.y), M.z);
                var E = Math.sqrt(_ * _ + w * w + S * S);
                return (
                  this._renderer.directionalLightDirections.push(
                    _ / E,
                    w / E,
                    S / E,
                  ),
                  this._renderer.directionalLightDiffuseColors.push(
                    g._array[0],
                    g._array[1],
                    g._array[2],
                  ),
                  Array.prototype.push.apply(
                    this._renderer.directionalLightSpecularColors,
                    this._renderer.specularColors,
                  ),
                  (this._renderer._enableLighting = !0),
                  this
                );
              }),
              (c.default.prototype.pointLight = function (o, n, s, i, a, d) {
                var g, _, w, S;
                this._assert3d('pointLight'),
                  c.default._validateParameters('pointLight', arguments),
                  (g = o instanceof c.default.Color ? o : this.color(o, n, s));
                var M = arguments[arguments.length - 1];
                return (
                  (S =
                    typeof M == 'number'
                      ? ((_ = arguments[arguments.length - 3]),
                        (w = arguments[arguments.length - 2]),
                        arguments[arguments.length - 1])
                      : ((_ = M.x), (w = M.y), M.z)),
                  this._renderer.pointLightPositions.push(_, w, S),
                  this._renderer.pointLightDiffuseColors.push(
                    g._array[0],
                    g._array[1],
                    g._array[2],
                  ),
                  Array.prototype.push.apply(
                    this._renderer.pointLightSpecularColors,
                    this._renderer.specularColors,
                  ),
                  (this._renderer._enableLighting = !0),
                  this
                );
              }),
              (c.default.prototype.lights = function () {
                if ((this._assert3d('lights'), this._colorMode === l.RGB))
                  this.ambientLight(128, 128, 128),
                    this.directionalLight(128, 128, 128, 0, 0, -1);
                else {
                  var o = this._colorMaxes[this._colorMode][2];
                  this.ambientLight(0, 0, o),
                    this.directionalLight(0, 0, o, 0, 0, -1);
                }
                return this;
              }),
              (c.default.prototype.lightFalloff = function (o, n, s) {
                return (
                  this._assert3d('lightFalloff'),
                  c.default._validateParameters('lightFalloff', arguments),
                  o < 0 &&
                    ((o = 0),
                    console.warn(
                      'Value of constant argument in lightFalloff() should be never be negative. Set to 0.',
                    )),
                  n < 0 &&
                    ((n = 0),
                    console.warn(
                      'Value of linear argument in lightFalloff() should be never be negative. Set to 0.',
                    )),
                  s < 0 &&
                    ((s = 0),
                    console.warn(
                      'Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.',
                    )),
                  o === 0 &&
                    n === 0 &&
                    s === 0 &&
                    ((o = 1),
                    console.warn(
                      'Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.',
                    )),
                  (this._renderer.constantAttenuation = o),
                  (this._renderer.linearAttenuation = n),
                  (this._renderer.quadraticAttenuation = s),
                  this
                );
              }),
              (c.default.prototype.spotLight = function (
                o,
                n,
                s,
                i,
                a,
                d,
                g,
                _,
                w,
                S,
                M,
              ) {
                var E, O, D;
                this._assert3d('spotLight'),
                  c.default._validateParameters('spotLight', arguments);
                var A = arguments.length;
                switch (A) {
                  case 11:
                  case 10:
                    (E = this.color(o, n, s)),
                      (O = new c.default.Vector(i, a, d)),
                      (D = new c.default.Vector(g, _, w));
                    break;
                  case 9:
                    o instanceof c.default.Color
                      ? ((E = o),
                        (O = new c.default.Vector(n, s, i)),
                        (D = new c.default.Vector(a, d, g)),
                        (S = _),
                        (M = w))
                      : i instanceof c.default.Vector
                      ? ((E = this.color(o, n, s)),
                        (O = i),
                        (D = new c.default.Vector(a, d, g)),
                        (S = _),
                        (M = w))
                      : g instanceof c.default.Vector
                      ? ((E = this.color(o, n, s)),
                        (O = new c.default.Vector(i, a, d)),
                        (D = g),
                        (S = _),
                        (M = w))
                      : ((E = this.color(o, n, s)),
                        (O = new c.default.Vector(i, a, d)),
                        (D = new c.default.Vector(g, _, w)));
                    break;
                  case 8:
                    S =
                      ((D =
                        o instanceof c.default.Color
                          ? ((E = o),
                            (O = new c.default.Vector(n, s, i)),
                            new c.default.Vector(a, d, g))
                          : i instanceof c.default.Vector
                          ? ((E = this.color(o, n, s)),
                            (O = i),
                            new c.default.Vector(a, d, g))
                          : ((E = this.color(o, n, s)),
                            (O = new c.default.Vector(i, a, d)),
                            g)),
                      _);
                    break;
                  case 7:
                    o instanceof c.default.Color &&
                    n instanceof c.default.Vector
                      ? ((E = o),
                        (O = n),
                        (D = new c.default.Vector(s, i, a)),
                        (S = d),
                        (M = g))
                      : o instanceof c.default.Color &&
                        a instanceof c.default.Vector
                      ? ((E = o),
                        (O = new c.default.Vector(n, s, i)),
                        (D = a),
                        (S = d),
                        (M = g))
                      : i instanceof c.default.Vector &&
                        a instanceof c.default.Vector
                      ? ((E = this.color(o, n, s)),
                        (O = i),
                        (D = a),
                        (S = d),
                        (M = g))
                      : (D =
                          o instanceof c.default.Color
                            ? ((E = o),
                              (O = new c.default.Vector(n, s, i)),
                              new c.default.Vector(a, d, g))
                            : i instanceof c.default.Vector
                            ? ((E = this.color(o, n, s)),
                              (O = i),
                              new c.default.Vector(a, d, g))
                            : ((E = this.color(o, n, s)),
                              (O = new c.default.Vector(i, a, d)),
                              g));
                    break;
                  case 6:
                    i instanceof c.default.Vector &&
                    a instanceof c.default.Vector
                      ? ((E = this.color(o, n, s)), (O = i), (D = a), (S = d))
                      : o instanceof c.default.Color &&
                        a instanceof c.default.Vector
                      ? ((E = o),
                        (O = new c.default.Vector(n, s, i)),
                        (D = a),
                        (S = d))
                      : o instanceof c.default.Color &&
                        n instanceof c.default.Vector &&
                        ((E = o),
                        (O = n),
                        (D = new c.default.Vector(s, i, a)),
                        (S = d));
                    break;
                  case 5:
                    o instanceof c.default.Color &&
                    n instanceof c.default.Vector &&
                    s instanceof c.default.Vector
                      ? ((E = o), (O = n), (D = s), (S = i), (M = a))
                      : i instanceof c.default.Vector &&
                        a instanceof c.default.Vector
                      ? ((E = this.color(o, n, s)), (O = i), (D = a))
                      : o instanceof c.default.Color &&
                        a instanceof c.default.Vector
                      ? ((E = o), (O = new c.default.Vector(n, s, i)), (D = a))
                      : o instanceof c.default.Color &&
                        n instanceof c.default.Vector &&
                        ((E = o), (O = n), (D = new c.default.Vector(s, i, a)));
                    break;
                  case 4:
                    (E = o), (O = n), (D = s), (S = i);
                    break;
                  case 3:
                    (E = o), (O = n), (D = s);
                    break;
                  default:
                    return (
                      console.warn(
                        'Sorry, input for spotlight() is not in prescribed format. Too '.concat(
                          A < 3 ? 'few' : 'many',
                          ' arguments were provided',
                        ),
                      ),
                      this
                    );
                }
                return (
                  this._renderer.spotLightDiffuseColors.push(
                    E._array[0],
                    E._array[1],
                    E._array[2],
                  ),
                  Array.prototype.push.apply(
                    this._renderer.spotLightSpecularColors,
                    this._renderer.specularColors,
                  ),
                  this._renderer.spotLightPositions.push(O.x, O.y, O.z),
                  D.normalize(),
                  this._renderer.spotLightDirections.push(D.x, D.y, D.z),
                  S === void 0 && (S = Math.PI / 3),
                  M !== void 0 && M < 1
                    ? ((M = 1),
                      console.warn(
                        'Value of concentration needs to be greater than 1. Setting it to 1',
                      ))
                    : M === void 0 && (M = 100),
                  (S = this._renderer._pInst._toRadians(S)),
                  this._renderer.spotLightAngle.push(Math.cos(S)),
                  this._renderer.spotLightConc.push(M),
                  (this._renderer._enableLighting = !0),
                  this
                );
              }),
              (c.default.prototype.noLights = function () {
                return (
                  this._assert3d('noLights'),
                  c.default._validateParameters('noLights', arguments),
                  (this._renderer._enableLighting = !1),
                  (this._renderer.ambientLightColors.length = 0),
                  (this._renderer.specularColors = [1, 1, 1]),
                  (this._renderer.directionalLightDirections.length = 0),
                  (this._renderer.directionalLightDiffuseColors.length = 0),
                  (this._renderer.directionalLightSpecularColors.length = 0),
                  (this._renderer.pointLightPositions.length = 0),
                  (this._renderer.pointLightDiffuseColors.length = 0),
                  (this._renderer.pointLightSpecularColors.length = 0),
                  (this._renderer.spotLightPositions.length = 0),
                  (this._renderer.spotLightDirections.length = 0),
                  (this._renderer.spotLightDiffuseColors.length = 0),
                  (this._renderer.spotLightSpecularColors.length = 0),
                  (this._renderer.spotLightAngle.length = 0),
                  (this._renderer.spotLightConc.length = 0),
                  (this._renderer.constantAttenuation = 1),
                  (this._renderer.linearAttenuation = 0),
                  (this._renderer.quadraticAttenuation = 0),
                  (this._renderer._useShininess = 1),
                  this
                );
              });
            var u = c.default;
            y.default = u;
          },
          { '../core/constants': 253, '../core/main': 264 },
        ],
        310: [
          function (e, v, y) {
            e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.array.splice'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.match'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            function c(h, u, o) {
              for (var n = 0, s = h.length; n < s; n++)
                if (h[n] !== u.getUint8(o + n, !1)) return !1;
              return !0;
            }
            e('./p5.Geometry'),
              (r.default.prototype.loadModel = function (h) {
                var u, o, n;
                r.default._validateParameters('loadModel', arguments);
                var s = h.slice(-4);
                typeof arguments[1] == 'boolean'
                  ? ((u = arguments[1]),
                    (o = arguments[2]),
                    (n = arguments[3]),
                    arguments[4] !== void 0 && (s = arguments[4]))
                  : ((u = !1),
                    (o = arguments[1]),
                    (n = arguments[2]),
                    arguments[3] !== void 0 && (s = arguments[3]));
                var i = new r.default.Geometry();
                i.gid = ''.concat(h, '|').concat(u);
                var a = this;
                return (
                  s.match(/\.stl$/i)
                    ? this.httpDo(
                        h,
                        'GET',
                        'arrayBuffer',
                        function (d) {
                          (function (g, _) {
                            if (
                              (function (M) {
                                for (
                                  var E = new DataView(M),
                                    O = [115, 111, 108, 105, 100],
                                    D = 0;
                                  D < 5;
                                  D++
                                )
                                  if (c(O, E, D)) return !1;
                                return !0;
                              })(_)
                            )
                              (function (M, E) {
                                for (
                                  var O,
                                    D,
                                    A,
                                    k,
                                    L,
                                    R,
                                    N,
                                    B = new DataView(E),
                                    Z = B.getUint32(80, !0),
                                    J = !1,
                                    $ = 0;
                                  $ < 70;
                                  $++
                                )
                                  B.getUint32($, !1) === 1129270351 &&
                                    B.getUint8($ + 4) === 82 &&
                                    B.getUint8($ + 5) === 61 &&
                                    ((J = !0),
                                    (k = []),
                                    (L = B.getUint8($ + 6) / 255),
                                    (R = B.getUint8($ + 7) / 255),
                                    (N = B.getUint8($ + 8) / 255));
                                for (var ee = 0; ee < Z; ee++) {
                                  var Q = 84 + 50 * ee,
                                    oe = B.getFloat32(Q, !0),
                                    ce = B.getFloat32(4 + Q, !0),
                                    ve = B.getFloat32(8 + Q, !0);
                                  if (J) {
                                    var de = B.getUint16(48 + Q, !0);
                                    A =
                                      (32768 & de) == 0
                                        ? ((O = (31 & de) / 31),
                                          (D = ((de >> 5) & 31) / 31),
                                          ((de >> 10) & 31) / 31)
                                        : ((O = L), (D = R), N);
                                  }
                                  for (
                                    var Se = new r.default.Vector(oe, ce, ve),
                                      fe = 1;
                                    fe <= 3;
                                    fe++
                                  ) {
                                    var ye = Q + 12 * fe,
                                      P = new r.default.Vector(
                                        B.getFloat32(ye, !0),
                                        B.getFloat32(4 + ye, !0),
                                        B.getFloat32(8 + ye, !0),
                                      );
                                    M.vertices.push(P),
                                      M.vertexNormals.push(Se),
                                      J && k.push(O, D, A);
                                  }
                                  M.faces.push([
                                    3 * ee,
                                    3 * ee + 1,
                                    3 * ee + 2,
                                  ]),
                                    M.uvs.push([0, 0], [0, 0], [0, 0]);
                                }
                              })(g, _);
                            else {
                              var w = new DataView(_);
                              if (!('TextDecoder' in window))
                                return console.warn(
                                  'Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)',
                                );
                              var S = new TextDecoder('utf-8').decode(w).split(`
`);
                              (function (M, E) {
                                for (
                                  var O, D, A = '', k = [], L = 0;
                                  L < E.length;
                                  ++L
                                ) {
                                  for (
                                    var R = E[L].trim(),
                                      N = R.split(' '),
                                      B = 0;
                                    B < N.length;
                                    ++B
                                  )
                                    N[B] === '' && N.splice(B, 1);
                                  if (N.length !== 0)
                                    switch (A) {
                                      case '':
                                        if (N[0] !== 'solid')
                                          return (
                                            console.error(R),
                                            console.error(
                                              'Invalid state "'.concat(
                                                N[0],
                                                '", should be "solid"',
                                              ),
                                            )
                                          );
                                        A = 'solid';
                                        break;
                                      case 'solid':
                                        if (
                                          N[0] !== 'facet' ||
                                          N[1] !== 'normal'
                                        )
                                          return (
                                            console.error(R),
                                            console.error(
                                              'Invalid state "'.concat(
                                                N[0],
                                                '", should be "facet normal"',
                                              ),
                                            )
                                          );
                                        (O = new r.default.Vector(
                                          parseFloat(N[2]),
                                          parseFloat(N[3]),
                                          parseFloat(N[4]),
                                        )),
                                          M.vertexNormals.push(O, O, O),
                                          (A = 'facet normal');
                                        break;
                                      case 'facet normal':
                                        if (N[0] !== 'outer' || N[1] !== 'loop')
                                          return (
                                            console.error(R),
                                            console.error(
                                              'Invalid state "'.concat(
                                                N[0],
                                                '", should be "outer loop"',
                                              ),
                                            )
                                          );
                                        A = 'vertex';
                                        break;
                                      case 'vertex':
                                        if (N[0] === 'vertex')
                                          (D = new r.default.Vector(
                                            parseFloat(N[1]),
                                            parseFloat(N[2]),
                                            parseFloat(N[3]),
                                          )),
                                            M.vertices.push(D),
                                            M.uvs.push([0, 0]),
                                            k.push(M.vertices.indexOf(D));
                                        else {
                                          if (N[0] !== 'endloop')
                                            return (
                                              console.error(R),
                                              console.error(
                                                'Invalid state "'.concat(
                                                  N[0],
                                                  '", should be "vertex" or "endloop"',
                                                ),
                                              )
                                            );
                                          M.faces.push(k),
                                            (k = []),
                                            (A = 'endloop');
                                        }
                                        break;
                                      case 'endloop':
                                        if (N[0] !== 'endfacet')
                                          return (
                                            console.error(R),
                                            console.error(
                                              'Invalid state "'.concat(
                                                N[0],
                                                '", should be "endfacet"',
                                              ),
                                            )
                                          );
                                        A = 'endfacet';
                                        break;
                                      case 'endfacet':
                                        if (N[0] !== 'endsolid') {
                                          if (
                                            N[0] !== 'facet' ||
                                            N[1] !== 'normal'
                                          )
                                            return (
                                              console.error(R),
                                              console.error(
                                                'Invalid state "'.concat(
                                                  N[0],
                                                  '", should be "endsolid" or "facet normal"',
                                                ),
                                              )
                                            );
                                          (O = new r.default.Vector(
                                            parseFloat(N[2]),
                                            parseFloat(N[3]),
                                            parseFloat(N[4]),
                                          )),
                                            M.vertexNormals.push(O, O, O),
                                            (A = 'facet normal');
                                        }
                                        break;
                                      default:
                                        console.error(
                                          'Invalid state "'.concat(A, '"'),
                                        );
                                    }
                                }
                              })(g, S);
                            }
                          })(i, d),
                            u && i.normalize(),
                            a._decrementPreload(),
                            typeof o == 'function' && o(i);
                        },
                        n,
                      )
                    : s.match(/\.obj$/i)
                    ? this.loadStrings(
                        h,
                        function (d) {
                          (function (g, _) {
                            for (
                              var w = { v: [], vt: [], vn: [] }, S = {}, M = 0;
                              M < _.length;
                              ++M
                            ) {
                              var E = _[M].trim().split(/\b\s+/);
                              if (0 < E.length) {
                                if (E[0] === 'v' || E[0] === 'vn') {
                                  var O = new r.default.Vector(
                                    parseFloat(E[1]),
                                    parseFloat(E[2]),
                                    parseFloat(E[3]),
                                  );
                                  w[E[0]].push(O);
                                } else if (E[0] === 'vt') {
                                  var D = [
                                    parseFloat(E[1]),
                                    1 - parseFloat(E[2]),
                                  ];
                                  w[E[0]].push(D);
                                } else if (E[0] === 'f')
                                  for (var A = 3; A < E.length; ++A) {
                                    for (
                                      var k = [], L = [1, A - 1, A], R = 0;
                                      R < L.length;
                                      ++R
                                    ) {
                                      var N = E[L[R]],
                                        B = 0;
                                      if (S[N] !== void 0) B = S[N];
                                      else {
                                        for (
                                          var Z = N.split('/'), J = 0;
                                          J < Z.length;
                                          J++
                                        )
                                          Z[J] = parseInt(Z[J]) - 1;
                                        (B = S[N] = g.vertices.length),
                                          g.vertices.push(w.v[Z[0]].copy()),
                                          w.vt[Z[1]]
                                            ? g.uvs.push(w.vt[Z[1]].slice())
                                            : g.uvs.push([0, 0]),
                                          w.vn[Z[2]] &&
                                            g.vertexNormals.push(
                                              w.vn[Z[2]].copy(),
                                            );
                                      }
                                      k.push(B);
                                    }
                                    k[0] !== k[1] &&
                                      k[0] !== k[2] &&
                                      k[1] !== k[2] &&
                                      g.faces.push(k);
                                  }
                              }
                            }
                            g.vertexNormals.length === 0 && g.computeNormals();
                          })(i, d),
                            u && i.normalize(),
                            a._decrementPreload(),
                            typeof o == 'function' && o(i);
                        },
                        n,
                      )
                    : (r.default._friendlyFileLoadError(3, h),
                      n
                        ? n()
                        : console.error(
                            'Sorry, the file type is invalid. Only OBJ and STL files are supported.',
                          )),
                  i
                );
              }),
              (r.default.prototype.model = function (h) {
                this._assert3d('model'),
                  r.default._validateParameters('model', arguments),
                  0 < h.vertices.length &&
                    (this._renderer.geometryInHash(h.gid) ||
                      (h._makeTriangleEdges()._edgesToVertices(),
                      this._renderer.createBuffers(h.gid, h)),
                    this._renderer.drawBuffers(h.gid));
              });
            var l = r.default;
            y.default = l;
          },
          {
            '../core/main': 264,
            './p5.Geometry': 313,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
          },
        ],
        311: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.array.join'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            e('./p5.Texture'),
              (c.default.prototype.loadShader = function (o, n, s, i) {
                c.default._validateParameters('loadShader', arguments),
                  (i = i || console.error);
                function a() {
                  g._decrementPreload(), s && s(d);
                }
                var d = new c.default.Shader(),
                  g = this,
                  _ = !1,
                  w = !1;
                return (
                  this.loadStrings(
                    o,
                    function (S) {
                      (d._vertSrc = S.join(`
`)),
                        (w = !0),
                        _ && a();
                    },
                    i,
                  ),
                  this.loadStrings(
                    n,
                    function (S) {
                      (d._fragSrc = S.join(`
`)),
                        (_ = !0),
                        w && a();
                    },
                    i,
                  ),
                  d
                );
              }),
              (c.default.prototype.createShader = function (o, n) {
                return (
                  this._assert3d('createShader'),
                  c.default._validateParameters('createShader', arguments),
                  new c.default.Shader(this._renderer, o, n)
                );
              }),
              (c.default.prototype.shader = function (o) {
                return (
                  this._assert3d('shader'),
                  c.default._validateParameters('shader', arguments),
                  o._renderer === void 0 && (o._renderer = this._renderer),
                  o.init(),
                  o.isStrokeShader()
                    ? (this._renderer.userStrokeShader = o)
                    : ((this._renderer.userFillShader = o),
                      (this._renderer._useNormalMaterial = !1)),
                  this
                );
              }),
              (c.default.prototype.resetShader = function () {
                return (
                  (this._renderer.userFillShader =
                    this._renderer.userStrokeShader =
                      null),
                  this
                );
              }),
              (c.default.prototype.texture = function (o) {
                return (
                  this._assert3d('texture'),
                  c.default._validateParameters('texture', arguments),
                  o.gifProperties && o._animateGif(this),
                  (this._renderer.drawMode = l.TEXTURE),
                  (this._renderer._useSpecularMaterial = !1),
                  (this._renderer._useEmissiveMaterial = !1),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._tex = o),
                  this._renderer._setProperty('_doFill', !0),
                  this
                );
              }),
              (c.default.prototype.textureMode = function (o) {
                o !== l.IMAGE && o !== l.NORMAL
                  ? console.warn(
                      'You tried to set '.concat(
                        o,
                        ' textureMode only supports IMAGE & NORMAL ',
                      ),
                    )
                  : (this._renderer.textureMode = o);
              }),
              (c.default.prototype.textureWrap = function (o) {
                var n =
                  1 < arguments.length && arguments[1] !== void 0
                    ? arguments[1]
                    : o;
                (this._renderer.textureWrapX = o),
                  (this._renderer.textureWrapY = n);
                for (var s = this._renderer.textures, i = 0; i < s.length; i++)
                  s[i].setWrapMode(o, n);
              }),
              (c.default.prototype.normalMaterial = function () {
                this._assert3d('normalMaterial');
                for (
                  var o = arguments.length, n = new Array(o), s = 0;
                  s < o;
                  s++
                )
                  n[s] = arguments[s];
                return (
                  c.default._validateParameters('normalMaterial', n),
                  (this._renderer.drawMode = l.FILL),
                  (this._renderer._useSpecularMaterial = !1),
                  (this._renderer._useEmissiveMaterial = !1),
                  (this._renderer._useNormalMaterial = !0),
                  (this._renderer.curFillColor = [1, 1, 1, 1]),
                  this._renderer._setProperty('_doFill', !0),
                  this.noStroke(),
                  this
                );
              }),
              (c.default.prototype.ambientMaterial = function (o, n, s) {
                this._assert3d('ambientMaterial'),
                  c.default._validateParameters('ambientMaterial', arguments);
                var i = c.default.prototype.color.apply(this, arguments);
                return (
                  (this._renderer.curFillColor = i._array),
                  (this._renderer._useSpecularMaterial = !1),
                  (this._renderer._useEmissiveMaterial = !1),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._enableLighting = !0),
                  (this._renderer._tex = null),
                  this._renderer._setProperty('_doFill', !0),
                  this
                );
              }),
              (c.default.prototype.emissiveMaterial = function (o, n, s, i) {
                this._assert3d('emissiveMaterial'),
                  c.default._validateParameters('emissiveMaterial', arguments);
                var a = c.default.prototype.color.apply(this, arguments);
                return (
                  (this._renderer.curFillColor = a._array),
                  (this._renderer._useSpecularMaterial = !1),
                  (this._renderer._useEmissiveMaterial = !0),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._enableLighting = !0),
                  (this._renderer._tex = null),
                  this
                );
              }),
              (c.default.prototype.specularMaterial = function (o, n, s, i) {
                this._assert3d('specularMaterial'),
                  c.default._validateParameters('specularMaterial', arguments);
                var a = c.default.prototype.color.apply(this, arguments);
                return (
                  (this._renderer.curFillColor = a._array),
                  (this._renderer._useSpecularMaterial = !0),
                  (this._renderer._useEmissiveMaterial = !1),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._enableLighting = !0),
                  (this._renderer._tex = null),
                  this
                );
              }),
              (c.default.prototype.shininess = function (o) {
                return (
                  this._assert3d('shininess'),
                  c.default._validateParameters('shininess', arguments),
                  o < 1 && (o = 1),
                  (this._renderer._useShininess = o),
                  this
                );
              }),
              (c.default.RendererGL.prototype._applyColorBlend = function (o) {
                var n = this.GL,
                  s =
                    this.drawMode === l.TEXTURE ||
                    o[o.length - 1] < 1 ||
                    this._isErasing;
                return (
                  s !== this._isBlending &&
                    (s ||
                    (this.curBlendMode !== l.BLEND &&
                      this.curBlendMode !== l.ADD)
                      ? n.enable(n.BLEND)
                      : n.disable(n.BLEND),
                    n.depthMask(!0),
                    (this._isBlending = s)),
                  this._applyBlendMode(),
                  o
                );
              }),
              (c.default.RendererGL.prototype._applyBlendMode = function () {
                if (this._cachedBlendMode !== this.curBlendMode) {
                  var o = this.GL;
                  switch (this.curBlendMode) {
                    case l.BLEND:
                    case l.ADD:
                      o.blendEquation(o.FUNC_ADD),
                        o.blendFunc(o.SRC_ALPHA, o.ONE_MINUS_SRC_ALPHA);
                      break;
                    case l.REMOVE:
                      o.blendEquation(o.FUNC_REVERSE_SUBTRACT),
                        o.blendFunc(o.SRC_ALPHA, o.DST_ALPHA);
                      break;
                    case l.MULTIPLY:
                      o.blendEquationSeparate(o.FUNC_ADD, o.FUNC_ADD),
                        o.blendFuncSeparate(o.ZERO, o.SRC_COLOR, o.ONE, o.ONE);
                      break;
                    case l.SCREEN:
                      o.blendEquationSeparate(o.FUNC_ADD, o.FUNC_ADD),
                        o.blendFuncSeparate(
                          o.ONE_MINUS_DST_COLOR,
                          o.ONE,
                          o.ONE,
                          o.ONE,
                        );
                      break;
                    case l.EXCLUSION:
                      o.blendEquationSeparate(o.FUNC_ADD, o.FUNC_ADD),
                        o.blendFuncSeparate(
                          o.ONE_MINUS_DST_COLOR,
                          o.ONE_MINUS_SRC_COLOR,
                          o.ONE,
                          o.ONE,
                        );
                      break;
                    case l.REPLACE:
                      o.blendEquation(o.FUNC_ADD), o.blendFunc(o.ONE, o.ZERO);
                      break;
                    case l.SUBTRACT:
                      o.blendEquationSeparate(
                        o.FUNC_REVERSE_SUBTRACT,
                        o.FUNC_ADD,
                      ),
                        o.blendFuncSeparate(o.SRC_ALPHA, o.ONE, o.ONE, o.ONE);
                      break;
                    case l.DARKEST:
                      this.blendExt
                        ? (o.blendEquationSeparate(
                            this.blendExt.MIN_EXT,
                            o.FUNC_ADD,
                          ),
                          o.blendFuncSeparate(o.ONE, o.ONE, o.ONE, o.ONE))
                        : console.warn(
                            'blendMode(DARKEST) does not work in your browser in WEBGL mode.',
                          );
                      break;
                    case l.LIGHTEST:
                      this.blendExt
                        ? (o.blendEquationSeparate(
                            this.blendExt.MAX_EXT,
                            o.FUNC_ADD,
                          ),
                          o.blendFuncSeparate(o.ONE, o.ONE, o.ONE, o.ONE))
                        : console.warn(
                            'blendMode(LIGHTEST) does not work in your browser in WEBGL mode.',
                          );
                      break;
                    default:
                      console.error(
                        'Oops! Somehow RendererGL set curBlendMode to an unsupported mode.',
                      );
                  }
                  this._isErasing ||
                    (this._cachedBlendMode = this.curBlendMode);
                }
              });
            var u = c.default;
            y.default = u;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            './p5.Texture': 320,
            'core-js/modules/es.array.join': 159,
          },
        ],
        312: [
          function (e, v, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.prototype.camera = function () {
              var l;
              this._assert3d('camera');
              for (
                var h = arguments.length, u = new Array(h), o = 0;
                o < h;
                o++
              )
                u[o] = arguments[o];
              return (
                r.default._validateParameters('camera', u),
                (l = this._renderer._curCamera).camera.apply(l, u),
                this
              );
            }),
              (r.default.prototype.perspective = function () {
                var l;
                this._assert3d('perspective');
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return (
                  r.default._validateParameters('perspective', u),
                  (l = this._renderer._curCamera).perspective.apply(l, u),
                  this
                );
              }),
              (r.default.prototype.ortho = function () {
                var l;
                this._assert3d('ortho');
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return (
                  r.default._validateParameters('ortho', u),
                  (l = this._renderer._curCamera).ortho.apply(l, u),
                  this
                );
              }),
              (r.default.prototype.frustum = function () {
                var l;
                this._assert3d('frustum');
                for (
                  var h = arguments.length, u = new Array(h), o = 0;
                  o < h;
                  o++
                )
                  u[o] = arguments[o];
                return (
                  r.default._validateParameters('frustum', u),
                  (l = this._renderer._curCamera).frustum.apply(l, u),
                  this
                );
              }),
              (r.default.prototype.createCamera = function () {
                this._assert3d('createCamera');
                var l = new r.default.Camera(this._renderer);
                return (
                  l._computeCameraDefaultSettings(),
                  l._setDefaultCamera(),
                  (this._renderer._curCamera = l)
                );
              }),
              (r.default.Camera = function (l) {
                (this._renderer = l),
                  (this.cameraType = 'default'),
                  (this.cameraMatrix = new r.default.Matrix()),
                  (this.projMatrix = new r.default.Matrix());
              }),
              (r.default.Camera.prototype.perspective = function (l, h, u, o) {
                (this.cameraType = 0 < arguments.length ? 'custom' : 'default'),
                  l === void 0
                    ? ((l = this.defaultCameraFOV), (this.cameraFOV = l))
                    : (this.cameraFOV = this._renderer._pInst._toRadians(l)),
                  h === void 0 && (h = this.defaultAspectRatio),
                  u === void 0 && (u = this.defaultCameraNear),
                  o === void 0 && (o = this.defaultCameraFar),
                  u <= 1e-4 &&
                    ((u = 0.01),
                    console.log(
                      'Avoid perspective near plane values close to or below 0. Setting value to 0.01.',
                    )),
                  o < u &&
                    console.log(
                      'Perspective far plane value is less than near plane value. Nothing will be shown.',
                    ),
                  (this.aspectRatio = h),
                  (this.cameraNear = u),
                  (this.cameraFar = o),
                  (this.projMatrix = r.default.Matrix.identity());
                var n = 1 / Math.tan(this.cameraFOV / 2),
                  s = 1 / (this.cameraNear - this.cameraFar);
                this.projMatrix.set(
                  n / h,
                  0,
                  0,
                  0,
                  0,
                  -n,
                  0,
                  0,
                  0,
                  0,
                  (o + u) * s,
                  -1,
                  0,
                  0,
                  2 * o * u * s,
                  0,
                ),
                  this._isActive() &&
                    this._renderer.uPMatrix.set(
                      this.projMatrix.mat4[0],
                      this.projMatrix.mat4[1],
                      this.projMatrix.mat4[2],
                      this.projMatrix.mat4[3],
                      this.projMatrix.mat4[4],
                      this.projMatrix.mat4[5],
                      this.projMatrix.mat4[6],
                      this.projMatrix.mat4[7],
                      this.projMatrix.mat4[8],
                      this.projMatrix.mat4[9],
                      this.projMatrix.mat4[10],
                      this.projMatrix.mat4[11],
                      this.projMatrix.mat4[12],
                      this.projMatrix.mat4[13],
                      this.projMatrix.mat4[14],
                      this.projMatrix.mat4[15],
                    );
              }),
              (r.default.Camera.prototype.ortho = function (l, h, u, o, n, s) {
                l === void 0 && (l = -this._renderer.width / 2),
                  h === void 0 && (h = this._renderer.width / 2),
                  u === void 0 && (u = -this._renderer.height / 2),
                  o === void 0 && (o = this._renderer.height / 2),
                  n === void 0 && (n = 0),
                  s === void 0 &&
                    (s = Math.max(this._renderer.width, this._renderer.height));
                var i = h - l,
                  a = o - u,
                  d = s - n,
                  g = 2 / i,
                  _ = 2 / a,
                  w = -2 / d,
                  S = -(h + l) / i,
                  M = -(o + u) / a,
                  E = -(s + n) / d;
                (this.projMatrix = r.default.Matrix.identity()),
                  this.projMatrix.set(
                    g,
                    0,
                    0,
                    0,
                    0,
                    -_,
                    0,
                    0,
                    0,
                    0,
                    w,
                    0,
                    S,
                    M,
                    E,
                    1,
                  ),
                  this._isActive() &&
                    this._renderer.uPMatrix.set(
                      this.projMatrix.mat4[0],
                      this.projMatrix.mat4[1],
                      this.projMatrix.mat4[2],
                      this.projMatrix.mat4[3],
                      this.projMatrix.mat4[4],
                      this.projMatrix.mat4[5],
                      this.projMatrix.mat4[6],
                      this.projMatrix.mat4[7],
                      this.projMatrix.mat4[8],
                      this.projMatrix.mat4[9],
                      this.projMatrix.mat4[10],
                      this.projMatrix.mat4[11],
                      this.projMatrix.mat4[12],
                      this.projMatrix.mat4[13],
                      this.projMatrix.mat4[14],
                      this.projMatrix.mat4[15],
                    ),
                  (this.cameraType = 'custom');
              }),
              (r.default.Camera.prototype.frustum = function (
                l,
                h,
                u,
                o,
                n,
                s,
              ) {
                l === void 0 && (l = -this._renderer.width / 2),
                  h === void 0 && (h = this._renderer.width / 2),
                  u === void 0 && (u = -this._renderer.height / 2),
                  o === void 0 && (o = this._renderer.height / 2),
                  n === void 0 && (n = 0),
                  s === void 0 &&
                    (s = Math.max(this._renderer.width, this._renderer.height));
                var i = h - l,
                  a = o - u,
                  d = s - n,
                  g = (2 * n) / i,
                  _ = (2 * n) / a,
                  w = (-2 * s * n) / d,
                  S = (h + l) / i,
                  M = (o + u) / a,
                  E = -(s + n) / d;
                (this.projMatrix = r.default.Matrix.identity()),
                  this.projMatrix.set(
                    g,
                    0,
                    0,
                    0,
                    0,
                    _,
                    0,
                    0,
                    S,
                    M,
                    E,
                    -1,
                    0,
                    0,
                    w,
                    0,
                  ),
                  this._isActive() &&
                    this._renderer.uPMatrix.set(
                      this.projMatrix.mat4[0],
                      this.projMatrix.mat4[1],
                      this.projMatrix.mat4[2],
                      this.projMatrix.mat4[3],
                      this.projMatrix.mat4[4],
                      this.projMatrix.mat4[5],
                      this.projMatrix.mat4[6],
                      this.projMatrix.mat4[7],
                      this.projMatrix.mat4[8],
                      this.projMatrix.mat4[9],
                      this.projMatrix.mat4[10],
                      this.projMatrix.mat4[11],
                      this.projMatrix.mat4[12],
                      this.projMatrix.mat4[13],
                      this.projMatrix.mat4[14],
                      this.projMatrix.mat4[15],
                    ),
                  (this.cameraType = 'custom');
              }),
              (r.default.Camera.prototype._rotateView = function (l, h, u, o) {
                var n = this.centerX,
                  s = this.centerY,
                  i = this.centerZ;
                (n -= this.eyeX), (s -= this.eyeY), (i -= this.eyeZ);
                var a = r.default.Matrix.identity(this._renderer._pInst);
                a.rotate(this._renderer._pInst._toRadians(l), h, u, o);
                var d = [
                  n * a.mat4[0] + s * a.mat4[4] + i * a.mat4[8],
                  n * a.mat4[1] + s * a.mat4[5] + i * a.mat4[9],
                  n * a.mat4[2] + s * a.mat4[6] + i * a.mat4[10],
                ];
                (d[0] += this.eyeX),
                  (d[1] += this.eyeY),
                  (d[2] += this.eyeZ),
                  this.camera(
                    this.eyeX,
                    this.eyeY,
                    this.eyeZ,
                    d[0],
                    d[1],
                    d[2],
                    this.upX,
                    this.upY,
                    this.upZ,
                  );
              }),
              (r.default.Camera.prototype.pan = function (l) {
                var h = this._getLocalAxes();
                this._rotateView(l, h.y[0], h.y[1], h.y[2]);
              }),
              (r.default.Camera.prototype.tilt = function (l) {
                var h = this._getLocalAxes();
                this._rotateView(l, h.x[0], h.x[1], h.x[2]);
              }),
              (r.default.Camera.prototype.lookAt = function (l, h, u) {
                this.camera(
                  this.eyeX,
                  this.eyeY,
                  this.eyeZ,
                  l,
                  h,
                  u,
                  this.upX,
                  this.upY,
                  this.upZ,
                );
              }),
              (r.default.Camera.prototype.camera = function (
                l,
                h,
                u,
                o,
                n,
                s,
                i,
                a,
                d,
              ) {
                l === void 0 &&
                  ((l = this.defaultEyeX),
                  (h = this.defaultEyeY),
                  (u = this.defaultEyeZ),
                  (o = l),
                  (n = h),
                  (a = 1),
                  (d = i = s = 0)),
                  (this.eyeX = l),
                  (this.eyeY = h),
                  (this.eyeZ = u),
                  o !== void 0 &&
                    ((this.centerX = o),
                    (this.centerY = n),
                    (this.centerZ = s)),
                  i !== void 0 &&
                    ((this.upX = i), (this.upY = a), (this.upZ = d));
                var g = this._getLocalAxes();
                this.cameraMatrix.set(
                  g.x[0],
                  g.y[0],
                  g.z[0],
                  0,
                  g.x[1],
                  g.y[1],
                  g.z[1],
                  0,
                  g.x[2],
                  g.y[2],
                  g.z[2],
                  0,
                  0,
                  0,
                  0,
                  1,
                );
                var _ = -l,
                  w = -h,
                  S = -u;
                return (
                  this.cameraMatrix.translate([_, w, S]),
                  this._isActive() &&
                    this._renderer.uMVMatrix.set(
                      this.cameraMatrix.mat4[0],
                      this.cameraMatrix.mat4[1],
                      this.cameraMatrix.mat4[2],
                      this.cameraMatrix.mat4[3],
                      this.cameraMatrix.mat4[4],
                      this.cameraMatrix.mat4[5],
                      this.cameraMatrix.mat4[6],
                      this.cameraMatrix.mat4[7],
                      this.cameraMatrix.mat4[8],
                      this.cameraMatrix.mat4[9],
                      this.cameraMatrix.mat4[10],
                      this.cameraMatrix.mat4[11],
                      this.cameraMatrix.mat4[12],
                      this.cameraMatrix.mat4[13],
                      this.cameraMatrix.mat4[14],
                      this.cameraMatrix.mat4[15],
                    ),
                  this
                );
              }),
              (r.default.Camera.prototype.move = function (l, h, u) {
                var o = this._getLocalAxes(),
                  n = [o.x[0] * l, o.x[1] * l, o.x[2] * l],
                  s = [o.y[0] * h, o.y[1] * h, o.y[2] * h],
                  i = [o.z[0] * u, o.z[1] * u, o.z[2] * u];
                this.camera(
                  this.eyeX + n[0] + s[0] + i[0],
                  this.eyeY + n[1] + s[1] + i[1],
                  this.eyeZ + n[2] + s[2] + i[2],
                  this.centerX + n[0] + s[0] + i[0],
                  this.centerY + n[1] + s[1] + i[1],
                  this.centerZ + n[2] + s[2] + i[2],
                  0,
                  1,
                  0,
                );
              }),
              (r.default.Camera.prototype.setPosition = function (l, h, u) {
                var o = l - this.eyeX,
                  n = h - this.eyeY,
                  s = u - this.eyeZ;
                this.camera(
                  l,
                  h,
                  u,
                  this.centerX + o,
                  this.centerY + n,
                  this.centerZ + s,
                  0,
                  1,
                  0,
                );
              }),
              (r.default.Camera.prototype._computeCameraDefaultSettings =
                function () {
                  (this.defaultCameraFOV = (60 / 180) * Math.PI),
                    (this.defaultAspectRatio =
                      this._renderer.width / this._renderer.height),
                    (this.defaultEyeX = 0),
                    (this.defaultEyeY = 0),
                    (this.defaultEyeZ =
                      this._renderer.height /
                      2 /
                      Math.tan(this.defaultCameraFOV / 2)),
                    (this.defaultCenterX = 0),
                    (this.defaultCenterY = 0),
                    (this.defaultCenterZ = 0),
                    (this.defaultCameraNear = 0.1 * this.defaultEyeZ),
                    (this.defaultCameraFar = 10 * this.defaultEyeZ);
                }),
              (r.default.Camera.prototype._setDefaultCamera = function () {
                (this.cameraFOV = this.defaultCameraFOV),
                  (this.aspectRatio = this.defaultAspectRatio),
                  (this.eyeX = this.defaultEyeX),
                  (this.eyeY = this.defaultEyeY),
                  (this.eyeZ = this.defaultEyeZ),
                  (this.centerX = this.defaultCenterX),
                  (this.centerY = this.defaultCenterY),
                  (this.centerZ = this.defaultCenterZ),
                  (this.upX = 0),
                  (this.upY = 1),
                  (this.upZ = 0),
                  (this.cameraNear = this.defaultCameraNear),
                  (this.cameraFar = this.defaultCameraFar),
                  this.perspective(),
                  this.camera(),
                  (this.cameraType = 'default');
              }),
              (r.default.Camera.prototype._resize = function () {
                this.cameraType === 'default'
                  ? (this._computeCameraDefaultSettings(),
                    this._setDefaultCamera())
                  : this.perspective(
                      this.cameraFOV,
                      this._renderer.width / this._renderer.height,
                    );
              }),
              (r.default.Camera.prototype.copy = function () {
                var l = new r.default.Camera(this._renderer);
                return (
                  (l.cameraFOV = this.cameraFOV),
                  (l.aspectRatio = this.aspectRatio),
                  (l.eyeX = this.eyeX),
                  (l.eyeY = this.eyeY),
                  (l.eyeZ = this.eyeZ),
                  (l.centerX = this.centerX),
                  (l.centerY = this.centerY),
                  (l.centerZ = this.centerZ),
                  (l.cameraNear = this.cameraNear),
                  (l.cameraFar = this.cameraFar),
                  (l.cameraType = this.cameraType),
                  (l.cameraMatrix = this.cameraMatrix.copy()),
                  (l.projMatrix = this.projMatrix.copy()),
                  l
                );
              }),
              (r.default.Camera.prototype._getLocalAxes = function () {
                var l = this.eyeX - this.centerX,
                  h = this.eyeY - this.centerY,
                  u = this.eyeZ - this.centerZ,
                  o = Math.sqrt(l * l + h * h + u * u);
                o !== 0 && ((l /= o), (h /= o), (u /= o));
                var n = this.upX,
                  s = this.upY,
                  i = this.upZ,
                  a = s * u - i * h,
                  d = -n * u + i * l,
                  g = n * h - s * l;
                (n = h * g - u * d), (s = -l * g + u * a), (i = l * d - h * a);
                var _ = Math.sqrt(a * a + d * d + g * g);
                _ !== 0 && ((a /= _), (d /= _), (g /= _));
                var w = Math.sqrt(n * n + s * s + i * i);
                return (
                  w !== 0 && ((n /= w), (s /= w), (i /= w)),
                  { x: [a, d, g], y: [n, s, i], z: [l, h, u] }
                );
              }),
              (r.default.Camera.prototype._orbit = function (l, h, u) {
                var o = this.eyeX - this.centerX,
                  n = this.eyeY - this.centerY,
                  s = this.eyeZ - this.centerZ,
                  i = Math.sqrt(o * o + n * n + s * s),
                  a = Math.atan2(o, s),
                  d = Math.acos(Math.max(-1, Math.min(1, n / i)));
                (a += l),
                  (i += u) < 0 && (i = 0.1),
                  (d += h) > Math.PI ? (d = Math.PI) : d <= 0 && (d = 0.001);
                var g = Math.sin(d) * i * Math.sin(a),
                  _ = Math.cos(d) * i,
                  w = Math.sin(d) * i * Math.cos(a);
                this.camera(
                  g + this.centerX,
                  _ + this.centerY,
                  w + this.centerZ,
                  this.centerX,
                  this.centerY,
                  this.centerZ,
                  0,
                  1,
                  0,
                );
              }),
              (r.default.Camera.prototype._isActive = function () {
                return this === this._renderer._curCamera;
              }),
              (r.default.prototype.setCamera = function (l) {
                (this._renderer._curCamera = l),
                  this._renderer.uPMatrix.set(
                    l.projMatrix.mat4[0],
                    l.projMatrix.mat4[1],
                    l.projMatrix.mat4[2],
                    l.projMatrix.mat4[3],
                    l.projMatrix.mat4[4],
                    l.projMatrix.mat4[5],
                    l.projMatrix.mat4[6],
                    l.projMatrix.mat4[7],
                    l.projMatrix.mat4[8],
                    l.projMatrix.mat4[9],
                    l.projMatrix.mat4[10],
                    l.projMatrix.mat4[11],
                    l.projMatrix.mat4[12],
                    l.projMatrix.mat4[13],
                    l.projMatrix.mat4[14],
                    l.projMatrix.mat4[15],
                  );
              });
            var c = r.default.Camera;
            y.default = c;
          },
          { '../core/main': 264 },
        ],
        313: [
          function (e, v, y) {
            e('core-js/modules/es.string.sub'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.Geometry = function (l, h, u) {
              return (
                (this.vertices = []),
                (this.lineVertices = []),
                (this.lineNormals = []),
                (this.vertexNormals = []),
                (this.faces = []),
                (this.uvs = []),
                (this.edges = []),
                (this.vertexColors = []),
                (this.detailX = l !== void 0 ? l : 1),
                (this.detailY = h !== void 0 ? h : 1),
                (this.dirtyFlags = {}),
                u instanceof Function && u.call(this),
                this
              );
            }),
              (r.default.Geometry.prototype.reset = function () {
                (this.lineVertices.length = 0),
                  (this.lineNormals.length = 0),
                  (this.vertices.length = 0),
                  (this.edges.length = 0),
                  (this.vertexColors.length = 0),
                  (this.vertexNormals.length = 0),
                  (this.uvs.length = 0),
                  (this.dirtyFlags = {});
              }),
              (r.default.Geometry.prototype.computeFaces = function () {
                this.faces.length = 0;
                for (
                  var l, h, u, o, n = this.detailX + 1, s = 0;
                  s < this.detailY;
                  s++
                )
                  for (var i = 0; i < this.detailX; i++)
                    (h = (l = s * n + i) + 1),
                      (u = (s + 1) * n + i + 1),
                      (o = (s + 1) * n + i),
                      this.faces.push([l, h, o]),
                      this.faces.push([o, h, u]);
                return this;
              }),
              (r.default.Geometry.prototype._getFaceNormal = function (l) {
                var h = this.faces[l],
                  u = this.vertices[h[0]],
                  o = this.vertices[h[1]],
                  n = this.vertices[h[2]],
                  s = r.default.Vector.sub(o, u),
                  i = r.default.Vector.sub(n, u),
                  a = r.default.Vector.cross(s, i),
                  d = r.default.Vector.mag(a),
                  g = d / (r.default.Vector.mag(s) * r.default.Vector.mag(i));
                return g === 0 || isNaN(g)
                  ? (console.warn(
                      'p5.Geometry.prototype._getFaceNormal:',
                      'face has colinear sides or a repeated vertex',
                    ),
                    a)
                  : (1 < g && (g = 1), a.mult(Math.asin(g) / d));
              }),
              (r.default.Geometry.prototype.computeNormals = function () {
                var l,
                  h = this.vertexNormals,
                  u = this.vertices,
                  o = this.faces;
                for (l = h.length = 0; l < u.length; ++l)
                  h.push(new r.default.Vector());
                for (var n = 0; n < o.length; ++n)
                  for (
                    var s = o[n], i = this._getFaceNormal(n), a = 0;
                    a < 3;
                    ++a
                  )
                    h[s[a]].add(i);
                for (l = 0; l < u.length; ++l) h[l].normalize();
                return this;
              }),
              (r.default.Geometry.prototype.averageNormals = function () {
                for (var l = 0; l <= this.detailY; l++) {
                  var h = this.detailX + 1,
                    u = r.default.Vector.add(
                      this.vertexNormals[l * h],
                      this.vertexNormals[l * h + this.detailX],
                    );
                  (u = r.default.Vector.div(u, 2)),
                    (this.vertexNormals[l * h] = u),
                    (this.vertexNormals[l * h + this.detailX] = u);
                }
                return this;
              }),
              (r.default.Geometry.prototype.averagePoleNormals = function () {
                for (
                  var l = new r.default.Vector(0, 0, 0), h = 0;
                  h < this.detailX;
                  h++
                )
                  l.add(this.vertexNormals[h]);
                l = r.default.Vector.div(l, this.detailX);
                for (var u = 0; u < this.detailX; u++)
                  this.vertexNormals[u] = l;
                l = new r.default.Vector(0, 0, 0);
                for (
                  var o = this.vertices.length - 1;
                  o > this.vertices.length - 1 - this.detailX;
                  o--
                )
                  l.add(this.vertexNormals[o]);
                l = r.default.Vector.div(l, this.detailX);
                for (
                  var n = this.vertices.length - 1;
                  n > this.vertices.length - 1 - this.detailX;
                  n--
                )
                  this.vertexNormals[n] = l;
                return this;
              }),
              (r.default.Geometry.prototype._makeTriangleEdges = function () {
                if (
                  ((this.edges.length = 0), Array.isArray(this.strokeIndices))
                )
                  for (var l = 0, h = this.strokeIndices.length; l < h; l++)
                    this.edges.push(this.strokeIndices[l]);
                else
                  for (var u = 0; u < this.faces.length; u++)
                    this.edges.push([this.faces[u][0], this.faces[u][1]]),
                      this.edges.push([this.faces[u][1], this.faces[u][2]]),
                      this.edges.push([this.faces[u][2], this.faces[u][0]]);
                return this;
              }),
              (r.default.Geometry.prototype._edgesToVertices = function () {
                this.lineVertices.length = 0;
                for (
                  var l = (this.lineNormals.length = 0);
                  l < this.edges.length;
                  l++
                ) {
                  var h = this.vertices[this.edges[l][0]],
                    u = this.vertices[this.edges[l][1]],
                    o = u.copy().sub(h).normalize(),
                    n = h.array(),
                    s = h.array(),
                    i = u.array(),
                    a = u.array(),
                    d = o.array(),
                    g = o.array();
                  d.push(1),
                    g.push(-1),
                    this.lineNormals.push(d, g, d, d, g, g),
                    this.lineVertices.push(n, s, i, i, s, a);
                }
                return this;
              }),
              (r.default.Geometry.prototype.normalize = function () {
                if (0 < this.vertices.length) {
                  for (
                    var l = this.vertices[0].copy(),
                      h = this.vertices[0].copy(),
                      u = 0;
                    u < this.vertices.length;
                    u++
                  )
                    (l.x = Math.max(l.x, this.vertices[u].x)),
                      (h.x = Math.min(h.x, this.vertices[u].x)),
                      (l.y = Math.max(l.y, this.vertices[u].y)),
                      (h.y = Math.min(h.y, this.vertices[u].y)),
                      (l.z = Math.max(l.z, this.vertices[u].z)),
                      (h.z = Math.min(h.z, this.vertices[u].z));
                  for (
                    var o = r.default.Vector.lerp(l, h, 0.5),
                      n = r.default.Vector.sub(l, h),
                      s = 200 / Math.max(Math.max(n.x, n.y), n.z),
                      i = 0;
                    i < this.vertices.length;
                    i++
                  )
                    this.vertices[i].sub(o), this.vertices[i].mult(s);
                }
                return this;
              });
            var c = r.default.Geometry;
            y.default = c;
          },
          { '../core/main': 264, 'core-js/modules/es.string.sub': 192 },
        ],
        314: [
          function (e, v, y) {
            e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.typed-array.float32-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m },
              c = Array,
              l = function (u) {
                return u instanceof Array;
              };
            typeof Float32Array < 'u' &&
              ((c = Float32Array),
              (l = function (u) {
                return u instanceof Array || u instanceof Float32Array;
              })),
              (r.default.Matrix = function () {
                for (
                  var u = new Array(arguments.length), o = 0;
                  o < u.length;
                  ++o
                )
                  u[o] = arguments[o];
                return (
                  u.length &&
                    u[u.length - 1] instanceof r.default &&
                    (this.p5 = u[u.length - 1]),
                  u[0] === 'mat3'
                    ? (this.mat3 = Array.isArray(u[1])
                        ? u[1]
                        : new c([1, 0, 0, 0, 1, 0, 0, 0, 1]))
                    : (this.mat4 = Array.isArray(u[0])
                        ? u[0]
                        : new c([
                            1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
                          ])),
                  this
                );
              }),
              (r.default.Matrix.prototype.set = function (u) {
                return (
                  u instanceof r.default.Matrix
                    ? (this.mat4 = u.mat4)
                    : l(u)
                    ? (this.mat4 = u)
                    : arguments.length === 16 &&
                      ((this.mat4[0] = u),
                      (this.mat4[1] = arguments[1]),
                      (this.mat4[2] = arguments[2]),
                      (this.mat4[3] = arguments[3]),
                      (this.mat4[4] = arguments[4]),
                      (this.mat4[5] = arguments[5]),
                      (this.mat4[6] = arguments[6]),
                      (this.mat4[7] = arguments[7]),
                      (this.mat4[8] = arguments[8]),
                      (this.mat4[9] = arguments[9]),
                      (this.mat4[10] = arguments[10]),
                      (this.mat4[11] = arguments[11]),
                      (this.mat4[12] = arguments[12]),
                      (this.mat4[13] = arguments[13]),
                      (this.mat4[14] = arguments[14]),
                      (this.mat4[15] = arguments[15])),
                  this
                );
              }),
              (r.default.Matrix.prototype.get = function () {
                return new r.default.Matrix(this.mat4, this.p5);
              }),
              (r.default.Matrix.prototype.copy = function () {
                var u = new r.default.Matrix(this.p5);
                return (
                  (u.mat4[0] = this.mat4[0]),
                  (u.mat4[1] = this.mat4[1]),
                  (u.mat4[2] = this.mat4[2]),
                  (u.mat4[3] = this.mat4[3]),
                  (u.mat4[4] = this.mat4[4]),
                  (u.mat4[5] = this.mat4[5]),
                  (u.mat4[6] = this.mat4[6]),
                  (u.mat4[7] = this.mat4[7]),
                  (u.mat4[8] = this.mat4[8]),
                  (u.mat4[9] = this.mat4[9]),
                  (u.mat4[10] = this.mat4[10]),
                  (u.mat4[11] = this.mat4[11]),
                  (u.mat4[12] = this.mat4[12]),
                  (u.mat4[13] = this.mat4[13]),
                  (u.mat4[14] = this.mat4[14]),
                  (u.mat4[15] = this.mat4[15]),
                  u
                );
              }),
              (r.default.Matrix.identity = function (u) {
                return new r.default.Matrix(u);
              }),
              (r.default.Matrix.prototype.transpose = function (u) {
                var o, n, s, i, a, d;
                return (
                  u instanceof r.default.Matrix
                    ? ((o = u.mat4[1]),
                      (n = u.mat4[2]),
                      (s = u.mat4[3]),
                      (i = u.mat4[6]),
                      (a = u.mat4[7]),
                      (d = u.mat4[11]),
                      (this.mat4[0] = u.mat4[0]),
                      (this.mat4[1] = u.mat4[4]),
                      (this.mat4[2] = u.mat4[8]),
                      (this.mat4[3] = u.mat4[12]),
                      (this.mat4[4] = o),
                      (this.mat4[5] = u.mat4[5]),
                      (this.mat4[6] = u.mat4[9]),
                      (this.mat4[7] = u.mat4[13]),
                      (this.mat4[8] = n),
                      (this.mat4[9] = i),
                      (this.mat4[10] = u.mat4[10]),
                      (this.mat4[11] = u.mat4[14]),
                      (this.mat4[12] = s),
                      (this.mat4[13] = a),
                      (this.mat4[14] = d),
                      (this.mat4[15] = u.mat4[15]))
                    : l(u) &&
                      ((o = u[1]),
                      (n = u[2]),
                      (s = u[3]),
                      (i = u[6]),
                      (a = u[7]),
                      (d = u[11]),
                      (this.mat4[0] = u[0]),
                      (this.mat4[1] = u[4]),
                      (this.mat4[2] = u[8]),
                      (this.mat4[3] = u[12]),
                      (this.mat4[4] = o),
                      (this.mat4[5] = u[5]),
                      (this.mat4[6] = u[9]),
                      (this.mat4[7] = u[13]),
                      (this.mat4[8] = n),
                      (this.mat4[9] = i),
                      (this.mat4[10] = u[10]),
                      (this.mat4[11] = u[14]),
                      (this.mat4[12] = s),
                      (this.mat4[13] = a),
                      (this.mat4[14] = d),
                      (this.mat4[15] = u[15])),
                  this
                );
              }),
              (r.default.Matrix.prototype.invert = function (u) {
                var o, n, s, i, a, d, g, _, w, S, M, E, O, D, A, k;
                u instanceof r.default.Matrix
                  ? ((o = u.mat4[0]),
                    (n = u.mat4[1]),
                    (s = u.mat4[2]),
                    (i = u.mat4[3]),
                    (a = u.mat4[4]),
                    (d = u.mat4[5]),
                    (g = u.mat4[6]),
                    (_ = u.mat4[7]),
                    (w = u.mat4[8]),
                    (S = u.mat4[9]),
                    (M = u.mat4[10]),
                    (E = u.mat4[11]),
                    (O = u.mat4[12]),
                    (D = u.mat4[13]),
                    (A = u.mat4[14]),
                    (k = u.mat4[15]))
                  : l(u) &&
                    ((o = u[0]),
                    (n = u[1]),
                    (s = u[2]),
                    (i = u[3]),
                    (a = u[4]),
                    (d = u[5]),
                    (g = u[6]),
                    (_ = u[7]),
                    (w = u[8]),
                    (S = u[9]),
                    (M = u[10]),
                    (E = u[11]),
                    (O = u[12]),
                    (D = u[13]),
                    (A = u[14]),
                    (k = u[15]));
                var L = o * d - n * a,
                  R = o * g - s * a,
                  N = o * _ - i * a,
                  B = n * g - s * d,
                  Z = n * _ - i * d,
                  J = s * _ - i * g,
                  $ = w * D - S * O,
                  ee = w * A - M * O,
                  Q = w * k - E * O,
                  oe = S * A - M * D,
                  ce = S * k - E * D,
                  ve = M * k - E * A,
                  de = L * ve - R * ce + N * oe + B * Q - Z * ee + J * $;
                return de
                  ? ((de = 1 / de),
                    (this.mat4[0] = (d * ve - g * ce + _ * oe) * de),
                    (this.mat4[1] = (s * ce - n * ve - i * oe) * de),
                    (this.mat4[2] = (D * J - A * Z + k * B) * de),
                    (this.mat4[3] = (M * Z - S * J - E * B) * de),
                    (this.mat4[4] = (g * Q - a * ve - _ * ee) * de),
                    (this.mat4[5] = (o * ve - s * Q + i * ee) * de),
                    (this.mat4[6] = (A * N - O * J - k * R) * de),
                    (this.mat4[7] = (w * J - M * N + E * R) * de),
                    (this.mat4[8] = (a * ce - d * Q + _ * $) * de),
                    (this.mat4[9] = (n * Q - o * ce - i * $) * de),
                    (this.mat4[10] = (O * Z - D * N + k * L) * de),
                    (this.mat4[11] = (S * N - w * Z - E * L) * de),
                    (this.mat4[12] = (d * ee - a * oe - g * $) * de),
                    (this.mat4[13] = (o * oe - n * ee + s * $) * de),
                    (this.mat4[14] = (D * R - O * B - A * L) * de),
                    (this.mat4[15] = (w * B - S * R + M * L) * de),
                    this)
                  : null;
              }),
              (r.default.Matrix.prototype.invert3x3 = function () {
                var u = this.mat3[0],
                  o = this.mat3[1],
                  n = this.mat3[2],
                  s = this.mat3[3],
                  i = this.mat3[4],
                  a = this.mat3[5],
                  d = this.mat3[6],
                  g = this.mat3[7],
                  _ = this.mat3[8],
                  w = _ * i - a * g,
                  S = -_ * s + a * d,
                  M = g * s - i * d,
                  E = u * w + o * S + n * M;
                return E
                  ? ((E = 1 / E),
                    (this.mat3[0] = w * E),
                    (this.mat3[1] = (-_ * o + n * g) * E),
                    (this.mat3[2] = (a * o - n * i) * E),
                    (this.mat3[3] = S * E),
                    (this.mat3[4] = (_ * u - n * d) * E),
                    (this.mat3[5] = (-a * u + n * s) * E),
                    (this.mat3[6] = M * E),
                    (this.mat3[7] = (-g * u + o * d) * E),
                    (this.mat3[8] = (i * u - o * s) * E),
                    this)
                  : null;
              }),
              (r.default.Matrix.prototype.transpose3x3 = function (u) {
                var o = u[1],
                  n = u[2],
                  s = u[5];
                return (
                  (this.mat3[1] = u[3]),
                  (this.mat3[2] = u[6]),
                  (this.mat3[3] = o),
                  (this.mat3[5] = u[7]),
                  (this.mat3[6] = n),
                  (this.mat3[7] = s),
                  this
                );
              }),
              (r.default.Matrix.prototype.inverseTranspose = function (u) {
                this.mat3 === void 0
                  ? console.error('sorry, this function only works with mat3')
                  : ((this.mat3[0] = u.mat4[0]),
                    (this.mat3[1] = u.mat4[1]),
                    (this.mat3[2] = u.mat4[2]),
                    (this.mat3[3] = u.mat4[4]),
                    (this.mat3[4] = u.mat4[5]),
                    (this.mat3[5] = u.mat4[6]),
                    (this.mat3[6] = u.mat4[8]),
                    (this.mat3[7] = u.mat4[9]),
                    (this.mat3[8] = u.mat4[10]));
                var o = this.invert3x3();
                if (o) o.transpose3x3(this.mat3);
                else for (var n = 0; n < 9; n++) this.mat3[n] = 0;
                return this;
              }),
              (r.default.Matrix.prototype.determinant = function () {
                var u =
                    this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4],
                  o = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4],
                  n = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4],
                  s = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5],
                  i = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5],
                  a = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6],
                  d =
                    this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12],
                  g =
                    this.mat4[8] * this.mat4[14] -
                    this.mat4[10] * this.mat4[12],
                  _ =
                    this.mat4[8] * this.mat4[15] -
                    this.mat4[11] * this.mat4[12],
                  w =
                    this.mat4[9] * this.mat4[14] -
                    this.mat4[10] * this.mat4[13],
                  S =
                    this.mat4[9] * this.mat4[15] -
                    this.mat4[11] * this.mat4[13];
                return (
                  u *
                    (this.mat4[10] * this.mat4[15] -
                      this.mat4[11] * this.mat4[14]) -
                  o * S +
                  n * w +
                  s * _ -
                  i * g +
                  a * d
                );
              }),
              (r.default.Matrix.prototype.mult = function (u) {
                var o;
                if (u === this || u === this.mat4) o = this.copy().mat4;
                else if (u instanceof r.default.Matrix) o = u.mat4;
                else if (l(u)) o = u;
                else {
                  if (arguments.length !== 16) return;
                  o = arguments;
                }
                var n = this.mat4[0],
                  s = this.mat4[1],
                  i = this.mat4[2],
                  a = this.mat4[3];
                return (
                  (this.mat4[0] = n * o[0] + s * o[4] + i * o[8] + a * o[12]),
                  (this.mat4[1] = n * o[1] + s * o[5] + i * o[9] + a * o[13]),
                  (this.mat4[2] = n * o[2] + s * o[6] + i * o[10] + a * o[14]),
                  (this.mat4[3] = n * o[3] + s * o[7] + i * o[11] + a * o[15]),
                  (n = this.mat4[4]),
                  (s = this.mat4[5]),
                  (i = this.mat4[6]),
                  (a = this.mat4[7]),
                  (this.mat4[4] = n * o[0] + s * o[4] + i * o[8] + a * o[12]),
                  (this.mat4[5] = n * o[1] + s * o[5] + i * o[9] + a * o[13]),
                  (this.mat4[6] = n * o[2] + s * o[6] + i * o[10] + a * o[14]),
                  (this.mat4[7] = n * o[3] + s * o[7] + i * o[11] + a * o[15]),
                  (n = this.mat4[8]),
                  (s = this.mat4[9]),
                  (i = this.mat4[10]),
                  (a = this.mat4[11]),
                  (this.mat4[8] = n * o[0] + s * o[4] + i * o[8] + a * o[12]),
                  (this.mat4[9] = n * o[1] + s * o[5] + i * o[9] + a * o[13]),
                  (this.mat4[10] = n * o[2] + s * o[6] + i * o[10] + a * o[14]),
                  (this.mat4[11] = n * o[3] + s * o[7] + i * o[11] + a * o[15]),
                  (n = this.mat4[12]),
                  (s = this.mat4[13]),
                  (i = this.mat4[14]),
                  (a = this.mat4[15]),
                  (this.mat4[12] = n * o[0] + s * o[4] + i * o[8] + a * o[12]),
                  (this.mat4[13] = n * o[1] + s * o[5] + i * o[9] + a * o[13]),
                  (this.mat4[14] = n * o[2] + s * o[6] + i * o[10] + a * o[14]),
                  (this.mat4[15] = n * o[3] + s * o[7] + i * o[11] + a * o[15]),
                  this
                );
              }),
              (r.default.Matrix.prototype.apply = function (u) {
                var o;
                if (u === this || u === this.mat4) o = this.copy().mat4;
                else if (u instanceof r.default.Matrix) o = u.mat4;
                else if (l(u)) o = u;
                else {
                  if (arguments.length !== 16) return;
                  o = arguments;
                }
                var n = this.mat4,
                  s = n[0],
                  i = n[4],
                  a = n[8],
                  d = n[12];
                (n[0] = o[0] * s + o[1] * i + o[2] * a + o[3] * d),
                  (n[4] = o[4] * s + o[5] * i + o[6] * a + o[7] * d),
                  (n[8] = o[8] * s + o[9] * i + o[10] * a + o[11] * d),
                  (n[12] = o[12] * s + o[13] * i + o[14] * a + o[15] * d);
                var g = n[1],
                  _ = n[5],
                  w = n[9],
                  S = n[13];
                (n[1] = o[0] * g + o[1] * _ + o[2] * w + o[3] * S),
                  (n[5] = o[4] * g + o[5] * _ + o[6] * w + o[7] * S),
                  (n[9] = o[8] * g + o[9] * _ + o[10] * w + o[11] * S),
                  (n[13] = o[12] * g + o[13] * _ + o[14] * w + o[15] * S);
                var M = n[2],
                  E = n[6],
                  O = n[10],
                  D = n[14];
                (n[2] = o[0] * M + o[1] * E + o[2] * O + o[3] * D),
                  (n[6] = o[4] * M + o[5] * E + o[6] * O + o[7] * D),
                  (n[10] = o[8] * M + o[9] * E + o[10] * O + o[11] * D),
                  (n[14] = o[12] * M + o[13] * E + o[14] * O + o[15] * D);
                var A = n[3],
                  k = n[7],
                  L = n[11],
                  R = n[15];
                return (
                  (n[3] = o[0] * A + o[1] * k + o[2] * L + o[3] * R),
                  (n[7] = o[4] * A + o[5] * k + o[6] * L + o[7] * R),
                  (n[11] = o[8] * A + o[9] * k + o[10] * L + o[11] * R),
                  (n[15] = o[12] * A + o[13] * k + o[14] * L + o[15] * R),
                  this
                );
              }),
              (r.default.Matrix.prototype.scale = function (u, o, n) {
                return (
                  u instanceof r.default.Vector
                    ? ((o = u.y), (n = u.z), (u = u.x))
                    : u instanceof Array &&
                      ((o = u[1]), (n = u[2]), (u = u[0])),
                  (this.mat4[0] *= u),
                  (this.mat4[1] *= u),
                  (this.mat4[2] *= u),
                  (this.mat4[3] *= u),
                  (this.mat4[4] *= o),
                  (this.mat4[5] *= o),
                  (this.mat4[6] *= o),
                  (this.mat4[7] *= o),
                  (this.mat4[8] *= n),
                  (this.mat4[9] *= n),
                  (this.mat4[10] *= n),
                  (this.mat4[11] *= n),
                  this
                );
              }),
              (r.default.Matrix.prototype.rotate = function (u, o, n, s) {
                o instanceof r.default.Vector
                  ? ((n = o.y), (s = o.z), (o = o.x))
                  : o instanceof Array && ((n = o[1]), (s = o[2]), (o = o[0]));
                var i = Math.sqrt(o * o + n * n + s * s);
                (o *= 1 / i), (n *= 1 / i), (s *= 1 / i);
                var a = this.mat4[0],
                  d = this.mat4[1],
                  g = this.mat4[2],
                  _ = this.mat4[3],
                  w = this.mat4[4],
                  S = this.mat4[5],
                  M = this.mat4[6],
                  E = this.mat4[7],
                  O = this.mat4[8],
                  D = this.mat4[9],
                  A = this.mat4[10],
                  k = this.mat4[11],
                  L = Math.sin(u),
                  R = Math.cos(u),
                  N = 1 - R,
                  B = o * o * N + R,
                  Z = n * o * N + s * L,
                  J = s * o * N - n * L,
                  $ = o * n * N - s * L,
                  ee = n * n * N + R,
                  Q = s * n * N + o * L,
                  oe = o * s * N + n * L,
                  ce = n * s * N - o * L,
                  ve = s * s * N + R;
                return (
                  (this.mat4[0] = a * B + w * Z + O * J),
                  (this.mat4[1] = d * B + S * Z + D * J),
                  (this.mat4[2] = g * B + M * Z + A * J),
                  (this.mat4[3] = _ * B + E * Z + k * J),
                  (this.mat4[4] = a * $ + w * ee + O * Q),
                  (this.mat4[5] = d * $ + S * ee + D * Q),
                  (this.mat4[6] = g * $ + M * ee + A * Q),
                  (this.mat4[7] = _ * $ + E * ee + k * Q),
                  (this.mat4[8] = a * oe + w * ce + O * ve),
                  (this.mat4[9] = d * oe + S * ce + D * ve),
                  (this.mat4[10] = g * oe + M * ce + A * ve),
                  (this.mat4[11] = _ * oe + E * ce + k * ve),
                  this
                );
              }),
              (r.default.Matrix.prototype.translate = function (u) {
                var o = u[0],
                  n = u[1],
                  s = u[2] || 0;
                (this.mat4[12] +=
                  this.mat4[0] * o + this.mat4[4] * n + this.mat4[8] * s),
                  (this.mat4[13] +=
                    this.mat4[1] * o + this.mat4[5] * n + this.mat4[9] * s),
                  (this.mat4[14] +=
                    this.mat4[2] * o + this.mat4[6] * n + this.mat4[10] * s),
                  (this.mat4[15] +=
                    this.mat4[3] * o + this.mat4[7] * n + this.mat4[11] * s);
              }),
              (r.default.Matrix.prototype.rotateX = function (u) {
                this.rotate(u, 1, 0, 0);
              }),
              (r.default.Matrix.prototype.rotateY = function (u) {
                this.rotate(u, 0, 1, 0);
              }),
              (r.default.Matrix.prototype.rotateZ = function (u) {
                this.rotate(u, 0, 0, 1);
              }),
              (r.default.Matrix.prototype.perspective = function (u, o, n, s) {
                var i = 1 / Math.tan(u / 2),
                  a = 1 / (n - s);
                return (
                  (this.mat4[0] = i / o),
                  (this.mat4[1] = 0),
                  (this.mat4[2] = 0),
                  (this.mat4[3] = 0),
                  (this.mat4[4] = 0),
                  (this.mat4[5] = i),
                  (this.mat4[6] = 0),
                  (this.mat4[7] = 0),
                  (this.mat4[8] = 0),
                  (this.mat4[9] = 0),
                  (this.mat4[10] = (s + n) * a),
                  (this.mat4[11] = -1),
                  (this.mat4[12] = 0),
                  (this.mat4[13] = 0),
                  (this.mat4[14] = 2 * s * n * a),
                  (this.mat4[15] = 0),
                  this
                );
              }),
              (r.default.Matrix.prototype.ortho = function (u, o, n, s, i, a) {
                var d = 1 / (u - o),
                  g = 1 / (n - s),
                  _ = 1 / (i - a);
                return (
                  (this.mat4[0] = -2 * d),
                  (this.mat4[1] = 0),
                  (this.mat4[2] = 0),
                  (this.mat4[3] = 0),
                  (this.mat4[4] = 0),
                  (this.mat4[5] = -2 * g),
                  (this.mat4[6] = 0),
                  (this.mat4[7] = 0),
                  (this.mat4[8] = 0),
                  (this.mat4[9] = 0),
                  (this.mat4[10] = 2 * _),
                  (this.mat4[11] = 0),
                  (this.mat4[12] = (u + o) * d),
                  (this.mat4[13] = (s + n) * g),
                  (this.mat4[14] = (a + i) * _),
                  (this.mat4[15] = 1),
                  this
                );
              });
            var h = r.default.Matrix;
            y.default = h;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.float32-array': 203,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
          },
        ],
        315: [
          function (e, v, y) {
            e('core-js/modules/es.array.map'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.RenderBuffer = function (l, h, u, o, n, s) {
              (this.size = l),
                (this.src = h),
                (this.dst = u),
                (this.attr = o),
                (this._renderer = n),
                (this.map = s);
            }),
              (r.default.RenderBuffer.prototype._prepareBuffer = function (
                l,
                h,
              ) {
                var u,
                  o = h.attributes,
                  n = this._renderer.GL;
                u = l.model ? l.model : l;
                var s = o[this.attr];
                if (s) {
                  var i = l[this.dst],
                    a = u[this.src];
                  if (0 < a.length) {
                    var d = !i;
                    if (
                      (d && (l[this.dst] = i = n.createBuffer()),
                      n.bindBuffer(n.ARRAY_BUFFER, i),
                      d || u.dirtyFlags[this.src] !== !1)
                    ) {
                      var g = this.map,
                        _ = g ? g(a) : a;
                      this._renderer._bindBuffer(i, n.ARRAY_BUFFER, _),
                        (u.dirtyFlags[this.src] = !1);
                    }
                    h.enableAttrib(s, this.size);
                  }
                }
              });
            var c = r.default.RenderBuffer;
            y.default = c;
          },
          { '../core/main': 264, 'core-js/modules/es.array.map': 161 },
        ],
        316: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.fill'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.typed-array.float32-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            e('./p5.RenderBuffer'),
              (c.default.RendererGL.prototype.beginShape = function (o) {
                return (
                  (this.immediateMode.shapeMode =
                    o !== void 0 ? o : l.TRIANGLE_FAN),
                  this.immediateMode.geometry.reset(),
                  this
                );
              }),
              (c.default.RendererGL.prototype.vertex = function (o, n) {
                var s, i, a;
                (s = i = a = 0),
                  arguments.length === 3
                    ? (s = arguments[2])
                    : arguments.length === 4
                    ? ((i = arguments[2]), (a = arguments[3]))
                    : arguments.length === 5 &&
                      ((s = arguments[2]),
                      (i = arguments[3]),
                      (a = arguments[4]));
                var d = new c.default.Vector(o, n, s);
                this.immediateMode.geometry.vertices.push(d),
                  this.immediateMode.geometry.vertexNormals.push(
                    this._currentNormal,
                  );
                var g = this.curFillColor || [0.5, 0.5, 0.5, 1];
                return (
                  this.immediateMode.geometry.vertexColors.push(
                    g[0],
                    g[1],
                    g[2],
                    g[3],
                  ),
                  this.textureMode === l.IMAGE &&
                    (this._tex !== null
                      ? 0 < this._tex.width &&
                        0 < this._tex.height &&
                        ((i /= this._tex.width), (a /= this._tex.height))
                      : this._tex === null &&
                        4 <= arguments.length &&
                        console.warn(
                          'You must first call texture() before using vertex() with image based u and v coordinates',
                        )),
                  this.immediateMode.geometry.uvs.push(i, a),
                  (this.immediateMode._bezierVertex[0] = o),
                  (this.immediateMode._bezierVertex[1] = n),
                  (this.immediateMode._bezierVertex[2] = s),
                  (this.immediateMode._quadraticVertex[0] = o),
                  (this.immediateMode._quadraticVertex[1] = n),
                  (this.immediateMode._quadraticVertex[2] = s),
                  this
                );
              }),
              (c.default.RendererGL.prototype.normal = function (o, n, s) {
                return (
                  o instanceof c.default.Vector
                    ? (this._currentNormal = o)
                    : (this._currentNormal = new c.default.Vector(o, n, s)),
                  this
                );
              }),
              (c.default.RendererGL.prototype.endShape = function (
                o,
                n,
                s,
                i,
                a,
                d,
              ) {
                return (
                  this.immediateMode.shapeMode === l.POINTS
                    ? this._drawPoints(
                        this.immediateMode.geometry.vertices,
                        this.immediateMode.buffers.point,
                      )
                    : (this._processVertices.apply(this, arguments),
                      this._doFill &&
                        1 < this.immediateMode.geometry.vertices.length &&
                        this._drawImmediateFill(),
                      this._doStroke &&
                        1 < this.immediateMode.geometry.lineVertices.length &&
                        this._drawImmediateStroke(),
                      (this.isBezier = !1),
                      (this.isQuadratic = !1),
                      (this.isCurve = !1),
                      (this.immediateMode._bezierVertex.length = 0),
                      (this.immediateMode._quadraticVertex.length = 0),
                      (this.immediateMode._curveVertex.length = 0)),
                  this
                );
              }),
              (c.default.RendererGL.prototype._processVertices = function (o) {
                if (this.immediateMode.geometry.vertices.length !== 0) {
                  var n = this._doStroke && this.drawMode !== l.TEXTURE,
                    s = o === l.CLOSE;
                  n &&
                    ((this.immediateMode.geometry.edges = this._calculateEdges(
                      this.immediateMode.shapeMode,
                      this.immediateMode.geometry.vertices,
                      s,
                    )),
                    this.immediateMode.geometry._edgesToVertices());
                  var i = this.immediateMode.shapeMode === l.TESS;
                  (this.isBezier || this.isQuadratic || this.isCurve || i) &&
                    this.immediateMode.shapeMode !== l.LINES &&
                    this._tesselateShape();
                }
              }),
              (c.default.RendererGL.prototype._calculateEdges = function (
                o,
                n,
                s,
              ) {
                var i = [],
                  a = 0;
                switch (o) {
                  case l.TRIANGLE_STRIP:
                    for (a = 0; a < n.length - 2; a++)
                      i.push([a, a + 1]), i.push([a, a + 2]);
                    i.push([a, a + 1]);
                    break;
                  case l.TRIANGLES:
                    for (a = 0; a < n.length - 2; a += 3)
                      i.push([a, a + 1]),
                        i.push([a + 1, a + 2]),
                        i.push([a + 2, a]);
                    break;
                  case l.LINES:
                    for (a = 0; a < n.length - 1; a += 2) i.push([a, a + 1]);
                    break;
                  default:
                    for (a = 0; a < n.length - 1; a++) i.push([a, a + 1]);
                }
                return s && i.push([n.length - 1, 0]), i;
              }),
              (c.default.RendererGL.prototype._tesselateShape = function () {
                this.immediateMode.shapeMode = l.TRIANGLES;
                var o = [
                    new Float32Array(
                      this._vToNArray(this.immediateMode.geometry.vertices),
                    ),
                  ],
                  n = this._triangulate(o);
                this.immediateMode.geometry.vertices = [];
                for (var s = 0, i = n.length; s < i; s += 3)
                  this.vertex(n[s], n[s + 1], n[s + 2]);
              }),
              (c.default.RendererGL.prototype._drawImmediateFill = function () {
                var o = this.GL,
                  n = this._getImmediateFillShader();
                this._setFillUniforms(n);
                var s = !0,
                  i = !1,
                  a = void 0;
                try {
                  for (
                    var d,
                      g = this.immediateMode.buffers.fill[Symbol.iterator]();
                    !(s = (d = g.next()).done);
                    s = !0
                  )
                    d.value._prepareBuffer(this.immediateMode.geometry, n);
                } catch (_) {
                  (i = !0), (a = _);
                } finally {
                  try {
                    s || g.return == null || g.return();
                  } finally {
                    if (i) throw a;
                  }
                }
                (this.immediateMode.shapeMode !== l.LINE_STRIP &&
                  this.immediateMode.shapeMode !== l.LINES) ||
                  (this.immediateMode.shapeMode = l.TRIANGLE_FAN),
                  this._applyColorBlend(this.curFillColor),
                  o.drawArrays(
                    this.immediateMode.shapeMode,
                    0,
                    this.immediateMode.geometry.vertices.length,
                  ),
                  n.unbindShader();
              }),
              (c.default.RendererGL.prototype._drawImmediateStroke =
                function () {
                  var o = this.GL,
                    n = this._getImmediateStrokeShader();
                  this._setStrokeUniforms(n);
                  var s = !0,
                    i = !1,
                    a = void 0;
                  try {
                    for (
                      var d,
                        g =
                          this.immediateMode.buffers.stroke[Symbol.iterator]();
                      !(s = (d = g.next()).done);
                      s = !0
                    )
                      d.value._prepareBuffer(this.immediateMode.geometry, n);
                  } catch (_) {
                    (i = !0), (a = _);
                  } finally {
                    try {
                      s || g.return == null || g.return();
                    } finally {
                      if (i) throw a;
                    }
                  }
                  this._applyColorBlend(this.curStrokeColor),
                    o.drawArrays(
                      o.TRIANGLES,
                      0,
                      this.immediateMode.geometry.lineVertices.length,
                    ),
                    n.unbindShader();
                });
            var u = c.default.RendererGL;
            y.default = u;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            './p5.RenderBuffer': 315,
            'core-js/modules/es.array.fill': 151,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.float32-array': 203,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        317: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.fill'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.some'),
              e('core-js/modules/es.object.keys'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.typed-array.float32-array'),
              e('core-js/modules/es.typed-array.uint16-array'),
              e('core-js/modules/es.typed-array.uint32-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            e('./p5.RendererGL'), e('./p5.RenderBuffer');
            var c = 0;
            (r.default.RendererGL.prototype._initBufferDefaults = function (h) {
              if ((this._freeBuffers(h), 1e3 < ++c)) {
                var u = Object.keys(this.retainedMode.geometry)[0];
                delete this.retainedMode.geometry[u], c--;
              }
              return (this.retainedMode.geometry[h] = {});
            }),
              (r.default.RendererGL.prototype._freeBuffers = function (h) {
                var u = this.retainedMode.geometry[h];
                if (u) {
                  delete this.retainedMode.geometry[h], c--;
                  var o = this.GL;
                  u.indexBuffer && o.deleteBuffer(u.indexBuffer),
                    n(this.retainedMode.buffers.stroke),
                    n(this.retainedMode.buffers.fill);
                }
                function n(s) {
                  var i = !0,
                    a = !1,
                    d = void 0;
                  try {
                    for (
                      var g, _ = s[Symbol.iterator]();
                      !(i = (g = _.next()).done);
                      i = !0
                    ) {
                      var w = g.value;
                      u[w.dst] && (o.deleteBuffer(u[w.dst]), (u[w.dst] = null));
                    }
                  } catch (S) {
                    (a = !0), (d = S);
                  } finally {
                    try {
                      i || _.return == null || _.return();
                    } finally {
                      if (a) throw d;
                    }
                  }
                }
              }),
              (r.default.RendererGL.prototype.createBuffers = function (h, u) {
                var o = this.GL,
                  n = this._initBufferDefaults(h);
                n.model = u;
                var s = n.indexBuffer;
                if (u.faces.length) {
                  s = s || (n.indexBuffer = o.createBuffer());
                  var i = r.default.RendererGL.prototype._flatten(u.faces),
                    a = i.some(function (g) {
                      return 65535 < g;
                    }),
                    d = a ? Uint32Array : Uint16Array;
                  this._bindBuffer(s, o.ELEMENT_ARRAY_BUFFER, i, d),
                    (n.indexBufferType = a ? o.UNSIGNED_INT : o.UNSIGNED_SHORT),
                    (n.vertexCount = 3 * u.faces.length);
                } else
                  s && (o.deleteBuffer(s), (n.indexBuffer = null)),
                    (n.vertexCount = u.vertices ? u.vertices.length : 0);
                return (
                  (n.lineVertexCount = u.lineVertices
                    ? u.lineVertices.length
                    : 0),
                  n
                );
              }),
              (r.default.RendererGL.prototype.drawBuffers = function (h) {
                var u = this.GL,
                  o = this.retainedMode.geometry[h];
                if (this._doStroke && 0 < o.lineVertexCount) {
                  var n = this._getRetainedStrokeShader();
                  this._setStrokeUniforms(n);
                  var s = !0,
                    i = !1,
                    a = void 0;
                  try {
                    for (
                      var d,
                        g = this.retainedMode.buffers.stroke[Symbol.iterator]();
                      !(s = (d = g.next()).done);
                      s = !0
                    )
                      d.value._prepareBuffer(o, n);
                  } catch (D) {
                    (i = !0), (a = D);
                  } finally {
                    try {
                      s || g.return == null || g.return();
                    } finally {
                      if (i) throw a;
                    }
                  }
                  this._applyColorBlend(this.curStrokeColor),
                    this._drawArrays(u.TRIANGLES, h),
                    n.unbindShader();
                }
                if (this._doFill) {
                  var _ = this._getRetainedFillShader();
                  this._setFillUniforms(_);
                  var w = !0,
                    S = !1,
                    M = void 0;
                  try {
                    for (
                      var E,
                        O = this.retainedMode.buffers.fill[Symbol.iterator]();
                      !(w = (E = O.next()).done);
                      w = !0
                    )
                      E.value._prepareBuffer(o, _);
                  } catch (D) {
                    (S = !0), (M = D);
                  } finally {
                    try {
                      w || O.return == null || O.return();
                    } finally {
                      if (S) throw M;
                    }
                  }
                  o.indexBuffer &&
                    this._bindBuffer(o.indexBuffer, u.ELEMENT_ARRAY_BUFFER),
                    this._applyColorBlend(this.curFillColor),
                    this._drawElements(u.TRIANGLES, h),
                    _.unbindShader();
                }
                return this;
              }),
              (r.default.RendererGL.prototype.drawBuffersScaled = function (
                h,
                u,
                o,
                n,
              ) {
                var s = this.uMVMatrix.copy();
                try {
                  this.uMVMatrix.scale(u, o, n), this.drawBuffers(h);
                } finally {
                  this.uMVMatrix = s;
                }
              }),
              (r.default.RendererGL.prototype._drawArrays = function (h, u) {
                return (
                  this.GL.drawArrays(
                    h,
                    0,
                    this.retainedMode.geometry[u].lineVertexCount,
                  ),
                  this
                );
              }),
              (r.default.RendererGL.prototype._drawElements = function (h, u) {
                var o = this.retainedMode.geometry[u],
                  n = this.GL;
                if (o.indexBuffer) {
                  if (
                    o.indexBufferType === n.UNSIGNED_INT &&
                    !n.getExtension('OES_element_index_uint')
                  )
                    throw new Error(
                      'Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.',
                    );
                  n.drawElements(
                    n.TRIANGLES,
                    o.vertexCount,
                    o.indexBufferType,
                    0,
                  );
                } else n.drawArrays(h || n.TRIANGLES, 0, o.vertexCount);
              }),
              (r.default.RendererGL.prototype._drawPoints = function (h, u) {
                var o = this.GL,
                  n = this._getImmediatePointShader();
                this._setPointUniforms(n),
                  this._bindBuffer(
                    u,
                    o.ARRAY_BUFFER,
                    this._vToNArray(h),
                    Float32Array,
                    o.STATIC_DRAW,
                  ),
                  n.enableAttrib(n.attributes.aPosition, 3),
                  o.drawArrays(o.Points, 0, h.length),
                  n.unbindShader();
              });
            var l = r.default.RendererGL;
            y.default = l;
          },
          {
            '../core/main': 264,
            './p5.RenderBuffer': 315,
            './p5.RendererGL': 318,
            'core-js/modules/es.array.fill': 151,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.some': 163,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.float32-array': 203,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint16-array': 224,
            'core-js/modules/es.typed-array.uint32-array': 225,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        318: [
          function (e, v, y) {
            function m(a) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (d) {
                      return typeof d;
                    }
                  : function (d) {
                      return d &&
                        typeof Symbol == 'function' &&
                        d.constructor === Symbol &&
                        d !== Symbol.prototype
                        ? 'symbol'
                        : typeof d;
                    })(a);
            }
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.concat'),
              e('core-js/modules/es.array.fill'),
              e('core-js/modules/es.array.filter'),
              e('core-js/modules/es.array.from'),
              e('core-js/modules/es.array.includes'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.object.assign'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.to-string'),
              e('core-js/modules/es.string.includes'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.typed-array.float32-array'),
              e('core-js/modules/es.typed-array.float64-array'),
              e('core-js/modules/es.typed-array.int16-array'),
              e('core-js/modules/es.typed-array.uint8-array'),
              e('core-js/modules/es.typed-array.uint16-array'),
              e('core-js/modules/es.typed-array.uint32-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = u(e('../core/main')),
              c = (function (a) {
                if (a && a.__esModule) return a;
                if (a === null || (m(a) !== 'object' && typeof a != 'function'))
                  return { default: a };
                var d = h();
                if (d && d.has(a)) return d.get(a);
                var g = {},
                  _ = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var w in a)
                  if (Object.prototype.hasOwnProperty.call(a, w)) {
                    var S = _ ? Object.getOwnPropertyDescriptor(a, w) : null;
                    S && (S.get || S.set)
                      ? Object.defineProperty(g, w, S)
                      : (g[w] = a[w]);
                  }
                return (g.default = a), d && d.set(a, g), g;
              })(e('../core/constants')),
              l = u(e('libtess'));
            e('./p5.Shader'),
              e('./p5.Camera'),
              e('../core/p5.Renderer'),
              e('./p5.Matrix'),
              e('path');
            function h() {
              if (typeof WeakMap != 'function') return null;
              var a = new WeakMap();
              return (
                (h = function () {
                  return a;
                }),
                a
              );
            }
            function u(a) {
              return a && a.__esModule ? a : { default: a };
            }
            function o(a) {
              return (
                (function (d) {
                  if (Array.isArray(d)) {
                    for (var g = 0, _ = new Array(d.length); g < d.length; g++)
                      _[g] = d[g];
                    return _;
                  }
                })(a) ||
                (function (d) {
                  if (
                    Symbol.iterator in Object(d) ||
                    Object.prototype.toString.call(d) === '[object Arguments]'
                  )
                    return Array.from(d);
                })(a) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            var n = `precision highp float;
precision highp int;

uniform mat4 uViewMatrix;

uniform bool uUseLighting;

uniform int uAmbientLightCount;
uniform vec3 uAmbientColor[5];

uniform int uDirectionalLightCount;
uniform vec3 uLightingDirection[5];
uniform vec3 uDirectionalDiffuseColors[5];
uniform vec3 uDirectionalSpecularColors[5];

uniform int uPointLightCount;
uniform vec3 uPointLightLocation[5];
uniform vec3 uPointLightDiffuseColors[5];	
uniform vec3 uPointLightSpecularColors[5];

uniform int uSpotLightCount;
uniform float uSpotLightAngle[5];
uniform float uSpotLightConc[5];
uniform vec3 uSpotLightDiffuseColors[5];
uniform vec3 uSpotLightSpecularColors[5];
uniform vec3 uSpotLightLocation[5];
uniform vec3 uSpotLightDirection[5];

uniform bool uSpecular;
uniform float uShininess;

uniform float uConstantAttenuation;
uniform float uLinearAttenuation;
uniform float uQuadraticAttenuation;

const float specularFactor = 2.0;
const float diffuseFactor = 0.73;

struct LightResult {
  float specular;
  float diffuse;
};

float _phongSpecular(
  vec3 lightDirection,
  vec3 viewDirection,
  vec3 surfaceNormal,
  float shininess) {

  vec3 R = reflect(lightDirection, surfaceNormal);
  return pow(max(0.0, dot(R, viewDirection)), shininess);
}

float _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {
  return max(0.0, dot(-lightDirection, surfaceNormal));
}

LightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {

  vec3 lightDir = normalize(lightVector);

  //compute our diffuse & specular terms
  LightResult lr;
  if (uSpecular)
    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);
  lr.diffuse = _lambertDiffuse(lightDir, normal);
  return lr;
}

void totalLight(
  vec3 modelPosition,
  vec3 normal,
  out vec3 totalDiffuse,
  out vec3 totalSpecular
) {

  totalSpecular = vec3(0.0);

  if (!uUseLighting) {
    totalDiffuse = vec3(1.0);
    return;
  }

  totalDiffuse = vec3(0.0);

  vec3 viewDirection = normalize(-modelPosition);

  for (int j = 0; j < 5; j++) {
    if (j < uDirectionalLightCount) {
      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;
      vec3 lightColor = uDirectionalDiffuseColors[j];
      vec3 specularColor = uDirectionalSpecularColors[j];
      LightResult result = _light(viewDirection, normal, lightVector);
      totalDiffuse += result.diffuse * lightColor;
      totalSpecular += result.specular * lightColor * specularColor;
    }

    if (j < uPointLightCount) {
      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;
      vec3 lightVector = modelPosition - lightPosition;
    
      //calculate attenuation
      float lightDistance = length(lightVector);
      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);
      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];
      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];

      LightResult result = _light(viewDirection, normal, lightVector);
      totalDiffuse += result.diffuse * lightColor;
      totalSpecular += result.specular * lightColor * specularColor;
    }

    if(j < uSpotLightCount) {
      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;
      vec3 lightVector = modelPosition - lightPosition;
    
      float lightDistance = length(lightVector);
      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);

      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;
      float spotDot = dot(normalize(lightVector), normalize(lightDirection));
      float spotFalloff;
      if(spotDot < uSpotLightAngle[j]) {
        spotFalloff = 0.0;
      }
      else {
        spotFalloff = pow(spotDot, uSpotLightConc[j]);
      }
      lightFalloff *= spotFalloff;

      vec3 lightColor = uSpotLightDiffuseColors[j];
      vec3 specularColor = uSpotLightSpecularColors[j];
     
      LightResult result = _light(viewDirection, normal, lightVector);
      
      totalDiffuse += result.diffuse * lightColor * lightFalloff;
      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;
    }
  }

  totalDiffuse *= diffuseFactor;
  totalSpecular *= specularFactor;
}
`,
              s = {
                immediateVert: `attribute vec3 aPosition;
attribute vec4 aVertexColor;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform float uResolution;
uniform float uPointSize;

varying vec4 vColor;
void main(void) {
  vec4 positionVec4 = vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vColor = aVertexColor;
  gl_PointSize = uPointSize;
}
`,
                vertexColorVert: `attribute vec3 aPosition;
attribute vec4 aVertexColor;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;

varying vec4 vColor;

void main(void) {
  vec4 positionVec4 = vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vColor = aVertexColor;
}
`,
                vertexColorFrag: `precision mediump float;
varying vec4 vColor;
void main(void) {
  gl_FragColor = vColor;
}`,
                normalVert: `attribute vec3 aPosition;
attribute vec3 aNormal;
attribute vec2 aTexCoord;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform mat3 uNormalMatrix;

varying vec3 vVertexNormal;
varying highp vec2 vVertTexCoord;

void main(void) {
  vec4 positionVec4 = vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));
  vVertTexCoord = aTexCoord;
}
`,
                normalFrag: `precision mediump float;
varying vec3 vVertexNormal;
void main(void) {
  gl_FragColor = vec4(vVertexNormal, 1.0);
}`,
                basicFrag: `precision mediump float;
uniform vec4 uMaterialColor;
void main(void) {
  gl_FragColor = uMaterialColor;
}`,
                lightVert:
                  n +
                  `// include lighting.glgl

attribute vec3 aPosition;
attribute vec3 aNormal;
attribute vec2 aTexCoord;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform mat3 uNormalMatrix;

varying highp vec2 vVertTexCoord;
varying vec3 vDiffuseColor;
varying vec3 vSpecularColor;

void main(void) {

  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * viewModelPosition;

  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);
  vVertTexCoord = aTexCoord;

  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);

  for (int i = 0; i < 8; i++) {
    if (i < uAmbientLightCount) {
      vDiffuseColor += uAmbientColor[i];
    }
  }
}
`,
                lightTextureFrag: `precision highp float;

uniform vec4 uMaterialColor;
uniform vec4 uTint;
uniform sampler2D uSampler;
uniform bool isTexture;
uniform bool uEmissive;

varying highp vec2 vVertTexCoord;
varying vec3 vDiffuseColor;
varying vec3 vSpecularColor;

void main(void) {
  if(uEmissive && !isTexture) {
    gl_FragColor = uMaterialColor;
  }
  else {
    gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;
    gl_FragColor.rgb = gl_FragColor.rgb * vDiffuseColor + vSpecularColor;
  }
}`,
                phongVert: `precision highp float;
precision highp int;

attribute vec3 aPosition;
attribute vec3 aNormal;
attribute vec2 aTexCoord;

uniform vec3 uAmbientColor[5];

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform mat3 uNormalMatrix;
uniform int uAmbientLightCount;

varying vec3 vNormal;
varying vec2 vTexCoord;
varying vec3 vViewPosition;
varying vec3 vAmbientColor;

void main(void) {

  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);

  // Pass varyings to fragment shader
  vViewPosition = viewModelPosition.xyz;
  gl_Position = uProjectionMatrix * viewModelPosition;  

  vNormal = uNormalMatrix * aNormal;
  vTexCoord = aTexCoord;

  // TODO: this should be a uniform
  vAmbientColor = vec3(0.0);
  for (int i = 0; i < 5; i++) {
    if (i < uAmbientLightCount) {
      vAmbientColor += uAmbientColor[i];
    }
  }
}
`,
                phongFrag:
                  n +
                  `// include lighting.glsl
precision highp float;
precision highp int;

uniform vec4 uMaterialColor;
uniform vec4 uTint;
uniform sampler2D uSampler;
uniform bool isTexture;
uniform bool uEmissive;

varying vec3 vNormal;
varying vec2 vTexCoord;
varying vec3 vViewPosition;
varying vec3 vAmbientColor;

void main(void) {

  vec3 diffuse;
  vec3 specular;
  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);

  if(uEmissive && !isTexture) {
    gl_FragColor = uMaterialColor;
  }
  else {
    gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;
    gl_FragColor.rgb = gl_FragColor.rgb * (diffuse + vAmbientColor) + specular;
  }
}`,
                fontVert: `precision mediump float;

attribute vec3 aPosition;
attribute vec2 aTexCoord;
uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;

uniform vec4 uGlyphRect;
uniform float uGlyphOffset;

varying vec2 vTexCoord;
varying float w;

void main() {
  vec4 positionVec4 = vec4(aPosition, 1.0);

  // scale by the size of the glyph's rectangle
  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;

  // move to the corner of the glyph
  positionVec4.xy += uGlyphRect.xy;

  // move to the letter's line offset
  positionVec4.x += uGlyphOffset;
  
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vTexCoord = aTexCoord;
  w = gl_Position.w;
}
`,
                fontFrag: `#extension GL_OES_standard_derivatives : enable
precision mediump float;

#if 0
  // simulate integer math using floats
	#define int float
	#define ivec2 vec2
	#define INT(x) float(x)

	int ifloor(float v) { return floor(v); }
	ivec2 ifloor(vec2 v) { return floor(v); }

#else
  // use native integer math
	precision highp int;
	#define INT(x) x

	int ifloor(float v) { return int(v); }
	int ifloor(int v) { return v; }
	ivec2 ifloor(vec2 v) { return ivec2(v); }

#endif

uniform sampler2D uSamplerStrokes;
uniform sampler2D uSamplerRowStrokes;
uniform sampler2D uSamplerRows;
uniform sampler2D uSamplerColStrokes;
uniform sampler2D uSamplerCols;

uniform ivec2 uStrokeImageSize;
uniform ivec2 uCellsImageSize;
uniform ivec2 uGridImageSize;

uniform ivec2 uGridOffset;
uniform ivec2 uGridSize;
uniform vec4 uMaterialColor;

varying vec2 vTexCoord;

// some helper functions
int round(float v) { return ifloor(v + 0.5); }
ivec2 round(vec2 v) { return ifloor(v + 0.5); }
float saturate(float v) { return clamp(v, 0.0, 1.0); }
vec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }

int mul(float v1, int v2) {
  return ifloor(v1 * float(v2));
}

ivec2 mul(vec2 v1, ivec2 v2) {
  return ifloor(v1 * vec2(v2) + 0.5);
}

// unpack a 16-bit integer from a float vec2
int getInt16(vec2 v) {
  ivec2 iv = round(v * 255.0);
  return iv.x * INT(128) + iv.y;
}

vec2 pixelScale;
vec2 coverage = vec2(0.0);
vec2 weight = vec2(0.5);
const float minDistance = 1.0/8192.0;
const float hardness = 1.05; // amount of antialias

// the maximum number of curves in a glyph
const int N = INT(250);

// retrieves an indexed pixel from a sampler
vec4 getTexel(sampler2D sampler, int pos, ivec2 size) {
  int width = size.x;
  int y = ifloor(pos / width);
  int x = pos - y * width;  // pos % width

  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));
}

void calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {

  // get the coefficients of the quadratic in t
  vec2 a = p0 - p1 * 2.0 + p2;
  vec2 b = p0 - p1;
  vec2 c = p0 - vTexCoord;

  // found out which values of 't' it crosses the axes
  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));
  vec2 t1 = ((b - surd) / a).yx;
  vec2 t2 = ((b + surd) / a).yx;

  // approximate straight lines to avoid rounding errors
  if (abs(a.y) < 0.001)
    t1.x = t2.x = c.y / (2.0 * b.y);

  if (abs(a.x) < 0.001)
    t1.y = t2.y = c.x / (2.0 * b.x);

  // plug into quadratic formula to find the corrdinates of the crossings
  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;
  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;
}

void coverageX(vec2 p0, vec2 p1, vec2 p2) {

  vec2 C1, C2;
  calulateCrossings(p0, p1, p2, C1, C2);

  // determine on which side of the x-axis the points lie
  bool y0 = p0.y > vTexCoord.y;
  bool y1 = p1.y > vTexCoord.y;
  bool y2 = p2.y > vTexCoord.y;

  // could web be under the curve (after t1)?
  if (y1 ? !y2 : y0) {
    // add the coverage for t1
    coverage.x += saturate(C1.x + 0.5);
    // calculate the anti-aliasing for t1
    weight.x = min(weight.x, abs(C1.x));
  }

  // are we outside the curve (after t2)?
  if (y1 ? !y0 : y2) {
    // subtract the coverage for t2
    coverage.x -= saturate(C2.x + 0.5);
    // calculate the anti-aliasing for t2
    weight.x = min(weight.x, abs(C2.x));
  }
}

// this is essentially the same as coverageX, but with the axes swapped
void coverageY(vec2 p0, vec2 p1, vec2 p2) {

  vec2 C1, C2;
  calulateCrossings(p0, p1, p2, C1, C2);

  bool x0 = p0.x > vTexCoord.x;
  bool x1 = p1.x > vTexCoord.x;
  bool x2 = p2.x > vTexCoord.x;

  if (x1 ? !x2 : x0) {
    coverage.y -= saturate(C1.y + 0.5);
    weight.y = min(weight.y, abs(C1.y));
  }

  if (x1 ? !x0 : x2) {
    coverage.y += saturate(C2.y + 0.5);
    weight.y = min(weight.y, abs(C2.y));
  }
}

void main() {

  // calculate the pixel scale based on screen-coordinates
  pixelScale = hardness / fwidth(vTexCoord);

  // which grid cell is this pixel in?
  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));

  // intersect curves in this row
  {
    // the index into the row info bitmap
    int rowIndex = gridCoord.y + uGridOffset.y;
    // fetch the info texel
    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);
    // unpack the rowInfo
    int rowStrokeIndex = getInt16(rowInfo.xy);
    int rowStrokeCount = getInt16(rowInfo.zw);

    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {
      if (iRowStroke >= rowStrokeCount)
        break;

      // each stroke is made up of 3 points: the start and control point
      // and the start of the next curve.
      // fetch the indices of this pair of strokes:
      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);

      // unpack the stroke index
      int strokePos = getInt16(strokeIndices.xy);

      // fetch the two strokes
      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);
      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);

      // calculate the coverage
      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);
    }
  }

  // intersect curves in this column
  {
    int colIndex = gridCoord.x + uGridOffset.x;
    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);
    int colStrokeIndex = getInt16(colInfo.xy);
    int colStrokeCount = getInt16(colInfo.zw);
    
    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {
      if (iColStroke >= colStrokeCount)
        break;

      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);

      int strokePos = getInt16(strokeIndices.xy);
      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);
      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);
      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);
    }
  }

  weight = saturate(1.0 - weight * 2.0);
  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.
  float antialias = abs(dot(coverage, weight) / distance);
  float cover = min(abs(coverage.x), abs(coverage.y));
  gl_FragColor = uMaterialColor;
  gl_FragColor.a *= saturate(max(antialias, cover));
}`,
                lineVert: `/*
  Part of the Processing project - http://processing.org
  Copyright (c) 2012-15 The Processing Foundation
  Copyright (c) 2004-12 Ben Fry and Casey Reas
  Copyright (c) 2001-04 Massachusetts Institute of Technology
  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation, version 2.1.
  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General
  Public License along with this library; if not, write to the
  Free Software Foundation, Inc., 59 Temple Place, Suite 330,
  Boston, MA  02111-1307  USA
*/

#define PROCESSING_LINE_SHADER

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform float uStrokeWeight;

uniform vec4 uViewport;
uniform int uPerspective;

attribute vec4 aPosition;
attribute vec4 aDirection;
  
void main() {
  // using a scale <1 moves the lines towards the camera
  // in order to prevent popping effects due to half of
  // the line disappearing behind the geometry faces.
  vec3 scale = vec3(0.9995);

  vec4 posp = uModelViewMatrix * aPosition;
  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));

  // Moving vertices slightly toward the camera
  // to avoid depth-fighting with the fill triangles.
  // Discussed here:
  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  
  posp.xyz = posp.xyz * scale;
  posq.xyz = posq.xyz * scale;

  vec4 p = uProjectionMatrix * posp;
  vec4 q = uProjectionMatrix * posq;

  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])
  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw

  // prevent division by W by transforming the tangent formula (div by 0 causes
  // the line to disappear, see https://github.com/processing/processing/issues/5183)
  // t = screen_q - screen_p
  //
  // tangent is normalized and we don't care which aDirection it points to (+-)
  // t = +- normalize( screen_q - screen_p )
  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )
  //
  // extract common factor, <1,1> - <1,1> cancels out
  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )
  //
  // convert to common divisor
  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )
  //
  // remove the common scalar divisor/factor, not needed due to normalize and +-
  // (keep uViewport - can't remove because it has different components for x and y
  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)
  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )

  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);

  // flip tangent to normal (it's already normalized)
  vec2 normal = vec2(-tangent.y, tangent.x);

  float thickness = aDirection.w * uStrokeWeight;
  vec2 offset = normal * thickness / 2.0;

  vec2 curPerspScale;

  if(uPerspective == 1) {
    // Perspective ---
    // convert from world to clip by multiplying with projection scaling factor
    // to get the right thickness (see https://github.com/processing/processing/issues/5182)
    // invert Y, projections in Processing invert Y
    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;
  } else {
    // No Perspective ---
    // multiply by W (to cancel out division by W later in the pipeline) and
    // convert from screen to clip (derived from clip to screen above)
    curPerspScale = p.w / (0.5 * uViewport.zw);
  }

  gl_Position.xy = p.xy + offset.xy * curPerspScale;
  gl_Position.zw = p.zw;
}
`,
                lineFrag: `precision mediump float;
precision mediump int;

uniform vec4 uMaterialColor;

void main() {
  gl_FragColor = uMaterialColor;
}`,
                pointVert: `attribute vec3 aPosition;
uniform float uPointSize;
varying float vStrokeWeight;
uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
void main() {
	vec4 positionVec4 =  vec4(aPosition, 1.0);
	gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
	gl_PointSize = uPointSize;
	vStrokeWeight = uPointSize;
}`,
                pointFrag: `precision mediump float;
precision mediump int;
uniform vec4 uMaterialColor;
varying float vStrokeWeight;

void main(){
	float mask = 0.0;

	// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)
    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant

	mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));

	// if strokeWeight is 1 or less lets just draw a square
	// this prevents weird artifacting from carving circles when our points are really small
	// if strokeWeight is larger than 1, we just use it as is

	mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));

	// throw away the borders of the mask
    // otherwise we get weird alpha blending issues

	if(mask > 0.98){
      discard;
  	}

  	gl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;
}`,
              };
            (r.default.RendererGL = function (a, d, g, _) {
              return (
                r.default.Renderer.call(this, a, d, g),
                this._setAttributeDefaults(d),
                this._initContext(),
                (this.isP3D = !0),
                (this.GL = this.drawingContext),
                this._pInst._setProperty('drawingContext', this.drawingContext),
                (this._isErasing = !1),
                (this._enableLighting = !1),
                (this.ambientLightColors = []),
                (this.specularColors = [1, 1, 1]),
                (this.directionalLightDirections = []),
                (this.directionalLightDiffuseColors = []),
                (this.directionalLightSpecularColors = []),
                (this.pointLightPositions = []),
                (this.pointLightDiffuseColors = []),
                (this.pointLightSpecularColors = []),
                (this.spotLightPositions = []),
                (this.spotLightDirections = []),
                (this.spotLightDiffuseColors = []),
                (this.spotLightSpecularColors = []),
                (this.spotLightAngle = []),
                (this.spotLightConc = []),
                (this.drawMode = c.FILL),
                (this.curFillColor = this._cachedFillStyle = [1, 1, 1, 1]),
                (this.curStrokeColor = this._cachedStrokeStyle = [0, 0, 0, 1]),
                (this.curBlendMode = c.BLEND),
                (this._cachedBlendMode = void 0),
                (this.blendExt = this.GL.getExtension('EXT_blend_minmax')),
                (this._isBlending = !1),
                (this._useSpecularMaterial = !1),
                (this._useEmissiveMaterial = !1),
                (this._useNormalMaterial = !1),
                (this._useShininess = 1),
                (this._tint = [255, 255, 255, 255]),
                (this.constantAttenuation = 1),
                (this.linearAttenuation = 0),
                (this.quadraticAttenuation = 0),
                (this.uMVMatrix = new r.default.Matrix()),
                (this.uPMatrix = new r.default.Matrix()),
                (this.uNMatrix = new r.default.Matrix('mat3')),
                (this._currentNormal = new r.default.Vector(0, 0, 1)),
                (this._curCamera = new r.default.Camera(this)),
                this._curCamera._computeCameraDefaultSettings(),
                this._curCamera._setDefaultCamera(),
                (this._defaultLightShader = void 0),
                (this._defaultImmediateModeShader = void 0),
                (this._defaultNormalShader = void 0),
                (this._defaultColorShader = void 0),
                (this._defaultPointShader = void 0),
                (this.userFillShader = void 0),
                (this.userStrokeShader = void 0),
                (this.userPointShader = void 0),
                (this.retainedMode = {
                  geometry: {},
                  buffers: {
                    stroke: [
                      new r.default.RenderBuffer(
                        3,
                        'lineVertices',
                        'lineVertexBuffer',
                        'aPosition',
                        this,
                        this._flatten,
                      ),
                      new r.default.RenderBuffer(
                        4,
                        'lineNormals',
                        'lineNormalBuffer',
                        'aDirection',
                        this,
                        this._flatten,
                      ),
                    ],
                    fill: [
                      new r.default.RenderBuffer(
                        3,
                        'vertices',
                        'vertexBuffer',
                        'aPosition',
                        this,
                        this._vToNArray,
                      ),
                      new r.default.RenderBuffer(
                        3,
                        'vertexNormals',
                        'normalBuffer',
                        'aNormal',
                        this,
                        this._vToNArray,
                      ),
                      new r.default.RenderBuffer(
                        4,
                        'vertexColors',
                        'colorBuffer',
                        'aVertexColor',
                        this,
                      ),
                      new r.default.RenderBuffer(
                        3,
                        'vertexAmbients',
                        'ambientBuffer',
                        'aAmbientColor',
                        this,
                      ),
                      new r.default.RenderBuffer(
                        2,
                        'uvs',
                        'uvBuffer',
                        'aTexCoord',
                        this,
                        this._flatten,
                      ),
                    ],
                    text: [
                      new r.default.RenderBuffer(
                        3,
                        'vertices',
                        'vertexBuffer',
                        'aPosition',
                        this,
                        this._vToNArray,
                      ),
                      new r.default.RenderBuffer(
                        2,
                        'uvs',
                        'uvBuffer',
                        'aTexCoord',
                        this,
                        this._flatten,
                      ),
                    ],
                  },
                }),
                (this.immediateMode = {
                  geometry: new r.default.Geometry(),
                  shapeMode: c.TRIANGLE_FAN,
                  _bezierVertex: [],
                  _quadraticVertex: [],
                  _curveVertex: [],
                  buffers: {
                    fill: [
                      new r.default.RenderBuffer(
                        3,
                        'vertices',
                        'vertexBuffer',
                        'aPosition',
                        this,
                        this._vToNArray,
                      ),
                      new r.default.RenderBuffer(
                        3,
                        'vertexNormals',
                        'normalBuffer',
                        'aNormal',
                        this,
                        this._vToNArray,
                      ),
                      new r.default.RenderBuffer(
                        4,
                        'vertexColors',
                        'colorBuffer',
                        'aVertexColor',
                        this,
                      ),
                      new r.default.RenderBuffer(
                        3,
                        'vertexAmbients',
                        'ambientBuffer',
                        'aAmbientColor',
                        this,
                      ),
                      new r.default.RenderBuffer(
                        2,
                        'uvs',
                        'uvBuffer',
                        'aTexCoord',
                        this,
                        this._flatten,
                      ),
                    ],
                    stroke: [
                      new r.default.RenderBuffer(
                        3,
                        'lineVertices',
                        'lineVertexBuffer',
                        'aPosition',
                        this,
                        this._flatten,
                      ),
                      new r.default.RenderBuffer(
                        4,
                        'lineNormals',
                        'lineNormalBuffer',
                        'aDirection',
                        this,
                        this._flatten,
                      ),
                    ],
                    point: this.GL.createBuffer(),
                  },
                }),
                (this.pointSize = 5),
                (this.curStrokeWeight = 1),
                (this.textures = []),
                (this.textureMode = c.IMAGE),
                (this.textureWrapX = c.CLAMP),
                (this.textureWrapY = c.CLAMP),
                (this._tex = null),
                (this._curveTightness = 6),
                (this._lookUpTableBezier = []),
                (this._lookUpTableQuadratic = []),
                (this._lutBezierDetail = 0),
                (this._lutQuadraticDetail = 0),
                (this._tessy = this._initTessy()),
                (this.fontInfos = {}),
                (this._curShader = void 0),
                this
              );
            }),
              (r.default.RendererGL.prototype = Object.create(
                r.default.Renderer.prototype,
              )),
              (r.default.RendererGL.prototype._setAttributeDefaults = function (
                a,
              ) {
                var d = {
                  alpha: !1,
                  depth: !0,
                  stencil: !0,
                  antialias: navigator.userAgent
                    .toLowerCase()
                    .includes('safari'),
                  premultipliedAlpha: !1,
                  preserveDrawingBuffer: !0,
                  perPixelLighting: !0,
                };
                a._glAttributes === null
                  ? (a._glAttributes = d)
                  : (a._glAttributes = Object.assign(d, a._glAttributes));
              }),
              (r.default.RendererGL.prototype._initContext = function () {
                try {
                  if (
                    ((this.drawingContext =
                      this.canvas.getContext(
                        'webgl',
                        this._pInst._glAttributes,
                      ) ||
                      this.canvas.getContext(
                        'experimental-webgl',
                        this._pInst._glAttributes,
                      )),
                    this.drawingContext === null)
                  )
                    throw new Error('Error creating webgl context');
                  var a = this.drawingContext;
                  a.enable(a.DEPTH_TEST),
                    a.depthFunc(a.LEQUAL),
                    a.viewport(
                      0,
                      0,
                      a.drawingBufferWidth,
                      a.drawingBufferHeight,
                    ),
                    (this._viewport = this.drawingContext.getParameter(
                      this.drawingContext.VIEWPORT,
                    ));
                } catch (d) {
                  throw d;
                }
              }),
              (r.default.RendererGL.prototype._resetContext = function (a, d) {
                var g = this.width,
                  _ = this.height,
                  w = this.canvas.id,
                  S = this._pInst instanceof r.default.Graphics;
                if (S) {
                  var M = this._pInst;
                  M.canvas.parentNode.removeChild(M.canvas),
                    (M.canvas = document.createElement('canvas')),
                    (M._pInst._userNode || document.body).appendChild(M.canvas),
                    r.default.Element.call(M, M.canvas, M._pInst),
                    (M.width = g),
                    (M.height = _);
                } else {
                  var E = this.canvas;
                  E && E.parentNode.removeChild(E),
                    ((E = document.createElement('canvas')).id = w),
                    this._pInst._userNode
                      ? this._pInst._userNode.appendChild(E)
                      : document.body.appendChild(E),
                    (this._pInst.canvas = E);
                }
                var O = new r.default.RendererGL(
                  this._pInst.canvas,
                  this._pInst,
                  !S,
                );
                this._pInst._setProperty('_renderer', O),
                  O.resize(g, _),
                  O._applyDefaults(),
                  S || this._pInst._elements.push(O),
                  typeof d == 'function' &&
                    setTimeout(function () {
                      d.apply(window._renderer, a);
                    }, 0);
              }),
              (r.default.prototype.setAttributes = function (a, d) {
                if (this._glAttributes !== void 0) {
                  var g = !0;
                  if (
                    (d !== void 0
                      ? (this._glAttributes === null &&
                          (this._glAttributes = {}),
                        this._glAttributes[a] !== d &&
                          ((this._glAttributes[a] = d), (g = !1)))
                      : a instanceof Object &&
                        this._glAttributes !== a &&
                        ((this._glAttributes = a), (g = !1)),
                    this._renderer.isP3D && !g)
                  ) {
                    if (!this._setupDone) {
                      for (var _ in this._renderer.retainedMode.geometry)
                        if (
                          this._renderer.retainedMode.geometry.hasOwnProperty(_)
                        )
                          return void console.error(
                            'Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()',
                          );
                    }
                    this.push(),
                      this._renderer._resetContext(),
                      this.pop(),
                      this._renderer._curCamera &&
                        (this._renderer._curCamera._renderer = this._renderer);
                  }
                } else
                  console.log(
                    'You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.',
                  );
              }),
              (r.default.RendererGL.prototype._update = function () {
                this.uMVMatrix.set(
                  this._curCamera.cameraMatrix.mat4[0],
                  this._curCamera.cameraMatrix.mat4[1],
                  this._curCamera.cameraMatrix.mat4[2],
                  this._curCamera.cameraMatrix.mat4[3],
                  this._curCamera.cameraMatrix.mat4[4],
                  this._curCamera.cameraMatrix.mat4[5],
                  this._curCamera.cameraMatrix.mat4[6],
                  this._curCamera.cameraMatrix.mat4[7],
                  this._curCamera.cameraMatrix.mat4[8],
                  this._curCamera.cameraMatrix.mat4[9],
                  this._curCamera.cameraMatrix.mat4[10],
                  this._curCamera.cameraMatrix.mat4[11],
                  this._curCamera.cameraMatrix.mat4[12],
                  this._curCamera.cameraMatrix.mat4[13],
                  this._curCamera.cameraMatrix.mat4[14],
                  this._curCamera.cameraMatrix.mat4[15],
                ),
                  (this.ambientLightColors.length = 0),
                  (this.specularColors = [1, 1, 1]),
                  (this.directionalLightDirections.length = 0),
                  (this.directionalLightDiffuseColors.length = 0),
                  (this.directionalLightSpecularColors.length = 0),
                  (this.pointLightPositions.length = 0),
                  (this.pointLightDiffuseColors.length = 0),
                  (this.pointLightSpecularColors.length = 0),
                  (this.spotLightPositions.length = 0),
                  (this.spotLightDirections.length = 0),
                  (this.spotLightDiffuseColors.length = 0),
                  (this.spotLightSpecularColors.length = 0),
                  (this.spotLightAngle.length = 0),
                  (this.spotLightConc.length = 0),
                  (this._enableLighting = !1),
                  (this._tint = [255, 255, 255, 255]),
                  this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
              }),
              (r.default.RendererGL.prototype.background = function () {
                var a,
                  d = (a = this._pInst).color.apply(a, arguments),
                  g = d.levels[0] / 255,
                  _ = d.levels[1] / 255,
                  w = d.levels[2] / 255,
                  S = d.levels[3] / 255;
                this.GL.clearColor(g, _, w, S),
                  this.GL.clear(this.GL.COLOR_BUFFER_BIT);
              }),
              (r.default.RendererGL.prototype.fill = function (a, d, g, _) {
                var w = r.default.prototype.color.apply(this._pInst, arguments);
                (this.curFillColor = w._array),
                  (this.drawMode = c.FILL),
                  (this._useNormalMaterial = !1),
                  (this._tex = null);
              }),
              (r.default.RendererGL.prototype.stroke = function (a, d, g, _) {
                arguments[3] = 255;
                var w = r.default.prototype.color.apply(this._pInst, arguments);
                this.curStrokeColor = w._array;
              }),
              (r.default.RendererGL.prototype.strokeCap = function (a) {
                console.error(
                  'Sorry, strokeCap() is not yet implemented in WEBGL mode',
                );
              }),
              (r.default.RendererGL.prototype.strokeJoin = function (a) {
                console.error(
                  'Sorry, strokeJoin() is not yet implemented in WEBGL mode',
                );
              }),
              (r.default.RendererGL.prototype.filter = function (a) {
                console.error('filter() does not work in WEBGL mode');
              }),
              (r.default.RendererGL.prototype.blendMode = function (a) {
                a === c.DARKEST ||
                a === c.LIGHTEST ||
                a === c.ADD ||
                a === c.BLEND ||
                a === c.SUBTRACT ||
                a === c.SCREEN ||
                a === c.EXCLUSION ||
                a === c.REPLACE ||
                a === c.MULTIPLY ||
                a === c.REMOVE
                  ? (this.curBlendMode = a)
                  : (a !== c.BURN &&
                      a !== c.OVERLAY &&
                      a !== c.HARD_LIGHT &&
                      a !== c.SOFT_LIGHT &&
                      a !== c.DODGE) ||
                    console.warn(
                      'BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.',
                    );
              }),
              (r.default.RendererGL.prototype.erase = function (a, d) {
                this._isErasing ||
                  (this._applyBlendMode(c.REMOVE),
                  (this._isErasing = !0),
                  (this._cachedFillStyle = this.curFillColor.slice()),
                  (this.curFillColor = [1, 1, 1, a / 255]),
                  (this._cachedStrokeStyle = this.curStrokeColor.slice()),
                  (this.curStrokeColor = [1, 1, 1, d / 255]));
              }),
              (r.default.RendererGL.prototype.noErase = function () {
                this._isErasing &&
                  ((this._isErasing = !1),
                  (this.curFillColor = this._cachedFillStyle.slice()),
                  (this.curStrokeColor = this._cachedStrokeStyle.slice()),
                  this.blendMode(this._cachedBlendMode));
              }),
              (r.default.RendererGL.prototype.strokeWeight = function (a) {
                this.curStrokeWeight !== a &&
                  ((this.pointSize = a), (this.curStrokeWeight = a));
              }),
              (r.default.RendererGL.prototype._getPixel = function (a, d) {
                var g;
                return (
                  (g = new Uint8Array(4)),
                  this.drawingContext.readPixels(
                    a,
                    d,
                    1,
                    1,
                    this.drawingContext.RGBA,
                    this.drawingContext.UNSIGNED_BYTE,
                    g,
                  ),
                  [g[0], g[1], g[2], g[3]]
                );
              }),
              (r.default.RendererGL.prototype.loadPixels = function () {
                var a = this._pixelsState;
                if (this._pInst._glAttributes.preserveDrawingBuffer === !0) {
                  var d = a.pixels,
                    g =
                      this.GL.drawingBufferWidth *
                      this.GL.drawingBufferHeight *
                      4;
                  (d instanceof Uint8Array && d.length === g) ||
                    ((d = new Uint8Array(g)),
                    this._pixelsState._setProperty('pixels', d));
                  var _ = this._pInst._pixelDensity;
                  this.GL.readPixels(
                    0,
                    0,
                    this.width * _,
                    this.height * _,
                    this.GL.RGBA,
                    this.GL.UNSIGNED_BYTE,
                    d,
                  );
                } else
                  console.log(
                    'loadPixels only works in WebGL when preserveDrawingBuffer is true.',
                  );
              }),
              (r.default.RendererGL.prototype.geometryInHash = function (a) {
                return this.retainedMode.geometry[a] !== void 0;
              }),
              (r.default.RendererGL.prototype.resize = function (a, d) {
                r.default.Renderer.prototype.resize.call(this, a, d),
                  this.GL.viewport(
                    0,
                    0,
                    this.GL.drawingBufferWidth,
                    this.GL.drawingBufferHeight,
                  ),
                  (this._viewport = this.GL.getParameter(this.GL.VIEWPORT)),
                  this._curCamera._resize();
                var g = this._pixelsState;
                g.pixels !== void 0 &&
                  g._setProperty(
                    'pixels',
                    new Uint8Array(
                      this.GL.drawingBufferWidth *
                        this.GL.drawingBufferHeight *
                        4,
                    ),
                  );
              }),
              (r.default.RendererGL.prototype.clear = function () {
                var a = (arguments.length <= 0 ? void 0 : arguments[0]) || 0,
                  d = (arguments.length <= 1 ? void 0 : arguments[1]) || 0,
                  g = (arguments.length <= 2 ? void 0 : arguments[2]) || 0,
                  _ = (arguments.length <= 3 ? void 0 : arguments[3]) || 0;
                this.GL.clearColor(a, d, g, _),
                  this.GL.clearDepth(1),
                  this.GL.clear(
                    this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT,
                  );
              }),
              (r.default.RendererGL.prototype.applyMatrix = function (
                a,
                d,
                g,
                _,
                w,
                S,
              ) {
                arguments.length === 16
                  ? r.default.Matrix.prototype.apply.apply(
                      this.uMVMatrix,
                      arguments,
                    )
                  : this.uMVMatrix.apply([
                      a,
                      d,
                      0,
                      0,
                      g,
                      _,
                      0,
                      0,
                      0,
                      0,
                      1,
                      0,
                      w,
                      S,
                      0,
                      1,
                    ]);
              }),
              (r.default.RendererGL.prototype.translate = function (a, d, g) {
                return (
                  a instanceof r.default.Vector &&
                    ((g = a.z), (d = a.y), (a = a.x)),
                  this.uMVMatrix.translate([a, d, g]),
                  this
                );
              }),
              (r.default.RendererGL.prototype.scale = function (a, d, g) {
                return this.uMVMatrix.scale(a, d, g), this;
              }),
              (r.default.RendererGL.prototype.rotate = function (a, d) {
                return d === void 0
                  ? this.rotateZ(a)
                  : (r.default.Matrix.prototype.rotate.apply(
                      this.uMVMatrix,
                      arguments,
                    ),
                    this);
              }),
              (r.default.RendererGL.prototype.rotateX = function (a) {
                return this.rotate(a, 1, 0, 0), this;
              }),
              (r.default.RendererGL.prototype.rotateY = function (a) {
                return this.rotate(a, 0, 1, 0), this;
              }),
              (r.default.RendererGL.prototype.rotateZ = function (a) {
                return this.rotate(a, 0, 0, 1), this;
              }),
              (r.default.RendererGL.prototype.push = function () {
                var a = r.default.Renderer.prototype.push.apply(this),
                  d = a.properties;
                return (
                  (d.uMVMatrix = this.uMVMatrix.copy()),
                  (d.uPMatrix = this.uPMatrix.copy()),
                  (d._curCamera = this._curCamera),
                  (this._curCamera = this._curCamera.copy()),
                  (d.ambientLightColors = this.ambientLightColors.slice()),
                  (d.specularColors = this.specularColors.slice()),
                  (d.directionalLightDirections =
                    this.directionalLightDirections.slice()),
                  (d.directionalLightDiffuseColors =
                    this.directionalLightDiffuseColors.slice()),
                  (d.directionalLightSpecularColors =
                    this.directionalLightSpecularColors.slice()),
                  (d.pointLightPositions = this.pointLightPositions.slice()),
                  (d.pointLightDiffuseColors =
                    this.pointLightDiffuseColors.slice()),
                  (d.pointLightSpecularColors =
                    this.pointLightSpecularColors.slice()),
                  (d.spotLightPositions = this.spotLightPositions.slice()),
                  (d.spotLightDirections = this.spotLightDirections.slice()),
                  (d.spotLightDiffuseColors =
                    this.spotLightDiffuseColors.slice()),
                  (d.spotLightSpecularColors =
                    this.spotLightSpecularColors.slice()),
                  (d.spotLightAngle = this.spotLightAngle.slice()),
                  (d.spotLightConc = this.spotLightConc.slice()),
                  (d.userFillShader = this.userFillShader),
                  (d.userStrokeShader = this.userStrokeShader),
                  (d.userPointShader = this.userPointShader),
                  (d.pointSize = this.pointSize),
                  (d.curStrokeWeight = this.curStrokeWeight),
                  (d.curStrokeColor = this.curStrokeColor),
                  (d.curFillColor = this.curFillColor),
                  (d._useSpecularMaterial = this._useSpecularMaterial),
                  (d._useEmissiveMaterial = this._useEmissiveMaterial),
                  (d._useShininess = this._useShininess),
                  (d.constantAttenuation = this.constantAttenuation),
                  (d.linearAttenuation = this.linearAttenuation),
                  (d.quadraticAttenuation = this.quadraticAttenuation),
                  (d._enableLighting = this._enableLighting),
                  (d._useNormalMaterial = this._useNormalMaterial),
                  (d._tex = this._tex),
                  (d.drawMode = this.drawMode),
                  (d._currentNormal = this._currentNormal),
                  a
                );
              }),
              (r.default.RendererGL.prototype.resetMatrix = function () {
                return (
                  (this.uMVMatrix = r.default.Matrix.identity(this._pInst)),
                  this
                );
              }),
              (r.default.RendererGL.prototype._getImmediateStrokeShader =
                function () {
                  var a = this.userStrokeShader;
                  return a && a.isStrokeShader() ? a : this._getLineShader();
                }),
              (r.default.RendererGL.prototype._getRetainedStrokeShader =
                r.default.RendererGL.prototype._getImmediateStrokeShader),
              (r.default.RendererGL.prototype._getImmediateFillShader =
                function () {
                  var a = this.userFillShader;
                  if (this._useNormalMaterial && (!a || !a.isNormalShader()))
                    return this._getNormalShader();
                  if (this._enableLighting) {
                    if (!a || !a.isLightShader()) return this._getLightShader();
                  } else if (this._tex) {
                    if (!a || !a.isTextureShader())
                      return this._getLightShader();
                  } else if (!a) return this._getImmediateModeShader();
                  return a;
                }),
              (r.default.RendererGL.prototype._getRetainedFillShader =
                function () {
                  if (this._useNormalMaterial) return this._getNormalShader();
                  var a = this.userFillShader;
                  if (this._enableLighting) {
                    if (!a || !a.isLightShader()) return this._getLightShader();
                  } else if (this._tex) {
                    if (!a || !a.isTextureShader())
                      return this._getLightShader();
                  } else if (!a) return this._getColorShader();
                  return a;
                }),
              (r.default.RendererGL.prototype._getImmediatePointShader =
                function () {
                  var a = this.userPointShader;
                  return a && a.isPointShader() ? a : this._getPointShader();
                }),
              (r.default.RendererGL.prototype._getRetainedLineShader =
                r.default.RendererGL.prototype._getImmediateLineShader),
              (r.default.RendererGL.prototype._getLightShader = function () {
                return (
                  this._defaultLightShader ||
                    (this._pInst._glAttributes.perPixelLighting
                      ? (this._defaultLightShader = new r.default.Shader(
                          this,
                          s.phongVert,
                          s.phongFrag,
                        ))
                      : (this._defaultLightShader = new r.default.Shader(
                          this,
                          s.lightVert,
                          s.lightTextureFrag,
                        ))),
                  this._defaultLightShader
                );
              }),
              (r.default.RendererGL.prototype._getImmediateModeShader =
                function () {
                  return (
                    this._defaultImmediateModeShader ||
                      (this._defaultImmediateModeShader = new r.default.Shader(
                        this,
                        s.immediateVert,
                        s.vertexColorFrag,
                      )),
                    this._defaultImmediateModeShader
                  );
                }),
              (r.default.RendererGL.prototype._getNormalShader = function () {
                return (
                  this._defaultNormalShader ||
                    (this._defaultNormalShader = new r.default.Shader(
                      this,
                      s.normalVert,
                      s.normalFrag,
                    )),
                  this._defaultNormalShader
                );
              }),
              (r.default.RendererGL.prototype._getColorShader = function () {
                return (
                  this._defaultColorShader ||
                    (this._defaultColorShader = new r.default.Shader(
                      this,
                      s.normalVert,
                      s.basicFrag,
                    )),
                  this._defaultColorShader
                );
              }),
              (r.default.RendererGL.prototype._getPointShader = function () {
                return (
                  this._defaultPointShader ||
                    (this._defaultPointShader = new r.default.Shader(
                      this,
                      s.pointVert,
                      s.pointFrag,
                    )),
                  this._defaultPointShader
                );
              }),
              (r.default.RendererGL.prototype._getLineShader = function () {
                return (
                  this._defaultLineShader ||
                    (this._defaultLineShader = new r.default.Shader(
                      this,
                      s.lineVert,
                      s.lineFrag,
                    )),
                  this._defaultLineShader
                );
              }),
              (r.default.RendererGL.prototype._getFontShader = function () {
                return (
                  this._defaultFontShader ||
                    (this.GL.getExtension('OES_standard_derivatives'),
                    (this._defaultFontShader = new r.default.Shader(
                      this,
                      s.fontVert,
                      s.fontFrag,
                    ))),
                  this._defaultFontShader
                );
              }),
              (r.default.RendererGL.prototype._getEmptyTexture = function () {
                if (!this._emptyTexture) {
                  var a = new r.default.Image(1, 1);
                  a.set(0, 0, 255),
                    (this._emptyTexture = new r.default.Texture(this, a));
                }
                return this._emptyTexture;
              }),
              (r.default.RendererGL.prototype.getTexture = function (a) {
                var d = this.textures,
                  g = !0,
                  _ = !1,
                  w = void 0;
                try {
                  for (
                    var S, M = d[Symbol.iterator]();
                    !(g = (S = M.next()).done);
                    g = !0
                  ) {
                    var E = S.value;
                    if (E.src === a) return E;
                  }
                } catch (D) {
                  (_ = !0), (w = D);
                } finally {
                  try {
                    g || M.return == null || M.return();
                  } finally {
                    if (_) throw w;
                  }
                }
                var O = new r.default.Texture(this, a);
                return d.push(O), O;
              }),
              (r.default.RendererGL.prototype._setStrokeUniforms = function (
                a,
              ) {
                a.bindShader(),
                  a.setUniform('uMaterialColor', this.curStrokeColor),
                  a.setUniform('uStrokeWeight', this.curStrokeWeight);
              }),
              (r.default.RendererGL.prototype._setFillUniforms = function (a) {
                a.bindShader(),
                  a.setUniform('uMaterialColor', this.curFillColor),
                  a.setUniform('isTexture', !!this._tex),
                  this._tex && a.setUniform('uSampler', this._tex),
                  a.setUniform('uTint', this._tint),
                  a.setUniform('uSpecular', this._useSpecularMaterial),
                  a.setUniform('uEmissive', this._useEmissiveMaterial),
                  a.setUniform('uShininess', this._useShininess),
                  a.setUniform('uUseLighting', this._enableLighting);
                var d = this.pointLightDiffuseColors.length / 3;
                a.setUniform('uPointLightCount', d),
                  a.setUniform('uPointLightLocation', this.pointLightPositions),
                  a.setUniform(
                    'uPointLightDiffuseColors',
                    this.pointLightDiffuseColors,
                  ),
                  a.setUniform(
                    'uPointLightSpecularColors',
                    this.pointLightSpecularColors,
                  );
                var g = this.directionalLightDiffuseColors.length / 3;
                a.setUniform('uDirectionalLightCount', g),
                  a.setUniform(
                    'uLightingDirection',
                    this.directionalLightDirections,
                  ),
                  a.setUniform(
                    'uDirectionalDiffuseColors',
                    this.directionalLightDiffuseColors,
                  ),
                  a.setUniform(
                    'uDirectionalSpecularColors',
                    this.directionalLightSpecularColors,
                  );
                var _ = this.ambientLightColors.length / 3;
                a.setUniform('uAmbientLightCount', _),
                  a.setUniform('uAmbientColor', this.ambientLightColors);
                var w = this.spotLightDiffuseColors.length / 3;
                a.setUniform('uSpotLightCount', w),
                  a.setUniform('uSpotLightAngle', this.spotLightAngle),
                  a.setUniform('uSpotLightConc', this.spotLightConc),
                  a.setUniform(
                    'uSpotLightDiffuseColors',
                    this.spotLightDiffuseColors,
                  ),
                  a.setUniform(
                    'uSpotLightSpecularColors',
                    this.spotLightSpecularColors,
                  ),
                  a.setUniform('uSpotLightLocation', this.spotLightPositions),
                  a.setUniform('uSpotLightDirection', this.spotLightDirections),
                  a.setUniform(
                    'uConstantAttenuation',
                    this.constantAttenuation,
                  ),
                  a.setUniform('uLinearAttenuation', this.linearAttenuation),
                  a.setUniform(
                    'uQuadraticAttenuation',
                    this.quadraticAttenuation,
                  ),
                  a.bindTextures();
              }),
              (r.default.RendererGL.prototype._setPointUniforms = function (a) {
                a.bindShader(),
                  a.setUniform('uMaterialColor', this.curStrokeColor),
                  a.setUniform(
                    'uPointSize',
                    this.pointSize * this._pInst._pixelDensity,
                  );
              }),
              (r.default.RendererGL.prototype._bindBuffer = function (
                a,
                d,
                g,
                _,
                w,
              ) {
                if (
                  ((d = d || this.GL.ARRAY_BUFFER),
                  this.GL.bindBuffer(d, a),
                  g !== void 0)
                ) {
                  var S = new (_ || Float32Array)(g);
                  this.GL.bufferData(d, S, w || this.GL.STATIC_DRAW);
                }
              }),
              (r.default.RendererGL.prototype._arraysEqual = function (a, d) {
                var g = a.length;
                if (g !== d.length) return !1;
                for (var _ = 0; _ < g; _++) if (a[_] !== d[_]) return !1;
                return !0;
              }),
              (r.default.RendererGL.prototype._isTypedArray = function (a) {
                return a instanceof Uint32Array;
              }),
              (r.default.RendererGL.prototype._flatten = function (a) {
                if (a.length === 0) return [];
                if (2e4 < a.length) {
                  var d,
                    g = Object.prototype.toString,
                    _ = [],
                    w = a.slice();
                  for (
                    d = w.pop();
                    g.call(d) === '[object Array]'
                      ? w.push.apply(w, o(d))
                      : _.push(d),
                      w.length && (d = w.pop()) !== void 0;

                  );
                  return _.reverse(), _;
                }
                var S;
                return (S = []).concat.apply(S, o(a));
              }),
              (r.default.RendererGL.prototype._vToNArray = function (a) {
                var d = [],
                  g = !0,
                  _ = !1,
                  w = void 0;
                try {
                  for (
                    var S, M = a[Symbol.iterator]();
                    !(g = (S = M.next()).done);
                    g = !0
                  ) {
                    var E = S.value;
                    d.push(E.x, E.y, E.z);
                  }
                } catch (O) {
                  (_ = !0), (w = O);
                } finally {
                  try {
                    g || M.return == null || M.return();
                  } finally {
                    if (_) throw w;
                  }
                }
                return d;
              }),
              (r.default.prototype._assert3d = function (a) {
                if (!this._renderer.isP3D)
                  throw new Error(
                    ''.concat(
                      a,
                      "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information.",
                    ),
                  );
              }),
              (r.default.RendererGL.prototype._initTessy = function () {
                var a = new l.default.GluTesselator();
                return (
                  a.gluTessCallback(
                    l.default.gluEnum.GLU_TESS_VERTEX_DATA,
                    function (d, g) {
                      (g[g.length] = d[0]),
                        (g[g.length] = d[1]),
                        (g[g.length] = d[2]);
                    },
                  ),
                  a.gluTessCallback(
                    l.default.gluEnum.GLU_TESS_BEGIN,
                    function (d) {
                      d !== l.default.primitiveType.GL_TRIANGLES &&
                        console.log(
                          'expected TRIANGLES but got type: '.concat(d),
                        );
                    },
                  ),
                  a.gluTessCallback(
                    l.default.gluEnum.GLU_TESS_ERROR,
                    function (d) {
                      console.log('error callback'),
                        console.log('error number: '.concat(d));
                    },
                  ),
                  a.gluTessCallback(
                    l.default.gluEnum.GLU_TESS_COMBINE,
                    function (d, g, _) {
                      return [d[0], d[1], d[2]];
                    },
                  ),
                  a.gluTessCallback(
                    l.default.gluEnum.GLU_TESS_EDGE_FLAG,
                    function (d) {},
                  ),
                  a
                );
              }),
              (r.default.RendererGL.prototype._triangulate = function (a) {
                this._tessy.gluTessNormal(0, 0, 1);
                var d = [];
                this._tessy.gluTessBeginPolygon(d);
                for (var g = 0; g < a.length; g++) {
                  this._tessy.gluTessBeginContour();
                  for (var _ = a[g], w = 0; w < _.length; w += 3) {
                    var S = [_[w], _[w + 1], _[w + 2]];
                    this._tessy.gluTessVertex(S, S);
                  }
                  this._tessy.gluTessEndContour();
                }
                return this._tessy.gluTessEndPolygon(), d;
              }),
              (r.default.RendererGL.prototype._bezierCoefficients = function (
                a,
              ) {
                var d = a * a,
                  g = 1 - a,
                  _ = g * g;
                return [_ * g, 3 * _ * a, 3 * g * d, d * a];
              }),
              (r.default.RendererGL.prototype._quadraticCoefficients =
                function (a) {
                  var d = 1 - a;
                  return [d * d, 2 * d * a, a * a];
                }),
              (r.default.RendererGL.prototype._bezierToCatmull = function (a) {
                return [
                  a[1],
                  a[1] + (a[2] - a[0]) / this._curveTightness,
                  a[2] - (a[3] - a[1]) / this._curveTightness,
                  a[2],
                ];
              });
            var i = r.default.RendererGL;
            y.default = i;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            '../core/p5.Renderer': 267,
            './p5.Camera': 312,
            './p5.Matrix': 314,
            './p5.Shader': 319,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 151,
            'core-js/modules/es.array.filter': 152,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.assign': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.float32-array': 203,
            'core-js/modules/es.typed-array.float64-array': 204,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.int16-array': 208,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint16-array': 224,
            'core-js/modules/es.typed-array.uint32-array': 225,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/web.dom-collections.iterator': 229,
            libtess: 237,
            path: 240,
          },
        ],
        319: [
          function (e, v, y) {
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.index-of'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.array.slice'),
              e('core-js/modules/es.function.name'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var m,
              r = (m = e('../core/main')) && m.__esModule ? m : { default: m };
            (r.default.Shader = function (l, h, u) {
              (this._renderer = l),
                (this._vertSrc = h),
                (this._fragSrc = u),
                (this._vertShader = -1),
                (this._fragShader = -1),
                (this._glProgram = 0),
                (this._loadedAttributes = !1),
                (this.attributes = {}),
                (this._loadedUniforms = !1),
                (this.uniforms = {}),
                (this._bound = !1),
                (this.samplers = []);
            }),
              (r.default.Shader.prototype.init = function () {
                if (this._glProgram === 0) {
                  var l = this._renderer.GL;
                  if (
                    ((this._vertShader = l.createShader(l.VERTEX_SHADER)),
                    l.shaderSource(this._vertShader, this._vertSrc),
                    l.compileShader(this._vertShader),
                    !l.getShaderParameter(this._vertShader, l.COMPILE_STATUS))
                  )
                    return (
                      console.error(
                        'Yikes! An error occurred compiling the vertex shader:'.concat(
                          l.getShaderInfoLog(this._vertShader),
                        ),
                      ),
                      null
                    );
                  if (
                    ((this._fragShader = l.createShader(l.FRAGMENT_SHADER)),
                    l.shaderSource(this._fragShader, this._fragSrc),
                    l.compileShader(this._fragShader),
                    !l.getShaderParameter(this._fragShader, l.COMPILE_STATUS))
                  )
                    return (
                      console.error(
                        'Darn! An error occurred compiling the fragment shader:'.concat(
                          l.getShaderInfoLog(this._fragShader),
                        ),
                      ),
                      null
                    );
                  (this._glProgram = l.createProgram()),
                    l.attachShader(this._glProgram, this._vertShader),
                    l.attachShader(this._glProgram, this._fragShader),
                    l.linkProgram(this._glProgram),
                    l.getProgramParameter(this._glProgram, l.LINK_STATUS) ||
                      console.error(
                        'Snap! Error linking shader program: '.concat(
                          l.getProgramInfoLog(this._glProgram),
                        ),
                      ),
                    this._loadAttributes(),
                    this._loadUniforms();
                }
                return this;
              }),
              (r.default.Shader.prototype._loadAttributes = function () {
                if (!this._loadedAttributes) {
                  this.attributes = {};
                  for (
                    var l = this._renderer.GL,
                      h = l.getProgramParameter(
                        this._glProgram,
                        l.ACTIVE_ATTRIBUTES,
                      ),
                      u = 0;
                    u < h;
                    ++u
                  ) {
                    var o = l.getActiveAttrib(this._glProgram, u),
                      n = o.name,
                      s = l.getAttribLocation(this._glProgram, n),
                      i = {};
                    (i.name = n),
                      (i.location = s),
                      (i.index = u),
                      (i.type = o.type),
                      (i.size = o.size),
                      (this.attributes[n] = i);
                  }
                  this._loadedAttributes = !0;
                }
              }),
              (r.default.Shader.prototype._loadUniforms = function () {
                if (!this._loadedUniforms) {
                  for (
                    var l = this._renderer.GL,
                      h = l.getProgramParameter(
                        this._glProgram,
                        l.ACTIVE_UNIFORMS,
                      ),
                      u = 0,
                      o = 0;
                    o < h;
                    ++o
                  ) {
                    var n = l.getActiveUniform(this._glProgram, o),
                      s = {};
                    (s.location = l.getUniformLocation(
                      this._glProgram,
                      n.name,
                    )),
                      (s.size = n.size);
                    var i = n.name;
                    1 < n.size && (i = i.substring(0, i.indexOf('[0]'))),
                      (s.name = i),
                      (s.type = n.type),
                      (s._cachedData = void 0),
                      s.type === l.SAMPLER_2D &&
                        ((s.samplerIndex = u), u++, this.samplers.push(s)),
                      (s.isArray =
                        1 < n.size ||
                        s.type === l.FLOAT_MAT3 ||
                        s.type === l.FLOAT_MAT4 ||
                        s.type === l.FLOAT_VEC2 ||
                        s.type === l.FLOAT_VEC3 ||
                        s.type === l.FLOAT_VEC4 ||
                        s.type === l.INT_VEC2 ||
                        s.type === l.INT_VEC4 ||
                        s.type === l.INT_VEC3),
                      (this.uniforms[i] = s);
                  }
                  this._loadedUniforms = !0;
                }
              }),
              (r.default.Shader.prototype.compile = function () {}),
              (r.default.Shader.prototype.bindShader = function () {
                this.init(),
                  this._bound ||
                    (this.useProgram(),
                    (this._bound = !0),
                    this._setMatrixUniforms(),
                    this.setUniform('uViewport', this._renderer._viewport));
              }),
              (r.default.Shader.prototype.unbindShader = function () {
                return (
                  this._bound && (this.unbindTextures(), (this._bound = !1)),
                  this
                );
              }),
              (r.default.Shader.prototype.bindTextures = function () {
                var l = this._renderer.GL,
                  h = !0,
                  u = !1,
                  o = void 0;
                try {
                  for (
                    var n, s = this.samplers[Symbol.iterator]();
                    !(h = (n = s.next()).done);
                    h = !0
                  ) {
                    var i = n.value,
                      a = i.texture;
                    a === void 0 && (a = this._renderer._getEmptyTexture()),
                      l.activeTexture(l.TEXTURE0 + i.samplerIndex),
                      a.bindTexture(),
                      a.update(),
                      l.uniform1i(i.location, i.samplerIndex);
                  }
                } catch (d) {
                  (u = !0), (o = d);
                } finally {
                  try {
                    h || s.return == null || s.return();
                  } finally {
                    if (u) throw o;
                  }
                }
              }),
              (r.default.Shader.prototype.updateTextures = function () {
                var l = !0,
                  h = !1,
                  u = void 0;
                try {
                  for (
                    var o, n = this.samplers[Symbol.iterator]();
                    !(l = (o = n.next()).done);
                    l = !0
                  ) {
                    var s = o.value.texture;
                    s && s.update();
                  }
                } catch (i) {
                  (h = !0), (u = i);
                } finally {
                  try {
                    l || n.return == null || n.return();
                  } finally {
                    if (h) throw u;
                  }
                }
              }),
              (r.default.Shader.prototype.unbindTextures = function () {}),
              (r.default.Shader.prototype._setMatrixUniforms = function () {
                var l = this._renderer._curCamera.cameraMatrix,
                  h = this._renderer.uPMatrix,
                  u = this._renderer.uMVMatrix,
                  o = u.copy();
                o.mult(h),
                  this.isStrokeShader() &&
                    (this._renderer._curCamera.cameraType === 'default'
                      ? this.setUniform('uPerspective', 1)
                      : this.setUniform('uPerspective', 0)),
                  this.setUniform('uViewMatrix', l.mat4),
                  this.setUniform('uProjectionMatrix', h.mat4),
                  this.setUniform('uModelViewMatrix', u.mat4),
                  this.setUniform('uModelViewProjectionMatrix', o.mat4),
                  this.uniforms.uNormalMatrix &&
                    (this._renderer.uNMatrix.inverseTranspose(
                      this._renderer.uMVMatrix,
                    ),
                    this.setUniform(
                      'uNormalMatrix',
                      this._renderer.uNMatrix.mat3,
                    ));
              }),
              (r.default.Shader.prototype.useProgram = function () {
                var l = this._renderer.GL;
                return (
                  this._renderer._curShader !== this &&
                    (l.useProgram(this._glProgram),
                    (this._renderer._curShader = this)),
                  this
                );
              }),
              (r.default.Shader.prototype.setUniform = function (l, h) {
                var u = this.uniforms[l];
                if (u) {
                  var o = this._renderer.GL;
                  if (u.isArray) {
                    if (
                      u._cachedData &&
                      this._renderer._arraysEqual(u._cachedData, h)
                    )
                      return;
                    u._cachedData = h.slice(0);
                  } else {
                    if (u._cachedData && u._cachedData === h) return;
                    Array.isArray(h)
                      ? (u._cachedData = h.slice(0))
                      : (u._cachedData = h);
                  }
                  var n = u.location;
                  switch ((this.useProgram(), u.type)) {
                    case o.BOOL:
                      h === !0 ? o.uniform1i(n, 1) : o.uniform1i(n, 0);
                      break;
                    case o.INT:
                      1 < u.size
                        ? h.length && o.uniform1iv(n, h)
                        : o.uniform1i(n, h);
                      break;
                    case o.FLOAT:
                      1 < u.size
                        ? h.length && o.uniform1fv(n, h)
                        : o.uniform1f(n, h);
                      break;
                    case o.FLOAT_MAT3:
                      o.uniformMatrix3fv(n, !1, h);
                      break;
                    case o.FLOAT_MAT4:
                      o.uniformMatrix4fv(n, !1, h);
                      break;
                    case o.FLOAT_VEC2:
                      1 < u.size
                        ? h.length && o.uniform2fv(n, h)
                        : o.uniform2f(n, h[0], h[1]);
                      break;
                    case o.FLOAT_VEC3:
                      1 < u.size
                        ? h.length && o.uniform3fv(n, h)
                        : o.uniform3f(n, h[0], h[1], h[2]);
                      break;
                    case o.FLOAT_VEC4:
                      1 < u.size
                        ? h.length && o.uniform4fv(n, h)
                        : o.uniform4f(n, h[0], h[1], h[2], h[3]);
                      break;
                    case o.INT_VEC2:
                      1 < u.size
                        ? h.length && o.uniform2iv(n, h)
                        : o.uniform2i(n, h[0], h[1]);
                      break;
                    case o.INT_VEC3:
                      1 < u.size
                        ? h.length && o.uniform3iv(n, h)
                        : o.uniform3i(n, h[0], h[1], h[2]);
                      break;
                    case o.INT_VEC4:
                      1 < u.size
                        ? h.length && o.uniform4iv(n, h)
                        : o.uniform4i(n, h[0], h[1], h[2], h[3]);
                      break;
                    case o.SAMPLER_2D:
                      o.activeTexture(o.TEXTURE0 + u.samplerIndex),
                        (u.texture =
                          h instanceof r.default.Texture
                            ? h
                            : this._renderer.getTexture(h)),
                        o.uniform1i(n, u.samplerIndex);
                  }
                  return this;
                }
              }),
              (r.default.Shader.prototype.isLightShader = function () {
                return (
                  this.attributes.aNormal !== void 0 ||
                  this.uniforms.uUseLighting !== void 0 ||
                  this.uniforms.uAmbientLightCount !== void 0 ||
                  this.uniforms.uDirectionalLightCount !== void 0 ||
                  this.uniforms.uPointLightCount !== void 0 ||
                  this.uniforms.uAmbientColor !== void 0 ||
                  this.uniforms.uDirectionalDiffuseColors !== void 0 ||
                  this.uniforms.uDirectionalSpecularColors !== void 0 ||
                  this.uniforms.uPointLightLocation !== void 0 ||
                  this.uniforms.uPointLightDiffuseColors !== void 0 ||
                  this.uniforms.uPointLightSpecularColors !== void 0 ||
                  this.uniforms.uLightingDirection !== void 0 ||
                  this.uniforms.uSpecular !== void 0
                );
              }),
              (r.default.Shader.prototype.isNormalShader = function () {
                return this.attributes.aNormal !== void 0;
              }),
              (r.default.Shader.prototype.isTextureShader = function () {
                return 0 < this.samplers.length;
              }),
              (r.default.Shader.prototype.isColorShader = function () {
                return (
                  this.attributes.aVertexColor !== void 0 ||
                  this.uniforms.uMaterialColor !== void 0
                );
              }),
              (r.default.Shader.prototype.isTexLightShader = function () {
                return this.isLightShader() && this.isTextureShader();
              }),
              (r.default.Shader.prototype.isStrokeShader = function () {
                return this.uniforms.uStrokeWeight !== void 0;
              }),
              (r.default.Shader.prototype.enableAttrib = function (
                l,
                h,
                u,
                o,
                n,
                s,
              ) {
                if (l) {
                  var i = l.location;
                  if (i !== -1) {
                    var a = this._renderer.GL;
                    l.enabled ||
                      (a.enableVertexAttribArray(i), (l.enabled = !0)),
                      this._renderer.GL.vertexAttribPointer(
                        i,
                        h,
                        u || a.FLOAT,
                        o || !1,
                        n || 0,
                        s || 0,
                      );
                  }
                }
                return this;
              });
            var c = r.default.Shader;
            y.default = c;
          },
          {
            '../core/main': 264,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.function.name': 166,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
        320: [
          function (e, v, y) {
            function m(o) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(o);
            }
            e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.typed-array.uint8-array'),
              e('core-js/modules/es.typed-array.copy-within'),
              e('core-js/modules/es.typed-array.every'),
              e('core-js/modules/es.typed-array.fill'),
              e('core-js/modules/es.typed-array.filter'),
              e('core-js/modules/es.typed-array.find'),
              e('core-js/modules/es.typed-array.find-index'),
              e('core-js/modules/es.typed-array.for-each'),
              e('core-js/modules/es.typed-array.includes'),
              e('core-js/modules/es.typed-array.index-of'),
              e('core-js/modules/es.typed-array.iterator'),
              e('core-js/modules/es.typed-array.join'),
              e('core-js/modules/es.typed-array.last-index-of'),
              e('core-js/modules/es.typed-array.map'),
              e('core-js/modules/es.typed-array.reduce'),
              e('core-js/modules/es.typed-array.reduce-right'),
              e('core-js/modules/es.typed-array.reverse'),
              e('core-js/modules/es.typed-array.set'),
              e('core-js/modules/es.typed-array.slice'),
              e('core-js/modules/es.typed-array.some'),
              e('core-js/modules/es.typed-array.sort'),
              e('core-js/modules/es.typed-array.subarray'),
              e('core-js/modules/es.typed-array.to-locale-string'),
              e('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (m(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var n = h();
                if (n && n.has(o)) return n.get(o);
                var s = {},
                  i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in o)
                  if (Object.prototype.hasOwnProperty.call(o, a)) {
                    var d = i ? Object.getOwnPropertyDescriptor(o, a) : null;
                    d && (d.get || d.set)
                      ? Object.defineProperty(s, a, d)
                      : (s[a] = o[a]);
                  }
                return (s.default = o), n && n.set(o, s), s;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var o = new WeakMap();
              return (
                (h = function () {
                  return o;
                }),
                o
              );
            }
            (c.default.Texture = function (o, n, s) {
              this._renderer = o;
              var i = this._renderer.GL;
              (s = s || {}).dataType === i.FLOAT &&
                (i.getExtension('OES_texture_float') ||
                  console.log(
                    "Oh no, your device doesn't support floating point textures!",
                  ),
                i.getExtension('OES_texture_float_linear') ||
                  console.log(
                    "Ack! Your device doesn't support linear filtering for floating point textures",
                  )),
                (this.src = n),
                (this.glTex = void 0),
                (this.glTarget = i.TEXTURE_2D),
                (this.glFormat = s.format || i.RGBA),
                (this.mipmaps = !1),
                (this.glMinFilter = s.minFilter || i.LINEAR),
                (this.glMagFilter = s.magFilter || i.LINEAR),
                (this.glWrapS = s.wrapS || i.CLAMP_TO_EDGE),
                (this.glWrapT = s.wrapT || i.CLAMP_TO_EDGE),
                (this.glDataType = s.dataType || i.UNSIGNED_BYTE),
                (this.isSrcMediaElement =
                  c.default.MediaElement !== void 0 &&
                  n instanceof c.default.MediaElement),
                (this._videoPrevUpdateTime = 0),
                (this.isSrcHTMLElement =
                  c.default.Element !== void 0 &&
                  n instanceof c.default.Element &&
                  !(n instanceof c.default.Graphics)),
                (this.isSrcP5Image = n instanceof c.default.Image),
                (this.isSrcP5Graphics = n instanceof c.default.Graphics),
                (this.isImageData =
                  typeof ImageData < 'u' && n instanceof ImageData);
              var a = this._getTextureDataFromSource();
              return (
                (this.width = a.width),
                (this.height = a.height),
                this.init(a),
                this
              );
            }),
              (c.default.Texture.prototype._getTextureDataFromSource =
                function () {
                  var o;
                  return (
                    this.isSrcP5Image
                      ? (o = this.src.canvas)
                      : this.isSrcMediaElement ||
                        this.isSrcP5Graphics ||
                        this.isSrcHTMLElement
                      ? (o = this.src.elt)
                      : this.isImageData && (o = this.src),
                    o
                  );
                }),
              (c.default.Texture.prototype.init = function (o) {
                var n = this._renderer.GL;
                if (
                  ((this.glTex = n.createTexture()),
                  (this.glWrapS = this._renderer.textureWrapX),
                  (this.glWrapT = this._renderer.textureWrapY),
                  this.setWrapMode(this.glWrapS, this.glWrapT),
                  this.bindTexture(),
                  n.texParameteri(
                    n.TEXTURE_2D,
                    n.TEXTURE_MAG_FILTER,
                    this.glMagFilter,
                  ),
                  n.texParameteri(
                    n.TEXTURE_2D,
                    n.TEXTURE_MIN_FILTER,
                    this.glMinFilter,
                  ),
                  this.width === 0 ||
                    this.height === 0 ||
                    (this.isSrcMediaElement && !this.src.loadedmetadata))
                ) {
                  var s = new Uint8Array([1, 1, 1, 1]);
                  n.texImage2D(
                    this.glTarget,
                    0,
                    n.RGBA,
                    1,
                    1,
                    0,
                    this.glFormat,
                    this.glDataType,
                    s,
                  );
                } else
                  n.texImage2D(
                    this.glTarget,
                    0,
                    this.glFormat,
                    this.glFormat,
                    this.glDataType,
                    o,
                  );
              }),
              (c.default.Texture.prototype.update = function () {
                var o = this.src;
                if (o.width === 0 || o.height === 0) return !1;
                var n = this._getTextureDataFromSource(),
                  s = !1,
                  i = this._renderer.GL;
                return (
                  n.width !== this.width || n.height !== this.height
                    ? ((s = !0),
                      (this.width = n.width),
                      (this.height = n.height),
                      this.isSrcP5Image
                        ? o.setModified(!1)
                        : (this.isSrcMediaElement || this.isSrcHTMLElement) &&
                          o.setModified(!0))
                    : this.isSrcP5Image
                    ? o.isModified() && ((s = !0), o.setModified(!1))
                    : this.isSrcMediaElement
                    ? o.isModified()
                      ? ((s = !0), o.setModified(!1))
                      : o.loadedmetadata &&
                        this._videoPrevUpdateTime !== o.time() &&
                        ((this._videoPrevUpdateTime = o.time()), (s = !0))
                    : this.isImageData
                    ? o._dirty && (s = !(o._dirty = !1))
                    : (s = !0),
                  s &&
                    (this.bindTexture(),
                    i.texImage2D(
                      this.glTarget,
                      0,
                      this.glFormat,
                      this.glFormat,
                      this.glDataType,
                      n,
                    )),
                  s
                );
              }),
              (c.default.Texture.prototype.bindTexture = function () {
                return (
                  this._renderer.GL.bindTexture(this.glTarget, this.glTex), this
                );
              }),
              (c.default.Texture.prototype.unbindTexture = function () {
                this._renderer.GL.bindTexture(this.glTarget, null);
              }),
              (c.default.Texture.prototype.setInterpolation = function (o, n) {
                var s = this._renderer.GL;
                o === l.NEAREST
                  ? (this.glMinFilter = s.NEAREST)
                  : (this.glMinFilter = s.LINEAR),
                  n === l.NEAREST
                    ? (this.glMagFilter = s.NEAREST)
                    : (this.glMagFilter = s.LINEAR),
                  this.bindTexture(),
                  s.texParameteri(
                    s.TEXTURE_2D,
                    s.TEXTURE_MIN_FILTER,
                    this.glMinFilter,
                  ),
                  s.texParameteri(
                    s.TEXTURE_2D,
                    s.TEXTURE_MAG_FILTER,
                    this.glMagFilter,
                  ),
                  this.unbindTexture();
              }),
              (c.default.Texture.prototype.setWrapMode = function (o, n) {
                function s(g) {
                  return (g & (g - 1)) == 0;
                }
                var i = this._renderer.GL,
                  a = s(this.width),
                  d = s(this.height);
                o === l.REPEAT
                  ? a && d
                    ? (this.glWrapS = i.REPEAT)
                    : (console.warn(
                        'You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead',
                      ),
                      (this.glWrapS = i.CLAMP_TO_EDGE))
                  : o === l.MIRROR
                  ? a && d
                    ? (this.glWrapS = i.MIRRORED_REPEAT)
                    : (console.warn(
                        'You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead',
                      ),
                      (this.glWrapS = i.CLAMP_TO_EDGE))
                  : (this.glWrapS = i.CLAMP_TO_EDGE),
                  n === l.REPEAT
                    ? a && d
                      ? (this.glWrapT = i.REPEAT)
                      : (console.warn(
                          'You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead',
                        ),
                        (this.glWrapT = i.CLAMP_TO_EDGE))
                    : n === l.MIRROR
                    ? a && d
                      ? (this.glWrapT = i.MIRRORED_REPEAT)
                      : (console.warn(
                          'You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead',
                        ),
                        (this.glWrapT = i.CLAMP_TO_EDGE))
                    : (this.glWrapT = i.CLAMP_TO_EDGE),
                  this.bindTexture(),
                  i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_S, this.glWrapS),
                  i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_T, this.glWrapT),
                  this.unbindTexture();
              });
            var u = c.default.Texture;
            y.default = u;
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
          },
        ],
        321: [
          function (e, v, y) {
            function m(i) {
              return (m =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (a) {
                      return typeof a;
                    }
                  : function (a) {
                      return a &&
                        typeof Symbol == 'function' &&
                        a.constructor === Symbol &&
                        a !== Symbol.prototype
                        ? 'symbol'
                        : typeof a;
                    })(i);
            }
            e('core-js/modules/es.symbol'),
              e('core-js/modules/es.symbol.description'),
              e('core-js/modules/es.symbol.iterator'),
              e('core-js/modules/es.array.iterator'),
              e('core-js/modules/es.object.to-string'),
              e('core-js/modules/es.regexp.exec'),
              e('core-js/modules/es.string.iterator'),
              e('core-js/modules/es.string.split'),
              e('core-js/modules/es.string.sub'),
              e('core-js/modules/web.dom-collections.iterator');
            var r,
              c = (r = e('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (i) {
                if (i && i.__esModule) return i;
                if (i === null || (m(i) !== 'object' && typeof i != 'function'))
                  return { default: i };
                var a = h();
                if (a && a.has(i)) return a.get(i);
                var d = {},
                  g = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var _ in i)
                  if (Object.prototype.hasOwnProperty.call(i, _)) {
                    var w = g ? Object.getOwnPropertyDescriptor(i, _) : null;
                    w && (w.get || w.set)
                      ? Object.defineProperty(d, _, w)
                      : (d[_] = i[_]);
                  }
                return (d.default = i), a && a.set(i, d), d;
              })(e('../core/constants'));
            function h() {
              if (typeof WeakMap != 'function') return null;
              var i = new WeakMap();
              return (
                (h = function () {
                  return i;
                }),
                i
              );
            }
            e('./p5.Shader'),
              e('./p5.RendererGL.Retained'),
              (c.default.RendererGL.prototype._applyTextProperties =
                function () {}),
              (c.default.RendererGL.prototype.textWidth = function (i) {
                return this._isOpenType()
                  ? this._textFont._textWidth(i, this._textSize)
                  : 0;
              });
            function u(i, a) {
              (this.width = i),
                (this.height = a),
                (this.infos = []),
                (this.findImage = function (d) {
                  var g,
                    _,
                    w = this.width * this.height;
                  if (w < d)
                    throw new Error('font is too complex to render in 3D');
                  for (var S = this.infos.length - 1; 0 <= S; --S) {
                    var M = this.infos[S];
                    if (M.index + d < w) {
                      _ = (g = M).imageData;
                      break;
                    }
                  }
                  if (!g) {
                    try {
                      _ = new ImageData(this.width, this.height);
                    } catch {
                      var E = document.getElementsByTagName('canvas')[0],
                        O = !E;
                      E ||
                        (((E = document.createElement('canvas')).style.display =
                          'none'),
                        document.body.appendChild(E));
                      var D = E.getContext('2d');
                      D && (_ = D.createImageData(this.width, this.height)),
                        O && document.body.removeChild(E);
                    }
                    (g = { index: 0, imageData: _ }), this.infos.push(g);
                  }
                  var A = g.index;
                  return (
                    (g.index += d), (_._dirty = !0), { imageData: _, index: A }
                  );
                });
            }
            function o(i, a, d, g, _) {
              var w = i.imageData.data,
                S = 4 * i.index++;
              (w[S++] = a), (w[S++] = d), (w[S++] = g), (w[S++] = _);
            }
            function n(i) {
              (this.font = i),
                (this.strokeImageInfos = new u(64, 64)),
                (this.colDimImageInfos = new u(64, 64)),
                (this.rowDimImageInfos = new u(64, 64)),
                (this.colCellImageInfos = new u(64, 64)),
                (this.rowCellImageInfos = new u(64, 64)),
                (this.glyphInfos = {}),
                (this.getGlyphInfo = function (a) {
                  var d = this.glyphInfos[a.index];
                  if (d) return d;
                  var g,
                    _ = a.getBoundingBox(),
                    w = _.x1,
                    S = _.y1,
                    M = _.x2 - w,
                    E = _.y2 - S,
                    O = a.path.commands;
                  if (M == 0 || E == 0 || !O.length)
                    return (this.glyphInfos[a.index] = {});
                  var D,
                    A,
                    k,
                    L,
                    R = [],
                    N = [],
                    B = [];
                  for (g = 8; 0 <= g; --g) B.push([]);
                  for (g = 8; 0 <= g; --g) N.push([]);
                  function Z(Te, Ne, ze) {
                    var qe = R.length;
                    function Fe(z, V, H) {
                      for (var ae = z.length; 0 < ae--; ) {
                        var _e = z[ae];
                        _e < V && (V = _e), H < _e && (H = _e);
                      }
                      return { min: V, max: H };
                    }
                    R.push(ze);
                    for (
                      var nt = Fe(Te, 1, 0),
                        ke = Math.max(Math.floor(9 * nt.min), 0),
                        Ae = Math.min(Math.ceil(9 * nt.max), 9),
                        Ve = ke;
                      Ve < Ae;
                      ++Ve
                    )
                      B[Ve].push(qe);
                    for (
                      var We = Fe(Ne, 1, 0),
                        ge = Math.max(Math.floor(9 * We.min), 0),
                        Qe = Math.min(Math.ceil(9 * We.max), 9),
                        G = ge;
                      G < Qe;
                      ++G
                    )
                      N[G].push(qe);
                  }
                  function J(Te) {
                    return (Ne = (qe = 255) * Te) < (ze = 0)
                      ? ze
                      : qe < Ne
                      ? qe
                      : Ne;
                    var Ne, ze, qe;
                  }
                  function $(Te, Ne, ze, qe) {
                    (this.p0 = Te),
                      (this.c0 = Ne),
                      (this.c1 = ze),
                      (this.p1 = qe),
                      (this.toQuadratic = function () {
                        return {
                          x: this.p0.x,
                          y: this.p0.y,
                          x1: this.p1.x,
                          y1: this.p1.y,
                          cx:
                            (3 * (this.c0.x + this.c1.x) -
                              (this.p0.x + this.p1.x)) /
                            4,
                          cy:
                            (3 * (this.c0.y + this.c1.y) -
                              (this.p0.y + this.p1.y)) /
                            4,
                        };
                      }),
                      (this.quadError = function () {
                        return (
                          c.default.Vector.sub(
                            c.default.Vector.sub(this.p1, this.p0),
                            c.default.Vector.mult(
                              c.default.Vector.sub(this.c1, this.c0),
                              3,
                            ),
                          ).mag() / 2
                        );
                      }),
                      (this.split = function (Fe) {
                        var nt = c.default.Vector.lerp(this.p0, this.c0, Fe),
                          ke = c.default.Vector.lerp(this.c0, this.c1, Fe),
                          Ae = c.default.Vector.lerp(nt, ke, Fe);
                        (this.c1 = c.default.Vector.lerp(this.c1, this.p1, Fe)),
                          (this.c0 = c.default.Vector.lerp(ke, this.c1, Fe));
                        var Ve = c.default.Vector.lerp(Ae, this.c0, Fe),
                          We = new $(this.p0, nt, Ae, Ve);
                        return (this.p0 = Ve), We;
                      }),
                      (this.splitInflections = function () {
                        var Fe = c.default.Vector.sub(this.c0, this.p0),
                          nt = c.default.Vector.sub(
                            c.default.Vector.sub(this.c1, this.c0),
                            Fe,
                          ),
                          ke = c.default.Vector.sub(
                            c.default.Vector.sub(
                              c.default.Vector.sub(this.p1, this.c1),
                              Fe,
                            ),
                            c.default.Vector.mult(nt, 2),
                          ),
                          Ae = [],
                          Ve = nt.x * ke.y - nt.y * ke.x;
                        if (Ve !== 0) {
                          var We = Fe.x * ke.y - Fe.y * ke.x,
                            ge = Fe.x * nt.y - Fe.y * nt.x,
                            Qe = We * We - 4 * Ve * ge;
                          if (0 <= Qe) {
                            Ve < 0 && ((Ve = -Ve), (We = -We), (ge = -ge));
                            var G = Math.sqrt(Qe),
                              z = (-We - G) / (2 * Ve),
                              V = (-We + G) / (2 * Ve);
                            0 < z &&
                              z < 1 &&
                              (Ae.push(this.split(z)),
                              (V = 1 - (1 - V) / (1 - z))),
                              0 < V && V < 1 && Ae.push(this.split(V));
                          }
                        }
                        return Ae.push(this), Ae;
                      });
                  }
                  function ee(Te, Ne, ze, qe, Fe, nt, ke, Ae) {
                    var Ve = new $(
                        new c.default.Vector(Te, Ne),
                        new c.default.Vector(ze, qe),
                        new c.default.Vector(Fe, nt),
                        new c.default.Vector(ke, Ae),
                      ).splitInflections(),
                      We = [],
                      ge = 30 / s,
                      Qe = !0,
                      G = !1,
                      z = void 0;
                    try {
                      for (
                        var V, H = Ve[Symbol.iterator]();
                        !(Qe = (V = H.next()).done);
                        Qe = !0
                      ) {
                        for (
                          var ae = V.value, _e = [], Ee = void 0;
                          !(0.125 <= (Ee = ge / ae.quadError()));

                        ) {
                          var De = Math.pow(Ee, 0.3333333333333333),
                            me = ae.split(De),
                            Be = ae.split(1 - De / (1 - De));
                          We.push(me), _e.push(ae), (ae = Be);
                        }
                        Ee < 1 && We.push(ae.split(0.5)),
                          We.push(ae),
                          Array.prototype.push.apply(We, _e.reverse());
                      }
                    } catch (Ke) {
                      (G = !0), (z = Ke);
                    } finally {
                      try {
                        Qe || H.return == null || H.return();
                      } finally {
                        if (G) throw z;
                      }
                    }
                    return We;
                  }
                  function Q(Te, Ne, ze, qe) {
                    Z([Te, ze], [Ne, qe], {
                      x: Te,
                      y: Ne,
                      cx: (Te + ze) / 2,
                      cy: (Ne + qe) / 2,
                    });
                  }
                  function oe(Te, Ne, ze, qe) {
                    return Math.abs(ze - Te) < 1e-5 && Math.abs(qe - Ne) < 1e-5;
                  }
                  var ce = !0,
                    ve = !1,
                    de = void 0;
                  try {
                    for (
                      var Se, fe = O[Symbol.iterator]();
                      !(ce = (Se = fe.next()).done);
                      ce = !0
                    ) {
                      var ye = Se.value,
                        P = (ye.x - w) / M,
                        U = (ye.y - S) / E;
                      if (!oe(D, A, P, U)) {
                        switch (ye.type) {
                          case 'M':
                            (k = P), (L = U);
                            break;
                          case 'L':
                            Q(D, A, P, U);
                            break;
                          case 'Q':
                            var W = (ye.x1 - w) / M,
                              K = (ye.y1 - S) / E;
                            Z([D, P, W], [A, U, K], {
                              x: D,
                              y: A,
                              cx: W,
                              cy: K,
                            });
                            break;
                          case 'Z':
                            oe(D, A, k, L)
                              ? R.push({ x: D, y: A })
                              : (Q(D, A, k, L), R.push({ x: k, y: L }));
                            break;
                          case 'C':
                            for (
                              var ne = ee(
                                  D,
                                  A,
                                  (ye.x1 - w) / M,
                                  (ye.y1 - S) / E,
                                  (ye.x2 - w) / M,
                                  (ye.y2 - S) / E,
                                  P,
                                  U,
                                ),
                                re = 0;
                              re < ne.length;
                              re++
                            ) {
                              var we = ne[re].toQuadratic();
                              Z([we.x, we.x1, we.cx], [we.y, we.y1, we.cy], we);
                            }
                            break;
                          default:
                            throw new Error(
                              'unknown command type: '.concat(ye.type),
                            );
                        }
                        (D = P), (A = U);
                      }
                    }
                  } catch (Te) {
                    (ve = !0), (de = Te);
                  } finally {
                    try {
                      ce || fe.return == null || fe.return();
                    } finally {
                      if (ve) throw de;
                    }
                  }
                  for (
                    var X = R.length,
                      ue = this.strokeImageInfos.findImage(X),
                      he = ue.index,
                      ie = 0;
                    ie < X;
                    ++ie
                  ) {
                    var xe = R[ie];
                    o(ue, J(xe.x), J(xe.y), J(xe.cx), J(xe.cy));
                  }
                  function je(Te, Ne, ze) {
                    for (
                      var qe = Te.length,
                        Fe = Ne.findImage(qe),
                        nt = Fe.index,
                        ke = 0,
                        Ae = 0;
                      Ae < qe;
                      ++Ae
                    )
                      ke += Te[Ae].length;
                    for (var Ve = ze.findImage(ke), We = 0; We < qe; ++We) {
                      var ge = Te[We],
                        Qe = ge.length,
                        G = Ve.index;
                      o(Fe, G >> 7, 127 & G, Qe >> 7, 127 & Qe);
                      for (var z = 0; z < Qe; ++z) {
                        var V = ge[z] + he;
                        o(Ve, V >> 7, 127 & V, 0, 0);
                      }
                    }
                    return {
                      cellImageInfo: Ve,
                      dimOffset: nt,
                      dimImageInfo: Fe,
                    };
                  }
                  return (
                    ((d = this.glyphInfos[a.index] =
                      {
                        glyph: a,
                        uGlyphRect: [_.x1, -_.y1, _.x2, -_.y2],
                        strokeImageInfo: ue,
                        strokes: R,
                        colInfo: je(
                          B,
                          this.colDimImageInfos,
                          this.colCellImageInfos,
                        ),
                        rowInfo: je(
                          N,
                          this.rowDimImageInfos,
                          this.rowCellImageInfos,
                        ),
                      }).uGridOffset = [
                      d.colInfo.dimOffset,
                      d.rowInfo.dimOffset,
                    ]),
                    d
                  );
                });
            }
            var s = Math.sqrt(3);
            c.default.RendererGL.prototype._renderText = function (
              i,
              a,
              d,
              g,
              _,
            ) {
              if (this._textFont && typeof this._textFont != 'string') {
                if (!(_ <= g) && this._doFill) {
                  if (!this._isOpenType())
                    return (
                      console.log(
                        'WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported',
                      ),
                      i
                    );
                  i.push();
                  var w = this._doStroke,
                    S = this.drawMode;
                  (this._doStroke = !1), (this.drawMode = l.TEXTURE);
                  var M = this._textFont.font,
                    E = this._textFont._fontInfo;
                  E = E || (this._textFont._fontInfo = new n(M));
                  var O = this._textFont._handleAlignment(this, a, d, g),
                    D = this._textSize / M.unitsPerEm;
                  this.translate(O.x, O.y, 0), this.scale(D, D, 1);
                  var A = this.GL,
                    k = !this._defaultFontShader,
                    L = this._getFontShader();
                  L.init(),
                    L.bindShader(),
                    k &&
                      (L.setUniform('uGridImageSize', [64, 64]),
                      L.setUniform('uCellsImageSize', [64, 64]),
                      L.setUniform('uStrokeImageSize', [64, 64]),
                      L.setUniform('uGridSize', [9, 9])),
                    this._applyColorBlend(this.curFillColor);
                  var R = this.retainedMode.geometry.glyph;
                  if (!R) {
                    var N = (this._textGeom = new c.default.Geometry(
                      1,
                      1,
                      function () {
                        for (var ne = 0; ne <= 1; ne++)
                          for (var re = 0; re <= 1; re++)
                            this.vertices.push(new c.default.Vector(re, ne, 0)),
                              this.uvs.push(re, ne);
                      },
                    ));
                    N.computeFaces().computeNormals(),
                      (R = this.createBuffers('glyph', N));
                  }
                  var B = !0,
                    Z = !1,
                    J = void 0;
                  try {
                    for (
                      var $,
                        ee = this.retainedMode.buffers.text[Symbol.iterator]();
                      !(B = ($ = ee.next()).done);
                      B = !0
                    )
                      $.value._prepareBuffer(R, L);
                  } catch (ne) {
                    (Z = !0), (J = ne);
                  } finally {
                    try {
                      B || ee.return == null || ee.return();
                    } finally {
                      if (Z) throw J;
                    }
                  }
                  this._bindBuffer(R.indexBuffer, A.ELEMENT_ARRAY_BUFFER),
                    L.setUniform('uMaterialColor', this.curFillColor);
                  try {
                    var Q = 0,
                      oe = null,
                      ce = M.stringToGlyphs(a),
                      ve = !0,
                      de = !1,
                      Se = void 0;
                    try {
                      for (
                        var fe, ye = ce[Symbol.iterator]();
                        !(ve = (fe = ye.next()).done);
                        ve = !0
                      ) {
                        var P = fe.value;
                        oe && (Q += M.getKerningValue(oe, P));
                        var U = E.getGlyphInfo(P);
                        if (U.uGlyphRect) {
                          var W = U.rowInfo,
                            K = U.colInfo;
                          L.setUniform(
                            'uSamplerStrokes',
                            U.strokeImageInfo.imageData,
                          ),
                            L.setUniform(
                              'uSamplerRowStrokes',
                              W.cellImageInfo.imageData,
                            ),
                            L.setUniform(
                              'uSamplerRows',
                              W.dimImageInfo.imageData,
                            ),
                            L.setUniform(
                              'uSamplerColStrokes',
                              K.cellImageInfo.imageData,
                            ),
                            L.setUniform(
                              'uSamplerCols',
                              K.dimImageInfo.imageData,
                            ),
                            L.setUniform('uGridOffset', U.uGridOffset),
                            L.setUniform('uGlyphRect', U.uGlyphRect),
                            L.setUniform('uGlyphOffset', Q),
                            L.bindTextures(),
                            A.drawElements(
                              A.TRIANGLES,
                              6,
                              this.GL.UNSIGNED_SHORT,
                              0,
                            );
                        }
                        (Q += P.advanceWidth), (oe = P);
                      }
                    } catch (ne) {
                      (de = !0), (Se = ne);
                    } finally {
                      try {
                        ve || ye.return == null || ye.return();
                      } finally {
                        if (de) throw Se;
                      }
                    }
                  } finally {
                    L.unbindShader(),
                      (this._doStroke = w),
                      (this.drawMode = S),
                      i.pop();
                  }
                  return i;
                }
              } else
                console.log(
                  'WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.',
                );
            };
          },
          {
            '../core/constants': 253,
            '../core/main': 264,
            './p5.RendererGL.Retained': 317,
            './p5.Shader': 319,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.sub': 192,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 229,
          },
        ],
      },
      {},
      [248],
    )(248);
  });
})(Pa);
const hu = cu(Pa.exports),
  Yt = (T, t) => fxrand() * (t - T) + T,
  du = () => fu([Yt(0, 1), 1, Yt(0.5, 0.8)]);
function fu([T, t, p]) {
  var e, v, y;
  if (t == 0) e = v = y = p;
  else {
    var m = function (h, u, o) {
        return (
          o < 0 && (o += 1),
          o > 1 && (o -= 1),
          o < 0.16666666666666666
            ? h + (u - h) * 6 * o
            : o < 0.5
            ? u
            : o < 0.6666666666666666
            ? h + (u - h) * (0.6666666666666666 - o) * 6
            : h
        );
      },
      r = p < 0.5 ? p * (1 + t) : p + t - p * t,
      c = 2 * p - r;
    (e = m(c, r, T + 1 / 3)), (v = m(c, r, T)), (y = m(c, r, T - 1 / 3));
  }
  return [Math.round(e * 255), Math.round(v * 255), Math.round(y * 255)];
}
const pu = () => {
    const T = [
        'contextmenu',
        'dblclick',
        'mousedown',
        'mouseenter',
        'mouseleave',
        'mousemove',
        'mouseover',
        'mouseout',
        'mouseup',
        'keydown',
        'keypress',
        'keyup',
        'blur',
        'change',
        'focus',
        'focusin',
        'focusout',
        'input',
        'invalid',
        'reset',
        'scroll',
        'search',
        'select',
        'submit',
        'drag',
        'dragend',
        'dragenter',
        'dragleave',
        'dragover',
        'dragstart',
        'drop',
        'copy',
        'cut',
        'paste',
        'mousewheel',
        'wheel',
        'touchcancel',
        'touchmove',
      ],
      t = (p) => {
        p.stopPropagation(), p.preventDefault();
      };
    for (let p = 0, e = T.length; p < e; p++)
      document.addEventListener(T[p], t, { passive: !1 });
  },
  Lo = (T) => {
    const { clientWidth: t, clientHeight: p } = T;
    return t > p ? t : p;
  },
  Ra = '14.7.77',
  da = (T, t, p) => ({
    endTime: t,
    insertTime: p,
    type: 'exponentialRampToValue',
    value: T,
  }),
  fa = (T, t, p) => ({
    endTime: t,
    insertTime: p,
    type: 'linearRampToValue',
    value: T,
  }),
  Uo = (T, t) => ({ startTime: t, type: 'setValue', value: T }),
  Da = (T, t, p) => ({
    duration: p,
    startTime: t,
    type: 'setValueCurve',
    values: T,
  }),
  Ia = (T, t, { startTime: p, target: e, timeConstant: v }) =>
    e + (t - e) * Math.exp((p - T) / v),
  Ln = (T) => T.type === 'exponentialRampToValue',
  zs = (T) => T.type === 'linearRampToValue',
  $r = (T) => Ln(T) || zs(T),
  Qo = (T) => T.type === 'setValue',
  Nr = (T) => T.type === 'setValueCurve',
  Hs = (T, t, p, e) => {
    const v = T[t];
    return v === void 0
      ? e
      : $r(v) || Qo(v)
      ? v.value
      : Nr(v)
      ? v.values[v.values.length - 1]
      : Ia(p, Hs(T, t - 1, v.startTime, e), v);
  },
  pa = (T, t, p, e, v) =>
    p === void 0
      ? [e.insertTime, v]
      : $r(p)
      ? [p.endTime, p.value]
      : Qo(p)
      ? [p.startTime, p.value]
      : Nr(p)
      ? [p.startTime + p.duration, p.values[p.values.length - 1]]
      : [p.startTime, Hs(T, t - 1, p.startTime, v)],
  Bo = (T) => T.type === 'cancelAndHold',
  Go = (T) => T.type === 'cancelScheduledValues',
  Zr = (T) =>
    Bo(T) || Go(T) ? T.cancelTime : Ln(T) || zs(T) ? T.endTime : T.startTime,
  ma = (T, t, p, { endTime: e, value: v }) =>
    p === v
      ? v
      : (0 < p && 0 < v) || (p < 0 && v < 0)
      ? p * (v / p) ** ((T - t) / (e - t))
      : 0,
  ya = (T, t, p, { endTime: e, value: v }) => p + ((T - t) / (e - t)) * (v - p),
  mu = (T, t) => {
    const p = Math.floor(t),
      e = Math.ceil(t);
    return p === e ? T[p] : (1 - (t - p)) * T[p] + (1 - (e - t)) * T[e];
  },
  yu = (T, { duration: t, startTime: p, values: e }) => {
    const v = ((T - p) / t) * (e.length - 1);
    return mu(e, v);
  },
  Fs = (T) => T.type === 'setTarget';
class gu {
  constructor(t) {
    (this._automationEvents = []),
      (this._currenTime = 0),
      (this._defaultValue = t);
  }
  [Symbol.iterator]() {
    return this._automationEvents[Symbol.iterator]();
  }
  add(t) {
    const p = Zr(t);
    if (Bo(t) || Go(t)) {
      const e = this._automationEvents.findIndex((y) =>
          Go(t) && Nr(y) ? y.startTime + y.duration >= p : Zr(y) >= p,
        ),
        v = this._automationEvents[e];
      if (
        (e !== -1 &&
          (this._automationEvents = this._automationEvents.slice(0, e)),
        Bo(t))
      ) {
        const y = this._automationEvents[this._automationEvents.length - 1];
        if (v !== void 0 && $r(v)) {
          if (Fs(y)) throw new Error('The internal list is malformed.');
          const m = Nr(y) ? y.startTime + y.duration : Zr(y),
            r = Nr(y) ? y.values[y.values.length - 1] : y.value,
            c = Ln(v) ? ma(p, m, r, v) : ya(p, m, r, v),
            l = Ln(v) ? da(c, p, this._currenTime) : fa(c, p, this._currenTime);
          this._automationEvents.push(l);
        }
        y !== void 0 &&
          Fs(y) &&
          this._automationEvents.push(Uo(this.getValue(p), p)),
          y !== void 0 &&
            Nr(y) &&
            y.startTime + y.duration > p &&
            (this._automationEvents[this._automationEvents.length - 1] = Da(
              new Float32Array([6, 7]),
              y.startTime,
              p - y.startTime,
            ));
      }
    } else {
      const e = this._automationEvents.findIndex((m) => Zr(m) > p),
        v =
          e === -1
            ? this._automationEvents[this._automationEvents.length - 1]
            : this._automationEvents[e - 1];
      if (v !== void 0 && Nr(v) && Zr(v) + v.duration > p) return !1;
      const y = Ln(t)
        ? da(t.value, t.endTime, this._currenTime)
        : zs(t)
        ? fa(t.value, p, this._currenTime)
        : t;
      if (e === -1) this._automationEvents.push(y);
      else {
        if (Nr(t) && p + t.duration > Zr(this._automationEvents[e])) return !1;
        this._automationEvents.splice(e, 0, y);
      }
    }
    return !0;
  }
  flush(t) {
    const p = this._automationEvents.findIndex((e) => Zr(e) > t);
    if (p > 1) {
      const e = this._automationEvents.slice(p - 1),
        v = e[0];
      Fs(v) &&
        e.unshift(
          Uo(
            Hs(this._automationEvents, p - 2, v.startTime, this._defaultValue),
            v.startTime,
          ),
        ),
        (this._automationEvents = e);
    }
  }
  getValue(t) {
    if (this._automationEvents.length === 0) return this._defaultValue;
    const p = this._automationEvents.findIndex((m) => Zr(m) > t),
      e = this._automationEvents[p],
      v = (p === -1 ? this._automationEvents.length : p) - 1,
      y = this._automationEvents[v];
    if (y !== void 0 && Fs(y) && (e === void 0 || !$r(e) || e.insertTime > t))
      return Ia(
        t,
        Hs(this._automationEvents, v - 1, y.startTime, this._defaultValue),
        y,
      );
    if (y !== void 0 && Qo(y) && (e === void 0 || !$r(e))) return y.value;
    if (
      y !== void 0 &&
      Nr(y) &&
      (e === void 0 || !$r(e) || y.startTime + y.duration > t)
    )
      return t < y.startTime + y.duration
        ? yu(t, y)
        : y.values[y.values.length - 1];
    if (y !== void 0 && $r(y) && (e === void 0 || !$r(e))) return y.value;
    if (e !== void 0 && Ln(e)) {
      const [m, r] = pa(this._automationEvents, v, y, e, this._defaultValue);
      return ma(t, m, r, e);
    }
    if (e !== void 0 && zs(e)) {
      const [m, r] = pa(this._automationEvents, v, y, e, this._defaultValue);
      return ya(t, m, r, e);
    }
    return this._defaultValue;
  }
}
const vu = (T) => ({ cancelTime: T, type: 'cancelAndHold' }),
  bu = (T) => ({ cancelTime: T, type: 'cancelScheduledValues' }),
  _u = (T, t) => ({ endTime: t, type: 'exponentialRampToValue', value: T }),
  wu = (T, t) => ({ endTime: t, type: 'linearRampToValue', value: T }),
  xu = (T, t, p) => ({
    startTime: t,
    target: T,
    timeConstant: p,
    type: 'setTarget',
  }),
  Su = () => new DOMException('', 'AbortError'),
  Tu =
    (T) =>
    (t, p, [e, v, y], m) => {
      T(t[v], [p, e, y], (r) => r[0] === p && r[1] === e, m);
    },
  ju = (T) => (t, p, e) => {
    const v = [];
    for (let y = 0; y < e.numberOfInputs; y += 1) v.push(new Set());
    T.set(t, {
      activeInputs: v,
      outputs: new Set(),
      passiveInputs: new WeakMap(),
      renderer: p,
    });
  },
  Mu = (T) => (t, p) => {
    T.set(t, {
      activeInputs: new Set(),
      passiveInputs: new WeakMap(),
      renderer: p,
    });
  },
  Bn = new WeakSet(),
  La = new WeakMap(),
  Jo = new WeakMap(),
  Na = new WeakMap(),
  Ko = new WeakMap(),
  mo = new WeakMap(),
  Fa = new WeakMap(),
  Vo = new WeakMap(),
  Wo = new WeakMap(),
  qo = new WeakMap(),
  Ua = {
    construct() {
      return Ua;
    },
  },
  Eu = (T) => {
    try {
      const t = new Proxy(T, Ua);
      new t();
    } catch {
      return !1;
    }
    return !0;
  },
  ga =
    /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,
  va = (T, t) => {
    const p = [];
    let e = T.replace(/^[\s]+/, ''),
      v = e.match(ga);
    for (; v !== null; ) {
      const y = v[1].slice(1, -1),
        m = v[0]
          .replace(/([\s]+)?;?$/, '')
          .replace(y, new URL(y, t).toString());
      p.push(m),
        (e = e.slice(v[0].length).replace(/^[\s]+/, '')),
        (v = e.match(ga));
    }
    return [p.join(';'), e];
  },
  ba = (T) => {
    if (T !== void 0 && !Array.isArray(T))
      throw new TypeError(
        'The parameterDescriptors property of given value for processorCtor is not an array.',
      );
  },
  _a = (T) => {
    if (!Eu(T))
      throw new TypeError(
        'The given value for processorCtor should be a constructor.',
      );
    if (T.prototype === null || typeof T.prototype != 'object')
      throw new TypeError(
        'The given value for processorCtor should have a prototype.',
      );
  },
  Cu = (T, t, p, e, v, y, m, r, c, l, h, u, o) => {
    let n = 0;
    return (s, i, a = { credentials: 'omit' }) => {
      const d = h.get(s);
      if (d !== void 0 && d.has(i)) return Promise.resolve();
      const g = l.get(s);
      if (g !== void 0) {
        const S = g.get(i);
        if (S !== void 0) return S;
      }
      const _ = y(s),
        w =
          _.audioWorklet === void 0
            ? v(i)
                .then(([S, M]) => {
                  const [E, O] = va(S, M),
                    D = `${E};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${O}
})})(window,'_AWGS')`;
                  return p(D);
                })
                .then(() => {
                  const S = o._AWGS.pop();
                  if (S === void 0) throw new SyntaxError();
                  e(_.currentTime, _.sampleRate, () =>
                    S(
                      class {},
                      void 0,
                      (M, E) => {
                        if (M.trim() === '') throw t();
                        const O = Wo.get(_);
                        if (O !== void 0) {
                          if (O.has(M)) throw t();
                          _a(E), ba(E.parameterDescriptors), O.set(M, E);
                        } else
                          _a(E),
                            ba(E.parameterDescriptors),
                            Wo.set(_, new Map([[M, E]]));
                      },
                      _.sampleRate,
                      void 0,
                      void 0,
                    ),
                  );
                })
            : Promise.all([v(i), Promise.resolve(T(u, u))]).then(
                ([[S, M], E]) => {
                  const O = n + 1;
                  n = O;
                  const [D, A] = va(S, M),
                    N = `${D};((AudioWorkletProcessor,registerProcessor)=>{${A}
})(${
                      E
                        ? 'AudioWorkletProcessor'
                        : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}'
                    },(n,p)=>registerProcessor(n,class extends p{${
                      E
                        ? ''
                        : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));'
                    }process(i,o,p){${
                      E
                        ? ''
                        : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));'
                    }return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${O}',class extends AudioWorkletProcessor{process(){return !1}})`,
                    B = new Blob([N], {
                      type: 'application/javascript; charset=utf-8',
                    }),
                    Z = URL.createObjectURL(B);
                  return _.audioWorklet
                    .addModule(Z, a)
                    .then(() => {
                      if (r(_)) return _;
                      const J = m(_);
                      return J.audioWorklet.addModule(Z, a).then(() => J);
                    })
                    .then((J) => {
                      if (c === null) throw new SyntaxError();
                      try {
                        new c(J, `__sac${O}`);
                      } catch {
                        throw new SyntaxError();
                      }
                    })
                    .finally(() => URL.revokeObjectURL(Z));
                },
              );
      return (
        g === void 0 ? l.set(s, new Map([[i, w]])) : g.set(i, w),
        w
          .then(() => {
            const S = h.get(s);
            S === void 0 ? h.set(s, new Set([i])) : S.add(i);
          })
          .finally(() => {
            const S = l.get(s);
            S !== void 0 && S.delete(i);
          }),
        w
      );
    };
  },
  br = (T, t) => {
    const p = T.get(t);
    if (p === void 0)
      throw new Error('A value with the given key could not be found.');
    return p;
  },
  yo = (T, t) => {
    const p = Array.from(T).filter(t);
    if (p.length > 1) throw Error('More than one element was found.');
    if (p.length === 0) throw Error('No element was found.');
    const [e] = p;
    return T.delete(e), e;
  },
  Ba = (T, t, p, e) => {
    const v = br(T, t),
      y = yo(v, (m) => m[0] === p && m[1] === e);
    return v.size === 0 && T.delete(t), y;
  },
  ws = (T) => br(Fa, T),
  Gn = (T) => {
    if (Bn.has(T)) throw new Error('The AudioNode is already stored.');
    Bn.add(T), ws(T).forEach((t) => t(!0));
  },
  Ga = (T) => 'port' in T,
  xs = (T) => {
    if (!Bn.has(T)) throw new Error('The AudioNode is not stored.');
    Bn.delete(T), ws(T).forEach((t) => t(!1));
  },
  zo = (T, t) => {
    !Ga(T) && t.every((p) => p.size === 0) && xs(T);
  },
  Ou = (T, t, p, e, v, y, m, r, c, l, h, u, o) => {
    const n = new WeakMap();
    return (s, i, a, d, g) => {
      const { activeInputs: _, passiveInputs: w } = y(i),
        { outputs: S } = y(s),
        M = r(s),
        E = (O) => {
          const D = c(i),
            A = c(s);
          if (O) {
            const k = Ba(w, s, a, d);
            T(_, s, k, !1), !g && !u(s) && p(A, D, a, d), o(i) && Gn(i);
          } else {
            const k = e(_, s, a, d);
            t(w, d, k, !1), !g && !u(s) && v(A, D, a, d);
            const L = m(i);
            if (L === 0) h(i) && zo(i, _);
            else {
              const R = n.get(i);
              R !== void 0 && clearTimeout(R),
                n.set(
                  i,
                  setTimeout(() => {
                    h(i) && zo(i, _);
                  }, L * 1e3),
                );
            }
          }
        };
      return l(S, [i, a, d], (O) => O[0] === i && O[1] === a && O[2] === d, !0)
        ? (M.add(E), h(s) ? T(_, s, [a, d, E], !0) : t(w, d, [s, a, E], !0), !0)
        : !1;
    };
  },
  Au =
    (T) =>
    (t, p, [e, v, y], m) => {
      const r = t.get(e);
      r === void 0
        ? t.set(e, new Set([[v, p, y]]))
        : T(r, [v, p, y], (c) => c[0] === v && c[1] === p, m);
    },
  ku = (T) => (t, p) => {
    const e = T(t, {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      gain: 0,
    });
    p.connect(e).connect(t.destination);
    const v = () => {
      p.removeEventListener('ended', v), p.disconnect(e), e.disconnect();
    };
    p.addEventListener('ended', v);
  },
  Pu = (T) => (t, p) => {
    T(t).add(p);
  },
  Ru = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    fftSize: 2048,
    maxDecibels: -30,
    minDecibels: -100,
    smoothingTimeConstant: 0.8,
  },
  Du = (T, t, p, e, v, y) =>
    class extends T {
      constructor(r, c) {
        const l = v(r),
          h = { ...Ru, ...c },
          u = e(l, h),
          o = y(l) ? t() : null;
        super(r, !1, u, o), (this._nativeAnalyserNode = u);
      }
      get fftSize() {
        return this._nativeAnalyserNode.fftSize;
      }
      set fftSize(r) {
        this._nativeAnalyserNode.fftSize = r;
      }
      get frequencyBinCount() {
        return this._nativeAnalyserNode.frequencyBinCount;
      }
      get maxDecibels() {
        return this._nativeAnalyserNode.maxDecibels;
      }
      set maxDecibels(r) {
        const c = this._nativeAnalyserNode.maxDecibels;
        if (
          ((this._nativeAnalyserNode.maxDecibels = r),
          !(r > this._nativeAnalyserNode.minDecibels))
        )
          throw ((this._nativeAnalyserNode.maxDecibels = c), p());
      }
      get minDecibels() {
        return this._nativeAnalyserNode.minDecibels;
      }
      set minDecibels(r) {
        const c = this._nativeAnalyserNode.minDecibels;
        if (
          ((this._nativeAnalyserNode.minDecibels = r),
          !(this._nativeAnalyserNode.maxDecibels > r))
        )
          throw ((this._nativeAnalyserNode.minDecibels = c), p());
      }
      get smoothingTimeConstant() {
        return this._nativeAnalyserNode.smoothingTimeConstant;
      }
      set smoothingTimeConstant(r) {
        this._nativeAnalyserNode.smoothingTimeConstant = r;
      }
      getByteFrequencyData(r) {
        this._nativeAnalyserNode.getByteFrequencyData(r);
      }
      getByteTimeDomainData(r) {
        this._nativeAnalyserNode.getByteTimeDomainData(r);
      }
      getFloatFrequencyData(r) {
        this._nativeAnalyserNode.getFloatFrequencyData(r);
      }
      getFloatTimeDomainData(r) {
        this._nativeAnalyserNode.getFloatTimeDomainData(r);
      }
    },
  er = (T, t) => T.context === t,
  Iu = (T, t, p) => () => {
    const e = new WeakMap(),
      v = async (y, m) => {
        let r = t(y);
        if (!er(r, m)) {
          const l = {
            channelCount: r.channelCount,
            channelCountMode: r.channelCountMode,
            channelInterpretation: r.channelInterpretation,
            fftSize: r.fftSize,
            maxDecibels: r.maxDecibels,
            minDecibels: r.minDecibels,
            smoothingTimeConstant: r.smoothingTimeConstant,
          };
          r = T(m, l);
        }
        return e.set(m, r), await p(y, m, r), r;
      };
    return {
      render(y, m) {
        const r = e.get(m);
        return r !== void 0 ? Promise.resolve(r) : v(y, m);
      },
    };
  },
  Xs = (T) => {
    try {
      T.copyToChannel(new Float32Array(1), 0, -1);
    } catch {
      return !1;
    }
    return !0;
  },
  Ar = () => new DOMException('', 'IndexSizeError'),
  ei = (T) => {
    T.getChannelData = ((t) => (p) => {
      try {
        return t.call(T, p);
      } catch (e) {
        throw e.code === 12 ? Ar() : e;
      }
    })(T.getChannelData);
  },
  Lu = { numberOfChannels: 1 },
  Nu = (T, t, p, e, v, y, m, r) => {
    let c = null;
    return class Va {
      constructor(h) {
        if (v === null)
          throw new Error(
            'Missing the native OfflineAudioContext constructor.',
          );
        const {
          length: u,
          numberOfChannels: o,
          sampleRate: n,
        } = { ...Lu, ...h };
        c === null && (c = new v(1, 1, 44100));
        const s =
          e !== null && t(y, y)
            ? new e({ length: u, numberOfChannels: o, sampleRate: n })
            : c.createBuffer(o, u, n);
        if (s.numberOfChannels === 0) throw p();
        return (
          typeof s.copyFromChannel != 'function'
            ? (m(s), ei(s))
            : t(Xs, () => Xs(s)) || r(s),
          T.add(s),
          s
        );
      }
      static [Symbol.hasInstance](h) {
        return (
          (h !== null &&
            typeof h == 'object' &&
            Object.getPrototypeOf(h) === Va.prototype) ||
          T.has(h)
        );
      }
    };
  },
  ir = -34028234663852886e22,
  rr = -ir,
  Ur = (T) => Bn.has(T),
  Fu = {
    buffer: null,
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    loop: !1,
    loopEnd: 0,
    loopStart: 0,
    playbackRate: 1,
  },
  Uu = (T, t, p, e, v, y, m, r) =>
    class extends T {
      constructor(l, h) {
        const u = y(l),
          o = { ...Fu, ...h },
          n = v(u, o),
          s = m(u),
          i = s ? t() : null;
        super(l, !1, n, i),
          (this._audioBufferSourceNodeRenderer = i),
          (this._isBufferNullified = !1),
          (this._isBufferSet = o.buffer !== null),
          (this._nativeAudioBufferSourceNode = n),
          (this._onended = null),
          (this._playbackRate = p(this, s, n.playbackRate, rr, ir));
      }
      get buffer() {
        return this._isBufferNullified
          ? null
          : this._nativeAudioBufferSourceNode.buffer;
      }
      set buffer(l) {
        if (((this._nativeAudioBufferSourceNode.buffer = l), l !== null)) {
          if (this._isBufferSet) throw e();
          this._isBufferSet = !0;
        }
      }
      get loop() {
        return this._nativeAudioBufferSourceNode.loop;
      }
      set loop(l) {
        this._nativeAudioBufferSourceNode.loop = l;
      }
      get loopEnd() {
        return this._nativeAudioBufferSourceNode.loopEnd;
      }
      set loopEnd(l) {
        this._nativeAudioBufferSourceNode.loopEnd = l;
      }
      get loopStart() {
        return this._nativeAudioBufferSourceNode.loopStart;
      }
      set loopStart(l) {
        this._nativeAudioBufferSourceNode.loopStart = l;
      }
      get onended() {
        return this._onended;
      }
      set onended(l) {
        const h = typeof l == 'function' ? r(this, l) : null;
        this._nativeAudioBufferSourceNode.onended = h;
        const u = this._nativeAudioBufferSourceNode.onended;
        this._onended = u !== null && u === h ? l : u;
      }
      get playbackRate() {
        return this._playbackRate;
      }
      start(l = 0, h = 0, u) {
        if (
          (this._nativeAudioBufferSourceNode.start(l, h, u),
          this._audioBufferSourceNodeRenderer !== null &&
            (this._audioBufferSourceNodeRenderer.start =
              u === void 0 ? [l, h] : [l, h, u]),
          this.context.state !== 'closed')
        ) {
          Gn(this);
          const o = () => {
            this._nativeAudioBufferSourceNode.removeEventListener('ended', o),
              Ur(this) && xs(this);
          };
          this._nativeAudioBufferSourceNode.addEventListener('ended', o);
        }
      }
      stop(l = 0) {
        this._nativeAudioBufferSourceNode.stop(l),
          this._audioBufferSourceNodeRenderer !== null &&
            (this._audioBufferSourceNodeRenderer.stop = l);
      }
    },
  Bu = (T, t, p, e, v) => () => {
    const y = new WeakMap();
    let m = null,
      r = null;
    const c = async (l, h) => {
      let u = p(l);
      const o = er(u, h);
      if (!o) {
        const n = {
          buffer: u.buffer,
          channelCount: u.channelCount,
          channelCountMode: u.channelCountMode,
          channelInterpretation: u.channelInterpretation,
          loop: u.loop,
          loopEnd: u.loopEnd,
          loopStart: u.loopStart,
          playbackRate: u.playbackRate.value,
        };
        (u = t(h, n)), m !== null && u.start(...m), r !== null && u.stop(r);
      }
      return (
        y.set(h, u),
        o
          ? await T(h, l.playbackRate, u.playbackRate)
          : await e(h, l.playbackRate, u.playbackRate),
        await v(l, h, u),
        u
      );
    };
    return {
      set start(l) {
        m = l;
      },
      set stop(l) {
        r = l;
      },
      render(l, h) {
        const u = y.get(h);
        return u !== void 0 ? Promise.resolve(u) : c(l, h);
      },
    };
  },
  Gu = (T) => 'playbackRate' in T,
  Vu = (T) => 'frequency' in T && 'gain' in T,
  Wu = (T) => 'offset' in T,
  qu = (T) => !('frequency' in T) && 'gain' in T,
  zu = (T) => 'detune' in T && 'frequency' in T,
  Hu = (T) => 'pan' in T,
  nr = (T) => br(La, T),
  Ss = (T) => br(Na, T),
  Ho = (T, t) => {
    const { activeInputs: p } = nr(T);
    p.forEach((v) =>
      v.forEach(([y]) => {
        t.includes(T) || Ho(y, [...t, T]);
      }),
    );
    const e = Gu(T)
      ? [T.playbackRate]
      : Ga(T)
      ? Array.from(T.parameters.values())
      : Vu(T)
      ? [T.Q, T.detune, T.frequency, T.gain]
      : Wu(T)
      ? [T.offset]
      : qu(T)
      ? [T.gain]
      : zu(T)
      ? [T.detune, T.frequency]
      : Hu(T)
      ? [T.pan]
      : [];
    for (const v of e) {
      const y = Ss(v);
      y !== void 0 && y.activeInputs.forEach(([m]) => Ho(m, t));
    }
    Ur(T) && xs(T);
  },
  Wa = (T) => {
    Ho(T.destination, []);
  },
  Xu = (T) =>
    T === void 0 ||
    typeof T == 'number' ||
    (typeof T == 'string' &&
      (T === 'balanced' || T === 'interactive' || T === 'playback')),
  Yu = (T, t, p, e, v, y, m, r, c) =>
    class extends T {
      constructor(h = {}) {
        if (c === null)
          throw new Error('Missing the native AudioContext constructor.');
        let u;
        try {
          u = new c(h);
        } catch (s) {
          throw s.code === 12 && s.message === 'sampleRate is not in range'
            ? p()
            : s;
        }
        if (u === null) throw e();
        if (!Xu(h.latencyHint))
          throw new TypeError(
            `The provided value '${h.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`,
          );
        if (h.sampleRate !== void 0 && u.sampleRate !== h.sampleRate) throw p();
        super(u, 2);
        const { latencyHint: o } = h,
          { sampleRate: n } = u;
        if (
          ((this._baseLatency =
            typeof u.baseLatency == 'number'
              ? u.baseLatency
              : o === 'balanced'
              ? 512 / n
              : o === 'interactive' || o === void 0
              ? 256 / n
              : o === 'playback'
              ? 1024 / n
              : (Math.max(2, Math.min(128, Math.round((o * n) / 128))) * 128) /
                n),
          (this._nativeAudioContext = u),
          c.name === 'webkitAudioContext'
            ? ((this._nativeGainNode = u.createGain()),
              (this._nativeOscillatorNode = u.createOscillator()),
              (this._nativeGainNode.gain.value = 1e-37),
              this._nativeOscillatorNode
                .connect(this._nativeGainNode)
                .connect(u.destination),
              this._nativeOscillatorNode.start())
            : ((this._nativeGainNode = null),
              (this._nativeOscillatorNode = null)),
          (this._state = null),
          u.state === 'running')
        ) {
          this._state = 'suspended';
          const s = () => {
            this._state === 'suspended' && (this._state = null),
              u.removeEventListener('statechange', s);
          };
          u.addEventListener('statechange', s);
        }
      }
      get baseLatency() {
        return this._baseLatency;
      }
      get state() {
        return this._state !== null
          ? this._state
          : this._nativeAudioContext.state;
      }
      close() {
        return this.state === 'closed'
          ? this._nativeAudioContext.close().then(() => {
              throw t();
            })
          : (this._state === 'suspended' && (this._state = null),
            this._nativeAudioContext.close().then(() => {
              this._nativeGainNode !== null &&
                this._nativeOscillatorNode !== null &&
                (this._nativeOscillatorNode.stop(),
                this._nativeGainNode.disconnect(),
                this._nativeOscillatorNode.disconnect()),
                Wa(this);
            }));
      }
      createMediaElementSource(h) {
        return new v(this, { mediaElement: h });
      }
      createMediaStreamDestination() {
        return new y(this);
      }
      createMediaStreamSource(h) {
        return new m(this, { mediaStream: h });
      }
      createMediaStreamTrackSource(h) {
        return new r(this, { mediaStreamTrack: h });
      }
      resume() {
        return this._state === 'suspended'
          ? new Promise((h, u) => {
              const o = () => {
                this._nativeAudioContext.removeEventListener('statechange', o),
                  this._nativeAudioContext.state === 'running'
                    ? h()
                    : this.resume().then(h, u);
              };
              this._nativeAudioContext.addEventListener('statechange', o);
            })
          : this._nativeAudioContext.resume().catch((h) => {
              throw h === void 0 || h.code === 15 ? t() : h;
            });
      }
      suspend() {
        return this._nativeAudioContext.suspend().catch((h) => {
          throw h === void 0 ? t() : h;
        });
      }
    },
  Zu = (T, t, p, e, v, y, m, r) =>
    class extends T {
      constructor(l, h) {
        const u = y(l),
          o = m(u),
          n = v(u, h, o),
          s = o ? t(r) : null;
        super(l, !1, n, s),
          (this._isNodeOfNativeOfflineAudioContext = o),
          (this._nativeAudioDestinationNode = n);
      }
      get channelCount() {
        return this._nativeAudioDestinationNode.channelCount;
      }
      set channelCount(l) {
        if (this._isNodeOfNativeOfflineAudioContext) throw e();
        if (l > this._nativeAudioDestinationNode.maxChannelCount) throw p();
        this._nativeAudioDestinationNode.channelCount = l;
      }
      get channelCountMode() {
        return this._nativeAudioDestinationNode.channelCountMode;
      }
      set channelCountMode(l) {
        if (this._isNodeOfNativeOfflineAudioContext) throw e();
        this._nativeAudioDestinationNode.channelCountMode = l;
      }
      get maxChannelCount() {
        return this._nativeAudioDestinationNode.maxChannelCount;
      }
    },
  $u = (T) => {
    const t = new WeakMap(),
      p = async (e, v) => {
        const y = v.destination;
        return t.set(v, y), await T(e, v, y), y;
      };
    return {
      render(e, v) {
        const y = t.get(v);
        return y !== void 0 ? Promise.resolve(y) : p(e, v);
      },
    };
  },
  Qu = (T, t, p, e, v, y, m, r) => (c, l) => {
    const h = l.listener,
      u = () => {
        const S = new Float32Array(1),
          M = t(l, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'speakers',
            numberOfInputs: 9,
          }),
          E = m(l);
        let O = !1,
          D = [0, 0, -1, 0, 1, 0],
          A = [0, 0, 0];
        const k = () => {
            if (O) return;
            O = !0;
            const B = e(l, 256, 9, 0);
            (B.onaudioprocess = ({ inputBuffer: Z }) => {
              const J = [
                y(Z, S, 0),
                y(Z, S, 1),
                y(Z, S, 2),
                y(Z, S, 3),
                y(Z, S, 4),
                y(Z, S, 5),
              ];
              J.some((ee, Q) => ee !== D[Q]) &&
                (h.setOrientation(...J), (D = J));
              const $ = [y(Z, S, 6), y(Z, S, 7), y(Z, S, 8)];
              $.some((ee, Q) => ee !== A[Q]) && (h.setPosition(...$), (A = $));
            }),
              M.connect(B);
          },
          L = (B) => (Z) => {
            Z !== D[B] && ((D[B] = Z), h.setOrientation(...D));
          },
          R = (B) => (Z) => {
            Z !== A[B] && ((A[B] = Z), h.setPosition(...A));
          },
          N = (B, Z, J) => {
            const $ = p(l, {
              channelCount: 1,
              channelCountMode: 'explicit',
              channelInterpretation: 'discrete',
              offset: Z,
            });
            $.connect(M, 0, B),
              $.start(),
              Object.defineProperty($.offset, 'defaultValue', {
                get() {
                  return Z;
                },
              });
            const ee = T({ context: c }, E, $.offset, rr, ir);
            return (
              r(
                ee,
                'value',
                (Q) => () => Q.call(ee),
                (Q) => (oe) => {
                  try {
                    Q.call(ee, oe);
                  } catch (ce) {
                    if (ce.code !== 9) throw ce;
                  }
                  k(), E && J(oe);
                },
              ),
              (ee.cancelAndHoldAtTime = ((Q) =>
                E
                  ? () => {
                      throw v();
                    }
                  : (...oe) => {
                      const ce = Q.apply(ee, oe);
                      return k(), ce;
                    })(ee.cancelAndHoldAtTime)),
              (ee.cancelScheduledValues = ((Q) =>
                E
                  ? () => {
                      throw v();
                    }
                  : (...oe) => {
                      const ce = Q.apply(ee, oe);
                      return k(), ce;
                    })(ee.cancelScheduledValues)),
              (ee.exponentialRampToValueAtTime = ((Q) =>
                E
                  ? () => {
                      throw v();
                    }
                  : (...oe) => {
                      const ce = Q.apply(ee, oe);
                      return k(), ce;
                    })(ee.exponentialRampToValueAtTime)),
              (ee.linearRampToValueAtTime = ((Q) =>
                E
                  ? () => {
                      throw v();
                    }
                  : (...oe) => {
                      const ce = Q.apply(ee, oe);
                      return k(), ce;
                    })(ee.linearRampToValueAtTime)),
              (ee.setTargetAtTime = ((Q) =>
                E
                  ? () => {
                      throw v();
                    }
                  : (...oe) => {
                      const ce = Q.apply(ee, oe);
                      return k(), ce;
                    })(ee.setTargetAtTime)),
              (ee.setValueAtTime = ((Q) =>
                E
                  ? () => {
                      throw v();
                    }
                  : (...oe) => {
                      const ce = Q.apply(ee, oe);
                      return k(), ce;
                    })(ee.setValueAtTime)),
              (ee.setValueCurveAtTime = ((Q) =>
                E
                  ? () => {
                      throw v();
                    }
                  : (...oe) => {
                      const ce = Q.apply(ee, oe);
                      return k(), ce;
                    })(ee.setValueCurveAtTime)),
              ee
            );
          };
        return {
          forwardX: N(0, 0, L(0)),
          forwardY: N(1, 0, L(1)),
          forwardZ: N(2, -1, L(2)),
          positionX: N(6, 0, R(0)),
          positionY: N(7, 0, R(1)),
          positionZ: N(8, 0, R(2)),
          upX: N(3, 0, L(3)),
          upY: N(4, 1, L(4)),
          upZ: N(5, 0, L(5)),
        };
      },
      {
        forwardX: o,
        forwardY: n,
        forwardZ: s,
        positionX: i,
        positionY: a,
        positionZ: d,
        upX: g,
        upY: _,
        upZ: w,
      } = h.forwardX === void 0 ? u() : h;
    return {
      get forwardX() {
        return o;
      },
      get forwardY() {
        return n;
      },
      get forwardZ() {
        return s;
      },
      get positionX() {
        return i;
      },
      get positionY() {
        return a;
      },
      get positionZ() {
        return d;
      },
      get upX() {
        return g;
      },
      get upY() {
        return _;
      },
      get upZ() {
        return w;
      },
    };
  },
  Ys = (T) => 'context' in T,
  Ts = (T) => Ys(T[0]),
  jn = (T, t, p, e) => {
    for (const v of T)
      if (p(v)) {
        if (e) return !1;
        throw Error('The set contains at least one similar element.');
      }
    return T.add(t), !0;
  },
  wa = (T, t, [p, e], v) => {
    jn(T, [t, p, e], (y) => y[0] === t && y[1] === p, v);
  },
  xa = (T, [t, p, e], v) => {
    const y = T.get(t);
    y === void 0
      ? T.set(t, new Set([[p, e]]))
      : jn(y, [p, e], (m) => m[0] === p, v);
  },
  zn = (T) => 'inputs' in T,
  Zs = (T, t, p, e) => {
    if (zn(t)) {
      const v = t.inputs[e];
      return T.connect(v, p, 0), [v, p, 0];
    }
    return T.connect(t, p, e), [t, p, e];
  },
  qa = (T, t, p) => {
    for (const e of T) if (e[0] === t && e[1] === p) return T.delete(e), e;
    return null;
  },
  Ju = (T, t, p) => yo(T, (e) => e[0] === t && e[1] === p),
  za = (T, t) => {
    if (!ws(T).delete(t))
      throw new Error('Missing the expected event listener.');
  },
  Ha = (T, t, p) => {
    const e = br(T, t),
      v = yo(e, (y) => y[0] === p);
    return e.size === 0 && T.delete(t), v;
  },
  $s = (T, t, p, e) => {
    zn(t) ? T.disconnect(t.inputs[e], p, 0) : T.disconnect(t, p, e);
  },
  Lt = (T) => br(Jo, T),
  is = (T) => br(Ko, T),
  vn = (T) => Vo.has(T),
  Vs = (T) => !Bn.has(T),
  Sa = (T, t) =>
    new Promise((p) => {
      if (t !== null) p(!0);
      else {
        const e = T.createScriptProcessor(256, 1, 1),
          v = T.createGain(),
          y = T.createBuffer(1, 2, 44100),
          m = y.getChannelData(0);
        (m[0] = 1), (m[1] = 1);
        const r = T.createBufferSource();
        (r.buffer = y),
          (r.loop = !0),
          r.connect(e).connect(T.destination),
          r.connect(v),
          r.disconnect(v),
          (e.onaudioprocess = (c) => {
            const l = c.inputBuffer.getChannelData(0);
            Array.prototype.some.call(l, (h) => h === 1) ? p(!0) : p(!1),
              r.stop(),
              (e.onaudioprocess = null),
              r.disconnect(e),
              e.disconnect(T.destination);
          }),
          r.start();
      }
    }),
  No = (T, t) => {
    const p = new Map();
    for (const e of T)
      for (const v of e) {
        const y = p.get(v);
        p.set(v, y === void 0 ? 1 : y + 1);
      }
    p.forEach((e, v) => t(v, e));
  },
  Qs = (T) => 'context' in T,
  Ku = (T) => {
    const t = new Map();
    (T.connect = (
      (p) =>
      (e, v = 0, y = 0) => {
        const m = Qs(e) ? p(e, v, y) : p(e, v),
          r = t.get(e);
        return (
          r === void 0
            ? t.set(e, [{ input: y, output: v }])
            : r.every((c) => c.input !== y || c.output !== v) &&
              r.push({ input: y, output: v }),
          m
        );
      }
    )(T.connect.bind(T))),
      (T.disconnect = ((p) => (e, v, y) => {
        if ((p.apply(T), e === void 0)) t.clear();
        else if (typeof e == 'number')
          for (const [m, r] of t) {
            const c = r.filter((l) => l.output !== e);
            c.length === 0 ? t.delete(m) : t.set(m, c);
          }
        else if (t.has(e))
          if (v === void 0) t.delete(e);
          else {
            const m = t.get(e);
            if (m !== void 0) {
              const r = m.filter(
                (c) => c.output !== v && (c.input !== y || y === void 0),
              );
              r.length === 0 ? t.delete(e) : t.set(e, r);
            }
          }
        for (const [m, r] of t)
          r.forEach((c) => {
            Qs(m) ? T.connect(m, c.output, c.input) : T.connect(m, c.output);
          });
      })(T.disconnect));
  },
  ec = (T, t, p, e) => {
    const { activeInputs: v, passiveInputs: y } = Ss(t),
      { outputs: m } = nr(T),
      r = ws(T),
      c = (l) => {
        const h = Lt(T),
          u = is(t);
        if (l) {
          const o = Ha(y, T, p);
          wa(v, T, o, !1), !e && !vn(T) && h.connect(u, p);
        } else {
          const o = Ju(v, T, p);
          xa(y, o, !1), !e && !vn(T) && h.disconnect(u, p);
        }
      };
    return jn(m, [t, p], (l) => l[0] === t && l[1] === p, !0)
      ? (r.add(c), Ur(T) ? wa(v, T, [p, c], !0) : xa(y, [T, p, c], !0), !0)
      : !1;
  },
  tc = (T, t, p, e) => {
    const { activeInputs: v, passiveInputs: y } = nr(t),
      m = qa(v[e], T, p);
    return m === null ? [Ba(y, T, p, e)[2], !1] : [m[2], !0];
  },
  rc = (T, t, p) => {
    const { activeInputs: e, passiveInputs: v } = Ss(t),
      y = qa(e, T, p);
    return y === null ? [Ha(v, T, p)[1], !1] : [y[2], !0];
  },
  ti = (T, t, p, e, v) => {
    const [y, m] = tc(T, p, e, v);
    if (
      (y !== null && (za(T, y), m && !t && !vn(T) && $s(Lt(T), Lt(p), e, v)),
      Ur(p))
    ) {
      const { activeInputs: r } = nr(p);
      zo(p, r);
    }
  },
  ri = (T, t, p, e) => {
    const [v, y] = rc(T, p, e);
    v !== null && (za(T, v), y && !t && !vn(T) && Lt(T).disconnect(is(p), e));
  },
  nc = (T, t) => {
    const p = nr(T),
      e = [];
    for (const v of p.outputs)
      Ts(v) ? ti(T, t, ...v) : ri(T, t, ...v), e.push(v[0]);
    return p.outputs.clear(), e;
  },
  sc = (T, t, p) => {
    const e = nr(T),
      v = [];
    for (const y of e.outputs)
      y[1] === p &&
        (Ts(y) ? ti(T, t, ...y) : ri(T, t, ...y),
        v.push(y[0]),
        e.outputs.delete(y));
    return v;
  },
  oc = (T, t, p, e, v) => {
    const y = nr(T);
    return Array.from(y.outputs)
      .filter(
        (m) =>
          m[0] === p &&
          (e === void 0 || m[1] === e) &&
          (v === void 0 || m[2] === v),
      )
      .map(
        (m) => (
          Ts(m) ? ti(T, t, ...m) : ri(T, t, ...m), y.outputs.delete(m), m[0]
        ),
      );
  },
  ic = (T, t, p, e, v, y, m, r, c, l, h, u, o, n, s, i) =>
    class extends l {
      constructor(d, g, _, w) {
        super(_), (this._context = d), (this._nativeAudioNode = _);
        const S = h(d);
        u(S) && p(Sa, () => Sa(S, i)) !== !0 && Ku(_),
          Jo.set(this, _),
          Fa.set(this, new Set()),
          d.state !== 'closed' && g && Gn(this),
          T(this, w, _);
      }
      get channelCount() {
        return this._nativeAudioNode.channelCount;
      }
      set channelCount(d) {
        this._nativeAudioNode.channelCount = d;
      }
      get channelCountMode() {
        return this._nativeAudioNode.channelCountMode;
      }
      set channelCountMode(d) {
        this._nativeAudioNode.channelCountMode = d;
      }
      get channelInterpretation() {
        return this._nativeAudioNode.channelInterpretation;
      }
      set channelInterpretation(d) {
        this._nativeAudioNode.channelInterpretation = d;
      }
      get context() {
        return this._context;
      }
      get numberOfInputs() {
        return this._nativeAudioNode.numberOfInputs;
      }
      get numberOfOutputs() {
        return this._nativeAudioNode.numberOfOutputs;
      }
      connect(d, g = 0, _ = 0) {
        if (g < 0 || g >= this._nativeAudioNode.numberOfOutputs) throw v();
        const w = h(this._context),
          S = s(w);
        if (o(d) || n(d)) throw y();
        if (Ys(d)) {
          const O = Lt(d);
          try {
            const A = Zs(this._nativeAudioNode, O, g, _),
              k = Vs(this);
            (S || k) && this._nativeAudioNode.disconnect(...A),
              this.context.state !== 'closed' && !k && Vs(d) && Gn(d);
          } catch (A) {
            throw A.code === 12 ? y() : A;
          }
          if (t(this, d, g, _, S)) {
            const A = c([this], d);
            No(A, e(S));
          }
          return d;
        }
        const M = is(d);
        if (M.name === 'playbackRate' && M.maxValue === 1024) throw m();
        try {
          this._nativeAudioNode.connect(M, g),
            (S || Vs(this)) && this._nativeAudioNode.disconnect(M, g);
        } catch (O) {
          throw O.code === 12 ? y() : O;
        }
        if (ec(this, d, g, S)) {
          const O = c([this], d);
          No(O, e(S));
        }
      }
      disconnect(d, g, _) {
        let w;
        const S = h(this._context),
          M = s(S);
        if (d === void 0) w = nc(this, M);
        else if (typeof d == 'number') {
          if (d < 0 || d >= this.numberOfOutputs) throw v();
          w = sc(this, M, d);
        } else {
          if (
            (g !== void 0 && (g < 0 || g >= this.numberOfOutputs)) ||
            (Ys(d) && _ !== void 0 && (_ < 0 || _ >= d.numberOfInputs))
          )
            throw v();
          if (((w = oc(this, M, d, g, _)), w.length === 0)) throw y();
        }
        for (const E of w) {
          const O = c([this], E);
          No(O, r);
        }
      }
    },
  ac =
    (T, t, p, e, v, y, m, r, c, l, h, u, o) =>
    (n, s, i, a = null, d = null) => {
      const g = new gu(i.defaultValue),
        _ = s ? e(g) : null,
        w = {
          get defaultValue() {
            return i.defaultValue;
          },
          get maxValue() {
            return a === null ? i.maxValue : a;
          },
          get minValue() {
            return d === null ? i.minValue : d;
          },
          get value() {
            return i.value;
          },
          set value(S) {
            (i.value = S), w.setValueAtTime(S, n.context.currentTime);
          },
          cancelAndHoldAtTime(S) {
            if (typeof i.cancelAndHoldAtTime == 'function')
              _ === null && g.flush(n.context.currentTime),
                g.add(v(S)),
                i.cancelAndHoldAtTime(S);
            else {
              const M = Array.from(g).pop();
              _ === null && g.flush(n.context.currentTime), g.add(v(S));
              const E = Array.from(g).pop();
              i.cancelScheduledValues(S),
                M !== E &&
                  E !== void 0 &&
                  (E.type === 'exponentialRampToValue'
                    ? i.exponentialRampToValueAtTime(E.value, E.endTime)
                    : E.type === 'linearRampToValue'
                    ? i.linearRampToValueAtTime(E.value, E.endTime)
                    : E.type === 'setValue'
                    ? i.setValueAtTime(E.value, E.startTime)
                    : E.type === 'setValueCurve' &&
                      i.setValueCurveAtTime(E.values, E.startTime, E.duration));
            }
            return w;
          },
          cancelScheduledValues(S) {
            return (
              _ === null && g.flush(n.context.currentTime),
              g.add(y(S)),
              i.cancelScheduledValues(S),
              w
            );
          },
          exponentialRampToValueAtTime(S, M) {
            if (S === 0) throw new RangeError();
            if (!Number.isFinite(M) || M < 0) throw new RangeError();
            return (
              _ === null && g.flush(n.context.currentTime),
              g.add(m(S, M)),
              i.exponentialRampToValueAtTime(S, M),
              w
            );
          },
          linearRampToValueAtTime(S, M) {
            return (
              _ === null && g.flush(n.context.currentTime),
              g.add(r(S, M)),
              i.linearRampToValueAtTime(S, M),
              w
            );
          },
          setTargetAtTime(S, M, E) {
            return (
              _ === null && g.flush(n.context.currentTime),
              g.add(c(S, M, E)),
              i.setTargetAtTime(S, M, E),
              w
            );
          },
          setValueAtTime(S, M) {
            return (
              _ === null && g.flush(n.context.currentTime),
              g.add(l(S, M)),
              i.setValueAtTime(S, M),
              w
            );
          },
          setValueCurveAtTime(S, M, E) {
            const O = S instanceof Float32Array ? S : new Float32Array(S);
            if (u !== null && u.name === 'webkitAudioContext') {
              const D = M + E,
                A = n.context.sampleRate,
                k = Math.ceil(M * A),
                L = Math.floor(D * A),
                R = L - k,
                N = new Float32Array(R);
              for (let Z = 0; Z < R; Z += 1) {
                const J = ((O.length - 1) / E) * ((k + Z) / A - M),
                  $ = Math.floor(J),
                  ee = Math.ceil(J);
                N[Z] =
                  $ === ee
                    ? O[$]
                    : (1 - (J - $)) * O[$] + (1 - (ee - J)) * O[ee];
              }
              _ === null && g.flush(n.context.currentTime),
                g.add(h(N, M, E)),
                i.setValueCurveAtTime(N, M, E);
              const B = L / A;
              B < D && o(w, N[N.length - 1], B), o(w, O[O.length - 1], D);
            } else
              _ === null && g.flush(n.context.currentTime),
                g.add(h(O, M, E)),
                i.setValueCurveAtTime(O, M, E);
            return w;
          },
        };
      return p.set(w, i), t.set(w, n), T(w, _), w;
    },
  lc = (T) => ({
    replay(t) {
      for (const p of T)
        if (p.type === 'exponentialRampToValue') {
          const { endTime: e, value: v } = p;
          t.exponentialRampToValueAtTime(v, e);
        } else if (p.type === 'linearRampToValue') {
          const { endTime: e, value: v } = p;
          t.linearRampToValueAtTime(v, e);
        } else if (p.type === 'setTarget') {
          const { startTime: e, target: v, timeConstant: y } = p;
          t.setTargetAtTime(v, e, y);
        } else if (p.type === 'setValue') {
          const { startTime: e, value: v } = p;
          t.setValueAtTime(v, e);
        } else if (p.type === 'setValueCurve') {
          const { duration: e, startTime: v, values: y } = p;
          t.setValueCurveAtTime(y, v, e);
        } else throw new Error("Can't apply an unknown automation.");
    },
  });
class Xa {
  constructor(t) {
    this._map = new Map(t);
  }
  get size() {
    return this._map.size;
  }
  entries() {
    return this._map.entries();
  }
  forEach(t, p = null) {
    return this._map.forEach((e, v) => t.call(p, e, v, this));
  }
  get(t) {
    return this._map.get(t);
  }
  has(t) {
    return this._map.has(t);
  }
  keys() {
    return this._map.keys();
  }
  values() {
    return this._map.values();
  }
}
const uc = {
    channelCount: 2,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    numberOfInputs: 1,
    numberOfOutputs: 1,
    parameterData: {},
    processorOptions: {},
  },
  cc = (T, t, p, e, v, y, m, r, c, l, h, u, o, n) =>
    class extends t {
      constructor(i, a, d) {
        var g;
        const _ = r(i),
          w = c(_),
          S = h({ ...uc, ...d });
        o(S);
        const M = Wo.get(_),
          E = M == null ? void 0 : M.get(a),
          O =
            w || _.state !== 'closed'
              ? _
              : (g = m(_)) !== null && g !== void 0
              ? g
              : _,
          D = v(O, w ? null : i.baseLatency, l, a, E, S),
          A = w ? e(a, S, E) : null;
        super(i, !0, D, A);
        const k = [];
        D.parameters.forEach((R, N) => {
          const B = p(this, w, R);
          k.push([N, B]);
        }),
          (this._nativeAudioWorkletNode = D),
          (this._onprocessorerror = null),
          (this._parameters = new Xa(k)),
          w && T(_, this);
        const { activeInputs: L } = y(this);
        u(D, L);
      }
      get onprocessorerror() {
        return this._onprocessorerror;
      }
      set onprocessorerror(i) {
        const a = typeof i == 'function' ? n(this, i) : null;
        this._nativeAudioWorkletNode.onprocessorerror = a;
        const d = this._nativeAudioWorkletNode.onprocessorerror;
        this._onprocessorerror = d !== null && d === a ? i : d;
      }
      get parameters() {
        return this._parameters === null
          ? this._nativeAudioWorkletNode.parameters
          : this._parameters;
      }
      get port() {
        return this._nativeAudioWorkletNode.port;
      }
    };
function Js(T, t, p, e, v) {
  if (typeof T.copyFromChannel == 'function')
    t[p].byteLength === 0 && (t[p] = new Float32Array(128)),
      T.copyFromChannel(t[p], e, v);
  else {
    const y = T.getChannelData(e);
    if (t[p].byteLength === 0) t[p] = y.slice(v, v + 128);
    else {
      const m = new Float32Array(
        y.buffer,
        v * Float32Array.BYTES_PER_ELEMENT,
        128,
      );
      t[p].set(m);
    }
  }
}
const Ya = (T, t, p, e, v) => {
    typeof T.copyToChannel == 'function'
      ? t[p].byteLength !== 0 && T.copyToChannel(t[p], e, v)
      : t[p].byteLength !== 0 && T.getChannelData(e).set(t[p], v);
  },
  Ks = (T, t) => {
    const p = [];
    for (let e = 0; e < T; e += 1) {
      const v = [],
        y = typeof t == 'number' ? t : t[e];
      for (let m = 0; m < y; m += 1) v.push(new Float32Array(128));
      p.push(v);
    }
    return p;
  },
  hc = (T, t) => {
    const p = br(qo, T),
      e = Lt(t);
    return br(p, e);
  },
  dc = async (T, t, p, e, v, y, m) => {
    const r = t === null ? Math.ceil(T.context.length / 128) * 128 : t.length,
      c = e.channelCount * e.numberOfInputs,
      l = v.reduce((a, d) => a + d, 0),
      h = l === 0 ? null : p.createBuffer(l, r, p.sampleRate);
    if (y === void 0) throw new Error('Missing the processor constructor.');
    const u = nr(T),
      o = await hc(p, T),
      n = Ks(e.numberOfInputs, e.channelCount),
      s = Ks(e.numberOfOutputs, v),
      i = Array.from(T.parameters.keys()).reduce(
        (a, d) => ({ ...a, [d]: new Float32Array(128) }),
        {},
      );
    for (let a = 0; a < r; a += 128) {
      if (e.numberOfInputs > 0 && t !== null)
        for (let d = 0; d < e.numberOfInputs; d += 1)
          for (let g = 0; g < e.channelCount; g += 1) Js(t, n[d], g, g, a);
      y.parameterDescriptors !== void 0 &&
        t !== null &&
        y.parameterDescriptors.forEach(({ name: d }, g) => {
          Js(t, i, d, c + g, a);
        });
      for (let d = 0; d < e.numberOfInputs; d += 1)
        for (let g = 0; g < v[d]; g += 1)
          s[d][g].byteLength === 0 && (s[d][g] = new Float32Array(128));
      try {
        const d = n.map((_, w) => (u.activeInputs[w].size === 0 ? [] : _)),
          g = m(a / p.sampleRate, p.sampleRate, () => o.process(d, s, i));
        if (h !== null)
          for (let _ = 0, w = 0; _ < e.numberOfOutputs; _ += 1) {
            for (let S = 0; S < v[_]; S += 1) Ya(h, s[_], S, w + S, a);
            w += v[_];
          }
        if (!g) break;
      } catch (d) {
        T.dispatchEvent(
          new ErrorEvent('processorerror', {
            colno: d.colno,
            filename: d.filename,
            lineno: d.lineno,
            message: d.message,
          }),
        );
        break;
      }
    }
    return h;
  },
  fc = (T, t, p, e, v, y, m, r, c, l, h, u, o, n, s, i) => (a, d, g) => {
    const _ = new WeakMap();
    let w = null;
    const S = async (M, E) => {
      let O = h(M),
        D = null;
      const A = er(O, E),
        k = Array.isArray(d.outputChannelCount)
          ? d.outputChannelCount
          : Array.from(d.outputChannelCount);
      if (u === null) {
        const L = k.reduce((Z, J) => Z + J, 0),
          R = v(E, {
            channelCount: Math.max(1, L),
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: Math.max(1, L),
          }),
          N = [];
        for (let Z = 0; Z < M.numberOfOutputs; Z += 1)
          N.push(
            e(E, {
              channelCount: 1,
              channelCountMode: 'explicit',
              channelInterpretation: 'speakers',
              numberOfInputs: k[Z],
            }),
          );
        const B = m(E, {
          channelCount: d.channelCount,
          channelCountMode: d.channelCountMode,
          channelInterpretation: d.channelInterpretation,
          gain: 1,
        });
        (B.connect = t.bind(null, N)),
          (B.disconnect = c.bind(null, N)),
          (D = [R, N, B]);
      } else A || (O = new u(E, a));
      if ((_.set(E, D === null ? O : D[2]), D !== null)) {
        if (w === null) {
          if (g === void 0)
            throw new Error('Missing the processor constructor.');
          if (o === null)
            throw new Error(
              'Missing the native OfflineAudioContext constructor.',
            );
          const J = M.channelCount * M.numberOfInputs,
            $ =
              g.parameterDescriptors === void 0
                ? 0
                : g.parameterDescriptors.length,
            ee = J + $;
          w = dc(
            M,
            ee === 0
              ? null
              : await (async () => {
                  const oe = new o(
                      ee,
                      Math.ceil(M.context.length / 128) * 128,
                      E.sampleRate,
                    ),
                    ce = [],
                    ve = [];
                  for (let fe = 0; fe < d.numberOfInputs; fe += 1)
                    ce.push(
                      m(oe, {
                        channelCount: d.channelCount,
                        channelCountMode: d.channelCountMode,
                        channelInterpretation: d.channelInterpretation,
                        gain: 1,
                      }),
                    ),
                      ve.push(
                        v(oe, {
                          channelCount: d.channelCount,
                          channelCountMode: 'explicit',
                          channelInterpretation: 'discrete',
                          numberOfOutputs: d.channelCount,
                        }),
                      );
                  const de = await Promise.all(
                      Array.from(M.parameters.values()).map(async (fe) => {
                        const ye = y(oe, {
                          channelCount: 1,
                          channelCountMode: 'explicit',
                          channelInterpretation: 'discrete',
                          offset: fe.value,
                        });
                        return await n(oe, fe, ye.offset), ye;
                      }),
                    ),
                    Se = e(oe, {
                      channelCount: 1,
                      channelCountMode: 'explicit',
                      channelInterpretation: 'speakers',
                      numberOfInputs: Math.max(1, J + $),
                    });
                  for (let fe = 0; fe < d.numberOfInputs; fe += 1) {
                    ce[fe].connect(ve[fe]);
                    for (let ye = 0; ye < d.channelCount; ye += 1)
                      ve[fe].connect(Se, ye, fe * d.channelCount + ye);
                  }
                  for (const [fe, ye] of de.entries())
                    ye.connect(Se, 0, J + fe), ye.start(0);
                  return (
                    Se.connect(oe.destination),
                    await Promise.all(ce.map((fe) => s(M, oe, fe))),
                    i(oe)
                  );
                })(),
            E,
            d,
            k,
            g,
            l,
          );
        }
        const L = await w,
          R = p(E, {
            buffer: null,
            channelCount: 2,
            channelCountMode: 'max',
            channelInterpretation: 'speakers',
            loop: !1,
            loopEnd: 0,
            loopStart: 0,
            playbackRate: 1,
          }),
          [N, B, Z] = D;
        L !== null && ((R.buffer = L), R.start(0)), R.connect(N);
        for (let J = 0, $ = 0; J < M.numberOfOutputs; J += 1) {
          const ee = B[J];
          for (let Q = 0; Q < k[J]; Q += 1) N.connect(ee, $ + Q, Q);
          $ += k[J];
        }
        return Z;
      }
      if (A)
        for (const [L, R] of M.parameters.entries())
          await T(E, R, O.parameters.get(L));
      else
        for (const [L, R] of M.parameters.entries())
          await n(E, R, O.parameters.get(L));
      return await s(M, E, O), O;
    };
    return {
      render(M, E) {
        r(E, M);
        const O = _.get(E);
        return O !== void 0 ? Promise.resolve(O) : S(M, E);
      },
    };
  },
  pc = (T, t, p, e, v, y, m, r, c, l, h, u, o, n, s, i, a, d, g, _) =>
    class extends s {
      constructor(S, M) {
        super(S, M),
          (this._nativeContext = S),
          (this._audioWorklet =
            T === void 0 ? void 0 : { addModule: (E, O) => T(this, E, O) });
      }
      get audioWorklet() {
        return this._audioWorklet;
      }
      createAnalyser() {
        return new t(this);
      }
      createBiquadFilter() {
        return new v(this);
      }
      createBuffer(S, M, E) {
        return new p({ length: M, numberOfChannels: S, sampleRate: E });
      }
      createBufferSource() {
        return new e(this);
      }
      createChannelMerger(S = 6) {
        return new y(this, { numberOfInputs: S });
      }
      createChannelSplitter(S = 6) {
        return new m(this, { numberOfOutputs: S });
      }
      createConstantSource() {
        return new r(this);
      }
      createConvolver() {
        return new c(this);
      }
      createDelay(S = 1) {
        return new h(this, { maxDelayTime: S });
      }
      createDynamicsCompressor() {
        return new u(this);
      }
      createGain() {
        return new o(this);
      }
      createIIRFilter(S, M) {
        return new n(this, { feedback: M, feedforward: S });
      }
      createOscillator() {
        return new i(this);
      }
      createPanner() {
        return new a(this);
      }
      createPeriodicWave(S, M, E = { disableNormalization: !1 }) {
        return new d(this, { ...E, imag: M, real: S });
      }
      createStereoPanner() {
        return new g(this);
      }
      createWaveShaper() {
        return new _(this);
      }
      decodeAudioData(S, M, E) {
        return l(this._nativeContext, S).then(
          (O) => (typeof M == 'function' && M(O), O),
          (O) => {
            throw (typeof E == 'function' && E(O), O);
          },
        );
      }
    },
  mc = {
    Q: 1,
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    detune: 0,
    frequency: 350,
    gain: 0,
    type: 'lowpass',
  },
  yc = (T, t, p, e, v, y, m, r) =>
    class extends T {
      constructor(l, h) {
        const u = y(l),
          o = { ...mc, ...h },
          n = v(u, o),
          s = m(u),
          i = s ? p() : null;
        super(l, !1, n, i),
          (this._Q = t(this, s, n.Q, rr, ir)),
          (this._detune = t(
            this,
            s,
            n.detune,
            1200 * Math.log2(rr),
            -1200 * Math.log2(rr),
          )),
          (this._frequency = t(this, s, n.frequency, l.sampleRate / 2, 0)),
          (this._gain = t(this, s, n.gain, 40 * Math.log10(rr), ir)),
          (this._nativeBiquadFilterNode = n),
          r(this, 1);
      }
      get detune() {
        return this._detune;
      }
      get frequency() {
        return this._frequency;
      }
      get gain() {
        return this._gain;
      }
      get Q() {
        return this._Q;
      }
      get type() {
        return this._nativeBiquadFilterNode.type;
      }
      set type(l) {
        this._nativeBiquadFilterNode.type = l;
      }
      getFrequencyResponse(l, h, u) {
        try {
          this._nativeBiquadFilterNode.getFrequencyResponse(l, h, u);
        } catch (o) {
          throw o.code === 11 ? e() : o;
        }
        if (l.length !== h.length || h.length !== u.length) throw e();
      }
    },
  gc = (T, t, p, e, v) => () => {
    const y = new WeakMap(),
      m = async (r, c) => {
        let l = p(r);
        const h = er(l, c);
        if (!h) {
          const u = {
            Q: l.Q.value,
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            detune: l.detune.value,
            frequency: l.frequency.value,
            gain: l.gain.value,
            type: l.type,
          };
          l = t(c, u);
        }
        return (
          y.set(c, l),
          h
            ? (await T(c, r.Q, l.Q),
              await T(c, r.detune, l.detune),
              await T(c, r.frequency, l.frequency),
              await T(c, r.gain, l.gain))
            : (await e(c, r.Q, l.Q),
              await e(c, r.detune, l.detune),
              await e(c, r.frequency, l.frequency),
              await e(c, r.gain, l.gain)),
          await v(r, c, l),
          l
        );
      };
    return {
      render(r, c) {
        const l = y.get(c);
        return l !== void 0 ? Promise.resolve(l) : m(r, c);
      },
    };
  },
  vc = (T, t) => (p, e) => {
    const v = t.get(p);
    if (v !== void 0) return v;
    const y = T.get(p);
    if (y !== void 0) return y;
    try {
      const m = e();
      return m instanceof Promise
        ? (T.set(p, m),
          m.catch(() => !1).then((r) => (T.delete(p), t.set(p, r), r)))
        : (t.set(p, m), m);
    } catch {
      return t.set(p, !1), !1;
    }
  },
  bc = {
    channelCount: 1,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    numberOfInputs: 6,
  },
  _c = (T, t, p, e, v) =>
    class extends T {
      constructor(m, r) {
        const c = e(m),
          l = { ...bc, ...r },
          h = p(c, l),
          u = v(c) ? t() : null;
        super(m, !1, h, u);
      }
    },
  wc = (T, t, p) => () => {
    const e = new WeakMap(),
      v = async (y, m) => {
        let r = t(y);
        if (!er(r, m)) {
          const l = {
            channelCount: r.channelCount,
            channelCountMode: r.channelCountMode,
            channelInterpretation: r.channelInterpretation,
            numberOfInputs: r.numberOfInputs,
          };
          r = T(m, l);
        }
        return e.set(m, r), await p(y, m, r), r;
      };
    return {
      render(y, m) {
        const r = e.get(m);
        return r !== void 0 ? Promise.resolve(r) : v(y, m);
      },
    };
  },
  xc = {
    channelCount: 6,
    channelCountMode: 'explicit',
    channelInterpretation: 'discrete',
    numberOfOutputs: 6,
  },
  Sc = (T, t, p, e, v, y) =>
    class extends T {
      constructor(r, c) {
        const l = e(r),
          h = y({ ...xc, ...c }),
          u = p(l, h),
          o = v(l) ? t() : null;
        super(r, !1, u, o);
      }
    },
  Tc = (T, t, p) => () => {
    const e = new WeakMap(),
      v = async (y, m) => {
        let r = t(y);
        if (!er(r, m)) {
          const l = {
            channelCount: r.channelCount,
            channelCountMode: r.channelCountMode,
            channelInterpretation: r.channelInterpretation,
            numberOfOutputs: r.numberOfOutputs,
          };
          r = T(m, l);
        }
        return e.set(m, r), await p(y, m, r), r;
      };
    return {
      render(y, m) {
        const r = e.get(m);
        return r !== void 0 ? Promise.resolve(r) : v(y, m);
      },
    };
  },
  jc = (T) => (t, p, e) => T(p, t, e),
  Mc =
    (T) =>
    (t, p, e = 0, v = 0) => {
      const y = t[e];
      if (y === void 0) throw T();
      return Qs(p) ? y.connect(p, 0, v) : y.connect(p, 0);
    },
  Ec = (T) => (t, p) => {
    const e = T(t, {
        buffer: null,
        channelCount: 2,
        channelCountMode: 'max',
        channelInterpretation: 'speakers',
        loop: !1,
        loopEnd: 0,
        loopStart: 0,
        playbackRate: 1,
      }),
      v = t.createBuffer(1, 2, 44100);
    return (
      (e.buffer = v),
      (e.loop = !0),
      e.connect(p),
      e.start(),
      () => {
        e.stop(), e.disconnect(p);
      }
    );
  },
  Cc = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    offset: 1,
  },
  Oc = (T, t, p, e, v, y, m) =>
    class extends T {
      constructor(c, l) {
        const h = v(c),
          u = { ...Cc, ...l },
          o = e(h, u),
          n = y(h),
          s = n ? p() : null;
        super(c, !1, o, s),
          (this._constantSourceNodeRenderer = s),
          (this._nativeConstantSourceNode = o),
          (this._offset = t(this, n, o.offset, rr, ir)),
          (this._onended = null);
      }
      get offset() {
        return this._offset;
      }
      get onended() {
        return this._onended;
      }
      set onended(c) {
        const l = typeof c == 'function' ? m(this, c) : null;
        this._nativeConstantSourceNode.onended = l;
        const h = this._nativeConstantSourceNode.onended;
        this._onended = h !== null && h === l ? c : h;
      }
      start(c = 0) {
        if (
          (this._nativeConstantSourceNode.start(c),
          this._constantSourceNodeRenderer !== null &&
            (this._constantSourceNodeRenderer.start = c),
          this.context.state !== 'closed')
        ) {
          Gn(this);
          const l = () => {
            this._nativeConstantSourceNode.removeEventListener('ended', l),
              Ur(this) && xs(this);
          };
          this._nativeConstantSourceNode.addEventListener('ended', l);
        }
      }
      stop(c = 0) {
        this._nativeConstantSourceNode.stop(c),
          this._constantSourceNodeRenderer !== null &&
            (this._constantSourceNodeRenderer.stop = c);
      }
    },
  Ac = (T, t, p, e, v) => () => {
    const y = new WeakMap();
    let m = null,
      r = null;
    const c = async (l, h) => {
      let u = p(l);
      const o = er(u, h);
      if (!o) {
        const n = {
          channelCount: u.channelCount,
          channelCountMode: u.channelCountMode,
          channelInterpretation: u.channelInterpretation,
          offset: u.offset.value,
        };
        (u = t(h, n)), m !== null && u.start(m), r !== null && u.stop(r);
      }
      return (
        y.set(h, u),
        o ? await T(h, l.offset, u.offset) : await e(h, l.offset, u.offset),
        await v(l, h, u),
        u
      );
    };
    return {
      set start(l) {
        m = l;
      },
      set stop(l) {
        r = l;
      },
      render(l, h) {
        const u = y.get(h);
        return u !== void 0 ? Promise.resolve(u) : c(l, h);
      },
    };
  },
  kc = (T) => (t) => ((T[0] = t), T[0]),
  Pc = {
    buffer: null,
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    disableNormalization: !1,
  },
  Rc = (T, t, p, e, v, y) =>
    class extends T {
      constructor(r, c) {
        const l = e(r),
          h = { ...Pc, ...c },
          u = p(l, h),
          n = v(l) ? t() : null;
        super(r, !1, u, n),
          (this._isBufferNullified = !1),
          (this._nativeConvolverNode = u),
          h.buffer !== null && y(this, h.buffer.duration);
      }
      get buffer() {
        return this._isBufferNullified
          ? null
          : this._nativeConvolverNode.buffer;
      }
      set buffer(r) {
        if (
          ((this._nativeConvolverNode.buffer = r),
          r === null && this._nativeConvolverNode.buffer !== null)
        ) {
          const c = this._nativeConvolverNode.context;
          (this._nativeConvolverNode.buffer = c.createBuffer(
            1,
            1,
            c.sampleRate,
          )),
            (this._isBufferNullified = !0),
            y(this, 0);
        } else
          (this._isBufferNullified = !1),
            y(
              this,
              this._nativeConvolverNode.buffer === null
                ? 0
                : this._nativeConvolverNode.buffer.duration,
            );
      }
      get normalize() {
        return this._nativeConvolverNode.normalize;
      }
      set normalize(r) {
        this._nativeConvolverNode.normalize = r;
      }
    },
  Dc = (T, t, p) => () => {
    const e = new WeakMap(),
      v = async (y, m) => {
        let r = t(y);
        if (!er(r, m)) {
          const l = {
            buffer: r.buffer,
            channelCount: r.channelCount,
            channelCountMode: r.channelCountMode,
            channelInterpretation: r.channelInterpretation,
            disableNormalization: !r.normalize,
          };
          r = T(m, l);
        }
        return (
          e.set(m, r), zn(r) ? await p(y, m, r.inputs[0]) : await p(y, m, r), r
        );
      };
    return {
      render(y, m) {
        const r = e.get(m);
        return r !== void 0 ? Promise.resolve(r) : v(y, m);
      },
    };
  },
  Ic = (T, t) => (p, e, v) => {
    if (t === null)
      throw new Error('Missing the native OfflineAudioContext constructor.');
    try {
      return new t(p, e, v);
    } catch (y) {
      throw y.name === 'SyntaxError' ? T() : y;
    }
  },
  Lc = () => new DOMException('', 'DataCloneError'),
  Ta = (T) => {
    const { port1: t, port2: p } = new MessageChannel();
    return new Promise((e) => {
      const v = () => {
        (p.onmessage = null), t.close(), p.close(), e();
      };
      p.onmessage = () => v();
      try {
        t.postMessage(T, [T]);
      } finally {
        v();
      }
    });
  },
  Nc = (T, t, p, e, v, y, m, r, c, l, h) => (u, o) => {
    const n = m(u) ? u : y(u);
    if (v.has(o)) {
      const s = p();
      return Promise.reject(s);
    }
    try {
      v.add(o);
    } catch {}
    return t(c, () => c(n))
      ? n
          .decodeAudioData(o)
          .then(
            (s) => (
              Ta(o).catch(() => {}), t(r, () => r(s)) || h(s), T.add(s), s
            ),
          )
      : new Promise((s, i) => {
          const a = async () => {
              try {
                await Ta(o);
              } catch {}
            },
            d = (g) => {
              i(g), a();
            };
          try {
            n.decodeAudioData(
              o,
              (g) => {
                typeof g.copyFromChannel != 'function' && (l(g), ei(g)),
                  T.add(g),
                  a().then(() => s(g));
              },
              (g) => {
                d(g === null ? e() : g);
              },
            );
          } catch (g) {
            d(g);
          }
        });
  },
  Fc = (T, t, p, e, v, y, m, r) => (c, l) => {
    const h = t.get(c);
    if (h === void 0) throw new Error('Missing the expected cycle count.');
    const u = y(c.context),
      o = r(u);
    if (h === l) {
      if ((t.delete(c), !o && m(c))) {
        const n = e(c),
          { outputs: s } = p(c);
        for (const i of s)
          if (Ts(i)) {
            const a = e(i[0]);
            T(n, a, i[1], i[2]);
          } else {
            const a = v(i[0]);
            n.connect(a, i[1]);
          }
      }
    } else t.set(c, h - l);
  },
  Uc = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    delayTime: 0,
    maxDelayTime: 1,
  },
  Bc = (T, t, p, e, v, y, m) =>
    class extends T {
      constructor(c, l) {
        const h = v(c),
          u = { ...Uc, ...l },
          o = e(h, u),
          n = y(h),
          s = n ? p(u.maxDelayTime) : null;
        super(c, !1, o, s),
          (this._delayTime = t(this, n, o.delayTime)),
          m(this, u.maxDelayTime);
      }
      get delayTime() {
        return this._delayTime;
      }
    },
  Gc = (T, t, p, e, v) => (y) => {
    const m = new WeakMap(),
      r = async (c, l) => {
        let h = p(c);
        const u = er(h, l);
        if (!u) {
          const o = {
            channelCount: h.channelCount,
            channelCountMode: h.channelCountMode,
            channelInterpretation: h.channelInterpretation,
            delayTime: h.delayTime.value,
            maxDelayTime: y,
          };
          h = t(l, o);
        }
        return (
          m.set(l, h),
          u
            ? await T(l, c.delayTime, h.delayTime)
            : await e(l, c.delayTime, h.delayTime),
          await v(c, l, h),
          h
        );
      };
    return {
      render(c, l) {
        const h = m.get(l);
        return h !== void 0 ? Promise.resolve(h) : r(c, l);
      },
    };
  },
  Vc = (T) => (t, p, e, v) => T(t[v], (y) => y[0] === p && y[1] === e),
  Wc = (T) => (t, p) => {
    T(t).delete(p);
  },
  qc = (T) => 'delayTime' in T,
  zc = (T, t, p) =>
    function e(v, y) {
      const m = Ys(y) ? y : p(T, y);
      if (qc(m)) return [];
      if (v[0] === m) return [v];
      if (v.includes(m)) return [];
      const { outputs: r } = t(m);
      return Array.from(r)
        .map((c) => e([...v, m], c[0]))
        .reduce((c, l) => c.concat(l), []);
    },
  Us = (T, t, p) => {
    const e = t[p];
    if (e === void 0) throw T();
    return e;
  },
  Hc =
    (T) =>
    (t, p = void 0, e = void 0, v = 0) =>
      p === void 0
        ? t.forEach((y) => y.disconnect())
        : typeof p == 'number'
        ? Us(T, t, p).disconnect()
        : Qs(p)
        ? e === void 0
          ? t.forEach((y) => y.disconnect(p))
          : v === void 0
          ? Us(T, t, e).disconnect(p, 0)
          : Us(T, t, e).disconnect(p, 0, v)
        : e === void 0
        ? t.forEach((y) => y.disconnect(p))
        : Us(T, t, e).disconnect(p, 0),
  Xc = {
    attack: 0.003,
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    knee: 30,
    ratio: 12,
    release: 0.25,
    threshold: -24,
  },
  Yc = (T, t, p, e, v, y, m, r) =>
    class extends T {
      constructor(l, h) {
        const u = y(l),
          o = { ...Xc, ...h },
          n = e(u, o),
          s = m(u),
          i = s ? p() : null;
        super(l, !1, n, i),
          (this._attack = t(this, s, n.attack)),
          (this._knee = t(this, s, n.knee)),
          (this._nativeDynamicsCompressorNode = n),
          (this._ratio = t(this, s, n.ratio)),
          (this._release = t(this, s, n.release)),
          (this._threshold = t(this, s, n.threshold)),
          r(this, 0.006);
      }
      get attack() {
        return this._attack;
      }
      get channelCount() {
        return this._nativeDynamicsCompressorNode.channelCount;
      }
      set channelCount(l) {
        const h = this._nativeDynamicsCompressorNode.channelCount;
        if (((this._nativeDynamicsCompressorNode.channelCount = l), l > 2))
          throw ((this._nativeDynamicsCompressorNode.channelCount = h), v());
      }
      get channelCountMode() {
        return this._nativeDynamicsCompressorNode.channelCountMode;
      }
      set channelCountMode(l) {
        const h = this._nativeDynamicsCompressorNode.channelCountMode;
        if (
          ((this._nativeDynamicsCompressorNode.channelCountMode = l),
          l === 'max')
        )
          throw (
            ((this._nativeDynamicsCompressorNode.channelCountMode = h), v())
          );
      }
      get knee() {
        return this._knee;
      }
      get ratio() {
        return this._ratio;
      }
      get reduction() {
        return typeof this._nativeDynamicsCompressorNode.reduction.value ==
          'number'
          ? this._nativeDynamicsCompressorNode.reduction.value
          : this._nativeDynamicsCompressorNode.reduction;
      }
      get release() {
        return this._release;
      }
      get threshold() {
        return this._threshold;
      }
    },
  Zc = (T, t, p, e, v) => () => {
    const y = new WeakMap(),
      m = async (r, c) => {
        let l = p(r);
        const h = er(l, c);
        if (!h) {
          const u = {
            attack: l.attack.value,
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            knee: l.knee.value,
            ratio: l.ratio.value,
            release: l.release.value,
            threshold: l.threshold.value,
          };
          l = t(c, u);
        }
        return (
          y.set(c, l),
          h
            ? (await T(c, r.attack, l.attack),
              await T(c, r.knee, l.knee),
              await T(c, r.ratio, l.ratio),
              await T(c, r.release, l.release),
              await T(c, r.threshold, l.threshold))
            : (await e(c, r.attack, l.attack),
              await e(c, r.knee, l.knee),
              await e(c, r.ratio, l.ratio),
              await e(c, r.release, l.release),
              await e(c, r.threshold, l.threshold)),
          await v(r, c, l),
          l
        );
      };
    return {
      render(r, c) {
        const l = y.get(c);
        return l !== void 0 ? Promise.resolve(l) : m(r, c);
      },
    };
  },
  $c = () => new DOMException('', 'EncodingError'),
  Qc = (T) => (t) =>
    new Promise((p, e) => {
      if (T === null) {
        e(new SyntaxError());
        return;
      }
      const v = T.document.head;
      if (v === null) e(new SyntaxError());
      else {
        const y = T.document.createElement('script'),
          m = new Blob([t], { type: 'application/javascript' }),
          r = URL.createObjectURL(m),
          c = T.onerror,
          l = () => {
            (T.onerror = c), URL.revokeObjectURL(r);
          };
        (T.onerror = (h, u, o, n, s) => {
          if (u === r || (u === T.location.href && o === 1 && n === 1))
            return l(), e(s), !1;
          if (c !== null) return c(h, u, o, n, s);
        }),
          (y.onerror = () => {
            l(), e(new SyntaxError());
          }),
          (y.onload = () => {
            l(), p();
          }),
          (y.src = r),
          (y.type = 'module'),
          v.appendChild(y);
      }
    }),
  Jc = (T) =>
    class {
      constructor(p) {
        (this._nativeEventTarget = p), (this._listeners = new WeakMap());
      }
      addEventListener(p, e, v) {
        if (e !== null) {
          let y = this._listeners.get(e);
          y === void 0 &&
            ((y = T(this, e)),
            typeof e == 'function' && this._listeners.set(e, y)),
            this._nativeEventTarget.addEventListener(p, y, v);
        }
      }
      dispatchEvent(p) {
        return this._nativeEventTarget.dispatchEvent(p);
      }
      removeEventListener(p, e, v) {
        const y = e === null ? void 0 : this._listeners.get(e);
        this._nativeEventTarget.removeEventListener(
          p,
          y === void 0 ? null : y,
          v,
        );
      }
    },
  Kc = (T) => (t, p, e) => {
    Object.defineProperties(T, {
      currentFrame: {
        configurable: !0,
        get() {
          return Math.round(t * p);
        },
      },
      currentTime: {
        configurable: !0,
        get() {
          return t;
        },
      },
    });
    try {
      return e();
    } finally {
      T !== null && (delete T.currentFrame, delete T.currentTime);
    }
  },
  eh = (T) => async (t) => {
    try {
      const p = await fetch(t);
      if (p.ok) return [await p.text(), p.url];
    } catch {}
    throw T();
  },
  th = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    gain: 1,
  },
  rh = (T, t, p, e, v, y) =>
    class extends T {
      constructor(r, c) {
        const l = v(r),
          h = { ...th, ...c },
          u = e(l, h),
          o = y(l),
          n = o ? p() : null;
        super(r, !1, u, n), (this._gain = t(this, o, u.gain, rr, ir));
      }
      get gain() {
        return this._gain;
      }
    },
  nh = (T, t, p, e, v) => () => {
    const y = new WeakMap(),
      m = async (r, c) => {
        let l = p(r);
        const h = er(l, c);
        if (!h) {
          const u = {
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            gain: l.gain.value,
          };
          l = t(c, u);
        }
        return (
          y.set(c, l),
          h ? await T(c, r.gain, l.gain) : await e(c, r.gain, l.gain),
          await v(r, c, l),
          l
        );
      };
    return {
      render(r, c) {
        const l = y.get(c);
        return l !== void 0 ? Promise.resolve(l) : m(r, c);
      },
    };
  },
  sh = (T, t) => (p) => t(T, p),
  oh = (T) => (t) => {
    const p = T(t);
    if (p.renderer === null)
      throw new Error(
        'Missing the renderer of the given AudioNode in the audio graph.',
      );
    return p.renderer;
  },
  ih = (T) => (t) => {
    var p;
    return (p = T.get(t)) !== null && p !== void 0 ? p : 0;
  },
  ah = (T) => (t) => {
    const p = T(t);
    if (p.renderer === null)
      throw new Error(
        'Missing the renderer of the given AudioParam in the audio graph.',
      );
    return p.renderer;
  },
  lh = (T) => (t) => T.get(t),
  Jt = () => new DOMException('', 'InvalidStateError'),
  uh = (T) => (t) => {
    const p = T.get(t);
    if (p === void 0) throw Jt();
    return p;
  },
  ch = (T, t) => (p) => {
    let e = T.get(p);
    if (e !== void 0) return e;
    if (t === null)
      throw new Error('Missing the native OfflineAudioContext constructor.');
    return (e = new t(1, 1, 44100)), T.set(p, e), e;
  },
  hh = (T) => (t) => {
    const p = T.get(t);
    if (p === void 0)
      throw new Error('The context has no set of AudioWorkletNodes.');
    return p;
  },
  go = () => new DOMException('', 'InvalidAccessError'),
  dh = (T) => {
    T.getFrequencyResponse = ((t) => (p, e, v) => {
      if (p.length !== e.length || e.length !== v.length) throw go();
      return t.call(T, p, e, v);
    })(T.getFrequencyResponse);
  },
  fh = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
  },
  ph = (T, t, p, e, v, y) =>
    class extends T {
      constructor(r, c) {
        const l = e(r),
          h = v(l),
          u = { ...fh, ...c },
          o = t(l, h ? null : r.baseLatency, u),
          n = h ? p(u.feedback, u.feedforward) : null;
        super(r, !1, o, n), dh(o), (this._nativeIIRFilterNode = o), y(this, 1);
      }
      getFrequencyResponse(r, c, l) {
        return this._nativeIIRFilterNode.getFrequencyResponse(r, c, l);
      }
    },
  Za = (T, t, p, e, v, y, m, r, c, l, h) => {
    const u = l.length;
    let o = r;
    for (let n = 0; n < u; n += 1) {
      let s = p[0] * l[n];
      for (let i = 1; i < v; i += 1) {
        const a = (o - i) & (c - 1);
        (s += p[i] * y[a]), (s -= T[i] * m[a]);
      }
      for (let i = v; i < e; i += 1) s += p[i] * y[(o - i) & (c - 1)];
      for (let i = v; i < t; i += 1) s -= T[i] * m[(o - i) & (c - 1)];
      (y[o] = l[n]), (m[o] = s), (o = (o + 1) & (c - 1)), (h[n] = s);
    }
    return o;
  },
  mh = (T, t, p, e) => {
    const v = p instanceof Float64Array ? p : new Float64Array(p),
      y = e instanceof Float64Array ? e : new Float64Array(e),
      m = v.length,
      r = y.length,
      c = Math.min(m, r);
    if (v[0] !== 1) {
      for (let s = 0; s < m; s += 1) y[s] /= v[0];
      for (let s = 1; s < r; s += 1) v[s] /= v[0];
    }
    const l = 32,
      h = new Float32Array(l),
      u = new Float32Array(l),
      o = t.createBuffer(T.numberOfChannels, T.length, T.sampleRate),
      n = T.numberOfChannels;
    for (let s = 0; s < n; s += 1) {
      const i = T.getChannelData(s),
        a = o.getChannelData(s);
      h.fill(0), u.fill(0), Za(v, m, y, r, c, h, u, 0, l, i, a);
    }
    return o;
  },
  yh = (T, t, p, e, v) => (y, m) => {
    const r = new WeakMap();
    let c = null;
    const l = async (h, u) => {
      let o = null,
        n = t(h);
      const s = er(n, u);
      if (
        (u.createIIRFilter === void 0
          ? (o = T(u, {
              buffer: null,
              channelCount: 2,
              channelCountMode: 'max',
              channelInterpretation: 'speakers',
              loop: !1,
              loopEnd: 0,
              loopStart: 0,
              playbackRate: 1,
            }))
          : s || (n = u.createIIRFilter(m, y)),
        r.set(u, o === null ? n : o),
        o !== null)
      ) {
        if (c === null) {
          if (p === null)
            throw new Error(
              'Missing the native OfflineAudioContext constructor.',
            );
          const a = new p(
            h.context.destination.channelCount,
            h.context.length,
            u.sampleRate,
          );
          c = (async () => {
            await e(h, a, a.destination);
            const d = await v(a);
            return mh(d, u, y, m);
          })();
        }
        const i = await c;
        return (o.buffer = i), o.start(0), o;
      }
      return await e(h, u, n), n;
    };
    return {
      render(h, u) {
        const o = r.get(u);
        return o !== void 0 ? Promise.resolve(o) : l(h, u);
      },
    };
  },
  gh = (T, t, p, e, v, y) => (m) => (r, c) => {
    const l = T.get(r);
    if (l === void 0) {
      if (!m && y(r)) {
        const h = e(r),
          { outputs: u } = p(r);
        for (const o of u)
          if (Ts(o)) {
            const n = e(o[0]);
            t(h, n, o[1], o[2]);
          } else {
            const n = v(o[0]);
            h.disconnect(n, o[1]);
          }
      }
      T.set(r, c);
    } else T.set(r, l + c);
  },
  vh = (T, t) => (p) => {
    const e = T.get(p);
    return t(e) || t(p);
  },
  bh = (T, t) => (p) => T.has(p) || t(p),
  _h = (T, t) => (p) => T.has(p) || t(p),
  wh = (T, t) => (p) => {
    const e = T.get(p);
    return t(e) || t(p);
  },
  xh = (T) => (t) => T !== null && t instanceof T,
  Sh = (T) => (t) =>
    T !== null && typeof T.AudioNode == 'function' && t instanceof T.AudioNode,
  Th = (T) => (t) =>
    T !== null &&
    typeof T.AudioParam == 'function' &&
    t instanceof T.AudioParam,
  jh = (T, t) => (p) => T(p) || t(p),
  Mh = (T) => (t) => T !== null && t instanceof T,
  Eh = (T) => T !== null && T.isSecureContext,
  Ch = (T, t, p, e) =>
    class extends T {
      constructor(y, m) {
        const r = p(y),
          c = t(r, m);
        if (e(r)) throw TypeError();
        super(y, !0, c, null), (this._nativeMediaElementAudioSourceNode = c);
      }
      get mediaElement() {
        return this._nativeMediaElementAudioSourceNode.mediaElement;
      }
    },
  Oh = {
    channelCount: 2,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
  },
  Ah = (T, t, p, e) =>
    class extends T {
      constructor(y, m) {
        const r = p(y);
        if (e(r)) throw new TypeError();
        const c = { ...Oh, ...m },
          l = t(r, c);
        super(y, !1, l, null),
          (this._nativeMediaStreamAudioDestinationNode = l);
      }
      get stream() {
        return this._nativeMediaStreamAudioDestinationNode.stream;
      }
    },
  kh = (T, t, p, e) =>
    class extends T {
      constructor(y, m) {
        const r = p(y),
          c = t(r, m);
        if (e(r)) throw new TypeError();
        super(y, !0, c, null), (this._nativeMediaStreamAudioSourceNode = c);
      }
      get mediaStream() {
        return this._nativeMediaStreamAudioSourceNode.mediaStream;
      }
    },
  Ph = (T, t, p) =>
    class extends T {
      constructor(v, y) {
        const m = p(v),
          r = t(m, y);
        super(v, !0, r, null);
      }
    },
  Rh = (T, t, p, e, v, y) =>
    class extends p {
      constructor(r, c) {
        super(r),
          (this._nativeContext = r),
          mo.set(this, r),
          e(r) && v.set(r, new Set()),
          (this._destination = new T(this, c)),
          (this._listener = t(this, r)),
          (this._onstatechange = null);
      }
      get currentTime() {
        return this._nativeContext.currentTime;
      }
      get destination() {
        return this._destination;
      }
      get listener() {
        return this._listener;
      }
      get onstatechange() {
        return this._onstatechange;
      }
      set onstatechange(r) {
        const c = typeof r == 'function' ? y(this, r) : null;
        this._nativeContext.onstatechange = c;
        const l = this._nativeContext.onstatechange;
        this._onstatechange = l !== null && l === c ? r : l;
      }
      get sampleRate() {
        return this._nativeContext.sampleRate;
      }
      get state() {
        return this._nativeContext.state;
      }
    },
  as = (T) => {
    const t = new Uint32Array([
      1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580,
      1635017060, 4, 0,
    ]);
    try {
      const p = T.decodeAudioData(t.buffer, () => {});
      return p === void 0 ? !1 : (p.catch(() => {}), !0);
    } catch {}
    return !1;
  },
  Dh = (T, t) => (p, e, v) => {
    const y = new Set();
    return (
      (p.connect = (
        (m) =>
        (r, c = 0, l = 0) => {
          const h = y.size === 0;
          if (t(r))
            return (
              m.call(p, r, c, l),
              T(
                y,
                [r, c, l],
                (u) => u[0] === r && u[1] === c && u[2] === l,
                !0,
              ),
              h && e(),
              r
            );
          m.call(p, r, c),
            T(y, [r, c], (u) => u[0] === r && u[1] === c, !0),
            h && e();
        }
      )(p.connect)),
      (p.disconnect = ((m) => (r, c, l) => {
        const h = y.size > 0;
        if (r === void 0) m.apply(p), y.clear();
        else if (typeof r == 'number') {
          m.call(p, r);
          for (const o of y) o[1] === r && y.delete(o);
        } else {
          t(r) ? m.call(p, r, c, l) : m.call(p, r, c);
          for (const o of y)
            o[0] === r &&
              (c === void 0 || o[1] === c) &&
              (l === void 0 || o[2] === l) &&
              y.delete(o);
        }
        const u = y.size === 0;
        h && u && v();
      })(p.disconnect)),
      p
    );
  },
  Ut = (T, t, p) => {
    const e = t[p];
    e !== void 0 && e !== T[p] && (T[p] = e);
  },
  $t = (T, t) => {
    Ut(T, t, 'channelCount'),
      Ut(T, t, 'channelCountMode'),
      Ut(T, t, 'channelInterpretation');
  },
  ja = (T) => typeof T.getFloatTimeDomainData == 'function',
  Ih = (T) => {
    T.getFloatTimeDomainData = (t) => {
      const p = new Uint8Array(t.length);
      T.getByteTimeDomainData(p);
      const e = Math.max(p.length, T.fftSize);
      for (let v = 0; v < e; v += 1) t[v] = (p[v] - 128) * 0.0078125;
      return t;
    };
  },
  Lh = (T, t) => (p, e) => {
    const v = p.createAnalyser();
    if (($t(v, e), !(e.maxDecibels > e.minDecibels))) throw t();
    return (
      Ut(v, e, 'fftSize'),
      Ut(v, e, 'maxDecibels'),
      Ut(v, e, 'minDecibels'),
      Ut(v, e, 'smoothingTimeConstant'),
      T(ja, () => ja(v)) || Ih(v),
      v
    );
  },
  Nh = (T) =>
    T === null ? null : T.hasOwnProperty('AudioBuffer') ? T.AudioBuffer : null,
  Gt = (T, t, p) => {
    const e = t[p];
    e !== void 0 && e !== T[p].value && (T[p].value = e);
  },
  Fh = (T) => {
    T.start = ((t) => {
      let p = !1;
      return (e = 0, v = 0, y) => {
        if (p) throw Jt();
        t.call(T, e, v, y), (p = !0);
      };
    })(T.start);
  },
  ni = (T) => {
    T.start = (
      (t) =>
      (p = 0, e = 0, v) => {
        if ((typeof v == 'number' && v < 0) || e < 0 || p < 0)
          throw new RangeError("The parameters can't be negative.");
        t.call(T, p, e, v);
      }
    )(T.start);
  },
  si = (T) => {
    T.stop = (
      (t) =>
      (p = 0) => {
        if (p < 0) throw new RangeError("The parameter can't be negative.");
        t.call(T, p);
      }
    )(T.stop);
  },
  Uh = (T, t, p, e, v, y, m, r, c, l, h) => (u, o) => {
    const n = u.createBufferSource();
    return (
      $t(n, o),
      Gt(n, o, 'playbackRate'),
      Ut(n, o, 'buffer'),
      Ut(n, o, 'loop'),
      Ut(n, o, 'loopEnd'),
      Ut(n, o, 'loopStart'),
      t(p, () => p(u)) || Fh(n),
      t(e, () => e(u)) || c(n),
      t(v, () => v(u)) || l(n, u),
      t(y, () => y(u)) || ni(n),
      t(m, () => m(u)) || h(n, u),
      t(r, () => r(u)) || si(n),
      T(u, n),
      n
    );
  },
  Bh = (T) =>
    T === null
      ? null
      : T.hasOwnProperty('AudioContext')
      ? T.AudioContext
      : T.hasOwnProperty('webkitAudioContext')
      ? T.webkitAudioContext
      : null,
  Gh = (T, t) => (p, e, v) => {
    const y = p.destination;
    if (y.channelCount !== e)
      try {
        y.channelCount = e;
      } catch {}
    v && y.channelCountMode !== 'explicit' && (y.channelCountMode = 'explicit'),
      y.maxChannelCount === 0 &&
        Object.defineProperty(y, 'maxChannelCount', { value: e });
    const m = T(p, {
      channelCount: e,
      channelCountMode: y.channelCountMode,
      channelInterpretation: y.channelInterpretation,
      gain: 1,
    });
    return (
      t(
        m,
        'channelCount',
        (r) => () => r.call(m),
        (r) => (c) => {
          r.call(m, c);
          try {
            y.channelCount = c;
          } catch (l) {
            if (c > y.maxChannelCount) throw l;
          }
        },
      ),
      t(
        m,
        'channelCountMode',
        (r) => () => r.call(m),
        (r) => (c) => {
          r.call(m, c), (y.channelCountMode = c);
        },
      ),
      t(
        m,
        'channelInterpretation',
        (r) => () => r.call(m),
        (r) => (c) => {
          r.call(m, c), (y.channelInterpretation = c);
        },
      ),
      Object.defineProperty(m, 'maxChannelCount', {
        get: () => y.maxChannelCount,
      }),
      m.connect(y),
      m
    );
  },
  Vh = (T) =>
    T === null
      ? null
      : T.hasOwnProperty('AudioWorkletNode')
      ? T.AudioWorkletNode
      : null,
  Wh = (T) => {
    const { port1: t } = new MessageChannel();
    try {
      t.postMessage(T);
    } finally {
      t.close();
    }
  },
  qh = (T, t, p, e, v) => (y, m, r, c, l, h) => {
    if (r !== null)
      try {
        const u = new r(y, c, h),
          o = new Map();
        let n = null;
        if (
          (Object.defineProperties(u, {
            channelCount: {
              get: () => h.channelCount,
              set: () => {
                throw T();
              },
            },
            channelCountMode: {
              get: () => 'explicit',
              set: () => {
                throw T();
              },
            },
            onprocessorerror: {
              get: () => n,
              set: (s) => {
                typeof n == 'function' &&
                  u.removeEventListener('processorerror', n),
                  (n = typeof s == 'function' ? s : null),
                  typeof n == 'function' &&
                    u.addEventListener('processorerror', n);
              },
            },
          }),
          (u.addEventListener = (
            (s) =>
            (...i) => {
              if (i[0] === 'processorerror') {
                const a =
                  typeof i[1] == 'function'
                    ? i[1]
                    : typeof i[1] == 'object' &&
                      i[1] !== null &&
                      typeof i[1].handleEvent == 'function'
                    ? i[1].handleEvent
                    : null;
                if (a !== null) {
                  const d = o.get(i[1]);
                  d !== void 0
                    ? (i[1] = d)
                    : ((i[1] = (g) => {
                        g.type === 'error'
                          ? (Object.defineProperties(g, {
                              type: { value: 'processorerror' },
                            }),
                            a(g))
                          : a(new ErrorEvent(i[0], { ...g }));
                      }),
                      o.set(a, i[1]));
                }
              }
              return s.call(u, 'error', i[1], i[2]), s.call(u, ...i);
            }
          )(u.addEventListener)),
          (u.removeEventListener = (
            (s) =>
            (...i) => {
              if (i[0] === 'processorerror') {
                const a = o.get(i[1]);
                a !== void 0 && (o.delete(i[1]), (i[1] = a));
              }
              return (
                s.call(u, 'error', i[1], i[2]), s.call(u, i[0], i[1], i[2])
              );
            }
          )(u.removeEventListener)),
          h.numberOfOutputs !== 0)
        ) {
          const s = p(y, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0,
          });
          return (
            u.connect(s).connect(y.destination),
            v(
              u,
              () => s.disconnect(),
              () => s.connect(y.destination),
            )
          );
        }
        return u;
      } catch (u) {
        throw u.code === 11 ? e() : u;
      }
    if (l === void 0) throw e();
    return Wh(h), t(y, m, l, h);
  },
  $a = (T, t) =>
    T === null
      ? 512
      : Math.max(
          512,
          Math.min(16384, Math.pow(2, Math.round(Math.log2(T * t)))),
        ),
  zh = (T) =>
    new Promise((t, p) => {
      const { port1: e, port2: v } = new MessageChannel();
      (e.onmessage = ({ data: y }) => {
        e.close(), v.close(), t(y);
      }),
        (e.onmessageerror = ({ data: y }) => {
          e.close(), v.close(), p(y);
        }),
        v.postMessage(T);
    }),
  Hh = async (T, t) => {
    const p = await zh(t);
    return new T(p);
  },
  Xh = (T, t, p, e) => {
    let v = qo.get(T);
    v === void 0 && ((v = new WeakMap()), qo.set(T, v));
    const y = Hh(p, e);
    return v.set(t, y), y;
  },
  Yh = (T, t, p, e, v, y, m, r, c, l, h, u, o) => (n, s, i, a) => {
    if (a.numberOfInputs === 0 && a.numberOfOutputs === 0) throw c();
    const d = Array.isArray(a.outputChannelCount)
      ? a.outputChannelCount
      : Array.from(a.outputChannelCount);
    if (d.some((X) => X < 1)) throw c();
    if (d.length !== a.numberOfOutputs) throw t();
    if (a.channelCountMode !== 'explicit') throw c();
    const g = a.channelCount * a.numberOfInputs,
      _ = d.reduce((X, ue) => X + ue, 0),
      w = i.parameterDescriptors === void 0 ? 0 : i.parameterDescriptors.length;
    if (g + w > 6 || _ > 6) throw c();
    const S = new MessageChannel(),
      M = [],
      E = [];
    for (let X = 0; X < a.numberOfInputs; X += 1)
      M.push(
        m(n, {
          channelCount: a.channelCount,
          channelCountMode: a.channelCountMode,
          channelInterpretation: a.channelInterpretation,
          gain: 1,
        }),
      ),
        E.push(
          v(n, {
            channelCount: a.channelCount,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: a.channelCount,
          }),
        );
    const O = [];
    if (i.parameterDescriptors !== void 0)
      for (const {
        defaultValue: X,
        maxValue: ue,
        minValue: he,
        name: ie,
      } of i.parameterDescriptors) {
        const xe = y(n, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          offset:
            a.parameterData[ie] !== void 0
              ? a.parameterData[ie]
              : X === void 0
              ? 0
              : X,
        });
        Object.defineProperties(xe.offset, {
          defaultValue: { get: () => (X === void 0 ? 0 : X) },
          maxValue: { get: () => (ue === void 0 ? rr : ue) },
          minValue: { get: () => (he === void 0 ? ir : he) },
        }),
          O.push(xe);
      }
    const D = e(n, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'speakers',
        numberOfInputs: Math.max(1, g + w),
      }),
      A = $a(s, n.sampleRate),
      k = r(n, A, g + w, Math.max(1, _)),
      L = v(n, {
        channelCount: Math.max(1, _),
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        numberOfOutputs: Math.max(1, _),
      }),
      R = [];
    for (let X = 0; X < a.numberOfOutputs; X += 1)
      R.push(
        e(n, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'speakers',
          numberOfInputs: d[X],
        }),
      );
    for (let X = 0; X < a.numberOfInputs; X += 1) {
      M[X].connect(E[X]);
      for (let ue = 0; ue < a.channelCount; ue += 1)
        E[X].connect(D, ue, X * a.channelCount + ue);
    }
    const N = new Xa(
      i.parameterDescriptors === void 0
        ? []
        : i.parameterDescriptors.map(({ name: X }, ue) => {
            const he = O[ue];
            return he.connect(D, 0, g + ue), he.start(0), [X, he.offset];
          }),
    );
    D.connect(k);
    let B = a.channelInterpretation,
      Z = null;
    const J = a.numberOfOutputs === 0 ? [k] : R,
      $ = {
        get bufferSize() {
          return A;
        },
        get channelCount() {
          return a.channelCount;
        },
        set channelCount(X) {
          throw p();
        },
        get channelCountMode() {
          return a.channelCountMode;
        },
        set channelCountMode(X) {
          throw p();
        },
        get channelInterpretation() {
          return B;
        },
        set channelInterpretation(X) {
          for (const ue of M) ue.channelInterpretation = X;
          B = X;
        },
        get context() {
          return k.context;
        },
        get inputs() {
          return M;
        },
        get numberOfInputs() {
          return a.numberOfInputs;
        },
        get numberOfOutputs() {
          return a.numberOfOutputs;
        },
        get onprocessorerror() {
          return Z;
        },
        set onprocessorerror(X) {
          typeof Z == 'function' && $.removeEventListener('processorerror', Z),
            (Z = typeof X == 'function' ? X : null),
            typeof Z == 'function' && $.addEventListener('processorerror', Z);
        },
        get parameters() {
          return N;
        },
        get port() {
          return S.port2;
        },
        addEventListener(...X) {
          return k.addEventListener(X[0], X[1], X[2]);
        },
        connect: T.bind(null, J),
        disconnect: l.bind(null, J),
        dispatchEvent(...X) {
          return k.dispatchEvent(X[0]);
        },
        removeEventListener(...X) {
          return k.removeEventListener(X[0], X[1], X[2]);
        },
      },
      ee = new Map();
    (S.port1.addEventListener = (
      (X) =>
      (...ue) => {
        if (ue[0] === 'message') {
          const he =
            typeof ue[1] == 'function'
              ? ue[1]
              : typeof ue[1] == 'object' &&
                ue[1] !== null &&
                typeof ue[1].handleEvent == 'function'
              ? ue[1].handleEvent
              : null;
          if (he !== null) {
            const ie = ee.get(ue[1]);
            ie !== void 0
              ? (ue[1] = ie)
              : ((ue[1] = (xe) => {
                  h(n.currentTime, n.sampleRate, () => he(xe));
                }),
                ee.set(he, ue[1]));
          }
        }
        return X.call(S.port1, ue[0], ue[1], ue[2]);
      }
    )(S.port1.addEventListener)),
      (S.port1.removeEventListener = (
        (X) =>
        (...ue) => {
          if (ue[0] === 'message') {
            const he = ee.get(ue[1]);
            he !== void 0 && (ee.delete(ue[1]), (ue[1] = he));
          }
          return X.call(S.port1, ue[0], ue[1], ue[2]);
        }
      )(S.port1.removeEventListener));
    let Q = null;
    Object.defineProperty(S.port1, 'onmessage', {
      get: () => Q,
      set: (X) => {
        typeof Q == 'function' && S.port1.removeEventListener('message', Q),
          (Q = typeof X == 'function' ? X : null),
          typeof Q == 'function' &&
            (S.port1.addEventListener('message', Q), S.port1.start());
      },
    }),
      (i.prototype.port = S.port1);
    let oe = null;
    Xh(n, $, i, a).then((X) => (oe = X));
    const ve = Ks(a.numberOfInputs, a.channelCount),
      de = Ks(a.numberOfOutputs, d),
      Se =
        i.parameterDescriptors === void 0
          ? []
          : i.parameterDescriptors.reduce(
              (X, { name: ue }) => ({ ...X, [ue]: new Float32Array(128) }),
              {},
            );
    let fe = !0;
    const ye = () => {
        a.numberOfOutputs > 0 && k.disconnect(L);
        for (let X = 0, ue = 0; X < a.numberOfOutputs; X += 1) {
          const he = R[X];
          for (let ie = 0; ie < d[X]; ie += 1) L.disconnect(he, ue + ie, ie);
          ue += d[X];
        }
      },
      P = new Map();
    k.onaudioprocess = ({ inputBuffer: X, outputBuffer: ue }) => {
      if (oe !== null) {
        const he = u($);
        for (let ie = 0; ie < A; ie += 128) {
          for (let xe = 0; xe < a.numberOfInputs; xe += 1)
            for (let je = 0; je < a.channelCount; je += 1)
              Js(X, ve[xe], je, je, ie);
          i.parameterDescriptors !== void 0 &&
            i.parameterDescriptors.forEach(({ name: xe }, je) => {
              Js(X, Se, xe, g + je, ie);
            });
          for (let xe = 0; xe < a.numberOfInputs; xe += 1)
            for (let je = 0; je < d[xe]; je += 1)
              de[xe][je].byteLength === 0 &&
                (de[xe][je] = new Float32Array(128));
          try {
            const xe = ve.map((Te, Ne) => {
              if (he[Ne].size > 0) return P.set(Ne, A / 128), Te;
              const qe = P.get(Ne);
              return qe === void 0
                ? []
                : (Te.every((Fe) => Fe.every((nt) => nt === 0)) &&
                    (qe === 1 ? P.delete(Ne) : P.set(Ne, qe - 1)),
                  Te);
            });
            fe = h(n.currentTime + ie / n.sampleRate, n.sampleRate, () =>
              oe.process(xe, de, Se),
            );
            for (let Te = 0, Ne = 0; Te < a.numberOfOutputs; Te += 1) {
              for (let ze = 0; ze < d[Te]; ze += 1)
                Ya(ue, de[Te], ze, Ne + ze, ie);
              Ne += d[Te];
            }
          } catch (xe) {
            (fe = !1),
              $.dispatchEvent(
                new ErrorEvent('processorerror', {
                  colno: xe.colno,
                  filename: xe.filename,
                  lineno: xe.lineno,
                  message: xe.message,
                }),
              );
          }
          if (!fe) {
            for (let xe = 0; xe < a.numberOfInputs; xe += 1) {
              M[xe].disconnect(E[xe]);
              for (let je = 0; je < a.channelCount; je += 1)
                E[ie].disconnect(D, je, xe * a.channelCount + je);
            }
            if (i.parameterDescriptors !== void 0) {
              const xe = i.parameterDescriptors.length;
              for (let je = 0; je < xe; je += 1) {
                const Te = O[je];
                Te.disconnect(D, 0, g + je), Te.stop();
              }
            }
            D.disconnect(k), (k.onaudioprocess = null), U ? ye() : ne();
            break;
          }
        }
      }
    };
    let U = !1;
    const W = m(n, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        gain: 0,
      }),
      K = () => k.connect(W).connect(n.destination),
      ne = () => {
        k.disconnect(W), W.disconnect();
      },
      re = () => {
        if (fe) {
          ne(), a.numberOfOutputs > 0 && k.connect(L);
          for (let X = 0, ue = 0; X < a.numberOfOutputs; X += 1) {
            const he = R[X];
            for (let ie = 0; ie < d[X]; ie += 1) L.connect(he, ue + ie, ie);
            ue += d[X];
          }
        }
        U = !0;
      },
      we = () => {
        fe && (K(), ye()), (U = !1);
      };
    return K(), o($, re, we);
  },
  Qa = (T, t) => {
    const p = T.createBiquadFilter();
    return (
      $t(p, t),
      Gt(p, t, 'Q'),
      Gt(p, t, 'detune'),
      Gt(p, t, 'frequency'),
      Gt(p, t, 'gain'),
      Ut(p, t, 'type'),
      p
    );
  },
  Zh = (T, t) => (p, e) => {
    const v = p.createChannelMerger(e.numberOfInputs);
    return (
      T !== null && T.name === 'webkitAudioContext' && t(p, v), $t(v, e), v
    );
  },
  $h = (T) => {
    const t = T.numberOfOutputs;
    Object.defineProperty(T, 'channelCount', {
      get: () => t,
      set: (p) => {
        if (p !== t) throw Jt();
      },
    }),
      Object.defineProperty(T, 'channelCountMode', {
        get: () => 'explicit',
        set: (p) => {
          if (p !== 'explicit') throw Jt();
        },
      }),
      Object.defineProperty(T, 'channelInterpretation', {
        get: () => 'discrete',
        set: (p) => {
          if (p !== 'discrete') throw Jt();
        },
      });
  },
  js = (T, t) => {
    const p = T.createChannelSplitter(t.numberOfOutputs);
    return $t(p, t), $h(p), p;
  },
  Qh = (T, t, p, e, v) => (y, m) => {
    if (y.createConstantSource === void 0) return p(y, m);
    const r = y.createConstantSource();
    return (
      $t(r, m),
      Gt(r, m, 'offset'),
      t(e, () => e(y)) || ni(r),
      t(v, () => v(y)) || si(r),
      T(y, r),
      r
    );
  },
  Hn = (T, t) => (
    (T.connect = t.connect.bind(t)), (T.disconnect = t.disconnect.bind(t)), T
  ),
  Jh =
    (T, t, p, e) =>
    (v, { offset: y, ...m }) => {
      const r = v.createBuffer(1, 2, 44100),
        c = t(v, {
          buffer: null,
          channelCount: 2,
          channelCountMode: 'max',
          channelInterpretation: 'speakers',
          loop: !1,
          loopEnd: 0,
          loopStart: 0,
          playbackRate: 1,
        }),
        l = p(v, { ...m, gain: y }),
        h = r.getChannelData(0);
      (h[0] = 1), (h[1] = 1), (c.buffer = r), (c.loop = !0);
      const u = {
          get bufferSize() {},
          get channelCount() {
            return l.channelCount;
          },
          set channelCount(s) {
            l.channelCount = s;
          },
          get channelCountMode() {
            return l.channelCountMode;
          },
          set channelCountMode(s) {
            l.channelCountMode = s;
          },
          get channelInterpretation() {
            return l.channelInterpretation;
          },
          set channelInterpretation(s) {
            l.channelInterpretation = s;
          },
          get context() {
            return l.context;
          },
          get inputs() {
            return [];
          },
          get numberOfInputs() {
            return c.numberOfInputs;
          },
          get numberOfOutputs() {
            return l.numberOfOutputs;
          },
          get offset() {
            return l.gain;
          },
          get onended() {
            return c.onended;
          },
          set onended(s) {
            c.onended = s;
          },
          addEventListener(...s) {
            return c.addEventListener(s[0], s[1], s[2]);
          },
          dispatchEvent(...s) {
            return c.dispatchEvent(s[0]);
          },
          removeEventListener(...s) {
            return c.removeEventListener(s[0], s[1], s[2]);
          },
          start(s = 0) {
            c.start.call(c, s);
          },
          stop(s = 0) {
            c.stop.call(c, s);
          },
        },
        o = () => c.connect(l),
        n = () => c.disconnect(l);
      return T(v, c), e(Hn(u, l), o, n);
    },
  Kh = (T, t) => (p, e) => {
    const v = p.createConvolver();
    if (
      ($t(v, e),
      e.disableNormalization === v.normalize &&
        (v.normalize = !e.disableNormalization),
      Ut(v, e, 'buffer'),
      e.channelCount > 2 ||
        (t(
          v,
          'channelCount',
          (y) => () => y.call(v),
          (y) => (m) => {
            if (m > 2) throw T();
            return y.call(v, m);
          },
        ),
        e.channelCountMode === 'max'))
    )
      throw T();
    return (
      t(
        v,
        'channelCountMode',
        (y) => () => y.call(v),
        (y) => (m) => {
          if (m === 'max') throw T();
          return y.call(v, m);
        },
      ),
      v
    );
  },
  Ja = (T, t) => {
    const p = T.createDelay(t.maxDelayTime);
    return $t(p, t), Gt(p, t, 'delayTime'), p;
  },
  ed = (T) => (t, p) => {
    const e = t.createDynamicsCompressor();
    if (($t(e, p), p.channelCount > 2 || p.channelCountMode === 'max'))
      throw T();
    return (
      Gt(e, p, 'attack'),
      Gt(e, p, 'knee'),
      Gt(e, p, 'ratio'),
      Gt(e, p, 'release'),
      Gt(e, p, 'threshold'),
      e
    );
  },
  lr = (T, t) => {
    const p = T.createGain();
    return $t(p, t), Gt(p, t, 'gain'), p;
  },
  td = (T) => (t, p, e) => {
    if (t.createIIRFilter === void 0) return T(t, p, e);
    const v = t.createIIRFilter(e.feedforward, e.feedback);
    return $t(v, e), v;
  };
function rd(T, t) {
  const p = t[0] * t[0] + t[1] * t[1];
  return [(T[0] * t[0] + T[1] * t[1]) / p, (T[1] * t[0] - T[0] * t[1]) / p];
}
function nd(T, t) {
  return [T[0] * t[0] - T[1] * t[1], T[0] * t[1] + T[1] * t[0]];
}
function Ma(T, t) {
  let p = [0, 0];
  for (let e = T.length - 1; e >= 0; e -= 1) (p = nd(p, t)), (p[0] += T[e]);
  return p;
}
const sd =
    (T, t, p, e) =>
    (
      v,
      y,
      {
        channelCount: m,
        channelCountMode: r,
        channelInterpretation: c,
        feedback: l,
        feedforward: h,
      },
    ) => {
      const u = $a(y, v.sampleRate),
        o = l instanceof Float64Array ? l : new Float64Array(l),
        n = h instanceof Float64Array ? h : new Float64Array(h),
        s = o.length,
        i = n.length,
        a = Math.min(s, i);
      if (s === 0 || s > 20) throw e();
      if (o[0] === 0) throw t();
      if (i === 0 || i > 20) throw e();
      if (n[0] === 0) throw t();
      if (o[0] !== 1) {
        for (let O = 0; O < i; O += 1) n[O] /= o[0];
        for (let O = 1; O < s; O += 1) o[O] /= o[0];
      }
      const d = p(v, u, m, m);
      (d.channelCount = m),
        (d.channelCountMode = r),
        (d.channelInterpretation = c);
      const g = 32,
        _ = [],
        w = [],
        S = [];
      for (let O = 0; O < m; O += 1) {
        _.push(0);
        const D = new Float32Array(g),
          A = new Float32Array(g);
        D.fill(0), A.fill(0), w.push(D), S.push(A);
      }
      d.onaudioprocess = (O) => {
        const D = O.inputBuffer,
          A = O.outputBuffer,
          k = D.numberOfChannels;
        for (let L = 0; L < k; L += 1) {
          const R = D.getChannelData(L),
            N = A.getChannelData(L);
          _[L] = Za(o, s, n, i, a, w[L], S[L], _[L], g, R, N);
        }
      };
      const M = v.sampleRate / 2;
      return Hn(
        {
          get bufferSize() {
            return u;
          },
          get channelCount() {
            return d.channelCount;
          },
          set channelCount(O) {
            d.channelCount = O;
          },
          get channelCountMode() {
            return d.channelCountMode;
          },
          set channelCountMode(O) {
            d.channelCountMode = O;
          },
          get channelInterpretation() {
            return d.channelInterpretation;
          },
          set channelInterpretation(O) {
            d.channelInterpretation = O;
          },
          get context() {
            return d.context;
          },
          get inputs() {
            return [d];
          },
          get numberOfInputs() {
            return d.numberOfInputs;
          },
          get numberOfOutputs() {
            return d.numberOfOutputs;
          },
          addEventListener(...O) {
            return d.addEventListener(O[0], O[1], O[2]);
          },
          dispatchEvent(...O) {
            return d.dispatchEvent(O[0]);
          },
          getFrequencyResponse(O, D, A) {
            if (O.length !== D.length || D.length !== A.length) throw T();
            const k = O.length;
            for (let L = 0; L < k; L += 1) {
              const R = -Math.PI * (O[L] / M),
                N = [Math.cos(R), Math.sin(R)],
                B = Ma(n, N),
                Z = Ma(o, N),
                J = rd(B, Z);
              (D[L] = Math.sqrt(J[0] * J[0] + J[1] * J[1])),
                (A[L] = Math.atan2(J[1], J[0]));
            }
          },
          removeEventListener(...O) {
            return d.removeEventListener(O[0], O[1], O[2]);
          },
        },
        d,
      );
    },
  od = (T, t) => T.createMediaElementSource(t.mediaElement),
  id = (T, t) => {
    const p = T.createMediaStreamDestination();
    return (
      $t(p, t),
      p.numberOfOutputs === 1 &&
        Object.defineProperty(p, 'numberOfOutputs', { get: () => 0 }),
      p
    );
  },
  ad = (T, { mediaStream: t }) => {
    const p = t.getAudioTracks();
    p.sort((y, m) => (y.id < m.id ? -1 : y.id > m.id ? 1 : 0));
    const e = p.slice(0, 1),
      v = T.createMediaStreamSource(new MediaStream(e));
    return Object.defineProperty(v, 'mediaStream', { value: t }), v;
  },
  ld =
    (T, t) =>
    (p, { mediaStreamTrack: e }) => {
      if (typeof p.createMediaStreamTrackSource == 'function')
        return p.createMediaStreamTrackSource(e);
      const v = new MediaStream([e]),
        y = p.createMediaStreamSource(v);
      if (e.kind !== 'audio') throw T();
      if (t(p)) throw new TypeError();
      return y;
    },
  ud = (T) =>
    T === null
      ? null
      : T.hasOwnProperty('OfflineAudioContext')
      ? T.OfflineAudioContext
      : T.hasOwnProperty('webkitOfflineAudioContext')
      ? T.webkitOfflineAudioContext
      : null,
  cd = (T, t, p, e, v, y) => (m, r) => {
    const c = m.createOscillator();
    return (
      $t(c, r),
      Gt(c, r, 'detune'),
      Gt(c, r, 'frequency'),
      r.periodicWave !== void 0
        ? c.setPeriodicWave(r.periodicWave)
        : Ut(c, r, 'type'),
      t(p, () => p(m)) || ni(c),
      t(e, () => e(m)) || y(c, m),
      t(v, () => v(m)) || si(c),
      T(m, c),
      c
    );
  },
  hd = (T) => (t, p) => {
    const e = t.createPanner();
    return e.orientationX === void 0
      ? T(t, p)
      : ($t(e, p),
        Gt(e, p, 'orientationX'),
        Gt(e, p, 'orientationY'),
        Gt(e, p, 'orientationZ'),
        Gt(e, p, 'positionX'),
        Gt(e, p, 'positionY'),
        Gt(e, p, 'positionZ'),
        Ut(e, p, 'coneInnerAngle'),
        Ut(e, p, 'coneOuterAngle'),
        Ut(e, p, 'coneOuterGain'),
        Ut(e, p, 'distanceModel'),
        Ut(e, p, 'maxDistance'),
        Ut(e, p, 'panningModel'),
        Ut(e, p, 'refDistance'),
        Ut(e, p, 'rolloffFactor'),
        e);
  },
  dd =
    (T, t, p, e, v, y, m, r, c, l) =>
    (
      h,
      {
        coneInnerAngle: u,
        coneOuterAngle: o,
        coneOuterGain: n,
        distanceModel: s,
        maxDistance: i,
        orientationX: a,
        orientationY: d,
        orientationZ: g,
        panningModel: _,
        positionX: w,
        positionY: S,
        positionZ: M,
        refDistance: E,
        rolloffFactor: O,
        ...D
      },
    ) => {
      const A = h.createPanner();
      if (D.channelCount > 2 || D.channelCountMode === 'max') throw m();
      $t(A, D);
      const k = {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
        },
        L = p(h, {
          ...k,
          channelInterpretation: 'speakers',
          numberOfInputs: 6,
        }),
        R = e(h, { ...D, gain: 1 }),
        N = e(h, { ...k, gain: 1 }),
        B = e(h, { ...k, gain: 0 }),
        Z = e(h, { ...k, gain: 0 }),
        J = e(h, { ...k, gain: 0 }),
        $ = e(h, { ...k, gain: 0 }),
        ee = e(h, { ...k, gain: 0 }),
        Q = v(h, 256, 6, 1),
        oe = y(h, {
          ...k,
          curve: new Float32Array([1, 1]),
          oversample: 'none',
        });
      let ce = [a, d, g],
        ve = [w, S, M];
      const de = new Float32Array(1);
      (Q.onaudioprocess = ({ inputBuffer: P }) => {
        const U = [c(P, de, 0), c(P, de, 1), c(P, de, 2)];
        U.some((K, ne) => K !== ce[ne]) && (A.setOrientation(...U), (ce = U));
        const W = [c(P, de, 3), c(P, de, 4), c(P, de, 5)];
        W.some((K, ne) => K !== ve[ne]) && (A.setPosition(...W), (ve = W));
      }),
        Object.defineProperty(B.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(Z.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(J.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty($.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(ee.gain, 'defaultValue', { get: () => 0 });
      const Se = {
        get bufferSize() {},
        get channelCount() {
          return A.channelCount;
        },
        set channelCount(P) {
          if (P > 2) throw m();
          (R.channelCount = P), (A.channelCount = P);
        },
        get channelCountMode() {
          return A.channelCountMode;
        },
        set channelCountMode(P) {
          if (P === 'max') throw m();
          (R.channelCountMode = P), (A.channelCountMode = P);
        },
        get channelInterpretation() {
          return A.channelInterpretation;
        },
        set channelInterpretation(P) {
          (R.channelInterpretation = P), (A.channelInterpretation = P);
        },
        get coneInnerAngle() {
          return A.coneInnerAngle;
        },
        set coneInnerAngle(P) {
          A.coneInnerAngle = P;
        },
        get coneOuterAngle() {
          return A.coneOuterAngle;
        },
        set coneOuterAngle(P) {
          A.coneOuterAngle = P;
        },
        get coneOuterGain() {
          return A.coneOuterGain;
        },
        set coneOuterGain(P) {
          if (P < 0 || P > 1) throw t();
          A.coneOuterGain = P;
        },
        get context() {
          return A.context;
        },
        get distanceModel() {
          return A.distanceModel;
        },
        set distanceModel(P) {
          A.distanceModel = P;
        },
        get inputs() {
          return [R];
        },
        get maxDistance() {
          return A.maxDistance;
        },
        set maxDistance(P) {
          if (P < 0) throw new RangeError();
          A.maxDistance = P;
        },
        get numberOfInputs() {
          return A.numberOfInputs;
        },
        get numberOfOutputs() {
          return A.numberOfOutputs;
        },
        get orientationX() {
          return N.gain;
        },
        get orientationY() {
          return B.gain;
        },
        get orientationZ() {
          return Z.gain;
        },
        get panningModel() {
          return A.panningModel;
        },
        set panningModel(P) {
          A.panningModel = P;
        },
        get positionX() {
          return J.gain;
        },
        get positionY() {
          return $.gain;
        },
        get positionZ() {
          return ee.gain;
        },
        get refDistance() {
          return A.refDistance;
        },
        set refDistance(P) {
          if (P < 0) throw new RangeError();
          A.refDistance = P;
        },
        get rolloffFactor() {
          return A.rolloffFactor;
        },
        set rolloffFactor(P) {
          if (P < 0) throw new RangeError();
          A.rolloffFactor = P;
        },
        addEventListener(...P) {
          return R.addEventListener(P[0], P[1], P[2]);
        },
        dispatchEvent(...P) {
          return R.dispatchEvent(P[0]);
        },
        removeEventListener(...P) {
          return R.removeEventListener(P[0], P[1], P[2]);
        },
      };
      u !== Se.coneInnerAngle && (Se.coneInnerAngle = u),
        o !== Se.coneOuterAngle && (Se.coneOuterAngle = o),
        n !== Se.coneOuterGain && (Se.coneOuterGain = n),
        s !== Se.distanceModel && (Se.distanceModel = s),
        i !== Se.maxDistance && (Se.maxDistance = i),
        a !== Se.orientationX.value && (Se.orientationX.value = a),
        d !== Se.orientationY.value && (Se.orientationY.value = d),
        g !== Se.orientationZ.value && (Se.orientationZ.value = g),
        _ !== Se.panningModel && (Se.panningModel = _),
        w !== Se.positionX.value && (Se.positionX.value = w),
        S !== Se.positionY.value && (Se.positionY.value = S),
        M !== Se.positionZ.value && (Se.positionZ.value = M),
        E !== Se.refDistance && (Se.refDistance = E),
        O !== Se.rolloffFactor && (Se.rolloffFactor = O),
        (ce[0] !== 1 || ce[1] !== 0 || ce[2] !== 0) && A.setOrientation(...ce),
        (ve[0] !== 0 || ve[1] !== 0 || ve[2] !== 0) && A.setPosition(...ve);
      const fe = () => {
          R.connect(A),
            T(R, oe, 0, 0),
            oe.connect(N).connect(L, 0, 0),
            oe.connect(B).connect(L, 0, 1),
            oe.connect(Z).connect(L, 0, 2),
            oe.connect(J).connect(L, 0, 3),
            oe.connect($).connect(L, 0, 4),
            oe.connect(ee).connect(L, 0, 5),
            L.connect(Q).connect(h.destination);
        },
        ye = () => {
          R.disconnect(A),
            r(R, oe, 0, 0),
            oe.disconnect(N),
            N.disconnect(L),
            oe.disconnect(B),
            B.disconnect(L),
            oe.disconnect(Z),
            Z.disconnect(L),
            oe.disconnect(J),
            J.disconnect(L),
            oe.disconnect($),
            $.disconnect(L),
            oe.disconnect(ee),
            ee.disconnect(L),
            L.disconnect(Q),
            Q.disconnect(h.destination);
        };
      return l(Hn(Se, A), fe, ye);
    },
  fd =
    (T) =>
    (t, { disableNormalization: p, imag: e, real: v }) => {
      const y = e instanceof Float32Array ? e : new Float32Array(e),
        m = v instanceof Float32Array ? v : new Float32Array(v),
        r = t.createPeriodicWave(m, y, { disableNormalization: p });
      if (Array.from(e).length < 2) throw T();
      return r;
    },
  Ms = (T, t, p, e) => T.createScriptProcessor(t, p, e),
  pd = (T, t) => (p, e) => {
    const v = e.channelCountMode;
    if (v === 'clamped-max') throw t();
    if (p.createStereoPanner === void 0) return T(p, e);
    const y = p.createStereoPanner();
    return (
      $t(y, e),
      Gt(y, e, 'pan'),
      Object.defineProperty(y, 'channelCountMode', {
        get: () => v,
        set: (m) => {
          if (m !== v) throw t();
        },
      }),
      y
    );
  },
  md = (T, t, p, e, v, y) => {
    const r = new Float32Array([1, 1]),
      c = Math.PI / 2,
      l = {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
      },
      h = { ...l, oversample: 'none' },
      u = (s, i, a, d) => {
        const g = new Float32Array(16385),
          _ = new Float32Array(16385);
        for (let D = 0; D < 16385; D += 1) {
          const A = (D / 16384) * c;
          (g[D] = Math.cos(A)), (_[D] = Math.sin(A));
        }
        const w = p(s, { ...l, gain: 0 }),
          S = e(s, { ...h, curve: g }),
          M = e(s, { ...h, curve: r }),
          E = p(s, { ...l, gain: 0 }),
          O = e(s, { ...h, curve: _ });
        return {
          connectGraph() {
            i.connect(w),
              i.connect(M.inputs === void 0 ? M : M.inputs[0]),
              i.connect(E),
              M.connect(a),
              a.connect(S.inputs === void 0 ? S : S.inputs[0]),
              a.connect(O.inputs === void 0 ? O : O.inputs[0]),
              S.connect(w.gain),
              O.connect(E.gain),
              w.connect(d, 0, 0),
              E.connect(d, 0, 1);
          },
          disconnectGraph() {
            i.disconnect(w),
              i.disconnect(M.inputs === void 0 ? M : M.inputs[0]),
              i.disconnect(E),
              M.disconnect(a),
              a.disconnect(S.inputs === void 0 ? S : S.inputs[0]),
              a.disconnect(O.inputs === void 0 ? O : O.inputs[0]),
              S.disconnect(w.gain),
              O.disconnect(E.gain),
              w.disconnect(d, 0, 0),
              E.disconnect(d, 0, 1);
          },
        };
      },
      o = (s, i, a, d) => {
        const g = new Float32Array(16385),
          _ = new Float32Array(16385),
          w = new Float32Array(16385),
          S = new Float32Array(16385),
          M = Math.floor(16385 / 2);
        for (let J = 0; J < 16385; J += 1)
          if (J > M) {
            const $ = ((J - M) / (16384 - M)) * c;
            (g[J] = Math.cos($)), (_[J] = Math.sin($)), (w[J] = 0), (S[J] = 1);
          } else {
            const $ = (J / (16384 - M)) * c;
            (g[J] = 1), (_[J] = 0), (w[J] = Math.cos($)), (S[J] = Math.sin($));
          }
        const E = t(s, {
            channelCount: 2,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: 2,
          }),
          O = p(s, { ...l, gain: 0 }),
          D = e(s, { ...h, curve: g }),
          A = p(s, { ...l, gain: 0 }),
          k = e(s, { ...h, curve: _ }),
          L = e(s, { ...h, curve: r }),
          R = p(s, { ...l, gain: 0 }),
          N = e(s, { ...h, curve: w }),
          B = p(s, { ...l, gain: 0 }),
          Z = e(s, { ...h, curve: S });
        return {
          connectGraph() {
            i.connect(E),
              i.connect(L.inputs === void 0 ? L : L.inputs[0]),
              E.connect(O, 0),
              E.connect(A, 0),
              E.connect(R, 1),
              E.connect(B, 1),
              L.connect(a),
              a.connect(D.inputs === void 0 ? D : D.inputs[0]),
              a.connect(k.inputs === void 0 ? k : k.inputs[0]),
              a.connect(N.inputs === void 0 ? N : N.inputs[0]),
              a.connect(Z.inputs === void 0 ? Z : Z.inputs[0]),
              D.connect(O.gain),
              k.connect(A.gain),
              N.connect(R.gain),
              Z.connect(B.gain),
              O.connect(d, 0, 0),
              R.connect(d, 0, 0),
              A.connect(d, 0, 1),
              B.connect(d, 0, 1);
          },
          disconnectGraph() {
            i.disconnect(E),
              i.disconnect(L.inputs === void 0 ? L : L.inputs[0]),
              E.disconnect(O, 0),
              E.disconnect(A, 0),
              E.disconnect(R, 1),
              E.disconnect(B, 1),
              L.disconnect(a),
              a.disconnect(D.inputs === void 0 ? D : D.inputs[0]),
              a.disconnect(k.inputs === void 0 ? k : k.inputs[0]),
              a.disconnect(N.inputs === void 0 ? N : N.inputs[0]),
              a.disconnect(Z.inputs === void 0 ? Z : Z.inputs[0]),
              D.disconnect(O.gain),
              k.disconnect(A.gain),
              N.disconnect(R.gain),
              Z.disconnect(B.gain),
              O.disconnect(d, 0, 0),
              R.disconnect(d, 0, 0),
              A.disconnect(d, 0, 1),
              B.disconnect(d, 0, 1);
          },
        };
      },
      n = (s, i, a, d, g) => {
        if (i === 1) return u(s, a, d, g);
        if (i === 2) return o(s, a, d, g);
        throw v();
      };
    return (s, { channelCount: i, channelCountMode: a, pan: d, ...g }) => {
      if (a === 'max') throw v();
      const _ = T(s, {
          ...g,
          channelCount: 1,
          channelCountMode: a,
          numberOfInputs: 2,
        }),
        w = p(s, { ...g, channelCount: i, channelCountMode: a, gain: 1 }),
        S = p(s, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          gain: d,
        });
      let { connectGraph: M, disconnectGraph: E } = n(s, i, w, S, _);
      Object.defineProperty(S.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(S.gain, 'maxValue', { get: () => 1 }),
        Object.defineProperty(S.gain, 'minValue', { get: () => -1 });
      const O = {
        get bufferSize() {},
        get channelCount() {
          return w.channelCount;
        },
        set channelCount(L) {
          w.channelCount !== L &&
            (D && E(),
            ({ connectGraph: M, disconnectGraph: E } = n(s, L, w, S, _)),
            D && M()),
            (w.channelCount = L);
        },
        get channelCountMode() {
          return w.channelCountMode;
        },
        set channelCountMode(L) {
          if (L === 'clamped-max' || L === 'max') throw v();
          w.channelCountMode = L;
        },
        get channelInterpretation() {
          return w.channelInterpretation;
        },
        set channelInterpretation(L) {
          w.channelInterpretation = L;
        },
        get context() {
          return w.context;
        },
        get inputs() {
          return [w];
        },
        get numberOfInputs() {
          return w.numberOfInputs;
        },
        get numberOfOutputs() {
          return w.numberOfOutputs;
        },
        get pan() {
          return S.gain;
        },
        addEventListener(...L) {
          return w.addEventListener(L[0], L[1], L[2]);
        },
        dispatchEvent(...L) {
          return w.dispatchEvent(L[0]);
        },
        removeEventListener(...L) {
          return w.removeEventListener(L[0], L[1], L[2]);
        },
      };
      let D = !1;
      const A = () => {
          M(), (D = !0);
        },
        k = () => {
          E(), (D = !1);
        };
      return y(Hn(O, _), A, k);
    };
  },
  yd = (T, t, p, e, v, y, m) => (r, c) => {
    const l = r.createWaveShaper();
    if (
      y !== null &&
      y.name === 'webkitAudioContext' &&
      r.createGain().gain.automationRate === void 0
    )
      return p(r, c);
    $t(l, c);
    const h =
      c.curve === null || c.curve instanceof Float32Array
        ? c.curve
        : new Float32Array(c.curve);
    if (h !== null && h.length < 2) throw t();
    Ut(l, { curve: h }, 'curve'), Ut(l, c, 'oversample');
    let u = null,
      o = !1;
    return (
      m(
        l,
        'curve',
        (i) => () => i.call(l),
        (i) => (a) => (
          i.call(l, a),
          o &&
            (e(a) && u === null
              ? (u = T(r, l))
              : !e(a) && u !== null && (u(), (u = null))),
          a
        ),
      ),
      v(
        l,
        () => {
          (o = !0), e(l.curve) && (u = T(r, l));
        },
        () => {
          (o = !1), u !== null && (u(), (u = null));
        },
      )
    );
  },
  gd =
    (T, t, p, e, v) =>
    (y, { curve: m, oversample: r, ...c }) => {
      const l = y.createWaveShaper(),
        h = y.createWaveShaper();
      $t(l, c), $t(h, c);
      const u = p(y, { ...c, gain: 1 }),
        o = p(y, { ...c, gain: -1 }),
        n = p(y, { ...c, gain: 1 }),
        s = p(y, { ...c, gain: -1 });
      let i = null,
        a = !1,
        d = null;
      const g = {
        get bufferSize() {},
        get channelCount() {
          return l.channelCount;
        },
        set channelCount(S) {
          (u.channelCount = S),
            (o.channelCount = S),
            (l.channelCount = S),
            (n.channelCount = S),
            (h.channelCount = S),
            (s.channelCount = S);
        },
        get channelCountMode() {
          return l.channelCountMode;
        },
        set channelCountMode(S) {
          (u.channelCountMode = S),
            (o.channelCountMode = S),
            (l.channelCountMode = S),
            (n.channelCountMode = S),
            (h.channelCountMode = S),
            (s.channelCountMode = S);
        },
        get channelInterpretation() {
          return l.channelInterpretation;
        },
        set channelInterpretation(S) {
          (u.channelInterpretation = S),
            (o.channelInterpretation = S),
            (l.channelInterpretation = S),
            (n.channelInterpretation = S),
            (h.channelInterpretation = S),
            (s.channelInterpretation = S);
        },
        get context() {
          return l.context;
        },
        get curve() {
          return d;
        },
        set curve(S) {
          if (S !== null && S.length < 2) throw t();
          if (S === null) (l.curve = S), (h.curve = S);
          else {
            const M = S.length,
              E = new Float32Array(M + 2 - (M % 2)),
              O = new Float32Array(M + 2 - (M % 2));
            (E[0] = S[0]), (O[0] = -S[M - 1]);
            const D = Math.ceil((M + 1) / 2),
              A = (M + 1) / 2 - 1;
            for (let k = 1; k < D; k += 1) {
              const L = (k / D) * A,
                R = Math.floor(L),
                N = Math.ceil(L);
              (E[k] =
                R === N ? S[R] : (1 - (L - R)) * S[R] + (1 - (N - L)) * S[N]),
                (O[k] =
                  R === N
                    ? -S[M - 1 - R]
                    : -((1 - (L - R)) * S[M - 1 - R]) -
                      (1 - (N - L)) * S[M - 1 - N]);
            }
            (E[D] = M % 2 === 1 ? S[D - 1] : (S[D - 2] + S[D - 1]) / 2),
              (l.curve = E),
              (h.curve = O);
          }
          (d = S),
            a &&
              (e(d) && i === null
                ? (i = T(y, u))
                : i !== null && (i(), (i = null)));
        },
        get inputs() {
          return [u];
        },
        get numberOfInputs() {
          return l.numberOfInputs;
        },
        get numberOfOutputs() {
          return l.numberOfOutputs;
        },
        get oversample() {
          return l.oversample;
        },
        set oversample(S) {
          (l.oversample = S), (h.oversample = S);
        },
        addEventListener(...S) {
          return u.addEventListener(S[0], S[1], S[2]);
        },
        dispatchEvent(...S) {
          return u.dispatchEvent(S[0]);
        },
        removeEventListener(...S) {
          return u.removeEventListener(S[0], S[1], S[2]);
        },
      };
      m !== null &&
        (g.curve = m instanceof Float32Array ? m : new Float32Array(m)),
        r !== g.oversample && (g.oversample = r);
      const _ = () => {
          u.connect(l).connect(n),
            u.connect(o).connect(h).connect(s).connect(n),
            (a = !0),
            e(d) && (i = T(y, u));
        },
        w = () => {
          u.disconnect(l),
            l.disconnect(n),
            u.disconnect(o),
            o.disconnect(h),
            h.disconnect(s),
            s.disconnect(n),
            (a = !1),
            i !== null && (i(), (i = null));
        };
      return v(Hn(g, n), _, w);
    },
  or = () => new DOMException('', 'NotSupportedError'),
  vd = { numberOfChannels: 1 },
  bd = (T, t, p, e, v) =>
    class extends T {
      constructor(m, r, c) {
        let l;
        if (typeof m == 'number' && r !== void 0 && c !== void 0)
          l = { length: r, numberOfChannels: m, sampleRate: c };
        else if (typeof m == 'object') l = m;
        else throw new Error('The given parameters are not valid.');
        const {
            length: h,
            numberOfChannels: u,
            sampleRate: o,
          } = { ...vd, ...l },
          n = e(u, h, o);
        t(as, () => as(n)) ||
          n.addEventListener(
            'statechange',
            (() => {
              let s = 0;
              const i = (a) => {
                this._state === 'running' &&
                  (s > 0
                    ? (n.removeEventListener('statechange', i),
                      a.stopImmediatePropagation(),
                      this._waitForThePromiseToSettle(a))
                    : (s += 1));
              };
              return i;
            })(),
          ),
          super(n, u),
          (this._length = h),
          (this._nativeOfflineAudioContext = n),
          (this._state = null);
      }
      get length() {
        return this._nativeOfflineAudioContext.length === void 0
          ? this._length
          : this._nativeOfflineAudioContext.length;
      }
      get state() {
        return this._state === null
          ? this._nativeOfflineAudioContext.state
          : this._state;
      }
      startRendering() {
        return this._state === 'running'
          ? Promise.reject(p())
          : ((this._state = 'running'),
            v(this.destination, this._nativeOfflineAudioContext).finally(() => {
              (this._state = null), Wa(this);
            }));
      }
      _waitForThePromiseToSettle(m) {
        this._state === null
          ? this._nativeOfflineAudioContext.dispatchEvent(m)
          : setTimeout(() => this._waitForThePromiseToSettle(m));
      }
    },
  _d = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    detune: 0,
    frequency: 440,
    periodicWave: void 0,
    type: 'sine',
  },
  wd = (T, t, p, e, v, y, m) =>
    class extends T {
      constructor(c, l) {
        const h = v(c),
          u = { ..._d, ...l },
          o = p(h, u),
          n = y(h),
          s = n ? e() : null,
          i = c.sampleRate / 2;
        super(c, !1, o, s),
          (this._detune = t(this, n, o.detune, 153600, -153600)),
          (this._frequency = t(this, n, o.frequency, i, -i)),
          (this._nativeOscillatorNode = o),
          (this._onended = null),
          (this._oscillatorNodeRenderer = s),
          this._oscillatorNodeRenderer !== null &&
            u.periodicWave !== void 0 &&
            (this._oscillatorNodeRenderer.periodicWave = u.periodicWave);
      }
      get detune() {
        return this._detune;
      }
      get frequency() {
        return this._frequency;
      }
      get onended() {
        return this._onended;
      }
      set onended(c) {
        const l = typeof c == 'function' ? m(this, c) : null;
        this._nativeOscillatorNode.onended = l;
        const h = this._nativeOscillatorNode.onended;
        this._onended = h !== null && h === l ? c : h;
      }
      get type() {
        return this._nativeOscillatorNode.type;
      }
      set type(c) {
        (this._nativeOscillatorNode.type = c),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.periodicWave = null);
      }
      setPeriodicWave(c) {
        this._nativeOscillatorNode.setPeriodicWave(c),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.periodicWave = c);
      }
      start(c = 0) {
        if (
          (this._nativeOscillatorNode.start(c),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.start = c),
          this.context.state !== 'closed')
        ) {
          Gn(this);
          const l = () => {
            this._nativeOscillatorNode.removeEventListener('ended', l),
              Ur(this) && xs(this);
          };
          this._nativeOscillatorNode.addEventListener('ended', l);
        }
      }
      stop(c = 0) {
        this._nativeOscillatorNode.stop(c),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.stop = c);
      }
    },
  xd = (T, t, p, e, v) => () => {
    const y = new WeakMap();
    let m = null,
      r = null,
      c = null;
    const l = async (h, u) => {
      let o = p(h);
      const n = er(o, u);
      if (!n) {
        const s = {
          channelCount: o.channelCount,
          channelCountMode: o.channelCountMode,
          channelInterpretation: o.channelInterpretation,
          detune: o.detune.value,
          frequency: o.frequency.value,
          periodicWave: m === null ? void 0 : m,
          type: o.type,
        };
        (o = t(u, s)), r !== null && o.start(r), c !== null && o.stop(c);
      }
      return (
        y.set(u, o),
        n
          ? (await T(u, h.detune, o.detune),
            await T(u, h.frequency, o.frequency))
          : (await e(u, h.detune, o.detune),
            await e(u, h.frequency, o.frequency)),
        await v(h, u, o),
        o
      );
    };
    return {
      set periodicWave(h) {
        m = h;
      },
      set start(h) {
        r = h;
      },
      set stop(h) {
        c = h;
      },
      render(h, u) {
        const o = y.get(u);
        return o !== void 0 ? Promise.resolve(o) : l(h, u);
      },
    };
  },
  Sd = {
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    coneInnerAngle: 360,
    coneOuterAngle: 360,
    coneOuterGain: 0,
    distanceModel: 'inverse',
    maxDistance: 1e4,
    orientationX: 1,
    orientationY: 0,
    orientationZ: 0,
    panningModel: 'equalpower',
    positionX: 0,
    positionY: 0,
    positionZ: 0,
    refDistance: 1,
    rolloffFactor: 1,
  },
  Td = (T, t, p, e, v, y, m) =>
    class extends T {
      constructor(c, l) {
        const h = v(c),
          u = { ...Sd, ...l },
          o = p(h, u),
          n = y(h),
          s = n ? e() : null;
        super(c, !1, o, s),
          (this._nativePannerNode = o),
          (this._orientationX = t(this, n, o.orientationX, rr, ir)),
          (this._orientationY = t(this, n, o.orientationY, rr, ir)),
          (this._orientationZ = t(this, n, o.orientationZ, rr, ir)),
          (this._positionX = t(this, n, o.positionX, rr, ir)),
          (this._positionY = t(this, n, o.positionY, rr, ir)),
          (this._positionZ = t(this, n, o.positionZ, rr, ir)),
          m(this, 1);
      }
      get coneInnerAngle() {
        return this._nativePannerNode.coneInnerAngle;
      }
      set coneInnerAngle(c) {
        this._nativePannerNode.coneInnerAngle = c;
      }
      get coneOuterAngle() {
        return this._nativePannerNode.coneOuterAngle;
      }
      set coneOuterAngle(c) {
        this._nativePannerNode.coneOuterAngle = c;
      }
      get coneOuterGain() {
        return this._nativePannerNode.coneOuterGain;
      }
      set coneOuterGain(c) {
        this._nativePannerNode.coneOuterGain = c;
      }
      get distanceModel() {
        return this._nativePannerNode.distanceModel;
      }
      set distanceModel(c) {
        this._nativePannerNode.distanceModel = c;
      }
      get maxDistance() {
        return this._nativePannerNode.maxDistance;
      }
      set maxDistance(c) {
        this._nativePannerNode.maxDistance = c;
      }
      get orientationX() {
        return this._orientationX;
      }
      get orientationY() {
        return this._orientationY;
      }
      get orientationZ() {
        return this._orientationZ;
      }
      get panningModel() {
        return this._nativePannerNode.panningModel;
      }
      set panningModel(c) {
        this._nativePannerNode.panningModel = c;
      }
      get positionX() {
        return this._positionX;
      }
      get positionY() {
        return this._positionY;
      }
      get positionZ() {
        return this._positionZ;
      }
      get refDistance() {
        return this._nativePannerNode.refDistance;
      }
      set refDistance(c) {
        this._nativePannerNode.refDistance = c;
      }
      get rolloffFactor() {
        return this._nativePannerNode.rolloffFactor;
      }
      set rolloffFactor(c) {
        this._nativePannerNode.rolloffFactor = c;
      }
    },
  jd = (T, t, p, e, v, y, m, r, c, l) => () => {
    const h = new WeakMap();
    let u = null;
    const o = async (n, s) => {
      let i = null,
        a = y(n);
      const d = {
          channelCount: a.channelCount,
          channelCountMode: a.channelCountMode,
          channelInterpretation: a.channelInterpretation,
        },
        g = {
          ...d,
          coneInnerAngle: a.coneInnerAngle,
          coneOuterAngle: a.coneOuterAngle,
          coneOuterGain: a.coneOuterGain,
          distanceModel: a.distanceModel,
          maxDistance: a.maxDistance,
          panningModel: a.panningModel,
          refDistance: a.refDistance,
          rolloffFactor: a.rolloffFactor,
        },
        _ = er(a, s);
      if ('bufferSize' in a) i = e(s, { ...d, gain: 1 });
      else if (!_) {
        const w = {
          ...g,
          orientationX: a.orientationX.value,
          orientationY: a.orientationY.value,
          orientationZ: a.orientationZ.value,
          positionX: a.positionX.value,
          positionY: a.positionY.value,
          positionZ: a.positionZ.value,
        };
        a = v(s, w);
      }
      if ((h.set(s, i === null ? a : i), i !== null)) {
        if (u === null) {
          if (m === null)
            throw new Error(
              'Missing the native OfflineAudioContext constructor.',
            );
          const k = new m(6, n.context.length, s.sampleRate),
            L = t(k, {
              channelCount: 1,
              channelCountMode: 'explicit',
              channelInterpretation: 'speakers',
              numberOfInputs: 6,
            });
          L.connect(k.destination),
            (u = (async () => {
              const R = await Promise.all(
                [
                  n.orientationX,
                  n.orientationY,
                  n.orientationZ,
                  n.positionX,
                  n.positionY,
                  n.positionZ,
                ].map(async (N, B) => {
                  const Z = p(k, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    offset: B === 0 ? 1 : 0,
                  });
                  return await r(k, N, Z.offset), Z;
                }),
              );
              for (let N = 0; N < 6; N += 1)
                R[N].connect(L, 0, N), R[N].start(0);
              return l(k);
            })());
        }
        const w = await u,
          S = e(s, { ...d, gain: 1 });
        await c(n, s, S);
        const M = [];
        for (let k = 0; k < w.numberOfChannels; k += 1)
          M.push(w.getChannelData(k));
        let E = [M[0][0], M[1][0], M[2][0]],
          O = [M[3][0], M[4][0], M[5][0]],
          D = e(s, { ...d, gain: 1 }),
          A = v(s, {
            ...g,
            orientationX: E[0],
            orientationY: E[1],
            orientationZ: E[2],
            positionX: O[0],
            positionY: O[1],
            positionZ: O[2],
          });
        S.connect(D).connect(A.inputs[0]), A.connect(i);
        for (let k = 128; k < w.length; k += 128) {
          const L = [M[0][k], M[1][k], M[2][k]],
            R = [M[3][k], M[4][k], M[5][k]];
          if (L.some((N, B) => N !== E[B]) || R.some((N, B) => N !== O[B])) {
            (E = L), (O = R);
            const N = k / s.sampleRate;
            D.gain.setValueAtTime(0, N),
              (D = e(s, { ...d, gain: 0 })),
              (A = v(s, {
                ...g,
                orientationX: E[0],
                orientationY: E[1],
                orientationZ: E[2],
                positionX: O[0],
                positionY: O[1],
                positionZ: O[2],
              })),
              D.gain.setValueAtTime(1, N),
              S.connect(D).connect(A.inputs[0]),
              A.connect(i);
          }
        }
        return i;
      }
      return (
        _
          ? (await T(s, n.orientationX, a.orientationX),
            await T(s, n.orientationY, a.orientationY),
            await T(s, n.orientationZ, a.orientationZ),
            await T(s, n.positionX, a.positionX),
            await T(s, n.positionY, a.positionY),
            await T(s, n.positionZ, a.positionZ))
          : (await r(s, n.orientationX, a.orientationX),
            await r(s, n.orientationY, a.orientationY),
            await r(s, n.orientationZ, a.orientationZ),
            await r(s, n.positionX, a.positionX),
            await r(s, n.positionY, a.positionY),
            await r(s, n.positionZ, a.positionZ)),
        zn(a) ? await c(n, s, a.inputs[0]) : await c(n, s, a),
        a
      );
    };
    return {
      render(n, s) {
        const i = h.get(s);
        return i !== void 0 ? Promise.resolve(i) : o(n, s);
      },
    };
  },
  Md = { disableNormalization: !1 },
  Ed = (T, t, p, e) =>
    class Ka {
      constructor(y, m) {
        const r = t(y),
          c = e({ ...Md, ...m }),
          l = T(r, c);
        return p.add(l), l;
      }
      static [Symbol.hasInstance](y) {
        return (
          (y !== null &&
            typeof y == 'object' &&
            Object.getPrototypeOf(y) === Ka.prototype) ||
          p.has(y)
        );
      }
    },
  Cd = (T, t) => (p, e, v) => (T(e).replay(v), t(e, p, v)),
  Od = (T, t, p) => async (e, v, y) => {
    const m = T(e);
    await Promise.all(
      m.activeInputs
        .map((r, c) =>
          Array.from(r).map(async ([l, h]) => {
            const o = await t(l).render(l, v),
              n = e.context.destination;
            !p(l) && (e !== n || !p(e)) && o.connect(y, h, c);
          }),
        )
        .reduce((r, c) => [...r, ...c], []),
    );
  },
  Ad = (T, t, p) => async (e, v, y) => {
    const m = t(e);
    await Promise.all(
      Array.from(m.activeInputs).map(async ([r, c]) => {
        const h = await T(r).render(r, v);
        p(r) || h.connect(y, c);
      }),
    );
  },
  kd = (T, t, p, e) => (v) =>
    T(as, () => as(v))
      ? Promise.resolve(T(e, e)).then((y) => {
          if (!y) {
            const m = p(v, 512, 0, 1);
            (v.oncomplete = () => {
              (m.onaudioprocess = null), m.disconnect();
            }),
              (m.onaudioprocess = () => v.currentTime),
              m.connect(v.destination);
          }
          return v.startRendering();
        })
      : new Promise((y) => {
          const m = t(v, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0,
          });
          (v.oncomplete = (r) => {
            m.disconnect(), y(r.renderedBuffer);
          }),
            m.connect(v.destination),
            v.startRendering();
        }),
  Pd = (T) => (t, p) => {
    T.set(t, p);
  },
  Rd = (T) => (t, p) => T.set(t, p),
  Dd = (T, t, p, e, v, y, m, r) => (c, l) =>
    p(c)
      .render(c, l)
      .then(() => Promise.all(Array.from(e(l)).map((h) => p(h).render(h, l))))
      .then(() => v(l))
      .then(
        (h) => (
          typeof h.copyFromChannel != 'function'
            ? (m(h), ei(h))
            : t(y, () => y(h)) || r(h),
          T.add(h),
          h
        ),
      ),
  Id = {
    channelCount: 2,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    pan: 0,
  },
  Ld = (T, t, p, e, v, y) =>
    class extends T {
      constructor(r, c) {
        const l = v(r),
          h = { ...Id, ...c },
          u = p(l, h),
          o = y(l),
          n = o ? e() : null;
        super(r, !1, u, n), (this._pan = t(this, o, u.pan));
      }
      get pan() {
        return this._pan;
      }
    },
  Nd = (T, t, p, e, v) => () => {
    const y = new WeakMap(),
      m = async (r, c) => {
        let l = p(r);
        const h = er(l, c);
        if (!h) {
          const u = {
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            pan: l.pan.value,
          };
          l = t(c, u);
        }
        return (
          y.set(c, l),
          h ? await T(c, r.pan, l.pan) : await e(c, r.pan, l.pan),
          zn(l) ? await v(r, c, l.inputs[0]) : await v(r, c, l),
          l
        );
      };
    return {
      render(r, c) {
        const l = y.get(c);
        return l !== void 0 ? Promise.resolve(l) : m(r, c);
      },
    };
  },
  Fd = (T) => () => {
    if (T === null) return !1;
    try {
      new T({ length: 1, sampleRate: 44100 });
    } catch {
      return !1;
    }
    return !0;
  },
  Ud = (T, t) => async () => {
    if (T === null) return !0;
    if (t === null) return !1;
    const p = new Blob(
        [
          'class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)',
        ],
        { type: 'application/javascript; charset=utf-8' },
      ),
      e = new t(1, 128, 44100),
      v = URL.createObjectURL(p);
    let y = !1,
      m = !1;
    try {
      await e.audioWorklet.addModule(v);
      const r = new T(e, 'a', { numberOfOutputs: 0 }),
        c = e.createOscillator();
      (r.port.onmessage = () => (y = !0)),
        (r.onprocessorerror = () => (m = !0)),
        c.connect(r),
        c.start(0),
        await e.startRendering();
    } catch {
    } finally {
      URL.revokeObjectURL(v);
    }
    return y && !m;
  },
  Bd = (T, t) => () => {
    if (t === null) return Promise.resolve(!1);
    const p = new t(1, 1, 44100),
      e = T(p, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        gain: 0,
      });
    return new Promise((v) => {
      (p.oncomplete = () => {
        e.disconnect(), v(p.currentTime !== 0);
      }),
        p.startRendering();
    });
  },
  Gd = () => new DOMException('', 'UnknownError'),
  Vd = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    curve: null,
    oversample: 'none',
  },
  Wd = (T, t, p, e, v, y, m) =>
    class extends T {
      constructor(c, l) {
        const h = v(c),
          u = { ...Vd, ...l },
          o = p(h, u),
          s = y(h) ? e() : null;
        super(c, !0, o, s),
          (this._isCurveNullified = !1),
          (this._nativeWaveShaperNode = o),
          m(this, 1);
      }
      get curve() {
        return this._isCurveNullified ? null : this._nativeWaveShaperNode.curve;
      }
      set curve(c) {
        if (c === null)
          (this._isCurveNullified = !0),
            (this._nativeWaveShaperNode.curve = new Float32Array([0, 0]));
        else {
          if (c.length < 2) throw t();
          (this._isCurveNullified = !1), (this._nativeWaveShaperNode.curve = c);
        }
      }
      get oversample() {
        return this._nativeWaveShaperNode.oversample;
      }
      set oversample(c) {
        this._nativeWaveShaperNode.oversample = c;
      }
    },
  qd = (T, t, p) => () => {
    const e = new WeakMap(),
      v = async (y, m) => {
        let r = t(y);
        if (!er(r, m)) {
          const l = {
            channelCount: r.channelCount,
            channelCountMode: r.channelCountMode,
            channelInterpretation: r.channelInterpretation,
            curve: r.curve,
            oversample: r.oversample,
          };
          r = T(m, l);
        }
        return (
          e.set(m, r), zn(r) ? await p(y, m, r.inputs[0]) : await p(y, m, r), r
        );
      };
    return {
      render(y, m) {
        const r = e.get(m);
        return r !== void 0 ? Promise.resolve(r) : v(y, m);
      },
    };
  },
  zd = () => (typeof window > 'u' ? null : window),
  Hd = (T, t) => (p) => {
    (p.copyFromChannel = (e, v, y = 0) => {
      const m = T(y),
        r = T(v);
      if (r >= p.numberOfChannels) throw t();
      const c = p.length,
        l = p.getChannelData(r),
        h = e.length;
      for (let u = m < 0 ? -m : 0; u + m < c && u < h; u += 1) e[u] = l[u + m];
    }),
      (p.copyToChannel = (e, v, y = 0) => {
        const m = T(y),
          r = T(v);
        if (r >= p.numberOfChannels) throw t();
        const c = p.length,
          l = p.getChannelData(r),
          h = e.length;
        for (let u = m < 0 ? -m : 0; u + m < c && u < h; u += 1)
          l[u + m] = e[u];
      });
  },
  Xd = (T) => (t) => {
    (t.copyFromChannel = (
      (p) =>
      (e, v, y = 0) => {
        const m = T(y),
          r = T(v);
        if (m < t.length) return p.call(t, e, r, m);
      }
    )(t.copyFromChannel)),
      (t.copyToChannel = (
        (p) =>
        (e, v, y = 0) => {
          const m = T(y),
            r = T(v);
          if (m < t.length) return p.call(t, e, r, m);
        }
      )(t.copyToChannel));
  },
  Yd = (T) => (t, p) => {
    const e = p.createBuffer(1, 1, 44100);
    t.buffer === null && (t.buffer = e),
      T(
        t,
        'buffer',
        (v) => () => {
          const y = v.call(t);
          return y === e ? null : y;
        },
        (v) => (y) => v.call(t, y === null ? e : y),
      );
  },
  Zd = (T, t) => (p, e) => {
    (e.channelCount = 1),
      (e.channelCountMode = 'explicit'),
      Object.defineProperty(e, 'channelCount', {
        get: () => 1,
        set: () => {
          throw T();
        },
      }),
      Object.defineProperty(e, 'channelCountMode', {
        get: () => 'explicit',
        set: () => {
          throw T();
        },
      });
    const v = p.createBufferSource();
    t(
      e,
      () => {
        const r = e.numberOfInputs;
        for (let c = 0; c < r; c += 1) v.connect(e, 0, c);
      },
      () => v.disconnect(e),
    );
  },
  el = (T, t, p) =>
    T.copyFromChannel === void 0
      ? T.getChannelData(p)[0]
      : (T.copyFromChannel(t, p), t[0]),
  tl = (T) => {
    if (T === null) return !1;
    const t = T.length;
    return t % 2 !== 0
      ? T[Math.floor(t / 2)] !== 0
      : T[t / 2 - 1] + T[t / 2] !== 0;
  },
  Es = (T, t, p, e) => {
    let v = T;
    for (; !v.hasOwnProperty(t); ) v = Object.getPrototypeOf(v);
    const { get: y, set: m } = Object.getOwnPropertyDescriptor(v, t);
    Object.defineProperty(T, t, { get: p(y), set: e(m) });
  },
  $d = (T) => ({
    ...T,
    outputChannelCount:
      T.outputChannelCount !== void 0
        ? T.outputChannelCount
        : T.numberOfInputs === 1 && T.numberOfOutputs === 1
        ? [T.channelCount]
        : Array.from({ length: T.numberOfOutputs }, () => 1),
  }),
  Qd = (T) => ({ ...T, channelCount: T.numberOfOutputs }),
  Jd = (T) => {
    const { imag: t, real: p } = T;
    return t === void 0
      ? p === void 0
        ? { ...T, imag: [0, 0], real: [0, 0] }
        : { ...T, imag: Array.from(p, () => 0), real: p }
      : p === void 0
      ? { ...T, imag: t, real: Array.from(t, () => 0) }
      : { ...T, imag: t, real: p };
  },
  rl = (T, t, p) => {
    try {
      T.setValueAtTime(t, p);
    } catch (e) {
      if (e.code !== 9) throw e;
      rl(T, t, p + 1e-7);
    }
  },
  Kd = (T) => {
    const t = T.createBufferSource();
    t.start();
    try {
      t.start();
    } catch {
      return !0;
    }
    return !1;
  },
  ef = (T) => {
    const t = T.createBufferSource(),
      p = T.createBuffer(1, 1, 44100);
    t.buffer = p;
    try {
      t.start(0, 1);
    } catch {
      return !1;
    }
    return !0;
  },
  tf = (T) => {
    const t = T.createBufferSource();
    t.start();
    try {
      t.stop();
    } catch {
      return !1;
    }
    return !0;
  },
  oi = (T) => {
    const t = T.createOscillator();
    try {
      t.start(-1);
    } catch (p) {
      return p instanceof RangeError;
    }
    return !1;
  },
  nl = (T) => {
    const t = T.createBuffer(1, 1, 44100),
      p = T.createBufferSource();
    (p.buffer = t), p.start(), p.stop();
    try {
      return p.stop(), !0;
    } catch {
      return !1;
    }
  },
  ii = (T) => {
    const t = T.createOscillator();
    try {
      t.stop(-1);
    } catch (p) {
      return p instanceof RangeError;
    }
    return !1;
  },
  rf = (T) => {
    const { port1: t, port2: p } = new MessageChannel();
    try {
      t.postMessage(T);
    } finally {
      t.close(), p.close();
    }
  },
  nf = (T) => {
    T.start = (
      (t) =>
      (p = 0, e = 0, v) => {
        const y = T.buffer,
          m = y === null ? e : Math.min(y.duration, e);
        y !== null && m > y.duration - 0.5 / T.context.sampleRate
          ? t.call(T, p, 0, 0)
          : t.call(T, p, m, v);
      }
    )(T.start);
  },
  sl = (T, t) => {
    const p = t.createGain();
    T.connect(p);
    const e = ((v) => () => {
      v.call(T, p), T.removeEventListener('ended', e);
    })(T.disconnect);
    T.addEventListener('ended', e),
      Hn(T, p),
      (T.stop = ((v) => {
        let y = !1;
        return (m = 0) => {
          if (y)
            try {
              v.call(T, m);
            } catch {
              p.gain.setValueAtTime(0, m);
            }
          else v.call(T, m), (y = !0);
        };
      })(T.stop));
  },
  Xn = (T, t) => (p) => {
    const e = { value: T };
    return (
      Object.defineProperties(p, { currentTarget: e, target: e }),
      typeof t == 'function' ? t.call(T, p) : t.handleEvent.call(T, p)
    );
  },
  sf = Tu(jn),
  of = Au(jn),
  af = Vc(yo),
  ol = new WeakMap(),
  lf = ih(ol),
  _r = vc(new Map(), new WeakMap()),
  Cr = zd(),
  il = Lh(_r, Ar),
  ai = oh(nr),
  Kt = Od(nr, ai, vn),
  uf = Iu(il, Lt, Kt),
  Pt = uh(mo),
  Gr = ud(Cr),
  Mt = Mh(Gr),
  al = new WeakMap(),
  ll = Jc(Xn),
  Cs = Bh(Cr),
  li = xh(Cs),
  ui = Sh(Cr),
  ul = Th(Cr),
  ls = Vh(Cr),
  Ht = ic(
    ju(La),
    Ou(sf, of, Zs, af, $s, nr, lf, ws, Lt, jn, Ur, vn, Vs),
    _r,
    gh(Vo, $s, nr, Lt, is, Ur),
    Ar,
    go,
    or,
    Fc(Zs, Vo, nr, Lt, is, Pt, Ur, Mt),
    zc(al, nr, br),
    ll,
    Pt,
    li,
    ui,
    ul,
    Mt,
    ls,
  ),
  cf = Du(Ht, uf, Ar, il, Pt, Mt),
  ci = new WeakSet(),
  Ea = Nh(Cr),
  cl = kc(new Uint32Array(1)),
  hi = Hd(cl, Ar),
  di = Xd(cl),
  hf = Nu(ci, _r, or, Ea, Gr, Fd(Ea), hi, di),
  vo = ku(lr),
  hl = Ad(ai, Ss, vn),
  kr = jc(hl),
  Yn = Uh(vo, _r, Kd, ef, tf, oi, nl, ii, nf, Yd(Es), sl),
  Pr = Cd(ah(Ss), hl),
  df = Bu(kr, Yn, Lt, Pr, Kt),
  wr = ac(Mu(Na), al, Ko, lc, vu, bu, _u, wu, xu, Uo, Da, Cs, rl),
  ff = Uu(Ht, df, wr, Jt, Yn, Pt, Mt, Xn),
  pf = Zu(Ht, $u, Ar, Jt, Gh(lr, Es), Pt, Mt, Kt),
  mf = gc(kr, Qa, Lt, Pr, Kt),
  Mn = Rd(ol),
  yf = yc(Ht, wr, mf, go, Qa, Pt, Mt, Mn),
  en = Dh(jn, ui),
  gf = Zd(Jt, en),
  tn = Zh(Cs, gf),
  vf = wc(tn, Lt, Kt),
  bf = _c(Ht, vf, tn, Pt, Mt),
  _f = Tc(js, Lt, Kt),
  wf = Sc(Ht, _f, js, Pt, Mt, Qd),
  xf = Jh(vo, Yn, lr, en),
  Zn = Qh(vo, _r, xf, oi, ii),
  Sf = Ac(kr, Zn, Lt, Pr, Kt),
  Tf = Oc(Ht, wr, Sf, Zn, Pt, Mt, Xn),
  dl = Kh(or, Es),
  jf = Dc(dl, Lt, Kt),
  Mf = Rc(Ht, jf, dl, Pt, Mt, Mn),
  Ef = Gc(kr, Ja, Lt, Pr, Kt),
  Cf = Bc(Ht, wr, Ef, Ja, Pt, Mt, Mn),
  fl = ed(or),
  Of = Zc(kr, fl, Lt, Pr, Kt),
  Af = Yc(Ht, wr, Of, fl, or, Pt, Mt, Mn),
  kf = nh(kr, lr, Lt, Pr, Kt),
  Pf = rh(Ht, wr, kf, lr, Pt, Mt),
  Rf = sd(go, Jt, Ms, or),
  bo = kd(_r, lr, Ms, Bd(lr, Gr)),
  Df = yh(Yn, Lt, Gr, Kt, bo),
  If = td(Rf),
  Lf = ph(Ht, If, Df, Pt, Mt, Mn),
  Nf = Qu(wr, tn, Zn, Ms, or, el, Mt, Es),
  pl = new WeakMap(),
  Ff = Rh(pf, Nf, ll, Mt, pl, Xn),
  ml = cd(vo, _r, oi, nl, ii, sl),
  Uf = xd(kr, ml, Lt, Pr, Kt),
  Bf = wd(Ht, wr, ml, Uf, Pt, Mt, Xn),
  yl = Ec(Yn),
  Gf = gd(yl, Jt, lr, tl, en),
  _o = yd(yl, Jt, Gf, tl, en, Cs, Es),
  Vf = dd(Zs, Jt, tn, lr, Ms, _o, or, $s, el, en),
  gl = hd(Vf),
  Wf = jd(kr, tn, Zn, lr, gl, Lt, Gr, Pr, Kt, bo),
  qf = Td(Ht, wr, gl, Wf, Pt, Mt, Mn),
  zf = fd(Ar),
  Hf = Ed(zf, Pt, new WeakSet(), Jd),
  Xf = md(tn, js, lr, _o, or, en),
  vl = pd(Xf, or),
  Yf = Nd(kr, vl, Lt, Pr, Kt),
  Zf = Ld(Ht, wr, vl, Yf, Pt, Mt),
  $f = qd(_o, Lt, Kt),
  Qf = Wd(Ht, Jt, _o, $f, Pt, Mt, Mn),
  bl = Eh(Cr),
  fi = Kc(Cr),
  _l = new WeakMap(),
  Jf = ch(_l, Gr),
  Kf = bl
    ? Cu(
        _r,
        or,
        Qc(Cr),
        fi,
        eh(Su),
        Pt,
        Jf,
        Mt,
        ls,
        new WeakMap(),
        new WeakMap(),
        Ud(ls, Gr),
        Cr,
      )
    : void 0,
  ep = jh(li, Mt),
  tp = Nc(ci, _r, Lc, $c, new WeakSet(), Pt, ep, Xs, as, hi, di),
  wl = pc(
    Kf,
    cf,
    hf,
    ff,
    yf,
    bf,
    wf,
    Tf,
    Mf,
    tp,
    Cf,
    Af,
    Pf,
    Lf,
    Ff,
    Bf,
    qf,
    Hf,
    Zf,
    Qf,
  ),
  rp = Ch(Ht, od, Pt, Mt),
  np = Ah(Ht, id, Pt, Mt),
  sp = kh(Ht, ad, Pt, Mt),
  op = ld(Jt, Mt),
  ip = Ph(Ht, op, Pt),
  ap = Yu(wl, Jt, or, Gd, rp, np, sp, ip, Cs),
  pi = hh(pl),
  lp = Pu(pi),
  xl = Mc(Ar),
  up = Wc(pi),
  Sl = Hc(Ar),
  Tl = new WeakMap(),
  cp = sh(Tl, br),
  hp = Yh(xl, Ar, Jt, tn, js, Zn, lr, Ms, or, Sl, fi, cp, en),
  dp = qh(Jt, hp, lr, or, en),
  fp = fc(kr, xl, Yn, tn, js, Zn, lr, up, Sl, fi, Lt, ls, Gr, Pr, Kt, bo),
  pp = lh(_l),
  mp = Pd(Tl),
  Ca = bl ? cc(lp, Ht, wr, fp, dp, nr, pp, Pt, Mt, ls, $d, mp, rf, Xn) : void 0,
  yp = Ic(or, Gr),
  gp = Dd(ci, _r, ai, pi, bo, Xs, hi, di),
  vp = bd(wl, _r, Jt, yp, gp),
  bp = vh(mo, li),
  _p = bh(Jo, ui),
  wp = _h(Ko, ul),
  xp = wh(mo, Mt);
function ut(T, t) {
  if (!T) throw new Error(t);
}
function Jr(T, t, p = 1 / 0) {
  if (!(t <= T && T <= p))
    throw new RangeError(`Value must be within [${t}, ${p}], got: ${T}`);
}
function jl(T) {
  !T.isOffline &&
    T.state !== 'running' &&
    El(
      'The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.',
    );
}
let Ml = console;
function Sp(...T) {
  Ml.log(...T);
}
function El(...T) {
  Ml.warn(...T);
}
function dr(T) {
  return typeof T > 'u';
}
function yt(T) {
  return !dr(T);
}
function Tp(T) {
  return typeof T == 'function';
}
function bn(T) {
  return typeof T == 'number';
}
function mn(T) {
  return (
    Object.prototype.toString.call(T) === '[object Object]' &&
    T.constructor === Object
  );
}
function jp(T) {
  return typeof T == 'boolean';
}
function vr(T) {
  return Array.isArray(T);
}
function Or(T) {
  return typeof T == 'string';
}
function Bs(T) {
  return Or(T) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(T);
}
function Mp(T) {
  return new ap(T);
}
function Ep(T, t, p) {
  return new vp(T, t, p);
}
const yn = typeof self == 'object' ? self : null,
  Cp =
    yn &&
    (yn.hasOwnProperty('AudioContext') ||
      yn.hasOwnProperty('webkitAudioContext'));
function Op(T, t, p) {
  return (
    ut(yt(Ca), 'This node only works in a secure context (https or localhost)'),
    new Ca(T, t, p)
  );
}
function xr(T, t, p, e) {
  var v = arguments.length,
    y =
      v < 3 ? t : e === null ? (e = Object.getOwnPropertyDescriptor(t, p)) : e,
    m;
  if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
    y = Reflect.decorate(T, t, p, e);
  else
    for (var r = T.length - 1; r >= 0; r--)
      (m = T[r]) && (y = (v < 3 ? m(y) : v > 3 ? m(t, p, y) : m(t, p)) || y);
  return v > 3 && y && Object.defineProperty(t, p, y), y;
}
function Zt(T, t, p, e) {
  function v(y) {
    return y instanceof p
      ? y
      : new p(function (m) {
          m(y);
        });
  }
  return new (p || (p = Promise))(function (y, m) {
    function r(h) {
      try {
        l(e.next(h));
      } catch (u) {
        m(u);
      }
    }
    function c(h) {
      try {
        l(e.throw(h));
      } catch (u) {
        m(u);
      }
    }
    function l(h) {
      h.done ? y(h.value) : v(h.value).then(r, c);
    }
    l((e = e.apply(T, t || [])).next());
  });
}
class Ap {
  constructor(t, p, e) {
    (this._callback = t),
      (this._type = p),
      (this._updateInterval = e),
      this._createClock();
  }
  _createWorker() {
    const t = new Blob(
        [
          `
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval * 1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`,
        ],
        { type: 'text/javascript' },
      ),
      p = URL.createObjectURL(t),
      e = new Worker(p);
    (e.onmessage = this._callback.bind(this)), (this._worker = e);
  }
  _createTimeout() {
    this._timeout = setTimeout(() => {
      this._createTimeout(), this._callback();
    }, this._updateInterval * 1e3);
  }
  _createClock() {
    if (this._type === 'worker')
      try {
        this._createWorker();
      } catch {
        (this._type = 'timeout'), this._createClock();
      }
    else this._type === 'timeout' && this._createTimeout();
  }
  _disposeClock() {
    this._timeout && (clearTimeout(this._timeout), (this._timeout = 0)),
      this._worker &&
        (this._worker.terminate(), (this._worker.onmessage = null));
  }
  get updateInterval() {
    return this._updateInterval;
  }
  set updateInterval(t) {
    (this._updateInterval = Math.max(t, 128 / 44100)),
      this._type === 'worker' && this._worker.postMessage(Math.max(t * 1e3, 1));
  }
  get type() {
    return this._type;
  }
  set type(t) {
    this._disposeClock(), (this._type = t), this._createClock();
  }
  dispose() {
    this._disposeClock();
  }
}
function _n(T) {
  return wp(T);
}
function Qr(T) {
  return _p(T);
}
function Ws(T) {
  return xp(T);
}
function In(T) {
  return bp(T);
}
function Cl(T) {
  return T instanceof AudioBuffer;
}
function kp(T, t) {
  return T === 'value' || _n(t) || Qr(t) || Cl(t);
}
function Nn(T, ...t) {
  if (!t.length) return T;
  const p = t.shift();
  if (mn(T) && mn(p))
    for (const e in p)
      kp(e, p[e])
        ? (T[e] = p[e])
        : mn(p[e])
        ? (T[e] || Object.assign(T, { [e]: {} }), Nn(T[e], p[e]))
        : Object.assign(T, { [e]: p[e] });
  return Nn(T, ...t);
}
function Pp(T, t) {
  return T.length === t.length && T.every((p, e) => t[e] === p);
}
function Xe(T, t, p = [], e) {
  const v = {},
    y = Array.from(t);
  if (
    (mn(y[0]) &&
      e &&
      !Reflect.has(y[0], e) &&
      (Object.keys(y[0]).some((r) => Reflect.has(T, r)) ||
        (Nn(v, { [e]: y[0] }), p.splice(p.indexOf(e), 1), y.shift())),
    y.length === 1 && mn(y[0]))
  )
    Nn(v, y[0]);
  else for (let m = 0; m < p.length; m++) yt(y[m]) && (v[p[m]] = y[m]);
  return Nn(T, v);
}
function Rp(T) {
  return T.constructor.getDefaults();
}
function Fn(T, t) {
  return dr(T) ? t : T;
}
function Oa(T, t) {
  return (
    t.forEach((p) => {
      Reflect.has(T, p) && delete T[p];
    }),
    T
  );
}
/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */ class Vr {
  constructor() {
    (this.debug = !1), (this._wasDisposed = !1);
  }
  static getDefaults() {
    return {};
  }
  log(...t) {
    (this.debug || (yn && this.toString() === yn.TONE_DEBUG_CLASS)) &&
      Sp(this, ...t);
  }
  dispose() {
    return (this._wasDisposed = !0), this;
  }
  get disposed() {
    return this._wasDisposed;
  }
  toString() {
    return this.name;
  }
}
Vr.version = Ra;
const mi = 1e-6;
function eo(T, t) {
  return T > t + mi;
}
function Xo(T, t) {
  return eo(T, t) || mr(T, t);
}
function Ol(T, t) {
  return T + mi < t;
}
function mr(T, t) {
  return Math.abs(T - t) < mi;
}
function Dp(T, t, p) {
  return Math.max(Math.min(T, p), t);
}
class Rr extends Vr {
  constructor() {
    super(), (this.name = 'Timeline'), (this._timeline = []);
    const t = Xe(Rr.getDefaults(), arguments, ['memory']);
    (this.memory = t.memory), (this.increasing = t.increasing);
  }
  static getDefaults() {
    return { memory: 1 / 0, increasing: !1 };
  }
  get length() {
    return this._timeline.length;
  }
  add(t) {
    if (
      (ut(
        Reflect.has(t, 'time'),
        'Timeline: events must have a time attribute',
      ),
      (t.time = t.time.valueOf()),
      this.increasing && this.length)
    ) {
      const p = this._timeline[this.length - 1];
      ut(
        Xo(t.time, p.time),
        'The time must be greater than or equal to the last scheduled time',
      ),
        this._timeline.push(t);
    } else {
      const p = this._search(t.time);
      this._timeline.splice(p + 1, 0, t);
    }
    if (this.length > this.memory) {
      const p = this.length - this.memory;
      this._timeline.splice(0, p);
    }
    return this;
  }
  remove(t) {
    const p = this._timeline.indexOf(t);
    return p !== -1 && this._timeline.splice(p, 1), this;
  }
  get(t, p = 'time') {
    const e = this._search(t, p);
    return e !== -1 ? this._timeline[e] : null;
  }
  peek() {
    return this._timeline[0];
  }
  shift() {
    return this._timeline.shift();
  }
  getAfter(t, p = 'time') {
    const e = this._search(t, p);
    return e + 1 < this._timeline.length ? this._timeline[e + 1] : null;
  }
  getBefore(t) {
    const p = this._timeline.length;
    if (p > 0 && this._timeline[p - 1].time < t) return this._timeline[p - 1];
    const e = this._search(t);
    return e - 1 >= 0 ? this._timeline[e - 1] : null;
  }
  cancel(t) {
    if (this._timeline.length > 1) {
      let p = this._search(t);
      if (p >= 0)
        if (mr(this._timeline[p].time, t)) {
          for (let e = p; e >= 0 && mr(this._timeline[e].time, t); e--) p = e;
          this._timeline = this._timeline.slice(0, p);
        } else this._timeline = this._timeline.slice(0, p + 1);
      else this._timeline = [];
    } else
      this._timeline.length === 1 &&
        Xo(this._timeline[0].time, t) &&
        (this._timeline = []);
    return this;
  }
  cancelBefore(t) {
    const p = this._search(t);
    return p >= 0 && (this._timeline = this._timeline.slice(p + 1)), this;
  }
  previousEvent(t) {
    const p = this._timeline.indexOf(t);
    return p > 0 ? this._timeline[p - 1] : null;
  }
  _search(t, p = 'time') {
    if (this._timeline.length === 0) return -1;
    let e = 0;
    const v = this._timeline.length;
    let y = v;
    if (v > 0 && this._timeline[v - 1][p] <= t) return v - 1;
    for (; e < y; ) {
      let m = Math.floor(e + (y - e) / 2);
      const r = this._timeline[m],
        c = this._timeline[m + 1];
      if (mr(r[p], t)) {
        for (let l = m; l < this._timeline.length; l++) {
          const h = this._timeline[l];
          if (mr(h[p], t)) m = l;
          else break;
        }
        return m;
      } else {
        if (Ol(r[p], t) && eo(c[p], t)) return m;
        eo(r[p], t) ? (y = m) : (e = m + 1);
      }
    }
    return -1;
  }
  _iterate(t, p = 0, e = this._timeline.length - 1) {
    this._timeline.slice(p, e + 1).forEach(t);
  }
  forEach(t) {
    return this._iterate(t), this;
  }
  forEachBefore(t, p) {
    const e = this._search(t);
    return e !== -1 && this._iterate(p, 0, e), this;
  }
  forEachAfter(t, p) {
    const e = this._search(t);
    return this._iterate(p, e + 1), this;
  }
  forEachBetween(t, p, e) {
    let v = this._search(t),
      y = this._search(p);
    return (
      v !== -1 && y !== -1
        ? (this._timeline[v].time !== t && (v += 1),
          this._timeline[y].time === p && (y -= 1),
          this._iterate(e, v, y))
        : v === -1 && this._iterate(e, 0, y),
      this
    );
  }
  forEachFrom(t, p) {
    let e = this._search(t);
    for (; e >= 0 && this._timeline[e].time >= t; ) e--;
    return this._iterate(p, e + 1), this;
  }
  forEachAtTime(t, p) {
    const e = this._search(t);
    if (e !== -1 && mr(this._timeline[e].time, t)) {
      let v = e;
      for (let y = e; y >= 0 && mr(this._timeline[y].time, t); y--) v = y;
      this._iterate(
        (y) => {
          p(y);
        },
        v,
        e,
      );
    }
    return this;
  }
  dispose() {
    return super.dispose(), (this._timeline = []), this;
  }
}
const Al = [];
function wo(T) {
  Al.push(T);
}
function Ip(T) {
  Al.forEach((t) => t(T));
}
const kl = [];
function xo(T) {
  kl.push(T);
}
function Lp(T) {
  kl.forEach((t) => t(T));
}
class Os extends Vr {
  constructor() {
    super(...arguments), (this.name = 'Emitter');
  }
  on(t, p) {
    return (
      t.split(/\W+/).forEach((v) => {
        dr(this._events) && (this._events = {}),
          this._events.hasOwnProperty(v) || (this._events[v] = []),
          this._events[v].push(p);
      }),
      this
    );
  }
  once(t, p) {
    const e = (...v) => {
      p(...v), this.off(t, e);
    };
    return this.on(t, e), this;
  }
  off(t, p) {
    return (
      t.split(/\W+/).forEach((v) => {
        if (
          (dr(this._events) && (this._events = {}),
          this._events.hasOwnProperty(t))
        )
          if (dr(p)) this._events[t] = [];
          else {
            const y = this._events[t];
            for (let m = y.length - 1; m >= 0; m--)
              y[m] === p && y.splice(m, 1);
          }
      }),
      this
    );
  }
  emit(t, ...p) {
    if (this._events && this._events.hasOwnProperty(t)) {
      const e = this._events[t].slice(0);
      for (let v = 0, y = e.length; v < y; v++) e[v].apply(this, p);
    }
    return this;
  }
  static mixin(t) {
    ['on', 'once', 'off', 'emit'].forEach((p) => {
      const e = Object.getOwnPropertyDescriptor(Os.prototype, p);
      Object.defineProperty(t.prototype, p, e);
    });
  }
  dispose() {
    return super.dispose(), (this._events = void 0), this;
  }
}
class Pl extends Os {
  constructor() {
    super(...arguments), (this.isOffline = !1);
  }
  toJSON() {
    return {};
  }
}
class As extends Pl {
  constructor() {
    super(),
      (this.name = 'Context'),
      (this._constants = new Map()),
      (this._timeouts = new Rr()),
      (this._timeoutIds = 0),
      (this._initialized = !1),
      (this.isOffline = !1),
      (this._workletModules = new Map());
    const t = Xe(As.getDefaults(), arguments, ['context']);
    t.context
      ? (this._context = t.context)
      : (this._context = Mp({ latencyHint: t.latencyHint })),
      (this._ticker = new Ap(
        this.emit.bind(this, 'tick'),
        t.clockSource,
        t.updateInterval,
      )),
      this.on('tick', this._timeoutLoop.bind(this)),
      (this._context.onstatechange = () => {
        this.emit('statechange', this.state);
      }),
      this._setLatencyHint(t.latencyHint),
      (this.lookAhead = t.lookAhead);
  }
  static getDefaults() {
    return {
      clockSource: 'worker',
      latencyHint: 'interactive',
      lookAhead: 0.1,
      updateInterval: 0.05,
    };
  }
  initialize() {
    return this._initialized || (Ip(this), (this._initialized = !0)), this;
  }
  createAnalyser() {
    return this._context.createAnalyser();
  }
  createOscillator() {
    return this._context.createOscillator();
  }
  createBufferSource() {
    return this._context.createBufferSource();
  }
  createBiquadFilter() {
    return this._context.createBiquadFilter();
  }
  createBuffer(t, p, e) {
    return this._context.createBuffer(t, p, e);
  }
  createChannelMerger(t) {
    return this._context.createChannelMerger(t);
  }
  createChannelSplitter(t) {
    return this._context.createChannelSplitter(t);
  }
  createConstantSource() {
    return this._context.createConstantSource();
  }
  createConvolver() {
    return this._context.createConvolver();
  }
  createDelay(t) {
    return this._context.createDelay(t);
  }
  createDynamicsCompressor() {
    return this._context.createDynamicsCompressor();
  }
  createGain() {
    return this._context.createGain();
  }
  createIIRFilter(t, p) {
    return this._context.createIIRFilter(t, p);
  }
  createPanner() {
    return this._context.createPanner();
  }
  createPeriodicWave(t, p, e) {
    return this._context.createPeriodicWave(t, p, e);
  }
  createStereoPanner() {
    return this._context.createStereoPanner();
  }
  createWaveShaper() {
    return this._context.createWaveShaper();
  }
  createMediaStreamSource(t) {
    return (
      ut(In(this._context), 'Not available if OfflineAudioContext'),
      this._context.createMediaStreamSource(t)
    );
  }
  createMediaElementSource(t) {
    return (
      ut(In(this._context), 'Not available if OfflineAudioContext'),
      this._context.createMediaElementSource(t)
    );
  }
  createMediaStreamDestination() {
    return (
      ut(In(this._context), 'Not available if OfflineAudioContext'),
      this._context.createMediaStreamDestination()
    );
  }
  decodeAudioData(t) {
    return this._context.decodeAudioData(t);
  }
  get currentTime() {
    return this._context.currentTime;
  }
  get state() {
    return this._context.state;
  }
  get sampleRate() {
    return this._context.sampleRate;
  }
  get listener() {
    return this.initialize(), this._listener;
  }
  set listener(t) {
    ut(!this._initialized, 'The listener cannot be set after initialization.'),
      (this._listener = t);
  }
  get transport() {
    return this.initialize(), this._transport;
  }
  set transport(t) {
    ut(!this._initialized, 'The transport cannot be set after initialization.'),
      (this._transport = t);
  }
  get draw() {
    return this.initialize(), this._draw;
  }
  set draw(t) {
    ut(!this._initialized, 'Draw cannot be set after initialization.'),
      (this._draw = t);
  }
  get destination() {
    return this.initialize(), this._destination;
  }
  set destination(t) {
    ut(
      !this._initialized,
      'The destination cannot be set after initialization.',
    ),
      (this._destination = t);
  }
  createAudioWorkletNode(t, p) {
    return Op(this.rawContext, t, p);
  }
  addAudioWorkletModule(t, p) {
    return Zt(this, void 0, void 0, function* () {
      ut(
        yt(this.rawContext.audioWorklet),
        'AudioWorkletNode is only available in a secure context (https or localhost)',
      ),
        this._workletModules.has(p) ||
          this._workletModules.set(
            p,
            this.rawContext.audioWorklet.addModule(t),
          ),
        yield this._workletModules.get(p);
    });
  }
  workletsAreReady() {
    return Zt(this, void 0, void 0, function* () {
      const t = [];
      this._workletModules.forEach((p) => t.push(p)), yield Promise.all(t);
    });
  }
  get updateInterval() {
    return this._ticker.updateInterval;
  }
  set updateInterval(t) {
    this._ticker.updateInterval = t;
  }
  get clockSource() {
    return this._ticker.type;
  }
  set clockSource(t) {
    this._ticker.type = t;
  }
  get latencyHint() {
    return this._latencyHint;
  }
  _setLatencyHint(t) {
    let p = 0;
    if (((this._latencyHint = t), Or(t)))
      switch (t) {
        case 'interactive':
          p = 0.1;
          break;
        case 'playback':
          p = 0.5;
          break;
        case 'balanced':
          p = 0.25;
          break;
      }
    (this.lookAhead = p), (this.updateInterval = p / 2);
  }
  get rawContext() {
    return this._context;
  }
  now() {
    return this._context.currentTime + this.lookAhead;
  }
  immediate() {
    return this._context.currentTime;
  }
  resume() {
    return In(this._context) ? this._context.resume() : Promise.resolve();
  }
  close() {
    return Zt(this, void 0, void 0, function* () {
      In(this._context) && (yield this._context.close()),
        this._initialized && Lp(this);
    });
  }
  getConstant(t) {
    if (this._constants.has(t)) return this._constants.get(t);
    {
      const p = this._context.createBuffer(1, 128, this._context.sampleRate),
        e = p.getChannelData(0);
      for (let y = 0; y < e.length; y++) e[y] = t;
      const v = this._context.createBufferSource();
      return (
        (v.channelCount = 1),
        (v.channelCountMode = 'explicit'),
        (v.buffer = p),
        (v.loop = !0),
        v.start(0),
        this._constants.set(t, v),
        v
      );
    }
  }
  dispose() {
    return (
      super.dispose(),
      this._ticker.dispose(),
      this._timeouts.dispose(),
      Object.keys(this._constants).map((t) => this._constants[t].disconnect()),
      this
    );
  }
  _timeoutLoop() {
    const t = this.now();
    let p = this._timeouts.peek();
    for (; this._timeouts.length && p && p.time <= t; )
      p.callback(), this._timeouts.shift(), (p = this._timeouts.peek());
  }
  setTimeout(t, p) {
    this._timeoutIds++;
    const e = this.now();
    return (
      this._timeouts.add({ callback: t, id: this._timeoutIds, time: e + p }),
      this._timeoutIds
    );
  }
  clearTimeout(t) {
    return (
      this._timeouts.forEach((p) => {
        p.id === t && this._timeouts.remove(p);
      }),
      this
    );
  }
  clearInterval(t) {
    return this.clearTimeout(t);
  }
  setInterval(t, p) {
    const e = ++this._timeoutIds,
      v = () => {
        const y = this.now();
        this._timeouts.add({
          callback: () => {
            t(), v();
          },
          id: e,
          time: y + p,
        });
      };
    return v(), e;
  }
}
class Np extends Pl {
  constructor() {
    super(...arguments),
      (this.lookAhead = 0),
      (this.latencyHint = 0),
      (this.isOffline = !1);
  }
  createAnalyser() {
    return {};
  }
  createOscillator() {
    return {};
  }
  createBufferSource() {
    return {};
  }
  createBiquadFilter() {
    return {};
  }
  createBuffer(t, p, e) {
    return {};
  }
  createChannelMerger(t) {
    return {};
  }
  createChannelSplitter(t) {
    return {};
  }
  createConstantSource() {
    return {};
  }
  createConvolver() {
    return {};
  }
  createDelay(t) {
    return {};
  }
  createDynamicsCompressor() {
    return {};
  }
  createGain() {
    return {};
  }
  createIIRFilter(t, p) {
    return {};
  }
  createPanner() {
    return {};
  }
  createPeriodicWave(t, p, e) {
    return {};
  }
  createStereoPanner() {
    return {};
  }
  createWaveShaper() {
    return {};
  }
  createMediaStreamSource(t) {
    return {};
  }
  createMediaElementSource(t) {
    return {};
  }
  createMediaStreamDestination() {
    return {};
  }
  decodeAudioData(t) {
    return Promise.resolve({});
  }
  createAudioWorkletNode(t, p) {
    return {};
  }
  get rawContext() {
    return {};
  }
  addAudioWorkletModule(t, p) {
    return Zt(this, void 0, void 0, function* () {
      return Promise.resolve();
    });
  }
  resume() {
    return Promise.resolve();
  }
  setTimeout(t, p) {
    return 0;
  }
  clearTimeout(t) {
    return this;
  }
  setInterval(t, p) {
    return 0;
  }
  clearInterval(t) {
    return this;
  }
  getConstant(t) {
    return {};
  }
  get currentTime() {
    return 0;
  }
  get state() {
    return {};
  }
  get sampleRate() {
    return 0;
  }
  get listener() {
    return {};
  }
  get transport() {
    return {};
  }
  get draw() {
    return {};
  }
  set draw(t) {}
  get destination() {
    return {};
  }
  set destination(t) {}
  now() {
    return 0;
  }
  immediate() {
    return 0;
  }
}
function Vt(T, t) {
  vr(t)
    ? t.forEach((p) => Vt(T, p))
    : Object.defineProperty(T, t, { enumerable: !0, writable: !1 });
}
function Rl(T, t) {
  vr(t)
    ? t.forEach((p) => Rl(T, p))
    : Object.defineProperty(T, t, { writable: !0 });
}
const Ot = () => {};
class kt extends Vr {
  constructor() {
    super(), (this.name = 'ToneAudioBuffer'), (this.onload = Ot);
    const t = Xe(kt.getDefaults(), arguments, ['url', 'onload', 'onerror']);
    (this.reverse = t.reverse),
      (this.onload = t.onload),
      (t.url && Cl(t.url)) || t.url instanceof kt
        ? this.set(t.url)
        : Or(t.url) && this.load(t.url).catch(t.onerror);
  }
  static getDefaults() {
    return { onerror: Ot, onload: Ot, reverse: !1 };
  }
  get sampleRate() {
    return this._buffer ? this._buffer.sampleRate : yr().sampleRate;
  }
  set(t) {
    return (
      t instanceof kt
        ? t.loaded
          ? (this._buffer = t.get())
          : (t.onload = () => {
              this.set(t), this.onload(this);
            })
        : (this._buffer = t),
      this._reversed && this._reverse(),
      this
    );
  }
  get() {
    return this._buffer;
  }
  load(t) {
    return Zt(this, void 0, void 0, function* () {
      const p = kt.load(t).then((e) => {
        this.set(e), this.onload(this);
      });
      kt.downloads.push(p);
      try {
        yield p;
      } finally {
        const e = kt.downloads.indexOf(p);
        kt.downloads.splice(e, 1);
      }
      return this;
    });
  }
  dispose() {
    return super.dispose(), (this._buffer = void 0), this;
  }
  fromArray(t) {
    const p = vr(t) && t[0].length > 0,
      e = p ? t.length : 1,
      v = p ? t[0].length : t.length,
      y = yr(),
      m = y.createBuffer(e, v, y.sampleRate),
      r = !p && e === 1 ? [t] : t;
    for (let c = 0; c < e; c++) m.copyToChannel(r[c], c);
    return (this._buffer = m), this;
  }
  toMono(t) {
    if (bn(t)) this.fromArray(this.toArray(t));
    else {
      let p = new Float32Array(this.length);
      const e = this.numberOfChannels;
      for (let v = 0; v < e; v++) {
        const y = this.toArray(v);
        for (let m = 0; m < y.length; m++) p[m] += y[m];
      }
      (p = p.map((v) => v / e)), this.fromArray(p);
    }
    return this;
  }
  toArray(t) {
    if (bn(t)) return this.getChannelData(t);
    if (this.numberOfChannels === 1) return this.toArray(0);
    {
      const p = [];
      for (let e = 0; e < this.numberOfChannels; e++)
        p[e] = this.getChannelData(e);
      return p;
    }
  }
  getChannelData(t) {
    return this._buffer ? this._buffer.getChannelData(t) : new Float32Array(0);
  }
  slice(t, p = this.duration) {
    const e = Math.floor(t * this.sampleRate),
      v = Math.floor(p * this.sampleRate);
    ut(e < v, 'The start time must be less than the end time');
    const y = v - e,
      m = yr().createBuffer(this.numberOfChannels, y, this.sampleRate);
    for (let r = 0; r < this.numberOfChannels; r++)
      m.copyToChannel(this.getChannelData(r).subarray(e, v), r);
    return new kt(m);
  }
  _reverse() {
    if (this.loaded)
      for (let t = 0; t < this.numberOfChannels; t++)
        this.getChannelData(t).reverse();
    return this;
  }
  get loaded() {
    return this.length > 0;
  }
  get duration() {
    return this._buffer ? this._buffer.duration : 0;
  }
  get length() {
    return this._buffer ? this._buffer.length : 0;
  }
  get numberOfChannels() {
    return this._buffer ? this._buffer.numberOfChannels : 0;
  }
  get reverse() {
    return this._reversed;
  }
  set reverse(t) {
    this._reversed !== t && ((this._reversed = t), this._reverse());
  }
  static fromArray(t) {
    return new kt().fromArray(t);
  }
  static fromUrl(t) {
    return Zt(this, void 0, void 0, function* () {
      return yield new kt().load(t);
    });
  }
  static load(t) {
    return Zt(this, void 0, void 0, function* () {
      const p = t.match(/\[([^\]\[]+\|.+)\]$/);
      if (p) {
        const r = p[1].split('|');
        let c = r[0];
        for (const l of r)
          if (kt.supportsType(l)) {
            c = l;
            break;
          }
        t = t.replace(p[0], c);
      }
      const e =
          kt.baseUrl === '' || kt.baseUrl.endsWith('/')
            ? kt.baseUrl
            : kt.baseUrl + '/',
        v = yield fetch(e + t);
      if (!v.ok) throw new Error(`could not load url: ${t}`);
      const y = yield v.arrayBuffer();
      return yield yr().decodeAudioData(y);
    });
  }
  static supportsType(t) {
    const p = t.split('.'),
      e = p[p.length - 1];
    return document.createElement('audio').canPlayType('audio/' + e) !== '';
  }
  static loaded() {
    return Zt(this, void 0, void 0, function* () {
      for (yield Promise.resolve(); kt.downloads.length; )
        yield kt.downloads[0];
    });
  }
}
kt.baseUrl = '';
kt.downloads = [];
class yi extends As {
  constructor() {
    super({
      clockSource: 'offline',
      context: Ws(arguments[0])
        ? arguments[0]
        : Ep(arguments[0], arguments[1] * arguments[2], arguments[2]),
      lookAhead: 0,
      updateInterval: Ws(arguments[0])
        ? 128 / arguments[0].sampleRate
        : 128 / arguments[2],
    }),
      (this.name = 'OfflineContext'),
      (this._currentTime = 0),
      (this.isOffline = !0),
      (this._duration = Ws(arguments[0])
        ? arguments[0].length / arguments[0].sampleRate
        : arguments[1]);
  }
  now() {
    return this._currentTime;
  }
  get currentTime() {
    return this._currentTime;
  }
  _renderClock(t) {
    return Zt(this, void 0, void 0, function* () {
      let p = 0;
      for (; this._duration - this._currentTime >= 0; ) {
        this.emit('tick'), (this._currentTime += 128 / this.sampleRate), p++;
        const e = Math.floor(this.sampleRate / 128);
        t && p % e === 0 && (yield new Promise((v) => setTimeout(v, 1)));
      }
    });
  }
  render(t = !0) {
    return Zt(this, void 0, void 0, function* () {
      yield this.workletsAreReady(), yield this._renderClock(t);
      const p = yield this._context.startRendering();
      return new kt(p);
    });
  }
  close() {
    return Promise.resolve();
  }
}
const Dl = new Np();
let Un = Dl;
function yr() {
  return Un === Dl && Cp && Fp(new As()), Un;
}
function Fp(T) {
  In(T) ? (Un = new As(T)) : Ws(T) ? (Un = new yi(T)) : (Un = T);
}
function Up() {
  return Un.resume();
}
if (yn && !yn.TONE_SILENCE_LOGGING) {
  const t = ` * Tone.js v${Ra} * `;
  console.log(`%c${t}`, 'background: #000; color: #fff');
}
function Bp(T) {
  return Math.pow(10, T / 20);
}
function Gp(T) {
  return 20 * (Math.log(T) / Math.LN10);
}
function Il(T) {
  return Math.pow(2, T / 12);
}
let So = 440;
function Vp() {
  return So;
}
function Wp(T) {
  So = T;
}
function Yo(T) {
  return Math.round(Ll(T));
}
function Ll(T) {
  return 69 + 12 * Math.log2(T / So);
}
function qp(T) {
  return So * Math.pow(2, (T - 69) / 12);
}
class gi extends Vr {
  constructor(t, p, e) {
    super(),
      (this.defaultUnits = 's'),
      (this._val = p),
      (this._units = e),
      (this.context = t),
      (this._expressions = this._getExpressions());
  }
  _getExpressions() {
    return {
      hz: {
        method: (t) => this._frequencyToUnits(parseFloat(t)),
        regexp: /^(\d+(?:\.\d+)?)hz$/i,
      },
      i: {
        method: (t) => this._ticksToUnits(parseInt(t, 10)),
        regexp: /^(\d+)i$/i,
      },
      m: {
        method: (t) =>
          this._beatsToUnits(parseInt(t, 10) * this._getTimeSignature()),
        regexp: /^(\d+)m$/i,
      },
      n: {
        method: (t, p) => {
          const e = parseInt(t, 10),
            v = p === '.' ? 1.5 : 1;
          return e === 1
            ? this._beatsToUnits(this._getTimeSignature()) * v
            : this._beatsToUnits(4 / e) * v;
        },
        regexp: /^(\d+)n(\.?)$/i,
      },
      number: {
        method: (t) =>
          this._expressions[this.defaultUnits].method.call(this, t),
        regexp: /^(\d+(?:\.\d+)?)$/,
      },
      s: {
        method: (t) => this._secondsToUnits(parseFloat(t)),
        regexp: /^(\d+(?:\.\d+)?)s$/,
      },
      samples: {
        method: (t) => parseInt(t, 10) / this.context.sampleRate,
        regexp: /^(\d+)samples$/,
      },
      t: {
        method: (t) => {
          const p = parseInt(t, 10);
          return this._beatsToUnits(8 / (Math.floor(p) * 3));
        },
        regexp: /^(\d+)t$/i,
      },
      tr: {
        method: (t, p, e) => {
          let v = 0;
          return (
            t &&
              t !== '0' &&
              (v += this._beatsToUnits(
                this._getTimeSignature() * parseFloat(t),
              )),
            p && p !== '0' && (v += this._beatsToUnits(parseFloat(p))),
            e && e !== '0' && (v += this._beatsToUnits(parseFloat(e) / 4)),
            v
          );
        },
        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/,
      },
    };
  }
  valueOf() {
    if ((this._val instanceof gi && this.fromType(this._val), dr(this._val)))
      return this._noArg();
    if (Or(this._val) && dr(this._units)) {
      for (const t in this._expressions)
        if (this._expressions[t].regexp.test(this._val.trim())) {
          this._units = t;
          break;
        }
    } else if (mn(this._val)) {
      let t = 0;
      for (const p in this._val)
        if (yt(this._val[p])) {
          const e = this._val[p];
          t += new this.constructor(this.context, p).valueOf() * e;
        }
      return t;
    }
    if (yt(this._units)) {
      const t = this._expressions[this._units],
        p = this._val.toString().trim().match(t.regexp);
      return p
        ? t.method.apply(this, p.slice(1))
        : t.method.call(this, this._val);
    } else return Or(this._val) ? parseFloat(this._val) : this._val;
  }
  _frequencyToUnits(t) {
    return 1 / t;
  }
  _beatsToUnits(t) {
    return (60 / this._getBpm()) * t;
  }
  _secondsToUnits(t) {
    return t;
  }
  _ticksToUnits(t) {
    return (t * this._beatsToUnits(1)) / this._getPPQ();
  }
  _noArg() {
    return this._now();
  }
  _getBpm() {
    return this.context.transport.bpm.value;
  }
  _getTimeSignature() {
    return this.context.transport.timeSignature;
  }
  _getPPQ() {
    return this.context.transport.PPQ;
  }
  fromType(t) {
    switch (((this._units = void 0), this.defaultUnits)) {
      case 's':
        this._val = t.toSeconds();
        break;
      case 'i':
        this._val = t.toTicks();
        break;
      case 'hz':
        this._val = t.toFrequency();
        break;
      case 'midi':
        this._val = t.toMidi();
        break;
    }
    return this;
  }
  toFrequency() {
    return 1 / this.toSeconds();
  }
  toSamples() {
    return this.toSeconds() * this.context.sampleRate;
  }
  toMilliseconds() {
    return this.toSeconds() * 1e3;
  }
}
class gr extends gi {
  constructor() {
    super(...arguments), (this.name = 'TimeClass');
  }
  _getExpressions() {
    return Object.assign(super._getExpressions(), {
      now: {
        method: (t) =>
          this._now() + new this.constructor(this.context, t).valueOf(),
        regexp: /^\+(.+)/,
      },
      quantize: {
        method: (t) => {
          const p = new gr(this.context, t).valueOf();
          return this._secondsToUnits(
            this.context.transport.nextSubdivision(p),
          );
        },
        regexp: /^@(.+)/,
      },
    });
  }
  quantize(t, p = 1) {
    const e = new this.constructor(this.context, t).valueOf(),
      v = this.valueOf(),
      r = Math.round(v / e) * e - v;
    return v + r * p;
  }
  toNotation() {
    const t = this.toSeconds(),
      p = ['1m'];
    for (let y = 1; y < 9; y++) {
      const m = Math.pow(2, y);
      p.push(m + 'n.'), p.push(m + 'n'), p.push(m + 't');
    }
    p.push('0');
    let e = p[0],
      v = new gr(this.context, p[0]).toSeconds();
    return (
      p.forEach((y) => {
        const m = new gr(this.context, y).toSeconds();
        Math.abs(m - t) < Math.abs(v - t) && ((e = y), (v = m));
      }),
      e
    );
  }
  toBarsBeatsSixteenths() {
    const t = this._beatsToUnits(1);
    let p = this.valueOf() / t;
    p = parseFloat(p.toFixed(4));
    const e = Math.floor(p / this._getTimeSignature());
    let v = (p % 1) * 4;
    p = Math.floor(p) % this._getTimeSignature();
    const y = v.toString();
    return (
      y.length > 3 && (v = parseFloat(parseFloat(y).toFixed(3))),
      [e, p, v].join(':')
    );
  }
  toTicks() {
    const t = this._beatsToUnits(1),
      p = this.valueOf() / t;
    return Math.round(p * this._getPPQ());
  }
  toSeconds() {
    return this.valueOf();
  }
  toMidi() {
    return Yo(this.toFrequency());
  }
  _now() {
    return this.context.now();
  }
}
class hr extends gr {
  constructor() {
    super(...arguments), (this.name = 'Frequency'), (this.defaultUnits = 'hz');
  }
  static get A4() {
    return Vp();
  }
  static set A4(t) {
    Wp(t);
  }
  _getExpressions() {
    return Object.assign({}, super._getExpressions(), {
      midi: {
        regexp: /^(\d+(?:\.\d+)?midi)/,
        method(t) {
          return this.defaultUnits === 'midi' ? t : hr.mtof(t);
        },
      },
      note: {
        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
        method(t, p) {
          const v = zp[t.toLowerCase()] + (parseInt(p, 10) + 1) * 12;
          return this.defaultUnits === 'midi' ? v : hr.mtof(v);
        },
      },
      tr: {
        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
        method(t, p, e) {
          let v = 1;
          return (
            t &&
              t !== '0' &&
              (v *= this._beatsToUnits(
                this._getTimeSignature() * parseFloat(t),
              )),
            p && p !== '0' && (v *= this._beatsToUnits(parseFloat(p))),
            e && e !== '0' && (v *= this._beatsToUnits(parseFloat(e) / 4)),
            v
          );
        },
      },
    });
  }
  transpose(t) {
    return new hr(this.context, this.valueOf() * Il(t));
  }
  harmonize(t) {
    return t.map((p) => this.transpose(p));
  }
  toMidi() {
    return Yo(this.valueOf());
  }
  toNote() {
    const t = this.toFrequency(),
      p = Math.log2(t / hr.A4);
    let e = Math.round(12 * p) + 57;
    const v = Math.floor(e / 12);
    return v < 0 && (e += -12 * v), Hp[e % 12] + v.toString();
  }
  toSeconds() {
    return 1 / super.toSeconds();
  }
  toTicks() {
    const t = this._beatsToUnits(1),
      p = this.valueOf() / t;
    return Math.floor(p * this._getPPQ());
  }
  _noArg() {
    return 0;
  }
  _frequencyToUnits(t) {
    return t;
  }
  _ticksToUnits(t) {
    return 1 / ((t * 60) / (this._getBpm() * this._getPPQ()));
  }
  _beatsToUnits(t) {
    return 1 / super._beatsToUnits(t);
  }
  _secondsToUnits(t) {
    return 1 / t;
  }
  static mtof(t) {
    return qp(t);
  }
  static ftom(t) {
    return Yo(t);
  }
}
const zp = {
    cbb: -2,
    cb: -1,
    c: 0,
    'c#': 1,
    cx: 2,
    dbb: 0,
    db: 1,
    d: 2,
    'd#': 3,
    dx: 4,
    ebb: 2,
    eb: 3,
    e: 4,
    'e#': 5,
    ex: 6,
    fbb: 3,
    fb: 4,
    f: 5,
    'f#': 6,
    fx: 7,
    gbb: 5,
    gb: 6,
    g: 7,
    'g#': 8,
    gx: 9,
    abb: 7,
    ab: 8,
    a: 9,
    'a#': 10,
    ax: 11,
    bbb: 9,
    bb: 10,
    b: 11,
    'b#': 12,
    bx: 13,
  },
  Hp = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
class os extends gr {
  constructor() {
    super(...arguments), (this.name = 'TransportTime');
  }
  _now() {
    return this.context.transport.seconds;
  }
}
class ar extends Vr {
  constructor() {
    super();
    const t = Xe(ar.getDefaults(), arguments, ['context']);
    this.defaultContext
      ? (this.context = this.defaultContext)
      : (this.context = t.context);
  }
  static getDefaults() {
    return { context: yr() };
  }
  now() {
    return this.context.currentTime + this.context.lookAhead;
  }
  immediate() {
    return this.context.currentTime;
  }
  get sampleTime() {
    return 1 / this.context.sampleRate;
  }
  get blockTime() {
    return 128 / this.context.sampleRate;
  }
  toSeconds(t) {
    return new gr(this.context, t).toSeconds();
  }
  toFrequency(t) {
    return new hr(this.context, t).toFrequency();
  }
  toTicks(t) {
    return new os(this.context, t).toTicks();
  }
  _getPartialProperties(t) {
    const p = this.get();
    return (
      Object.keys(p).forEach((e) => {
        dr(t[e]) && delete p[e];
      }),
      p
    );
  }
  get() {
    const t = Rp(this);
    return (
      Object.keys(t).forEach((p) => {
        if (Reflect.has(this, p)) {
          const e = this[p];
          yt(e) && yt(e.value) && yt(e.setValueAtTime)
            ? (t[p] = e.value)
            : e instanceof ar
            ? (t[p] = e._getPartialProperties(t[p]))
            : vr(e) || bn(e) || Or(e) || jp(e)
            ? (t[p] = e)
            : delete t[p];
        }
      }),
      t
    );
  }
  set(t) {
    return (
      Object.keys(t).forEach((p) => {
        Reflect.has(this, p) &&
          yt(this[p]) &&
          (this[p] && yt(this[p].value) && yt(this[p].setValueAtTime)
            ? this[p].value !== t[p] && (this[p].value = t[p])
            : this[p] instanceof ar
            ? this[p].set(t[p])
            : (this[p] = t[p]));
      }),
      this
    );
  }
}
class vi extends Rr {
  constructor(t = 'stopped') {
    super(),
      (this.name = 'StateTimeline'),
      (this._initial = t),
      this.setStateAtTime(this._initial, 0);
  }
  getValueAtTime(t) {
    const p = this.get(t);
    return p !== null ? p.state : this._initial;
  }
  setStateAtTime(t, p, e) {
    return (
      Jr(p, 0), this.add(Object.assign({}, e, { state: t, time: p })), this
    );
  }
  getLastState(t, p) {
    const e = this._search(p);
    for (let v = e; v >= 0; v--) {
      const y = this._timeline[v];
      if (y.state === t) return y;
    }
  }
  getNextState(t, p) {
    const e = this._search(p);
    if (e !== -1)
      for (let v = e; v < this._timeline.length; v++) {
        const y = this._timeline[v];
        if (y.state === t) return y;
      }
  }
}
class Ft extends ar {
  constructor() {
    super(Xe(Ft.getDefaults(), arguments, ['param', 'units', 'convert'])),
      (this.name = 'Param'),
      (this.overridden = !1),
      (this._minOutput = 1e-7);
    const t = Xe(Ft.getDefaults(), arguments, ['param', 'units', 'convert']);
    for (
      ut(
        yt(t.param) && (_n(t.param) || t.param instanceof Ft),
        'param must be an AudioParam',
      );
      !_n(t.param);

    )
      t.param = t.param._param;
    (this._swappable = yt(t.swappable) ? t.swappable : !1),
      this._swappable
        ? ((this.input = this.context.createGain()),
          (this._param = t.param),
          this.input.connect(this._param))
        : (this._param = this.input = t.param),
      (this._events = new Rr(1e3)),
      (this._initialValue = this._param.defaultValue),
      (this.units = t.units),
      (this.convert = t.convert),
      (this._minValue = t.minValue),
      (this._maxValue = t.maxValue),
      yt(t.value) &&
        t.value !== this._toType(this._initialValue) &&
        this.setValueAtTime(t.value, 0);
  }
  static getDefaults() {
    return Object.assign(ar.getDefaults(), { convert: !0, units: 'number' });
  }
  get value() {
    const t = this.now();
    return this.getValueAtTime(t);
  }
  set value(t) {
    this.cancelScheduledValues(this.now()), this.setValueAtTime(t, this.now());
  }
  get minValue() {
    return yt(this._minValue)
      ? this._minValue
      : this.units === 'time' ||
        this.units === 'frequency' ||
        this.units === 'normalRange' ||
        this.units === 'positive' ||
        this.units === 'transportTime' ||
        this.units === 'ticks' ||
        this.units === 'bpm' ||
        this.units === 'hertz' ||
        this.units === 'samples'
      ? 0
      : this.units === 'audioRange'
      ? -1
      : this.units === 'decibels'
      ? -1 / 0
      : this._param.minValue;
  }
  get maxValue() {
    return yt(this._maxValue)
      ? this._maxValue
      : this.units === 'normalRange' || this.units === 'audioRange'
      ? 1
      : this._param.maxValue;
  }
  _is(t, p) {
    return this.units === p;
  }
  _assertRange(t) {
    return (
      yt(this.maxValue) &&
        yt(this.minValue) &&
        Jr(t, this._fromType(this.minValue), this._fromType(this.maxValue)),
      t
    );
  }
  _fromType(t) {
    return this.convert && !this.overridden
      ? this._is(t, 'time')
        ? this.toSeconds(t)
        : this._is(t, 'decibels')
        ? Bp(t)
        : this._is(t, 'frequency')
        ? this.toFrequency(t)
        : t
      : this.overridden
      ? 0
      : t;
  }
  _toType(t) {
    return this.convert && this.units === 'decibels' ? Gp(t) : t;
  }
  setValueAtTime(t, p) {
    const e = this.toSeconds(p),
      v = this._fromType(t);
    return (
      ut(
        isFinite(v) && isFinite(e),
        `Invalid argument(s) to setValueAtTime: ${JSON.stringify(
          t,
        )}, ${JSON.stringify(p)}`,
      ),
      this._assertRange(v),
      this.log(this.units, 'setValueAtTime', t, e),
      this._events.add({ time: e, type: 'setValueAtTime', value: v }),
      this._param.setValueAtTime(v, e),
      this
    );
  }
  getValueAtTime(t) {
    const p = Math.max(this.toSeconds(t), 0),
      e = this._events.getAfter(p),
      v = this._events.get(p);
    let y = this._initialValue;
    if (v === null) y = this._initialValue;
    else if (
      v.type === 'setTargetAtTime' &&
      (e === null || e.type === 'setValueAtTime')
    ) {
      const m = this._events.getBefore(v.time);
      let r;
      m === null ? (r = this._initialValue) : (r = m.value),
        v.type === 'setTargetAtTime' &&
          (y = this._exponentialApproach(v.time, r, v.value, v.constant, p));
    } else if (e === null) y = v.value;
    else if (
      e.type === 'linearRampToValueAtTime' ||
      e.type === 'exponentialRampToValueAtTime'
    ) {
      let m = v.value;
      if (v.type === 'setTargetAtTime') {
        const r = this._events.getBefore(v.time);
        r === null ? (m = this._initialValue) : (m = r.value);
      }
      e.type === 'linearRampToValueAtTime'
        ? (y = this._linearInterpolate(v.time, m, e.time, e.value, p))
        : (y = this._exponentialInterpolate(v.time, m, e.time, e.value, p));
    } else y = v.value;
    return this._toType(y);
  }
  setRampPoint(t) {
    t = this.toSeconds(t);
    let p = this.getValueAtTime(t);
    return (
      this.cancelAndHoldAtTime(t),
      this._fromType(p) === 0 && (p = this._toType(this._minOutput)),
      this.setValueAtTime(p, t),
      this
    );
  }
  linearRampToValueAtTime(t, p) {
    const e = this._fromType(t),
      v = this.toSeconds(p);
    return (
      ut(
        isFinite(e) && isFinite(v),
        `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(
          t,
        )}, ${JSON.stringify(p)}`,
      ),
      this._assertRange(e),
      this._events.add({ time: v, type: 'linearRampToValueAtTime', value: e }),
      this.log(this.units, 'linearRampToValueAtTime', t, v),
      this._param.linearRampToValueAtTime(e, v),
      this
    );
  }
  exponentialRampToValueAtTime(t, p) {
    let e = this._fromType(t);
    (e = mr(e, 0) ? this._minOutput : e), this._assertRange(e);
    const v = this.toSeconds(p);
    return (
      ut(
        isFinite(e) && isFinite(v),
        `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(
          t,
        )}, ${JSON.stringify(p)}`,
      ),
      this._events.add({
        time: v,
        type: 'exponentialRampToValueAtTime',
        value: e,
      }),
      this.log(this.units, 'exponentialRampToValueAtTime', t, v),
      this._param.exponentialRampToValueAtTime(e, v),
      this
    );
  }
  exponentialRampTo(t, p, e) {
    return (
      (e = this.toSeconds(e)),
      this.setRampPoint(e),
      this.exponentialRampToValueAtTime(t, e + this.toSeconds(p)),
      this
    );
  }
  linearRampTo(t, p, e) {
    return (
      (e = this.toSeconds(e)),
      this.setRampPoint(e),
      this.linearRampToValueAtTime(t, e + this.toSeconds(p)),
      this
    );
  }
  targetRampTo(t, p, e) {
    return (
      (e = this.toSeconds(e)),
      this.setRampPoint(e),
      this.exponentialApproachValueAtTime(t, e, p),
      this
    );
  }
  exponentialApproachValueAtTime(t, p, e) {
    (p = this.toSeconds(p)), (e = this.toSeconds(e));
    const v = Math.log(e + 1) / Math.log(200);
    return (
      this.setTargetAtTime(t, p, v),
      this.cancelAndHoldAtTime(p + e * 0.9),
      this.linearRampToValueAtTime(t, p + e),
      this
    );
  }
  setTargetAtTime(t, p, e) {
    const v = this._fromType(t);
    ut(isFinite(e) && e > 0, 'timeConstant must be a number greater than 0');
    const y = this.toSeconds(p);
    return (
      this._assertRange(v),
      ut(
        isFinite(v) && isFinite(y),
        `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(
          t,
        )}, ${JSON.stringify(p)}`,
      ),
      this._events.add({
        constant: e,
        time: y,
        type: 'setTargetAtTime',
        value: v,
      }),
      this.log(this.units, 'setTargetAtTime', t, y, e),
      this._param.setTargetAtTime(v, y, e),
      this
    );
  }
  setValueCurveAtTime(t, p, e, v = 1) {
    (e = this.toSeconds(e)), (p = this.toSeconds(p));
    const y = this._fromType(t[0]) * v;
    this.setValueAtTime(this._toType(y), p);
    const m = e / (t.length - 1);
    for (let r = 1; r < t.length; r++) {
      const c = this._fromType(t[r]) * v;
      this.linearRampToValueAtTime(this._toType(c), p + r * m);
    }
    return this;
  }
  cancelScheduledValues(t) {
    const p = this.toSeconds(t);
    return (
      ut(
        isFinite(p),
        `Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`,
      ),
      this._events.cancel(p),
      this._param.cancelScheduledValues(p),
      this.log(this.units, 'cancelScheduledValues', p),
      this
    );
  }
  cancelAndHoldAtTime(t) {
    const p = this.toSeconds(t),
      e = this._fromType(this.getValueAtTime(p));
    ut(
      isFinite(p),
      `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`,
    ),
      this.log(this.units, 'cancelAndHoldAtTime', p, 'value=' + e);
    const v = this._events.get(p),
      y = this._events.getAfter(p);
    return (
      v && mr(v.time, p)
        ? y
          ? (this._param.cancelScheduledValues(y.time),
            this._events.cancel(y.time))
          : (this._param.cancelAndHoldAtTime(p),
            this._events.cancel(p + this.sampleTime))
        : y &&
          (this._param.cancelScheduledValues(y.time),
          this._events.cancel(y.time),
          y.type === 'linearRampToValueAtTime'
            ? this.linearRampToValueAtTime(this._toType(e), p)
            : y.type === 'exponentialRampToValueAtTime' &&
              this.exponentialRampToValueAtTime(this._toType(e), p)),
      this._events.add({ time: p, type: 'setValueAtTime', value: e }),
      this._param.setValueAtTime(e, p),
      this
    );
  }
  rampTo(t, p = 0.1, e) {
    return (
      this.units === 'frequency' ||
      this.units === 'bpm' ||
      this.units === 'decibels'
        ? this.exponentialRampTo(t, p, e)
        : this.linearRampTo(t, p, e),
      this
    );
  }
  apply(t) {
    const p = this.context.currentTime;
    t.setValueAtTime(this.getValueAtTime(p), p);
    const e = this._events.get(p);
    if (e && e.type === 'setTargetAtTime') {
      const v = this._events.getAfter(e.time),
        y = v ? v.time : p + 2,
        m = (y - p) / 10;
      for (let r = p; r < y; r += m)
        t.linearRampToValueAtTime(this.getValueAtTime(r), r);
    }
    return (
      this._events.forEachAfter(this.context.currentTime, (v) => {
        v.type === 'cancelScheduledValues'
          ? t.cancelScheduledValues(v.time)
          : v.type === 'setTargetAtTime'
          ? t.setTargetAtTime(v.value, v.time, v.constant)
          : t[v.type](v.value, v.time);
      }),
      this
    );
  }
  setParam(t) {
    ut(
      this._swappable,
      "The Param must be assigned as 'swappable' in the constructor",
    );
    const p = this.input;
    return (
      p.disconnect(this._param),
      this.apply(t),
      (this._param = t),
      p.connect(this._param),
      this
    );
  }
  dispose() {
    return super.dispose(), this._events.dispose(), this;
  }
  get defaultValue() {
    return this._toType(this._param.defaultValue);
  }
  _exponentialApproach(t, p, e, v, y) {
    return e + (p - e) * Math.exp(-(y - t) / v);
  }
  _linearInterpolate(t, p, e, v, y) {
    return p + (v - p) * ((y - t) / (e - t));
  }
  _exponentialInterpolate(t, p, e, v, y) {
    return p * Math.pow(v / p, (y - t) / (e - t));
  }
}
class dt extends ar {
  constructor() {
    super(...arguments),
      (this.name = 'ToneAudioNode'),
      (this._internalChannels = []);
  }
  get numberOfInputs() {
    return yt(this.input)
      ? _n(this.input) || this.input instanceof Ft
        ? 1
        : this.input.numberOfInputs
      : 0;
  }
  get numberOfOutputs() {
    return yt(this.output) ? this.output.numberOfOutputs : 0;
  }
  _isAudioNode(t) {
    return yt(t) && (t instanceof dt || Qr(t));
  }
  _getInternalNodes() {
    const t = this._internalChannels.slice(0);
    return (
      this._isAudioNode(this.input) && t.push(this.input),
      this._isAudioNode(this.output) &&
        this.input !== this.output &&
        t.push(this.output),
      t
    );
  }
  _setChannelProperties(t) {
    this._getInternalNodes().forEach((e) => {
      (e.channelCount = t.channelCount),
        (e.channelCountMode = t.channelCountMode),
        (e.channelInterpretation = t.channelInterpretation);
    });
  }
  _getChannelProperties() {
    const t = this._getInternalNodes();
    ut(t.length > 0, 'ToneAudioNode does not have any internal nodes');
    const p = t[0];
    return {
      channelCount: p.channelCount,
      channelCountMode: p.channelCountMode,
      channelInterpretation: p.channelInterpretation,
    };
  }
  get channelCount() {
    return this._getChannelProperties().channelCount;
  }
  set channelCount(t) {
    const p = this._getChannelProperties();
    this._setChannelProperties(Object.assign(p, { channelCount: t }));
  }
  get channelCountMode() {
    return this._getChannelProperties().channelCountMode;
  }
  set channelCountMode(t) {
    const p = this._getChannelProperties();
    this._setChannelProperties(Object.assign(p, { channelCountMode: t }));
  }
  get channelInterpretation() {
    return this._getChannelProperties().channelInterpretation;
  }
  set channelInterpretation(t) {
    const p = this._getChannelProperties();
    this._setChannelProperties(Object.assign(p, { channelInterpretation: t }));
  }
  connect(t, p = 0, e = 0) {
    return $n(this, t, p, e), this;
  }
  toDestination() {
    return this.connect(this.context.destination), this;
  }
  toMaster() {
    return (
      El('toMaster() has been renamed toDestination()'), this.toDestination()
    );
  }
  disconnect(t, p = 0, e = 0) {
    return Xp(this, t, p, e), this;
  }
  chain(...t) {
    return Zo(this, ...t), this;
  }
  fan(...t) {
    return t.forEach((p) => this.connect(p)), this;
  }
  dispose() {
    return (
      super.dispose(),
      yt(this.input) &&
        (this.input instanceof dt
          ? this.input.dispose()
          : Qr(this.input) && this.input.disconnect()),
      yt(this.output) &&
        (this.output instanceof dt
          ? this.output.dispose()
          : Qr(this.output) && this.output.disconnect()),
      (this._internalChannels = []),
      this
    );
  }
}
function Zo(...T) {
  const t = T.shift();
  T.reduce(
    (p, e) => (p instanceof dt ? p.connect(e) : Qr(p) && $n(p, e), e),
    t,
  );
}
function $n(T, t, p = 0, e = 0) {
  for (
    ut(yt(T), 'Cannot connect from undefined node'),
      ut(yt(t), 'Cannot connect to undefined node'),
      (t instanceof dt || Qr(t)) &&
        ut(t.numberOfInputs > 0, 'Cannot connect to node with no inputs'),
      ut(T.numberOfOutputs > 0, 'Cannot connect from node with no outputs');
    t instanceof dt || t instanceof Ft;

  )
    yt(t.input) && (t = t.input);
  for (; T instanceof dt; ) yt(T.output) && (T = T.output);
  _n(t) ? T.connect(t, p) : T.connect(t, p, e);
}
function Xp(T, t, p = 0, e = 0) {
  if (yt(t)) for (; t instanceof dt; ) t = t.input;
  for (; !Qr(T); ) yt(T.output) && (T = T.output);
  _n(t) ? T.disconnect(t, p) : Qr(t) ? T.disconnect(t, p, e) : T.disconnect();
}
class sr extends dt {
  constructor() {
    super(Xe(sr.getDefaults(), arguments, ['gain', 'units'])),
      (this.name = 'Gain'),
      (this._gainNode = this.context.createGain()),
      (this.input = this._gainNode),
      (this.output = this._gainNode);
    const t = Xe(sr.getDefaults(), arguments, ['gain', 'units']);
    (this.gain = new Ft({
      context: this.context,
      convert: t.convert,
      param: this._gainNode.gain,
      units: t.units,
      value: t.gain,
      minValue: t.minValue,
      maxValue: t.maxValue,
    })),
      Vt(this, 'gain');
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      convert: !0,
      gain: 1,
      units: 'gain',
    });
  }
  dispose() {
    return (
      super.dispose(), this._gainNode.disconnect(), this.gain.dispose(), this
    );
  }
}
class Vn extends dt {
  constructor(t) {
    super(t),
      (this.onended = Ot),
      (this._startTime = -1),
      (this._stopTime = -1),
      (this._timeout = -1),
      (this.output = new sr({ context: this.context, gain: 0 })),
      (this._gainNode = this.output),
      (this.getStateAtTime = function (p) {
        const e = this.toSeconds(p);
        return this._startTime !== -1 &&
          e >= this._startTime &&
          (this._stopTime === -1 || e <= this._stopTime)
          ? 'started'
          : 'stopped';
      }),
      (this._fadeIn = t.fadeIn),
      (this._fadeOut = t.fadeOut),
      (this._curve = t.curve),
      (this.onended = t.onended);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      curve: 'linear',
      fadeIn: 0,
      fadeOut: 0,
      onended: Ot,
    });
  }
  _startGain(t, p = 1) {
    ut(this._startTime === -1, 'Source cannot be started more than once');
    const e = this.toSeconds(this._fadeIn);
    return (
      (this._startTime = t + e),
      (this._startTime = Math.max(this._startTime, this.context.currentTime)),
      e > 0
        ? (this._gainNode.gain.setValueAtTime(0, t),
          this._curve === 'linear'
            ? this._gainNode.gain.linearRampToValueAtTime(p, t + e)
            : this._gainNode.gain.exponentialApproachValueAtTime(p, t, e))
        : this._gainNode.gain.setValueAtTime(p, t),
      this
    );
  }
  stop(t) {
    return this.log('stop', t), this._stopGain(this.toSeconds(t)), this;
  }
  _stopGain(t) {
    ut(this._startTime !== -1, "'start' must be called before 'stop'"),
      this.cancelStop();
    const p = this.toSeconds(this._fadeOut);
    return (
      (this._stopTime = this.toSeconds(t) + p),
      (this._stopTime = Math.max(this._stopTime, this.context.currentTime)),
      p > 0
        ? this._curve === 'linear'
          ? this._gainNode.gain.linearRampTo(0, p, t)
          : this._gainNode.gain.targetRampTo(0, p, t)
        : (this._gainNode.gain.cancelAndHoldAtTime(t),
          this._gainNode.gain.setValueAtTime(0, t)),
      this.context.clearTimeout(this._timeout),
      (this._timeout = this.context.setTimeout(() => {
        const e = this._curve === 'exponential' ? p * 2 : 0;
        this._stopSource(this.now() + e), this._onended();
      }, this._stopTime - this.context.currentTime)),
      this
    );
  }
  _onended() {
    if (
      this.onended !== Ot &&
      (this.onended(this), (this.onended = Ot), !this.context.isOffline)
    ) {
      const t = () => this.dispose();
      typeof window.requestIdleCallback < 'u'
        ? window.requestIdleCallback(t)
        : setTimeout(t, 1e3);
    }
  }
  get state() {
    return this.getStateAtTime(this.now());
  }
  cancelStop() {
    return (
      this.log('cancelStop'),
      ut(this._startTime !== -1, 'Source is not started'),
      this._gainNode.gain.cancelScheduledValues(
        this._startTime + this.sampleTime,
      ),
      this.context.clearTimeout(this._timeout),
      (this._stopTime = -1),
      this
    );
  }
  dispose() {
    return super.dispose(), this._gainNode.disconnect(), this;
  }
}
class to extends Vn {
  constructor() {
    super(Xe(to.getDefaults(), arguments, ['offset'])),
      (this.name = 'ToneConstantSource'),
      (this._source = this.context.createConstantSource());
    const t = Xe(to.getDefaults(), arguments, ['offset']);
    $n(this._source, this._gainNode),
      (this.offset = new Ft({
        context: this.context,
        convert: t.convert,
        param: this._source.offset,
        units: t.units,
        value: t.offset,
        minValue: t.minValue,
        maxValue: t.maxValue,
      }));
  }
  static getDefaults() {
    return Object.assign(Vn.getDefaults(), {
      convert: !0,
      offset: 1,
      units: 'number',
    });
  }
  start(t) {
    const p = this.toSeconds(t);
    return (
      this.log('start', p), this._startGain(p), this._source.start(p), this
    );
  }
  _stopSource(t) {
    this._source.stop(t);
  }
  dispose() {
    return (
      super.dispose(),
      this.state === 'started' && this.stop(),
      this._source.disconnect(),
      this.offset.dispose(),
      this
    );
  }
}
class Qt extends dt {
  constructor() {
    super(Xe(Qt.getDefaults(), arguments, ['value', 'units'])),
      (this.name = 'Signal'),
      (this.override = !0);
    const t = Xe(Qt.getDefaults(), arguments, ['value', 'units']);
    (this.output = this._constantSource =
      new to({
        context: this.context,
        convert: t.convert,
        offset: t.value,
        units: t.units,
        minValue: t.minValue,
        maxValue: t.maxValue,
      })),
      this._constantSource.start(0),
      (this.input = this._param = this._constantSource.offset);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      convert: !0,
      units: 'number',
      value: 0,
    });
  }
  connect(t, p = 0, e = 0) {
    return bi(this, t, p, e), this;
  }
  dispose() {
    return (
      super.dispose(),
      this._param.dispose(),
      this._constantSource.dispose(),
      this
    );
  }
  setValueAtTime(t, p) {
    return this._param.setValueAtTime(t, p), this;
  }
  getValueAtTime(t) {
    return this._param.getValueAtTime(t);
  }
  setRampPoint(t) {
    return this._param.setRampPoint(t), this;
  }
  linearRampToValueAtTime(t, p) {
    return this._param.linearRampToValueAtTime(t, p), this;
  }
  exponentialRampToValueAtTime(t, p) {
    return this._param.exponentialRampToValueAtTime(t, p), this;
  }
  exponentialRampTo(t, p, e) {
    return this._param.exponentialRampTo(t, p, e), this;
  }
  linearRampTo(t, p, e) {
    return this._param.linearRampTo(t, p, e), this;
  }
  targetRampTo(t, p, e) {
    return this._param.targetRampTo(t, p, e), this;
  }
  exponentialApproachValueAtTime(t, p, e) {
    return this._param.exponentialApproachValueAtTime(t, p, e), this;
  }
  setTargetAtTime(t, p, e) {
    return this._param.setTargetAtTime(t, p, e), this;
  }
  setValueCurveAtTime(t, p, e, v) {
    return this._param.setValueCurveAtTime(t, p, e, v), this;
  }
  cancelScheduledValues(t) {
    return this._param.cancelScheduledValues(t), this;
  }
  cancelAndHoldAtTime(t) {
    return this._param.cancelAndHoldAtTime(t), this;
  }
  rampTo(t, p, e) {
    return this._param.rampTo(t, p, e), this;
  }
  get value() {
    return this._param.value;
  }
  set value(t) {
    this._param.value = t;
  }
  get convert() {
    return this._param.convert;
  }
  set convert(t) {
    this._param.convert = t;
  }
  get units() {
    return this._param.units;
  }
  get overridden() {
    return this._param.overridden;
  }
  set overridden(t) {
    this._param.overridden = t;
  }
  get maxValue() {
    return this._param.maxValue;
  }
  get minValue() {
    return this._param.minValue;
  }
  apply(t) {
    return this._param.apply(t), this;
  }
}
function bi(T, t, p, e) {
  (t instanceof Ft || _n(t) || (t instanceof Qt && t.override)) &&
    (t.cancelScheduledValues(0),
    t.setValueAtTime(0, 0),
    t instanceof Qt && (t.overridden = !0)),
    $n(T, t, p, e);
}
class ro extends Ft {
  constructor() {
    super(Xe(ro.getDefaults(), arguments, ['value'])),
      (this.name = 'TickParam'),
      (this._events = new Rr(1 / 0)),
      (this._multiplier = 1);
    const t = Xe(ro.getDefaults(), arguments, ['value']);
    (this._multiplier = t.multiplier),
      this._events.cancel(0),
      this._events.add({
        ticks: 0,
        time: 0,
        type: 'setValueAtTime',
        value: this._fromType(t.value),
      }),
      this.setValueAtTime(t.value, 0);
  }
  static getDefaults() {
    return Object.assign(Ft.getDefaults(), {
      multiplier: 1,
      units: 'hertz',
      value: 1,
    });
  }
  setTargetAtTime(t, p, e) {
    (p = this.toSeconds(p)), this.setRampPoint(p);
    const v = this._fromType(t),
      y = this._events.get(p),
      m = Math.round(Math.max(1 / e, 1));
    for (let r = 0; r <= m; r++) {
      const c = e * r + p,
        l = this._exponentialApproach(y.time, y.value, v, e, c);
      this.linearRampToValueAtTime(this._toType(l), c);
    }
    return this;
  }
  setValueAtTime(t, p) {
    const e = this.toSeconds(p);
    super.setValueAtTime(t, p);
    const v = this._events.get(e),
      y = this._events.previousEvent(v),
      m = this._getTicksUntilEvent(y, e);
    return (v.ticks = Math.max(m, 0)), this;
  }
  linearRampToValueAtTime(t, p) {
    const e = this.toSeconds(p);
    super.linearRampToValueAtTime(t, p);
    const v = this._events.get(e),
      y = this._events.previousEvent(v),
      m = this._getTicksUntilEvent(y, e);
    return (v.ticks = Math.max(m, 0)), this;
  }
  exponentialRampToValueAtTime(t, p) {
    p = this.toSeconds(p);
    const e = this._fromType(t),
      v = this._events.get(p),
      y = Math.round(Math.max((p - v.time) * 10, 1)),
      m = (p - v.time) / y;
    for (let r = 0; r <= y; r++) {
      const c = m * r + v.time,
        l = this._exponentialInterpolate(v.time, v.value, p, e, c);
      this.linearRampToValueAtTime(this._toType(l), c);
    }
    return this;
  }
  _getTicksUntilEvent(t, p) {
    if (t === null) t = { ticks: 0, time: 0, type: 'setValueAtTime', value: 0 };
    else if (dr(t.ticks)) {
      const m = this._events.previousEvent(t);
      t.ticks = this._getTicksUntilEvent(m, t.time);
    }
    const e = this._fromType(this.getValueAtTime(t.time));
    let v = this._fromType(this.getValueAtTime(p));
    const y = this._events.get(p);
    return (
      y &&
        y.time === p &&
        y.type === 'setValueAtTime' &&
        (v = this._fromType(this.getValueAtTime(p - this.sampleTime))),
      0.5 * (p - t.time) * (e + v) + t.ticks
    );
  }
  getTicksAtTime(t) {
    const p = this.toSeconds(t),
      e = this._events.get(p);
    return Math.max(this._getTicksUntilEvent(e, p), 0);
  }
  getDurationOfTicks(t, p) {
    const e = this.toSeconds(p),
      v = this.getTicksAtTime(p);
    return this.getTimeOfTick(v + t) - e;
  }
  getTimeOfTick(t) {
    const p = this._events.get(t, 'ticks'),
      e = this._events.getAfter(t, 'ticks');
    if (p && p.ticks === t) return p.time;
    if (p && e && e.type === 'linearRampToValueAtTime' && p.value !== e.value) {
      const v = this._fromType(this.getValueAtTime(p.time)),
        m =
          (this._fromType(this.getValueAtTime(e.time)) - v) / (e.time - p.time),
        r = Math.sqrt(Math.pow(v, 2) - 2 * m * (p.ticks - t)),
        c = (-v + r) / m,
        l = (-v - r) / m;
      return (c > 0 ? c : l) + p.time;
    } else
      return p
        ? p.value === 0
          ? 1 / 0
          : p.time + (t - p.ticks) / p.value
        : t / this._initialValue;
  }
  ticksToTime(t, p) {
    return this.getDurationOfTicks(t, p);
  }
  timeToTicks(t, p) {
    const e = this.toSeconds(p),
      v = this.toSeconds(t),
      y = this.getTicksAtTime(e);
    return this.getTicksAtTime(e + v) - y;
  }
  _fromType(t) {
    return this.units === 'bpm' && this.multiplier
      ? 1 / (60 / t / this.multiplier)
      : super._fromType(t);
  }
  _toType(t) {
    return this.units === 'bpm' && this.multiplier
      ? (t / this.multiplier) * 60
      : super._toType(t);
  }
  get multiplier() {
    return this._multiplier;
  }
  set multiplier(t) {
    const p = this.value;
    (this._multiplier = t),
      this.cancelScheduledValues(0),
      this.setValueAtTime(p, 0);
  }
}
class no extends Qt {
  constructor() {
    super(Xe(no.getDefaults(), arguments, ['value'])),
      (this.name = 'TickSignal');
    const t = Xe(no.getDefaults(), arguments, ['value']);
    this.input = this._param = new ro({
      context: this.context,
      convert: t.convert,
      multiplier: t.multiplier,
      param: this._constantSource.offset,
      units: t.units,
      value: t.value,
    });
  }
  static getDefaults() {
    return Object.assign(Qt.getDefaults(), {
      multiplier: 1,
      units: 'hertz',
      value: 1,
    });
  }
  ticksToTime(t, p) {
    return this._param.ticksToTime(t, p);
  }
  timeToTicks(t, p) {
    return this._param.timeToTicks(t, p);
  }
  getTimeOfTick(t) {
    return this._param.getTimeOfTick(t);
  }
  getDurationOfTicks(t, p) {
    return this._param.getDurationOfTicks(t, p);
  }
  getTicksAtTime(t) {
    return this._param.getTicksAtTime(t);
  }
  get multiplier() {
    return this._param.multiplier;
  }
  set multiplier(t) {
    this._param.multiplier = t;
  }
  dispose() {
    return super.dispose(), this._param.dispose(), this;
  }
}
class so extends ar {
  constructor() {
    super(Xe(so.getDefaults(), arguments, ['frequency'])),
      (this.name = 'TickSource'),
      (this._state = new vi()),
      (this._tickOffset = new Rr());
    const t = Xe(so.getDefaults(), arguments, ['frequency']);
    (this.frequency = new no({
      context: this.context,
      units: t.units,
      value: t.frequency,
    })),
      Vt(this, 'frequency'),
      this._state.setStateAtTime('stopped', 0),
      this.setTicksAtTime(0, 0);
  }
  static getDefaults() {
    return Object.assign({ frequency: 1, units: 'hertz' }, ar.getDefaults());
  }
  get state() {
    return this.getStateAtTime(this.now());
  }
  start(t, p) {
    const e = this.toSeconds(t);
    return (
      this._state.getValueAtTime(e) !== 'started' &&
        (this._state.setStateAtTime('started', e),
        yt(p) && this.setTicksAtTime(p, e)),
      this
    );
  }
  stop(t) {
    const p = this.toSeconds(t);
    if (this._state.getValueAtTime(p) === 'stopped') {
      const e = this._state.get(p);
      e &&
        e.time > 0 &&
        (this._tickOffset.cancel(e.time), this._state.cancel(e.time));
    }
    return (
      this._state.cancel(p),
      this._state.setStateAtTime('stopped', p),
      this.setTicksAtTime(0, p),
      this
    );
  }
  pause(t) {
    const p = this.toSeconds(t);
    return (
      this._state.getValueAtTime(p) === 'started' &&
        this._state.setStateAtTime('paused', p),
      this
    );
  }
  cancel(t) {
    return (
      (t = this.toSeconds(t)),
      this._state.cancel(t),
      this._tickOffset.cancel(t),
      this
    );
  }
  getTicksAtTime(t) {
    const p = this.toSeconds(t),
      e = this._state.getLastState('stopped', p),
      v = { state: 'paused', time: p };
    this._state.add(v);
    let y = e,
      m = 0;
    return (
      this._state.forEachBetween(e.time, p + this.sampleTime, (r) => {
        let c = y.time;
        const l = this._tickOffset.get(r.time);
        l && l.time >= y.time && ((m = l.ticks), (c = l.time)),
          y.state === 'started' &&
            r.state !== 'started' &&
            (m +=
              this.frequency.getTicksAtTime(r.time) -
              this.frequency.getTicksAtTime(c)),
          (y = r);
      }),
      this._state.remove(v),
      m
    );
  }
  get ticks() {
    return this.getTicksAtTime(this.now());
  }
  set ticks(t) {
    this.setTicksAtTime(t, this.now());
  }
  get seconds() {
    return this.getSecondsAtTime(this.now());
  }
  set seconds(t) {
    const p = this.now(),
      e = this.frequency.timeToTicks(t, p);
    this.setTicksAtTime(e, p);
  }
  getSecondsAtTime(t) {
    t = this.toSeconds(t);
    const p = this._state.getLastState('stopped', t),
      e = { state: 'paused', time: t };
    this._state.add(e);
    let v = p,
      y = 0;
    return (
      this._state.forEachBetween(p.time, t + this.sampleTime, (m) => {
        let r = v.time;
        const c = this._tickOffset.get(m.time);
        c && c.time >= v.time && ((y = c.seconds), (r = c.time)),
          v.state === 'started' && m.state !== 'started' && (y += m.time - r),
          (v = m);
      }),
      this._state.remove(e),
      y
    );
  }
  setTicksAtTime(t, p) {
    return (
      (p = this.toSeconds(p)),
      this._tickOffset.cancel(p),
      this._tickOffset.add({
        seconds: this.frequency.getDurationOfTicks(t, p),
        ticks: t,
        time: p,
      }),
      this
    );
  }
  getStateAtTime(t) {
    return (t = this.toSeconds(t)), this._state.getValueAtTime(t);
  }
  getTimeOfTick(t, p = this.now()) {
    const e = this._tickOffset.get(p),
      v = this._state.get(p),
      y = Math.max(e.time, v.time),
      m = this.frequency.getTicksAtTime(y) + t - e.ticks;
    return this.frequency.getTimeOfTick(m);
  }
  forEachTickBetween(t, p, e) {
    let v = this._state.get(t);
    this._state.forEachBetween(t, p, (m) => {
      v &&
        v.state === 'started' &&
        m.state !== 'started' &&
        this.forEachTickBetween(
          Math.max(v.time, t),
          m.time - this.sampleTime,
          e,
        ),
        (v = m);
    });
    let y = null;
    if (v && v.state === 'started') {
      const m = Math.max(v.time, t),
        r = this.frequency.getTicksAtTime(m),
        c = this.frequency.getTicksAtTime(v.time),
        l = r - c;
      let h = Math.ceil(l) - l;
      h = mr(h, 1) ? 0 : h;
      let u = this.frequency.getTimeOfTick(r + h);
      for (; u < p; ) {
        try {
          e(u, Math.round(this.getTicksAtTime(u)));
        } catch (o) {
          y = o;
          break;
        }
        u += this.frequency.getDurationOfTicks(1, u);
      }
    }
    if (y) throw y;
    return this;
  }
  dispose() {
    return (
      super.dispose(),
      this._state.dispose(),
      this._tickOffset.dispose(),
      this.frequency.dispose(),
      this
    );
  }
}
class us extends ar {
  constructor() {
    super(Xe(us.getDefaults(), arguments, ['callback', 'frequency'])),
      (this.name = 'Clock'),
      (this.callback = Ot),
      (this._lastUpdate = 0),
      (this._state = new vi('stopped')),
      (this._boundLoop = this._loop.bind(this));
    const t = Xe(us.getDefaults(), arguments, ['callback', 'frequency']);
    (this.callback = t.callback),
      (this._tickSource = new so({
        context: this.context,
        frequency: t.frequency,
        units: t.units,
      })),
      (this._lastUpdate = 0),
      (this.frequency = this._tickSource.frequency),
      Vt(this, 'frequency'),
      this._state.setStateAtTime('stopped', 0),
      this.context.on('tick', this._boundLoop);
  }
  static getDefaults() {
    return Object.assign(ar.getDefaults(), {
      callback: Ot,
      frequency: 1,
      units: 'hertz',
    });
  }
  get state() {
    return this._state.getValueAtTime(this.now());
  }
  start(t, p) {
    jl(this.context);
    const e = this.toSeconds(t);
    return (
      this.log('start', e),
      this._state.getValueAtTime(e) !== 'started' &&
        (this._state.setStateAtTime('started', e),
        this._tickSource.start(e, p),
        e < this._lastUpdate && this.emit('start', e, p)),
      this
    );
  }
  stop(t) {
    const p = this.toSeconds(t);
    return (
      this.log('stop', p),
      this._state.cancel(p),
      this._state.setStateAtTime('stopped', p),
      this._tickSource.stop(p),
      p < this._lastUpdate && this.emit('stop', p),
      this
    );
  }
  pause(t) {
    const p = this.toSeconds(t);
    return (
      this._state.getValueAtTime(p) === 'started' &&
        (this._state.setStateAtTime('paused', p),
        this._tickSource.pause(p),
        p < this._lastUpdate && this.emit('pause', p)),
      this
    );
  }
  get ticks() {
    return Math.ceil(this.getTicksAtTime(this.now()));
  }
  set ticks(t) {
    this._tickSource.ticks = t;
  }
  get seconds() {
    return this._tickSource.seconds;
  }
  set seconds(t) {
    this._tickSource.seconds = t;
  }
  getSecondsAtTime(t) {
    return this._tickSource.getSecondsAtTime(t);
  }
  setTicksAtTime(t, p) {
    return this._tickSource.setTicksAtTime(t, p), this;
  }
  getTimeOfTick(t, p = this.now()) {
    return this._tickSource.getTimeOfTick(t, p);
  }
  getTicksAtTime(t) {
    return this._tickSource.getTicksAtTime(t);
  }
  nextTickTime(t, p) {
    const e = this.toSeconds(p),
      v = this.getTicksAtTime(e);
    return this._tickSource.getTimeOfTick(v + t, e);
  }
  _loop() {
    const t = this._lastUpdate,
      p = this.now();
    (this._lastUpdate = p),
      this.log('loop', t, p),
      t !== p &&
        (this._state.forEachBetween(t, p, (e) => {
          switch (e.state) {
            case 'started':
              const v = this._tickSource.getTicksAtTime(e.time);
              this.emit('start', e.time, v);
              break;
            case 'stopped':
              e.time !== 0 && this.emit('stop', e.time);
              break;
            case 'paused':
              this.emit('pause', e.time);
              break;
          }
        }),
        this._tickSource.forEachTickBetween(t, p, (e, v) => {
          this.callback(e, v);
        }));
  }
  getStateAtTime(t) {
    const p = this.toSeconds(t);
    return this._state.getValueAtTime(p);
  }
  dispose() {
    return (
      super.dispose(),
      this.context.off('tick', this._boundLoop),
      this._tickSource.dispose(),
      this._state.dispose(),
      this
    );
  }
}
Os.mixin(us);
class _i extends Vr {
  constructor() {
    super(),
      (this.name = 'ToneAudioBuffers'),
      (this._buffers = new Map()),
      (this._loadingCount = 0);
    const t = Xe(
      _i.getDefaults(),
      arguments,
      ['urls', 'onload', 'baseUrl'],
      'urls',
    );
    (this.baseUrl = t.baseUrl),
      Object.keys(t.urls).forEach((p) => {
        this._loadingCount++;
        const e = t.urls[p];
        this.add(p, e, this._bufferLoaded.bind(this, t.onload), t.onerror);
      });
  }
  static getDefaults() {
    return { baseUrl: '', onerror: Ot, onload: Ot, urls: {} };
  }
  has(t) {
    return this._buffers.has(t.toString());
  }
  get(t) {
    return (
      ut(this.has(t), `ToneAudioBuffers has no buffer named: ${t}`),
      this._buffers.get(t.toString())
    );
  }
  _bufferLoaded(t) {
    this._loadingCount--, this._loadingCount === 0 && t && t();
  }
  get loaded() {
    return Array.from(this._buffers).every(([t, p]) => p.loaded);
  }
  add(t, p, e = Ot, v = Ot) {
    return (
      Or(p)
        ? this._buffers.set(t.toString(), new kt(this.baseUrl + p, e, v))
        : this._buffers.set(t.toString(), new kt(p, e, v)),
      this
    );
  }
  dispose() {
    return (
      super.dispose(),
      this._buffers.forEach((t) => t.dispose()),
      this._buffers.clear(),
      this
    );
  }
}
class Fr extends os {
  constructor() {
    super(...arguments), (this.name = 'Ticks'), (this.defaultUnits = 'i');
  }
  _now() {
    return this.context.transport.ticks;
  }
  _beatsToUnits(t) {
    return this._getPPQ() * t;
  }
  _secondsToUnits(t) {
    return Math.floor((t / (60 / this._getBpm())) * this._getPPQ());
  }
  _ticksToUnits(t) {
    return t;
  }
  toTicks() {
    return this.valueOf();
  }
  toSeconds() {
    return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());
  }
}
class Yp extends ar {
  constructor() {
    super(...arguments),
      (this.name = 'Draw'),
      (this.expiration = 0.25),
      (this.anticipation = 0.008),
      (this._events = new Rr()),
      (this._boundDrawLoop = this._drawLoop.bind(this)),
      (this._animationFrame = -1);
  }
  schedule(t, p) {
    return (
      this._events.add({ callback: t, time: this.toSeconds(p) }),
      this._events.length === 1 &&
        (this._animationFrame = requestAnimationFrame(this._boundDrawLoop)),
      this
    );
  }
  cancel(t) {
    return this._events.cancel(this.toSeconds(t)), this;
  }
  _drawLoop() {
    const t = this.context.currentTime;
    for (
      ;
      this._events.length && this._events.peek().time - this.anticipation <= t;

    ) {
      const p = this._events.shift();
      p && t - p.time <= this.expiration && p.callback();
    }
    this._events.length > 0 &&
      (this._animationFrame = requestAnimationFrame(this._boundDrawLoop));
  }
  dispose() {
    return (
      super.dispose(),
      this._events.dispose(),
      cancelAnimationFrame(this._animationFrame),
      this
    );
  }
}
wo((T) => {
  T.draw = new Yp({ context: T });
});
xo((T) => {
  T.draw.dispose();
});
class Zp extends Vr {
  constructor() {
    super(...arguments),
      (this.name = 'IntervalTimeline'),
      (this._root = null),
      (this._length = 0);
  }
  add(t) {
    ut(yt(t.time), 'Events must have a time property'),
      ut(yt(t.duration), 'Events must have a duration parameter'),
      (t.time = t.time.valueOf());
    let p = new $p(t.time, t.time + t.duration, t);
    for (
      this._root === null ? (this._root = p) : this._root.insert(p),
        this._length++;
      p !== null;

    )
      p.updateHeight(), p.updateMax(), this._rebalance(p), (p = p.parent);
    return this;
  }
  remove(t) {
    if (this._root !== null) {
      const p = [];
      this._root.search(t.time, p);
      for (const e of p)
        if (e.event === t) {
          this._removeNode(e), this._length--;
          break;
        }
    }
    return this;
  }
  get length() {
    return this._length;
  }
  cancel(t) {
    return this.forEachFrom(t, (p) => this.remove(p)), this;
  }
  _setRoot(t) {
    (this._root = t), this._root !== null && (this._root.parent = null);
  }
  _replaceNodeInParent(t, p) {
    t.parent !== null
      ? (t.isLeftChild() ? (t.parent.left = p) : (t.parent.right = p),
        this._rebalance(t.parent))
      : this._setRoot(p);
  }
  _removeNode(t) {
    if (t.left === null && t.right === null) this._replaceNodeInParent(t, null);
    else if (t.right === null) this._replaceNodeInParent(t, t.left);
    else if (t.left === null) this._replaceNodeInParent(t, t.right);
    else {
      const p = t.getBalance();
      let e,
        v = null;
      if (p > 0)
        if (t.left.right === null) (e = t.left), (e.right = t.right), (v = e);
        else {
          for (e = t.left.right; e.right !== null; ) e = e.right;
          e.parent &&
            ((e.parent.right = e.left),
            (v = e.parent),
            (e.left = t.left),
            (e.right = t.right));
        }
      else if (t.right.left === null) (e = t.right), (e.left = t.left), (v = e);
      else {
        for (e = t.right.left; e.left !== null; ) e = e.left;
        e.parent &&
          ((e.parent.left = e.right),
          (v = e.parent),
          (e.left = t.left),
          (e.right = t.right));
      }
      t.parent !== null
        ? t.isLeftChild()
          ? (t.parent.left = e)
          : (t.parent.right = e)
        : this._setRoot(e),
        v && this._rebalance(v);
    }
    t.dispose();
  }
  _rotateLeft(t) {
    const p = t.parent,
      e = t.isLeftChild(),
      v = t.right;
    v && ((t.right = v.left), (v.left = t)),
      p !== null ? (e ? (p.left = v) : (p.right = v)) : this._setRoot(v);
  }
  _rotateRight(t) {
    const p = t.parent,
      e = t.isLeftChild(),
      v = t.left;
    v && ((t.left = v.right), (v.right = t)),
      p !== null ? (e ? (p.left = v) : (p.right = v)) : this._setRoot(v);
  }
  _rebalance(t) {
    const p = t.getBalance();
    p > 1 && t.left
      ? t.left.getBalance() < 0
        ? this._rotateLeft(t.left)
        : this._rotateRight(t)
      : p < -1 &&
        t.right &&
        (t.right.getBalance() > 0
          ? this._rotateRight(t.right)
          : this._rotateLeft(t));
  }
  get(t) {
    if (this._root !== null) {
      const p = [];
      if ((this._root.search(t, p), p.length > 0)) {
        let e = p[0];
        for (let v = 1; v < p.length; v++) p[v].low > e.low && (e = p[v]);
        return e.event;
      }
    }
    return null;
  }
  forEach(t) {
    if (this._root !== null) {
      const p = [];
      this._root.traverse((e) => p.push(e)),
        p.forEach((e) => {
          e.event && t(e.event);
        });
    }
    return this;
  }
  forEachAtTime(t, p) {
    if (this._root !== null) {
      const e = [];
      this._root.search(t, e),
        e.forEach((v) => {
          v.event && p(v.event);
        });
    }
    return this;
  }
  forEachFrom(t, p) {
    if (this._root !== null) {
      const e = [];
      this._root.searchAfter(t, e),
        e.forEach((v) => {
          v.event && p(v.event);
        });
    }
    return this;
  }
  dispose() {
    return (
      super.dispose(),
      this._root !== null && this._root.traverse((t) => t.dispose()),
      (this._root = null),
      this
    );
  }
}
class $p {
  constructor(t, p, e) {
    (this._left = null),
      (this._right = null),
      (this.parent = null),
      (this.height = 0),
      (this.event = e),
      (this.low = t),
      (this.high = p),
      (this.max = this.high);
  }
  insert(t) {
    t.low <= this.low
      ? this.left === null
        ? (this.left = t)
        : this.left.insert(t)
      : this.right === null
      ? (this.right = t)
      : this.right.insert(t);
  }
  search(t, p) {
    t > this.max ||
      (this.left !== null && this.left.search(t, p),
      this.low <= t && this.high > t && p.push(this),
      !(this.low > t) && this.right !== null && this.right.search(t, p));
  }
  searchAfter(t, p) {
    this.low >= t &&
      (p.push(this), this.left !== null && this.left.searchAfter(t, p)),
      this.right !== null && this.right.searchAfter(t, p);
  }
  traverse(t) {
    t(this),
      this.left !== null && this.left.traverse(t),
      this.right !== null && this.right.traverse(t);
  }
  updateHeight() {
    this.left !== null && this.right !== null
      ? (this.height = Math.max(this.left.height, this.right.height) + 1)
      : this.right !== null
      ? (this.height = this.right.height + 1)
      : this.left !== null
      ? (this.height = this.left.height + 1)
      : (this.height = 0);
  }
  updateMax() {
    (this.max = this.high),
      this.left !== null && (this.max = Math.max(this.max, this.left.max)),
      this.right !== null && (this.max = Math.max(this.max, this.right.max));
  }
  getBalance() {
    let t = 0;
    return (
      this.left !== null && this.right !== null
        ? (t = this.left.height - this.right.height)
        : this.left !== null
        ? (t = this.left.height + 1)
        : this.right !== null && (t = -(this.right.height + 1)),
      t
    );
  }
  isLeftChild() {
    return this.parent !== null && this.parent.left === this;
  }
  get left() {
    return this._left;
  }
  set left(t) {
    (this._left = t),
      t !== null && (t.parent = this),
      this.updateHeight(),
      this.updateMax();
  }
  get right() {
    return this._right;
  }
  set right(t) {
    (this._right = t),
      t !== null && (t.parent = this),
      this.updateHeight(),
      this.updateMax();
  }
  dispose() {
    (this.parent = null),
      (this._left = null),
      (this._right = null),
      (this.event = null);
  }
}
class wn extends dt {
  constructor() {
    super(Xe(wn.getDefaults(), arguments, ['volume'])), (this.name = 'Volume');
    const t = Xe(wn.getDefaults(), arguments, ['volume']);
    (this.input = this.output =
      new sr({ context: this.context, gain: t.volume, units: 'decibels' })),
      (this.volume = this.output.gain),
      Vt(this, 'volume'),
      (this._unmutedVolume = t.volume),
      (this.mute = t.mute);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { mute: !1, volume: 0 });
  }
  get mute() {
    return this.volume.value === -1 / 0;
  }
  set mute(t) {
    !this.mute && t
      ? ((this._unmutedVolume = this.volume.value),
        (this.volume.value = -1 / 0))
      : this.mute && !t && (this.volume.value = this._unmutedVolume);
  }
  dispose() {
    return super.dispose(), this.input.dispose(), this.volume.dispose(), this;
  }
}
class oo extends dt {
  constructor() {
    super(Xe(oo.getDefaults(), arguments)),
      (this.name = 'Destination'),
      (this.input = new wn({ context: this.context })),
      (this.output = new sr({ context: this.context })),
      (this.volume = this.input.volume);
    const t = Xe(oo.getDefaults(), arguments);
    Zo(this.input, this.output, this.context.rawContext.destination),
      (this.mute = t.mute),
      (this._internalChannels = [
        this.input,
        this.context.rawContext.destination,
        this.output,
      ]);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { mute: !1, volume: 0 });
  }
  get mute() {
    return this.input.mute;
  }
  set mute(t) {
    this.input.mute = t;
  }
  chain(...t) {
    return (
      this.input.disconnect(),
      t.unshift(this.input),
      t.push(this.output),
      Zo(...t),
      this
    );
  }
  get maxChannelCount() {
    return this.context.rawContext.destination.maxChannelCount;
  }
  dispose() {
    return super.dispose(), this.volume.dispose(), this;
  }
}
wo((T) => {
  T.destination = new oo({ context: T });
});
xo((T) => {
  T.destination.dispose();
});
class Qp extends Vr {
  constructor(t) {
    super(),
      (this.name = 'TimelineValue'),
      (this._timeline = new Rr({ memory: 10 })),
      (this._initialValue = t);
  }
  set(t, p) {
    return this._timeline.add({ value: t, time: p }), this;
  }
  get(t) {
    const p = this._timeline.get(t);
    return p ? p.value : this._initialValue;
  }
}
class Kr {
  constructor(t, p) {
    this.id = Kr._eventId++;
    const e = Object.assign(Kr.getDefaults(), p);
    (this.transport = t),
      (this.callback = e.callback),
      (this._once = e.once),
      (this.time = e.time);
  }
  static getDefaults() {
    return { callback: Ot, once: !1, time: 0 };
  }
  invoke(t) {
    this.callback &&
      (this.callback(t), this._once && this.transport.clear(this.id));
  }
  dispose() {
    return (this.callback = void 0), this;
  }
}
Kr._eventId = 0;
class wi extends Kr {
  constructor(t, p) {
    super(t, p),
      (this._currentId = -1),
      (this._nextId = -1),
      (this._nextTick = this.time),
      (this._boundRestart = this._restart.bind(this));
    const e = Object.assign(wi.getDefaults(), p);
    (this.duration = new Fr(t.context, e.duration).valueOf()),
      (this._interval = new Fr(t.context, e.interval).valueOf()),
      (this._nextTick = e.time),
      this.transport.on('start', this._boundRestart),
      this.transport.on('loopStart', this._boundRestart),
      (this.context = this.transport.context),
      this._restart();
  }
  static getDefaults() {
    return Object.assign({}, Kr.getDefaults(), {
      duration: 1 / 0,
      interval: 1,
      once: !1,
    });
  }
  invoke(t) {
    this._createEvents(t), super.invoke(t);
  }
  _createEvents(t) {
    const p = this.transport.getTicksAtTime(t);
    p >= this.time &&
      p >= this._nextTick &&
      this._nextTick + this._interval < this.time + this.duration &&
      ((this._nextTick += this._interval),
      (this._currentId = this._nextId),
      (this._nextId = this.transport.scheduleOnce(
        this.invoke.bind(this),
        new Fr(this.context, this._nextTick).toSeconds(),
      )));
  }
  _restart(t) {
    this.transport.clear(this._currentId),
      this.transport.clear(this._nextId),
      (this._nextTick = this.time);
    const p = this.transport.getTicksAtTime(t);
    p > this.time &&
      (this._nextTick =
        this.time +
        Math.ceil((p - this.time) / this._interval) * this._interval),
      (this._currentId = this.transport.scheduleOnce(
        this.invoke.bind(this),
        new Fr(this.context, this._nextTick).toSeconds(),
      )),
      (this._nextTick += this._interval),
      (this._nextId = this.transport.scheduleOnce(
        this.invoke.bind(this),
        new Fr(this.context, this._nextTick).toSeconds(),
      ));
  }
  dispose() {
    return (
      super.dispose(),
      this.transport.clear(this._currentId),
      this.transport.clear(this._nextId),
      this.transport.off('start', this._boundRestart),
      this.transport.off('loopStart', this._boundRestart),
      this
    );
  }
}
class cs extends ar {
  constructor() {
    super(Xe(cs.getDefaults(), arguments)),
      (this.name = 'Transport'),
      (this._loop = new Qp(!1)),
      (this._loopStart = 0),
      (this._loopEnd = 0),
      (this._scheduledEvents = {}),
      (this._timeline = new Rr()),
      (this._repeatedEvents = new Zp()),
      (this._syncedSignals = []),
      (this._swingAmount = 0);
    const t = Xe(cs.getDefaults(), arguments);
    (this._ppq = t.ppq),
      (this._clock = new us({
        callback: this._processTick.bind(this),
        context: this.context,
        frequency: 0,
        units: 'bpm',
      })),
      this._bindClockEvents(),
      (this.bpm = this._clock.frequency),
      (this._clock.frequency.multiplier = t.ppq),
      this.bpm.setValueAtTime(t.bpm, 0),
      Vt(this, 'bpm'),
      (this._timeSignature = t.timeSignature),
      (this._swingTicks = t.ppq / 2);
  }
  static getDefaults() {
    return Object.assign(ar.getDefaults(), {
      bpm: 120,
      loopEnd: '4m',
      loopStart: 0,
      ppq: 192,
      swing: 0,
      swingSubdivision: '8n',
      timeSignature: 4,
    });
  }
  _processTick(t, p) {
    if (
      (this._loop.get(t) &&
        p >= this._loopEnd &&
        (this.emit('loopEnd', t),
        this._clock.setTicksAtTime(this._loopStart, t),
        (p = this._loopStart),
        this.emit('loopStart', t, this._clock.getSecondsAtTime(t)),
        this.emit('loop', t)),
      this._swingAmount > 0 &&
        p % this._ppq !== 0 &&
        p % (this._swingTicks * 2) !== 0)
    ) {
      const e = (p % (this._swingTicks * 2)) / (this._swingTicks * 2),
        v = Math.sin(e * Math.PI) * this._swingAmount;
      t += new Fr(this.context, (this._swingTicks * 2) / 3).toSeconds() * v;
    }
    this._timeline.forEachAtTime(p, (e) => e.invoke(t));
  }
  schedule(t, p) {
    const e = new Kr(this, {
      callback: t,
      time: new os(this.context, p).toTicks(),
    });
    return this._addEvent(e, this._timeline);
  }
  scheduleRepeat(t, p, e, v = 1 / 0) {
    const y = new wi(this, {
      callback: t,
      duration: new gr(this.context, v).toTicks(),
      interval: new gr(this.context, p).toTicks(),
      time: new os(this.context, e).toTicks(),
    });
    return this._addEvent(y, this._repeatedEvents);
  }
  scheduleOnce(t, p) {
    const e = new Kr(this, {
      callback: t,
      once: !0,
      time: new os(this.context, p).toTicks(),
    });
    return this._addEvent(e, this._timeline);
  }
  clear(t) {
    if (this._scheduledEvents.hasOwnProperty(t)) {
      const p = this._scheduledEvents[t.toString()];
      p.timeline.remove(p.event),
        p.event.dispose(),
        delete this._scheduledEvents[t.toString()];
    }
    return this;
  }
  _addEvent(t, p) {
    return (
      (this._scheduledEvents[t.id.toString()] = { event: t, timeline: p }),
      p.add(t),
      t.id
    );
  }
  cancel(t = 0) {
    const p = this.toTicks(t);
    return (
      this._timeline.forEachFrom(p, (e) => this.clear(e.id)),
      this._repeatedEvents.forEachFrom(p, (e) => this.clear(e.id)),
      this
    );
  }
  _bindClockEvents() {
    this._clock.on('start', (t, p) => {
      (p = new Fr(this.context, p).toSeconds()), this.emit('start', t, p);
    }),
      this._clock.on('stop', (t) => {
        this.emit('stop', t);
      }),
      this._clock.on('pause', (t) => {
        this.emit('pause', t);
      });
  }
  get state() {
    return this._clock.getStateAtTime(this.now());
  }
  start(t, p) {
    let e;
    return yt(p) && (e = this.toTicks(p)), this._clock.start(t, e), this;
  }
  stop(t) {
    return this._clock.stop(t), this;
  }
  pause(t) {
    return this._clock.pause(t), this;
  }
  toggle(t) {
    return (
      (t = this.toSeconds(t)),
      this._clock.getStateAtTime(t) !== 'started'
        ? this.start(t)
        : this.stop(t),
      this
    );
  }
  get timeSignature() {
    return this._timeSignature;
  }
  set timeSignature(t) {
    vr(t) && (t = (t[0] / t[1]) * 4), (this._timeSignature = t);
  }
  get loopStart() {
    return new gr(this.context, this._loopStart, 'i').toSeconds();
  }
  set loopStart(t) {
    this._loopStart = this.toTicks(t);
  }
  get loopEnd() {
    return new gr(this.context, this._loopEnd, 'i').toSeconds();
  }
  set loopEnd(t) {
    this._loopEnd = this.toTicks(t);
  }
  get loop() {
    return this._loop.get(this.now());
  }
  set loop(t) {
    this._loop.set(t, this.now());
  }
  setLoopPoints(t, p) {
    return (this.loopStart = t), (this.loopEnd = p), this;
  }
  get swing() {
    return this._swingAmount;
  }
  set swing(t) {
    this._swingAmount = t;
  }
  get swingSubdivision() {
    return new Fr(this.context, this._swingTicks).toNotation();
  }
  set swingSubdivision(t) {
    this._swingTicks = this.toTicks(t);
  }
  get position() {
    const t = this.now(),
      p = this._clock.getTicksAtTime(t);
    return new Fr(this.context, p).toBarsBeatsSixteenths();
  }
  set position(t) {
    const p = this.toTicks(t);
    this.ticks = p;
  }
  get seconds() {
    return this._clock.seconds;
  }
  set seconds(t) {
    const p = this.now(),
      e = this._clock.frequency.timeToTicks(t, p);
    this.ticks = e;
  }
  get progress() {
    if (this.loop) {
      const t = this.now();
      return (
        (this._clock.getTicksAtTime(t) - this._loopStart) /
        (this._loopEnd - this._loopStart)
      );
    } else return 0;
  }
  get ticks() {
    return this._clock.ticks;
  }
  set ticks(t) {
    if (this._clock.ticks !== t) {
      const p = this.now();
      if (this.state === 'started') {
        const e = this._clock.getTicksAtTime(p),
          v = this._clock.frequency.getDurationOfTicks(Math.ceil(e) - e, p),
          y = p + v;
        this.emit('stop', y),
          this._clock.setTicksAtTime(t, y),
          this.emit('start', y, this._clock.getSecondsAtTime(y));
      } else this._clock.setTicksAtTime(t, p);
    }
  }
  getTicksAtTime(t) {
    return Math.round(this._clock.getTicksAtTime(t));
  }
  getSecondsAtTime(t) {
    return this._clock.getSecondsAtTime(t);
  }
  get PPQ() {
    return this._clock.frequency.multiplier;
  }
  set PPQ(t) {
    this._clock.frequency.multiplier = t;
  }
  nextSubdivision(t) {
    if (((t = this.toTicks(t)), this.state !== 'started')) return 0;
    {
      const p = this.now(),
        e = this.getTicksAtTime(p),
        v = t - (e % t);
      return this._clock.nextTickTime(v, p);
    }
  }
  syncSignal(t, p) {
    if (!p) {
      const v = this.now();
      if (t.getValueAtTime(v) !== 0) {
        const y = this.bpm.getValueAtTime(v),
          m = 1 / (60 / y / this.PPQ);
        p = t.getValueAtTime(v) / m;
      } else p = 0;
    }
    const e = new sr(p);
    return (
      this.bpm.connect(e),
      e.connect(t._param),
      this._syncedSignals.push({ initial: t.value, ratio: e, signal: t }),
      (t.value = 0),
      this
    );
  }
  unsyncSignal(t) {
    for (let p = this._syncedSignals.length - 1; p >= 0; p--) {
      const e = this._syncedSignals[p];
      e.signal === t &&
        (e.ratio.dispose(),
        (e.signal.value = e.initial),
        this._syncedSignals.splice(p, 1));
    }
    return this;
  }
  dispose() {
    return (
      super.dispose(),
      this._clock.dispose(),
      Rl(this, 'bpm'),
      this._timeline.dispose(),
      this._repeatedEvents.dispose(),
      this
    );
  }
}
Os.mixin(cs);
wo((T) => {
  T.transport = new cs({ context: T });
});
xo((T) => {
  T.transport.dispose();
});
class ur extends dt {
  constructor(t) {
    super(t),
      (this.input = void 0),
      (this._state = new vi('stopped')),
      (this._synced = !1),
      (this._scheduled = []),
      (this._syncedStart = Ot),
      (this._syncedStop = Ot),
      (this._state.memory = 100),
      (this._state.increasing = !0),
      (this._volume = this.output =
        new wn({ context: this.context, mute: t.mute, volume: t.volume })),
      (this.volume = this._volume.volume),
      Vt(this, 'volume'),
      (this.onstop = t.onstop);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { mute: !1, onstop: Ot, volume: 0 });
  }
  get state() {
    return this._synced
      ? this.context.transport.state === 'started'
        ? this._state.getValueAtTime(this.context.transport.seconds)
        : 'stopped'
      : this._state.getValueAtTime(this.now());
  }
  get mute() {
    return this._volume.mute;
  }
  set mute(t) {
    this._volume.mute = t;
  }
  _clampToCurrentTime(t) {
    return this._synced ? t : Math.max(t, this.context.currentTime);
  }
  start(t, p, e) {
    let v =
      dr(t) && this._synced
        ? this.context.transport.seconds
        : this.toSeconds(t);
    if (
      ((v = this._clampToCurrentTime(v)),
      !this._synced && this._state.getValueAtTime(v) === 'started')
    )
      ut(
        eo(v, this._state.get(v).time),
        'Start time must be strictly greater than previous start time',
      ),
        this._state.cancel(v),
        this._state.setStateAtTime('started', v),
        this.log('restart', v),
        this.restart(v, p, e);
    else if (
      (this.log('start', v),
      this._state.setStateAtTime('started', v),
      this._synced)
    ) {
      const y = this._state.get(v);
      y &&
        ((y.offset = this.toSeconds(Fn(p, 0))),
        (y.duration = e ? this.toSeconds(e) : void 0));
      const m = this.context.transport.schedule((r) => {
        this._start(r, p, e);
      }, v);
      this._scheduled.push(m),
        this.context.transport.state === 'started' &&
          this.context.transport.getSecondsAtTime(this.immediate()) > v &&
          this._syncedStart(this.now(), this.context.transport.seconds);
    } else jl(this.context), this._start(v, p, e);
    return this;
  }
  stop(t) {
    let p =
      dr(t) && this._synced
        ? this.context.transport.seconds
        : this.toSeconds(t);
    if (
      ((p = this._clampToCurrentTime(p)),
      this._state.getValueAtTime(p) === 'started' ||
        yt(this._state.getNextState('started', p)))
    ) {
      if ((this.log('stop', p), !this._synced)) this._stop(p);
      else {
        const e = this.context.transport.schedule(this._stop.bind(this), p);
        this._scheduled.push(e);
      }
      this._state.cancel(p), this._state.setStateAtTime('stopped', p);
    }
    return this;
  }
  restart(t, p, e) {
    return (
      (t = this.toSeconds(t)),
      this._state.getValueAtTime(t) === 'started' &&
        (this._state.cancel(t), this._restart(t, p, e)),
      this
    );
  }
  sync() {
    return (
      this._synced ||
        ((this._synced = !0),
        (this._syncedStart = (t, p) => {
          if (p > 0) {
            const e = this._state.get(p);
            if (e && e.state === 'started' && e.time !== p) {
              const v = p - this.toSeconds(e.time);
              let y;
              e.duration && (y = this.toSeconds(e.duration) - v),
                this._start(t, this.toSeconds(e.offset) + v, y);
            }
          }
        }),
        (this._syncedStop = (t) => {
          const p = this.context.transport.getSecondsAtTime(
            Math.max(t - this.sampleTime, 0),
          );
          this._state.getValueAtTime(p) === 'started' && this._stop(t);
        }),
        this.context.transport.on('start', this._syncedStart),
        this.context.transport.on('loopStart', this._syncedStart),
        this.context.transport.on('stop', this._syncedStop),
        this.context.transport.on('pause', this._syncedStop),
        this.context.transport.on('loopEnd', this._syncedStop)),
      this
    );
  }
  unsync() {
    return (
      this._synced &&
        (this.context.transport.off('stop', this._syncedStop),
        this.context.transport.off('pause', this._syncedStop),
        this.context.transport.off('loopEnd', this._syncedStop),
        this.context.transport.off('start', this._syncedStart),
        this.context.transport.off('loopStart', this._syncedStart)),
      (this._synced = !1),
      this._scheduled.forEach((t) => this.context.transport.clear(t)),
      (this._scheduled = []),
      this._state.cancel(0),
      this._stop(0),
      this
    );
  }
  dispose() {
    return (
      super.dispose(),
      (this.onstop = Ot),
      this.unsync(),
      this._volume.dispose(),
      this._state.dispose(),
      this
    );
  }
}
class hs extends Vn {
  constructor() {
    super(Xe(hs.getDefaults(), arguments, ['url', 'onload'])),
      (this.name = 'ToneBufferSource'),
      (this._source = this.context.createBufferSource()),
      (this._internalChannels = [this._source]),
      (this._sourceStarted = !1),
      (this._sourceStopped = !1);
    const t = Xe(hs.getDefaults(), arguments, ['url', 'onload']);
    $n(this._source, this._gainNode),
      (this._source.onended = () => this._stopSource()),
      (this.playbackRate = new Ft({
        context: this.context,
        param: this._source.playbackRate,
        units: 'positive',
        value: t.playbackRate,
      })),
      (this.loop = t.loop),
      (this.loopStart = t.loopStart),
      (this.loopEnd = t.loopEnd),
      (this._buffer = new kt(t.url, t.onload, t.onerror)),
      this._internalChannels.push(this._source);
  }
  static getDefaults() {
    return Object.assign(Vn.getDefaults(), {
      url: new kt(),
      loop: !1,
      loopEnd: 0,
      loopStart: 0,
      onload: Ot,
      onerror: Ot,
      playbackRate: 1,
    });
  }
  get fadeIn() {
    return this._fadeIn;
  }
  set fadeIn(t) {
    this._fadeIn = t;
  }
  get fadeOut() {
    return this._fadeOut;
  }
  set fadeOut(t) {
    this._fadeOut = t;
  }
  get curve() {
    return this._curve;
  }
  set curve(t) {
    this._curve = t;
  }
  start(t, p, e, v = 1) {
    ut(this.buffer.loaded, 'buffer is either not set or not loaded');
    const y = this.toSeconds(t);
    this._startGain(y, v),
      this.loop ? (p = Fn(p, this.loopStart)) : (p = Fn(p, 0));
    let m = Math.max(this.toSeconds(p), 0);
    if (this.loop) {
      const r = this.toSeconds(this.loopEnd) || this.buffer.duration,
        c = this.toSeconds(this.loopStart),
        l = r - c;
      Xo(m, r) && (m = ((m - c) % l) + c),
        mr(m, this.buffer.duration) && (m = 0);
    }
    if (
      ((this._source.buffer = this.buffer.get()),
      (this._source.loopEnd =
        this.toSeconds(this.loopEnd) || this.buffer.duration),
      Ol(m, this.buffer.duration) &&
        ((this._sourceStarted = !0), this._source.start(y, m)),
      yt(e))
    ) {
      let r = this.toSeconds(e);
      (r = Math.max(r, 0)), this.stop(y + r);
    }
    return this;
  }
  _stopSource(t) {
    !this._sourceStopped &&
      this._sourceStarted &&
      ((this._sourceStopped = !0),
      this._source.stop(this.toSeconds(t)),
      this._onended());
  }
  get loopStart() {
    return this._source.loopStart;
  }
  set loopStart(t) {
    this._source.loopStart = this.toSeconds(t);
  }
  get loopEnd() {
    return this._source.loopEnd;
  }
  set loopEnd(t) {
    this._source.loopEnd = this.toSeconds(t);
  }
  get buffer() {
    return this._buffer;
  }
  set buffer(t) {
    this._buffer.set(t);
  }
  get loop() {
    return this._source.loop;
  }
  set loop(t) {
    (this._source.loop = t), this._sourceStarted && this.cancelStop();
  }
  dispose() {
    return (
      super.dispose(),
      (this._source.onended = null),
      this._source.disconnect(),
      this._buffer.dispose(),
      this.playbackRate.dispose(),
      this
    );
  }
}
function En(T, t) {
  return Zt(this, void 0, void 0, function* () {
    const p = t / T.context.sampleRate,
      e = new yi(1, p, T.context.sampleRate);
    return (
      new T.constructor(
        Object.assign(T.get(), { frequency: 2 / p, detune: 0, context: e }),
      )
        .toDestination()
        .start(0),
      (yield e.render()).getChannelData(0)
    );
  });
}
class io extends Vn {
  constructor() {
    super(Xe(io.getDefaults(), arguments, ['frequency', 'type'])),
      (this.name = 'ToneOscillatorNode'),
      (this._oscillator = this.context.createOscillator()),
      (this._internalChannels = [this._oscillator]);
    const t = Xe(io.getDefaults(), arguments, ['frequency', 'type']);
    $n(this._oscillator, this._gainNode),
      (this.type = t.type),
      (this.frequency = new Ft({
        context: this.context,
        param: this._oscillator.frequency,
        units: 'frequency',
        value: t.frequency,
      })),
      (this.detune = new Ft({
        context: this.context,
        param: this._oscillator.detune,
        units: 'cents',
        value: t.detune,
      })),
      Vt(this, ['frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(Vn.getDefaults(), {
      detune: 0,
      frequency: 440,
      type: 'sine',
    });
  }
  start(t) {
    const p = this.toSeconds(t);
    return (
      this.log('start', p), this._startGain(p), this._oscillator.start(p), this
    );
  }
  _stopSource(t) {
    this._oscillator.stop(t);
  }
  setPeriodicWave(t) {
    return this._oscillator.setPeriodicWave(t), this;
  }
  get type() {
    return this._oscillator.type;
  }
  set type(t) {
    this._oscillator.type = t;
  }
  dispose() {
    return (
      super.dispose(),
      this.state === 'started' && this.stop(),
      this._oscillator.disconnect(),
      this.frequency.dispose(),
      this.detune.dispose(),
      this
    );
  }
}
class zt extends ur {
  constructor() {
    super(Xe(zt.getDefaults(), arguments, ['frequency', 'type'])),
      (this.name = 'Oscillator'),
      (this._oscillator = null);
    const t = Xe(zt.getDefaults(), arguments, ['frequency', 'type']);
    (this.frequency = new Qt({
      context: this.context,
      units: 'frequency',
      value: t.frequency,
    })),
      Vt(this, 'frequency'),
      (this.detune = new Qt({
        context: this.context,
        units: 'cents',
        value: t.detune,
      })),
      Vt(this, 'detune'),
      (this._partials = t.partials),
      (this._partialCount = t.partialCount),
      (this._type = t.type),
      t.partialCount &&
        t.type !== 'custom' &&
        (this._type = this.baseType + t.partialCount.toString()),
      (this.phase = t.phase);
  }
  static getDefaults() {
    return Object.assign(ur.getDefaults(), {
      detune: 0,
      frequency: 440,
      partialCount: 0,
      partials: [],
      phase: 0,
      type: 'sine',
    });
  }
  _start(t) {
    const p = this.toSeconds(t),
      e = new io({ context: this.context, onended: () => this.onstop(this) });
    (this._oscillator = e),
      this._wave
        ? this._oscillator.setPeriodicWave(this._wave)
        : (this._oscillator.type = this._type),
      this._oscillator.connect(this.output),
      this.frequency.connect(this._oscillator.frequency),
      this.detune.connect(this._oscillator.detune),
      this._oscillator.start(p);
  }
  _stop(t) {
    const p = this.toSeconds(t);
    this._oscillator && this._oscillator.stop(p);
  }
  _restart(t) {
    const p = this.toSeconds(t);
    return (
      this.log('restart', p),
      this._oscillator && this._oscillator.cancelStop(),
      this._state.cancel(p),
      this
    );
  }
  syncFrequency() {
    return this.context.transport.syncSignal(this.frequency), this;
  }
  unsyncFrequency() {
    return this.context.transport.unsyncSignal(this.frequency), this;
  }
  _getCachedPeriodicWave() {
    if (this._type === 'custom')
      return zt._periodicWaveCache.find(
        (p) => p.phase === this._phase && Pp(p.partials, this._partials),
      );
    {
      const t = zt._periodicWaveCache.find(
        (p) => p.type === this._type && p.phase === this._phase,
      );
      return (this._partialCount = t ? t.partialCount : this._partialCount), t;
    }
  }
  get type() {
    return this._type;
  }
  set type(t) {
    this._type = t;
    const p = ['sine', 'square', 'sawtooth', 'triangle'].indexOf(t) !== -1;
    if (this._phase === 0 && p)
      (this._wave = void 0),
        (this._partialCount = 0),
        this._oscillator !== null && (this._oscillator.type = t);
    else {
      const e = this._getCachedPeriodicWave();
      if (yt(e)) {
        const { partials: v, wave: y } = e;
        (this._wave = y),
          (this._partials = v),
          this._oscillator !== null &&
            this._oscillator.setPeriodicWave(this._wave);
      } else {
        const [v, y] = this._getRealImaginary(t, this._phase),
          m = this.context.createPeriodicWave(v, y);
        (this._wave = m),
          this._oscillator !== null &&
            this._oscillator.setPeriodicWave(this._wave),
          zt._periodicWaveCache.push({
            imag: y,
            partialCount: this._partialCount,
            partials: this._partials,
            phase: this._phase,
            real: v,
            type: this._type,
            wave: this._wave,
          }),
          zt._periodicWaveCache.length > 100 && zt._periodicWaveCache.shift();
      }
    }
  }
  get baseType() {
    return this._type.replace(this.partialCount.toString(), '');
  }
  set baseType(t) {
    this.partialCount && this._type !== 'custom' && t !== 'custom'
      ? (this.type = t + this.partialCount)
      : (this.type = t);
  }
  get partialCount() {
    return this._partialCount;
  }
  set partialCount(t) {
    Jr(t, 0);
    let p = this._type;
    const e = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);
    if ((e && (p = e[1]), this._type !== 'custom'))
      t === 0 ? (this.type = p) : (this.type = p + t.toString());
    else {
      const v = new Float32Array(t);
      this._partials.forEach((y, m) => (v[m] = y)),
        (this._partials = Array.from(v)),
        (this.type = this._type);
    }
  }
  _getRealImaginary(t, p) {
    let v = 2048;
    const y = new Float32Array(v),
      m = new Float32Array(v);
    let r = 1;
    if (t === 'custom') {
      if (
        ((r = this._partials.length + 1),
        (this._partialCount = this._partials.length),
        (v = r),
        this._partials.length === 0)
      )
        return [y, m];
    } else {
      const c = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);
      c
        ? ((r = parseInt(c[2], 10) + 1),
          (this._partialCount = parseInt(c[2], 10)),
          (t = c[1]),
          (r = Math.max(r, 2)),
          (v = r))
        : (this._partialCount = 0),
        (this._partials = []);
    }
    for (let c = 1; c < v; ++c) {
      const l = 2 / (c * Math.PI);
      let h;
      switch (t) {
        case 'sine':
          (h = c <= r ? 1 : 0), (this._partials[c - 1] = h);
          break;
        case 'square':
          (h = c & 1 ? 2 * l : 0), (this._partials[c - 1] = h);
          break;
        case 'sawtooth':
          (h = l * (c & 1 ? 1 : -1)), (this._partials[c - 1] = h);
          break;
        case 'triangle':
          c & 1 ? (h = 2 * (l * l) * (((c - 1) >> 1) & 1 ? -1 : 1)) : (h = 0),
            (this._partials[c - 1] = h);
          break;
        case 'custom':
          h = this._partials[c - 1];
          break;
        default:
          throw new TypeError('Oscillator: invalid type: ' + t);
      }
      h !== 0
        ? ((y[c] = -h * Math.sin(p * c)), (m[c] = h * Math.cos(p * c)))
        : ((y[c] = 0), (m[c] = 0));
    }
    return [y, m];
  }
  _inverseFFT(t, p, e) {
    let v = 0;
    const y = t.length;
    for (let m = 0; m < y; m++)
      v += t[m] * Math.cos(m * e) + p[m] * Math.sin(m * e);
    return v;
  }
  getInitialValue() {
    const [t, p] = this._getRealImaginary(this._type, 0);
    let e = 0;
    const v = Math.PI * 2,
      y = 32;
    for (let m = 0; m < y; m++)
      e = Math.max(this._inverseFFT(t, p, (m / y) * v), e);
    return Dp(-this._inverseFFT(t, p, this._phase) / e, -1, 1);
  }
  get partials() {
    return this._partials.slice(0, this.partialCount);
  }
  set partials(t) {
    (this._partials = t),
      (this._partialCount = this._partials.length),
      t.length && (this.type = 'custom');
  }
  get phase() {
    return this._phase * (180 / Math.PI);
  }
  set phase(t) {
    (this._phase = (t * Math.PI) / 180), (this.type = this._type);
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      return En(this, t);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this._oscillator !== null && this._oscillator.dispose(),
      (this._wave = void 0),
      this.frequency.dispose(),
      this.detune.dispose(),
      this
    );
  }
}
zt._periodicWaveCache = [];
class To extends dt {
  constructor() {
    super(Object.assign(Xe(To.getDefaults(), arguments, ['context'])));
  }
  connect(t, p = 0, e = 0) {
    return bi(this, t, p, e), this;
  }
}
class ds extends To {
  constructor() {
    super(
      Object.assign(Xe(ds.getDefaults(), arguments, ['mapping', 'length'])),
    ),
      (this.name = 'WaveShaper'),
      (this._shaper = this.context.createWaveShaper()),
      (this.input = this._shaper),
      (this.output = this._shaper);
    const t = Xe(ds.getDefaults(), arguments, ['mapping', 'length']);
    vr(t.mapping) || t.mapping instanceof Float32Array
      ? (this.curve = Float32Array.from(t.mapping))
      : Tp(t.mapping) && this.setMap(t.mapping, t.length);
  }
  static getDefaults() {
    return Object.assign(Qt.getDefaults(), { length: 1024 });
  }
  setMap(t, p = 1024) {
    const e = new Float32Array(p);
    for (let v = 0, y = p; v < y; v++) {
      const m = (v / (y - 1)) * 2 - 1;
      e[v] = t(m, v);
    }
    return (this.curve = e), this;
  }
  get curve() {
    return this._shaper.curve;
  }
  set curve(t) {
    this._shaper.curve = t;
  }
  get oversample() {
    return this._shaper.oversample;
  }
  set oversample(t) {
    const p = ['none', '2x', '4x'].some((e) => e.includes(t));
    ut(p, "oversampling must be either 'none', '2x', or '4x'"),
      (this._shaper.oversample = t);
  }
  dispose() {
    return super.dispose(), this._shaper.disconnect(), this;
  }
}
class Jp extends To {
  constructor() {
    super(...arguments),
      (this.name = 'AudioToGain'),
      (this._norm = new ds({
        context: this.context,
        mapping: (t) => (t + 1) / 2,
      })),
      (this.input = this._norm),
      (this.output = this._norm);
  }
  dispose() {
    return super.dispose(), this._norm.dispose(), this;
  }
}
class xn extends Qt {
  constructor() {
    super(Object.assign(Xe(xn.getDefaults(), arguments, ['value']))),
      (this.name = 'Multiply'),
      (this.override = !1);
    const t = Xe(xn.getDefaults(), arguments, ['value']);
    (this._mult =
      this.input =
      this.output =
        new sr({
          context: this.context,
          minValue: t.minValue,
          maxValue: t.maxValue,
        })),
      (this.factor = this._param = this._mult.gain),
      this.factor.setValueAtTime(t.value, 0);
  }
  static getDefaults() {
    return Object.assign(Qt.getDefaults(), { value: 0 });
  }
  dispose() {
    return super.dispose(), this._mult.dispose(), this;
  }
}
class fs extends ur {
  constructor() {
    super(
      Xe(fs.getDefaults(), arguments, ['frequency', 'type', 'modulationType']),
    ),
      (this.name = 'AMOscillator'),
      (this._modulationScale = new Jp({ context: this.context })),
      (this._modulationNode = new sr({ context: this.context }));
    const t = Xe(fs.getDefaults(), arguments, [
      'frequency',
      'type',
      'modulationType',
    ]);
    (this._carrier = new zt({
      context: this.context,
      detune: t.detune,
      frequency: t.frequency,
      onstop: () => this.onstop(this),
      phase: t.phase,
      type: t.type,
    })),
      (this.frequency = this._carrier.frequency),
      (this.detune = this._carrier.detune),
      (this._modulator = new zt({
        context: this.context,
        phase: t.phase,
        type: t.modulationType,
      })),
      (this.harmonicity = new xn({
        context: this.context,
        units: 'positive',
        value: t.harmonicity,
      })),
      this.frequency.chain(this.harmonicity, this._modulator.frequency),
      this._modulator.chain(this._modulationScale, this._modulationNode.gain),
      this._carrier.chain(this._modulationNode, this.output),
      Vt(this, ['frequency', 'detune', 'harmonicity']);
  }
  static getDefaults() {
    return Object.assign(zt.getDefaults(), {
      harmonicity: 1,
      modulationType: 'square',
    });
  }
  _start(t) {
    this._modulator.start(t), this._carrier.start(t);
  }
  _stop(t) {
    this._modulator.stop(t), this._carrier.stop(t);
  }
  _restart(t) {
    this._modulator.restart(t), this._carrier.restart(t);
  }
  get type() {
    return this._carrier.type;
  }
  set type(t) {
    this._carrier.type = t;
  }
  get baseType() {
    return this._carrier.baseType;
  }
  set baseType(t) {
    this._carrier.baseType = t;
  }
  get partialCount() {
    return this._carrier.partialCount;
  }
  set partialCount(t) {
    this._carrier.partialCount = t;
  }
  get modulationType() {
    return this._modulator.type;
  }
  set modulationType(t) {
    this._modulator.type = t;
  }
  get phase() {
    return this._carrier.phase;
  }
  set phase(t) {
    (this._carrier.phase = t), (this._modulator.phase = t);
  }
  get partials() {
    return this._carrier.partials;
  }
  set partials(t) {
    this._carrier.partials = t;
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      return En(this, t);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.frequency.dispose(),
      this.detune.dispose(),
      this.harmonicity.dispose(),
      this._carrier.dispose(),
      this._modulator.dispose(),
      this._modulationNode.dispose(),
      this._modulationScale.dispose(),
      this
    );
  }
}
class ps extends ur {
  constructor() {
    super(
      Xe(ps.getDefaults(), arguments, ['frequency', 'type', 'modulationType']),
    ),
      (this.name = 'FMOscillator'),
      (this._modulationNode = new sr({ context: this.context, gain: 0 }));
    const t = Xe(ps.getDefaults(), arguments, [
      'frequency',
      'type',
      'modulationType',
    ]);
    (this._carrier = new zt({
      context: this.context,
      detune: t.detune,
      frequency: 0,
      onstop: () => this.onstop(this),
      phase: t.phase,
      type: t.type,
    })),
      (this.detune = this._carrier.detune),
      (this.frequency = new Qt({
        context: this.context,
        units: 'frequency',
        value: t.frequency,
      })),
      (this._modulator = new zt({
        context: this.context,
        phase: t.phase,
        type: t.modulationType,
      })),
      (this.harmonicity = new xn({
        context: this.context,
        units: 'positive',
        value: t.harmonicity,
      })),
      (this.modulationIndex = new xn({
        context: this.context,
        units: 'positive',
        value: t.modulationIndex,
      })),
      this.frequency.connect(this._carrier.frequency),
      this.frequency.chain(this.harmonicity, this._modulator.frequency),
      this.frequency.chain(this.modulationIndex, this._modulationNode),
      this._modulator.connect(this._modulationNode.gain),
      this._modulationNode.connect(this._carrier.frequency),
      this._carrier.connect(this.output),
      this.detune.connect(this._modulator.detune),
      Vt(this, ['modulationIndex', 'frequency', 'detune', 'harmonicity']);
  }
  static getDefaults() {
    return Object.assign(zt.getDefaults(), {
      harmonicity: 1,
      modulationIndex: 2,
      modulationType: 'square',
    });
  }
  _start(t) {
    this._modulator.start(t), this._carrier.start(t);
  }
  _stop(t) {
    this._modulator.stop(t), this._carrier.stop(t);
  }
  _restart(t) {
    return this._modulator.restart(t), this._carrier.restart(t), this;
  }
  get type() {
    return this._carrier.type;
  }
  set type(t) {
    this._carrier.type = t;
  }
  get baseType() {
    return this._carrier.baseType;
  }
  set baseType(t) {
    this._carrier.baseType = t;
  }
  get partialCount() {
    return this._carrier.partialCount;
  }
  set partialCount(t) {
    this._carrier.partialCount = t;
  }
  get modulationType() {
    return this._modulator.type;
  }
  set modulationType(t) {
    this._modulator.type = t;
  }
  get phase() {
    return this._carrier.phase;
  }
  set phase(t) {
    (this._carrier.phase = t), (this._modulator.phase = t);
  }
  get partials() {
    return this._carrier.partials;
  }
  set partials(t) {
    this._carrier.partials = t;
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      return En(this, t);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.frequency.dispose(),
      this.harmonicity.dispose(),
      this._carrier.dispose(),
      this._modulator.dispose(),
      this._modulationNode.dispose(),
      this.modulationIndex.dispose(),
      this
    );
  }
}
class Wn extends ur {
  constructor() {
    super(Xe(Wn.getDefaults(), arguments, ['frequency', 'width'])),
      (this.name = 'PulseOscillator'),
      (this._widthGate = new sr({ context: this.context, gain: 0 })),
      (this._thresh = new ds({
        context: this.context,
        mapping: (p) => (p <= 0 ? -1 : 1),
      }));
    const t = Xe(Wn.getDefaults(), arguments, ['frequency', 'width']);
    (this.width = new Qt({
      context: this.context,
      units: 'audioRange',
      value: t.width,
    })),
      (this._triangle = new zt({
        context: this.context,
        detune: t.detune,
        frequency: t.frequency,
        onstop: () => this.onstop(this),
        phase: t.phase,
        type: 'triangle',
      })),
      (this.frequency = this._triangle.frequency),
      (this.detune = this._triangle.detune),
      this._triangle.chain(this._thresh, this.output),
      this.width.chain(this._widthGate, this._thresh),
      Vt(this, ['width', 'frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(ur.getDefaults(), {
      detune: 0,
      frequency: 440,
      phase: 0,
      type: 'pulse',
      width: 0.2,
    });
  }
  _start(t) {
    (t = this.toSeconds(t)),
      this._triangle.start(t),
      this._widthGate.gain.setValueAtTime(1, t);
  }
  _stop(t) {
    (t = this.toSeconds(t)),
      this._triangle.stop(t),
      this._widthGate.gain.cancelScheduledValues(t),
      this._widthGate.gain.setValueAtTime(0, t);
  }
  _restart(t) {
    this._triangle.restart(t),
      this._widthGate.gain.cancelScheduledValues(t),
      this._widthGate.gain.setValueAtTime(1, t);
  }
  get phase() {
    return this._triangle.phase;
  }
  set phase(t) {
    this._triangle.phase = t;
  }
  get type() {
    return 'pulse';
  }
  get baseType() {
    return 'pulse';
  }
  get partials() {
    return [];
  }
  get partialCount() {
    return 0;
  }
  set carrierType(t) {
    this._triangle.type = t;
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      return En(this, t);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this._triangle.dispose(),
      this.width.dispose(),
      this._widthGate.dispose(),
      this._thresh.dispose(),
      this
    );
  }
}
class ms extends ur {
  constructor() {
    super(Xe(ms.getDefaults(), arguments, ['frequency', 'type', 'spread'])),
      (this.name = 'FatOscillator'),
      (this._oscillators = []);
    const t = Xe(ms.getDefaults(), arguments, ['frequency', 'type', 'spread']);
    (this.frequency = new Qt({
      context: this.context,
      units: 'frequency',
      value: t.frequency,
    })),
      (this.detune = new Qt({
        context: this.context,
        units: 'cents',
        value: t.detune,
      })),
      (this._spread = t.spread),
      (this._type = t.type),
      (this._phase = t.phase),
      (this._partials = t.partials),
      (this._partialCount = t.partialCount),
      (this.count = t.count),
      Vt(this, ['frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(zt.getDefaults(), {
      count: 3,
      spread: 20,
      type: 'sawtooth',
    });
  }
  _start(t) {
    (t = this.toSeconds(t)), this._forEach((p) => p.start(t));
  }
  _stop(t) {
    (t = this.toSeconds(t)), this._forEach((p) => p.stop(t));
  }
  _restart(t) {
    this._forEach((p) => p.restart(t));
  }
  _forEach(t) {
    for (let p = 0; p < this._oscillators.length; p++)
      t(this._oscillators[p], p);
  }
  get type() {
    return this._type;
  }
  set type(t) {
    (this._type = t), this._forEach((p) => (p.type = t));
  }
  get spread() {
    return this._spread;
  }
  set spread(t) {
    if (((this._spread = t), this._oscillators.length > 1)) {
      const p = -t / 2,
        e = t / (this._oscillators.length - 1);
      this._forEach((v, y) => (v.detune.value = p + e * y));
    }
  }
  get count() {
    return this._oscillators.length;
  }
  set count(t) {
    if ((Jr(t, 1), this._oscillators.length !== t)) {
      this._forEach((p) => p.dispose()), (this._oscillators = []);
      for (let p = 0; p < t; p++) {
        const e = new zt({
          context: this.context,
          volume: -6 - t * 1.1,
          type: this._type,
          phase: this._phase + (p / t) * 360,
          partialCount: this._partialCount,
          onstop: p === 0 ? () => this.onstop(this) : Ot,
        });
        this.type === 'custom' && (e.partials = this._partials),
          this.frequency.connect(e.frequency),
          this.detune.connect(e.detune),
          (e.detune.overridden = !1),
          e.connect(this.output),
          (this._oscillators[p] = e);
      }
      (this.spread = this._spread),
        this.state === 'started' && this._forEach((p) => p.start());
    }
  }
  get phase() {
    return this._phase;
  }
  set phase(t) {
    (this._phase = t),
      this._forEach((p, e) => (p.phase = this._phase + (e / this.count) * 360));
  }
  get baseType() {
    return this._oscillators[0].baseType;
  }
  set baseType(t) {
    this._forEach((p) => (p.baseType = t)),
      (this._type = this._oscillators[0].type);
  }
  get partials() {
    return this._oscillators[0].partials;
  }
  set partials(t) {
    (this._partials = t),
      (this._partialCount = this._partials.length),
      t.length &&
        ((this._type = 'custom'), this._forEach((p) => (p.partials = t)));
  }
  get partialCount() {
    return this._oscillators[0].partialCount;
  }
  set partialCount(t) {
    (this._partialCount = t),
      this._forEach((p) => (p.partialCount = t)),
      (this._type = this._oscillators[0].type);
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      return En(this, t);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.frequency.dispose(),
      this.detune.dispose(),
      this._forEach((t) => t.dispose()),
      this
    );
  }
}
class ys extends ur {
  constructor() {
    super(
      Xe(ys.getDefaults(), arguments, ['frequency', 'modulationFrequency']),
    ),
      (this.name = 'PWMOscillator'),
      (this.sourceType = 'pwm'),
      (this._scale = new xn({ context: this.context, value: 2 }));
    const t = Xe(ys.getDefaults(), arguments, [
      'frequency',
      'modulationFrequency',
    ]);
    (this._pulse = new Wn({
      context: this.context,
      frequency: t.modulationFrequency,
    })),
      (this._pulse.carrierType = 'sine'),
      (this.modulationFrequency = this._pulse.frequency),
      (this._modulator = new zt({
        context: this.context,
        detune: t.detune,
        frequency: t.frequency,
        onstop: () => this.onstop(this),
        phase: t.phase,
      })),
      (this.frequency = this._modulator.frequency),
      (this.detune = this._modulator.detune),
      this._modulator.chain(this._scale, this._pulse.width),
      this._pulse.connect(this.output),
      Vt(this, ['modulationFrequency', 'frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(ur.getDefaults(), {
      detune: 0,
      frequency: 440,
      modulationFrequency: 0.4,
      phase: 0,
      type: 'pwm',
    });
  }
  _start(t) {
    (t = this.toSeconds(t)), this._modulator.start(t), this._pulse.start(t);
  }
  _stop(t) {
    (t = this.toSeconds(t)), this._modulator.stop(t), this._pulse.stop(t);
  }
  _restart(t) {
    this._modulator.restart(t), this._pulse.restart(t);
  }
  get type() {
    return 'pwm';
  }
  get baseType() {
    return 'pwm';
  }
  get partials() {
    return [];
  }
  get partialCount() {
    return 0;
  }
  get phase() {
    return this._modulator.phase;
  }
  set phase(t) {
    this._modulator.phase = t;
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      return En(this, t);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this._pulse.dispose(),
      this._scale.dispose(),
      this._modulator.dispose(),
      this
    );
  }
}
const Aa = { am: fs, fat: ms, fm: ps, oscillator: zt, pulse: Wn, pwm: ys };
class gs extends ur {
  constructor() {
    super(Xe(gs.getDefaults(), arguments, ['frequency', 'type'])),
      (this.name = 'OmniOscillator');
    const t = Xe(gs.getDefaults(), arguments, ['frequency', 'type']);
    (this.frequency = new Qt({
      context: this.context,
      units: 'frequency',
      value: t.frequency,
    })),
      (this.detune = new Qt({
        context: this.context,
        units: 'cents',
        value: t.detune,
      })),
      Vt(this, ['frequency', 'detune']),
      this.set(t);
  }
  static getDefaults() {
    return Object.assign(
      zt.getDefaults(),
      ps.getDefaults(),
      fs.getDefaults(),
      ms.getDefaults(),
      Wn.getDefaults(),
      ys.getDefaults(),
    );
  }
  _start(t) {
    this._oscillator.start(t);
  }
  _stop(t) {
    this._oscillator.stop(t);
  }
  _restart(t) {
    return this._oscillator.restart(t), this;
  }
  get type() {
    let t = '';
    return (
      ['am', 'fm', 'fat'].some((p) => this._sourceType === p) &&
        (t = this._sourceType),
      t + this._oscillator.type
    );
  }
  set type(t) {
    t.substr(0, 2) === 'fm'
      ? (this._createNewOscillator('fm'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = t.substr(2)))
      : t.substr(0, 2) === 'am'
      ? (this._createNewOscillator('am'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = t.substr(2)))
      : t.substr(0, 3) === 'fat'
      ? (this._createNewOscillator('fat'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = t.substr(3)))
      : t === 'pwm'
      ? (this._createNewOscillator('pwm'),
        (this._oscillator = this._oscillator))
      : t === 'pulse'
      ? this._createNewOscillator('pulse')
      : (this._createNewOscillator('oscillator'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = t));
  }
  get partials() {
    return this._oscillator.partials;
  }
  set partials(t) {
    !this._getOscType(this._oscillator, 'pulse') &&
      !this._getOscType(this._oscillator, 'pwm') &&
      (this._oscillator.partials = t);
  }
  get partialCount() {
    return this._oscillator.partialCount;
  }
  set partialCount(t) {
    !this._getOscType(this._oscillator, 'pulse') &&
      !this._getOscType(this._oscillator, 'pwm') &&
      (this._oscillator.partialCount = t);
  }
  set(t) {
    return (
      Reflect.has(t, 'type') && t.type && (this.type = t.type),
      super.set(t),
      this
    );
  }
  _createNewOscillator(t) {
    if (t !== this._sourceType) {
      this._sourceType = t;
      const p = Aa[t],
        e = this.now();
      if (this._oscillator) {
        const v = this._oscillator;
        v.stop(e), this.context.setTimeout(() => v.dispose(), this.blockTime);
      }
      (this._oscillator = new p({ context: this.context })),
        this.frequency.connect(this._oscillator.frequency),
        this.detune.connect(this._oscillator.detune),
        this._oscillator.connect(this.output),
        (this._oscillator.onstop = () => this.onstop(this)),
        this.state === 'started' && this._oscillator.start(e);
    }
  }
  get phase() {
    return this._oscillator.phase;
  }
  set phase(t) {
    this._oscillator.phase = t;
  }
  get sourceType() {
    return this._sourceType;
  }
  set sourceType(t) {
    let p = 'sine';
    this._oscillator.type !== 'pwm' &&
      this._oscillator.type !== 'pulse' &&
      (p = this._oscillator.type),
      t === 'fm'
        ? (this.type = 'fm' + p)
        : t === 'am'
        ? (this.type = 'am' + p)
        : t === 'fat'
        ? (this.type = 'fat' + p)
        : t === 'oscillator'
        ? (this.type = p)
        : t === 'pulse'
        ? (this.type = 'pulse')
        : t === 'pwm' && (this.type = 'pwm');
  }
  _getOscType(t, p) {
    return t instanceof Aa[p];
  }
  get baseType() {
    return this._oscillator.baseType;
  }
  set baseType(t) {
    !this._getOscType(this._oscillator, 'pulse') &&
      !this._getOscType(this._oscillator, 'pwm') &&
      t !== 'pulse' &&
      t !== 'pwm' &&
      (this._oscillator.baseType = t);
  }
  get width() {
    if (this._getOscType(this._oscillator, 'pulse'))
      return this._oscillator.width;
  }
  get count() {
    if (this._getOscType(this._oscillator, 'fat'))
      return this._oscillator.count;
  }
  set count(t) {
    this._getOscType(this._oscillator, 'fat') &&
      bn(t) &&
      (this._oscillator.count = t);
  }
  get spread() {
    if (this._getOscType(this._oscillator, 'fat'))
      return this._oscillator.spread;
  }
  set spread(t) {
    this._getOscType(this._oscillator, 'fat') &&
      bn(t) &&
      (this._oscillator.spread = t);
  }
  get modulationType() {
    if (
      this._getOscType(this._oscillator, 'fm') ||
      this._getOscType(this._oscillator, 'am')
    )
      return this._oscillator.modulationType;
  }
  set modulationType(t) {
    (this._getOscType(this._oscillator, 'fm') ||
      this._getOscType(this._oscillator, 'am')) &&
      Or(t) &&
      (this._oscillator.modulationType = t);
  }
  get modulationIndex() {
    if (this._getOscType(this._oscillator, 'fm'))
      return this._oscillator.modulationIndex;
  }
  get harmonicity() {
    if (
      this._getOscType(this._oscillator, 'fm') ||
      this._getOscType(this._oscillator, 'am')
    )
      return this._oscillator.harmonicity;
  }
  get modulationFrequency() {
    if (this._getOscType(this._oscillator, 'pwm'))
      return this._oscillator.modulationFrequency;
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      return En(this, t);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.detune.dispose(),
      this.frequency.dispose(),
      this._oscillator.dispose(),
      this
    );
  }
}
function Nl(T, t = 1 / 0) {
  const p = new WeakMap();
  return function (e, v) {
    Reflect.defineProperty(e, v, {
      configurable: !0,
      enumerable: !0,
      get: function () {
        return p.get(this);
      },
      set: function (y) {
        Jr(y, T, t), p.set(this, y);
      },
    });
  };
}
function Wr(T, t = 1 / 0) {
  const p = new WeakMap();
  return function (e, v) {
    Reflect.defineProperty(e, v, {
      configurable: !0,
      enumerable: !0,
      get: function () {
        return p.get(this);
      },
      set: function (y) {
        Jr(this.toSeconds(y), T, t), p.set(this, y);
      },
    });
  };
}
class qn extends ur {
  constructor() {
    super(Xe(qn.getDefaults(), arguments, ['url', 'onload'])),
      (this.name = 'Player'),
      (this._activeSources = new Set());
    const t = Xe(qn.getDefaults(), arguments, ['url', 'onload']);
    (this._buffer = new kt({
      onload: this._onload.bind(this, t.onload),
      onerror: t.onerror,
      reverse: t.reverse,
      url: t.url,
    })),
      (this.autostart = t.autostart),
      (this._loop = t.loop),
      (this._loopStart = t.loopStart),
      (this._loopEnd = t.loopEnd),
      (this._playbackRate = t.playbackRate),
      (this.fadeIn = t.fadeIn),
      (this.fadeOut = t.fadeOut);
  }
  static getDefaults() {
    return Object.assign(ur.getDefaults(), {
      autostart: !1,
      fadeIn: 0,
      fadeOut: 0,
      loop: !1,
      loopEnd: 0,
      loopStart: 0,
      onload: Ot,
      onerror: Ot,
      playbackRate: 1,
      reverse: !1,
    });
  }
  load(t) {
    return Zt(this, void 0, void 0, function* () {
      return yield this._buffer.load(t), this._onload(), this;
    });
  }
  _onload(t = Ot) {
    t(), this.autostart && this.start();
  }
  _onSourceEnd(t) {
    this.onstop(this),
      this._activeSources.delete(t),
      this._activeSources.size === 0 &&
        !this._synced &&
        this._state.getValueAtTime(this.now()) === 'started' &&
        (this._state.cancel(this.now()),
        this._state.setStateAtTime('stopped', this.now()));
  }
  start(t, p, e) {
    return super.start(t, p, e), this;
  }
  _start(t, p, e) {
    this._loop ? (p = Fn(p, this._loopStart)) : (p = Fn(p, 0));
    const v = this.toSeconds(p),
      y = e;
    e = Fn(e, Math.max(this._buffer.duration - v, 0));
    let m = this.toSeconds(e);
    (m = m / this._playbackRate), (t = this.toSeconds(t));
    const r = new hs({
      url: this._buffer,
      context: this.context,
      fadeIn: this.fadeIn,
      fadeOut: this.fadeOut,
      loop: this._loop,
      loopEnd: this._loopEnd,
      loopStart: this._loopStart,
      onended: this._onSourceEnd.bind(this),
      playbackRate: this._playbackRate,
    }).connect(this.output);
    !this._loop &&
      !this._synced &&
      (this._state.cancel(t + m),
      this._state.setStateAtTime('stopped', t + m, { implicitEnd: !0 })),
      this._activeSources.add(r),
      this._loop && dr(y)
        ? r.start(t, v)
        : r.start(t, v, m - this.toSeconds(this.fadeOut));
  }
  _stop(t) {
    const p = this.toSeconds(t);
    this._activeSources.forEach((e) => e.stop(p));
  }
  restart(t, p, e) {
    return super.restart(t, p, e), this;
  }
  _restart(t, p, e) {
    this._stop(t), this._start(t, p, e);
  }
  seek(t, p) {
    const e = this.toSeconds(p);
    if (this._state.getValueAtTime(e) === 'started') {
      const v = this.toSeconds(t);
      this._stop(e), this._start(e, v);
    }
    return this;
  }
  setLoopPoints(t, p) {
    return (this.loopStart = t), (this.loopEnd = p), this;
  }
  get loopStart() {
    return this._loopStart;
  }
  set loopStart(t) {
    (this._loopStart = t),
      this.buffer.loaded && Jr(this.toSeconds(t), 0, this.buffer.duration),
      this._activeSources.forEach((p) => {
        p.loopStart = t;
      });
  }
  get loopEnd() {
    return this._loopEnd;
  }
  set loopEnd(t) {
    (this._loopEnd = t),
      this.buffer.loaded && Jr(this.toSeconds(t), 0, this.buffer.duration),
      this._activeSources.forEach((p) => {
        p.loopEnd = t;
      });
  }
  get buffer() {
    return this._buffer;
  }
  set buffer(t) {
    this._buffer.set(t);
  }
  get loop() {
    return this._loop;
  }
  set loop(t) {
    if (
      this._loop !== t &&
      ((this._loop = t),
      this._activeSources.forEach((p) => {
        p.loop = t;
      }),
      t)
    ) {
      const p = this._state.getNextState('stopped', this.now());
      p && this._state.cancel(p.time);
    }
  }
  get playbackRate() {
    return this._playbackRate;
  }
  set playbackRate(t) {
    this._playbackRate = t;
    const p = this.now(),
      e = this._state.getNextState('stopped', p);
    e &&
      e.implicitEnd &&
      (this._state.cancel(e.time),
      this._activeSources.forEach((v) => v.cancelStop())),
      this._activeSources.forEach((v) => {
        v.playbackRate.setValueAtTime(t, p);
      });
  }
  get reverse() {
    return this._buffer.reverse;
  }
  set reverse(t) {
    this._buffer.reverse = t;
  }
  get loaded() {
    return this._buffer.loaded;
  }
  dispose() {
    return (
      super.dispose(),
      this._activeSources.forEach((t) => t.dispose()),
      this._activeSources.clear(),
      this._buffer.dispose(),
      this
    );
  }
}
xr([Wr(0)], qn.prototype, 'fadeIn', void 0);
xr([Wr(0)], qn.prototype, 'fadeOut', void 0);
class Br extends dt {
  constructor() {
    super(
      Xe(Br.getDefaults(), arguments, [
        'attack',
        'decay',
        'sustain',
        'release',
      ]),
    ),
      (this.name = 'Envelope'),
      (this._sig = new Qt({ context: this.context, value: 0 })),
      (this.output = this._sig),
      (this.input = void 0);
    const t = Xe(Br.getDefaults(), arguments, [
      'attack',
      'decay',
      'sustain',
      'release',
    ]);
    (this.attack = t.attack),
      (this.decay = t.decay),
      (this.sustain = t.sustain),
      (this.release = t.release),
      (this.attackCurve = t.attackCurve),
      (this.releaseCurve = t.releaseCurve),
      (this.decayCurve = t.decayCurve);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      attack: 0.01,
      attackCurve: 'linear',
      decay: 0.1,
      decayCurve: 'exponential',
      release: 1,
      releaseCurve: 'exponential',
      sustain: 0.5,
    });
  }
  get value() {
    return this.getValueAtTime(this.now());
  }
  _getCurve(t, p) {
    if (Or(t)) return t;
    {
      let e;
      for (e in Gs) if (Gs[e][p] === t) return e;
      return t;
    }
  }
  _setCurve(t, p, e) {
    if (Or(e) && Reflect.has(Gs, e)) {
      const v = Gs[e];
      mn(v) ? t !== '_decayCurve' && (this[t] = v[p]) : (this[t] = v);
    } else if (vr(e) && t !== '_decayCurve') this[t] = e;
    else throw new Error('Envelope: invalid curve: ' + e);
  }
  get attackCurve() {
    return this._getCurve(this._attackCurve, 'In');
  }
  set attackCurve(t) {
    this._setCurve('_attackCurve', 'In', t);
  }
  get releaseCurve() {
    return this._getCurve(this._releaseCurve, 'Out');
  }
  set releaseCurve(t) {
    this._setCurve('_releaseCurve', 'Out', t);
  }
  get decayCurve() {
    return this._decayCurve;
  }
  set decayCurve(t) {
    ut(
      ['linear', 'exponential'].some((p) => p === t),
      `Invalid envelope curve: ${t}`,
    ),
      (this._decayCurve = t);
  }
  triggerAttack(t, p = 1) {
    this.log('triggerAttack', t, p), (t = this.toSeconds(t));
    let v = this.toSeconds(this.attack);
    const y = this.toSeconds(this.decay),
      m = this.getValueAtTime(t);
    if (m > 0) {
      const r = 1 / v;
      v = (1 - m) / r;
    }
    if (v < this.sampleTime)
      this._sig.cancelScheduledValues(t), this._sig.setValueAtTime(p, t);
    else if (this._attackCurve === 'linear') this._sig.linearRampTo(p, v, t);
    else if (this._attackCurve === 'exponential')
      this._sig.targetRampTo(p, v, t);
    else {
      this._sig.cancelAndHoldAtTime(t);
      let r = this._attackCurve;
      for (let c = 1; c < r.length; c++)
        if (r[c - 1] <= m && m <= r[c]) {
          (r = this._attackCurve.slice(c)), (r[0] = m);
          break;
        }
      this._sig.setValueCurveAtTime(r, t, v, p);
    }
    if (y && this.sustain < 1) {
      const r = p * this.sustain,
        c = t + v;
      this.log('decay', c),
        this._decayCurve === 'linear'
          ? this._sig.linearRampToValueAtTime(r, y + c)
          : this._sig.exponentialApproachValueAtTime(r, c, y);
    }
    return this;
  }
  triggerRelease(t) {
    this.log('triggerRelease', t), (t = this.toSeconds(t));
    const p = this.getValueAtTime(t);
    if (p > 0) {
      const e = this.toSeconds(this.release);
      e < this.sampleTime
        ? this._sig.setValueAtTime(0, t)
        : this._releaseCurve === 'linear'
        ? this._sig.linearRampTo(0, e, t)
        : this._releaseCurve === 'exponential'
        ? this._sig.targetRampTo(0, e, t)
        : (ut(
            vr(this._releaseCurve),
            "releaseCurve must be either 'linear', 'exponential' or an array",
          ),
          this._sig.cancelAndHoldAtTime(t),
          this._sig.setValueCurveAtTime(this._releaseCurve, t, e, p));
    }
    return this;
  }
  getValueAtTime(t) {
    return this._sig.getValueAtTime(t);
  }
  triggerAttackRelease(t, p, e = 1) {
    return (
      (p = this.toSeconds(p)),
      this.triggerAttack(p, e),
      this.triggerRelease(p + this.toSeconds(t)),
      this
    );
  }
  cancel(t) {
    return this._sig.cancelScheduledValues(this.toSeconds(t)), this;
  }
  connect(t, p = 0, e = 0) {
    return bi(this, t, p, e), this;
  }
  asArray(t = 1024) {
    return Zt(this, void 0, void 0, function* () {
      const p = t / this.context.sampleRate,
        e = new yi(1, p, this.context.sampleRate),
        v = this.toSeconds(this.attack) + this.toSeconds(this.decay),
        y = v + this.toSeconds(this.release),
        m = y * 0.1,
        r = y + m,
        c = new this.constructor(
          Object.assign(this.get(), {
            attack: (p * this.toSeconds(this.attack)) / r,
            decay: (p * this.toSeconds(this.decay)) / r,
            release: (p * this.toSeconds(this.release)) / r,
            context: e,
          }),
        );
      return (
        c._sig.toDestination(),
        c.triggerAttackRelease((p * (v + m)) / r, 0),
        (yield e.render()).getChannelData(0)
      );
    });
  }
  dispose() {
    return super.dispose(), this._sig.dispose(), this;
  }
}
xr([Wr(0)], Br.prototype, 'attack', void 0);
xr([Wr(0)], Br.prototype, 'decay', void 0);
xr([Nl(0, 1)], Br.prototype, 'sustain', void 0);
xr([Wr(0)], Br.prototype, 'release', void 0);
const Gs = (() => {
  let t, p;
  const e = [];
  for (t = 0; t < 128; t++) e[t] = Math.sin((t / (128 - 1)) * (Math.PI / 2));
  const v = [],
    y = 6.4;
  for (t = 0; t < 128 - 1; t++) {
    p = t / (128 - 1);
    const o = Math.sin(p * (Math.PI * 2) * y - Math.PI / 2) + 1;
    v[t] = o / 10 + p * 0.83;
  }
  v[128 - 1] = 1;
  const m = [],
    r = 5;
  for (t = 0; t < 128; t++) m[t] = Math.ceil((t / (128 - 1)) * r) / r;
  const c = [];
  for (t = 0; t < 128; t++)
    (p = t / (128 - 1)), (c[t] = 0.5 * (1 - Math.cos(Math.PI * p)));
  const l = [];
  for (t = 0; t < 128; t++) {
    p = t / (128 - 1);
    const o = Math.pow(p, 3) * 4 + 0.2,
      n = Math.cos(o * Math.PI * 2 * p);
    l[t] = Math.abs(n * (1 - p));
  }
  function h(o) {
    const n = new Array(o.length);
    for (let s = 0; s < o.length; s++) n[s] = 1 - o[s];
    return n;
  }
  function u(o) {
    return o.slice(0).reverse();
  }
  return {
    bounce: { In: h(l), Out: l },
    cosine: { In: e, Out: u(e) },
    exponential: 'exponential',
    linear: 'linear',
    ripple: { In: v, Out: h(v) },
    sine: { In: c, Out: h(c) },
    step: { In: m, Out: h(m) },
  };
})();
class Sn extends dt {
  constructor() {
    super(Xe(Sn.getDefaults(), arguments)),
      (this._scheduledEvents = []),
      (this._synced = !1),
      (this._original_triggerAttack = this.triggerAttack),
      (this._original_triggerRelease = this.triggerRelease);
    const t = Xe(Sn.getDefaults(), arguments);
    (this._volume = this.output =
      new wn({ context: this.context, volume: t.volume })),
      (this.volume = this._volume.volume),
      Vt(this, 'volume');
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { volume: 0 });
  }
  sync() {
    return (
      this._syncState() &&
        (this._syncMethod('triggerAttack', 1),
        this._syncMethod('triggerRelease', 0)),
      this
    );
  }
  _syncState() {
    let t = !1;
    return this._synced || ((this._synced = !0), (t = !0)), t;
  }
  _syncMethod(t, p) {
    const e = (this['_original_' + t] = this[t]);
    this[t] = (...v) => {
      const y = v[p],
        m = this.context.transport.schedule((r) => {
          (v[p] = r), e.apply(this, v);
        }, y);
      this._scheduledEvents.push(m);
    };
  }
  unsync() {
    return (
      this._scheduledEvents.forEach((t) => this.context.transport.clear(t)),
      (this._scheduledEvents = []),
      this._synced &&
        ((this._synced = !1),
        (this.triggerAttack = this._original_triggerAttack),
        (this.triggerRelease = this._original_triggerRelease)),
      this
    );
  }
  triggerAttackRelease(t, p, e, v) {
    const y = this.toSeconds(e),
      m = this.toSeconds(p);
    return this.triggerAttack(t, y, v), this.triggerRelease(y + m), this;
  }
  dispose() {
    return (
      super.dispose(),
      this._volume.dispose(),
      this.unsync(),
      (this._scheduledEvents = []),
      this
    );
  }
}
class Tn extends Sn {
  constructor() {
    super(Xe(Tn.getDefaults(), arguments));
    const t = Xe(Tn.getDefaults(), arguments);
    (this.portamento = t.portamento), (this.onsilence = t.onsilence);
  }
  static getDefaults() {
    return Object.assign(Sn.getDefaults(), {
      detune: 0,
      onsilence: Ot,
      portamento: 0,
    });
  }
  triggerAttack(t, p, e = 1) {
    this.log('triggerAttack', t, p, e);
    const v = this.toSeconds(p);
    return this._triggerEnvelopeAttack(v, e), this.setNote(t, v), this;
  }
  triggerRelease(t) {
    this.log('triggerRelease', t);
    const p = this.toSeconds(t);
    return this._triggerEnvelopeRelease(p), this;
  }
  setNote(t, p) {
    const e = this.toSeconds(p),
      v = t instanceof hr ? t.toFrequency() : t;
    if (this.portamento > 0 && this.getLevelAtTime(e) > 0.05) {
      const y = this.toSeconds(this.portamento);
      this.frequency.exponentialRampTo(v, y, e);
    } else this.frequency.setValueAtTime(v, e);
    return this;
  }
}
xr([Wr(0)], Tn.prototype, 'portamento', void 0);
class xi extends Br {
  constructor() {
    super(
      Xe(xi.getDefaults(), arguments, [
        'attack',
        'decay',
        'sustain',
        'release',
      ]),
    ),
      (this.name = 'AmplitudeEnvelope'),
      (this._gainNode = new sr({ context: this.context, gain: 0 })),
      (this.output = this._gainNode),
      (this.input = this._gainNode),
      this._sig.connect(this._gainNode.gain),
      (this.output = this._gainNode),
      (this.input = this._gainNode);
  }
  dispose() {
    return super.dispose(), this._gainNode.dispose(), this;
  }
}
class vs extends Tn {
  constructor() {
    super(Xe(vs.getDefaults(), arguments)), (this.name = 'Synth');
    const t = Xe(vs.getDefaults(), arguments);
    (this.oscillator = new gs(
      Object.assign(
        {
          context: this.context,
          detune: t.detune,
          onstop: () => this.onsilence(this),
        },
        t.oscillator,
      ),
    )),
      (this.frequency = this.oscillator.frequency),
      (this.detune = this.oscillator.detune),
      (this.envelope = new xi(
        Object.assign({ context: this.context }, t.envelope),
      )),
      this.oscillator.chain(this.envelope, this.output),
      Vt(this, ['oscillator', 'frequency', 'detune', 'envelope']);
  }
  static getDefaults() {
    return Object.assign(Tn.getDefaults(), {
      envelope: Object.assign(
        Oa(Br.getDefaults(), Object.keys(dt.getDefaults())),
        { attack: 0.005, decay: 0.1, release: 1, sustain: 0.3 },
      ),
      oscillator: Object.assign(
        Oa(gs.getDefaults(), [
          ...Object.keys(ur.getDefaults()),
          'frequency',
          'detune',
        ]),
        { type: 'triangle' },
      ),
    });
  }
  _triggerEnvelopeAttack(t, p) {
    if (
      (this.envelope.triggerAttack(t, p),
      this.oscillator.start(t),
      this.envelope.sustain === 0)
    ) {
      const e = this.toSeconds(this.envelope.attack),
        v = this.toSeconds(this.envelope.decay);
      this.oscillator.stop(t + e + v);
    }
  }
  _triggerEnvelopeRelease(t) {
    this.envelope.triggerRelease(t),
      this.oscillator.stop(t + this.toSeconds(this.envelope.release));
  }
  getLevelAtTime(t) {
    return (t = this.toSeconds(t)), this.envelope.getValueAtTime(t);
  }
  dispose() {
    return (
      super.dispose(), this.oscillator.dispose(), this.envelope.dispose(), this
    );
  }
}
class bs extends vs {
  constructor() {
    super(Xe(bs.getDefaults(), arguments)),
      (this.name = 'MembraneSynth'),
      (this.portamento = 0);
    const t = Xe(bs.getDefaults(), arguments);
    (this.pitchDecay = t.pitchDecay),
      (this.octaves = t.octaves),
      Vt(this, ['oscillator', 'envelope']);
  }
  static getDefaults() {
    return Nn(Tn.getDefaults(), vs.getDefaults(), {
      envelope: {
        attack: 0.001,
        attackCurve: 'exponential',
        decay: 0.4,
        release: 1.4,
        sustain: 0.01,
      },
      octaves: 10,
      oscillator: { type: 'sine' },
      pitchDecay: 0.05,
    });
  }
  setNote(t, p) {
    const e = this.toSeconds(p),
      v = this.toFrequency(t instanceof hr ? t.toFrequency() : t),
      y = v * this.octaves;
    return (
      this.oscillator.frequency.setValueAtTime(y, e),
      this.oscillator.frequency.exponentialRampToValueAtTime(
        v,
        e + this.toSeconds(this.pitchDecay),
      ),
      this
    );
  }
  dispose() {
    return super.dispose(), this;
  }
}
xr([Nl(0)], bs.prototype, 'octaves', void 0);
xr([Wr(0)], bs.prototype, 'pitchDecay', void 0);
const Fl = new Set();
function Si(T) {
  Fl.add(T);
}
function Ul(T, t) {
  const p = `registerProcessor("${T}", ${t})`;
  Fl.add(p);
}
const Kp = `
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;
Si(Kp);
const em = `
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;
Si(em);
const tm = `
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;
Si(tm);
const rm = 'feedback-comb-filter',
  nm = `
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;
Ul(rm, nm);
class _s extends Sn {
  constructor() {
    super(
      Xe(_s.getDefaults(), arguments, ['urls', 'onload', 'baseUrl'], 'urls'),
    ),
      (this.name = 'Sampler'),
      (this._activeSources = new Map());
    const t = Xe(
        _s.getDefaults(),
        arguments,
        ['urls', 'onload', 'baseUrl'],
        'urls',
      ),
      p = {};
    Object.keys(t.urls).forEach((e) => {
      const v = parseInt(e, 10);
      if (
        (ut(
          Bs(e) || (bn(v) && isFinite(v)),
          `url key is neither a note or midi pitch: ${e}`,
        ),
        Bs(e))
      ) {
        const y = new hr(this.context, e).toMidi();
        p[y] = t.urls[e];
      } else bn(v) && isFinite(v) && (p[v] = t.urls[v]);
    }),
      (this._buffers = new _i({
        urls: p,
        onload: t.onload,
        baseUrl: t.baseUrl,
        onerror: t.onerror,
      })),
      (this.attack = t.attack),
      (this.release = t.release),
      (this.curve = t.curve),
      this._buffers.loaded && Promise.resolve().then(t.onload);
  }
  static getDefaults() {
    return Object.assign(Sn.getDefaults(), {
      attack: 0,
      baseUrl: '',
      curve: 'exponential',
      onload: Ot,
      onerror: Ot,
      release: 0.1,
      urls: {},
    });
  }
  _findClosest(t) {
    let e = 0;
    for (; e < 96; ) {
      if (this._buffers.has(t + e)) return -e;
      if (this._buffers.has(t - e)) return e;
      e++;
    }
    throw new Error(`No available buffers for note: ${t}`);
  }
  triggerAttack(t, p, e = 1) {
    return (
      this.log('triggerAttack', t, p, e),
      Array.isArray(t) || (t = [t]),
      t.forEach((v) => {
        const y = Ll(new hr(this.context, v).toFrequency()),
          m = Math.round(y),
          r = y - m,
          c = this._findClosest(m),
          l = m - c,
          h = this._buffers.get(l),
          u = Il(c + r),
          o = new hs({
            url: h,
            context: this.context,
            curve: this.curve,
            fadeIn: this.attack,
            fadeOut: this.release,
            playbackRate: u,
          }).connect(this.output);
        o.start(p, 0, h.duration / u, e),
          vr(this._activeSources.get(m)) || this._activeSources.set(m, []),
          this._activeSources.get(m).push(o),
          (o.onended = () => {
            if (this._activeSources && this._activeSources.has(m)) {
              const n = this._activeSources.get(m),
                s = n.indexOf(o);
              s !== -1 && n.splice(s, 1);
            }
          });
      }),
      this
    );
  }
  triggerRelease(t, p) {
    return (
      this.log('triggerRelease', t, p),
      Array.isArray(t) || (t = [t]),
      t.forEach((e) => {
        const v = new hr(this.context, e).toMidi();
        if (this._activeSources.has(v) && this._activeSources.get(v).length) {
          const y = this._activeSources.get(v);
          (p = this.toSeconds(p)),
            y.forEach((m) => {
              m.stop(p);
            }),
            this._activeSources.set(v, []);
        }
      }),
      this
    );
  }
  releaseAll(t) {
    const p = this.toSeconds(t);
    return (
      this._activeSources.forEach((e) => {
        for (; e.length; ) e.shift().stop(p);
      }),
      this
    );
  }
  sync() {
    return (
      this._syncState() &&
        (this._syncMethod('triggerAttack', 1),
        this._syncMethod('triggerRelease', 1)),
      this
    );
  }
  triggerAttackRelease(t, p, e, v = 1) {
    const y = this.toSeconds(e);
    return (
      this.triggerAttack(t, y, v),
      vr(p)
        ? (ut(vr(t), 'notes must be an array when duration is array'),
          t.forEach((m, r) => {
            const c = p[Math.min(r, p.length - 1)];
            this.triggerRelease(m, y + this.toSeconds(c));
          }))
        : this.triggerRelease(t, y + this.toSeconds(p)),
      this
    );
  }
  add(t, p, e) {
    if (
      (ut(Bs(t) || isFinite(t), `note must be a pitch or midi: ${t}`), Bs(t))
    ) {
      const v = new hr(this.context, t).toMidi();
      this._buffers.add(v, p, e);
    } else this._buffers.add(t, p, e);
    return this;
  }
  get loaded() {
    return this._buffers.loaded;
  }
  dispose() {
    return (
      super.dispose(),
      this._buffers.dispose(),
      this._activeSources.forEach((t) => {
        t.forEach((p) => p.dispose());
      }),
      this._activeSources.clear(),
      this
    );
  }
}
xr([Wr(0)], _s.prototype, 'attack', void 0);
xr([Wr(0)], _s.prototype, 'release', void 0);
class ao extends dt {
  constructor() {
    super(Object.assign(Xe(ao.getDefaults(), arguments, ['pan']))),
      (this.name = 'Panner'),
      (this._panner = this.context.createStereoPanner()),
      (this.input = this._panner),
      (this.output = this._panner);
    const t = Xe(ao.getDefaults(), arguments, ['pan']);
    (this.pan = new Ft({
      context: this.context,
      param: this._panner.pan,
      value: t.pan,
      minValue: -1,
      maxValue: 1,
    })),
      (this._panner.channelCount = t.channelCount),
      (this._panner.channelCountMode = 'explicit'),
      Vt(this, 'pan');
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { pan: 0, channelCount: 1 });
  }
  dispose() {
    return super.dispose(), this._panner.disconnect(), this.pan.dispose(), this;
  }
}
const sm = 'bit-crusher',
  om = `
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;
Ul(sm, om);
class qt extends dt {
  constructor() {
    super(Xe(qt.getDefaults(), arguments, ['solo'])), (this.name = 'Solo');
    const t = Xe(qt.getDefaults(), arguments, ['solo']);
    (this.input = this.output = new sr({ context: this.context })),
      qt._allSolos.has(this.context) ||
        qt._allSolos.set(this.context, new Set()),
      qt._allSolos.get(this.context).add(this),
      (this.solo = t.solo);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { solo: !1 });
  }
  get solo() {
    return this._isSoloed();
  }
  set solo(t) {
    t ? this._addSolo() : this._removeSolo(),
      qt._allSolos.get(this.context).forEach((p) => p._updateSolo());
  }
  get muted() {
    return this.input.gain.value === 0;
  }
  _addSolo() {
    qt._soloed.has(this.context) || qt._soloed.set(this.context, new Set()),
      qt._soloed.get(this.context).add(this);
  }
  _removeSolo() {
    qt._soloed.has(this.context) && qt._soloed.get(this.context).delete(this);
  }
  _isSoloed() {
    return (
      qt._soloed.has(this.context) && qt._soloed.get(this.context).has(this)
    );
  }
  _noSolos() {
    return (
      !qt._soloed.has(this.context) ||
      (qt._soloed.has(this.context) && qt._soloed.get(this.context).size === 0)
    );
  }
  _updateSolo() {
    this._isSoloed()
      ? (this.input.gain.value = 1)
      : this._noSolos()
      ? (this.input.gain.value = 1)
      : (this.input.gain.value = 0);
  }
  dispose() {
    return (
      super.dispose(),
      qt._allSolos.get(this.context).delete(this),
      this._removeSolo(),
      this
    );
  }
}
qt._allSolos = new Map();
qt._soloed = new Map();
class lo extends dt {
  constructor() {
    super(Xe(lo.getDefaults(), arguments, ['pan', 'volume'])),
      (this.name = 'PanVol');
    const t = Xe(lo.getDefaults(), arguments, ['pan', 'volume']);
    (this._panner = this.input =
      new ao({
        context: this.context,
        pan: t.pan,
        channelCount: t.channelCount,
      })),
      (this.pan = this._panner.pan),
      (this._volume = this.output =
        new wn({ context: this.context, volume: t.volume })),
      (this.volume = this._volume.volume),
      this._panner.connect(this._volume),
      (this.mute = t.mute),
      Vt(this, ['pan', 'volume']);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      mute: !1,
      pan: 0,
      volume: 0,
      channelCount: 1,
    });
  }
  get mute() {
    return this._volume.mute;
  }
  set mute(t) {
    this._volume.mute = t;
  }
  dispose() {
    return (
      super.dispose(),
      this._panner.dispose(),
      this.pan.dispose(),
      this._volume.dispose(),
      this.volume.dispose(),
      this
    );
  }
}
class pn extends dt {
  constructor() {
    super(Xe(pn.getDefaults(), arguments, ['volume', 'pan'])),
      (this.name = 'Channel');
    const t = Xe(pn.getDefaults(), arguments, ['volume', 'pan']);
    (this._solo = this.input = new qt({ solo: t.solo, context: this.context })),
      (this._panVol = this.output =
        new lo({
          context: this.context,
          pan: t.pan,
          volume: t.volume,
          mute: t.mute,
          channelCount: t.channelCount,
        })),
      (this.pan = this._panVol.pan),
      (this.volume = this._panVol.volume),
      this._solo.connect(this._panVol),
      Vt(this, ['pan', 'volume']);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      pan: 0,
      volume: 0,
      mute: !1,
      solo: !1,
      channelCount: 1,
    });
  }
  get solo() {
    return this._solo.solo;
  }
  set solo(t) {
    this._solo.solo = t;
  }
  get muted() {
    return this._solo.muted || this.mute;
  }
  get mute() {
    return this._panVol.mute;
  }
  set mute(t) {
    this._panVol.mute = t;
  }
  _getBus(t) {
    return (
      pn.buses.has(t) || pn.buses.set(t, new sr({ context: this.context })),
      pn.buses.get(t)
    );
  }
  send(t, p = 0) {
    const e = this._getBus(t),
      v = new sr({ context: this.context, units: 'decibels', gain: p });
    return this.connect(v), v.connect(e), v;
  }
  receive(t) {
    return this._getBus(t).connect(this), this;
  }
  dispose() {
    return (
      super.dispose(),
      this._panVol.dispose(),
      this.pan.dispose(),
      this.volume.dispose(),
      this._solo.dispose(),
      this
    );
  }
}
pn.buses = new Map();
class im extends dt {
  constructor() {
    super(...arguments),
      (this.name = 'Listener'),
      (this.positionX = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.positionX,
      })),
      (this.positionY = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.positionY,
      })),
      (this.positionZ = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.positionZ,
      })),
      (this.forwardX = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.forwardX,
      })),
      (this.forwardY = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.forwardY,
      })),
      (this.forwardZ = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.forwardZ,
      })),
      (this.upX = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.upX,
      })),
      (this.upY = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.upY,
      })),
      (this.upZ = new Ft({
        context: this.context,
        param: this.context.rawContext.listener.upZ,
      }));
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      positionX: 0,
      positionY: 0,
      positionZ: 0,
      forwardX: 0,
      forwardY: 0,
      forwardZ: -1,
      upX: 0,
      upY: 1,
      upZ: 0,
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.positionX.dispose(),
      this.positionY.dispose(),
      this.positionZ.dispose(),
      this.forwardX.dispose(),
      this.forwardY.dispose(),
      this.forwardZ.dispose(),
      this.upX.dispose(),
      this.upY.dispose(),
      this.upZ.dispose(),
      this
    );
  }
}
wo((T) => {
  T.listener = new im({ context: T });
});
xo((T) => {
  T.listener.dispose();
});
yr().transport;
yr().destination;
yr().destination;
yr().listener;
yr().draw;
yr();
const $o = document.querySelector('#vhsNoise'),
  Ti = new qn(`./audio/${Math.round(Yt(1, 10))}.mp3`).toDestination();
Ti.autostart = !0;
Ti.loop = !0;
const gn = Yt(0.5, 1);
$o.playbackRate = gn * 1.2;
Ti.playbackRate = gn;
let ji = !1;
const uo = document.querySelector('#unmute'),
  am = () => {
    (uo.style.visibility = 'visible'), (ji = !0);
  },
  lm = () => {
    (uo.style.visibility = 'hidden'), (ji = !1);
  },
  Bl = async () => {
    $o.paused && $o.play(),
      Up().then(() => {
        lm();
      }),
      am();
  },
  Gl = () => {
    document.documentElement.style.setProperty(
      '--animation-step-speed',
      0.1 / gn,
    ),
      document.documentElement.style.setProperty(
        '--animation-step-1',
        gn < 0.7 ? 0.9 : 0.3,
      ),
      document.documentElement.style.setProperty('--animation-step-2', 0.9),
      document.documentElement.style.setProperty(
        '--animation-step-3',
        gn < 0.7 ? 2 : 10.9,
      );
  };
Gl();
setTimeout(() => {
  document.documentElement.style.setProperty('--animation-step-1', 3),
    document.documentElement.style.setProperty('--animation-step-2', 3),
    document.documentElement.style.setProperty('--animation-step-3', 3),
    ji
      ? ((uo.style.visibility = 'hidden'),
        fxpreview(),
        (uo.style.visibility = 'visible'))
      : fxpreview(),
    Gl();
}, Math.floor(Math.random() * 3e4));
let co = 0,
  ho = 0,
  fo = 0,
  po = 0;
const um = (T, t) => {
    const p = Yt(20, 200);
    let e = Yt(0.01, 1),
      v = Yt(0.02, 2),
      y = Yt(0.03, 3),
      m = Yt(0.04, 4),
      r = Yt(10, 80),
      c = Yt(0, 1),
      l = Yt(0, 1);
    return () => {
      T.clear(), T.translate(t / 2, t / 2), T.scale(0.9);
      for (let h = 1; h < p; h++)
        T.triangle(
          Math.abs(Math.sin(c + h * r)) * t,
          Math.abs(Math.sin(l + h * r)) * t,
          Math.abs(Math.sin(co + h * r)) * t,
          Math.abs(Math.cos(ho + h * r)) * t,
          Math.abs(Math.sin(fo + h * r)) * t,
          Math.abs(Math.cos(po + h * r)) * t,
        );
      (co += e), (ho += v), (fo += y), (po += m);
    };
  },
  cm = (T, t) => {
    const p = Yt(20, 200);
    let e = gn / 10,
      v = Yt(10, 80),
      y = Yt(0, 1),
      m = Yt(0, 1);
    return () => {
      T.clear(), T.translate(t / 2, t / 2), T.scale(0.9);
      for (let r = 1; r < p; r++)
        T.triangle(
          Math.abs(Math.sin(y + r * v)) * t,
          Math.abs(Math.sin(m + r * v)) * t,
          Math.abs(Math.sin(co + r * v)) * t,
          Math.abs(Math.cos(ho + r * v)) * t,
          Math.abs(Math.sin(fo + r * v)) * t,
          Math.abs(Math.cos(po + r * v)) * t,
        );
      (co += e * 0.01), (ho += e * 0.02), (fo += e * 0.03), (po += e * 0.04);
    };
  },
  ka = gn > 0.7 ? um : cm;
class hm {
  grayscale(t) {
    for (let p = 0; p < t.data.length; p += 4) {
      const e =
        t.data[p] * 0.299 + t.data[p + 1] * 0.587 + t.data[p + 2] * 0.114;
      t.data.fill(e, p, p + 3);
    }
    return t;
  }
  threshold(t, p) {
    for (let e = 0; e < t.data.length; e += 4) {
      const y =
        t.data[e] * 0.299 + t.data[e + 1] * 0.587 + t.data[e + 2] * 0.114 < p
          ? 0
          : 255;
      t.data.fill(y, e, e + 3);
    }
    return t;
  }
  bayer(t, p) {
    const e = [
      [15, 135, 45, 165],
      [195, 75, 225, 105],
      [60, 180, 30, 150],
      [240, 120, 210, 90],
    ];
    for (let v = 0; v < t.data.length; v += 4) {
      const y =
          t.data[v] * 0.299 + t.data[v + 1] * 0.587 + t.data[v + 2] * 0.114,
        m = (v / 4) % t.width,
        r = Math.floor(v / 4 / t.width),
        l = Math.floor((y + e[m % 4][r % 4]) / 2) < p ? 0 : 255;
      t.data.fill(l, v, v + 3);
    }
    return t;
  }
  floydsteinberg(t) {
    const p = t.width,
      e = new Uint8ClampedArray(t.width * t.height);
    for (let v = 0, y = 0; y < t.data.length; v++, y += 4)
      e[v] = t.data[y] * 0.299 + t.data[y + 1] * 0.587 + t.data[y + 2] * 0.114;
    for (let v = 0, y = 0; y < t.data.length; v++, y += 4) {
      const m = e[v] < 129 ? 0 : 255,
        r = Math.floor((e[v] - m) / 16);
      t.data.fill(m, y, y + 3),
        (e[v + 1] += r * 7),
        (e[v + p - 1] += r * 3),
        (e[v + p] += r * 5),
        (e[v + p + 1] += r * 1);
    }
    return t;
  }
  atkinson(t) {
    const p = t.width,
      e = new Uint8ClampedArray(t.width * t.height);
    for (let v = 0, y = 0; y < t.data.length; v++, y += 4)
      e[v] = t.data[y] * 0.299 + t.data[y + 1] * 0.587 + t.data[y + 2] * 0.114;
    for (let v = 0, y = 0; y < t.data.length; v++, y += 4) {
      const m = e[v] < 129 ? 0 : 255,
        r = Math.floor((e[v] - m) / 8);
      t.data.fill(m, y, y + 3),
        (e[v + 1] += r),
        (e[v + 2] += r),
        (e[v + p - 1] += r),
        (e[v + p] += r),
        (e[v + p + 1] += r),
        (e[v + 2 * p] += r);
    }
    return t;
  }
}
var dm = new hm();
const ss = document.querySelector('#dither'),
  qs = ss.getContext('2d'),
  fm = ([T, t, p]) => {
    qs.fillStyle = `rgb(${T}, ${t}, ${p})`;
  },
  Vl = () => {
    qs.fillRect(0, 0, ss.width, ss.height);
    const T = qs.getImageData(0, 0, ss.width, ss.height);
    qs.putImageData(dm.atkinson(T), 0, 0), requestAnimationFrame(Vl);
  };
Vl();
const fn = document.querySelector('#p5div'),
  pm = document.body;
let Fo;
const Wl = () => {
  const T = du();
  (pm.style = `background:rgb(${T[0]}, ${T[1]}, ${T[2]})`),
    fm(T),
    Fo && Fo.remove();
  const t = (p) => {
    p.setup = () => {
      const v = Yt(-50, 50),
        y = Yt(-50, 50);
      p.createCanvas(fn.clientWidth * 2, fn.clientWidth * 2),
        p.translate(-v, -y),
        (p.drawingContext.shadowColor = 'purple'),
        (p.drawingContext.imageSmoothingEnabled = !0),
        (p.drawingContext.shadowOffsetX = v),
        (p.drawingContext.shadowOffsetY = y),
        (p.drawingContext.shadowBlur = 10),
        (fn.style = `
        transform: rotate(${Yt(0, 360)}deg);
        transform: translate(${v}, ${y});
      `),
        p.noFill(),
        p.stroke(T),
        p.frameRate(35),
        p.strokeWeight(Yt(2, 3));
    };
    let e = ka(p, Lo(fn));
    (p.draw = () => {
      p.background(T), e();
      const v = Lo(fn);
      p.translate(v / 2, v / 2), p.scale(0.8);
    }),
      (p.windowResized = () => {
        e = ka(p, Lo(fn));
      });
  };
  (Fo = new hu(t, fn)), setTimeout(Wl, 3e3);
};
Wl();
pu();
Bl();
document.onclick = (T) => {
  Bl(), T.stopPropagation(), T.preventDefault();
};
