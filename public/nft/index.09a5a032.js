(function () {
  const i = document.createElement('link').relList;
  if (i && i.supports && i.supports('modulepreload')) return;
  for (const b of document.querySelectorAll('link[rel="modulepreload"]')) t(b);
  new MutationObserver((b) => {
    for (const y of b)
      if (y.type === 'childList')
        for (const u of y.addedNodes)
          u.tagName === 'LINK' && u.rel === 'modulepreload' && t(u);
  }).observe(document, { childList: !0, subtree: !0 });
  function m(b) {
    const y = {};
    return (
      b.integrity && (y.integrity = b.integrity),
      b.referrerpolicy && (y.referrerPolicy = b.referrerpolicy),
      b.crossorigin === 'use-credentials'
        ? (y.credentials = 'include')
        : b.crossorigin === 'anonymous'
        ? (y.credentials = 'omit')
        : (y.credentials = 'same-origin'),
      y
    );
  }
  function t(b) {
    if (b.ep) return;
    b.ep = !0;
    const y = m(b);
    fetch(b.href, y);
  }
})();
var As =
  typeof globalThis < 'u'
    ? globalThis
    : typeof window < 'u'
    ? window
    : typeof global < 'u'
    ? global
    : typeof self < 'u'
    ? self
    : {};
function Ql(T) {
  return T && T.__esModule && Object.prototype.hasOwnProperty.call(T, 'default')
    ? T.default
    : T;
}
function Rs(T) {
  throw new Error(
    'Could not dynamically require "' +
      T +
      '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.',
  );
}
var _a = { exports: {} };
/*! p5.js v1.6.0 February 22, 2023 */ (function (T, i) {
  (function (m) {
    T.exports = m();
  })(function () {
    var m;
    return (function t(b, y, u) {
      function a(d, h) {
        if (!y[d]) {
          if (!b[d]) {
            var o = typeof Rs == 'function' && Rs;
            if (!h && o) return o(d, !0);
            if (r) return r(d, !0);
            throw (
              (((h = new Error("Cannot find module '" + d + "'")).code =
                'MODULE_NOT_FOUND'),
              h)
            );
          }
          (o = y[d] = { exports: {} }),
            b[d][0].call(
              o.exports,
              function (s) {
                return a(b[d][1][s] || s);
              },
              o,
              o.exports,
              t,
              b,
              y,
              u,
            );
        }
        return y[d].exports;
      }
      for (var r = typeof Rs == 'function' && Rs, l = 0; l < u.length; l++)
        a(u[l]);
      return a;
    })(
      {
        1: [
          function (t, b, y) {
            (y.byteLength = function (c) {
              var c = o(c),
                n = c[0],
                c = c[1];
              return (3 * (n + c)) / 4 - c;
            }),
              (y.toByteArray = function (s) {
                var n,
                  c,
                  g = o(s),
                  f = g[0],
                  g = g[1],
                  _ = new r(
                    (function (v, M) {
                      return (3 * (v + M)) / 4 - M;
                    })(f, g),
                  ),
                  x = 0,
                  j = 0 < g ? f - 4 : f;
                for (c = 0; c < j; c += 4)
                  (n =
                    (a[s.charCodeAt(c)] << 18) |
                    (a[s.charCodeAt(c + 1)] << 12) |
                    (a[s.charCodeAt(c + 2)] << 6) |
                    a[s.charCodeAt(c + 3)]),
                    (_[x++] = (n >> 16) & 255),
                    (_[x++] = (n >> 8) & 255),
                    (_[x++] = 255 & n);
                return (
                  g === 2 &&
                    ((n =
                      (a[s.charCodeAt(c)] << 2) |
                      (a[s.charCodeAt(c + 1)] >> 4)),
                    (_[x++] = 255 & n)),
                  g === 1 &&
                    ((n =
                      (a[s.charCodeAt(c)] << 10) |
                      (a[s.charCodeAt(c + 1)] << 4) |
                      (a[s.charCodeAt(c + 2)] >> 2)),
                    (_[x++] = (n >> 8) & 255),
                    (_[x++] = 255 & n)),
                  _
                );
              }),
              (y.fromByteArray = function (s) {
                for (
                  var n, c = s.length, f = c % 3, g = [], _ = 0, x = c - f;
                  _ < x;
                  _ += 16383
                )
                  g.push(
                    (function (j, v, M) {
                      for (var C, k = [], A = v; A < M; A += 3)
                        (C =
                          ((j[A] << 16) & 16711680) +
                          ((j[A + 1] << 8) & 65280) +
                          (255 & j[A + 2])),
                          k.push(
                            (function (R) {
                              return (
                                u[(R >> 18) & 63] +
                                u[(R >> 12) & 63] +
                                u[(R >> 6) & 63] +
                                u[63 & R]
                              );
                            })(C),
                          );
                      return k.join('');
                    })(s, _, x < _ + 16383 ? x : _ + 16383),
                  );
                return (
                  f == 1
                    ? ((n = s[c - 1]),
                      g.push(u[n >> 2] + u[(n << 4) & 63] + '=='))
                    : f == 2 &&
                      ((n = (s[c - 2] << 8) + s[c - 1]),
                      g.push(
                        u[n >> 10] + u[(n >> 4) & 63] + u[(n << 2) & 63] + '=',
                      )),
                  g.join('')
                );
              });
            for (
              var u = [],
                a = [],
                r = typeof Uint8Array < 'u' ? Uint8Array : Array,
                l =
                  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                d = 0,
                h = l.length;
              d < h;
              ++d
            )
              (u[d] = l[d]), (a[l.charCodeAt(d)] = d);
            function o(s) {
              var n = s.length;
              if (0 < n % 4)
                throw new Error(
                  'Invalid string. Length must be a multiple of 4',
                );
              return (
                (s = s.indexOf('=')),
                (n = (s = s === -1 ? n : s) === n ? 0 : 4 - (s % 4)),
                [s, n]
              );
            }
            (a['-'.charCodeAt(0)] = 62), (a['_'.charCodeAt(0)] = 63);
          },
          {},
        ],
        2: [function (t, b, y) {}, {}],
        3: [
          function (t, b, y) {
            arguments[4][2][0].apply(y, arguments);
          },
          { dup: 2 },
        ],
        4: [
          function (t, b, y) {
            (function (o) {
              var a = t('base64-js'),
                r = t('ieee754'),
                l =
                  typeof Symbol == 'function' && typeof Symbol.for == 'function'
                    ? Symbol.for('nodejs.util.inspect.custom')
                    : null,
                d =
                  ((y.Buffer = o),
                  (y.SlowBuffer = function (P) {
                    return +P != P && (P = 0), o.alloc(+P);
                  }),
                  (y.INSPECT_MAX_BYTES = 50),
                  2147483647);
              function h(P) {
                if (d < P)
                  throw new RangeError(
                    'The value "' + P + '" is invalid for option "size"',
                  );
                return (
                  (P = new Uint8Array(P)),
                  Object.setPrototypeOf(P, o.prototype),
                  P
                );
              }
              function o(P, L, B) {
                if (typeof P != 'number') return s(P, L, B);
                if (typeof L == 'string')
                  throw new TypeError(
                    'The "string" argument must be of type string. Received type number',
                  );
                return c(P);
              }
              function s(P, L, B) {
                if (typeof P == 'string') {
                  var Y = P,
                    ee = L;
                  if (
                    o.isEncoding(
                      (ee = typeof ee == 'string' && ee !== '' ? ee : 'utf8'),
                    )
                  )
                    return (
                      (ne = 0 | _(Y, ee)),
                      (ce = h(ne)),
                      (ce = (Y = ce.write(Y, ee)) !== ne ? ce.slice(0, Y) : ce)
                    );
                  throw new TypeError('Unknown encoding: ' + ee);
                }
                if (ArrayBuffer.isView(P)) return f(P);
                if (P != null) {
                  if (Z(P, ArrayBuffer) || (P && Z(P.buffer, ArrayBuffer))) {
                    var ne = P,
                      Y = L,
                      ce = B;
                    if (Y < 0 || ne.byteLength < Y)
                      throw new RangeError(
                        '"offset" is outside of buffer bounds',
                      );
                    if (ne.byteLength < Y + (ce || 0))
                      throw new RangeError(
                        '"length" is outside of buffer bounds',
                      );
                    return (
                      (ne =
                        Y === void 0 && ce === void 0
                          ? new Uint8Array(ne)
                          : ce === void 0
                          ? new Uint8Array(ne, Y)
                          : new Uint8Array(ne, Y, ce)),
                      Object.setPrototypeOf(ne, o.prototype),
                      ne
                    );
                  }
                  if (typeof P == 'number')
                    throw new TypeError(
                      'The "value" argument must not be of type number. Received type number',
                    );
                  if (((ee = P.valueOf && P.valueOf()), ee != null && ee !== P))
                    return o.from(ee, L, B);
                  var pe = (function (le) {
                    {
                      var ue, be;
                      if (o.isBuffer(le))
                        return (
                          (ue = 0 | g(le.length)),
                          (be = h(ue)).length !== 0 && le.copy(be, 0, 0, ue),
                          be
                        );
                    }
                    if (le.length !== void 0)
                      return typeof le.length != 'number' || $(le.length)
                        ? h(0)
                        : f(le);
                    if (le.type === 'Buffer' && Array.isArray(le.data))
                      return f(le.data);
                  })(P);
                  if (pe) return pe;
                  if (
                    typeof Symbol < 'u' &&
                    Symbol.toPrimitive != null &&
                    typeof P[Symbol.toPrimitive] == 'function'
                  )
                    return o.from(P[Symbol.toPrimitive]('string'), L, B);
                }
                throw new TypeError(
                  'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
                    typeof P,
                );
              }
              function n(P) {
                if (typeof P != 'number')
                  throw new TypeError('"size" argument must be of type number');
                if (P < 0)
                  throw new RangeError(
                    'The value "' + P + '" is invalid for option "size"',
                  );
              }
              function c(P) {
                return n(P), h(P < 0 ? 0 : 0 | g(P));
              }
              function f(P) {
                for (
                  var L = P.length < 0 ? 0 : 0 | g(P.length), B = h(L), Y = 0;
                  Y < L;
                  Y += 1
                )
                  B[Y] = 255 & P[Y];
                return B;
              }
              function g(P) {
                if (d <= P)
                  throw new RangeError(
                    'Attempt to allocate Buffer larger than maximum size: 0x' +
                      d.toString(16) +
                      ' bytes',
                  );
                return 0 | P;
              }
              function _(P, L) {
                if (o.isBuffer(P)) return P.length;
                if (ArrayBuffer.isView(P) || Z(P, ArrayBuffer))
                  return P.byteLength;
                if (typeof P != 'string')
                  throw new TypeError(
                    'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                      typeof P,
                  );
                var B = P.length,
                  Y = 2 < arguments.length && arguments[2] === !0;
                if (!Y && B === 0) return 0;
                for (var ee = !1; ; )
                  switch (L) {
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                      return B;
                    case 'utf8':
                    case 'utf-8':
                      return z(P).length;
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                      return 2 * B;
                    case 'hex':
                      return B >>> 1;
                    case 'base64':
                      return X(P).length;
                    default:
                      if (ee) return Y ? -1 : z(P).length;
                      (L = ('' + L).toLowerCase()), (ee = !0);
                  }
              }
              function x(P, L, B) {
                var Y,
                  ee = !1;
                if (
                  (L = L === void 0 || L < 0 ? 0 : L) > this.length ||
                  (B = B === void 0 || B > this.length ? this.length : B) <=
                    0 ||
                  (B >>>= 0) <= (L >>>= 0)
                )
                  return '';
                for (P = P || 'utf8'; ; )
                  switch (P) {
                    case 'hex':
                      var ne = this,
                        me = L,
                        ce = B,
                        be = ne.length;
                      (!ce || ce < 0 || be < ce) && (ce = be);
                      for (
                        var pe = '', le = (me = !me || me < 0 ? 0 : me);
                        le < ce;
                        ++le
                      )
                        pe += ae[ne[le]];
                      return pe;
                    case 'utf8':
                    case 'utf-8':
                      return A(this, L, B);
                    case 'ascii':
                      var ue = this,
                        be = L,
                        te = B,
                        se = '';
                      te = Math.min(ue.length, te);
                      for (var he = be; he < te; ++he)
                        se += String.fromCharCode(127 & ue[he]);
                      return se;
                    case 'latin1':
                    case 'binary':
                      var ve = this,
                        me = L,
                        Ce = B,
                        Se = '';
                      Ce = Math.min(ve.length, Ce);
                      for (var Pe = me; Pe < Ce; ++Pe)
                        Se += String.fromCharCode(ve[Pe]);
                      return Se;
                    case 'base64':
                      return (
                        (Me = this),
                        (Y = B),
                        (Be = L) === 0 && Y === Me.length
                          ? a.fromByteArray(Me)
                          : a.fromByteArray(Me.slice(Be, Y))
                      );
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                      for (
                        var Me = L,
                          Be = B,
                          ze = this.slice(Me, Be),
                          We = '',
                          Qe = 0;
                        Qe < ze.length;
                        Qe += 2
                      )
                        We += String.fromCharCode(ze[Qe] + 256 * ze[Qe + 1]);
                      return We;
                    default:
                      if (ee) throw new TypeError('Unknown encoding: ' + P);
                      (P = (P + '').toLowerCase()), (ee = !0);
                  }
              }
              function j(P, L, B) {
                var Y = P[L];
                (P[L] = P[B]), (P[B] = Y);
              }
              function v(P, L, B, Y, ee) {
                if (P.length === 0) return -1;
                if (
                  (typeof B == 'string'
                    ? ((Y = B), (B = 0))
                    : 2147483647 < B
                    ? (B = 2147483647)
                    : B < -2147483648 && (B = -2147483648),
                  (B =
                    (B = $((B = +B)) ? (ee ? 0 : P.length - 1) : B) < 0
                      ? P.length + B
                      : B) >= P.length)
                ) {
                  if (ee) return -1;
                  B = P.length - 1;
                } else if (B < 0) {
                  if (!ee) return -1;
                  B = 0;
                }
                if ((typeof L == 'string' && (L = o.from(L, Y)), o.isBuffer(L)))
                  return L.length === 0 ? -1 : M(P, L, B, Y, ee);
                if (typeof L == 'number')
                  return (
                    (L &= 255),
                    typeof Uint8Array.prototype.indexOf == 'function'
                      ? (ee
                          ? Uint8Array.prototype.indexOf
                          : Uint8Array.prototype.lastIndexOf
                        ).call(P, L, B)
                      : M(P, [L], B, Y, ee)
                  );
                throw new TypeError('val must be string, number or Buffer');
              }
              function M(P, L, B, Y, ee) {
                var ne = 1,
                  ce = P.length,
                  pe = L.length;
                if (
                  Y !== void 0 &&
                  ((Y = String(Y).toLowerCase()) === 'ucs2' ||
                    Y === 'ucs-2' ||
                    Y === 'utf16le' ||
                    Y === 'utf-16le')
                ) {
                  if (P.length < 2 || L.length < 2) return -1;
                  (ce /= ne = 2), (pe /= 2), (B /= 2);
                }
                function le(he, ve) {
                  return ne === 1 ? he[ve] : he.readUInt16BE(ve * ne);
                }
                if (ee)
                  for (var ue = -1, be = B; be < ce; be++)
                    if (le(P, be) === le(L, ue === -1 ? 0 : be - ue)) {
                      if (be - (ue = ue === -1 ? be : ue) + 1 === pe)
                        return ue * ne;
                    } else ue !== -1 && (be -= be - ue), (ue = -1);
                else
                  for (be = B = ce < B + pe ? ce - pe : B; 0 <= be; be--) {
                    for (var te = !0, se = 0; se < pe; se++)
                      if (le(P, be + se) !== le(L, se)) {
                        te = !1;
                        break;
                      }
                    if (te) return be;
                  }
                return -1;
              }
              function C(P, L, B, Y) {
                return W(
                  (function (ee) {
                    for (var ne = [], ce = 0; ce < ee.length; ++ce)
                      ne.push(255 & ee.charCodeAt(ce));
                    return ne;
                  })(L),
                  P,
                  B,
                  Y,
                );
              }
              function k(P, L, B, Y) {
                return W(
                  (function (ee, ne) {
                    for (
                      var ce, pe, le = [], ue = 0;
                      ue < ee.length && !((ne -= 2) < 0);
                      ++ue
                    )
                      (pe = ee.charCodeAt(ue)),
                        (ce = pe >> 8),
                        (pe = pe % 256),
                        le.push(pe),
                        le.push(ce);
                    return le;
                  })(L, P.length - B),
                  P,
                  B,
                  Y,
                );
              }
              function A(P, L, B) {
                B = Math.min(P.length, B);
                for (var Y = [], ee = L; ee < B; ) {
                  var ne,
                    ce,
                    pe,
                    le,
                    ue = P[ee],
                    be = null,
                    te = 239 < ue ? 4 : 223 < ue ? 3 : 191 < ue ? 2 : 1;
                  if (ee + te <= B)
                    switch (te) {
                      case 1:
                        ue < 128 && (be = ue);
                        break;
                      case 2:
                        (192 & (ne = P[ee + 1])) == 128 &&
                          127 < (le = ((31 & ue) << 6) | (63 & ne)) &&
                          (be = le);
                        break;
                      case 3:
                        (ne = P[ee + 1]),
                          (ce = P[ee + 2]),
                          (192 & ne) == 128 &&
                            (192 & ce) == 128 &&
                            2047 <
                              (le =
                                ((15 & ue) << 12) |
                                ((63 & ne) << 6) |
                                (63 & ce)) &&
                            (le < 55296 || 57343 < le) &&
                            (be = le);
                        break;
                      case 4:
                        (ne = P[ee + 1]),
                          (ce = P[ee + 2]),
                          (pe = P[ee + 3]),
                          (192 & ne) == 128 &&
                            (192 & ce) == 128 &&
                            (192 & pe) == 128 &&
                            65535 <
                              (le =
                                ((15 & ue) << 18) |
                                ((63 & ne) << 12) |
                                ((63 & ce) << 6) |
                                (63 & pe)) &&
                            le < 1114112 &&
                            (be = le);
                    }
                  be === null
                    ? ((be = 65533), (te = 1))
                    : 65535 < be &&
                      ((be -= 65536),
                      Y.push(((be >>> 10) & 1023) | 55296),
                      (be = 56320 | (1023 & be))),
                    Y.push(be),
                    (ee += te);
                }
                var se = Y,
                  he = se.length;
                if (he <= R) return String.fromCharCode.apply(String, se);
                for (var ve = '', me = 0; me < he; )
                  ve += String.fromCharCode.apply(
                    String,
                    se.slice(me, (me += R)),
                  );
                return ve;
              }
              (y.kMaxLength = d),
                (o.TYPED_ARRAY_SUPPORT = (function () {
                  try {
                    var P = new Uint8Array(1),
                      L = {
                        foo: function () {
                          return 42;
                        },
                      };
                    return (
                      Object.setPrototypeOf(L, Uint8Array.prototype),
                      Object.setPrototypeOf(P, L),
                      P.foo() === 42
                    );
                  } catch {
                    return !1;
                  }
                })()) ||
                  typeof console > 'u' ||
                  typeof console.error != 'function' ||
                  console.error(
                    'This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.',
                  ),
                Object.defineProperty(o.prototype, 'parent', {
                  enumerable: !0,
                  get: function () {
                    if (o.isBuffer(this)) return this.buffer;
                  },
                }),
                Object.defineProperty(o.prototype, 'offset', {
                  enumerable: !0,
                  get: function () {
                    if (o.isBuffer(this)) return this.byteOffset;
                  },
                }),
                typeof Symbol < 'u' &&
                  Symbol.species != null &&
                  o[Symbol.species] === o &&
                  Object.defineProperty(o, Symbol.species, {
                    value: null,
                    configurable: !0,
                    enumerable: !1,
                    writable: !1,
                  }),
                (o.poolSize = 8192),
                (o.from = s),
                Object.setPrototypeOf(o.prototype, Uint8Array.prototype),
                Object.setPrototypeOf(o, Uint8Array),
                (o.alloc = function (P, L, B) {
                  return (
                    (L = L),
                    (B = B),
                    n((P = P)),
                    !(P <= 0) && L !== void 0
                      ? typeof B == 'string'
                        ? h(P).fill(L, B)
                        : h(P).fill(L)
                      : h(P)
                  );
                }),
                (o.allocUnsafe = c),
                (o.allocUnsafeSlow = c),
                (o.isBuffer = function (P) {
                  return P != null && P._isBuffer === !0 && P !== o.prototype;
                }),
                (o.compare = function (P, L) {
                  if (
                    (Z(P, Uint8Array) &&
                      (P = o.from(P, P.offset, P.byteLength)),
                    Z(L, Uint8Array) && (L = o.from(L, L.offset, L.byteLength)),
                    !o.isBuffer(P) || !o.isBuffer(L))
                  )
                    throw new TypeError(
                      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array',
                    );
                  if (P === L) return 0;
                  for (
                    var B = P.length, Y = L.length, ee = 0, ne = Math.min(B, Y);
                    ee < ne;
                    ++ee
                  )
                    if (P[ee] !== L[ee]) {
                      (B = P[ee]), (Y = L[ee]);
                      break;
                    }
                  return B < Y ? -1 : Y < B ? 1 : 0;
                }),
                (o.isEncoding = function (P) {
                  switch (String(P).toLowerCase()) {
                    case 'hex':
                    case 'utf8':
                    case 'utf-8':
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                    case 'base64':
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                      return !0;
                    default:
                      return !1;
                  }
                }),
                (o.concat = function (P, L) {
                  if (!Array.isArray(P))
                    throw new TypeError(
                      '"list" argument must be an Array of Buffers',
                    );
                  if (P.length === 0) return o.alloc(0);
                  if (L === void 0)
                    for (ee = L = 0; ee < P.length; ++ee) L += P[ee].length;
                  for (
                    var B = o.allocUnsafe(L), Y = 0, ee = 0;
                    ee < P.length;
                    ++ee
                  ) {
                    var ne = P[ee];
                    if (
                      (Z(ne, Uint8Array) && (ne = o.from(ne)), !o.isBuffer(ne))
                    )
                      throw new TypeError(
                        '"list" argument must be an Array of Buffers',
                      );
                    ne.copy(B, Y), (Y += ne.length);
                  }
                  return B;
                }),
                (o.byteLength = _),
                (o.prototype._isBuffer = !0),
                (o.prototype.swap16 = function () {
                  var P = this.length;
                  if (P % 2 != 0)
                    throw new RangeError(
                      'Buffer size must be a multiple of 16-bits',
                    );
                  for (var L = 0; L < P; L += 2) j(this, L, L + 1);
                  return this;
                }),
                (o.prototype.swap32 = function () {
                  var P = this.length;
                  if (P % 4 != 0)
                    throw new RangeError(
                      'Buffer size must be a multiple of 32-bits',
                    );
                  for (var L = 0; L < P; L += 4)
                    j(this, L, L + 3), j(this, L + 1, L + 2);
                  return this;
                }),
                (o.prototype.swap64 = function () {
                  var P = this.length;
                  if (P % 8 != 0)
                    throw new RangeError(
                      'Buffer size must be a multiple of 64-bits',
                    );
                  for (var L = 0; L < P; L += 8)
                    j(this, L, L + 7),
                      j(this, L + 1, L + 6),
                      j(this, L + 2, L + 5),
                      j(this, L + 3, L + 4);
                  return this;
                }),
                (o.prototype.toLocaleString = o.prototype.toString =
                  function () {
                    var P = this.length;
                    return P === 0
                      ? ''
                      : arguments.length === 0
                      ? A(this, 0, P)
                      : x.apply(this, arguments);
                  }),
                (o.prototype.equals = function (P) {
                  if (o.isBuffer(P))
                    return this === P || o.compare(this, P) === 0;
                  throw new TypeError('Argument must be a Buffer');
                }),
                (o.prototype.inspect = function () {
                  var L = '',
                    P = y.INSPECT_MAX_BYTES,
                    L = this.toString('hex', 0, P)
                      .replace(/(.{2})/g, '$1 ')
                      .trim();
                  return (
                    this.length > P && (L += ' ... '), '<Buffer ' + L + '>'
                  );
                }),
                l && (o.prototype[l] = o.prototype.inspect),
                (o.prototype.compare = function (P, L, B, Y, ee) {
                  if (
                    (Z(P, Uint8Array) &&
                      (P = o.from(P, P.offset, P.byteLength)),
                    !o.isBuffer(P))
                  )
                    throw new TypeError(
                      'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                        typeof P,
                    );
                  if (
                    (B === void 0 && (B = P ? P.length : 0),
                    Y === void 0 && (Y = 0),
                    ee === void 0 && (ee = this.length),
                    (L = L === void 0 ? 0 : L) < 0 ||
                      B > P.length ||
                      Y < 0 ||
                      ee > this.length)
                  )
                    throw new RangeError('out of range index');
                  if (ee <= Y && B <= L) return 0;
                  if (ee <= Y) return -1;
                  if (B <= L) return 1;
                  if (this === P) return 0;
                  for (
                    var ne = (ee >>>= 0) - (Y >>>= 0),
                      ce = (B >>>= 0) - (L >>>= 0),
                      pe = Math.min(ne, ce),
                      le = this.slice(Y, ee),
                      ue = P.slice(L, B),
                      be = 0;
                    be < pe;
                    ++be
                  )
                    if (le[be] !== ue[be]) {
                      (ne = le[be]), (ce = ue[be]);
                      break;
                    }
                  return ne < ce ? -1 : ce < ne ? 1 : 0;
                }),
                (o.prototype.includes = function (P, L, B) {
                  return this.indexOf(P, L, B) !== -1;
                }),
                (o.prototype.indexOf = function (P, L, B) {
                  return v(this, P, L, B, !0);
                }),
                (o.prototype.lastIndexOf = function (P, L, B) {
                  return v(this, P, L, B, !1);
                }),
                (o.prototype.write = function (P, L, B, Y) {
                  if (L === void 0) (Y = 'utf8'), (B = this.length), (L = 0);
                  else if (B === void 0 && typeof L == 'string')
                    (Y = L), (B = this.length), (L = 0);
                  else {
                    if (!isFinite(L))
                      throw new Error(
                        'Buffer.write(string, encoding, offset[, length]) is no longer supported',
                      );
                    (L >>>= 0),
                      isFinite(B)
                        ? ((B >>>= 0), Y === void 0 && (Y = 'utf8'))
                        : ((Y = B), (B = void 0));
                  }
                  var ee = this.length - L;
                  if (
                    ((B === void 0 || ee < B) && (B = ee),
                    (0 < P.length && (B < 0 || L < 0)) || L > this.length)
                  )
                    throw new RangeError(
                      'Attempt to write outside buffer bounds',
                    );
                  Y = Y || 'utf8';
                  for (var ne, ce, pe, le = !1; ; )
                    switch (Y) {
                      case 'hex':
                        var ue = this,
                          be = P,
                          te = L,
                          se = B,
                          he = ((te = Number(te) || 0), ue.length - te);
                        (!se || he < (se = Number(se))) && (se = he),
                          (he = be.length) / 2 < se && (se = he / 2);
                        for (var ve = 0; ve < se; ++ve) {
                          var me = parseInt(be.substr(2 * ve, 2), 16);
                          if ($(me)) return ve;
                          ue[te + ve] = me;
                        }
                        return ve;
                      case 'utf8':
                      case 'utf-8':
                        return (
                          (he = L),
                          (pe = B),
                          W(z(P, (ce = this).length - he), ce, he, pe)
                        );
                      case 'ascii':
                        return C(this, P, L, B);
                      case 'latin1':
                      case 'binary':
                        return C(this, P, L, B);
                      case 'base64':
                        return (
                          (ce = this), (pe = L), (ne = B), W(X(P), ce, pe, ne)
                        );
                      case 'ucs2':
                      case 'ucs-2':
                      case 'utf16le':
                      case 'utf-16le':
                        return k(this, P, L, B);
                      default:
                        if (le) throw new TypeError('Unknown encoding: ' + Y);
                        (Y = ('' + Y).toLowerCase()), (le = !0);
                    }
                }),
                (o.prototype.toJSON = function () {
                  return {
                    type: 'Buffer',
                    data: Array.prototype.slice.call(this._arr || this, 0),
                  };
                });
              var R = 4096;
              function O(P, L, B) {
                if (P % 1 != 0 || P < 0)
                  throw new RangeError('offset is not uint');
                if (B < P + L)
                  throw new RangeError('Trying to access beyond buffer length');
              }
              function D(P, L, B, Y, ee, ne) {
                if (!o.isBuffer(P))
                  throw new TypeError(
                    '"buffer" argument must be a Buffer instance',
                  );
                if (ee < L || L < ne)
                  throw new RangeError('"value" argument is out of bounds');
                if (B + Y > P.length)
                  throw new RangeError('Index out of range');
              }
              function N(P, L, B, Y) {
                if (B + Y > P.length)
                  throw new RangeError('Index out of range');
                if (B < 0) throw new RangeError('Index out of range');
              }
              function U(P, L, B, Y, ee) {
                return (
                  (L = +L),
                  (B >>>= 0),
                  ee || N(P, 0, B, 4),
                  r.write(P, L, B, Y, 23, 4),
                  B + 4
                );
              }
              function H(P, L, B, Y, ee) {
                return (
                  (L = +L),
                  (B >>>= 0),
                  ee || N(P, 0, B, 8),
                  r.write(P, L, B, Y, 52, 8),
                  B + 8
                );
              }
              (o.prototype.slice = function (P, L) {
                var B = this.length,
                  B =
                    ((P = ~~P) < 0 ? (P += B) < 0 && (P = 0) : B < P && (P = B),
                    (L = L === void 0 ? B : ~~L) < 0
                      ? (L += B) < 0 && (L = 0)
                      : B < L && (L = B),
                    L < P && (L = P),
                    this.subarray(P, L));
                return Object.setPrototypeOf(B, o.prototype), B;
              }),
                (o.prototype.readUIntLE = function (P, L, B) {
                  (P >>>= 0), (L >>>= 0), B || O(P, L, this.length);
                  for (
                    var Y = this[P], ee = 1, ne = 0;
                    ++ne < L && (ee *= 256);

                  )
                    Y += this[P + ne] * ee;
                  return Y;
                }),
                (o.prototype.readUIntBE = function (P, L, B) {
                  (P >>>= 0), (L >>>= 0), B || O(P, L, this.length);
                  for (var Y = this[P + --L], ee = 1; 0 < L && (ee *= 256); )
                    Y += this[P + --L] * ee;
                  return Y;
                }),
                (o.prototype.readUInt8 = function (P, L) {
                  return (P >>>= 0), L || O(P, 1, this.length), this[P];
                }),
                (o.prototype.readUInt16LE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 2, this.length),
                    this[P] | (this[P + 1] << 8)
                  );
                }),
                (o.prototype.readUInt16BE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 2, this.length),
                    (this[P] << 8) | this[P + 1]
                  );
                }),
                (o.prototype.readUInt32LE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 4, this.length),
                    (this[P] | (this[P + 1] << 8) | (this[P + 2] << 16)) +
                      16777216 * this[P + 3]
                  );
                }),
                (o.prototype.readUInt32BE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 4, this.length),
                    16777216 * this[P] +
                      ((this[P + 1] << 16) | (this[P + 2] << 8) | this[P + 3])
                  );
                }),
                (o.prototype.readIntLE = function (P, L, B) {
                  (P >>>= 0), (L >>>= 0), B || O(P, L, this.length);
                  for (
                    var Y = this[P], ee = 1, ne = 0;
                    ++ne < L && (ee *= 256);

                  )
                    Y += this[P + ne] * ee;
                  return (ee *= 128) <= Y && (Y -= Math.pow(2, 8 * L)), Y;
                }),
                (o.prototype.readIntBE = function (P, L, B) {
                  (P >>>= 0), (L >>>= 0), B || O(P, L, this.length);
                  for (
                    var Y = L, ee = 1, ne = this[P + --Y];
                    0 < Y && (ee *= 256);

                  )
                    ne += this[P + --Y] * ee;
                  return (ee *= 128) <= ne && (ne -= Math.pow(2, 8 * L)), ne;
                }),
                (o.prototype.readInt8 = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 1, this.length),
                    128 & this[P] ? -1 * (255 - this[P] + 1) : this[P]
                  );
                }),
                (o.prototype.readInt16LE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 2, this.length),
                    (L = this[P] | (this[P + 1] << 8)),
                    32768 & L ? 4294901760 | L : L
                  );
                }),
                (o.prototype.readInt16BE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 2, this.length),
                    (L = this[P + 1] | (this[P] << 8)),
                    32768 & L ? 4294901760 | L : L
                  );
                }),
                (o.prototype.readInt32LE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 4, this.length),
                    this[P] |
                      (this[P + 1] << 8) |
                      (this[P + 2] << 16) |
                      (this[P + 3] << 24)
                  );
                }),
                (o.prototype.readInt32BE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 4, this.length),
                    (this[P] << 24) |
                      (this[P + 1] << 16) |
                      (this[P + 2] << 8) |
                      this[P + 3]
                  );
                }),
                (o.prototype.readFloatLE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 4, this.length),
                    r.read(this, P, !0, 23, 4)
                  );
                }),
                (o.prototype.readFloatBE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 4, this.length),
                    r.read(this, P, !1, 23, 4)
                  );
                }),
                (o.prototype.readDoubleLE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 8, this.length),
                    r.read(this, P, !0, 52, 8)
                  );
                }),
                (o.prototype.readDoubleBE = function (P, L) {
                  return (
                    (P >>>= 0),
                    L || O(P, 8, this.length),
                    r.read(this, P, !1, 52, 8)
                  );
                }),
                (o.prototype.writeUIntLE = function (P, L, B, Y) {
                  (P = +P),
                    (L >>>= 0),
                    (B >>>= 0),
                    Y || D(this, P, L, B, Math.pow(2, 8 * B) - 1, 0);
                  var ee = 1,
                    ne = 0;
                  for (this[L] = 255 & P; ++ne < B && (ee *= 256); )
                    this[L + ne] = (P / ee) & 255;
                  return L + B;
                }),
                (o.prototype.writeUIntBE = function (P, L, B, Y) {
                  (P = +P),
                    (L >>>= 0),
                    (B >>>= 0),
                    Y || D(this, P, L, B, Math.pow(2, 8 * B) - 1, 0);
                  var ee = B - 1,
                    ne = 1;
                  for (this[L + ee] = 255 & P; 0 <= --ee && (ne *= 256); )
                    this[L + ee] = (P / ne) & 255;
                  return L + B;
                }),
                (o.prototype.writeUInt8 = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 1, 255, 0),
                    (this[L] = 255 & P),
                    L + 1
                  );
                }),
                (o.prototype.writeUInt16LE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 2, 65535, 0),
                    (this[L] = 255 & P),
                    (this[L + 1] = P >>> 8),
                    L + 2
                  );
                }),
                (o.prototype.writeUInt16BE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 2, 65535, 0),
                    (this[L] = P >>> 8),
                    (this[L + 1] = 255 & P),
                    L + 2
                  );
                }),
                (o.prototype.writeUInt32LE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 4, 4294967295, 0),
                    (this[L + 3] = P >>> 24),
                    (this[L + 2] = P >>> 16),
                    (this[L + 1] = P >>> 8),
                    (this[L] = 255 & P),
                    L + 4
                  );
                }),
                (o.prototype.writeUInt32BE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 4, 4294967295, 0),
                    (this[L] = P >>> 24),
                    (this[L + 1] = P >>> 16),
                    (this[L + 2] = P >>> 8),
                    (this[L + 3] = 255 & P),
                    L + 4
                  );
                }),
                (o.prototype.writeIntLE = function (P, L, B, Y) {
                  (P = +P),
                    (L >>>= 0),
                    Y || D(this, P, L, B, (Y = Math.pow(2, 8 * B - 1)) - 1, -Y);
                  var ee = 0,
                    ne = 1,
                    ce = 0;
                  for (this[L] = 255 & P; ++ee < B && (ne *= 256); )
                    P < 0 && ce === 0 && this[L + ee - 1] !== 0 && (ce = 1),
                      (this[L + ee] = (((P / ne) >> 0) - ce) & 255);
                  return L + B;
                }),
                (o.prototype.writeIntBE = function (P, L, B, Y) {
                  (P = +P),
                    (L >>>= 0),
                    Y || D(this, P, L, B, (Y = Math.pow(2, 8 * B - 1)) - 1, -Y);
                  var ee = B - 1,
                    ne = 1,
                    ce = 0;
                  for (this[L + ee] = 255 & P; 0 <= --ee && (ne *= 256); )
                    P < 0 && ce === 0 && this[L + ee + 1] !== 0 && (ce = 1),
                      (this[L + ee] = (((P / ne) >> 0) - ce) & 255);
                  return L + B;
                }),
                (o.prototype.writeInt8 = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 1, 127, -128),
                    (this[L] = 255 & (P = P < 0 ? 255 + P + 1 : P)),
                    L + 1
                  );
                }),
                (o.prototype.writeInt16LE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 2, 32767, -32768),
                    (this[L] = 255 & P),
                    (this[L + 1] = P >>> 8),
                    L + 2
                  );
                }),
                (o.prototype.writeInt16BE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 2, 32767, -32768),
                    (this[L] = P >>> 8),
                    (this[L + 1] = 255 & P),
                    L + 2
                  );
                }),
                (o.prototype.writeInt32LE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 4, 2147483647, -2147483648),
                    (this[L] = 255 & P),
                    (this[L + 1] = P >>> 8),
                    (this[L + 2] = P >>> 16),
                    (this[L + 3] = P >>> 24),
                    L + 4
                  );
                }),
                (o.prototype.writeInt32BE = function (P, L, B) {
                  return (
                    (P = +P),
                    (L >>>= 0),
                    B || D(this, P, L, 4, 2147483647, -2147483648),
                    (this[L] = (P = P < 0 ? 4294967295 + P + 1 : P) >>> 24),
                    (this[L + 1] = P >>> 16),
                    (this[L + 2] = P >>> 8),
                    (this[L + 3] = 255 & P),
                    L + 4
                  );
                }),
                (o.prototype.writeFloatLE = function (P, L, B) {
                  return U(this, P, L, !0, B);
                }),
                (o.prototype.writeFloatBE = function (P, L, B) {
                  return U(this, P, L, !1, B);
                }),
                (o.prototype.writeDoubleLE = function (P, L, B) {
                  return H(this, P, L, !0, B);
                }),
                (o.prototype.writeDoubleBE = function (P, L, B) {
                  return H(this, P, L, !1, B);
                }),
                (o.prototype.copy = function (P, L, B, Y) {
                  if (!o.isBuffer(P))
                    throw new TypeError('argument should be a Buffer');
                  if (
                    ((B = B || 0),
                    Y || Y === 0 || (Y = this.length),
                    L >= P.length && (L = P.length),
                    (Y = 0 < Y && Y < B ? B : Y) === B ||
                      P.length === 0 ||
                      this.length === 0)
                  )
                    return 0;
                  if ((L = L || 0) < 0)
                    throw new RangeError('targetStart out of bounds');
                  if (B < 0 || B >= this.length)
                    throw new RangeError('Index out of range');
                  if (Y < 0) throw new RangeError('sourceEnd out of bounds');
                  Y > this.length && (Y = this.length);
                  var ee =
                    (Y = P.length - L < Y - B ? P.length - L + B : Y) - B;
                  if (
                    this === P &&
                    typeof Uint8Array.prototype.copyWithin == 'function'
                  )
                    this.copyWithin(L, B, Y);
                  else if (this === P && B < L && L < Y)
                    for (var ne = ee - 1; 0 <= ne; --ne)
                      P[ne + L] = this[ne + B];
                  else Uint8Array.prototype.set.call(P, this.subarray(B, Y), L);
                  return ee;
                }),
                (o.prototype.fill = function (P, L, B, Y) {
                  if (typeof P == 'string') {
                    if (
                      (typeof L == 'string'
                        ? ((Y = L), (L = 0), (B = this.length))
                        : typeof B == 'string' && ((Y = B), (B = this.length)),
                      Y !== void 0 && typeof Y != 'string')
                    )
                      throw new TypeError('encoding must be a string');
                    if (typeof Y == 'string' && !o.isEncoding(Y))
                      throw new TypeError('Unknown encoding: ' + Y);
                    var ee;
                    P.length === 1 &&
                      ((ee = P.charCodeAt(0)),
                      ((Y === 'utf8' && ee < 128) || Y === 'latin1') &&
                        (P = ee));
                  } else
                    typeof P == 'number'
                      ? (P &= 255)
                      : typeof P == 'boolean' && (P = Number(P));
                  if (L < 0 || this.length < L || this.length < B)
                    throw new RangeError('Out of range index');
                  var ne;
                  if (!(B <= L))
                    if (
                      ((L >>>= 0),
                      (B = B === void 0 ? this.length : B >>> 0),
                      typeof (P = P || 0) == 'number')
                    )
                      for (ne = L; ne < B; ++ne) this[ne] = P;
                    else {
                      var ce = o.isBuffer(P) ? P : o.from(P, Y),
                        pe = ce.length;
                      if (pe === 0)
                        throw new TypeError(
                          'The value "' +
                            P +
                            '" is invalid for argument "value"',
                        );
                      for (ne = 0; ne < B - L; ++ne) this[ne + L] = ce[ne % pe];
                    }
                  return this;
                });
              var q = /[^+/0-9A-Za-z-_]/g;
              function z(P, L) {
                L = L || 1 / 0;
                for (
                  var B, Y = P.length, ee = null, ne = [], ce = 0;
                  ce < Y;
                  ++ce
                ) {
                  if (55295 < (B = P.charCodeAt(ce)) && B < 57344) {
                    if (!ee) {
                      if (56319 < B) {
                        -1 < (L -= 3) && ne.push(239, 191, 189);
                        continue;
                      }
                      if (ce + 1 === Y) {
                        -1 < (L -= 3) && ne.push(239, 191, 189);
                        continue;
                      }
                      ee = B;
                      continue;
                    }
                    if (B < 56320) {
                      -1 < (L -= 3) && ne.push(239, 191, 189), (ee = B);
                      continue;
                    }
                    B = 65536 + (((ee - 55296) << 10) | (B - 56320));
                  } else ee && -1 < (L -= 3) && ne.push(239, 191, 189);
                  if (((ee = null), B < 128)) {
                    if (--L < 0) break;
                    ne.push(B);
                  } else if (B < 2048) {
                    if ((L -= 2) < 0) break;
                    ne.push((B >> 6) | 192, (63 & B) | 128);
                  } else if (B < 65536) {
                    if ((L -= 3) < 0) break;
                    ne.push(
                      (B >> 12) | 224,
                      ((B >> 6) & 63) | 128,
                      (63 & B) | 128,
                    );
                  } else {
                    if (!(B < 1114112)) throw new Error('Invalid code point');
                    if ((L -= 4) < 0) break;
                    ne.push(
                      (B >> 18) | 240,
                      ((B >> 12) & 63) | 128,
                      ((B >> 6) & 63) | 128,
                      (63 & B) | 128,
                    );
                  }
                }
                return ne;
              }
              function X(P) {
                return a.toByteArray(
                  (function (L) {
                    if (
                      (L = (L = L.split('=')[0]).trim().replace(q, '')).length <
                      2
                    )
                      return '';
                    for (; L.length % 4 != 0; ) L += '=';
                    return L;
                  })(P),
                );
              }
              function W(P, L, B, Y) {
                for (
                  var ee = 0;
                  ee < Y && !(ee + B >= L.length || ee >= P.length);
                  ++ee
                )
                  L[ee + B] = P[ee];
                return ee;
              }
              function Z(P, L) {
                return (
                  P instanceof L ||
                  (P != null &&
                    P.constructor != null &&
                    P.constructor.name != null &&
                    P.constructor.name === L.name)
                );
              }
              function $(P) {
                return P != P;
              }
              var ae = (function () {
                for (
                  var P = '0123456789abcdef', L = new Array(256), B = 0;
                  B < 16;
                  ++B
                )
                  for (var Y = 16 * B, ee = 0; ee < 16; ++ee)
                    L[Y + ee] = P[B] + P[ee];
                return L;
              })();
            }.call(this, t('buffer').Buffer));
          },
          { 'base64-js': 1, buffer: 4, ieee754: 238 },
        ],
        5: [
          function (t, b, y) {
            b.exports = function (u) {
              if (typeof u != 'function')
                throw TypeError(String(u) + ' is not a function');
              return u;
            };
          },
          {},
        ],
        6: [
          function (t, b, y) {
            var u = t('../internals/is-object');
            b.exports = function (a) {
              if (u(a) || a === null) return a;
              throw TypeError("Can't set " + String(a) + ' as a prototype');
            };
          },
          { '../internals/is-object': 74 },
        ],
        7: [
          function (r, b, y) {
            var u = r('../internals/well-known-symbol'),
              a = r('../internals/object-create'),
              r = r('../internals/object-define-property'),
              l = u('unscopables'),
              d = Array.prototype;
            d[l] == null && r.f(d, l, { configurable: !0, value: a(null) }),
              (b.exports = function (h) {
                d[l][h] = !0;
              });
          },
          {
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/well-known-symbol': 146,
          },
        ],
        8: [
          function (t, b, y) {
            var u = t('../internals/string-multibyte').charAt;
            b.exports = function (a, r, l) {
              return r + (l ? u(a, r).length : 1);
            };
          },
          { '../internals/string-multibyte': 123 },
        ],
        9: [
          function (t, b, y) {
            b.exports = function (u, a, r) {
              if (u instanceof a) return u;
              throw TypeError('Incorrect ' + (r ? r + ' ' : '') + 'invocation');
            };
          },
          {},
        ],
        10: [
          function (t, b, y) {
            var u = t('../internals/is-object');
            b.exports = function (a) {
              if (u(a)) return a;
              throw TypeError(String(a) + ' is not an object');
            };
          },
          { '../internals/is-object': 74 },
        ],
        11: [
          function (t, b, y) {
            b.exports = typeof ArrayBuffer < 'u' && typeof DataView < 'u';
          },
          {},
        ],
        12: [
          function (N, b, y) {
            function u(H) {
              return h(H) && o(U, s(H));
            }
            var a,
              r = N('../internals/array-buffer-native'),
              l = N('../internals/descriptors'),
              d = N('../internals/global'),
              h = N('../internals/is-object'),
              o = N('../internals/has'),
              s = N('../internals/classof'),
              n = N('../internals/create-non-enumerable-property'),
              c = N('../internals/redefine'),
              f = N('../internals/object-define-property').f,
              g = N('../internals/object-get-prototype-of'),
              _ = N('../internals/object-set-prototype-of'),
              R = N('../internals/well-known-symbol'),
              N = N('../internals/uid'),
              x = d.Int8Array,
              j = x && x.prototype,
              v = d.Uint8ClampedArray,
              v = v && v.prototype,
              M = x && g(x),
              C = j && g(j),
              k = Object.prototype,
              A = k.isPrototypeOf,
              R = R('toStringTag'),
              O = N('TYPED_ARRAY_TAG'),
              D = r && !!_ && s(d.opera) !== 'Opera',
              N = !1,
              U = {
                Int8Array: 1,
                Uint8Array: 1,
                Uint8ClampedArray: 1,
                Int16Array: 2,
                Uint16Array: 2,
                Int32Array: 4,
                Uint32Array: 4,
                Float32Array: 4,
                Float64Array: 8,
              };
            for (a in U) d[a] || (D = !1);
            if (
              (!D || typeof M != 'function' || M === Function.prototype) &&
              ((M = function () {
                throw TypeError('Incorrect invocation');
              }),
              D)
            )
              for (a in U) d[a] && _(d[a], M);
            if ((!D || !C || C === k) && ((C = M.prototype), D))
              for (a in U) d[a] && _(d[a].prototype, C);
            if ((D && g(v) !== C && _(v, C), l && !o(C, R)))
              for (a in ((N = !0),
              f(C, R, {
                get: function () {
                  return h(this) ? this[O] : void 0;
                },
              }),
              U))
                d[a] && n(d[a], O, a);
            b.exports = {
              NATIVE_ARRAY_BUFFER_VIEWS: D,
              TYPED_ARRAY_TAG: N && O,
              aTypedArray: function (H) {
                if (u(H)) return H;
                throw TypeError('Target is not a typed array');
              },
              aTypedArrayConstructor: function (H) {
                if (_) {
                  if (A.call(M, H)) return H;
                } else
                  for (var q in U)
                    if (o(U, a) && ((q = d[q]), q && (H === q || A.call(q, H))))
                      return H;
                throw TypeError('Target is not a typed array constructor');
              },
              exportTypedArrayMethod: function (H, q, z) {
                if (l) {
                  if (z)
                    for (var X in U)
                      (X = d[X]),
                        X && o(X.prototype, H) && delete X.prototype[H];
                  (C[H] && !z) || c(C, H, (!z && D && j[H]) || q);
                }
              },
              exportTypedArrayStaticMethod: function (H, q, z) {
                var X, W;
                if (l) {
                  if (_) {
                    if (z) for (X in U) (W = d[X]) && o(W, H) && delete W[H];
                    if (M[H] && !z) return;
                    try {
                      return c(M, H, (!z && D && x[H]) || q);
                    } catch {}
                  }
                  for (X in U) !(W = d[X]) || (W[H] && !z) || c(W, H, q);
                }
              },
              isView: function (H) {
                return (H = s(H)), H === 'DataView' || o(U, H);
              },
              isTypedArray: u,
              TypedArray: M,
              TypedArrayPrototype: C,
            };
          },
          {
            '../internals/array-buffer-native': 11,
            '../internals/classof': 29,
            '../internals/create-non-enumerable-property': 38,
            '../internals/descriptors': 43,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/is-object': 74,
            '../internals/object-define-property': 92,
            '../internals/object-get-prototype-of': 97,
            '../internals/object-set-prototype-of': 101,
            '../internals/redefine': 108,
            '../internals/uid': 143,
            '../internals/well-known-symbol': 146,
          },
        ],
        13: [
          function (B, b, y) {
            function u(te) {
              return [255 & te];
            }
            function a(te) {
              return [255 & te, (te >> 8) & 255];
            }
            function r(te) {
              return [
                255 & te,
                (te >> 8) & 255,
                (te >> 16) & 255,
                (te >> 24) & 255,
              ];
            }
            function l(te) {
              return (te[3] << 24) | (te[2] << 16) | (te[1] << 8) | te[0];
            }
            function d(te) {
              return ne(te, 23, 4);
            }
            function h(te) {
              return ne(te, 52, 8);
            }
            function o(te, se) {
              N(te[Z], se, {
                get: function () {
                  return q(this)[se];
                },
              });
            }
            function s(Se, se, Ce, ve) {
              if (((Ce = k(Ce)), (Se = q(Se)), Ce + se > Se.byteLength))
                throw ee($);
              var me = q(Se.buffer).bytes,
                Ce = Ce + Se.byteOffset,
                Se = me.slice(Ce, Ce + se);
              return ve ? Se : Se.reverse();
            }
            function n(te, se, he, ve, me, Ce) {
              if (((he = k(he)), (te = q(te)), he + se > te.byteLength))
                throw ee($);
              for (
                var Se = q(te.buffer).bytes,
                  Pe = he + te.byteOffset,
                  Me = ve(+me),
                  Be = 0;
                Be < se;
                Be++
              )
                Se[Pe + Be] = Me[Ce ? Be : se - Be - 1];
            }
            var c = B('../internals/global'),
              f = B('../internals/descriptors'),
              g = B('../internals/array-buffer-native'),
              _ = B('../internals/create-non-enumerable-property'),
              x = B('../internals/redefine-all'),
              j = B('../internals/fails'),
              v = B('../internals/an-instance'),
              M = B('../internals/to-integer'),
              C = B('../internals/to-length'),
              k = B('../internals/to-index'),
              A = B('../internals/ieee754'),
              R = B('../internals/object-get-prototype-of'),
              O = B('../internals/object-set-prototype-of'),
              D = B('../internals/object-get-own-property-names').f,
              N = B('../internals/object-define-property').f,
              U = B('../internals/array-fill'),
              H = B('../internals/set-to-string-tag'),
              B = B('../internals/internal-state'),
              q = B.get,
              z = B.set,
              X = 'ArrayBuffer',
              W = 'DataView',
              Z = 'prototype',
              $ = 'Wrong index',
              ae = c[X],
              P = ae,
              L = c[W],
              B = L && L[Z],
              Y = Object.prototype,
              ee = c.RangeError,
              ne = A.pack,
              ce = A.unpack;
            if (g) {
              if (
                !j(function () {
                  ae(1);
                }) ||
                !j(function () {
                  new ae(-1);
                }) ||
                j(function () {
                  return new ae(), new ae(1.5), new ae(NaN), ae.name != X;
                })
              ) {
                for (
                  var pe,
                    c = ((P = function (he) {
                      return v(this, P), new ae(k(he));
                    })[Z] = ae[Z]),
                    le = D(ae),
                    ue = 0;
                  le.length > ue;

                )
                  (pe = le[ue++]) in P || _(P, pe, ae[pe]);
                c.constructor = P;
              }
              O && R(B) !== Y && O(B, Y);
              var A = new L(new P(2)),
                be = B.setInt8;
              A.setInt8(0, 2147483648),
                A.setInt8(1, 2147483649),
                (!A.getInt8(0) && A.getInt8(1)) ||
                  x(
                    B,
                    {
                      setInt8: function (se, he) {
                        be.call(this, se, (he << 24) >> 24);
                      },
                      setUint8: function (se, he) {
                        be.call(this, se, (he << 24) >> 24);
                      },
                    },
                    { unsafe: !0 },
                  );
            } else
              (P = function (te) {
                v(this, P, X),
                  (te = k(te)),
                  z(this, { bytes: U.call(new Array(te), 0), byteLength: te }),
                  f || (this.byteLength = te);
              }),
                (L = function (te, me, he) {
                  v(this, L, W), v(te, P, W);
                  var ve = q(te).byteLength,
                    me = M(me);
                  if (me < 0 || ve < me) throw ee('Wrong offset');
                  if (ve < me + (he = he === void 0 ? ve - me : C(he)))
                    throw ee('Wrong length');
                  z(this, { buffer: te, byteLength: he, byteOffset: me }),
                    f ||
                      ((this.buffer = te),
                      (this.byteLength = he),
                      (this.byteOffset = me));
                }),
                f &&
                  (o(P, 'byteLength'),
                  o(L, 'buffer'),
                  o(L, 'byteLength'),
                  o(L, 'byteOffset')),
                x(L[Z], {
                  getInt8: function (te) {
                    return (s(this, 1, te)[0] << 24) >> 24;
                  },
                  getUint8: function (te) {
                    return s(this, 1, te)[0];
                  },
                  getInt16: function (te) {
                    return (
                      (te = s(
                        this,
                        2,
                        te,
                        1 < arguments.length ? arguments[1] : void 0,
                      )),
                      (((te[1] << 8) | te[0]) << 16) >> 16
                    );
                  },
                  getUint16: function (te) {
                    return (
                      (te = s(
                        this,
                        2,
                        te,
                        1 < arguments.length ? arguments[1] : void 0,
                      )),
                      (te[1] << 8) | te[0]
                    );
                  },
                  getInt32: function (te) {
                    return l(
                      s(
                        this,
                        4,
                        te,
                        1 < arguments.length ? arguments[1] : void 0,
                      ),
                    );
                  },
                  getUint32: function (te) {
                    return (
                      l(
                        s(
                          this,
                          4,
                          te,
                          1 < arguments.length ? arguments[1] : void 0,
                        ),
                      ) >>> 0
                    );
                  },
                  getFloat32: function (te) {
                    return ce(
                      s(
                        this,
                        4,
                        te,
                        1 < arguments.length ? arguments[1] : void 0,
                      ),
                      23,
                    );
                  },
                  getFloat64: function (te) {
                    return ce(
                      s(
                        this,
                        8,
                        te,
                        1 < arguments.length ? arguments[1] : void 0,
                      ),
                      52,
                    );
                  },
                  setInt8: function (te, se) {
                    n(this, 1, te, u, se);
                  },
                  setUint8: function (te, se) {
                    n(this, 1, te, u, se);
                  },
                  setInt16: function (te, se) {
                    n(
                      this,
                      2,
                      te,
                      a,
                      se,
                      2 < arguments.length ? arguments[2] : void 0,
                    );
                  },
                  setUint16: function (te, se) {
                    n(
                      this,
                      2,
                      te,
                      a,
                      se,
                      2 < arguments.length ? arguments[2] : void 0,
                    );
                  },
                  setInt32: function (te, se) {
                    n(
                      this,
                      4,
                      te,
                      r,
                      se,
                      2 < arguments.length ? arguments[2] : void 0,
                    );
                  },
                  setUint32: function (te, se) {
                    n(
                      this,
                      4,
                      te,
                      r,
                      se,
                      2 < arguments.length ? arguments[2] : void 0,
                    );
                  },
                  setFloat32: function (te, se) {
                    n(
                      this,
                      4,
                      te,
                      d,
                      se,
                      2 < arguments.length ? arguments[2] : void 0,
                    );
                  },
                  setFloat64: function (te, se) {
                    n(
                      this,
                      8,
                      te,
                      h,
                      se,
                      2 < arguments.length ? arguments[2] : void 0,
                    );
                  },
                });
            H(P, X), H(L, W), (b.exports = { ArrayBuffer: P, DataView: L });
          },
          {
            '../internals/an-instance': 9,
            '../internals/array-buffer-native': 11,
            '../internals/array-fill': 15,
            '../internals/create-non-enumerable-property': 38,
            '../internals/descriptors': 43,
            '../internals/fails': 51,
            '../internals/global': 59,
            '../internals/ieee754': 65,
            '../internals/internal-state': 70,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-get-prototype-of': 97,
            '../internals/object-set-prototype-of': 101,
            '../internals/redefine-all': 107,
            '../internals/set-to-string-tag': 117,
            '../internals/to-index': 131,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
          },
        ],
        14: [
          function (t, b, y) {
            var u = t('../internals/to-object'),
              a = t('../internals/to-absolute-index'),
              r = t('../internals/to-length'),
              l = Math.min;
            b.exports =
              [].copyWithin ||
              function (f, h) {
                var o = u(this),
                  s = r(o.length),
                  n = a(f, s),
                  c = a(h, s),
                  f = 2 < arguments.length ? arguments[2] : void 0,
                  g = l((f === void 0 ? s : a(f, s)) - c, s - n),
                  _ = 1;
                for (
                  c < n && n < c + g && ((_ = -1), (c += g - 1), (n += g - 1));
                  0 < g--;

                )
                  c in o ? (o[n] = o[c]) : delete o[n], (n += _), (c += _);
                return o;
              };
          },
          {
            '../internals/to-absolute-index': 130,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        15: [
          function (t, b, y) {
            var u = t('../internals/to-object'),
              a = t('../internals/to-absolute-index'),
              r = t('../internals/to-length');
            b.exports = function (l) {
              for (
                var d = u(this),
                  h = r(d.length),
                  s = arguments.length,
                  o = a(1 < s ? arguments[1] : void 0, h),
                  s = 2 < s ? arguments[2] : void 0,
                  n = s === void 0 ? h : a(s, h);
                o < n;

              )
                d[o++] = l;
              return d;
            };
          },
          {
            '../internals/to-absolute-index': 130,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        16: [
          function (r, b, y) {
            var u = r('../internals/array-iteration').forEach,
              a = r('../internals/array-method-is-strict'),
              r = r('../internals/array-method-uses-to-length'),
              a = a('forEach'),
              r = r('forEach');
            b.exports =
              a && r
                ? [].forEach
                : function (l) {
                    return u(
                      this,
                      l,
                      1 < arguments.length ? arguments[1] : void 0,
                    );
                  };
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
          },
        ],
        17: [
          function (t, b, y) {
            var u = t('../internals/function-bind-context'),
              a = t('../internals/to-object'),
              r = t('../internals/call-with-safe-iteration-closing'),
              l = t('../internals/is-array-iterator-method'),
              d = t('../internals/to-length'),
              h = t('../internals/create-property'),
              o = t('../internals/get-iterator-method');
            b.exports = function (v) {
              var n,
                c,
                f,
                g,
                _,
                x,
                j = a(v),
                v = typeof this == 'function' ? this : Array,
                M = arguments.length,
                C = 1 < M ? arguments[1] : void 0,
                k = C !== void 0,
                A = o(j),
                R = 0;
              if (
                (k && (C = u(C, 2 < M ? arguments[2] : void 0, 2)),
                A == null || (v == Array && l(A)))
              )
                for (c = new v((n = d(j.length))); R < n; R++)
                  (x = k ? C(j[R], R) : j[R]), h(c, R, x);
              else
                for (
                  _ = (g = A.call(j)).next, c = new v();
                  !(f = _.call(g)).done;
                  R++
                )
                  (x = k ? r(g, C, [f.value, R], !0) : f.value), h(c, R, x);
              return (c.length = R), c;
            };
          },
          {
            '../internals/call-with-safe-iteration-closing': 26,
            '../internals/create-property': 40,
            '../internals/function-bind-context': 54,
            '../internals/get-iterator-method': 57,
            '../internals/is-array-iterator-method': 71,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        18: [
          function (t, b, y) {
            function u(d) {
              return function (h, o, s) {
                var n,
                  c = a(h),
                  f = r(c.length),
                  g = l(s, f);
                if (d && o != o) {
                  for (; g < f; ) if ((n = c[g++]) != n) return !0;
                } else
                  for (; g < f; g++)
                    if ((d || g in c) && c[g] === o) return d || g || 0;
                return !d && -1;
              };
            }
            var a = t('../internals/to-indexed-object'),
              r = t('../internals/to-length'),
              l = t('../internals/to-absolute-index');
            b.exports = { includes: u(!0), indexOf: u(!1) };
          },
          {
            '../internals/to-absolute-index': 130,
            '../internals/to-indexed-object': 132,
            '../internals/to-length': 134,
          },
        ],
        19: [
          function (t, b, y) {
            function u(s) {
              var n = s == 1,
                c = s == 2,
                f = s == 3,
                g = s == 4,
                _ = s == 6,
                x = s == 5 || _;
              return function (j, v, M, C) {
                for (
                  var k,
                    A,
                    R = l(j),
                    O = r(R),
                    D = a(v, M, 3),
                    N = d(O.length),
                    U = 0,
                    v = C || h,
                    H = n ? v(j, N) : c ? v(j, 0) : void 0;
                  U < N;
                  U++
                )
                  if ((x || U in O) && ((A = D((k = O[U]), U, R)), s)) {
                    if (n) H[U] = A;
                    else if (A)
                      switch (s) {
                        case 3:
                          return !0;
                        case 5:
                          return k;
                        case 6:
                          return U;
                        case 2:
                          o.call(H, k);
                      }
                    else if (g) return !1;
                  }
                return _ ? -1 : f || g ? g : H;
              };
            }
            var a = t('../internals/function-bind-context'),
              r = t('../internals/indexed-object'),
              l = t('../internals/to-object'),
              d = t('../internals/to-length'),
              h = t('../internals/array-species-create'),
              o = [].push;
            b.exports = {
              forEach: u(0),
              map: u(1),
              filter: u(2),
              some: u(3),
              every: u(4),
              find: u(5),
              findIndex: u(6),
            };
          },
          {
            '../internals/array-species-create': 25,
            '../internals/function-bind-context': 54,
            '../internals/indexed-object': 66,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        20: [
          function (s, b, y) {
            var u = s('../internals/to-indexed-object'),
              a = s('../internals/to-integer'),
              r = s('../internals/to-length'),
              o = s('../internals/array-method-is-strict'),
              s = s('../internals/array-method-uses-to-length'),
              l = Math.min,
              d = [].lastIndexOf,
              h = !!d && 1 / [1].lastIndexOf(1, -0) < 0,
              o = o('lastIndexOf'),
              s = s('indexOf', { ACCESSORS: !0, 1: 0 });
            b.exports =
              h || !o || !s
                ? function (n) {
                    if (h) return d.apply(this, arguments) || 0;
                    var c = u(this),
                      f = r(c.length),
                      g = f - 1;
                    for (
                      (g = 1 < arguments.length ? l(g, a(arguments[1])) : g) <
                        0 && (g = f + g);
                      0 <= g;
                      g--
                    )
                      if (g in c && c[g] === n) return g || 0;
                    return -1;
                  }
                : d;
          },
          {
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/to-indexed-object': 132,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
          },
        ],
        21: [
          function (t, b, y) {
            var u = t('../internals/fails'),
              a = t('../internals/well-known-symbol'),
              r = t('../internals/engine-v8-version'),
              l = a('species');
            b.exports = function (d) {
              return (
                51 <= r ||
                !u(function () {
                  var h = [];
                  return (
                    ((h.constructor = {})[l] = function () {
                      return { foo: 1 };
                    }),
                    h[d](Boolean).foo !== 1
                  );
                })
              );
            };
          },
          {
            '../internals/engine-v8-version': 48,
            '../internals/fails': 51,
            '../internals/well-known-symbol': 146,
          },
        ],
        22: [
          function (t, b, y) {
            var u = t('../internals/fails');
            b.exports = function (a, r) {
              var l = [][a];
              return (
                !!l &&
                u(function () {
                  l.call(
                    null,
                    r ||
                      function () {
                        throw 1;
                      },
                    1,
                  );
                })
              );
            };
          },
          { '../internals/fails': 51 },
        ],
        23: [
          function (t, b, y) {
            function u(o) {
              throw o;
            }
            var a = t('../internals/descriptors'),
              r = t('../internals/fails'),
              l = t('../internals/has'),
              d = Object.defineProperty,
              h = {};
            b.exports = function (o, s) {
              var n, c, f, g;
              return l(h, o)
                ? h[o]
                : ((n = [][o]),
                  (c = !!l((s = s || {}), 'ACCESSORS') && s.ACCESSORS),
                  (f = l(s, 0) ? s[0] : u),
                  (g = l(s, 1) ? s[1] : void 0),
                  (h[o] =
                    !!n &&
                    !r(function () {
                      if (c && !a) return !0;
                      var _ = { length: -1 };
                      c ? d(_, 1, { enumerable: !0, get: u }) : (_[1] = 1),
                        n.call(_, f, g);
                    })));
            };
          },
          {
            '../internals/descriptors': 43,
            '../internals/fails': 51,
            '../internals/has': 60,
          },
        ],
        24: [
          function (t, b, y) {
            function u(h) {
              return function (o, s, n, c) {
                a(s);
                var f = r(o),
                  g = l(f),
                  _ = d(f.length),
                  x = h ? _ - 1 : 0,
                  j = h ? -1 : 1;
                if (n < 2)
                  for (;;) {
                    if (x in g) {
                      (c = g[x]), (x += j);
                      break;
                    }
                    if (((x += j), h ? x < 0 : _ <= x))
                      throw TypeError(
                        'Reduce of empty array with no initial value',
                      );
                  }
                for (; h ? 0 <= x : x < _; x += j)
                  x in g && (c = s(c, g[x], x, f));
                return c;
              };
            }
            var a = t('../internals/a-function'),
              r = t('../internals/to-object'),
              l = t('../internals/indexed-object'),
              d = t('../internals/to-length');
            b.exports = { left: u(!1), right: u(!0) };
          },
          {
            '../internals/a-function': 5,
            '../internals/indexed-object': 66,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        25: [
          function (t, b, y) {
            var u = t('../internals/is-object'),
              a = t('../internals/is-array'),
              r = t('../internals/well-known-symbol')('species');
            b.exports = function (l, d) {
              var h;
              return new (
                (h =
                  a(l) &&
                  ((typeof (h = l.constructor) == 'function' &&
                    (h === Array || a(h.prototype))) ||
                    (u(h) && (h = h[r]) === null))
                    ? void 0
                    : h) === void 0
                  ? Array
                  : h
              )(d === 0 ? 0 : d);
            };
          },
          {
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/well-known-symbol': 146,
          },
        ],
        26: [
          function (t, b, y) {
            var u = t('../internals/an-object');
            b.exports = function (a, r, l, d) {
              try {
                return d ? r(u(l)[0], l[1]) : r(l);
              } catch (h) {
                throw ((d = a.return), d !== void 0 && u(d.call(a)), h);
              }
            };
          },
          { '../internals/an-object': 10 },
        ],
        27: [
          function (t, b, y) {
            var u = t('../internals/well-known-symbol')('iterator'),
              a = !1;
            try {
              var r = 0,
                l = {
                  next: function () {
                    return { done: !!r++ };
                  },
                  return: function () {
                    a = !0;
                  },
                };
              (l[u] = function () {
                return this;
              }),
                Array.from(l, function () {
                  throw 2;
                });
            } catch {}
            b.exports = function (d, h) {
              if (!h && !a) return !1;
              var o = !1;
              try {
                var s = {};
                (s[u] = function () {
                  return {
                    next: function () {
                      return { done: (o = !0) };
                    },
                  };
                }),
                  d(s);
              } catch {}
              return o;
            };
          },
          { '../internals/well-known-symbol': 146 },
        ],
        28: [
          function (t, b, y) {
            var u = {}.toString;
            b.exports = function (a) {
              return u.call(a).slice(8, -1);
            };
          },
          {},
        ],
        29: [
          function (t, b, y) {
            var u = t('../internals/to-string-tag-support'),
              a = t('../internals/classof-raw'),
              r = t('../internals/well-known-symbol')('toStringTag'),
              l =
                a(
                  (function () {
                    return arguments;
                  })(),
                ) == 'Arguments';
            b.exports = u
              ? a
              : function (d) {
                  var h;
                  return d === void 0
                    ? 'Undefined'
                    : d === null
                    ? 'Null'
                    : typeof (h = (function (o, s) {
                        try {
                          return o[s];
                        } catch {}
                      })((d = Object(d)), r)) == 'string'
                    ? h
                    : l
                    ? a(d)
                    : (h = a(d)) == 'Object' && typeof d.callee == 'function'
                    ? 'Arguments'
                    : h;
                };
          },
          {
            '../internals/classof-raw': 28,
            '../internals/to-string-tag-support': 139,
            '../internals/well-known-symbol': 146,
          },
        ],
        30: [
          function (f, b, y) {
            var u = f('../internals/object-define-property').f,
              a = f('../internals/object-create'),
              r = f('../internals/redefine-all'),
              l = f('../internals/function-bind-context'),
              d = f('../internals/an-instance'),
              h = f('../internals/iterate'),
              o = f('../internals/define-iterator'),
              s = f('../internals/set-species'),
              n = f('../internals/descriptors'),
              c = f('../internals/internal-metadata').fastKey,
              f = f('../internals/internal-state'),
              g = f.set,
              _ = f.getterFor;
            b.exports = {
              getConstructor: function (x, j, v, M) {
                function C(O, D, N) {
                  var U,
                    H = R(O),
                    q = k(O, D);
                  return (
                    q
                      ? (q.value = N)
                      : ((H.last = q =
                          {
                            index: (U = c(D, !0)),
                            key: D,
                            value: N,
                            previous: (D = H.last),
                            next: void 0,
                            removed: !1,
                          }),
                        H.first || (H.first = q),
                        D && (D.next = q),
                        n ? H.size++ : O.size++,
                        U !== 'F' && (H.index[U] = q)),
                    O
                  );
                }
                function k(U, D) {
                  var N,
                    U = R(U),
                    H = c(D);
                  if (H !== 'F') return U.index[H];
                  for (N = U.first; N; N = N.next) if (N.key == D) return N;
                }
                var A = x(function (O, D) {
                    d(O, A, j),
                      g(O, {
                        type: j,
                        index: a(null),
                        first: void 0,
                        last: void 0,
                        size: 0,
                      }),
                      n || (O.size = 0),
                      D != null && h(D, O[M], O, v);
                  }),
                  R = _(j);
                return (
                  r(A.prototype, {
                    clear: function () {
                      for (var O = R(this), D = O.index, N = O.first; N; )
                        (N.removed = !0),
                          N.previous && (N.previous = N.previous.next = void 0),
                          delete D[N.index],
                          (N = N.next);
                      (O.first = O.last = void 0),
                        n ? (O.size = 0) : (this.size = 0);
                    },
                    delete: function (H) {
                      var D,
                        N,
                        U = R(this),
                        H = k(this, H);
                      return (
                        H &&
                          ((D = H.next),
                          (N = H.previous),
                          delete U.index[H.index],
                          (H.removed = !0),
                          N && (N.next = D),
                          D && (D.previous = N),
                          U.first == H && (U.first = D),
                          U.last == H && (U.last = N),
                          n ? U.size-- : this.size--),
                        !!H
                      );
                    },
                    forEach: function (O) {
                      for (
                        var D,
                          N = R(this),
                          U = l(
                            O,
                            1 < arguments.length ? arguments[1] : void 0,
                            3,
                          );
                        (D = D ? D.next : N.first);

                      )
                        for (U(D.value, D.key, this); D && D.removed; )
                          D = D.previous;
                    },
                    has: function (O) {
                      return !!k(this, O);
                    },
                  }),
                  r(
                    A.prototype,
                    v
                      ? {
                          get: function (O) {
                            return (O = k(this, O)), O && O.value;
                          },
                          set: function (O, D) {
                            return C(this, O === 0 ? 0 : O, D);
                          },
                        }
                      : {
                          add: function (O) {
                            return C(this, (O = O === 0 ? 0 : O), O);
                          },
                        },
                  ),
                  n &&
                    u(A.prototype, 'size', {
                      get: function () {
                        return R(this).size;
                      },
                    }),
                  A
                );
              },
              setStrong: function (x, j, v) {
                var M = j + ' Iterator',
                  C = _(j),
                  k = _(M);
                o(
                  x,
                  j,
                  function (A, R) {
                    g(this, {
                      type: M,
                      target: A,
                      state: C(A),
                      kind: R,
                      last: void 0,
                    });
                  },
                  function () {
                    for (
                      var A = k(this), R = A.kind, O = A.last;
                      O && O.removed;

                    )
                      O = O.previous;
                    return A.target && (A.last = O = O ? O.next : A.state.first)
                      ? R == 'keys'
                        ? { value: O.key, done: !1 }
                        : R == 'values'
                        ? { value: O.value, done: !1 }
                        : { value: [O.key, O.value], done: !1 }
                      : { value: (A.target = void 0), done: !0 };
                  },
                  v ? 'entries' : 'values',
                  !v,
                  !0,
                ),
                  s(j);
              },
            };
          },
          {
            '../internals/an-instance': 9,
            '../internals/define-iterator': 41,
            '../internals/descriptors': 43,
            '../internals/function-bind-context': 54,
            '../internals/internal-metadata': 69,
            '../internals/internal-state': 70,
            '../internals/iterate': 77,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/redefine-all': 107,
            '../internals/set-species': 116,
          },
        ],
        31: [
          function (g, b, y) {
            function u(C) {
              return C.frozen || (C.frozen = new a());
            }
            function a() {
              this.entries = [];
            }
            function r(C, k) {
              return j(C.entries, function (A) {
                return A[0] === k;
              });
            }
            var l = g('../internals/redefine-all'),
              d = g('../internals/internal-metadata').getWeakData,
              h = g('../internals/an-object'),
              o = g('../internals/is-object'),
              s = g('../internals/an-instance'),
              n = g('../internals/iterate'),
              c = g('../internals/array-iteration'),
              f = g('../internals/has'),
              g = g('../internals/internal-state'),
              _ = g.set,
              x = g.getterFor,
              j = c.find,
              v = c.findIndex,
              M = 0;
            (a.prototype = {
              get: function (C) {
                if (((C = r(this, C)), C)) return C[1];
              },
              has: function (C) {
                return !!r(this, C);
              },
              set: function (C, k) {
                var A = r(this, C);
                A ? (A[1] = k) : this.entries.push([C, k]);
              },
              delete: function (C) {
                var k = v(this.entries, function (A) {
                  return A[0] === C;
                });
                return ~k && this.entries.splice(k, 1), !!~k;
              },
            }),
              (b.exports = {
                getConstructor: function (C, k, A, R) {
                  function O(U, H, q) {
                    var z = N(U),
                      X = d(h(H), !0);
                    return X === !0 ? u(z).set(H, q) : (X[z.id] = q), U;
                  }
                  var D = C(function (U, H) {
                      s(U, D, k),
                        _(U, { type: k, id: M++, frozen: void 0 }),
                        H != null && n(H, U[R], U, A);
                    }),
                    N = x(k);
                  return (
                    l(D.prototype, {
                      delete: function (U) {
                        var H,
                          q = N(this);
                        return (
                          !!o(U) &&
                          ((H = d(U)) === !0
                            ? u(q).delete(U)
                            : H && f(H, q.id) && delete H[q.id])
                        );
                      },
                      has: function (U) {
                        var H,
                          q = N(this);
                        return (
                          !!o(U) &&
                          ((H = d(U)) === !0 ? u(q).has(U) : H && f(H, q.id))
                        );
                      },
                    }),
                    l(
                      D.prototype,
                      A
                        ? {
                            get: function (U) {
                              var H,
                                q = N(this);
                              if (o(U))
                                return (H = d(U)) === !0
                                  ? u(q).get(U)
                                  : H
                                  ? H[q.id]
                                  : void 0;
                            },
                            set: function (U, H) {
                              return O(this, U, H);
                            },
                          }
                        : {
                            add: function (U) {
                              return O(this, U, !0);
                            },
                          },
                    ),
                    D
                  );
                },
              });
          },
          {
            '../internals/an-instance': 9,
            '../internals/an-object': 10,
            '../internals/array-iteration': 19,
            '../internals/has': 60,
            '../internals/internal-metadata': 69,
            '../internals/internal-state': 70,
            '../internals/is-object': 74,
            '../internals/iterate': 77,
            '../internals/redefine-all': 107,
          },
        ],
        32: [
          function (t, b, y) {
            var u = t('../internals/export'),
              a = t('../internals/global'),
              r = t('../internals/is-forced'),
              l = t('../internals/redefine'),
              d = t('../internals/internal-metadata'),
              h = t('../internals/iterate'),
              o = t('../internals/an-instance'),
              s = t('../internals/is-object'),
              n = t('../internals/fails'),
              c = t('../internals/check-correctness-of-iteration'),
              f = t('../internals/set-to-string-tag'),
              g = t('../internals/inherit-if-required');
            b.exports = function (_, x, j) {
              function v(X) {
                var W = H[X];
                l(
                  H,
                  X,
                  X == 'add'
                    ? function (Z) {
                        return W.call(this, Z === 0 ? 0 : Z), this;
                      }
                    : X == 'delete'
                    ? function (Z) {
                        return !(D && !s(Z)) && W.call(this, Z === 0 ? 0 : Z);
                      }
                    : X == 'get'
                    ? function (Z) {
                        return D && !s(Z)
                          ? void 0
                          : W.call(this, Z === 0 ? 0 : Z);
                      }
                    : X == 'has'
                    ? function (Z) {
                        return !(D && !s(Z)) && W.call(this, Z === 0 ? 0 : Z);
                      }
                    : function (Z, $) {
                        return W.call(this, Z === 0 ? 0 : Z, $), this;
                      },
                );
              }
              var M,
                C,
                k,
                A,
                R,
                O = _.indexOf('Map') !== -1,
                D = _.indexOf('Weak') !== -1,
                N = O ? 'set' : 'add',
                U = a[_],
                H = U && U.prototype,
                q = U,
                z = {};
              return (
                r(
                  _,
                  typeof U != 'function' ||
                    !(
                      D ||
                      (H.forEach &&
                        !n(function () {
                          new U().entries().next();
                        }))
                    ),
                )
                  ? ((q = j.getConstructor(x, _, O, N)), (d.REQUIRED = !0))
                  : r(_, !0) &&
                    ((C = (M = new q())[N](D ? {} : -0, 1) != M),
                    (k = n(function () {
                      M.has(1);
                    })),
                    (A = c(function (X) {
                      new U(X);
                    })),
                    (R =
                      !D &&
                      n(function () {
                        for (var X = new U(), W = 5; W--; ) X[N](W, W);
                        return !X.has(-0);
                      })),
                    A ||
                      (((q = x(function (X, W) {
                        return (
                          o(X, q, _),
                          (X = g(new U(), X, q)),
                          W != null && h(W, X[N], X, O),
                          X
                        );
                      })).prototype = H).constructor = q),
                    (k || R) && (v('delete'), v('has'), O && v('get')),
                    (R || C) && v(N),
                    D && H.clear && delete H.clear),
                (z[_] = q),
                u({ global: !0, forced: q != U }, z),
                f(q, _),
                D || j.setStrong(q, _, O),
                q
              );
            };
          },
          {
            '../internals/an-instance': 9,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/global': 59,
            '../internals/inherit-if-required': 67,
            '../internals/internal-metadata': 69,
            '../internals/is-forced': 73,
            '../internals/is-object': 74,
            '../internals/iterate': 77,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
          },
        ],
        33: [
          function (t, b, y) {
            var u = t('../internals/has'),
              a = t('../internals/own-keys'),
              r = t('../internals/object-get-own-property-descriptor'),
              l = t('../internals/object-define-property');
            b.exports = function (d, h) {
              for (var o = a(h), s = l.f, n = r.f, c = 0; c < o.length; c++) {
                var f = o[c];
                u(d, f) || s(d, f, n(h, f));
              }
            };
          },
          {
            '../internals/has': 60,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/own-keys': 103,
          },
        ],
        34: [
          function (t, b, y) {
            var u = t('../internals/well-known-symbol')('match');
            b.exports = function (a) {
              var r = /./;
              try {
                '/./'[a](r);
              } catch {
                try {
                  return (r[u] = !1), '/./'[a](r);
                } catch {}
              }
              return !1;
            };
          },
          { '../internals/well-known-symbol': 146 },
        ],
        35: [
          function (t, b, y) {
            (t = t('../internals/fails')),
              (b.exports = !t(function () {
                function u() {}
                return (
                  (u.prototype.constructor = null),
                  Object.getPrototypeOf(new u()) !== u.prototype
                );
              }));
          },
          { '../internals/fails': 51 },
        ],
        36: [
          function (t, b, y) {
            var u = t('../internals/require-object-coercible'),
              a = /"/g;
            b.exports = function (o, l, d, h) {
              var o = String(u(o)),
                s = '<' + l;
              return (
                d !== '' &&
                  (s += ' ' + d + '="' + String(h).replace(a, '&quot;') + '"'),
                s + '>' + o + '</' + l + '>'
              );
            };
          },
          { '../internals/require-object-coercible': 113 },
        ],
        37: [
          function (t, b, y) {
            function u() {
              return this;
            }
            var a = t('../internals/iterators-core').IteratorPrototype,
              r = t('../internals/object-create'),
              l = t('../internals/create-property-descriptor'),
              d = t('../internals/set-to-string-tag'),
              h = t('../internals/iterators');
            b.exports = function (o, s, n) {
              return (
                (s += ' Iterator'),
                (o.prototype = r(a, { next: l(1, n) })),
                d(o, s, !1, !0),
                (h[s] = u),
                o
              );
            };
          },
          {
            '../internals/create-property-descriptor': 39,
            '../internals/iterators': 79,
            '../internals/iterators-core': 78,
            '../internals/object-create': 90,
            '../internals/set-to-string-tag': 117,
          },
        ],
        38: [
          function (t, b, y) {
            var u = t('../internals/descriptors'),
              a = t('../internals/object-define-property'),
              r = t('../internals/create-property-descriptor');
            b.exports = u
              ? function (l, d, h) {
                  return a.f(l, d, r(1, h));
                }
              : function (l, d, h) {
                  return (l[d] = h), l;
                };
          },
          {
            '../internals/create-property-descriptor': 39,
            '../internals/descriptors': 43,
            '../internals/object-define-property': 92,
          },
        ],
        39: [
          function (t, b, y) {
            b.exports = function (u, a) {
              return {
                enumerable: !(1 & u),
                configurable: !(2 & u),
                writable: !(4 & u),
                value: a,
              };
            };
          },
          {},
        ],
        40: [
          function (t, b, y) {
            var u = t('../internals/to-primitive'),
              a = t('../internals/object-define-property'),
              r = t('../internals/create-property-descriptor');
            b.exports = function (l, d, h) {
              (d = u(d)), d in l ? a.f(l, d, r(0, h)) : (l[d] = h);
            };
          },
          {
            '../internals/create-property-descriptor': 39,
            '../internals/object-define-property': 92,
            '../internals/to-primitive': 138,
          },
        ],
        41: [
          function (g, b, y) {
            function u() {
              return this;
            }
            var a = g('../internals/export'),
              r = g('../internals/create-iterator-constructor'),
              l = g('../internals/object-get-prototype-of'),
              d = g('../internals/object-set-prototype-of'),
              h = g('../internals/set-to-string-tag'),
              o = g('../internals/create-non-enumerable-property'),
              s = g('../internals/redefine'),
              n = g('../internals/well-known-symbol'),
              c = g('../internals/is-pure'),
              f = g('../internals/iterators'),
              g = g('../internals/iterators-core'),
              _ = g.IteratorPrototype,
              x = g.BUGGY_SAFARI_ITERATORS,
              j = n('iterator'),
              v = 'values',
              M = 'entries';
            b.exports = function (C, k, A, z, O, D, N) {
              r(A, k, z);
              function U(P) {
                if (P === O && $) return $;
                if (!x && P in W) return W[P];
                switch (P) {
                  case 'keys':
                  case v:
                  case M:
                    return function () {
                      return new A(this, P);
                    };
                }
                return function () {
                  return new A(this);
                };
              }
              var H,
                q,
                z = k + ' Iterator',
                X = !1,
                W = C.prototype,
                Z = W[j] || W['@@iterator'] || (O && W[O]),
                $ = (!x && Z) || U(O),
                ae = (k == 'Array' && W.entries) || Z;
              if (
                (ae &&
                  ((ae = l(ae.call(new C()))),
                  _ !== Object.prototype &&
                    ae.next &&
                    (c ||
                      l(ae) === _ ||
                      (d
                        ? d(ae, _)
                        : typeof ae[j] != 'function' && o(ae, j, u)),
                    h(ae, z, !0, !0),
                    c && (f[z] = u))),
                O == v &&
                  Z &&
                  Z.name !== v &&
                  ((X = !0),
                  ($ = function () {
                    return Z.call(this);
                  })),
                (c && !N) || W[j] === $ || o(W, j, $),
                (f[k] = $),
                O)
              )
                if (
                  ((H = {
                    values: U(v),
                    keys: D ? $ : U('keys'),
                    entries: U(M),
                  }),
                  N)
                )
                  for (q in H) (!x && !X && q in W) || s(W, q, H[q]);
                else a({ target: k, proto: !0, forced: x || X }, H);
              return H;
            };
          },
          {
            '../internals/create-iterator-constructor': 37,
            '../internals/create-non-enumerable-property': 38,
            '../internals/export': 50,
            '../internals/is-pure': 75,
            '../internals/iterators': 79,
            '../internals/iterators-core': 78,
            '../internals/object-get-prototype-of': 97,
            '../internals/object-set-prototype-of': 101,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
            '../internals/well-known-symbol': 146,
          },
        ],
        42: [
          function (t, b, y) {
            var u = t('../internals/path'),
              a = t('../internals/has'),
              r = t('../internals/well-known-symbol-wrapped'),
              l = t('../internals/object-define-property').f;
            b.exports = function (d) {
              var h = u.Symbol || (u.Symbol = {});
              a(h, d) || l(h, d, { value: r.f(d) });
            };
          },
          {
            '../internals/has': 60,
            '../internals/object-define-property': 92,
            '../internals/path': 104,
            '../internals/well-known-symbol-wrapped': 145,
          },
        ],
        43: [
          function (t, b, y) {
            (t = t('../internals/fails')),
              (b.exports = !t(function () {
                return (
                  Object.defineProperty({}, 1, {
                    get: function () {
                      return 7;
                    },
                  })[1] != 7
                );
              }));
          },
          { '../internals/fails': 51 },
        ],
        44: [
          function (a, b, y) {
            var u = a('../internals/global'),
              a = a('../internals/is-object'),
              r = u.document,
              l = a(r) && a(r.createElement);
            b.exports = function (d) {
              return l ? r.createElement(d) : {};
            };
          },
          { '../internals/global': 59, '../internals/is-object': 74 },
        ],
        45: [
          function (t, b, y) {
            b.exports = {
              CSSRuleList: 0,
              CSSStyleDeclaration: 0,
              CSSValueList: 0,
              ClientRectList: 0,
              DOMRectList: 0,
              DOMStringList: 0,
              DOMTokenList: 1,
              DataTransferItemList: 0,
              FileList: 0,
              HTMLAllCollection: 0,
              HTMLCollection: 0,
              HTMLFormElement: 0,
              HTMLSelectElement: 0,
              MediaList: 0,
              MimeTypeArray: 0,
              NamedNodeMap: 0,
              NodeList: 1,
              PaintRequestList: 0,
              Plugin: 0,
              PluginArray: 0,
              SVGLengthList: 0,
              SVGNumberList: 0,
              SVGPathSegList: 0,
              SVGPointList: 0,
              SVGStringList: 0,
              SVGTransformList: 0,
              SourceBufferList: 0,
              StyleSheetList: 0,
              TextTrackCueList: 0,
              TextTrackList: 0,
              TouchList: 0,
            };
          },
          {},
        ],
        46: [
          function (t, b, y) {
            (t = t('../internals/engine-user-agent')),
              (b.exports = /(iphone|ipod|ipad).*applewebkit/i.test(t));
          },
          { '../internals/engine-user-agent': 47 },
        ],
        47: [
          function (t, b, y) {
            (t = t('../internals/get-built-in')),
              (b.exports = t('navigator', 'userAgent') || '');
          },
          { '../internals/get-built-in': 56 },
        ],
        48: [
          function (r, b, y) {
            var u,
              a,
              l = r('../internals/global'),
              r = r('../internals/engine-user-agent'),
              l = l.process,
              l = l && l.versions,
              l = l && l.v8;
            l
              ? (a = (u = l.split('.'))[0] + u[1])
              : r &&
                (!(u = r.match(/Edge\/(\d+)/)) || 74 <= u[1]) &&
                (u = r.match(/Chrome\/(\d+)/)) &&
                (a = u[1]),
              (b.exports = a && +a);
          },
          { '../internals/engine-user-agent': 47, '../internals/global': 59 },
        ],
        49: [
          function (t, b, y) {
            b.exports = [
              'constructor',
              'hasOwnProperty',
              'isPrototypeOf',
              'propertyIsEnumerable',
              'toLocaleString',
              'toString',
              'valueOf',
            ];
          },
          {},
        ],
        50: [
          function (t, b, y) {
            var u = t('../internals/global'),
              a = t('../internals/object-get-own-property-descriptor').f,
              r = t('../internals/create-non-enumerable-property'),
              l = t('../internals/redefine'),
              d = t('../internals/set-global'),
              h = t('../internals/copy-constructor-properties'),
              o = t('../internals/is-forced');
            b.exports = function (s, n) {
              var c,
                f,
                g,
                _ = s.target,
                x = s.global,
                j = s.stat,
                v = x ? u : j ? u[_] || d(_, {}) : (u[_] || {}).prototype;
              if (v)
                for (c in n) {
                  if (
                    ((f = n[c]),
                    (g = s.noTargetGet ? (g = a(v, c)) && g.value : v[c]),
                    !o(x ? c : _ + (j ? '.' : '#') + c, s.forced) &&
                      g !== void 0)
                  ) {
                    if (typeof f == typeof g) continue;
                    h(f, g);
                  }
                  (s.sham || (g && g.sham)) && r(f, 'sham', !0), l(v, c, f, s);
                }
            };
          },
          {
            '../internals/copy-constructor-properties': 33,
            '../internals/create-non-enumerable-property': 38,
            '../internals/global': 59,
            '../internals/is-forced': 73,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/redefine': 108,
            '../internals/set-global': 115,
          },
        ],
        51: [
          function (t, b, y) {
            b.exports = function (u) {
              try {
                return !!u();
              } catch {
                return !0;
              }
            };
          },
          {},
        ],
        52: [
          function (n, b, y) {
            n('../modules/es.regexp.exec');
            var u = n('../internals/redefine'),
              a = n('../internals/fails'),
              r = n('../internals/well-known-symbol'),
              l = n('../internals/regexp-exec'),
              d = n('../internals/create-non-enumerable-property'),
              h = r('species'),
              o = !a(function () {
                var g = /./;
                return (
                  (g.exec = function () {
                    var _ = [];
                    return (_.groups = { a: '7' }), _;
                  }),
                  ''.replace(g, '$<a>') !== '7'
                );
              }),
              s = 'a'.replace(/./, '$0') === '$0',
              n = r('replace'),
              c = !!/./[n] && /./[n]('a', '$0') === '',
              f = !a(function () {
                var _ = /(?:)/,
                  g = _.exec,
                  _ =
                    ((_.exec = function () {
                      return g.apply(this, arguments);
                    }),
                    'ab'.split(_));
                return _.length !== 2 || _[0] !== 'a' || _[1] !== 'b';
              });
            b.exports = function (g, _, x, j) {
              var v,
                M,
                C = r(g),
                k = !a(function () {
                  var R = {};
                  return (
                    (R[C] = function () {
                      return 7;
                    }),
                    ''[g](R) != 7
                  );
                }),
                A =
                  k &&
                  !a(function () {
                    var R = !1,
                      O = /a/;
                    return (
                      g === 'split' &&
                        (((O = { constructor: {} }).constructor[h] =
                          function () {
                            return O;
                          }),
                        (O.flags = ''),
                        (O[C] = /./[C])),
                      (O.exec = function () {
                        return (R = !0), null;
                      }),
                      O[C](''),
                      !R
                    );
                  });
              (k &&
                A &&
                (g !== 'replace' || (o && s && !c)) &&
                (g !== 'split' || f)) ||
                ((v = /./[C]),
                (x = (A = x(
                  C,
                  ''[g],
                  function (R, O, D, N, U) {
                    return O.exec === l
                      ? k && !U
                        ? { done: !0, value: v.call(O, D, N) }
                        : { done: !0, value: R.call(D, O, N) }
                      : { done: !1 };
                  },
                  {
                    REPLACE_KEEPS_$0: s,
                    REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: c,
                  },
                ))[0]),
                (M = A[1]),
                u(String.prototype, g, x),
                u(
                  RegExp.prototype,
                  C,
                  _ == 2
                    ? function (R, O) {
                        return M.call(R, this, O);
                      }
                    : function (R) {
                        return M.call(R, this);
                      },
                )),
                j && d(RegExp.prototype[C], 'sham', !0);
            };
          },
          {
            '../internals/create-non-enumerable-property': 38,
            '../internals/fails': 51,
            '../internals/redefine': 108,
            '../internals/regexp-exec': 110,
            '../internals/well-known-symbol': 146,
            '../modules/es.regexp.exec': 181,
          },
        ],
        53: [
          function (t, b, y) {
            (t = t('../internals/fails')),
              (b.exports = !t(function () {
                return Object.isExtensible(Object.preventExtensions({}));
              }));
          },
          { '../internals/fails': 51 },
        ],
        54: [
          function (t, b, y) {
            var u = t('../internals/a-function');
            b.exports = function (a, r, l) {
              if ((u(a), r === void 0)) return a;
              switch (l) {
                case 0:
                  return function () {
                    return a.call(r);
                  };
                case 1:
                  return function (d) {
                    return a.call(r, d);
                  };
                case 2:
                  return function (d, h) {
                    return a.call(r, d, h);
                  };
                case 3:
                  return function (d, h, o) {
                    return a.call(r, d, h, o);
                  };
              }
              return function () {
                return a.apply(r, arguments);
              };
            };
          },
          { '../internals/a-function': 5 },
        ],
        55: [
          function (t, b, y) {
            var u = t('../internals/a-function'),
              a = t('../internals/is-object'),
              r = [].slice,
              l = {};
            b.exports =
              Function.bind ||
              function (d) {
                var h = u(this),
                  o = r.call(arguments, 1),
                  s = function () {
                    var n = o.concat(r.call(arguments));
                    if (this instanceof s) {
                      var c = h,
                        f = n.length,
                        g = n;
                      if (!(f in l)) {
                        for (var _ = [], x = 0; x < f; x++)
                          _[x] = 'a[' + x + ']';
                        l[f] = Function(
                          'C,a',
                          'return new C(' + _.join(',') + ')',
                        );
                      }
                      return l[f](c, g);
                    }
                    return h.apply(d, n);
                  };
                return a(h.prototype) && (s.prototype = h.prototype), s;
              };
          },
          { '../internals/a-function': 5, '../internals/is-object': 74 },
        ],
        56: [
          function (t, b, y) {
            function u(l) {
              return typeof l == 'function' ? l : void 0;
            }
            var a = t('../internals/path'),
              r = t('../internals/global');
            b.exports = function (l, d) {
              return arguments.length < 2
                ? u(a[l]) || u(r[l])
                : (a[l] && a[l][d]) || (r[l] && r[l][d]);
            };
          },
          { '../internals/global': 59, '../internals/path': 104 },
        ],
        57: [
          function (t, b, y) {
            var u = t('../internals/classof'),
              a = t('../internals/iterators'),
              r = t('../internals/well-known-symbol')('iterator');
            b.exports = function (l) {
              if (l != null) return l[r] || l['@@iterator'] || a[u(l)];
            };
          },
          {
            '../internals/classof': 29,
            '../internals/iterators': 79,
            '../internals/well-known-symbol': 146,
          },
        ],
        58: [
          function (t, b, y) {
            var u = t('../internals/an-object'),
              a = t('../internals/get-iterator-method');
            b.exports = function (r) {
              var l = a(r);
              if (typeof l != 'function')
                throw TypeError(String(r) + ' is not iterable');
              return u(l.call(r));
            };
          },
          {
            '../internals/an-object': 10,
            '../internals/get-iterator-method': 57,
          },
        ],
        59: [
          function (t, b, y) {
            (function (u) {
              function a(r) {
                return r && r.Math == Math && r;
              }
              b.exports =
                a(typeof globalThis == 'object' && globalThis) ||
                a(typeof window == 'object' && window) ||
                a(typeof self == 'object' && self) ||
                a(typeof u == 'object' && u) ||
                Function('return this')();
            }.call(
              this,
              typeof As < 'u'
                ? As
                : typeof self < 'u'
                ? self
                : typeof window < 'u'
                ? window
                : {},
            ));
          },
          {},
        ],
        60: [
          function (t, b, y) {
            var u = {}.hasOwnProperty;
            b.exports = function (a, r) {
              return u.call(a, r);
            };
          },
          {},
        ],
        61: [
          function (t, b, y) {
            b.exports = {};
          },
          {},
        ],
        62: [
          function (t, b, y) {
            var u = t('../internals/global');
            b.exports = function (a, r) {
              var l = u.console;
              l &&
                l.error &&
                (arguments.length === 1 ? l.error(a) : l.error(a, r));
            };
          },
          { '../internals/global': 59 },
        ],
        63: [
          function (t, b, y) {
            (t = t('../internals/get-built-in')),
              (b.exports = t('document', 'documentElement'));
          },
          { '../internals/get-built-in': 56 },
        ],
        64: [
          function (t, b, y) {
            var u = t('../internals/descriptors'),
              a = t('../internals/fails'),
              r = t('../internals/document-create-element');
            b.exports =
              !u &&
              !a(function () {
                return (
                  Object.defineProperty(r('div'), 'a', {
                    get: function () {
                      return 7;
                    },
                  }).a != 7
                );
              });
          },
          {
            '../internals/descriptors': 43,
            '../internals/document-create-element': 44,
            '../internals/fails': 51,
          },
        ],
        65: [
          function (t, b, y) {
            var u = Math.abs,
              a = Math.pow,
              r = Math.floor,
              l = Math.log,
              d = Math.LN2;
            b.exports = {
              pack: function (h, o, x) {
                var n,
                  c,
                  f,
                  g = new Array(x),
                  _ = 8 * x - o - 1,
                  x = (1 << _) - 1,
                  j = x >> 1,
                  v = o === 23 ? a(2, -24) - a(2, -77) : 0,
                  M = h < 0 || (h === 0 && 1 / h < 0) ? 1 : 0,
                  C = 0;
                for (
                  (h = u(h)) != h || h === 1 / 0
                    ? ((c = h != h ? 1 : 0), (n = x))
                    : ((n = r(l(h) / d)),
                      h * (f = a(2, -n)) < 1 && (n--, (f *= 2)),
                      2 <= (h += 1 <= n + j ? v / f : v * a(2, 1 - j)) * f &&
                        (n++, (f /= 2)),
                      x <= n + j
                        ? ((c = 0), (n = x))
                        : 1 <= n + j
                        ? ((c = (h * f - 1) * a(2, o)), (n += j))
                        : ((c = h * a(2, j - 1) * a(2, o)), (n = 0)));
                  8 <= o;
                  g[C++] = 255 & c, c /= 256, o -= 8
                );
                for (
                  n = (n << o) | c, _ += o;
                  0 < _;
                  g[C++] = 255 & n, n /= 256, _ -= 8
                );
                return (g[--C] |= 128 * M), g;
              },
              unpack: function (h, o) {
                var s,
                  n = h.length,
                  x = 8 * n - o - 1,
                  c = (1 << x) - 1,
                  f = c >> 1,
                  g = x - 7,
                  _ = n - 1,
                  x = h[_--],
                  j = 127 & x;
                for (x >>= 7; 0 < g; j = 256 * j + h[_], _--, g -= 8);
                for (
                  s = j & ((1 << -g) - 1), j >>= -g, g += o;
                  0 < g;
                  s = 256 * s + h[_], _--, g -= 8
                );
                if (j === 0) j = 1 - f;
                else {
                  if (j === c) return s ? NaN : x ? -1 / 0 : 1 / 0;
                  (s += a(2, o)), (j -= f);
                }
                return (x ? -1 : 1) * s * a(2, j - o);
              },
            };
          },
          {},
        ],
        66: [
          function (t, b, y) {
            var u = t('../internals/fails'),
              a = t('../internals/classof-raw'),
              r = ''.split;
            b.exports = u(function () {
              return !Object('z').propertyIsEnumerable(0);
            })
              ? function (l) {
                  return a(l) == 'String' ? r.call(l, '') : Object(l);
                }
              : Object;
          },
          { '../internals/classof-raw': 28, '../internals/fails': 51 },
        ],
        67: [
          function (t, b, y) {
            var u = t('../internals/is-object'),
              a = t('../internals/object-set-prototype-of');
            b.exports = function (r, l, d) {
              return (
                a &&
                  typeof (l = l.constructor) == 'function' &&
                  l !== d &&
                  u((l = l.prototype)) &&
                  l !== d.prototype &&
                  a(r, l),
                r
              );
            };
          },
          {
            '../internals/is-object': 74,
            '../internals/object-set-prototype-of': 101,
          },
        ],
        68: [
          function (u, b, y) {
            var u = u('../internals/shared-store'),
              a = Function.toString;
            typeof u.inspectSource != 'function' &&
              (u.inspectSource = function (r) {
                return a.call(r);
              }),
              (b.exports = u.inspectSource);
          },
          { '../internals/shared-store': 119 },
        ],
        69: [
          function (t, b, y) {
            function u(g) {
              d(g, s, { value: { objectID: 'O' + ++n, weakData: {} } });
            }
            var a = t('../internals/hidden-keys'),
              r = t('../internals/is-object'),
              l = t('../internals/has'),
              d = t('../internals/object-define-property').f,
              h = t('../internals/uid'),
              o = t('../internals/freezing'),
              s = h('meta'),
              n = 0,
              c =
                Object.isExtensible ||
                function () {
                  return !0;
                },
              f = (b.exports = {
                REQUIRED: !1,
                fastKey: function (g, _) {
                  if (!r(g))
                    return typeof g == 'symbol'
                      ? g
                      : (typeof g == 'string' ? 'S' : 'P') + g;
                  if (!l(g, s)) {
                    if (!c(g)) return 'F';
                    if (!_) return 'E';
                    u(g);
                  }
                  return g[s].objectID;
                },
                getWeakData: function (g, _) {
                  if (!l(g, s)) {
                    if (!c(g)) return !0;
                    if (!_) return !1;
                    u(g);
                  }
                  return g[s].weakData;
                },
                onFreeze: function (g) {
                  return o && f.REQUIRED && c(g) && !l(g, s) && u(g), g;
                },
              });
            a[s] = !0;
          },
          {
            '../internals/freezing': 53,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/is-object': 74,
            '../internals/object-define-property': 92,
            '../internals/uid': 143,
          },
        ],
        70: [
          function (x, b, y) {
            var u,
              a,
              r,
              l,
              d,
              h,
              o,
              s,
              n = x('../internals/native-weak-map'),
              j = x('../internals/global'),
              c = x('../internals/is-object'),
              f = x('../internals/create-non-enumerable-property'),
              g = x('../internals/has'),
              _ = x('../internals/shared-key'),
              x = x('../internals/hidden-keys'),
              j = j.WeakMap;
            (o = n
              ? ((u = new j()),
                (a = u.get),
                (r = u.has),
                (l = u.set),
                (d = function (v, M) {
                  return l.call(u, v, M), M;
                }),
                (h = function (v) {
                  return a.call(u, v) || {};
                }),
                function (v) {
                  return r.call(u, v);
                })
              : ((x[(s = _('state'))] = !0),
                (d = function (v, M) {
                  return f(v, s, M), M;
                }),
                (h = function (v) {
                  return g(v, s) ? v[s] : {};
                }),
                function (v) {
                  return g(v, s);
                })),
              (b.exports = {
                set: d,
                get: h,
                has: o,
                enforce: function (v) {
                  return o(v) ? h(v) : d(v, {});
                },
                getterFor: function (v) {
                  return function (M) {
                    if (c(M) && (M = h(M)).type === v) return M;
                    throw TypeError(
                      'Incompatible receiver, ' + v + ' required',
                    );
                  };
                },
              });
          },
          {
            '../internals/create-non-enumerable-property': 38,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/is-object': 74,
            '../internals/native-weak-map': 85,
            '../internals/shared-key': 118,
          },
        ],
        71: [
          function (t, b, y) {
            var u = t('../internals/well-known-symbol'),
              a = t('../internals/iterators'),
              r = u('iterator'),
              l = Array.prototype;
            b.exports = function (d) {
              return d !== void 0 && (a.Array === d || l[r] === d);
            };
          },
          {
            '../internals/iterators': 79,
            '../internals/well-known-symbol': 146,
          },
        ],
        72: [
          function (t, b, y) {
            var u = t('../internals/classof-raw');
            b.exports =
              Array.isArray ||
              function (a) {
                return u(a) == 'Array';
              };
          },
          { '../internals/classof-raw': 28 },
        ],
        73: [
          function (t, b, y) {
            function u(s, n) {
              return (
                (s = d[l(s)]) == o ||
                (s != h && (typeof n == 'function' ? a(n) : !!n))
              );
            }
            var a = t('../internals/fails'),
              r = /#|\.prototype\./,
              l = (u.normalize = function (s) {
                return String(s).replace(r, '.').toLowerCase();
              }),
              d = (u.data = {}),
              h = (u.NATIVE = 'N'),
              o = (u.POLYFILL = 'P');
            b.exports = u;
          },
          { '../internals/fails': 51 },
        ],
        74: [
          function (t, b, y) {
            b.exports = function (u) {
              return typeof u == 'object' ? u !== null : typeof u == 'function';
            };
          },
          {},
        ],
        75: [
          function (t, b, y) {
            b.exports = !1;
          },
          {},
        ],
        76: [
          function (t, b, y) {
            var u = t('../internals/is-object'),
              a = t('../internals/classof-raw'),
              r = t('../internals/well-known-symbol')('match');
            b.exports = function (l) {
              var d;
              return u(l) && ((d = l[r]) !== void 0 ? !!d : a(l) == 'RegExp');
            };
          },
          {
            '../internals/classof-raw': 28,
            '../internals/is-object': 74,
            '../internals/well-known-symbol': 146,
          },
        ],
        77: [
          function (t, b, y) {
            function u(s, n) {
              (this.stopped = s), (this.result = n);
            }
            var a = t('../internals/an-object'),
              r = t('../internals/is-array-iterator-method'),
              l = t('../internals/to-length'),
              d = t('../internals/function-bind-context'),
              h = t('../internals/get-iterator-method'),
              o = t('../internals/call-with-safe-iteration-closing');
            (b.exports = function (s, n, c, f, g) {
              var _,
                x,
                j,
                v,
                M,
                C,
                k = d(n, c, f ? 2 : 1);
              if (g) _ = s;
              else {
                if (typeof (n = h(s)) != 'function')
                  throw TypeError('Target is not iterable');
                if (r(n)) {
                  for (x = 0, j = l(s.length); x < j; x++)
                    if (
                      (v = f ? k(a((C = s[x]))[0], C[1]) : k(s[x])) &&
                      v instanceof u
                    )
                      return v;
                  return new u(!1);
                }
                _ = n.call(s);
              }
              for (M = _.next; !(C = M.call(_)).done; )
                if (
                  typeof (v = o(_, k, C.value, f)) == 'object' &&
                  v &&
                  v instanceof u
                )
                  return v;
              return new u(!1);
            }).stop = function (s) {
              return new u(!0, s);
            };
          },
          {
            '../internals/an-object': 10,
            '../internals/call-with-safe-iteration-closing': 26,
            '../internals/function-bind-context': 54,
            '../internals/get-iterator-method': 57,
            '../internals/is-array-iterator-method': 71,
            '../internals/to-length': 134,
          },
        ],
        78: [
          function (h, b, y) {
            var u,
              a,
              r = h('../internals/object-get-prototype-of'),
              l = h('../internals/create-non-enumerable-property'),
              d = h('../internals/has'),
              o = h('../internals/well-known-symbol'),
              h = h('../internals/is-pure'),
              o = o('iterator'),
              s = !1;
            [].keys &&
              ('next' in (a = [].keys())
                ? (r = r(r(a))) !== Object.prototype && (u = r)
                : (s = !0)),
              u == null && (u = {}),
              h ||
                d(u, o) ||
                l(u, o, function () {
                  return this;
                }),
              (b.exports = { IteratorPrototype: u, BUGGY_SAFARI_ITERATORS: s });
          },
          {
            '../internals/create-non-enumerable-property': 38,
            '../internals/has': 60,
            '../internals/is-pure': 75,
            '../internals/object-get-prototype-of': 97,
            '../internals/well-known-symbol': 146,
          },
        ],
        79: [
          function (t, b, y) {
            b.exports = {};
          },
          {},
        ],
        80: [
          function (t, b, y) {
            b.exports =
              Math.sign ||
              function (u) {
                return (u = +u) == 0 || u != u ? u : u < 0 ? -1 : 1;
              };
          },
          {},
        ],
        81: [
          function (f, b, y) {
            var u,
              a,
              r,
              l,
              d,
              h,
              o,
              s,
              n = f('../internals/global'),
              M = f('../internals/object-get-own-property-descriptor').f,
              v = f('../internals/classof-raw'),
              c = f('../internals/task').set,
              f = f('../internals/engine-is-ios'),
              g = n.MutationObserver || n.WebKitMutationObserver,
              _ = n.process,
              x = n.Promise,
              j = v(_) == 'process',
              v = M(n, 'queueMicrotask'),
              M = v && v.value;
            M ||
              ((u = function () {
                var C, k;
                for (j && (C = _.domain) && C.exit(); a; ) {
                  (k = a.fn), (a = a.next);
                  try {
                    k();
                  } catch (A) {
                    throw (a ? l() : (r = void 0), A);
                  }
                }
                (r = void 0), C && C.enter();
              }),
              (l = j
                ? function () {
                    _.nextTick(u);
                  }
                : g && !f
                ? ((d = !0),
                  (h = document.createTextNode('')),
                  new g(u).observe(h, { characterData: !0 }),
                  function () {
                    h.data = d = !d;
                  })
                : x && x.resolve
                ? ((o = x.resolve(void 0)),
                  (s = o.then),
                  function () {
                    s.call(o, u);
                  })
                : function () {
                    c.call(n, u);
                  })),
              (b.exports =
                M ||
                function (C) {
                  (C = { fn: C, next: void 0 }),
                    r && (r.next = C),
                    a || ((a = C), l()),
                    (r = C);
                });
          },
          {
            '../internals/classof-raw': 28,
            '../internals/engine-is-ios': 46,
            '../internals/global': 59,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/task': 128,
          },
        ],
        82: [
          function (t, b, y) {
            (t = t('../internals/global')), (b.exports = t.Promise);
          },
          { '../internals/global': 59 },
        ],
        83: [
          function (t, b, y) {
            (t = t('../internals/fails')),
              (b.exports =
                !!Object.getOwnPropertySymbols &&
                !t(function () {
                  return !String(Symbol());
                }));
          },
          { '../internals/fails': 51 },
        ],
        84: [
          function (t, b, y) {
            var u = t('../internals/fails'),
              a = t('../internals/well-known-symbol'),
              r = t('../internals/is-pure'),
              l = a('iterator');
            b.exports = !u(function () {
              var d = new URL('b?a=1&b=2&c=3', 'http://a'),
                h = d.searchParams,
                o = '';
              return (
                (d.pathname = 'c%20d'),
                h.forEach(function (s, n) {
                  h.delete('b'), (o += n + s);
                }),
                (r && !d.toJSON) ||
                  !h.sort ||
                  d.href !== 'http://a/c%20d?a=1&c=3' ||
                  h.get('c') !== '3' ||
                  String(new URLSearchParams('?a=1')) !== 'a=1' ||
                  !h[l] ||
                  new URL('https://a@b').username !== 'a' ||
                  new URLSearchParams(new URLSearchParams('a=b')).get('a') !==
                    'b' ||
                  new URL('http://\u0442\u0435\u0441\u0442').host !==
                    'xn--e1aybc' ||
                  new URL('http://a#\u0431').hash !== '#%D0%B1' ||
                  o !== 'a1c3' ||
                  new URL('http://x', void 0).host !== 'x'
              );
            });
          },
          {
            '../internals/fails': 51,
            '../internals/is-pure': 75,
            '../internals/well-known-symbol': 146,
          },
        ],
        85: [
          function (u, b, y) {
            var a = u('../internals/global'),
              u = u('../internals/inspect-source'),
              a = a.WeakMap;
            b.exports = typeof a == 'function' && /native code/.test(u(a));
          },
          { '../internals/global': 59, '../internals/inspect-source': 68 },
        ],
        86: [
          function (t, b, y) {
            function u(r) {
              var l, d;
              (this.promise = new r(function (h, o) {
                if (l !== void 0 || d !== void 0)
                  throw TypeError('Bad Promise constructor');
                (l = h), (d = o);
              })),
                (this.resolve = a(l)),
                (this.reject = a(d));
            }
            var a = t('../internals/a-function');
            b.exports.f = function (r) {
              return new u(r);
            };
          },
          { '../internals/a-function': 5 },
        ],
        87: [
          function (t, b, y) {
            var u = t('../internals/is-regexp');
            b.exports = function (a) {
              if (u(a))
                throw TypeError(
                  "The method doesn't accept regular expressions",
                );
              return a;
            };
          },
          { '../internals/is-regexp': 76 },
        ],
        88: [
          function (t, b, y) {
            var u = t('../internals/global').isFinite;
            b.exports =
              Number.isFinite ||
              function (a) {
                return typeof a == 'number' && u(a);
              };
          },
          { '../internals/global': 59 },
        ],
        89: [
          function (t, b, y) {
            var u = t('../internals/descriptors'),
              a = t('../internals/fails'),
              r = t('../internals/object-keys'),
              l = t('../internals/object-get-own-property-symbols'),
              d = t('../internals/object-property-is-enumerable'),
              h = t('../internals/to-object'),
              o = t('../internals/indexed-object'),
              s = Object.assign,
              n = Object.defineProperty;
            b.exports =
              !s ||
              a(function () {
                var c, f, g, _;
                return (
                  !(
                    !u ||
                    s(
                      { b: 1 },
                      s(
                        n({}, 'a', {
                          enumerable: !0,
                          get: function () {
                            n(this, 'b', { value: 3, enumerable: !1 });
                          },
                        }),
                        { b: 2 },
                      ),
                    ).b === 1
                  ) ||
                  ((f = {}),
                  (_ = 'abcdefghijklmnopqrst'),
                  ((c = {})[(g = Symbol())] = 7),
                  _.split('').forEach(function (x) {
                    f[x] = x;
                  }),
                  s({}, c)[g] != 7 || r(s({}, f)).join('') != _)
                );
              })
                ? function (c, f) {
                    for (
                      var g = h(c),
                        _ = arguments.length,
                        x = 1,
                        j = l.f,
                        v = d.f;
                      x < _;

                    )
                      for (
                        var M,
                          C = o(arguments[x++]),
                          k = j ? r(C).concat(j(C)) : r(C),
                          A = k.length,
                          R = 0;
                        R < A;

                      )
                        (M = k[R++]), (u && !v.call(C, M)) || (g[M] = C[M]);
                    return g;
                  }
                : s;
          },
          {
            '../internals/descriptors': 43,
            '../internals/fails': 51,
            '../internals/indexed-object': 66,
            '../internals/object-get-own-property-symbols': 96,
            '../internals/object-keys': 99,
            '../internals/object-property-is-enumerable': 100,
            '../internals/to-object': 135,
          },
        ],
        90: [
          function (n, b, y) {
            function u() {}
            var a,
              r = n('../internals/an-object'),
              l = n('../internals/object-define-properties'),
              d = n('../internals/enum-bug-keys'),
              h = n('../internals/hidden-keys'),
              o = n('../internals/html'),
              s = n('../internals/document-create-element'),
              n = n('../internals/shared-key'),
              c = 'prototype',
              f = 'script',
              g = n('IE_PROTO'),
              _ = function (j) {
                return '<' + f + '>' + j + '</' + f + '>';
              },
              x = function () {
                try {
                  a = document.domain && new ActiveXObject('htmlfile');
                } catch {}
                x = a
                  ? ((j = a).write(_('')),
                    j.close(),
                    (v = j.parentWindow.Object),
                    (j = null),
                    v)
                  : ((j = s('iframe')),
                    (v = 'java' + f + ':'),
                    (j.style.display = 'none'),
                    o.appendChild(j),
                    (j.src = String(v)),
                    (v = j.contentWindow.document).open(),
                    v.write(_('document.F=Object')),
                    v.close(),
                    v.F);
                for (var j, v, M = d.length; M--; ) delete x[c][d[M]];
                return x();
              };
            (h[g] = !0),
              (b.exports =
                Object.create ||
                function (j, v) {
                  var M;
                  return (
                    j !== null
                      ? ((u[c] = r(j)),
                        (M = new u()),
                        (u[c] = null),
                        (M[g] = j))
                      : (M = x()),
                    v === void 0 ? M : l(M, v)
                  );
                });
          },
          {
            '../internals/an-object': 10,
            '../internals/document-create-element': 44,
            '../internals/enum-bug-keys': 49,
            '../internals/hidden-keys': 61,
            '../internals/html': 63,
            '../internals/object-define-properties': 91,
            '../internals/shared-key': 118,
          },
        ],
        91: [
          function (t, b, y) {
            var u = t('../internals/descriptors'),
              a = t('../internals/object-define-property'),
              r = t('../internals/an-object'),
              l = t('../internals/object-keys');
            b.exports = u
              ? Object.defineProperties
              : function (d, h) {
                  r(d);
                  for (var o, s = l(h), n = s.length, c = 0; c < n; )
                    a.f(d, (o = s[c++]), h[o]);
                  return d;
                };
          },
          {
            '../internals/an-object': 10,
            '../internals/descriptors': 43,
            '../internals/object-define-property': 92,
            '../internals/object-keys': 99,
          },
        ],
        92: [
          function (t, b, y) {
            var u = t('../internals/descriptors'),
              a = t('../internals/ie8-dom-define'),
              r = t('../internals/an-object'),
              l = t('../internals/to-primitive'),
              d = Object.defineProperty;
            y.f = u
              ? d
              : function (h, o, s) {
                  if ((r(h), (o = l(o, !0)), r(s), a))
                    try {
                      return d(h, o, s);
                    } catch {}
                  if ('get' in s || 'set' in s)
                    throw TypeError('Accessors not supported');
                  return 'value' in s && (h[o] = s.value), h;
                };
          },
          {
            '../internals/an-object': 10,
            '../internals/descriptors': 43,
            '../internals/ie8-dom-define': 64,
            '../internals/to-primitive': 138,
          },
        ],
        93: [
          function (t, b, y) {
            var u = t('../internals/descriptors'),
              a = t('../internals/object-property-is-enumerable'),
              r = t('../internals/create-property-descriptor'),
              l = t('../internals/to-indexed-object'),
              d = t('../internals/to-primitive'),
              h = t('../internals/has'),
              o = t('../internals/ie8-dom-define'),
              s = Object.getOwnPropertyDescriptor;
            y.f = u
              ? s
              : function (n, c) {
                  if (((n = l(n)), (c = d(c, !0)), o))
                    try {
                      return s(n, c);
                    } catch {}
                  if (h(n, c)) return r(!a.f.call(n, c), n[c]);
                };
          },
          {
            '../internals/create-property-descriptor': 39,
            '../internals/descriptors': 43,
            '../internals/has': 60,
            '../internals/ie8-dom-define': 64,
            '../internals/object-property-is-enumerable': 100,
            '../internals/to-indexed-object': 132,
            '../internals/to-primitive': 138,
          },
        ],
        94: [
          function (t, b, y) {
            var u = t('../internals/to-indexed-object'),
              a = t('../internals/object-get-own-property-names').f,
              r = {}.toString,
              l =
                typeof window == 'object' &&
                window &&
                Object.getOwnPropertyNames
                  ? Object.getOwnPropertyNames(window)
                  : [];
            b.exports.f = function (d) {
              if (!l || r.call(d) != '[object Window]') return a(u(d));
              try {
                return a(d);
              } catch {
                return l.slice();
              }
            };
          },
          {
            '../internals/object-get-own-property-names': 95,
            '../internals/to-indexed-object': 132,
          },
        ],
        95: [
          function (t, b, y) {
            var u = t('../internals/object-keys-internal'),
              a = t('../internals/enum-bug-keys').concat('length', 'prototype');
            y.f =
              Object.getOwnPropertyNames ||
              function (r) {
                return u(r, a);
              };
          },
          {
            '../internals/enum-bug-keys': 49,
            '../internals/object-keys-internal': 98,
          },
        ],
        96: [
          function (t, b, y) {
            y.f = Object.getOwnPropertySymbols;
          },
          {},
        ],
        97: [
          function (l, b, y) {
            var u = l('../internals/has'),
              a = l('../internals/to-object'),
              r = l('../internals/shared-key'),
              l = l('../internals/correct-prototype-getter'),
              d = r('IE_PROTO'),
              h = Object.prototype;
            b.exports = l
              ? Object.getPrototypeOf
              : function (o) {
                  return (
                    (o = a(o)),
                    u(o, d)
                      ? o[d]
                      : typeof o.constructor == 'function' &&
                        o instanceof o.constructor
                      ? o.constructor.prototype
                      : o instanceof Object
                      ? h
                      : null
                  );
                };
          },
          {
            '../internals/correct-prototype-getter': 35,
            '../internals/has': 60,
            '../internals/shared-key': 118,
            '../internals/to-object': 135,
          },
        ],
        98: [
          function (t, b, y) {
            var u = t('../internals/has'),
              a = t('../internals/to-indexed-object'),
              r = t('../internals/array-includes').indexOf,
              l = t('../internals/hidden-keys');
            b.exports = function (d, h) {
              var o,
                s = a(d),
                n = 0,
                c = [];
              for (o in s) !u(l, o) && u(s, o) && c.push(o);
              for (; h.length > n; )
                !u(s, (o = h[n++])) || ~r(c, o) || c.push(o);
              return c;
            };
          },
          {
            '../internals/array-includes': 18,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/to-indexed-object': 132,
          },
        ],
        99: [
          function (t, b, y) {
            var u = t('../internals/object-keys-internal'),
              a = t('../internals/enum-bug-keys');
            b.exports =
              Object.keys ||
              function (r) {
                return u(r, a);
              };
          },
          {
            '../internals/enum-bug-keys': 49,
            '../internals/object-keys-internal': 98,
          },
        ],
        100: [
          function (t, b, y) {
            var u = {}.propertyIsEnumerable,
              a = Object.getOwnPropertyDescriptor,
              r = a && !u.call({ 1: 2 }, 1);
            y.f = r
              ? function (l) {
                  return (l = a(this, l)), !!l && l.enumerable;
                }
              : u;
          },
          {},
        ],
        101: [
          function (t, b, y) {
            var u = t('../internals/an-object'),
              a = t('../internals/a-possible-prototype');
            b.exports =
              Object.setPrototypeOf ||
              ('__proto__' in {}
                ? (function () {
                    var r,
                      l = !1,
                      d = {};
                    try {
                      (r = Object.getOwnPropertyDescriptor(
                        Object.prototype,
                        '__proto__',
                      ).set).call(d, []),
                        (l = d instanceof Array);
                    } catch {}
                    return function (h, o) {
                      return (
                        u(h), a(o), l ? r.call(h, o) : (h.__proto__ = o), h
                      );
                    };
                  })()
                : void 0);
          },
          {
            '../internals/a-possible-prototype': 6,
            '../internals/an-object': 10,
          },
        ],
        102: [
          function (t, b, y) {
            var u = t('../internals/to-string-tag-support'),
              a = t('../internals/classof');
            b.exports = u
              ? {}.toString
              : function () {
                  return '[object ' + a(this) + ']';
                };
          },
          {
            '../internals/classof': 29,
            '../internals/to-string-tag-support': 139,
          },
        ],
        103: [
          function (t, b, y) {
            var u = t('../internals/get-built-in'),
              a = t('../internals/object-get-own-property-names'),
              r = t('../internals/object-get-own-property-symbols'),
              l = t('../internals/an-object');
            b.exports =
              u('Reflect', 'ownKeys') ||
              function (d) {
                var h = a.f(l(d)),
                  o = r.f;
                return o ? h.concat(o(d)) : h;
              };
          },
          {
            '../internals/an-object': 10,
            '../internals/get-built-in': 56,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-get-own-property-symbols': 96,
          },
        ],
        104: [
          function (t, b, y) {
            (t = t('../internals/global')), (b.exports = t);
          },
          { '../internals/global': 59 },
        ],
        105: [
          function (t, b, y) {
            b.exports = function (u) {
              try {
                return { error: !1, value: u() };
              } catch (a) {
                return { error: !0, value: a };
              }
            };
          },
          {},
        ],
        106: [
          function (t, b, y) {
            var u = t('../internals/an-object'),
              a = t('../internals/is-object'),
              r = t('../internals/new-promise-capability');
            b.exports = function (l, d) {
              return (
                u(l),
                a(d) && d.constructor === l
                  ? d
                  : ((0, (l = r.f(l)).resolve)(d), l.promise)
              );
            };
          },
          {
            '../internals/an-object': 10,
            '../internals/is-object': 74,
            '../internals/new-promise-capability': 86,
          },
        ],
        107: [
          function (t, b, y) {
            var u = t('../internals/redefine');
            b.exports = function (a, r, l) {
              for (var d in r) u(a, d, r[d], l);
              return a;
            };
          },
          { '../internals/redefine': 108 },
        ],
        108: [
          function (h, b, y) {
            var u = h('../internals/global'),
              a = h('../internals/create-non-enumerable-property'),
              r = h('../internals/has'),
              l = h('../internals/set-global'),
              d = h('../internals/inspect-source'),
              h = h('../internals/internal-state'),
              o = h.get,
              s = h.enforce,
              n = String(String).split('String');
            (b.exports = function (c, f, g, v) {
              var x = !!v && !!v.unsafe,
                j = !!v && !!v.enumerable,
                v = !!v && !!v.noTargetGet;
              typeof g == 'function' &&
                (typeof f != 'string' || r(g, 'name') || a(g, 'name', f),
                (s(g).source = n.join(typeof f == 'string' ? f : ''))),
                c === u
                  ? j
                    ? (c[f] = g)
                    : l(f, g)
                  : (x ? !v && c[f] && (j = !0) : delete c[f],
                    j ? (c[f] = g) : a(c, f, g));
            })(Function.prototype, 'toString', function () {
              return (typeof this == 'function' && o(this).source) || d(this);
            });
          },
          {
            '../internals/create-non-enumerable-property': 38,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/inspect-source': 68,
            '../internals/internal-state': 70,
            '../internals/set-global': 115,
          },
        ],
        109: [
          function (t, b, y) {
            var u = t('./classof-raw'),
              a = t('./regexp-exec');
            b.exports = function (r, l) {
              var d = r.exec;
              if (typeof d == 'function') {
                if (((d = d.call(r, l)), typeof d != 'object'))
                  throw TypeError(
                    'RegExp exec method returned something other than an Object or null',
                  );
                return d;
              }
              if (u(r) !== 'RegExp')
                throw TypeError('RegExp#exec called on incompatible receiver');
              return a.call(r, l);
            };
          },
          { './classof-raw': 28, './regexp-exec': 110 },
        ],
        110: [
          function (l, b, y) {
            var u,
              a,
              r = l('./regexp-flags'),
              l = l('./regexp-sticky-helpers'),
              d = RegExp.prototype.exec,
              h = String.prototype.replace,
              o = d,
              s =
                ((u = /a/),
                (a = /b*/g),
                d.call(u, 'a'),
                d.call(a, 'a'),
                u.lastIndex !== 0 || a.lastIndex !== 0),
              n = l.UNSUPPORTED_Y || l.BROKEN_CARET,
              c = /()??/.exec('')[1] !== void 0;
            b.exports = o =
              s || c || n
                ? function (f) {
                    var g,
                      _,
                      x,
                      j,
                      v = this,
                      M = n && v.sticky,
                      C = r.call(v),
                      k = v.source,
                      A = 0,
                      R = f;
                    return (
                      M &&
                        ((C = C.replace('y', '')).indexOf('g') === -1 &&
                          (C += 'g'),
                        (R = String(f).slice(v.lastIndex)),
                        0 < v.lastIndex &&
                          (!v.multiline ||
                            (v.multiline &&
                              f[v.lastIndex - 1] !==
                                `
`)) &&
                          ((k = '(?: ' + k + ')'), (R = ' ' + R), A++),
                        (_ = new RegExp('^(?:' + k + ')', C))),
                      c && (_ = new RegExp('^' + k + '$(?!\\s)', C)),
                      s && (g = v.lastIndex),
                      (x = d.call(M ? _ : v, R)),
                      M
                        ? x
                          ? ((x.input = x.input.slice(A)),
                            (x[0] = x[0].slice(A)),
                            (x.index = v.lastIndex),
                            (v.lastIndex += x[0].length))
                          : (v.lastIndex = 0)
                        : s &&
                          x &&
                          (v.lastIndex = v.global ? x.index + x[0].length : g),
                      c &&
                        x &&
                        1 < x.length &&
                        h.call(x[0], _, function () {
                          for (j = 1; j < arguments.length - 2; j++)
                            arguments[j] === void 0 && (x[j] = void 0);
                        }),
                      x
                    );
                  }
                : o;
          },
          { './regexp-flags': 111, './regexp-sticky-helpers': 112 },
        ],
        111: [
          function (t, b, y) {
            var u = t('../internals/an-object');
            b.exports = function () {
              var a = u(this),
                r = '';
              return (
                a.global && (r += 'g'),
                a.ignoreCase && (r += 'i'),
                a.multiline && (r += 'm'),
                a.dotAll && (r += 's'),
                a.unicode && (r += 'u'),
                a.sticky && (r += 'y'),
                r
              );
            };
          },
          { '../internals/an-object': 10 },
        ],
        112: [
          function (t, b, y) {
            t = t('./fails');
            function u(a, r) {
              return RegExp(a, r);
            }
            (y.UNSUPPORTED_Y = t(function () {
              var a = u('a', 'y');
              return (a.lastIndex = 2), a.exec('abcd') != null;
            })),
              (y.BROKEN_CARET = t(function () {
                var a = u('^r', 'gy');
                return (a.lastIndex = 2), a.exec('str') != null;
              }));
          },
          { './fails': 51 },
        ],
        113: [
          function (t, b, y) {
            b.exports = function (u) {
              if (u == null) throw TypeError("Can't call method on " + u);
              return u;
            };
          },
          {},
        ],
        114: [
          function (t, b, y) {
            b.exports =
              Object.is ||
              function (u, a) {
                return u === a ? u !== 0 || 1 / u == 1 / a : u != u && a != a;
              };
          },
          {},
        ],
        115: [
          function (t, b, y) {
            var u = t('../internals/global'),
              a = t('../internals/create-non-enumerable-property');
            b.exports = function (r, l) {
              try {
                a(u, r, l);
              } catch {
                u[r] = l;
              }
              return l;
            };
          },
          {
            '../internals/create-non-enumerable-property': 38,
            '../internals/global': 59,
          },
        ],
        116: [
          function (t, b, y) {
            var u = t('../internals/get-built-in'),
              a = t('../internals/object-define-property'),
              r = t('../internals/well-known-symbol'),
              l = t('../internals/descriptors'),
              d = r('species');
            b.exports = function (o) {
              var o = u(o),
                s = a.f;
              l &&
                o &&
                !o[d] &&
                s(o, d, {
                  configurable: !0,
                  get: function () {
                    return this;
                  },
                });
            };
          },
          {
            '../internals/descriptors': 43,
            '../internals/get-built-in': 56,
            '../internals/object-define-property': 92,
            '../internals/well-known-symbol': 146,
          },
        ],
        117: [
          function (t, b, y) {
            var u = t('../internals/object-define-property').f,
              a = t('../internals/has'),
              r = t('../internals/well-known-symbol')('toStringTag');
            b.exports = function (l, d, h) {
              l &&
                !a((l = h ? l : l.prototype), r) &&
                u(l, r, { configurable: !0, value: d });
            };
          },
          {
            '../internals/has': 60,
            '../internals/object-define-property': 92,
            '../internals/well-known-symbol': 146,
          },
        ],
        118: [
          function (t, b, y) {
            var u = t('../internals/shared'),
              a = t('../internals/uid'),
              r = u('keys');
            b.exports = function (l) {
              return r[l] || (r[l] = a(l));
            };
          },
          { '../internals/shared': 120, '../internals/uid': 143 },
        ],
        119: [
          function (u, b, y) {
            var r = u('../internals/global'),
              u = u('../internals/set-global'),
              a = '__core-js_shared__',
              r = r[a] || u(a, {});
            b.exports = r;
          },
          { '../internals/global': 59, '../internals/set-global': 115 },
        ],
        120: [
          function (t, b, y) {
            var u = t('../internals/is-pure'),
              a = t('../internals/shared-store');
            (b.exports = function (r, l) {
              return a[r] || (a[r] = l !== void 0 ? l : {});
            })('versions', []).push({
              version: '3.6.5',
              mode: u ? 'pure' : 'global',
              copyright: '\xA9 2020 Denis Pushkarev (zloirock.ru)',
            });
          },
          { '../internals/is-pure': 75, '../internals/shared-store': 119 },
        ],
        121: [
          function (t, b, y) {
            var u = t('../internals/an-object'),
              a = t('../internals/a-function'),
              r = t('../internals/well-known-symbol')('species');
            b.exports = function (h, d) {
              var h = u(h).constructor;
              return h === void 0 || (h = u(h)[r]) == null ? d : a(h);
            };
          },
          {
            '../internals/a-function': 5,
            '../internals/an-object': 10,
            '../internals/well-known-symbol': 146,
          },
        ],
        122: [
          function (t, b, y) {
            var u = t('../internals/fails');
            b.exports = function (a) {
              return u(function () {
                var r = ''[a]('"');
                return r !== r.toLowerCase() || 3 < r.split('"').length;
              });
            };
          },
          { '../internals/fails': 51 },
        ],
        123: [
          function (t, b, y) {
            function u(l) {
              return function (s, n) {
                var o,
                  s = String(r(s)),
                  n = a(n),
                  c = s.length;
                return n < 0 || c <= n
                  ? l
                    ? ''
                    : void 0
                  : (o = s.charCodeAt(n)) < 55296 ||
                    56319 < o ||
                    n + 1 === c ||
                    (c = s.charCodeAt(n + 1)) < 56320 ||
                    57343 < c
                  ? l
                    ? s.charAt(n)
                    : o
                  : l
                  ? s.slice(n, n + 2)
                  : c - 56320 + ((o - 55296) << 10) + 65536;
              };
            }
            var a = t('../internals/to-integer'),
              r = t('../internals/require-object-coercible');
            b.exports = { codeAt: u(!1), charAt: u(!0) };
          },
          {
            '../internals/require-object-coercible': 113,
            '../internals/to-integer': 133,
          },
        ],
        124: [
          function (t, b, y) {
            function u(x) {
              return x + 22 + 75 * (x < 26);
            }
            function a(x) {
              var j,
                v = [],
                M = (x = (function (Z) {
                  for (var $ = [], ae = 0, P = Z.length; ae < P; ) {
                    var L,
                      B = Z.charCodeAt(ae++);
                    55296 <= B && B <= 56319 && ae < P
                      ? (64512 & (L = Z.charCodeAt(ae++))) == 56320
                        ? $.push(((1023 & B) << 10) + (1023 & L) + 65536)
                        : ($.push(B), ae--)
                      : $.push(B);
                  }
                  return $;
                })(x)).length,
                C = 128,
                k = 0,
                A = 72;
              for (N = 0; N < x.length; N++) (j = x[N]) < 128 && v.push(_(j));
              var R = v.length,
                O = R;
              for (R && v.push('-'); O < M; ) {
                for (var D = r, N = 0; N < x.length; N++)
                  C <= (j = x[N]) && j < D && (D = j);
                var U = O + 1;
                if (D - C > g((r - k) / U)) throw RangeError(c);
                for (k += (D - C) * U, C = D, N = 0; N < x.length; N++) {
                  if ((j = x[N]) < C && ++k > r) throw RangeError(c);
                  if (j == C) {
                    for (var H = k, q = l; ; q += l) {
                      var z = q <= A ? 1 : A + d <= q ? d : q - A;
                      if (H < z) break;
                      var X = H - z,
                        W = l - z;
                      v.push(_(u(z + (X % W)))), (H = g(X / W));
                    }
                    v.push(_(u(H))),
                      (A = (function (Z, $, ae) {
                        var P = 0;
                        for (
                          Z = ae ? g(Z / o) : Z >> 1, Z += g(Z / $);
                          (f * d) >> 1 < Z;
                          P += l
                        )
                          Z = g(Z / f);
                        return g(P + ((f + 1) * Z) / (Z + h));
                      })(k, U, O == R)),
                      (k = 0),
                      ++O;
                  }
                }
                ++k, ++C;
              }
              return v.join('');
            }
            var r = 2147483647,
              l = 36,
              d = 26,
              h = 38,
              o = 700,
              s = /[^\0-\u007E]/,
              n = /[.\u3002\uFF0E\uFF61]/g,
              c = 'Overflow: input needs wider integers to process',
              f = l - 1,
              g = Math.floor,
              _ = String.fromCharCode;
            b.exports = function (x) {
              for (
                var j,
                  v = [],
                  M = x.toLowerCase().replace(n, '.').split('.'),
                  C = 0;
                C < M.length;
                C++
              )
                (j = M[C]), v.push(s.test(j) ? 'xn--' + a(j) : j);
              return v.join('.');
            };
          },
          {},
        ],
        125: [
          function (t, b, y) {
            var u = t('../internals/to-integer'),
              a = t('../internals/require-object-coercible');
            b.exports =
              ''.repeat ||
              function (r) {
                var l = String(a(this)),
                  d = '',
                  h = u(r);
                if (h < 0 || h == 1 / 0)
                  throw RangeError('Wrong number of repetitions');
                for (; 0 < h; (h >>>= 1) && (l += l)) 1 & h && (d += l);
                return d;
              };
          },
          {
            '../internals/require-object-coercible': 113,
            '../internals/to-integer': 133,
          },
        ],
        126: [
          function (t, b, y) {
            var u = t('../internals/fails'),
              a = t('../internals/whitespaces');
            b.exports = function (r) {
              return u(function () {
                return (
                  !!a[r]() ||
                  '\u200B\x85\u180E'[r]() != '\u200B\x85\u180E' ||
                  a[r].name !== r
                );
              });
            };
          },
          { '../internals/fails': 51, '../internals/whitespaces': 147 },
        ],
        127: [
          function (r, b, y) {
            function u(h) {
              return function (o) {
                return (
                  (o = String(a(o))),
                  1 & h && (o = o.replace(l, '')),
                  (o = 2 & h ? o.replace(d, '') : o)
                );
              };
            }
            var a = r('../internals/require-object-coercible'),
              r = '[' + r('../internals/whitespaces') + ']',
              l = RegExp('^' + r + r + '*'),
              d = RegExp(r + r + '*$');
            b.exports = { start: u(1), end: u(2), trim: u(3) };
          },
          {
            '../internals/require-object-coercible': 113,
            '../internals/whitespaces': 147,
          },
        ],
        128: [
          function (f, b, y) {
            function u(O) {
              return function () {
                R(O);
              };
            }
            function a(O) {
              R(O.data);
            }
            function r(O) {
              d.postMessage(O + '', g.protocol + '//' + g.host);
            }
            var l,
              d = f('../internals/global'),
              h = f('../internals/fails'),
              o = f('../internals/classof-raw'),
              s = f('../internals/function-bind-context'),
              n = f('../internals/html'),
              c = f('../internals/document-create-element'),
              f = f('../internals/engine-is-ios'),
              g = d.location,
              _ = d.setImmediate,
              x = d.clearImmediate,
              j = d.process,
              v = d.MessageChannel,
              M = d.Dispatch,
              C = 0,
              k = {},
              A = 'onreadystatechange',
              R = function (O) {
                var D;
                k.hasOwnProperty(O) && ((D = k[O]), delete k[O], D());
              };
            (_ && x) ||
              ((_ = function (O) {
                for (var D = [], N = 1; N < arguments.length; )
                  D.push(arguments[N++]);
                return (
                  (k[++C] = function () {
                    (typeof O == 'function' ? O : Function(O)).apply(void 0, D);
                  }),
                  l(C),
                  C
                );
              }),
              (x = function (O) {
                delete k[O];
              }),
              o(j) == 'process'
                ? (l = function (O) {
                    j.nextTick(u(O));
                  })
                : M && M.now
                ? (l = function (O) {
                    M.now(u(O));
                  })
                : v && !f
                ? ((f = (o = new v()).port2),
                  (o.port1.onmessage = a),
                  (l = s(f.postMessage, f, 1)))
                : !d.addEventListener ||
                  typeof postMessage != 'function' ||
                  d.importScripts ||
                  h(r) ||
                  g.protocol === 'file:'
                ? (l =
                    A in c('script')
                      ? function (O) {
                          n.appendChild(c('script'))[A] = function () {
                            n.removeChild(this), R(O);
                          };
                        }
                      : function (O) {
                          setTimeout(u(O), 0);
                        })
                : ((l = r), d.addEventListener('message', a, !1))),
              (b.exports = { set: _, clear: x });
          },
          {
            '../internals/classof-raw': 28,
            '../internals/document-create-element': 44,
            '../internals/engine-is-ios': 46,
            '../internals/fails': 51,
            '../internals/function-bind-context': 54,
            '../internals/global': 59,
            '../internals/html': 63,
          },
        ],
        129: [
          function (t, b, y) {
            var u = t('../internals/classof-raw');
            b.exports = function (a) {
              if (typeof a != 'number' && u(a) != 'Number')
                throw TypeError('Incorrect invocation');
              return +a;
            };
          },
          { '../internals/classof-raw': 28 },
        ],
        130: [
          function (t, b, y) {
            var u = t('../internals/to-integer'),
              a = Math.max,
              r = Math.min;
            b.exports = function (l, d) {
              return (l = u(l)), l < 0 ? a(l + d, 0) : r(l, d);
            };
          },
          { '../internals/to-integer': 133 },
        ],
        131: [
          function (t, b, y) {
            var u = t('../internals/to-integer'),
              a = t('../internals/to-length');
            b.exports = function (l) {
              if (l === void 0) return 0;
              var l = u(l),
                d = a(l);
              if (l !== d) throw RangeError('Wrong length or index');
              return d;
            };
          },
          { '../internals/to-integer': 133, '../internals/to-length': 134 },
        ],
        132: [
          function (t, b, y) {
            var u = t('../internals/indexed-object'),
              a = t('../internals/require-object-coercible');
            b.exports = function (r) {
              return u(a(r));
            };
          },
          {
            '../internals/indexed-object': 66,
            '../internals/require-object-coercible': 113,
          },
        ],
        133: [
          function (t, b, y) {
            var u = Math.ceil,
              a = Math.floor;
            b.exports = function (r) {
              return isNaN((r = +r)) ? 0 : (0 < r ? a : u)(r);
            };
          },
          {},
        ],
        134: [
          function (t, b, y) {
            var u = t('../internals/to-integer'),
              a = Math.min;
            b.exports = function (r) {
              return 0 < r ? a(u(r), 9007199254740991) : 0;
            };
          },
          { '../internals/to-integer': 133 },
        ],
        135: [
          function (t, b, y) {
            var u = t('../internals/require-object-coercible');
            b.exports = function (a) {
              return Object(u(a));
            };
          },
          { '../internals/require-object-coercible': 113 },
        ],
        136: [
          function (t, b, y) {
            var u = t('../internals/to-positive-integer');
            b.exports = function (a, r) {
              if (((a = u(a)), a % r)) throw RangeError('Wrong offset');
              return a;
            };
          },
          { '../internals/to-positive-integer': 137 },
        ],
        137: [
          function (t, b, y) {
            var u = t('../internals/to-integer');
            b.exports = function (a) {
              if (((a = u(a)), a < 0))
                throw RangeError("The argument can't be less than 0");
              return a;
            };
          },
          { '../internals/to-integer': 133 },
        ],
        138: [
          function (t, b, y) {
            var u = t('../internals/is-object');
            b.exports = function (a, r) {
              if (!u(a)) return a;
              var l, d;
              if (
                (r &&
                  typeof (l = a.toString) == 'function' &&
                  !u((d = l.call(a)))) ||
                (typeof (l = a.valueOf) == 'function' && !u((d = l.call(a)))) ||
                (!r &&
                  typeof (l = a.toString) == 'function' &&
                  !u((d = l.call(a))))
              )
                return d;
              throw TypeError("Can't convert object to primitive value");
            };
          },
          { '../internals/is-object': 74 },
        ],
        139: [
          function (t, b, y) {
            var u = {};
            (u[t('../internals/well-known-symbol')('toStringTag')] = 'z'),
              (b.exports = String(u) === '[object z]');
          },
          { '../internals/well-known-symbol': 146 },
        ],
        140: [
          function (t, b, y) {
            function u(me, Ce) {
              for (var Se = 0, Pe = Ce.length, Me = new (te(me))(Pe); Se < Pe; )
                Me[Se] = Ce[Se++];
              return Me;
            }
            function a(me, Ce) {
              L(me, Ce, {
                get: function () {
                  return ae(this)[Ce];
                },
              });
            }
            function r(me) {
              return (
                me instanceof ne ||
                (me = R(me)) == 'ArrayBuffer' ||
                me == 'SharedArrayBuffer'
              );
            }
            function l(me, Ce) {
              return (
                se(me) &&
                typeof Ce != 'symbol' &&
                Ce in me &&
                String(+Ce) == String(Ce)
              );
            }
            function d(me, Ce) {
              return l(me, (Ce = k(Ce, !0))) ? x(2, me[Ce]) : B(me, Ce);
            }
            function h(me, Ce, Se) {
              return !(l(me, (Ce = k(Ce, !0))) && O(Se) && A(Se, 'value')) ||
                A(Se, 'get') ||
                A(Se, 'set') ||
                Se.configurable ||
                (A(Se, 'writable') && !Se.writable) ||
                (A(Se, 'enumerable') && !Se.enumerable)
                ? L(me, Ce, Se)
                : ((me[Ce] = Se.value), me);
            }
            var o = t('../internals/export'),
              s = t('../internals/global'),
              n = t('../internals/descriptors'),
              c = t('../internals/typed-array-constructors-require-wrappers'),
              f = t('../internals/array-buffer-view-core'),
              g = t('../internals/array-buffer'),
              _ = t('../internals/an-instance'),
              x = t('../internals/create-property-descriptor'),
              j = t('../internals/create-non-enumerable-property'),
              v = t('../internals/to-length'),
              M = t('../internals/to-index'),
              C = t('../internals/to-offset'),
              k = t('../internals/to-primitive'),
              A = t('../internals/has'),
              R = t('../internals/classof'),
              O = t('../internals/is-object'),
              D = t('../internals/object-create'),
              N = t('../internals/object-set-prototype-of'),
              U = t('../internals/object-get-own-property-names').f,
              H = t('../internals/typed-array-from'),
              q = t('../internals/array-iteration').forEach,
              z = t('../internals/set-species'),
              X = t('../internals/object-define-property'),
              W = t('../internals/object-get-own-property-descriptor'),
              Z = t('../internals/internal-state'),
              $ = t('../internals/inherit-if-required'),
              ae = Z.get,
              P = Z.set,
              L = X.f,
              B = W.f,
              Y = Math.round,
              ee = s.RangeError,
              ne = g.ArrayBuffer,
              ce = g.DataView,
              pe = f.NATIVE_ARRAY_BUFFER_VIEWS,
              le = f.TYPED_ARRAY_TAG,
              ue = f.TypedArray,
              be = f.TypedArrayPrototype,
              te = f.aTypedArrayConstructor,
              se = f.isTypedArray,
              he = 'BYTES_PER_ELEMENT',
              ve = 'Wrong length';
            n
              ? (pe ||
                  ((W.f = d),
                  (X.f = h),
                  a(be, 'buffer'),
                  a(be, 'byteOffset'),
                  a(be, 'byteLength'),
                  a(be, 'length')),
                o(
                  { target: 'Object', stat: !0, forced: !pe },
                  { getOwnPropertyDescriptor: d, defineProperty: h },
                ),
                (b.exports = function (_e, Ce, Se) {
                  function Pe(xe, Q) {
                    L(xe, Q, {
                      get: function () {
                        var K = this,
                          G = Q;
                        return (K = ae(K)).view[ze](G * Me + K.byteOffset, !0);
                      },
                      set: function (K) {
                        var G = this,
                          re = Q;
                        (G = ae(G)),
                          Se &&
                            (K = (K = Y(K)) < 0 ? 0 : 255 < K ? 255 : 255 & K),
                          G.view[We](re * Me + G.byteOffset, K, !0);
                      },
                      enumerable: !0,
                    });
                  }
                  var Me = _e.match(/\d+$/)[0] / 8,
                    Be = _e + (Se ? 'Clamped' : '') + 'Array',
                    ze = 'get' + _e,
                    We = 'set' + _e,
                    Qe = s[Be],
                    Ze = Qe,
                    _e = Ze && Ze.prototype,
                    Ie = {};
                  pe
                    ? c &&
                      ((Ze = Ce(function (xe, Q, K, G) {
                        return (
                          _(xe, Ze, Be),
                          $(
                            O(Q)
                              ? r(Q)
                                ? G !== void 0
                                  ? new Qe(Q, C(K, Me), G)
                                  : K !== void 0
                                  ? new Qe(Q, C(K, Me))
                                  : new Qe(Q)
                                : se(Q)
                                ? u(Ze, Q)
                                : H.call(Ze, Q)
                              : new Qe(M(Q)),
                            xe,
                            Ze,
                          )
                        );
                      })),
                      N && N(Ze, ue),
                      q(U(Qe), function (xe) {
                        xe in Ze || j(Ze, xe, Qe[xe]);
                      }),
                      (Ze.prototype = _e))
                    : ((Ze = Ce(function (xe, Q, K, G) {
                        _(xe, Ze, Be);
                        var re,
                          ge,
                          je = 0,
                          Ae = 0;
                        if (O(Q)) {
                          if (!r(Q)) return se(Q) ? u(Ze, Q) : H.call(Ze, Q);
                          var Fe = Q,
                            Ae = C(K, Me),
                            K = Q.byteLength;
                          if (G === void 0) {
                            if (K % Me || (re = K - Ae) < 0) throw ee(ve);
                          } else if (K < (re = v(G) * Me) + Ae) throw ee(ve);
                          ge = re / Me;
                        } else (ge = M(Q)), (Fe = new ne((re = ge * Me)));
                        for (
                          P(xe, {
                            buffer: Fe,
                            byteOffset: Ae,
                            byteLength: re,
                            length: ge,
                            view: new ce(Fe),
                          });
                          je < ge;

                        )
                          Pe(xe, je++);
                      })),
                      N && N(Ze, ue),
                      (_e = Ze.prototype = D(be))),
                    _e.constructor !== Ze && j(_e, 'constructor', Ze),
                    le && j(_e, le, Be),
                    (Ie[Be] = Ze),
                    o({ global: !0, forced: Ze != Qe, sham: !pe }, Ie),
                    he in Ze || j(Ze, he, Me),
                    he in _e || j(_e, he, Me),
                    z(Be);
                }))
              : (b.exports = function () {});
          },
          {
            '../internals/an-instance': 9,
            '../internals/array-buffer': 13,
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
            '../internals/classof': 29,
            '../internals/create-non-enumerable-property': 38,
            '../internals/create-property-descriptor': 39,
            '../internals/descriptors': 43,
            '../internals/export': 50,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/inherit-if-required': 67,
            '../internals/internal-state': 70,
            '../internals/is-object': 74,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-set-prototype-of': 101,
            '../internals/set-species': 116,
            '../internals/to-index': 131,
            '../internals/to-length': 134,
            '../internals/to-offset': 136,
            '../internals/to-primitive': 138,
            '../internals/typed-array-constructors-require-wrappers': 141,
            '../internals/typed-array-from': 142,
          },
        ],
        141: [
          function (l, b, y) {
            var u = l('../internals/global'),
              a = l('../internals/fails'),
              r = l('../internals/check-correctness-of-iteration'),
              l = l(
                '../internals/array-buffer-view-core',
              ).NATIVE_ARRAY_BUFFER_VIEWS,
              d = u.ArrayBuffer,
              h = u.Int8Array;
            b.exports =
              !l ||
              !a(function () {
                h(1);
              }) ||
              !a(function () {
                new h(-1);
              }) ||
              !r(function (o) {
                new h(), new h(null), new h(1.5), new h(o);
              }, !0) ||
              a(function () {
                return new h(new d(2), 1, void 0).length !== 1;
              });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/fails': 51,
            '../internals/global': 59,
          },
        ],
        142: [
          function (t, b, y) {
            var u = t('../internals/to-object'),
              a = t('../internals/to-length'),
              r = t('../internals/get-iterator-method'),
              l = t('../internals/is-array-iterator-method'),
              d = t('../internals/function-bind-context'),
              h = t(
                '../internals/array-buffer-view-core',
              ).aTypedArrayConstructor;
            b.exports = function (o) {
              var s,
                n,
                c,
                f,
                g,
                _,
                x = u(o),
                j = arguments.length,
                v = 1 < j ? arguments[1] : void 0,
                M = v !== void 0,
                C = r(x);
              if (C != null && !l(C))
                for (_ = (g = C.call(x)).next, x = []; !(f = _.call(g)).done; )
                  x.push(f.value);
              for (
                M && 2 < j && (v = d(v, arguments[2], 2)),
                  n = a(x.length),
                  c = new (h(this))(n),
                  s = 0;
                s < n;
                s++
              )
                c[s] = M ? v(x[s], s) : x[s];
              return c;
            };
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/function-bind-context': 54,
            '../internals/get-iterator-method': 57,
            '../internals/is-array-iterator-method': 71,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        143: [
          function (t, b, y) {
            var u = 0,
              a = Math.random();
            b.exports = function (r) {
              return (
                'Symbol(' +
                String(r === void 0 ? '' : r) +
                ')_' +
                (++u + a).toString(36)
              );
            };
          },
          {},
        ],
        144: [
          function (t, b, y) {
            (t = t('../internals/native-symbol')),
              (b.exports =
                t && !Symbol.sham && typeof Symbol.iterator == 'symbol');
          },
          { '../internals/native-symbol': 83 },
        ],
        145: [
          function (t, b, y) {
            (t = t('../internals/well-known-symbol')), (y.f = t);
          },
          { '../internals/well-known-symbol': 146 },
        ],
        146: [
          function (h, b, y) {
            var u = h('../internals/global'),
              a = h('../internals/shared'),
              r = h('../internals/has'),
              l = h('../internals/uid'),
              d = h('../internals/native-symbol'),
              h = h('../internals/use-symbol-as-uid'),
              o = a('wks'),
              s = u.Symbol,
              n = h ? s : (s && s.withoutSetter) || l;
            b.exports = function (c) {
              return (
                r(o, c) ||
                  (d && r(s, c) ? (o[c] = s[c]) : (o[c] = n('Symbol.' + c))),
                o[c]
              );
            };
          },
          {
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/native-symbol': 83,
            '../internals/shared': 120,
            '../internals/uid': 143,
            '../internals/use-symbol-as-uid': 144,
          },
        ],
        147: [
          function (t, b, y) {
            b.exports = `	
\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF`;
          },
          {},
        ],
        148: [
          function (r, b, y) {
            var u = r('../internals/export'),
              a = r('../internals/global'),
              d = r('../internals/array-buffer'),
              r = r('../internals/set-species'),
              l = 'ArrayBuffer',
              d = d[l];
            u({ global: !0, forced: a[l] !== d }, { ArrayBuffer: d }), r(l);
          },
          {
            '../internals/array-buffer': 13,
            '../internals/export': 50,
            '../internals/global': 59,
            '../internals/set-species': 116,
          },
        ],
        149: [
          function (x, b, y) {
            var u = x('../internals/export'),
              a = x('../internals/fails'),
              r = x('../internals/is-array'),
              l = x('../internals/is-object'),
              d = x('../internals/to-object'),
              h = x('../internals/to-length'),
              o = x('../internals/create-property'),
              s = x('../internals/array-species-create'),
              n = x('../internals/array-method-has-species-support'),
              _ = x('../internals/well-known-symbol'),
              x = x('../internals/engine-v8-version'),
              c = _('isConcatSpreadable'),
              f = 9007199254740991,
              g = 'Maximum allowed index exceeded',
              _ =
                51 <= x ||
                !a(function () {
                  var j = [];
                  return (j[c] = !1), j.concat()[0] !== j;
                }),
              x = n('concat');
            u(
              { target: 'Array', proto: !0, forced: !_ || !x },
              {
                concat: function (j) {
                  for (
                    var v,
                      M,
                      C,
                      k,
                      A,
                      R = d(this),
                      O = s(R, 0),
                      D = 0,
                      N = -1,
                      U = arguments.length;
                    N < U;
                    N++
                  )
                    if (
                      ((A = void 0),
                      !l((k = C = N === -1 ? R : arguments[N])) ||
                        ((A = k[c]) !== void 0 ? !A : !r(k)))
                    ) {
                      if (f <= D) throw TypeError(g);
                      o(O, D++, C);
                    } else {
                      if (((M = h(C.length)), f < D + M)) throw TypeError(g);
                      for (v = 0; v < M; v++, D++) v in C && o(O, D, C[v]);
                    }
                  return (O.length = D), O;
                },
              },
            );
          },
          {
            '../internals/array-method-has-species-support': 21,
            '../internals/array-species-create': 25,
            '../internals/create-property': 40,
            '../internals/engine-v8-version': 48,
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
            '../internals/well-known-symbol': 146,
          },
        ],
        150: [
          function (r, b, y) {
            var u = r('../internals/export'),
              a = r('../internals/array-copy-within'),
              r = r('../internals/add-to-unscopables');
            u({ target: 'Array', proto: !0 }, { copyWithin: a }),
              r('copyWithin');
          },
          {
            '../internals/add-to-unscopables': 7,
            '../internals/array-copy-within': 14,
            '../internals/export': 50,
          },
        ],
        151: [
          function (l, b, y) {
            var u = l('../internals/export'),
              a = l('../internals/array-iteration').every,
              r = l('../internals/array-method-is-strict'),
              l = l('../internals/array-method-uses-to-length'),
              r = r('every'),
              l = l('every');
            u(
              { target: 'Array', proto: !0, forced: !r || !l },
              {
                every: function (d) {
                  return a(
                    this,
                    d,
                    1 < arguments.length ? arguments[1] : void 0,
                  );
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 50,
          },
        ],
        152: [
          function (r, b, y) {
            var u = r('../internals/export'),
              a = r('../internals/array-fill'),
              r = r('../internals/add-to-unscopables');
            u({ target: 'Array', proto: !0 }, { fill: a }), r('fill');
          },
          {
            '../internals/add-to-unscopables': 7,
            '../internals/array-fill': 15,
            '../internals/export': 50,
          },
        ],
        153: [
          function (l, b, y) {
            var u = l('../internals/export'),
              a = l('../internals/array-iteration').filter,
              r = l('../internals/array-method-has-species-support'),
              l = l('../internals/array-method-uses-to-length'),
              r = r('filter'),
              l = l('filter');
            u(
              { target: 'Array', proto: !0, forced: !r || !l },
              {
                filter: function (d) {
                  return a(
                    this,
                    d,
                    1 < arguments.length ? arguments[1] : void 0,
                  );
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 50,
          },
        ],
        154: [
          function (a, b, y) {
            var u = a('../internals/export'),
              a = a('../internals/array-for-each');
            u(
              { target: 'Array', proto: !0, forced: [].forEach != a },
              { forEach: a },
            );
          },
          { '../internals/array-for-each': 16, '../internals/export': 50 },
        ],
        155: [
          function (t, b, y) {
            var u = t('../internals/export'),
              a = t('../internals/array-from');
            u(
              {
                target: 'Array',
                stat: !0,
                forced: !t('../internals/check-correctness-of-iteration')(
                  function (r) {
                    Array.from(r);
                  },
                ),
              },
              { from: a },
            );
          },
          {
            '../internals/array-from': 17,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/export': 50,
          },
        ],
        156: [
          function (t, b, y) {
            var u = t('../internals/export'),
              a = t('../internals/array-includes').includes,
              r = t('../internals/add-to-unscopables');
            u(
              {
                target: 'Array',
                proto: !0,
                forced: !t('../internals/array-method-uses-to-length')(
                  'indexOf',
                  { ACCESSORS: !0, 1: 0 },
                ),
              },
              {
                includes: function (l) {
                  return a(
                    this,
                    l,
                    1 < arguments.length ? arguments[1] : void 0,
                  );
                },
              },
            ),
              r('includes');
          },
          {
            '../internals/add-to-unscopables': 7,
            '../internals/array-includes': 18,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 50,
          },
        ],
        157: [
          function (h, b, y) {
            var u = h('../internals/export'),
              a = h('../internals/array-includes').indexOf,
              d = h('../internals/array-method-is-strict'),
              h = h('../internals/array-method-uses-to-length'),
              r = [].indexOf,
              l = !!r && 1 / [1].indexOf(1, -0) < 0,
              d = d('indexOf'),
              h = h('indexOf', { ACCESSORS: !0, 1: 0 });
            u(
              { target: 'Array', proto: !0, forced: l || !d || !h },
              {
                indexOf: function (o) {
                  return l
                    ? r.apply(this, arguments) || 0
                    : a(this, o, 1 < arguments.length ? arguments[1] : void 0);
                },
              },
            );
          },
          {
            '../internals/array-includes': 18,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 50,
          },
        ],
        158: [
          function (d, b, y) {
            var u = d('../internals/to-indexed-object'),
              a = d('../internals/add-to-unscopables'),
              r = d('../internals/iterators'),
              l = d('../internals/internal-state'),
              d = d('../internals/define-iterator'),
              h = 'Array Iterator',
              o = l.set,
              s = l.getterFor(h);
            (b.exports = d(
              Array,
              'Array',
              function (n, c) {
                o(this, { type: h, target: u(n), index: 0, kind: c });
              },
              function () {
                var n = s(this),
                  c = n.target,
                  f = n.kind,
                  g = n.index++;
                return !c || g >= c.length
                  ? { value: (n.target = void 0), done: !0 }
                  : f == 'keys'
                  ? { value: g, done: !1 }
                  : f == 'values'
                  ? { value: c[g], done: !1 }
                  : { value: [g, c[g]], done: !1 };
              },
              'values',
            )),
              (r.Arguments = r.Array),
              a('keys'),
              a('values'),
              a('entries');
          },
          {
            '../internals/add-to-unscopables': 7,
            '../internals/define-iterator': 41,
            '../internals/internal-state': 70,
            '../internals/iterators': 79,
            '../internals/to-indexed-object': 132,
          },
        ],
        159: [
          function (d, b, y) {
            var u = d('../internals/export'),
              l = d('../internals/indexed-object'),
              a = d('../internals/to-indexed-object'),
              d = d('../internals/array-method-is-strict'),
              r = [].join,
              l = l != Object,
              d = d('join', ',');
            u(
              { target: 'Array', proto: !0, forced: l || !d },
              {
                join: function (h) {
                  return r.call(a(this), h === void 0 ? ',' : h);
                },
              },
            );
          },
          {
            '../internals/array-method-is-strict': 22,
            '../internals/export': 50,
            '../internals/indexed-object': 66,
            '../internals/to-indexed-object': 132,
          },
        ],
        160: [
          function (a, b, y) {
            var u = a('../internals/export'),
              a = a('../internals/array-last-index-of');
            u(
              { target: 'Array', proto: !0, forced: a !== [].lastIndexOf },
              { lastIndexOf: a },
            );
          },
          { '../internals/array-last-index-of': 20, '../internals/export': 50 },
        ],
        161: [
          function (l, b, y) {
            var u = l('../internals/export'),
              a = l('../internals/array-iteration').map,
              r = l('../internals/array-method-has-species-support'),
              l = l('../internals/array-method-uses-to-length'),
              r = r('map'),
              l = l('map');
            u(
              { target: 'Array', proto: !0, forced: !r || !l },
              {
                map: function (d) {
                  return a(
                    this,
                    d,
                    1 < arguments.length ? arguments[1] : void 0,
                  );
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 50,
          },
        ],
        162: [
          function (c, b, y) {
            var u = c('../internals/export'),
              a = c('../internals/is-object'),
              r = c('../internals/is-array'),
              l = c('../internals/to-absolute-index'),
              d = c('../internals/to-length'),
              h = c('../internals/to-indexed-object'),
              o = c('../internals/create-property'),
              s = c('../internals/well-known-symbol'),
              n = c('../internals/array-method-has-species-support'),
              c = c('../internals/array-method-uses-to-length'),
              n = n('slice'),
              c = c('slice', { ACCESSORS: !0, 0: 0, 1: 2 }),
              f = s('species'),
              g = [].slice,
              _ = Math.max;
            u(
              { target: 'Array', proto: !0, forced: !n || !c },
              {
                slice: function (x, j) {
                  var v,
                    M,
                    C,
                    k = h(this),
                    A = d(k.length),
                    R = l(x, A),
                    O = l(j === void 0 ? A : j, A);
                  if (
                    r(k) &&
                    ((v =
                      (typeof (v = k.constructor) == 'function' &&
                        (v === Array || r(v.prototype))) ||
                      (a(v) && (v = v[f]) === null)
                        ? void 0
                        : v) === Array ||
                      v === void 0)
                  )
                    return g.call(k, R, O);
                  for (
                    M = new (v === void 0 ? Array : v)(_(O - R, 0)), C = 0;
                    R < O;
                    R++, C++
                  )
                    R in k && o(M, C, k[R]);
                  return (M.length = C), M;
                },
              },
            );
          },
          {
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/create-property': 40,
            '../internals/export': 50,
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/to-absolute-index': 130,
            '../internals/to-indexed-object': 132,
            '../internals/to-length': 134,
            '../internals/well-known-symbol': 146,
          },
        ],
        163: [
          function (l, b, y) {
            var u = l('../internals/export'),
              a = l('../internals/array-iteration').some,
              r = l('../internals/array-method-is-strict'),
              l = l('../internals/array-method-uses-to-length'),
              r = r('some'),
              l = l('some');
            u(
              { target: 'Array', proto: !0, forced: !r || !l },
              {
                some: function (d) {
                  return a(
                    this,
                    d,
                    1 < arguments.length ? arguments[1] : void 0,
                  );
                },
              },
            );
          },
          {
            '../internals/array-iteration': 19,
            '../internals/array-method-is-strict': 22,
            '../internals/array-method-uses-to-length': 23,
            '../internals/export': 50,
          },
        ],
        164: [
          function (n, b, y) {
            var u = n('../internals/export'),
              a = n('../internals/to-absolute-index'),
              r = n('../internals/to-integer'),
              l = n('../internals/to-length'),
              d = n('../internals/to-object'),
              h = n('../internals/array-species-create'),
              o = n('../internals/create-property'),
              s = n('../internals/array-method-has-species-support'),
              n = n('../internals/array-method-uses-to-length'),
              s = s('splice'),
              n = n('splice', { ACCESSORS: !0, 0: 0, 1: 2 }),
              c = Math.max,
              f = Math.min;
            u(
              { target: 'Array', proto: !0, forced: !s || !n },
              {
                splice: function (D, _) {
                  var x,
                    j,
                    v,
                    M,
                    C,
                    k,
                    A = d(this),
                    R = l(A.length),
                    O = a(D, R),
                    D = arguments.length;
                  if (
                    (D === 0
                      ? (x = j = 0)
                      : (j =
                          D === 1
                            ? ((x = 0), R - O)
                            : ((x = D - 2), f(c(r(_), 0), R - O))),
                    9007199254740991 < R + x - j)
                  )
                    throw TypeError('Maximum allowed length exceeded');
                  for (v = h(A, j), M = 0; M < j; M++)
                    (C = O + M) in A && o(v, M, A[C]);
                  if (x < (v.length = j)) {
                    for (M = O; M < R - j; M++)
                      (k = M + x),
                        (C = M + j) in A ? (A[k] = A[C]) : delete A[k];
                    for (M = R; R - j + x < M; M--) delete A[M - 1];
                  } else if (j < x)
                    for (M = R - j; O < M; M--)
                      (k = M + x - 1),
                        (C = M + j - 1) in A ? (A[k] = A[C]) : delete A[k];
                  for (M = 0; M < x; M++) A[M + O] = arguments[M + 2];
                  return (A.length = R - j + x), v;
                },
              },
            );
          },
          {
            '../internals/array-method-has-species-support': 21,
            '../internals/array-method-uses-to-length': 23,
            '../internals/array-species-create': 25,
            '../internals/create-property': 40,
            '../internals/export': 50,
            '../internals/to-absolute-index': 130,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        165: [
          function (a, b, y) {
            var u = a('../internals/descriptors'),
              a = a('../internals/object-define-property').f,
              r = Function.prototype,
              l = r.toString,
              d = /^\s*function ([^ (]*)/;
            !u ||
              'name' in r ||
              a(r, 'name', {
                configurable: !0,
                get: function () {
                  try {
                    return l.call(this).match(d)[1];
                  } catch {
                    return '';
                  }
                },
              });
          },
          {
            '../internals/descriptors': 43,
            '../internals/object-define-property': 92,
          },
        ],
        166: [
          function (a, b, y) {
            var u = a('../internals/collection'),
              a = a('../internals/collection-strong');
            b.exports = u(
              'Map',
              function (r) {
                return function () {
                  return r(this, arguments.length ? arguments[0] : void 0);
                };
              },
              a,
            );
          },
          {
            '../internals/collection': 32,
            '../internals/collection-strong': 30,
          },
        ],
        167: [
          function (u, b, y) {
            var u = u('../internals/export'),
              a = Math.hypot,
              r = Math.abs,
              l = Math.sqrt;
            u(
              {
                target: 'Math',
                stat: !0,
                forced: !!a && a(1 / 0, NaN) !== 1 / 0,
              },
              {
                hypot: function (d, h) {
                  for (
                    var o, s, n = 0, c = 0, f = arguments.length, g = 0;
                    c < f;

                  )
                    g < (o = r(arguments[c++]))
                      ? ((n = n * (s = g / o) * s + 1), (g = o))
                      : (n += 0 < o ? (s = o / g) * s : o);
                  return g === 1 / 0 ? 1 / 0 : g * l(n);
                },
              },
            );
          },
          { '../internals/export': 50 },
        ],
        168: [
          function (t, b, y) {
            t('../internals/export')(
              { target: 'Math', stat: !0 },
              { sign: t('../internals/math-sign') },
            );
          },
          { '../internals/export': 50, '../internals/math-sign': 80 },
        ],
        169: [
          function (t, b, y) {
            function u(N) {
              var U,
                H,
                q,
                z,
                X,
                W,
                Z,
                $ = n(N, !1);
              if (typeof $ == 'string' && 2 < $.length) {
                if ((N = ($ = j($)).charCodeAt(0)) === 43 || N === 45) {
                  if ((U = $.charCodeAt(2)) === 88 || U === 120) return NaN;
                } else if (N === 48) {
                  switch ($.charCodeAt(1)) {
                    case 66:
                    case 98:
                      (H = 2), (q = 49);
                      break;
                    case 79:
                    case 111:
                      (H = 8), (q = 55);
                      break;
                    default:
                      return +$;
                  }
                  for (X = (z = $.slice(2)).length, W = 0; W < X; W++)
                    if ((Z = z.charCodeAt(W)) < 48 || q < Z) return NaN;
                  return parseInt(z, H);
                }
              }
              return +$;
            }
            var a = t('../internals/descriptors'),
              r = t('../internals/global'),
              l = t('../internals/is-forced'),
              d = t('../internals/redefine'),
              h = t('../internals/has'),
              o = t('../internals/classof-raw'),
              s = t('../internals/inherit-if-required'),
              n = t('../internals/to-primitive'),
              c = t('../internals/fails'),
              f = t('../internals/object-create'),
              g = t('../internals/object-get-own-property-names').f,
              _ = t('../internals/object-get-own-property-descriptor').f,
              x = t('../internals/object-define-property').f,
              j = t('../internals/string-trim').trim,
              v = 'Number',
              M = r[v],
              C = M.prototype,
              k = o(f(C)) == v;
            if (l(v, !M(' 0o1') || !M('0b1') || M('+0x1'))) {
              for (
                var A,
                  R = function (U) {
                    var U = arguments.length < 1 ? 0 : U,
                      H = this;
                    return H instanceof R &&
                      (k
                        ? c(function () {
                            C.valueOf.call(H);
                          })
                        : o(H) != v)
                      ? s(new M(u(U)), H, R)
                      : u(U);
                  },
                  O = a
                    ? g(M)
                    : 'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'.split(
                        ',',
                      ),
                  D = 0;
                O.length > D;
                D++
              )
                h(M, (A = O[D])) && !h(R, A) && x(R, A, _(M, A));
              ((R.prototype = C).constructor = R), d(r, v, R);
            }
          },
          {
            '../internals/classof-raw': 28,
            '../internals/descriptors': 43,
            '../internals/fails': 51,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/inherit-if-required': 67,
            '../internals/is-forced': 73,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/object-get-own-property-names': 95,
            '../internals/redefine': 108,
            '../internals/string-trim': 127,
            '../internals/to-primitive': 138,
          },
        ],
        170: [
          function (t, b, y) {
            t('../internals/export')(
              { target: 'Number', stat: !0 },
              { isFinite: t('../internals/number-is-finite') },
            );
          },
          { '../internals/export': 50, '../internals/number-is-finite': 88 },
        ],
        171: [
          function (h, b, y) {
            function u(n, c, f) {
              return c === 0
                ? f
                : c % 2 == 1
                ? u(n, c - 1, f * n)
                : u(n * n, c / 2, f);
            }
            var a = h('../internals/export'),
              r = h('../internals/to-integer'),
              l = h('../internals/this-number-value'),
              d = h('../internals/string-repeat'),
              h = h('../internals/fails'),
              o = (1).toFixed,
              s = Math.floor;
            a(
              {
                target: 'Number',
                proto: !0,
                forced:
                  (o &&
                    ((8e-5).toFixed(3) !== '0.000' ||
                      (0.9).toFixed(0) !== '1' ||
                      (1.255).toFixed(2) !== '1.25' ||
                      (0xde0b6b3a7640080).toFixed(0) !==
                        '1000000000000000128')) ||
                  !h(function () {
                    o.call({});
                  }),
              },
              {
                toFixed: function (v) {
                  function c(A, R) {
                    for (var O = -1, D = R; ++O < 6; )
                      (D += A * M[O]), (M[O] = D % 1e7), (D = s(D / 1e7));
                  }
                  function f(A) {
                    for (var R = 6, O = 0; 0 <= --R; )
                      (O += M[R]), (M[R] = s(O / A)), (O = (O % A) * 1e7);
                  }
                  function g() {
                    for (var A, R = 6, O = ''; 0 <= --R; )
                      (O === '' && R !== 0 && M[R] === 0) ||
                        ((A = String(M[R])),
                        (O = O === '' ? A : O + d.call('0', 7 - A.length) + A));
                    return O;
                  }
                  var _,
                    x,
                    j = l(this),
                    v = r(v),
                    M = [0, 0, 0, 0, 0, 0],
                    C = '',
                    k = '0';
                  if (v < 0 || 20 < v)
                    throw RangeError('Incorrect fraction digits');
                  if (j != j) return 'NaN';
                  if (j <= -1e21 || 1e21 <= j) return String(j);
                  if ((j < 0 && ((C = '-'), (j = -j)), 1e-21 < j))
                    if (
                      ((j =
                        (_ =
                          (function (A) {
                            for (var R = 0, O = A; 4096 <= O; )
                              (R += 12), (O /= 4096);
                            for (; 2 <= O; ) (R += 1), (O /= 2);
                            return R;
                          })(j * u(2, 69, 1)) - 69) < 0
                          ? j * u(2, -_, 1)
                          : j / u(2, _, 1)),
                      (j *= 4503599627370496),
                      0 < (_ = 52 - _))
                    ) {
                      for (c(0, j), x = v; 7 <= x; ) c(1e7, 0), (x -= 7);
                      for (c(u(10, x, 1), 0), x = _ - 1; 23 <= x; )
                        f(1 << 23), (x -= 23);
                      f(1 << x), c(1, 1), f(2), (k = g());
                    } else c(0, j), c(1 << -_, 0), (k = g() + d.call('0', v));
                  return (k =
                    0 < v
                      ? C +
                        ((j = k.length) <= v
                          ? '0.' + d.call('0', v - j) + k
                          : k.slice(0, j - v) + '.' + k.slice(j - v))
                      : C + k);
                },
              },
            );
          },
          {
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/string-repeat': 125,
            '../internals/this-number-value': 129,
            '../internals/to-integer': 133,
          },
        ],
        172: [
          function (a, b, y) {
            var u = a('../internals/export'),
              a = a('../internals/object-assign');
            u(
              { target: 'Object', stat: !0, forced: Object.assign !== a },
              { assign: a },
            );
          },
          { '../internals/export': 50, '../internals/object-assign': 89 },
        ],
        173: [
          function (l, b, y) {
            var u = l('../internals/export'),
              d = l('../internals/fails'),
              a = l('../internals/to-indexed-object'),
              r = l('../internals/object-get-own-property-descriptor').f,
              l = l('../internals/descriptors'),
              d = d(function () {
                r(1);
              });
            u(
              { target: 'Object', stat: !0, forced: !l || d, sham: !l },
              {
                getOwnPropertyDescriptor: function (h, o) {
                  return r(a(h), o);
                },
              },
            );
          },
          {
            '../internals/descriptors': 43,
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/to-indexed-object': 132,
          },
        ],
        174: [
          function (r, b, y) {
            var u = r('../internals/export'),
              a = r('../internals/fails'),
              r = r('../internals/object-get-own-property-names-external').f;
            u(
              {
                target: 'Object',
                stat: !0,
                forced: a(function () {
                  return !Object.getOwnPropertyNames(1);
                }),
              },
              { getOwnPropertyNames: r },
            );
          },
          {
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/object-get-own-property-names-external': 94,
          },
        ],
        175: [
          function (d, b, y) {
            var u = d('../internals/export'),
              a = d('../internals/fails'),
              r = d('../internals/to-object'),
              l = d('../internals/object-get-prototype-of'),
              d = d('../internals/correct-prototype-getter');
            u(
              {
                target: 'Object',
                stat: !0,
                forced: a(function () {
                  l(1);
                }),
                sham: !d,
              },
              {
                getPrototypeOf: function (h) {
                  return l(r(h));
                },
              },
            );
          },
          {
            '../internals/correct-prototype-getter': 35,
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/object-get-prototype-of': 97,
            '../internals/to-object': 135,
          },
        ],
        176: [
          function (t, b, y) {
            var u = t('../internals/export'),
              a = t('../internals/to-object'),
              r = t('../internals/object-keys');
            u(
              {
                target: 'Object',
                stat: !0,
                forced: t('../internals/fails')(function () {
                  r(1);
                }),
              },
              {
                keys: function (l) {
                  return r(a(l));
                },
              },
            );
          },
          {
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/object-keys': 99,
            '../internals/to-object': 135,
          },
        ],
        177: [
          function (r, b, y) {
            var u = r('../internals/to-string-tag-support'),
              a = r('../internals/redefine'),
              r = r('../internals/object-to-string');
            u || a(Object.prototype, 'toString', r, { unsafe: !0 });
          },
          {
            '../internals/object-to-string': 102,
            '../internals/redefine': 108,
            '../internals/to-string-tag-support': 139,
          },
        ],
        178: [
          function (Se, b, y) {
            var u,
              a,
              r,
              l,
              d = Se('../internals/export'),
              h = Se('../internals/is-pure'),
              o = Se('../internals/global'),
              s = Se('../internals/get-built-in'),
              n = Se('../internals/native-promise-constructor'),
              c = Se('../internals/redefine'),
              f = Se('../internals/redefine-all'),
              g = Se('../internals/set-to-string-tag'),
              _ = Se('../internals/set-species'),
              x = Se('../internals/is-object'),
              j = Se('../internals/a-function'),
              v = Se('../internals/an-instance'),
              M = Se('../internals/classof-raw'),
              C = Se('../internals/inspect-source'),
              k = Se('../internals/iterate'),
              A = Se('../internals/check-correctness-of-iteration'),
              R = Se('../internals/species-constructor'),
              O = Se('../internals/task').set,
              D = Se('../internals/microtask'),
              N = Se('../internals/promise-resolve'),
              U = Se('../internals/host-report-errors'),
              H = Se('../internals/new-promise-capability'),
              q = Se('../internals/perform'),
              z = Se('../internals/internal-state'),
              X = Se('../internals/is-forced'),
              Pe = Se('../internals/well-known-symbol'),
              W = Se('../internals/engine-v8-version'),
              Z = Pe('species'),
              $ = 'Promise',
              ae = z.get,
              P = z.set,
              L = z.getterFor($),
              B = n,
              Y = o.TypeError,
              ee = o.document,
              ne = o.process,
              ce = s('fetch'),
              pe = H.f,
              le = pe,
              ue = M(ne) == 'process',
              be = !!(ee && ee.createEvent && o.dispatchEvent),
              te = 'unhandledrejection',
              se = 'rejectionhandled',
              he = 1,
              ve = 2,
              me = 1,
              Ce = 2,
              Se = X($, function () {
                var Ie, xe;
                return C(B) === String(B) &&
                  (W === 66 ||
                    (!ue && typeof PromiseRejectionEvent != 'function'))
                  ? !0
                  : !(!h || B.prototype.finally) ||
                      (!(51 <= W && /native code/.test(B)) &&
                        ((xe = function (Q) {
                          Q(
                            function () {},
                            function () {},
                          );
                        }),
                        (((Ie = B.resolve(1)).constructor = {})[Z] = xe),
                        !(Ie.then(function () {}) instanceof xe)));
              }),
              Pe =
                Se ||
                !A(function (Ie) {
                  B.all(Ie).catch(function () {});
                }),
              Me = function (Ie) {
                var xe;
                return !(!x(Ie) || typeof (xe = Ie.then) != 'function') && xe;
              },
              Be = function (Ie, xe, Q) {
                var K;
                xe.notified ||
                  ((xe.notified = !0),
                  (K = xe.reactions),
                  D(function () {
                    for (
                      var G, re, ge = xe.value, je = xe.state == he, Ae = 0;
                      K.length > Ae;

                    ) {
                      var Fe,
                        Ve,
                        Ge,
                        Xe = K[Ae++],
                        at = je ? Xe.ok : Xe.fail,
                        st = Xe.resolve,
                        Ke = Xe.reject,
                        ot = Xe.domain;
                      try {
                        at
                          ? (je ||
                              (xe.rejection === Ce &&
                                (function (nt, jt) {
                                  O.call(o, function () {
                                    ue
                                      ? ne.emit('rejectionHandled', nt)
                                      : ze(se, nt, jt.value);
                                  });
                                })(Ie, xe),
                              (xe.rejection = me)),
                            at === !0
                              ? (Fe = ge)
                              : (ot && ot.enter(),
                                (Fe = at(ge)),
                                ot && (ot.exit(), (Ge = !0))),
                            Fe === Xe.promise
                              ? Ke(Y('Promise-chain cycle'))
                              : (Ve = Me(Fe))
                              ? Ve.call(Fe, st, Ke)
                              : st(Fe))
                          : Ke(ge);
                      } catch (nt) {
                        ot && !Ge && ot.exit(), Ke(nt);
                      }
                    }
                    (xe.reactions = []),
                      (xe.notified = !1),
                      Q &&
                        !xe.rejection &&
                        ((G = Ie),
                        (re = xe),
                        O.call(o, function () {
                          var nt = re.value,
                            jt = We(re);
                          if (
                            jt &&
                            ((jt = q(function () {
                              ue
                                ? ne.emit('unhandledRejection', nt, G)
                                : ze(te, G, nt);
                            })),
                            (re.rejection = ue || We(re) ? Ce : me),
                            jt.error)
                          )
                            throw jt.value;
                        }));
                  }));
              },
              ze = function (Ie, xe, Q) {
                var K;
                be
                  ? (((K = ee.createEvent('Event')).promise = xe),
                    (K.reason = Q),
                    K.initEvent(Ie, !1, !0),
                    o.dispatchEvent(K))
                  : (K = { promise: xe, reason: Q }),
                  (xe = o['on' + Ie])
                    ? xe(K)
                    : Ie === te && U('Unhandled promise rejection', Q);
              },
              We = function (Ie) {
                return Ie.rejection !== me && !Ie.parent;
              },
              Qe = function (Ie, xe, Q, K) {
                return function (G) {
                  Ie(xe, Q, G, K);
                };
              },
              Ze = function (Ie, xe, Q, K) {
                xe.done ||
                  ((xe.done = !0),
                  ((xe = K || xe).value = Q),
                  (xe.state = ve),
                  Be(Ie, xe, !0));
              },
              _e = function (Ie, xe, Q, K) {
                if (!xe.done) {
                  (xe.done = !0), K && (xe = K);
                  try {
                    if (Ie === Q) throw Y("Promise can't be resolved itself");
                    var G = Me(Q);
                    G
                      ? D(function () {
                          var re = { done: !1 };
                          try {
                            G.call(Q, Qe(_e, Ie, re, xe), Qe(Ze, Ie, re, xe));
                          } catch (ge) {
                            Ze(Ie, re, ge, xe);
                          }
                        })
                      : ((xe.value = Q), (xe.state = he), Be(Ie, xe, !1));
                  } catch (re) {
                    Ze(Ie, { done: !1 }, re, xe);
                  }
                }
              };
            Se &&
              ((B = function (Ie) {
                v(this, B, $), j(Ie), u.call(this);
                var xe = ae(this);
                try {
                  Ie(Qe(_e, this, xe), Qe(Ze, this, xe));
                } catch (Q) {
                  Ze(this, xe, Q);
                }
              }),
              ((u = function (Ie) {
                P(this, {
                  type: $,
                  done: !1,
                  notified: !1,
                  parent: !1,
                  reactions: [],
                  rejection: !1,
                  state: 0,
                  value: void 0,
                });
              }).prototype = f(B.prototype, {
                then: function (Ie, xe) {
                  var Q = L(this),
                    K = pe(R(this, B));
                  return (
                    (K.ok = typeof Ie != 'function' || Ie),
                    (K.fail = typeof xe == 'function' && xe),
                    (K.domain = ue ? ne.domain : void 0),
                    (Q.parent = !0),
                    Q.reactions.push(K),
                    Q.state != 0 && Be(this, Q, !1),
                    K.promise
                  );
                },
                catch: function (Ie) {
                  return this.then(void 0, Ie);
                },
              })),
              (a = function () {
                var Ie = new u(),
                  xe = ae(Ie);
                (this.promise = Ie),
                  (this.resolve = Qe(_e, Ie, xe)),
                  (this.reject = Qe(Ze, Ie, xe));
              }),
              (H.f = pe =
                function (Ie) {
                  return Ie === B || Ie === r ? new a() : le(Ie);
                }),
              h ||
                typeof n != 'function' ||
                ((l = n.prototype.then),
                c(
                  n.prototype,
                  'then',
                  function (Ie, xe) {
                    var Q = this;
                    return new B(function (K, G) {
                      l.call(Q, K, G);
                    }).then(Ie, xe);
                  },
                  { unsafe: !0 },
                ),
                typeof ce == 'function' &&
                  d(
                    { global: !0, enumerable: !0, forced: !0 },
                    {
                      fetch: function (Ie) {
                        return N(B, ce.apply(o, arguments));
                      },
                    },
                  ))),
              d({ global: !0, wrap: !0, forced: Se }, { Promise: B }),
              g(B, $, !1, !0),
              _($),
              (r = s($)),
              d(
                { target: $, stat: !0, forced: Se },
                {
                  reject: function (Ie) {
                    var xe = pe(this);
                    return xe.reject.call(void 0, Ie), xe.promise;
                  },
                },
              ),
              d(
                { target: $, stat: !0, forced: h || Se },
                {
                  resolve: function (Ie) {
                    return N(h && this === r ? B : this, Ie);
                  },
                },
              ),
              d(
                { target: $, stat: !0, forced: Pe },
                {
                  all: function (Ie) {
                    var xe = this,
                      Q = pe(xe),
                      K = Q.resolve,
                      G = Q.reject,
                      re = q(function () {
                        var ge = j(xe.resolve),
                          je = [],
                          Ae = 0,
                          Fe = 1;
                        k(Ie, function (Ve) {
                          var Ge = Ae++,
                            Xe = !1;
                          je.push(void 0),
                            Fe++,
                            ge.call(xe, Ve).then(function (at) {
                              Xe || ((Xe = !0), (je[Ge] = at), --Fe || K(je));
                            }, G);
                        }),
                          --Fe || K(je);
                      });
                    return re.error && G(re.value), Q.promise;
                  },
                  race: function (Ie) {
                    var xe = this,
                      Q = pe(xe),
                      K = Q.reject,
                      G = q(function () {
                        var re = j(xe.resolve);
                        k(Ie, function (ge) {
                          re.call(xe, ge).then(Q.resolve, K);
                        });
                      });
                    return G.error && K(G.value), Q.promise;
                  },
                },
              );
          },
          {
            '../internals/a-function': 5,
            '../internals/an-instance': 9,
            '../internals/check-correctness-of-iteration': 27,
            '../internals/classof-raw': 28,
            '../internals/engine-v8-version': 48,
            '../internals/export': 50,
            '../internals/get-built-in': 56,
            '../internals/global': 59,
            '../internals/host-report-errors': 62,
            '../internals/inspect-source': 68,
            '../internals/internal-state': 70,
            '../internals/is-forced': 73,
            '../internals/is-object': 74,
            '../internals/is-pure': 75,
            '../internals/iterate': 77,
            '../internals/microtask': 81,
            '../internals/native-promise-constructor': 82,
            '../internals/new-promise-capability': 86,
            '../internals/perform': 105,
            '../internals/promise-resolve': 106,
            '../internals/redefine': 108,
            '../internals/redefine-all': 107,
            '../internals/set-species': 116,
            '../internals/set-to-string-tag': 117,
            '../internals/species-constructor': 121,
            '../internals/task': 128,
            '../internals/well-known-symbol': 146,
          },
        ],
        179: [
          function (o, b, y) {
            var u = o('../internals/export'),
              f = o('../internals/get-built-in'),
              a = o('../internals/a-function'),
              r = o('../internals/an-object'),
              l = o('../internals/is-object'),
              d = o('../internals/object-create'),
              h = o('../internals/function-bind'),
              o = o('../internals/fails'),
              s = f('Reflect', 'construct'),
              n = o(function () {
                function g() {}
                return !(s(function () {}, [], g) instanceof g);
              }),
              c = !o(function () {
                s(function () {});
              }),
              f = n || c;
            u(
              { target: 'Reflect', stat: !0, forced: f, sham: f },
              {
                construct: function (g, _) {
                  a(g), r(_);
                  var x = arguments.length < 3 ? g : a(arguments[2]);
                  if (c && !n) return s(g, _, x);
                  if (g == x) {
                    switch (_.length) {
                      case 0:
                        return new g();
                      case 1:
                        return new g(_[0]);
                      case 2:
                        return new g(_[0], _[1]);
                      case 3:
                        return new g(_[0], _[1], _[2]);
                      case 4:
                        return new g(_[0], _[1], _[2], _[3]);
                    }
                    var j = [null];
                    return j.push.apply(j, _), new (h.apply(g, j))();
                  }
                  return (
                    (j = x.prototype),
                    (x = d(l(j) ? j : Object.prototype)),
                    (j = Function.apply.call(g, x, _)),
                    l(j) ? j : x
                  );
                },
              },
            );
          },
          {
            '../internals/a-function': 5,
            '../internals/an-object': 10,
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/function-bind': 55,
            '../internals/get-built-in': 56,
            '../internals/is-object': 74,
            '../internals/object-create': 90,
          },
        ],
        180: [
          function (t, b, y) {
            var u = t('../internals/descriptors'),
              a = t('../internals/global'),
              r = t('../internals/is-forced'),
              l = t('../internals/inherit-if-required'),
              d = t('../internals/object-define-property').f,
              h = t('../internals/object-get-own-property-names').f,
              o = t('../internals/is-regexp'),
              s = t('../internals/regexp-flags'),
              n = t('../internals/regexp-sticky-helpers'),
              c = t('../internals/redefine'),
              f = t('../internals/fails'),
              g = t('../internals/internal-state').set,
              _ = t('../internals/set-species'),
              x = t('../internals/well-known-symbol')('match'),
              j = a.RegExp,
              v = j.prototype,
              M = /a/g,
              C = /a/g,
              k = new j(M) !== M,
              A = n.UNSUPPORTED_Y;
            if (
              u &&
              r(
                'RegExp',
                !k ||
                  A ||
                  f(function () {
                    return (
                      (C[x] = !1), j(M) != M || j(C) == C || j(M, 'i') != '/a/i'
                    );
                  }),
              )
            ) {
              for (
                var R = function (N, U) {
                    var H,
                      q = this instanceof R,
                      z = o(N),
                      X = U === void 0;
                    return !q && z && N.constructor === R && X
                      ? N
                      : (k
                          ? z && !X && (N = N.source)
                          : N instanceof R &&
                            (X && (U = s.call(N)), (N = N.source)),
                        A &&
                          (H = !!U && -1 < U.indexOf('y')) &&
                          (U = U.replace(/y/g, '')),
                        (z = l(k ? new j(N, U) : j(N, U), q ? this : v, R)),
                        A && H && g(z, { sticky: H }),
                        z);
                  },
                  O = h(j),
                  D = 0;
                O.length > D;

              )
                (function (N) {
                  N in R ||
                    d(R, N, {
                      configurable: !0,
                      get: function () {
                        return j[N];
                      },
                      set: function (U) {
                        j[N] = U;
                      },
                    });
                })(O[D++]);
              ((v.constructor = R).prototype = v), c(a, 'RegExp', R);
            }
            _('RegExp');
          },
          {
            '../internals/descriptors': 43,
            '../internals/fails': 51,
            '../internals/global': 59,
            '../internals/inherit-if-required': 67,
            '../internals/internal-state': 70,
            '../internals/is-forced': 73,
            '../internals/is-regexp': 76,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-names': 95,
            '../internals/redefine': 108,
            '../internals/regexp-flags': 111,
            '../internals/regexp-sticky-helpers': 112,
            '../internals/set-species': 116,
            '../internals/well-known-symbol': 146,
          },
        ],
        181: [
          function (a, b, y) {
            var u = a('../internals/export'),
              a = a('../internals/regexp-exec');
            u(
              { target: 'RegExp', proto: !0, forced: /./.exec !== a },
              { exec: a },
            );
          },
          { '../internals/export': 50, '../internals/regexp-exec': 110 },
        ],
        182: [
          function (l, b, y) {
            var u = l('../internals/redefine'),
              a = l('../internals/an-object'),
              o = l('../internals/fails'),
              r = l('../internals/regexp-flags'),
              l = 'toString',
              d = RegExp.prototype,
              h = d[l],
              o = o(function () {
                return h.call({ source: 'a', flags: 'b' }) != '/a/b';
              }),
              s = h.name != l;
            (o || s) &&
              u(
                RegExp.prototype,
                l,
                function () {
                  var n = a(this),
                    c = String(n.source),
                    f = n.flags;
                  return (
                    '/' +
                    c +
                    '/' +
                    String(
                      f === void 0 && n instanceof RegExp && !('flags' in d)
                        ? r.call(n)
                        : f,
                    )
                  );
                },
                { unsafe: !0 },
              );
          },
          {
            '../internals/an-object': 10,
            '../internals/fails': 51,
            '../internals/redefine': 108,
            '../internals/regexp-flags': 111,
          },
        ],
        183: [
          function (a, b, y) {
            var u = a('../internals/collection'),
              a = a('../internals/collection-strong');
            b.exports = u(
              'Set',
              function (r) {
                return function () {
                  return r(this, arguments.length ? arguments[0] : void 0);
                };
              },
              a,
            );
          },
          {
            '../internals/collection': 32,
            '../internals/collection-strong': 30,
          },
        ],
        184: [
          function (h, b, y) {
            var u = h('../internals/export'),
              a = h('../internals/object-get-own-property-descriptor').f,
              r = h('../internals/to-length'),
              l = h('../internals/not-a-regexp'),
              d = h('../internals/require-object-coercible'),
              n = h('../internals/correct-is-regexp-logic'),
              h = h('../internals/is-pure'),
              o = ''.endsWith,
              s = Math.min,
              n = n('endsWith');
            u(
              {
                target: 'String',
                proto: !0,
                forced:
                  !!(
                    h ||
                    n ||
                    !(u = a(String.prototype, 'endsWith')) ||
                    u.writable
                  ) && !n,
              },
              {
                endsWith: function (c) {
                  var f = String(d(this)),
                    g = (l(c), 1 < arguments.length ? arguments[1] : void 0),
                    _ = r(f.length),
                    g = g === void 0 ? _ : s(r(g), _),
                    _ = String(c);
                  return o ? o.call(f, _, g) : f.slice(g - _.length, g) === _;
                },
              },
            );
          },
          {
            '../internals/correct-is-regexp-logic': 34,
            '../internals/export': 50,
            '../internals/is-pure': 75,
            '../internals/not-a-regexp': 87,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/require-object-coercible': 113,
            '../internals/to-length': 134,
          },
        ],
        185: [
          function (t, b, y) {
            var u = t('../internals/export'),
              a = t('../internals/not-a-regexp'),
              r = t('../internals/require-object-coercible');
            u(
              {
                target: 'String',
                proto: !0,
                forced: !t('../internals/correct-is-regexp-logic')('includes'),
              },
              {
                includes: function (l) {
                  return !!~String(r(this)).indexOf(
                    a(l),
                    1 < arguments.length ? arguments[1] : void 0,
                  );
                },
              },
            );
          },
          {
            '../internals/correct-is-regexp-logic': 34,
            '../internals/export': 50,
            '../internals/not-a-regexp': 87,
            '../internals/require-object-coercible': 113,
          },
        ],
        186: [
          function (r, b, y) {
            var u = r('../internals/string-multibyte').charAt,
              a = r('../internals/internal-state'),
              r = r('../internals/define-iterator'),
              l = 'String Iterator',
              d = a.set,
              h = a.getterFor(l);
            r(
              String,
              'String',
              function (o) {
                d(this, { type: l, string: String(o), index: 0 });
              },
              function () {
                var o = h(this),
                  s = o.string,
                  n = o.index;
                return n >= s.length
                  ? { value: void 0, done: !0 }
                  : ((s = u(s, n)),
                    (o.index += s.length),
                    { value: s, done: !1 });
              },
            );
          },
          {
            '../internals/define-iterator': 41,
            '../internals/internal-state': 70,
            '../internals/string-multibyte': 123,
          },
        ],
        187: [
          function (t, b, y) {
            var u = t('../internals/fix-regexp-well-known-symbol-logic'),
              a = t('../internals/an-object'),
              r = t('../internals/to-length'),
              l = t('../internals/require-object-coercible'),
              d = t('../internals/advance-string-index'),
              h = t('../internals/regexp-exec-abstract');
            u('match', 1, function (o, s, n) {
              return [
                function (c) {
                  var f = l(this),
                    g = c == null ? void 0 : c[o];
                  return g !== void 0
                    ? g.call(c, f)
                    : new RegExp(c)[o](String(f));
                },
                function (c) {
                  var f = n(s, c, this);
                  if (f.done) return f.value;
                  var g = a(c),
                    _ = String(this);
                  if (!g.global) return h(g, _);
                  for (
                    var x = g.unicode, j = [], v = (g.lastIndex = 0);
                    (M = h(g, _)) !== null;

                  ) {
                    var M = String(M[0]);
                    (j[v] = M) === '' &&
                      (g.lastIndex = d(_, r(g.lastIndex), x)),
                      v++;
                  }
                  return v === 0 ? null : j;
                },
              ];
            });
          },
          {
            '../internals/advance-string-index': 8,
            '../internals/an-object': 10,
            '../internals/fix-regexp-well-known-symbol-logic': 52,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/to-length': 134,
          },
        ],
        188: [
          function (t, b, y) {
            t('../internals/export')(
              { target: 'String', proto: !0 },
              { repeat: t('../internals/string-repeat') },
            );
          },
          { '../internals/export': 50, '../internals/string-repeat': 125 },
        ],
        189: [
          function (t, b, y) {
            var u = t('../internals/fix-regexp-well-known-symbol-logic'),
              a = t('../internals/an-object'),
              r = t('../internals/to-object'),
              l = t('../internals/to-length'),
              d = t('../internals/to-integer'),
              h = t('../internals/require-object-coercible'),
              o = t('../internals/advance-string-index'),
              s = t('../internals/regexp-exec-abstract'),
              n = Math.max,
              c = Math.min,
              f = Math.floor,
              g = /\$([$&'`]|\d\d?|<[^>]*>)/g,
              _ = /\$([$&'`]|\d\d?)/g;
            u('replace', 2, function (x, j, v, M) {
              var C = M.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,
                k = M.REPLACE_KEEPS_$0,
                A = C ? '$' : '$0';
              return [
                function (R, O) {
                  var D = h(this),
                    N = R == null ? void 0 : R[x];
                  return N !== void 0
                    ? N.call(R, D, O)
                    : j.call(String(D), R, O);
                },
                function (R, O) {
                  if (
                    (!C && k) ||
                    (typeof O == 'string' && O.indexOf(A) === -1)
                  ) {
                    var D = v(j, R, this, O);
                    if (D.done) return D.value;
                  }
                  for (
                    var N,
                      U = a(R),
                      H = String(this),
                      q = typeof O == 'function',
                      z = (q || (O = String(O)), U.global),
                      X = (z && ((N = U.unicode), (U.lastIndex = 0)), []);
                    (P = s(U, H)) !== null && (X.push(P), z);

                  )
                    String(P[0]) === '' &&
                      (U.lastIndex = o(H, l(U.lastIndex), N));
                  for (var W, Z = '', $ = 0, ae = 0; ae < X.length; ae++) {
                    for (
                      var P = X[ae],
                        L = String(P[0]),
                        B = n(c(d(P.index), H.length), 0),
                        Y = [],
                        ee = 1;
                      ee < P.length;
                      ee++
                    )
                      Y.push((W = P[ee]) === void 0 ? W : String(W));
                    var ne = P.groups,
                      ce = q
                        ? ((ce = [L].concat(Y, B, H)),
                          ne !== void 0 && ce.push(ne),
                          String(O.apply(void 0, ce)))
                        : (function (pe, le, ue, be, te, se) {
                            var he = ue + pe.length,
                              ve = be.length,
                              me = _;
                            return (
                              te !== void 0 && ((te = r(te)), (me = g)),
                              j.call(se, me, function (Ce, Se) {
                                var Pe;
                                switch (Se.charAt(0)) {
                                  case '$':
                                    return '$';
                                  case '&':
                                    return pe;
                                  case '`':
                                    return le.slice(0, ue);
                                  case "'":
                                    return le.slice(he);
                                  case '<':
                                    Pe = te[Se.slice(1, -1)];
                                    break;
                                  default:
                                    var Me,
                                      Be = +Se;
                                    if (Be == 0) return Ce;
                                    if (ve < Be)
                                      return (Me = f(Be / 10)) !== 0 && Me <= ve
                                        ? be[Me - 1] === void 0
                                          ? Se.charAt(1)
                                          : be[Me - 1] + Se.charAt(1)
                                        : Ce;
                                    Pe = be[Be - 1];
                                }
                                return Pe === void 0 ? '' : Pe;
                              })
                            );
                          })(L, H, B, Y, ne, O);
                    $ <= B && ((Z += H.slice($, B) + ce), ($ = B + L.length));
                  }
                  return Z + H.slice($);
                },
              ];
            });
          },
          {
            '../internals/advance-string-index': 8,
            '../internals/an-object': 10,
            '../internals/fix-regexp-well-known-symbol-logic': 52,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/to-integer': 133,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
          },
        ],
        190: [
          function (t, b, y) {
            var u = t('../internals/fix-regexp-well-known-symbol-logic'),
              a = t('../internals/an-object'),
              r = t('../internals/require-object-coercible'),
              l = t('../internals/same-value'),
              d = t('../internals/regexp-exec-abstract');
            u('search', 1, function (h, o, s) {
              return [
                function (n) {
                  var c = r(this),
                    f = n == null ? void 0 : n[h];
                  return f !== void 0
                    ? f.call(n, c)
                    : new RegExp(n)[h](String(c));
                },
                function (n) {
                  var c,
                    f = s(o, n, this);
                  return f.done
                    ? f.value
                    : ((f = a(n)),
                      (n = String(this)),
                      (c = f.lastIndex),
                      l(c, 0) || (f.lastIndex = 0),
                      (n = d(f, n)),
                      l(f.lastIndex, c) || (f.lastIndex = c),
                      n === null ? -1 : n.index);
                },
              ];
            });
          },
          {
            '../internals/an-object': 10,
            '../internals/fix-regexp-well-known-symbol-logic': 52,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/same-value': 114,
          },
        ],
        191: [
          function (c, b, y) {
            var u = c('../internals/fix-regexp-well-known-symbol-logic'),
              a = c('../internals/is-regexp'),
              r = c('../internals/an-object'),
              l = c('../internals/require-object-coercible'),
              d = c('../internals/species-constructor'),
              h = c('../internals/advance-string-index'),
              o = c('../internals/to-length'),
              s = c('../internals/regexp-exec-abstract'),
              n = c('../internals/regexp-exec'),
              c = c('../internals/fails'),
              f = [].push,
              g = Math.min,
              _ = 4294967295,
              x = !c(function () {
                return !RegExp(_, 'y');
              });
            u(
              'split',
              2,
              function (j, v, M) {
                var C =
                  'abbc'.split(/(b)*/)[1] == 'c' ||
                  'test'.split(/(?:)/, -1).length != 4 ||
                  'ab'.split(/(?:ab)*/).length != 2 ||
                  '.'.split(/(.?)(.?)/).length != 4 ||
                  1 < '.'.split(/()()/).length ||
                  ''.split(/.?/).length
                    ? function (k, A) {
                        var R = String(l(this)),
                          O = A === void 0 ? _ : A >>> 0;
                        if (O == 0) return [];
                        if (k === void 0) return [R];
                        if (!a(k)) return v.call(R, k, O);
                        for (
                          var D,
                            N,
                            U,
                            H = [],
                            A =
                              (k.ignoreCase ? 'i' : '') +
                              (k.multiline ? 'm' : '') +
                              (k.unicode ? 'u' : '') +
                              (k.sticky ? 'y' : ''),
                            q = 0,
                            z = new RegExp(k.source, A + 'g');
                          (D = n.call(z, R)) &&
                          !(
                            q < (N = z.lastIndex) &&
                            (H.push(R.slice(q, D.index)),
                            1 < D.length &&
                              D.index < R.length &&
                              f.apply(H, D.slice(1)),
                            (U = D[0].length),
                            (q = N),
                            H.length >= O)
                          );

                        )
                          z.lastIndex === D.index && z.lastIndex++;
                        return (
                          q === R.length
                            ? (!U && z.test('')) || H.push('')
                            : H.push(R.slice(q)),
                          H.length > O ? H.slice(0, O) : H
                        );
                      }
                    : '0'.split(void 0, 0).length
                    ? function (k, A) {
                        return k === void 0 && A === 0
                          ? []
                          : v.call(this, k, A);
                      }
                    : v;
                return [
                  function (k, A) {
                    var R = l(this),
                      O = k == null ? void 0 : k[j];
                    return O !== void 0
                      ? O.call(k, R, A)
                      : C.call(String(R), k, A);
                  },
                  function (D, A) {
                    var R = M(C, D, this, A, C !== v);
                    if (R.done) return R.value;
                    var R = r(D),
                      O = String(this),
                      D = d(R, RegExp),
                      N = R.unicode,
                      U =
                        (R.ignoreCase ? 'i' : '') +
                        (R.multiline ? 'm' : '') +
                        (R.unicode ? 'u' : '') +
                        (x ? 'y' : 'g'),
                      H = new D(x ? R : '^(?:' + R.source + ')', U),
                      q = A === void 0 ? _ : A >>> 0;
                    if (q == 0) return [];
                    if (O.length === 0) return s(H, O) === null ? [O] : [];
                    for (var z = 0, X = 0, W = []; X < O.length; ) {
                      H.lastIndex = x ? X : 0;
                      var Z,
                        $ = s(H, x ? O : O.slice(X));
                      if (
                        $ === null ||
                        (Z = g(o(H.lastIndex + (x ? 0 : X)), O.length)) === z
                      )
                        X = h(O, X, N);
                      else {
                        if ((W.push(O.slice(z, X)), W.length === q)) return W;
                        for (var ae = 1; ae <= $.length - 1; ae++)
                          if ((W.push($[ae]), W.length === q)) return W;
                        X = z = Z;
                      }
                    }
                    return W.push(O.slice(z)), W;
                  },
                ];
              },
              !x,
            );
          },
          {
            '../internals/advance-string-index': 8,
            '../internals/an-object': 10,
            '../internals/fails': 51,
            '../internals/fix-regexp-well-known-symbol-logic': 52,
            '../internals/is-regexp': 76,
            '../internals/regexp-exec': 110,
            '../internals/regexp-exec-abstract': 109,
            '../internals/require-object-coercible': 113,
            '../internals/species-constructor': 121,
            '../internals/to-length': 134,
          },
        ],
        192: [
          function (t, b, y) {
            var u = t('../internals/export'),
              a = t('../internals/create-html');
            u(
              {
                target: 'String',
                proto: !0,
                forced: t('../internals/string-html-forced')('sub'),
              },
              {
                sub: function () {
                  return a(this, 'sub', '', '');
                },
              },
            );
          },
          {
            '../internals/create-html': 36,
            '../internals/export': 50,
            '../internals/string-html-forced': 122,
          },
        ],
        193: [
          function (t, b, y) {
            var u = t('../internals/export'),
              a = t('../internals/string-trim').trim;
            u(
              {
                target: 'String',
                proto: !0,
                forced: t('../internals/string-trim-forced')('trim'),
              },
              {
                trim: function () {
                  return a(this);
                },
              },
            );
          },
          {
            '../internals/export': 50,
            '../internals/string-trim': 127,
            '../internals/string-trim-forced': 126,
          },
        ],
        194: [
          function (g, b, y) {
            var u,
              a,
              r,
              l,
              d,
              h = g('../internals/export'),
              o = g('../internals/descriptors'),
              s = g('../internals/global'),
              n = g('../internals/has'),
              c = g('../internals/is-object'),
              f = g('../internals/object-define-property').f,
              g = g('../internals/copy-constructor-properties'),
              _ = s.Symbol;
            !o ||
              typeof _ != 'function' ||
              ('description' in _.prototype && _().description === void 0) ||
              ((u = {}),
              g(
                (a = function () {
                  var x =
                      arguments.length < 1 || arguments[0] === void 0
                        ? void 0
                        : String(arguments[0]),
                    j =
                      this instanceof a ? new _(x) : x === void 0 ? _() : _(x);
                  return x === '' && (u[j] = !0), j;
                }),
                _,
              ),
              ((s = a.prototype = _.prototype).constructor = a),
              (r = s.toString),
              (l = String(_('test')) == 'Symbol(test)'),
              (d = /^Symbol\((.*)\)[^)]+$/),
              f(s, 'description', {
                configurable: !0,
                get: function () {
                  var x = c(this) ? this.valueOf() : this,
                    j = r.call(x);
                  return n(u, x)
                    ? ''
                    : (x = l ? j.slice(7, -1) : j.replace(d, '$1')) === ''
                    ? void 0
                    : x;
                },
              }),
              h({ global: !0, forced: !0 }, { Symbol: a }));
          },
          {
            '../internals/copy-constructor-properties': 33,
            '../internals/descriptors': 43,
            '../internals/export': 50,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/is-object': 74,
            '../internals/object-define-property': 92,
          },
        ],
        195: [
          function (t, b, y) {
            t('../internals/define-well-known-symbol')('iterator');
          },
          { '../internals/define-well-known-symbol': 42 },
        ],
        196: [
          function (le, b, y) {
            function u(G, re) {
              var ge = (Pe[G] = R(se[pe]));
              return (
                ue(ge, { type: ce, tag: G, description: re }),
                n || (ge.description = re),
                ge
              );
            }
            function a(G, je) {
              v(G);
              var ge = C(je),
                je = O(ge).concat(K(ge));
              return (
                ee(je, function (Ae) {
                  (n && !Q.call(ge, Ae)) || xe(G, Ae, ge[Ae]);
                }),
                G
              );
            }
            function r(je, Ae) {
              var ge,
                je = C(je),
                Ae = k(Ae, !0);
              if (je !== te || !_(Pe, Ae) || _(Me, Ae))
                return (
                  !(ge = ve(je, Ae)) ||
                    !_(Pe, Ae) ||
                    (_(je, ne) && je[ne][Ae]) ||
                    (ge.enumerable = !0),
                  ge
                );
            }
            function l(re) {
              var re = Ce(C(re)),
                ge = [];
              return (
                ee(re, function (je) {
                  _(Pe, je) || _($, je) || ge.push(je);
                }),
                ge
              );
            }
            var d = le('../internals/export'),
              h = le('../internals/global'),
              o = le('../internals/get-built-in'),
              s = le('../internals/is-pure'),
              n = le('../internals/descriptors'),
              c = le('../internals/native-symbol'),
              f = le('../internals/use-symbol-as-uid'),
              g = le('../internals/fails'),
              _ = le('../internals/has'),
              x = le('../internals/is-array'),
              j = le('../internals/is-object'),
              v = le('../internals/an-object'),
              M = le('../internals/to-object'),
              C = le('../internals/to-indexed-object'),
              k = le('../internals/to-primitive'),
              A = le('../internals/create-property-descriptor'),
              R = le('../internals/object-create'),
              O = le('../internals/object-keys'),
              D = le('../internals/object-get-own-property-names'),
              N = le('../internals/object-get-own-property-names-external'),
              U = le('../internals/object-get-own-property-symbols'),
              H = le('../internals/object-get-own-property-descriptor'),
              q = le('../internals/object-define-property'),
              z = le('../internals/object-property-is-enumerable'),
              X = le('../internals/create-non-enumerable-property'),
              W = le('../internals/redefine'),
              Z = le('../internals/shared'),
              We = le('../internals/shared-key'),
              $ = le('../internals/hidden-keys'),
              ae = le('../internals/uid'),
              P = le('../internals/well-known-symbol'),
              L = le('../internals/well-known-symbol-wrapped'),
              B = le('../internals/define-well-known-symbol'),
              Y = le('../internals/set-to-string-tag'),
              Qe = le('../internals/internal-state'),
              ee = le('../internals/array-iteration').forEach,
              ne = We('hidden'),
              ce = 'Symbol',
              pe = 'prototype',
              le = P('toPrimitive'),
              ue = Qe.set,
              be = Qe.getterFor(ce),
              te = Object[pe],
              se = h.Symbol,
              he = o('JSON', 'stringify'),
              ve = H.f,
              me = q.f,
              Ce = N.f,
              Se = z.f,
              Pe = Z('symbols'),
              Me = Z('op-symbols'),
              Be = Z('string-to-symbol-registry'),
              ze = Z('symbol-to-string-registry'),
              We = Z('wks'),
              Qe = h.QObject,
              Ze = !Qe || !Qe[pe] || !Qe[pe].findChild,
              _e =
                n &&
                g(function () {
                  return (
                    R(
                      me({}, 'a', {
                        get: function () {
                          return me(this, 'a', { value: 7 }).a;
                        },
                      }),
                    ).a != 7
                  );
                })
                  ? function (G, re, ge) {
                      var je = ve(te, re);
                      je && delete te[re],
                        me(G, re, ge),
                        je && G !== te && me(te, re, je);
                    }
                  : me,
              Ie = f
                ? function (G) {
                    return typeof G == 'symbol';
                  }
                : function (G) {
                    return Object(G) instanceof se;
                  },
              xe = function (G, re, ge) {
                return (
                  G === te && xe(Me, re, ge),
                  v(G),
                  (re = k(re, !0)),
                  v(ge),
                  (_(Pe, re)
                    ? (ge.enumerable
                        ? (_(G, ne) && G[ne][re] && (G[ne][re] = !1),
                          (ge = R(ge, { enumerable: A(0, !1) })))
                        : (_(G, ne) || me(G, ne, A(1, {})), (G[ne][re] = !0)),
                      _e)
                    : me)(G, re, ge)
                );
              },
              Q = function (re) {
                var re = k(re, !0),
                  ge = Se.call(this, re);
                return (
                  !(this === te && _(Pe, re) && !_(Me, re)) &&
                  (!(
                    ge ||
                    !_(this, re) ||
                    !_(Pe, re) ||
                    (_(this, ne) && this[ne][re])
                  ) ||
                    ge)
                );
              },
              K = function (ge) {
                var re = ge === te,
                  ge = Ce(re ? Me : C(ge)),
                  je = [];
                return (
                  ee(ge, function (Ae) {
                    !_(Pe, Ae) || (re && !_(te, Ae)) || je.push(Pe[Ae]);
                  }),
                  je
                );
              };
            c ||
              (W(
                (se = function () {
                  if (this instanceof se)
                    throw TypeError('Symbol is not a constructor');
                  var G =
                      arguments.length && arguments[0] !== void 0
                        ? String(arguments[0])
                        : void 0,
                    re = ae(G),
                    ge = function (je) {
                      this === te && ge.call(Me, je),
                        _(this, ne) && _(this[ne], re) && (this[ne][re] = !1),
                        _e(this, re, A(1, je));
                    };
                  return (
                    n && Ze && _e(te, re, { configurable: !0, set: ge }),
                    u(re, G)
                  );
                })[pe],
                'toString',
                function () {
                  return be(this).tag;
                },
              ),
              W(se, 'withoutSetter', function (G) {
                return u(ae(G), G);
              }),
              (z.f = Q),
              (q.f = xe),
              (H.f = r),
              (D.f = N.f = l),
              (U.f = K),
              (L.f = function (G) {
                return u(P(G), G);
              }),
              n &&
                (me(se[pe], 'description', {
                  configurable: !0,
                  get: function () {
                    return be(this).description;
                  },
                }),
                s || W(te, 'propertyIsEnumerable', Q, { unsafe: !0 }))),
              d({ global: !0, wrap: !0, forced: !c, sham: !c }, { Symbol: se }),
              ee(O(We), function (G) {
                B(G);
              }),
              d(
                { target: ce, stat: !0, forced: !c },
                {
                  for: function (ge) {
                    var re,
                      ge = String(ge);
                    return _(Be, ge)
                      ? Be[ge]
                      : ((re = se(ge)), (Be[ge] = re), (ze[re] = ge), re);
                  },
                  keyFor: function (G) {
                    if (!Ie(G)) throw TypeError(G + ' is not a symbol');
                    if (_(ze, G)) return ze[G];
                  },
                  useSetter: function () {
                    Ze = !0;
                  },
                  useSimple: function () {
                    Ze = !1;
                  },
                },
              ),
              d(
                { target: 'Object', stat: !0, forced: !c, sham: !n },
                {
                  create: function (G, re) {
                    return re === void 0 ? R(G) : a(R(G), re);
                  },
                  defineProperty: xe,
                  defineProperties: a,
                  getOwnPropertyDescriptor: r,
                },
              ),
              d(
                { target: 'Object', stat: !0, forced: !c },
                { getOwnPropertyNames: l, getOwnPropertySymbols: K },
              ),
              d(
                {
                  target: 'Object',
                  stat: !0,
                  forced: g(function () {
                    U.f(1);
                  }),
                },
                {
                  getOwnPropertySymbols: function (G) {
                    return U.f(M(G));
                  },
                },
              ),
              he &&
                d(
                  {
                    target: 'JSON',
                    stat: !0,
                    forced:
                      !c ||
                      g(function () {
                        var G = se();
                        return (
                          he([G]) != '[null]' ||
                          he({ a: G }) != '{}' ||
                          he(Object(G)) != '{}'
                        );
                      }),
                  },
                  {
                    stringify: function (G, re, ge) {
                      for (var je, Ae = [G], Fe = 1; Fe < arguments.length; )
                        Ae.push(arguments[Fe++]);
                      if ((j((je = re)) || G !== void 0) && !Ie(G))
                        return (
                          x(re) ||
                            (re = function (Ve, Ge) {
                              if (
                                (typeof je == 'function' &&
                                  (Ge = je.call(this, Ve, Ge)),
                                !Ie(Ge))
                              )
                                return Ge;
                            }),
                          (Ae[1] = re),
                          he.apply(null, Ae)
                        );
                    },
                  },
                ),
              se[pe][le] || X(se[pe], le, se[pe].valueOf),
              Y(se, ce),
              ($[ne] = !0);
          },
          {
            '../internals/an-object': 10,
            '../internals/array-iteration': 19,
            '../internals/create-non-enumerable-property': 38,
            '../internals/create-property-descriptor': 39,
            '../internals/define-well-known-symbol': 42,
            '../internals/descriptors': 43,
            '../internals/export': 50,
            '../internals/fails': 51,
            '../internals/get-built-in': 56,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/hidden-keys': 61,
            '../internals/internal-state': 70,
            '../internals/is-array': 72,
            '../internals/is-object': 74,
            '../internals/is-pure': 75,
            '../internals/native-symbol': 83,
            '../internals/object-create': 90,
            '../internals/object-define-property': 92,
            '../internals/object-get-own-property-descriptor': 93,
            '../internals/object-get-own-property-names': 95,
            '../internals/object-get-own-property-names-external': 94,
            '../internals/object-get-own-property-symbols': 96,
            '../internals/object-keys': 99,
            '../internals/object-property-is-enumerable': 100,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
            '../internals/shared': 120,
            '../internals/shared-key': 118,
            '../internals/to-indexed-object': 132,
            '../internals/to-object': 135,
            '../internals/to-primitive': 138,
            '../internals/uid': 143,
            '../internals/use-symbol-as-uid': 144,
            '../internals/well-known-symbol': 146,
            '../internals/well-known-symbol-wrapped': 145,
          },
        ],
        197: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-copy-within'),
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('copyWithin', function (l, d) {
              return a.call(
                r(this),
                l,
                d,
                2 < arguments.length ? arguments[2] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-copy-within': 14,
          },
        ],
        198: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-iteration').every,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('every', function (l) {
              return a(
                r(this),
                l,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        199: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-fill'),
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('fill', function (l) {
              return a.apply(r(this), arguments);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-fill': 15,
          },
        ],
        200: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-iteration').filter,
              r = t('../internals/species-constructor'),
              l = u.aTypedArray,
              d = u.aTypedArrayConstructor;
            (0, u.exportTypedArrayMethod)('filter', function (h) {
              for (
                var o = a(
                    l(this),
                    h,
                    1 < arguments.length ? arguments[1] : void 0,
                  ),
                  h = r(this, this.constructor),
                  s = 0,
                  n = o.length,
                  c = new (d(h))(n);
                s < n;

              )
                c[s] = o[s++];
              return c;
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
            '../internals/species-constructor': 121,
          },
        ],
        201: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-iteration').findIndex,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('findIndex', function (l) {
              return a(
                r(this),
                l,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        202: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-iteration').find,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('find', function (l) {
              return a(
                r(this),
                l,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        203: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')('Float32', function (u) {
              return function (a, r, l) {
                return u(this, a, r, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        204: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')('Float64', function (u) {
              return function (a, r, l) {
                return u(this, a, r, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        205: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-iteration').forEach,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('forEach', function (l) {
              a(r(this), l, 1 < arguments.length ? arguments[1] : void 0);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        206: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-includes').includes,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('includes', function (l) {
              return a(
                r(this),
                l,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-includes': 18,
          },
        ],
        207: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-includes').indexOf,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('indexOf', function (l) {
              return a(
                r(this),
                l,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-includes': 18,
          },
        ],
        208: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')('Int16', function (u) {
              return function (a, r, l) {
                return u(this, a, r, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        209: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')('Int32', function (u) {
              return function (a, r, l) {
                return u(this, a, r, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        210: [
          function (a, b, y) {
            function u() {
              return r.call(h(this));
            }
            var n = a('../internals/global'),
              s = a('../internals/array-buffer-view-core'),
              o = a('../modules/es.array.iterator'),
              a = a('../internals/well-known-symbol')('iterator'),
              n = n.Uint8Array,
              r = o.values,
              l = o.keys,
              d = o.entries,
              h = s.aTypedArray,
              o = s.exportTypedArrayMethod,
              s = n && n.prototype[a],
              n = !!s && (s.name == 'values' || s.name == null);
            o('entries', function () {
              return d.call(h(this));
            }),
              o('keys', function () {
                return l.call(h(this));
              }),
              o('values', u, !n),
              o(a, u, !n);
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/global': 59,
            '../internals/well-known-symbol': 146,
            '../modules/es.array.iterator': 158,
          },
        ],
        211: [
          function (a, b, y) {
            var a = a('../internals/array-buffer-view-core'),
              u = a.aTypedArray,
              a = a.exportTypedArrayMethod,
              r = [].join;
            a('join', function (l) {
              return r.apply(u(this), arguments);
            });
          },
          { '../internals/array-buffer-view-core': 12 },
        ],
        212: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-last-index-of'),
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('lastIndexOf', function (l) {
              return a.apply(r(this), arguments);
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-last-index-of': 20,
          },
        ],
        213: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-iteration').map,
              r = t('../internals/species-constructor'),
              l = u.aTypedArray,
              d = u.aTypedArrayConstructor;
            (0, u.exportTypedArrayMethod)('map', function (h) {
              return a(
                l(this),
                h,
                1 < arguments.length ? arguments[1] : void 0,
                function (o, s) {
                  return new (d(r(o, o.constructor)))(s);
                },
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
            '../internals/species-constructor': 121,
          },
        ],
        214: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-reduce').right,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('reduceRight', function (l) {
              return a(
                r(this),
                l,
                arguments.length,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-reduce': 24,
          },
        ],
        215: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-reduce').left,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('reduce', function (l) {
              return a(
                r(this),
                l,
                arguments.length,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-reduce': 24,
          },
        ],
        216: [
          function (a, b, y) {
            var a = a('../internals/array-buffer-view-core'),
              u = a.aTypedArray,
              a = a.exportTypedArrayMethod,
              r = Math.floor;
            a('reverse', function () {
              for (var l, d = u(this).length, h = r(d / 2), o = 0; o < h; )
                (l = this[o]), (this[o++] = this[--d]), (this[d] = l);
              return this;
            });
          },
          { '../internals/array-buffer-view-core': 12 },
        ],
        217: [
          function (d, b, y) {
            var u = d('../internals/array-buffer-view-core'),
              a = d('../internals/to-length'),
              r = d('../internals/to-offset'),
              l = d('../internals/to-object'),
              d = d('../internals/fails'),
              h = u.aTypedArray;
            (0, u.exportTypedArrayMethod)(
              'set',
              function (o) {
                h(this);
                var s = r(1 < arguments.length ? arguments[1] : void 0, 1),
                  n = this.length,
                  c = l(o),
                  f = a(c.length),
                  g = 0;
                if (n < f + s) throw RangeError('Wrong length');
                for (; g < f; ) this[s + g] = c[g++];
              },
              d(function () {
                new Int8Array(1).set({});
              }),
            );
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 51,
            '../internals/to-length': 134,
            '../internals/to-object': 135,
            '../internals/to-offset': 136,
          },
        ],
        218: [
          function (a, b, y) {
            var d = a('../internals/array-buffer-view-core'),
              u = a('../internals/species-constructor'),
              a = a('../internals/fails'),
              r = d.aTypedArray,
              l = d.aTypedArrayConstructor,
              d = d.exportTypedArrayMethod,
              h = [].slice;
            d(
              'slice',
              function (o, s) {
                for (
                  var n = h.call(r(this), o, s),
                    o = u(this, this.constructor),
                    c = 0,
                    f = n.length,
                    g = new (l(o))(f);
                  c < f;

                )
                  g[c] = n[c++];
                return g;
              },
              a(function () {
                new Int8Array(1).slice();
              }),
            );
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 51,
            '../internals/species-constructor': 121,
          },
        ],
        219: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/array-iteration').some,
              r = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('some', function (l) {
              return a(
                r(this),
                l,
                1 < arguments.length ? arguments[1] : void 0,
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/array-iteration': 19,
          },
        ],
        220: [
          function (a, b, y) {
            var a = a('../internals/array-buffer-view-core'),
              u = a.aTypedArray,
              a = a.exportTypedArrayMethod,
              r = [].sort;
            a('sort', function (l) {
              return r.call(u(this), l);
            });
          },
          { '../internals/array-buffer-view-core': 12 },
        ],
        221: [
          function (t, b, y) {
            var u = t('../internals/array-buffer-view-core'),
              a = t('../internals/to-length'),
              r = t('../internals/to-absolute-index'),
              l = t('../internals/species-constructor'),
              d = u.aTypedArray;
            (0, u.exportTypedArrayMethod)('subarray', function (c, o) {
              var s = d(this),
                n = s.length,
                c = r(c, n);
              return new (l(s, s.constructor))(
                s.buffer,
                s.byteOffset + c * s.BYTES_PER_ELEMENT,
                a((o === void 0 ? n : r(o, n)) - c),
              );
            });
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/species-constructor': 121,
            '../internals/to-absolute-index': 130,
            '../internals/to-length': 134,
          },
        ],
        222: [
          function (a, b, y) {
            var d = a('../internals/global'),
              u = a('../internals/array-buffer-view-core'),
              a = a('../internals/fails'),
              r = d.Int8Array,
              l = u.aTypedArray,
              d = u.exportTypedArrayMethod,
              h = [].toLocaleString,
              o = [].slice,
              s =
                !!r &&
                a(function () {
                  h.call(new r(1));
                });
            d(
              'toLocaleString',
              function () {
                return h.apply(s ? o.call(l(this)) : l(this), arguments);
              },
              a(function () {
                return (
                  [1, 2].toLocaleString() != new r([1, 2]).toLocaleString()
                );
              }) ||
                !a(function () {
                  r.prototype.toLocaleString.call([1, 2]);
                }),
            );
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 51,
            '../internals/global': 59,
          },
        ],
        223: [
          function (a, b, y) {
            var u = a(
                '../internals/array-buffer-view-core',
              ).exportTypedArrayMethod,
              d = a('../internals/fails'),
              a = a('../internals/global').Uint8Array,
              a = (a && a.prototype) || {},
              r = [].toString,
              l = [].join,
              d =
                (d(function () {
                  r.call({});
                }) &&
                  (r = function () {
                    return l.call(this);
                  }),
                a.toString != r);
            u('toString', r, d);
          },
          {
            '../internals/array-buffer-view-core': 12,
            '../internals/fails': 51,
            '../internals/global': 59,
          },
        ],
        224: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')('Uint16', function (u) {
              return function (a, r, l) {
                return u(this, a, r, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        225: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')('Uint32', function (u) {
              return function (a, r, l) {
                return u(this, a, r, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        226: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')('Uint8', function (u) {
              return function (a, r, l) {
                return u(this, a, r, l);
              };
            });
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        227: [
          function (t, b, y) {
            t('../internals/typed-array-constructor')(
              'Uint8',
              function (u) {
                return function (a, r, l) {
                  return u(this, a, r, l);
                };
              },
              !0,
            );
          },
          { '../internals/typed-array-constructor': 140 },
        ],
        228: [
          function (_, v, y) {
            function u(M) {
              return function () {
                return M(this, arguments.length ? arguments[0] : void 0);
              };
            }
            var a,
              r,
              l,
              d,
              h,
              x = _('../internals/global'),
              o = _('../internals/redefine-all'),
              s = _('../internals/internal-metadata'),
              n = _('../internals/collection'),
              c = _('../internals/collection-weak'),
              f = _('../internals/is-object'),
              g = _('../internals/internal-state').enforce,
              _ = _('../internals/native-weak-map'),
              x = !x.ActiveXObject && 'ActiveXObject' in x,
              j = Object.isExtensible,
              v = (v.exports = n('WeakMap', u, c));
            _ &&
              x &&
              ((a = c.getConstructor(u, 'WeakMap', !0)),
              (s.REQUIRED = !0),
              (n = v.prototype),
              (r = n.delete),
              (l = n.has),
              (d = n.get),
              (h = n.set),
              o(n, {
                delete: function (M) {
                  var C;
                  return f(M) && !j(M)
                    ? ((C = g(this)).frozen || (C.frozen = new a()),
                      r.call(this, M) || C.frozen.delete(M))
                    : r.call(this, M);
                },
                has: function (M) {
                  var C;
                  return f(M) && !j(M)
                    ? ((C = g(this)).frozen || (C.frozen = new a()),
                      l.call(this, M) || C.frozen.has(M))
                    : l.call(this, M);
                },
                get: function (M) {
                  var C;
                  return !f(M) ||
                    j(M) ||
                    ((C = g(this)).frozen || (C.frozen = new a()),
                    l.call(this, M))
                    ? d.call(this, M)
                    : C.frozen.get(M);
                },
                set: function (M, C) {
                  var k;
                  return (
                    !f(M) ||
                    j(M) ||
                    ((k = g(this)).frozen || (k.frozen = new a()),
                    l.call(this, M))
                      ? h.call(this, M, C)
                      : k.frozen.set(M, C),
                    this
                  );
                },
              }));
          },
          {
            '../internals/collection': 32,
            '../internals/collection-weak': 31,
            '../internals/global': 59,
            '../internals/internal-metadata': 69,
            '../internals/internal-state': 70,
            '../internals/is-object': 74,
            '../internals/native-weak-map': 85,
            '../internals/redefine-all': 107,
          },
        ],
        229: [
          function (t, b, y) {
            var u,
              a = t('../internals/global'),
              r = t('../internals/dom-iterables'),
              l = t('../internals/array-for-each'),
              d = t('../internals/create-non-enumerable-property');
            for (u in r) {
              var h = a[u],
                h = h && h.prototype;
              if (h && h.forEach !== l)
                try {
                  d(h, 'forEach', l);
                } catch {
                  h.forEach = l;
                }
            }
          },
          {
            '../internals/array-for-each': 16,
            '../internals/create-non-enumerable-property': 38,
            '../internals/dom-iterables': 45,
            '../internals/global': 59,
          },
        ],
        230: [
          function (h, b, y) {
            var u,
              a = h('../internals/global'),
              r = h('../internals/dom-iterables'),
              l = h('../modules/es.array.iterator'),
              d = h('../internals/create-non-enumerable-property'),
              h = h('../internals/well-known-symbol'),
              o = h('iterator'),
              s = h('toStringTag'),
              n = l.values;
            for (u in r) {
              var c = a[u],
                f = c && c.prototype;
              if (f) {
                if (f[o] !== n)
                  try {
                    d(f, o, n);
                  } catch {
                    f[o] = n;
                  }
                if ((f[s] || d(f, s, u), r[u])) {
                  for (var g in l)
                    if (f[g] !== l[g])
                      try {
                        d(f, g, l[g]);
                      } catch {
                        f[g] = l[g];
                      }
                }
              }
            }
          },
          {
            '../internals/create-non-enumerable-property': 38,
            '../internals/dom-iterables': 45,
            '../internals/global': 59,
            '../internals/well-known-symbol': 146,
            '../modules/es.array.iterator': 158,
          },
        ],
        231: [
          function (ne, b, y) {
            ne('../modules/es.array.iterator');
            function u(ce) {
              try {
                return decodeURIComponent(ce);
              } catch {
                return ce;
              }
            }
            function a(ce) {
              return B[ce];
            }
            function r(ce) {
              return encodeURIComponent(ce).replace(L, a);
            }
            function l(ce) {
              (this.entries.length = 0), Y(this.entries, ce);
            }
            function d(ce, pe) {
              if (ce < pe) throw TypeError('Not enough arguments');
            }
            function h() {
              x(this, h, q);
              var ce,
                pe,
                le,
                ue,
                be,
                te,
                se,
                he,
                ve = 0 < arguments.length ? arguments[0] : void 0,
                me = [];
              if (
                (X(this, {
                  type: q,
                  entries: me,
                  updateURL: function () {},
                  updateSearchParams: l,
                }),
                ve !== void 0)
              )
                if (k(ve))
                  if (typeof (ce = D(ve)) == 'function')
                    for (
                      le = (pe = ce.call(ve)).next;
                      !(ue = le.call(pe)).done;

                    ) {
                      if (
                        (te = (be = (ue = O(C(ue.value))).next).call(ue))
                          .done ||
                        (se = be.call(ue)).done ||
                        !be.call(ue).done
                      )
                        throw TypeError('Expected sequence with length 2');
                      me.push({ key: te.value + '', value: se.value + '' });
                    }
                  else
                    for (he in ve)
                      j(ve, he) && me.push({ key: he, value: ve[he] + '' });
                else
                  Y(
                    me,
                    typeof ve == 'string'
                      ? ve.charAt(0) === '?'
                        ? ve.slice(1)
                        : ve
                      : ve + '',
                  );
            }
            var o = ne('../internals/export'),
              H = ne('../internals/get-built-in'),
              s = ne('../internals/native-url'),
              n = ne('../internals/redefine'),
              c = ne('../internals/redefine-all'),
              f = ne('../internals/set-to-string-tag'),
              g = ne('../internals/create-iterator-constructor'),
              _ = ne('../internals/internal-state'),
              x = ne('../internals/an-instance'),
              j = ne('../internals/has'),
              v = ne('../internals/function-bind-context'),
              M = ne('../internals/classof'),
              C = ne('../internals/an-object'),
              k = ne('../internals/is-object'),
              A = ne('../internals/object-create'),
              R = ne('../internals/create-property-descriptor'),
              O = ne('../internals/get-iterator'),
              D = ne('../internals/get-iterator-method'),
              ne = ne('../internals/well-known-symbol'),
              N = H('fetch'),
              U = H('Headers'),
              H = ne('iterator'),
              q = 'URLSearchParams',
              z = q + 'Iterator',
              X = _.set,
              W = _.getterFor(q),
              Z = _.getterFor(z),
              $ = /\+/g,
              ae = Array(4),
              P = function (ce) {
                var pe,
                  le = ce.replace($, ' '),
                  ue = 4;
                try {
                  return decodeURIComponent(le);
                } catch {
                  for (; ue; )
                    le = le.replace(
                      ((pe = ue--),
                      ae[pe - 1] ||
                        (ae[pe - 1] = RegExp(
                          '((?:%[\\da-f]{2}){' + pe + '})',
                          'gi',
                        ))),
                      u,
                    );
                  return le;
                }
              },
              L = /[!'()~]|%20/g,
              B = {
                '!': '%21',
                "'": '%27',
                '(': '%28',
                ')': '%29',
                '~': '%7E',
                '%20': '+',
              },
              Y = function (ce, pe) {
                if (pe)
                  for (var le, ue = pe.split('&'), be = 0; be < ue.length; )
                    (le = ue[be++]).length &&
                      ((le = le.split('=')),
                      ce.push({ key: P(le.shift()), value: P(le.join('=')) }));
              },
              ee = g(
                function (ce, pe) {
                  X(this, { type: z, iterator: O(W(ce).entries), kind: pe });
                },
                'Iterator',
                function () {
                  var pe = Z(this),
                    ce = pe.kind,
                    pe = pe.iterator.next(),
                    le = pe.value;
                  return (
                    pe.done ||
                      (pe.value =
                        ce === 'keys'
                          ? le.key
                          : ce === 'values'
                          ? le.value
                          : [le.key, le.value]),
                    pe
                  );
                },
              ),
              ne = h.prototype;
            c(
              ne,
              {
                append: function (ce, pe) {
                  d(arguments.length, 2);
                  var le = W(this);
                  le.entries.push({ key: ce + '', value: pe + '' }),
                    le.updateURL();
                },
                delete: function (ce) {
                  d(arguments.length, 1);
                  for (
                    var pe = W(this), le = pe.entries, ue = ce + '', be = 0;
                    be < le.length;

                  )
                    le[be].key === ue ? le.splice(be, 1) : be++;
                  pe.updateURL();
                },
                get: function (ce) {
                  d(arguments.length, 1);
                  for (
                    var pe = W(this).entries, le = ce + '', ue = 0;
                    ue < pe.length;
                    ue++
                  )
                    if (pe[ue].key === le) return pe[ue].value;
                  return null;
                },
                getAll: function (ce) {
                  d(arguments.length, 1);
                  for (
                    var pe = W(this).entries, le = ce + '', ue = [], be = 0;
                    be < pe.length;
                    be++
                  )
                    pe[be].key === le && ue.push(pe[be].value);
                  return ue;
                },
                has: function (ce) {
                  d(arguments.length, 1);
                  for (
                    var pe = W(this).entries, le = ce + '', ue = 0;
                    ue < pe.length;

                  )
                    if (pe[ue++].key === le) return !0;
                  return !1;
                },
                set: function (ce, pe) {
                  d(arguments.length, 1);
                  for (
                    var le,
                      ue = W(this),
                      be = ue.entries,
                      te = !1,
                      se = ce + '',
                      he = pe + '',
                      ve = 0;
                    ve < be.length;
                    ve++
                  )
                    (le = be[ve]).key === se &&
                      (te ? be.splice(ve--, 1) : ((te = !0), (le.value = he)));
                  te || be.push({ key: se, value: he }), ue.updateURL();
                },
                sort: function () {
                  for (
                    var ce,
                      pe,
                      le = W(this),
                      ue = le.entries,
                      be = ue.slice(),
                      te = (ue.length = 0);
                    te < be.length;
                    te++
                  ) {
                    for (ce = be[te], pe = 0; pe < te; pe++)
                      if (ue[pe].key > ce.key) {
                        ue.splice(pe, 0, ce);
                        break;
                      }
                    pe === te && ue.push(ce);
                  }
                  le.updateURL();
                },
                forEach: function (ce) {
                  for (
                    var pe,
                      le = W(this).entries,
                      ue = v(
                        ce,
                        1 < arguments.length ? arguments[1] : void 0,
                        3,
                      ),
                      be = 0;
                    be < le.length;

                  )
                    ue((pe = le[be++]).value, pe.key, this);
                },
                keys: function () {
                  return new ee(this, 'keys');
                },
                values: function () {
                  return new ee(this, 'values');
                },
                entries: function () {
                  return new ee(this, 'entries');
                },
              },
              { enumerable: !0 },
            ),
              n(ne, H, ne.entries),
              n(
                ne,
                'toString',
                function () {
                  for (
                    var ce, pe = W(this).entries, le = [], ue = 0;
                    ue < pe.length;

                  )
                    (ce = pe[ue++]), le.push(r(ce.key) + '=' + r(ce.value));
                  return le.join('&');
                },
                { enumerable: !0 },
              ),
              f(h, q),
              o({ global: !0, forced: !s }, { URLSearchParams: h }),
              s ||
                typeof N != 'function' ||
                typeof U != 'function' ||
                o(
                  { global: !0, enumerable: !0, forced: !0 },
                  {
                    fetch: function (be) {
                      var pe,
                        le,
                        ue,
                        be = [be];
                      return (
                        1 < arguments.length &&
                          (k((pe = arguments[1])) &&
                            ((le = pe.body),
                            M(le) === q &&
                              ((ue = pe.headers
                                ? new U(pe.headers)
                                : new U()).has('content-type') ||
                                ue.set(
                                  'content-type',
                                  'application/x-www-form-urlencoded;charset=UTF-8',
                                ),
                              (pe = A(pe, {
                                body: R(0, String(le)),
                                headers: R(0, ue),
                              })))),
                          be.push(pe)),
                        N.apply(this, be)
                      );
                    },
                  },
                ),
              (b.exports = { URLSearchParams: h, getState: W });
          },
          {
            '../internals/an-instance': 9,
            '../internals/an-object': 10,
            '../internals/classof': 29,
            '../internals/create-iterator-constructor': 37,
            '../internals/create-property-descriptor': 39,
            '../internals/export': 50,
            '../internals/function-bind-context': 54,
            '../internals/get-built-in': 56,
            '../internals/get-iterator': 58,
            '../internals/get-iterator-method': 57,
            '../internals/has': 60,
            '../internals/internal-state': 70,
            '../internals/is-object': 74,
            '../internals/native-url': 84,
            '../internals/object-create': 90,
            '../internals/redefine': 108,
            '../internals/redefine-all': 107,
            '../internals/set-to-string-tag': 117,
            '../internals/well-known-symbol': 146,
            '../modules/es.array.iterator': 158,
          },
        ],
        232: [
          function (O, b, y) {
            O('../modules/es.string.iterator');
            function u(fe) {
              var Ue, Ye, Ne, ct;
              if (typeof fe == 'number') {
                for (Ue = [], Ye = 0; Ye < 4; Ye++)
                  Ue.unshift(fe % 256), (fe = z(fe / 256));
                return Ue.join('.');
              }
              if (typeof fe != 'object') return fe;
              for (Ue = '', Ne = se(fe), Ye = 0; Ye < 8; Ye++)
                (ct && fe[Ye] === 0) ||
                  ((ct = ct && !1),
                  Ne === Ye
                    ? ((Ue += Ye ? ':' : '::'), (ct = !0))
                    : ((Ue += fe[Ye].toString(16)), Ye < 7 && (Ue += ':')));
              return '[' + Ue + ']';
            }
            function a(fe) {
              return !fe.host || fe.cannotBeABaseURL || fe.scheme == 'file';
            }
            function r(fe, Ue, Ye, Ne) {
              var ct,
                Le,
                mt,
                qe = Ye || Ie,
                ft = 0,
                He = '',
                Ft = !1,
                Xt = !1,
                It = !1;
              for (
                Ye ||
                  ((fe.scheme = ''),
                  (fe.username = ''),
                  (fe.password = ''),
                  (fe.host = null),
                  (fe.port = null),
                  (fe.path = []),
                  (fe.query = null),
                  (fe.fragment = null),
                  (fe.cannotBeABaseURL = !1),
                  (Ue = Ue.replace(ue, ''))),
                  Ue = Ue.replace(be, ''),
                  ct = M(Ue);
                ft <= ct.length;

              ) {
                switch (((Le = ct[ft]), qe)) {
                  case Ie:
                    if (!Le || !P.test(Le)) {
                      if (Ye) return Z;
                      qe = Q;
                      continue;
                    }
                    (He += Le.toLowerCase()), (qe = xe);
                    break;
                  case xe:
                    if (
                      Le &&
                      (L.test(Le) || Le == '+' || Le == '-' || Le == '.')
                    )
                      He += Le.toLowerCase();
                    else {
                      if (Le != ':') {
                        if (Ye) return Z;
                        (He = ''), (qe = Q), (ft = 0);
                        continue;
                      }
                      if (
                        Ye &&
                        (Me(fe) != j(Pe, He) ||
                          (He == 'file' && (Be(fe) || fe.port !== null)) ||
                          (fe.scheme == 'file' && !fe.host))
                      )
                        return;
                      if (((fe.scheme = He), Ye))
                        return void (
                          Me(fe) &&
                          Pe[fe.scheme] == fe.port &&
                          (fe.port = null)
                        );
                      (He = ''),
                        fe.scheme == 'file'
                          ? (qe = at)
                          : Me(fe) && Ne && Ne.scheme == fe.scheme
                          ? (qe = K)
                          : Me(fe)
                          ? (qe = je)
                          : ct[ft + 1] == '/'
                          ? ((qe = G), ft++)
                          : ((fe.cannotBeABaseURL = !0),
                            fe.path.push(''),
                            (qe = jt));
                    }
                    break;
                  case Q:
                    if (!Ne || (Ne.cannotBeABaseURL && Le != '#')) return Z;
                    if (Ne.cannotBeABaseURL && Le == '#') {
                      (fe.scheme = Ne.scheme),
                        (fe.path = Ne.path.slice()),
                        (fe.query = Ne.query),
                        (fe.fragment = ''),
                        (fe.cannotBeABaseURL = !0),
                        (qe = Gt);
                      break;
                    }
                    qe = Ne.scheme == 'file' ? at : re;
                    continue;
                  case K:
                    if (Le != '/' || ct[ft + 1] != '/') {
                      qe = re;
                      continue;
                    }
                    (qe = Ae), ft++;
                    break;
                  case G:
                    if (Le == '/') {
                      qe = Fe;
                      break;
                    }
                    qe = nt;
                    continue;
                  case re:
                    if (((fe.scheme = Ne.scheme), Le == h))
                      (fe.username = Ne.username),
                        (fe.password = Ne.password),
                        (fe.host = Ne.host),
                        (fe.port = Ne.port),
                        (fe.path = Ne.path.slice()),
                        (fe.query = Ne.query);
                    else if (Le == '/' || (Le == '\\' && Me(fe))) qe = ge;
                    else if (Le == '?')
                      (fe.username = Ne.username),
                        (fe.password = Ne.password),
                        (fe.host = Ne.host),
                        (fe.port = Ne.port),
                        (fe.path = Ne.path.slice()),
                        (fe.query = ''),
                        (qe = or);
                    else {
                      if (Le != '#') {
                        (fe.username = Ne.username),
                          (fe.password = Ne.password),
                          (fe.host = Ne.host),
                          (fe.port = Ne.port),
                          (fe.path = Ne.path.slice()),
                          fe.path.pop(),
                          (qe = nt);
                        continue;
                      }
                      (fe.username = Ne.username),
                        (fe.password = Ne.password),
                        (fe.host = Ne.host),
                        (fe.port = Ne.port),
                        (fe.path = Ne.path.slice()),
                        (fe.query = Ne.query),
                        (fe.fragment = ''),
                        (qe = Gt);
                    }
                    break;
                  case ge:
                    if (!Me(fe) || (Le != '/' && Le != '\\')) {
                      if (Le != '/') {
                        (fe.username = Ne.username),
                          (fe.password = Ne.password),
                          (fe.host = Ne.host),
                          (fe.port = Ne.port),
                          (qe = nt);
                        continue;
                      }
                      qe = Fe;
                    } else qe = Ae;
                    break;
                  case je:
                    if (((qe = Ae), Le != '/' || He.charAt(ft + 1) != '/'))
                      continue;
                    ft++;
                    break;
                  case Ae:
                    if (Le == '/' || Le == '\\') break;
                    qe = Fe;
                    continue;
                  case Fe:
                    if (Le == '@') {
                      Ft && (He = '%40' + He);
                      for (
                        var Ft = !0, Qt = M(He), Rr = 0;
                        Rr < Qt.length;
                        Rr++
                      ) {
                        var gr = Qt[Rr];
                        gr != ':' || It
                          ? ((gr = Se(gr, Ce)),
                            It ? (fe.password += gr) : (fe.username += gr))
                          : (It = !0);
                      }
                      He = '';
                    } else if (
                      Le == h ||
                      Le == '/' ||
                      Le == '?' ||
                      Le == '#' ||
                      (Le == '\\' && Me(fe))
                    ) {
                      if (Ft && He == '') return W;
                      (ft -= M(He).length + 1), (He = ''), (qe = Ve);
                    } else He += Le;
                    break;
                  case Ve:
                  case Ge:
                    if (Ye && fe.scheme == 'file') {
                      qe = Ke;
                      continue;
                    }
                    if (Le != ':' || Xt) {
                      if (
                        Le == h ||
                        Le == '/' ||
                        Le == '?' ||
                        Le == '#' ||
                        (Le == '\\' && Me(fe))
                      ) {
                        if (Me(fe) && He == '') return $;
                        if (Ye && He == '' && (Be(fe) || fe.port !== null))
                          return;
                        if ((mt = te(fe, He))) return mt;
                        if (((He = ''), (qe = ot), Ye)) return;
                        continue;
                      }
                      Le == '[' ? (Xt = !0) : Le == ']' && (Xt = !1),
                        (He += Le);
                    } else {
                      if (He == '') return $;
                      if ((mt = te(fe, He))) return mt;
                      if (((He = ''), (qe = Xe), Ye == Ge)) return;
                    }
                    break;
                  case Xe:
                    if (!B.test(Le)) {
                      if (
                        Le == h ||
                        Le == '/' ||
                        Le == '?' ||
                        Le == '#' ||
                        (Le == '\\' && Me(fe)) ||
                        Ye
                      ) {
                        if (He != '') {
                          var Pr = parseInt(He, 10);
                          if (65535 < Pr) return ae;
                          (fe.port =
                            Me(fe) && Pr === Pe[fe.scheme] ? null : Pr),
                            (He = '');
                        }
                        if (Ye) return;
                        qe = ot;
                        continue;
                      }
                      return ae;
                    }
                    He += Le;
                    break;
                  case at:
                    if (((fe.scheme = 'file'), Le == '/' || Le == '\\'))
                      qe = st;
                    else {
                      if (!Ne || Ne.scheme != 'file') {
                        qe = nt;
                        continue;
                      }
                      if (Le == h)
                        (fe.host = Ne.host),
                          (fe.path = Ne.path.slice()),
                          (fe.query = Ne.query);
                      else if (Le == '?')
                        (fe.host = Ne.host),
                          (fe.path = Ne.path.slice()),
                          (fe.query = ''),
                          (qe = or);
                      else {
                        if (Le != '#') {
                          We(ct.slice(ft).join('')) ||
                            ((fe.host = Ne.host),
                            (fe.path = Ne.path.slice()),
                            Qe(fe)),
                            (qe = nt);
                          continue;
                        }
                        (fe.host = Ne.host),
                          (fe.path = Ne.path.slice()),
                          (fe.query = Ne.query),
                          (fe.fragment = ''),
                          (qe = Gt);
                      }
                    }
                    break;
                  case st:
                    if (Le == '/' || Le == '\\') {
                      qe = Ke;
                      break;
                    }
                    Ne &&
                      Ne.scheme == 'file' &&
                      !We(ct.slice(ft).join('')) &&
                      (ze(Ne.path[0], !0)
                        ? fe.path.push(Ne.path[0])
                        : (fe.host = Ne.host)),
                      (qe = nt);
                    continue;
                  case Ke:
                    if (
                      Le == h ||
                      Le == '/' ||
                      Le == '\\' ||
                      Le == '?' ||
                      Le == '#'
                    ) {
                      if (!Ye && ze(He)) qe = nt;
                      else {
                        if (He == '') {
                          if (((fe.host = ''), Ye)) return;
                        } else {
                          if ((mt = te(fe, He))) return mt;
                          if ((fe.host == 'localhost' && (fe.host = ''), Ye))
                            return;
                          He = '';
                        }
                        qe = ot;
                      }
                      continue;
                    }
                    He += Le;
                    break;
                  case ot:
                    if (Me(fe)) {
                      if (((qe = nt), Le != '/' && Le != '\\')) continue;
                    } else if (Ye || Le != '?')
                      if (Ye || Le != '#') {
                        if (Le != h && ((qe = nt), Le != '/')) continue;
                      } else (fe.fragment = ''), (qe = Gt);
                    else (fe.query = ''), (qe = or);
                    break;
                  case nt:
                    if (
                      Le == h ||
                      Le == '/' ||
                      (Le == '\\' && Me(fe)) ||
                      (!Ye && (Le == '?' || Le == '#'))
                    ) {
                      if (
                        (_e(He)
                          ? (Qe(fe),
                            Le == '/' ||
                              (Le == '\\' && Me(fe)) ||
                              fe.path.push(''))
                          : Ze(He)
                          ? Le == '/' ||
                            (Le == '\\' && Me(fe)) ||
                            fe.path.push('')
                          : (fe.scheme == 'file' &&
                              !fe.path.length &&
                              ze(He) &&
                              (fe.host && (fe.host = ''),
                              (He = He.charAt(0) + ':')),
                            fe.path.push(He)),
                        (He = ''),
                        fe.scheme == 'file' &&
                          (Le == h || Le == '?' || Le == '#'))
                      )
                        for (; 1 < fe.path.length && fe.path[0] === ''; )
                          fe.path.shift();
                      Le == '?'
                        ? ((fe.query = ''), (qe = or))
                        : Le == '#' && ((fe.fragment = ''), (qe = Gt));
                    } else He += Se(Le, me);
                    break;
                  case jt:
                    Le == '?'
                      ? ((fe.query = ''), (qe = or))
                      : Le == '#'
                      ? ((fe.fragment = ''), (qe = Gt))
                      : Le != h && (fe.path[0] += Se(Le, he));
                    break;
                  case or:
                    Ye || Le != '#'
                      ? Le != h &&
                        (Le == "'" && Me(fe)
                          ? (fe.query += '%27')
                          : (fe.query += Le == '#' ? '%23' : Se(Le, he)))
                      : ((fe.fragment = ''), (qe = Gt));
                    break;
                  case Gt:
                    Le != h && (fe.fragment += Se(Le, ve));
                }
                ft++;
              }
            }
            function l(Le) {
              var Ue,
                Ye,
                Ne = x(this, l, 'URL'),
                ct = 1 < arguments.length ? arguments[1] : void 0,
                Le = String(Le),
                mt = H(Ne, { type: 'URL' });
              if (ct !== void 0) {
                if (ct instanceof l) Ue = q(ct);
                else if ((Ye = r((Ue = {}), String(ct)))) throw TypeError(Ye);
              }
              if ((Ye = r(mt, Le, null, Ue))) throw TypeError(Ye);
              var qe = (mt.searchParams = new N());
              (ct = U(qe)).updateSearchParams(mt.query),
                (ct.updateURL = function () {
                  mt.query = String(qe) || null;
                }),
                c ||
                  ((Ne.href = Ct.call(Ne)),
                  (Ne.origin = pt.call(Ne)),
                  (Ne.protocol = tr.call(Ne)),
                  (Ne.username = $t.call(Ne)),
                  (Ne.password = vt.call(Ne)),
                  (Ne.host = rr.call(Ne)),
                  (Ne.hostname = Wn.call(Ne)),
                  (Ne.port = qn.call(Ne)),
                  (Ne.pathname = zn.call(Ne)),
                  (Ne.search = Ts.call(Ne)),
                  (Ne.searchParams = Hn.call(Ne)),
                  (Ne.hash = Xn.call(Ne)));
            }
            function d(fe, Ue) {
              return { get: fe, set: Ue, configurable: !0, enumerable: !0 };
            }
            var h,
              o,
              s,
              n = O('../internals/export'),
              c = O('../internals/descriptors'),
              f = O('../internals/native-url'),
              yt = O('../internals/global'),
              g = O('../internals/object-define-properties'),
              _ = O('../internals/redefine'),
              x = O('../internals/an-instance'),
              j = O('../internals/has'),
              v = O('../internals/object-assign'),
              M = O('../internals/array-from'),
              C = O('../internals/string-multibyte').codeAt,
              k = O('../internals/string-punycode-to-ascii'),
              A = O('../internals/set-to-string-tag'),
              R = O('../modules/web.url-search-params'),
              O = O('../internals/internal-state'),
              D = yt.URL,
              N = R.URLSearchParams,
              U = R.getState,
              H = O.set,
              q = O.getterFor('URL'),
              z = Math.floor,
              X = Math.pow,
              W = 'Invalid authority',
              Z = 'Invalid scheme',
              $ = 'Invalid host',
              ae = 'Invalid port',
              P = /[A-Za-z]/,
              L = /[\d+-.A-Za-z]/,
              B = /\d/,
              Y = /^(0x|0X)/,
              ee = /^[0-7]+$/,
              ne = /^\d+$/,
              ce = /^[\dA-Fa-f]+$/,
              pe = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,
              le = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/,
              ue = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,
              be = /[\u0009\u000A\u000D]/g,
              te = function (fe, Ue) {
                var Ye, Ne, ct;
                if (Ue.charAt(0) == '[')
                  return Ue.charAt(Ue.length - 1) == ']' &&
                    (Ye = (function (Le) {
                      var mt = [0, 0, 0, 0, 0, 0, 0, 0],
                        qe = 0,
                        ft = null,
                        He = 0,
                        Ft,
                        Xt,
                        It,
                        Qt,
                        Rr,
                        gr,
                        Pr,
                        Jt = function () {
                          return Le.charAt(He);
                        };
                      if (Jt() == ':') {
                        if (Le.charAt(1) != ':') return;
                        (He += 2), qe++, (ft = qe);
                      }
                      for (; Jt(); ) {
                        if (qe == 8) return;
                        if (Jt() == ':') {
                          if (ft !== null) return;
                          He++, qe++, (ft = qe);
                          continue;
                        }
                        for (Ft = Xt = 0; Xt < 4 && ce.test(Jt()); )
                          (Ft = Ft * 16 + parseInt(Jt(), 16)), He++, Xt++;
                        if (Jt() == '.') {
                          if (Xt == 0 || ((He -= Xt), qe > 6)) return;
                          for (It = 0; Jt(); ) {
                            if (((Qt = null), It > 0))
                              if (Jt() == '.' && It < 4) He++;
                              else return;
                            if (!B.test(Jt())) return;
                            for (; B.test(Jt()); ) {
                              if (((Rr = parseInt(Jt(), 10)), Qt === null))
                                Qt = Rr;
                              else {
                                if (Qt == 0) return;
                                Qt = Qt * 10 + Rr;
                              }
                              if (Qt > 255) return;
                              He++;
                            }
                            (mt[qe] = mt[qe] * 256 + Qt),
                              It++,
                              (It == 2 || It == 4) && qe++;
                          }
                          if (It != 4) return;
                          break;
                        } else if (Jt() == ':') {
                          if ((He++, !Jt())) return;
                        } else if (Jt()) return;
                        mt[qe++] = Ft;
                      }
                      if (ft !== null)
                        for (gr = qe - ft, qe = 7; qe != 0 && gr > 0; )
                          (Pr = mt[qe]),
                            (mt[qe--] = mt[ft + gr - 1]),
                            (mt[ft + --gr] = Pr);
                      else if (qe != 8) return;
                      return mt;
                    })(Ue.slice(1, -1)))
                    ? void (fe.host = Ye)
                    : $;
                if (Me(fe))
                  return (
                    (Ue = k(Ue)),
                    pe.test(Ue) ||
                    (Ye = (function (Le) {
                      var mt = Le.split('.'),
                        qe,
                        ft,
                        He,
                        Ft,
                        Xt,
                        It,
                        Qt;
                      if (
                        (mt.length && mt[mt.length - 1] == '' && mt.pop(),
                        (qe = mt.length) > 4)
                      )
                        return Le;
                      for (ft = [], He = 0; He < qe; He++) {
                        if (((Ft = mt[He]), Ft == '')) return Le;
                        if (
                          ((Xt = 10),
                          Ft.length > 1 &&
                            Ft.charAt(0) == '0' &&
                            ((Xt = Y.test(Ft) ? 16 : 8),
                            (Ft = Ft.slice(Xt == 8 ? 1 : 2))),
                          Ft === '')
                        )
                          It = 0;
                        else {
                          if (!(Xt == 10 ? ne : Xt == 8 ? ee : ce).test(Ft))
                            return Le;
                          It = parseInt(Ft, Xt);
                        }
                        ft.push(It);
                      }
                      for (He = 0; He < qe; He++)
                        if (((It = ft[He]), He == qe - 1)) {
                          if (It >= X(256, 5 - qe)) return null;
                        } else if (It > 255) return null;
                      for (Qt = ft.pop(), He = 0; He < ft.length; He++)
                        Qt += ft[He] * X(256, 3 - He);
                      return Qt;
                    })(Ue)) === null
                      ? $
                      : void (fe.host = Ye)
                  );
                if (le.test(Ue)) return $;
                for (Ye = '', Ne = M(Ue), ct = 0; ct < Ne.length; ct++)
                  Ye += Se(Ne[ct], he);
                fe.host = Ye;
              },
              se = function (fe) {
                for (
                  var Ue = null, Ye = 1, Ne = null, ct = 0, Le = 0;
                  Le < 8;
                  Le++
                )
                  fe[Le] !== 0
                    ? (Ye < ct && ((Ue = Ne), (Ye = ct)), (Ne = null), (ct = 0))
                    : (Ne === null && (Ne = Le), ++ct);
                return Ye < ct && ((Ue = Ne), (Ye = ct)), Ue;
              },
              he = {},
              ve = v({}, he, { ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1 }),
              me = v({}, ve, { '#': 1, '?': 1, '{': 1, '}': 1 }),
              Ce = v({}, me, {
                '/': 1,
                ':': 1,
                ';': 1,
                '=': 1,
                '@': 1,
                '[': 1,
                '\\': 1,
                ']': 1,
                '^': 1,
                '|': 1,
              }),
              Se = function (fe, Ue) {
                var Ye = C(fe, 0);
                return 32 < Ye && Ye < 127 && !j(Ue, fe)
                  ? fe
                  : encodeURIComponent(fe);
              },
              Pe = {
                ftp: 21,
                file: null,
                http: 80,
                https: 443,
                ws: 80,
                wss: 443,
              },
              Me = function (fe) {
                return j(Pe, fe.scheme);
              },
              Be = function (fe) {
                return fe.username != '' || fe.password != '';
              },
              ze = function (fe, Ue) {
                return (
                  fe.length == 2 &&
                  P.test(fe.charAt(0)) &&
                  ((fe = fe.charAt(1)) == ':' || (!Ue && fe == '|'))
                );
              },
              We = function (fe) {
                return (
                  1 < fe.length &&
                  ze(fe.slice(0, 2)) &&
                  (fe.length == 2 ||
                    (fe = fe.charAt(2)) === '/' ||
                    fe === '\\' ||
                    fe === '?' ||
                    fe === '#')
                );
              },
              Qe = function (fe) {
                var Ue = fe.path,
                  Ye = Ue.length;
                !Ye ||
                  (fe.scheme == 'file' && Ye == 1 && ze(Ue[0], !0)) ||
                  Ue.pop();
              },
              Ze = function (fe) {
                return fe === '.' || fe.toLowerCase() === '%2e';
              },
              _e = function (fe) {
                return (
                  (fe = fe.toLowerCase()) === '..' ||
                  fe === '%2e.' ||
                  fe === '.%2e' ||
                  fe === '%2e%2e'
                );
              },
              Ie = {},
              xe = {},
              Q = {},
              K = {},
              G = {},
              re = {},
              ge = {},
              je = {},
              Ae = {},
              Fe = {},
              Ve = {},
              Ge = {},
              Xe = {},
              at = {},
              st = {},
              Ke = {},
              ot = {},
              nt = {},
              jt = {},
              or = {},
              Gt = {},
              yt = l.prototype,
              Ct = function () {
                var fe = q(this),
                  Ue = fe.scheme,
                  Ye = fe.username,
                  Ne = fe.password,
                  ct = fe.host,
                  Le = fe.port,
                  mt = fe.path,
                  qe = fe.query,
                  ft = fe.fragment,
                  He = Ue + ':';
                return (
                  ct !== null
                    ? ((He += '//'),
                      Be(fe) && (He += Ye + (Ne ? ':' + Ne : '') + '@'),
                      (He += u(ct)),
                      Le !== null && (He += ':' + Le))
                    : Ue == 'file' && (He += '//'),
                  (He += fe.cannotBeABaseURL
                    ? mt[0]
                    : mt.length
                    ? '/' + mt.join('/')
                    : ''),
                  qe !== null && (He += '?' + qe),
                  ft !== null && (He += '#' + ft),
                  He
                );
              },
              pt = function () {
                var fe = q(this),
                  Ue = fe.scheme,
                  Ye = fe.port;
                if (Ue == 'blob')
                  try {
                    return new URL(Ue.path[0]).origin;
                  } catch {
                    return 'null';
                  }
                return Ue != 'file' && Me(fe)
                  ? Ue + '://' + u(fe.host) + (Ye !== null ? ':' + Ye : '')
                  : 'null';
              },
              tr = function () {
                return q(this).scheme + ':';
              },
              $t = function () {
                return q(this).username;
              },
              vt = function () {
                return q(this).password;
              },
              rr = function () {
                var Ue = q(this),
                  fe = Ue.host,
                  Ue = Ue.port;
                return fe === null
                  ? ''
                  : Ue === null
                  ? u(fe)
                  : u(fe) + ':' + Ue;
              },
              Wn = function () {
                var fe = q(this).host;
                return fe === null ? '' : u(fe);
              },
              qn = function () {
                var fe = q(this).port;
                return fe === null ? '' : String(fe);
              },
              zn = function () {
                var fe = q(this),
                  Ue = fe.path;
                return fe.cannotBeABaseURL
                  ? Ue[0]
                  : Ue.length
                  ? '/' + Ue.join('/')
                  : '';
              },
              Ts = function () {
                var fe = q(this).query;
                return fe ? '?' + fe : '';
              },
              Hn = function () {
                return q(this).searchParams;
              },
              Xn = function () {
                var fe = q(this).fragment;
                return fe ? '#' + fe : '';
              };
            c &&
              g(yt, {
                href: d(Ct, function (Ye) {
                  var Ue = q(this),
                    Ye = String(Ye),
                    Ye = r(Ue, Ye);
                  if (Ye) throw TypeError(Ye);
                  U(Ue.searchParams).updateSearchParams(Ue.query);
                }),
                origin: d(pt),
                protocol: d(tr, function (fe) {
                  var Ue = q(this);
                  r(Ue, String(fe) + ':', Ie);
                }),
                username: d($t, function (fe) {
                  var Ue = q(this),
                    Ye = M(String(fe));
                  if (!a(Ue)) {
                    Ue.username = '';
                    for (var Ne = 0; Ne < Ye.length; Ne++)
                      Ue.username += Se(Ye[Ne], Ce);
                  }
                }),
                password: d(vt, function (fe) {
                  var Ue = q(this),
                    Ye = M(String(fe));
                  if (!a(Ue)) {
                    Ue.password = '';
                    for (var Ne = 0; Ne < Ye.length; Ne++)
                      Ue.password += Se(Ye[Ne], Ce);
                  }
                }),
                host: d(rr, function (fe) {
                  var Ue = q(this);
                  Ue.cannotBeABaseURL || r(Ue, String(fe), Ve);
                }),
                hostname: d(Wn, function (fe) {
                  var Ue = q(this);
                  Ue.cannotBeABaseURL || r(Ue, String(fe), Ge);
                }),
                port: d(qn, function (fe) {
                  var Ue = q(this);
                  a(Ue) ||
                    ((fe = String(fe)) == ''
                      ? (Ue.port = null)
                      : r(Ue, fe, Xe));
                }),
                pathname: d(zn, function (fe) {
                  var Ue = q(this);
                  Ue.cannotBeABaseURL || ((Ue.path = []), r(Ue, fe + '', ot));
                }),
                search: d(Ts, function (fe) {
                  var Ue = q(this);
                  (fe = String(fe)) == ''
                    ? (Ue.query = null)
                    : (fe.charAt(0) == '?' && (fe = fe.slice(1)),
                      (Ue.query = ''),
                      r(Ue, fe, or)),
                    U(Ue.searchParams).updateSearchParams(Ue.query);
                }),
                searchParams: d(Hn),
                hash: d(Xn, function (fe) {
                  var Ue = q(this);
                  (fe = String(fe)) == ''
                    ? (Ue.fragment = null)
                    : (fe.charAt(0) == '#' && (fe = fe.slice(1)),
                      (Ue.fragment = ''),
                      r(Ue, fe, Gt));
                }),
              }),
              _(
                yt,
                'toJSON',
                function () {
                  return Ct.call(this);
                },
                { enumerable: !0 },
              ),
              _(
                yt,
                'toString',
                function () {
                  return Ct.call(this);
                },
                { enumerable: !0 },
              ),
              D &&
                ((o = D.createObjectURL),
                (s = D.revokeObjectURL),
                o &&
                  _(l, 'createObjectURL', function (fe) {
                    return o.apply(D, arguments);
                  }),
                s &&
                  _(l, 'revokeObjectURL', function (fe) {
                    return s.apply(D, arguments);
                  })),
              A(l, 'URL'),
              n({ global: !0, forced: !f, sham: !c }, { URL: l });
          },
          {
            '../internals/an-instance': 9,
            '../internals/array-from': 17,
            '../internals/descriptors': 43,
            '../internals/export': 50,
            '../internals/global': 59,
            '../internals/has': 60,
            '../internals/internal-state': 70,
            '../internals/native-url': 84,
            '../internals/object-assign': 89,
            '../internals/object-define-properties': 91,
            '../internals/redefine': 108,
            '../internals/set-to-string-tag': 117,
            '../internals/string-multibyte': 123,
            '../internals/string-punycode-to-ascii': 124,
            '../modules/es.string.iterator': 186,
            '../modules/web.url-search-params': 231,
          },
        ],
        233: [
          function (t, b, y) {
            b.exports = t('./').polyfill();
          },
          { './': 234 },
        ],
        234: [
          function (t, b, y) {
            (function (u, a) {
              var r, l;
              (r = this),
                (l = function () {
                  function d(te) {
                    return typeof te == 'function';
                  }
                  var h =
                      Array.isArray ||
                      function (te) {
                        return (
                          Object.prototype.toString.call(te) ===
                          '[object Array]'
                        );
                      },
                    o = 0,
                    s = void 0,
                    n = void 0,
                    c = function (te, se) {
                      (v[o] = te),
                        (v[o + 1] = se),
                        (o += 2) === 2 && (n ? n(M) : N());
                    },
                    f = typeof window < 'u' ? window : void 0,
                    g = f || {},
                    g = g.MutationObserver || g.WebKitMutationObserver,
                    _ =
                      typeof self > 'u' &&
                      u !== void 0 &&
                      {}.toString.call(u) === '[object process]',
                    x =
                      typeof Uint8ClampedArray < 'u' &&
                      typeof importScripts < 'u' &&
                      typeof MessageChannel < 'u';
                  function j() {
                    var te = setTimeout;
                    return function () {
                      return te(M, 1);
                    };
                  }
                  var v = new Array(1e3);
                  function M() {
                    for (var te = 0; te < o; te += 2)
                      (0, v[te])(v[te + 1]),
                        (v[te] = void 0),
                        (v[te + 1] = void 0);
                    o = 0;
                  }
                  function C() {
                    try {
                      var te = Function('return this')().require('vertx');
                      return (s = te.runOnLoop || te.runOnContext) !== void 0
                        ? function () {
                            s(M);
                          }
                        : j();
                    } catch {
                      return j();
                    }
                  }
                  var k,
                    A,
                    R,
                    N = void 0;
                  function O(te, se) {
                    var he,
                      ve = this,
                      me = new this.constructor(H),
                      Ce = (me[U] === void 0 && ce(me), ve._state);
                    return (
                      Ce
                        ? ((he = arguments[Ce - 1]),
                          c(function () {
                            return ee(Ce, me, he, ve._result);
                          }))
                        : B(ve, me, te, se),
                      me
                    );
                  }
                  function D(te) {
                    var se;
                    return te &&
                      typeof te == 'object' &&
                      te.constructor === this
                      ? te
                      : ($((se = new this(H)), te), se);
                  }
                  var N = _
                      ? function () {
                          return u.nextTick(M);
                        }
                      : g
                      ? ((A = 0),
                        (_ = new g(M)),
                        (R = document.createTextNode('')),
                        _.observe(R, { characterData: !0 }),
                        function () {
                          R.data = A = ++A % 2;
                        })
                      : x
                      ? (((k = new MessageChannel()).port1.onmessage = M),
                        function () {
                          return k.port2.postMessage(0);
                        })
                      : (f === void 0 && typeof t == 'function' ? C : j)(),
                    U = Math.random().toString(36).substring(2);
                  function H() {}
                  var q = void 0,
                    z = 1,
                    X = 2;
                  function W(te, se, he) {
                    c(function (ve) {
                      var me = !1,
                        Ce = (function (Se, Pe, Me, Be) {
                          try {
                            Se.call(Pe, Me, Be);
                          } catch (ze) {
                            return ze;
                          }
                        })(
                          he,
                          se,
                          function (Se) {
                            me || ((me = !0), (se !== Se ? $ : P)(ve, Se));
                          },
                          function (Se) {
                            me || ((me = !0), L(ve, Se));
                          },
                          ve._label,
                        );
                      !me && Ce && ((me = !0), L(ve, Ce));
                    }, te);
                  }
                  function Z(te, se, he) {
                    var ve, me;
                    se.constructor === te.constructor &&
                    he === O &&
                    se.constructor.resolve === D
                      ? ((ve = te),
                        (me = se)._state === z
                          ? P(ve, me._result)
                          : me._state === X
                          ? L(ve, me._result)
                          : B(
                              me,
                              void 0,
                              function (Ce) {
                                return $(ve, Ce);
                              },
                              function (Ce) {
                                return L(ve, Ce);
                              },
                            ))
                      : he !== void 0 && d(he)
                      ? W(te, se, he)
                      : P(te, se);
                  }
                  function $(te, se) {
                    if (te === se)
                      L(
                        te,
                        new TypeError(
                          'You cannot resolve a promise with itself',
                        ),
                      );
                    else if (
                      ((he = typeof se),
                      se === null || (he != 'object' && he != 'function'))
                    )
                      P(te, se);
                    else {
                      he = void 0;
                      try {
                        he = se.then;
                      } catch (ve) {
                        return void L(te, ve);
                      }
                      Z(te, se, he);
                    }
                    var he;
                  }
                  function ae(te) {
                    te._onerror && te._onerror(te._result), Y(te);
                  }
                  function P(te, se) {
                    te._state === q &&
                      ((te._result = se),
                      (te._state = z),
                      te._subscribers.length !== 0 && c(Y, te));
                  }
                  function L(te, se) {
                    te._state === q &&
                      ((te._state = X), (te._result = se), c(ae, te));
                  }
                  function B(te, se, he, ve) {
                    var me = te._subscribers,
                      Ce = me.length;
                    (te._onerror = null),
                      (me[Ce] = se),
                      (me[Ce + z] = he),
                      (me[Ce + X] = ve),
                      Ce === 0 && te._state && c(Y, te);
                  }
                  function Y(te) {
                    var se = te._subscribers,
                      he = te._state;
                    if (se.length !== 0) {
                      for (
                        var ve, me = void 0, Ce = te._result, Se = 0;
                        Se < se.length;
                        Se += 3
                      )
                        (ve = se[Se]),
                          (me = se[Se + he]),
                          ve ? ee(he, ve, me, Ce) : me(Ce);
                      te._subscribers.length = 0;
                    }
                  }
                  function ee(te, se, he, ve) {
                    var me = d(he),
                      Ce = void 0,
                      Se = void 0,
                      Pe = !0;
                    if (me) {
                      try {
                        Ce = he(ve);
                      } catch (Me) {
                        (Pe = !1), (Se = Me);
                      }
                      if (se === Ce)
                        return void L(
                          se,
                          new TypeError(
                            'A promises callback cannot return that same promise.',
                          ),
                        );
                    } else Ce = ve;
                    se._state === q &&
                      (me && Pe
                        ? $(se, Ce)
                        : Pe === !1
                        ? L(se, Se)
                        : te === z
                        ? P(se, Ce)
                        : te === X && L(se, Ce));
                  }
                  var ne = 0;
                  function ce(te) {
                    (te[U] = ne++),
                      (te._state = void 0),
                      (te._result = void 0),
                      (te._subscribers = []);
                  }
                  (le.prototype._enumerate = function (te) {
                    for (var se = 0; this._state === q && se < te.length; se++)
                      this._eachEntry(te[se], se);
                  }),
                    (le.prototype._eachEntry = function (te, se) {
                      var he = this._instanceConstructor,
                        ve = he.resolve;
                      if (ve === D) {
                        var me,
                          Ce = void 0,
                          Se = void 0,
                          Pe = !1;
                        try {
                          Ce = te.then;
                        } catch (Me) {
                          (Pe = !0), (Se = Me);
                        }
                        Ce === O && te._state !== q
                          ? this._settledAt(te._state, se, te._result)
                          : typeof Ce != 'function'
                          ? (this._remaining--, (this._result[se] = te))
                          : he === ue
                          ? ((me = new he(H)),
                            Pe ? L(me, Se) : Z(me, te, Ce),
                            this._willSettleAt(me, se))
                          : this._willSettleAt(
                              new he(function (Me) {
                                return Me(te);
                              }),
                              se,
                            );
                      } else this._willSettleAt(ve(te), se);
                    }),
                    (le.prototype._settledAt = function (te, se, he) {
                      var ve = this.promise;
                      ve._state === q &&
                        (this._remaining--,
                        te === X ? L(ve, he) : (this._result[se] = he)),
                        this._remaining === 0 && P(ve, this._result);
                    }),
                    (le.prototype._willSettleAt = function (te, se) {
                      var he = this;
                      B(
                        te,
                        void 0,
                        function (ve) {
                          return he._settledAt(z, se, ve);
                        },
                        function (ve) {
                          return he._settledAt(X, se, ve);
                        },
                      );
                    });
                  var pe = le;
                  function le(te, se) {
                    (this._instanceConstructor = te),
                      (this.promise = new te(H)),
                      this.promise[U] || ce(this.promise),
                      h(se)
                        ? ((this.length = se.length),
                          (this._remaining = se.length),
                          (this._result = new Array(this.length)),
                          (this.length !== 0 &&
                            ((this.length = this.length || 0),
                            this._enumerate(se),
                            this._remaining !== 0)) ||
                            P(this.promise, this._result))
                        : L(
                            this.promise,
                            new Error(
                              'Array Methods must be provided an Array',
                            ),
                          );
                  }
                  (be.prototype.catch = function (te) {
                    return this.then(null, te);
                  }),
                    (be.prototype.finally = function (te) {
                      var se = this.constructor;
                      return d(te)
                        ? this.then(
                            function (he) {
                              return se.resolve(te()).then(function () {
                                return he;
                              });
                            },
                            function (he) {
                              return se.resolve(te()).then(function () {
                                throw he;
                              });
                            },
                          )
                        : this.then(te, te);
                    });
                  var ue = be;
                  function be(te) {
                    if (
                      ((this[U] = ne++),
                      (this._result = this._state = void 0),
                      (this._subscribers = []),
                      H !== te)
                    ) {
                      if (typeof te != 'function')
                        throw new TypeError(
                          'You must pass a resolver function as the first argument to the promise constructor',
                        );
                      if (!(this instanceof be))
                        throw new TypeError(
                          "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.",
                        );
                      var se = this;
                      try {
                        te(
                          function (he) {
                            $(se, he);
                          },
                          function (he) {
                            L(se, he);
                          },
                        );
                      } catch (he) {
                        L(se, he);
                      }
                    }
                  }
                  return (
                    (ue.prototype.then = O),
                    (ue.all = function (te) {
                      return new pe(this, te).promise;
                    }),
                    (ue.race = function (te) {
                      var se = this;
                      return h(te)
                        ? new se(function (he, ve) {
                            for (var me = te.length, Ce = 0; Ce < me; Ce++)
                              se.resolve(te[Ce]).then(he, ve);
                          })
                        : new se(function (he, ve) {
                            return ve(
                              new TypeError('You must pass an array to race.'),
                            );
                          });
                    }),
                    (ue.resolve = D),
                    (ue.reject = function (te) {
                      var se = new this(H);
                      return L(se, te), se;
                    }),
                    (ue._setScheduler = function (te) {
                      n = te;
                    }),
                    (ue._setAsap = function (te) {
                      c = te;
                    }),
                    (ue._asap = c),
                    (ue.polyfill = function () {
                      var te = void 0;
                      if (a !== void 0) te = a;
                      else if (typeof self < 'u') te = self;
                      else
                        try {
                          te = Function('return this')();
                        } catch {
                          throw new Error(
                            'polyfill failed because global object is unavailable in this environment',
                          );
                        }
                      var se = te.Promise;
                      if (se) {
                        var he = null;
                        try {
                          he = Object.prototype.toString.call(se.resolve());
                        } catch {}
                        if (he === '[object Promise]' && !se.cast) return;
                      }
                      te.Promise = ue;
                    }),
                    (ue.Promise = ue)
                  );
                }),
                typeof y == 'object' && b !== void 0
                  ? (b.exports = l())
                  : (r.ES6Promise = l());
            }.call(
              this,
              t('_process'),
              typeof As < 'u'
                ? As
                : typeof self < 'u'
                ? self
                : typeof window < 'u'
                ? window
                : {},
            ));
          },
          { _process: 243 },
        ],
        235: [
          function (t, b, y) {
            var u, a;
            (u = this),
              (a = function (r, l) {
                var d = 5e3,
                  h = 'callback';
                function o(n) {
                  try {
                    delete window[n];
                  } catch {
                    window[n] = void 0;
                  }
                }
                function s(n) {
                  (n = document.getElementById(n)),
                    n &&
                      document.getElementsByTagName('head')[0].removeChild(n);
                }
                l.exports = function (n) {
                  var c =
                      arguments.length <= 1 || arguments[1] === void 0
                        ? {}
                        : arguments[1],
                    f = n,
                    g = c.timeout || d,
                    _ = c.jsonpCallback || h,
                    x = void 0;
                  return new Promise(function (j, v) {
                    var M =
                        c.jsonpCallbackFunction ||
                        'jsonp_' +
                          Date.now() +
                          '_' +
                          Math.ceil(1e5 * Math.random()),
                      C = _ + '_' + M,
                      k =
                        ((window[M] = function (A) {
                          j({
                            ok: !0,
                            json: function () {
                              return Promise.resolve(A);
                            },
                          }),
                            x && clearTimeout(x),
                            s(C),
                            o(M);
                        }),
                        (f += f.indexOf('?') === -1 ? '?' : '&'),
                        document.createElement('script'));
                    k.setAttribute('src', '' + f + _ + '=' + M),
                      c.charset && k.setAttribute('charset', c.charset),
                      (k.id = C),
                      document.getElementsByTagName('head')[0].appendChild(k),
                      (x = setTimeout(function () {
                        v(new Error('JSONP request to ' + n + ' timed out')),
                          o(M),
                          s(C),
                          (window[M] = function () {
                            o(M);
                          });
                      }, g)),
                      (k.onerror = function () {
                        v(new Error('JSONP request to ' + n + ' failed')),
                          o(M),
                          s(C),
                          x && clearTimeout(x);
                      });
                  });
                };
              }),
              y !== void 0 && b !== void 0
                ? a(0, b)
                : (a((a = { exports: {} }), a), (u.fetchJsonp = a.exports));
          },
          {},
        ],
        236: [
          function (t, b, y) {
            var u = (function (a) {
              var r, l, d, h, o, s, n, c, f, g, _;
              if (
                !(
                  a === void 0 ||
                  (typeof navigator < 'u' &&
                    /MSIE [1-9]\./.test(navigator.userAgent))
                )
              )
                return (
                  (_ = a.document),
                  (r = function () {
                    return a.URL || a.webkitURL || a;
                  }),
                  (l = _.createElementNS('http://www.w3.org/1999/xhtml', 'a')),
                  (d = 'download' in l),
                  (h = /constructor/i.test(a.HTMLElement) || a.safari),
                  (o = /CriOS\/[\d]+/.test(navigator.userAgent)),
                  (s = function (x) {
                    (a.setImmediate || a.setTimeout)(function () {
                      throw x;
                    }, 0);
                  }),
                  (n = 4e4),
                  (c = function (x) {
                    setTimeout(function () {
                      typeof x == 'string'
                        ? r().revokeObjectURL(x)
                        : x.remove();
                    }, n);
                  }),
                  (f = function (x) {
                    return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
                      x.type,
                    )
                      ? new Blob([String.fromCharCode(65279), x], {
                          type: x.type,
                        })
                      : x;
                  }),
                  (_ = (g = function (x, j, A) {
                    A || (x = f(x));
                    var M,
                      C,
                      k = this,
                      A = x.type === 'application/octet-stream',
                      R = function () {
                        for (
                          var O = k,
                            D = 'writestart progress write writeend'.split(' '),
                            N = void 0,
                            U = (D = [].concat(D)).length;
                          U--;

                        ) {
                          var H = O['on' + D[U]];
                          if (typeof H == 'function')
                            try {
                              H.call(O, N || O);
                            } catch (q) {
                              s(q);
                            }
                        }
                      };
                    (k.readyState = k.INIT),
                      d
                        ? ((M = r().createObjectURL(x)),
                          setTimeout(function () {
                            var O, D;
                            (l.href = M),
                              (l.download = j),
                              (O = l),
                              (D = new MouseEvent('click')),
                              O.dispatchEvent(D),
                              R(),
                              c(M),
                              (k.readyState = k.DONE);
                          }))
                        : (o || (A && h)) && a.FileReader
                        ? (((C = new FileReader()).onloadend = function () {
                            var O = o
                              ? C.result
                              : C.result.replace(
                                  /^data:[^;]*;/,
                                  'data:attachment/file;',
                                );
                            a.open(O, '_blank') || (a.location.href = O),
                              (O = void 0),
                              (k.readyState = k.DONE),
                              R();
                          }),
                          C.readAsDataURL(x),
                          (k.readyState = k.INIT))
                        : ((M = M || r().createObjectURL(x)),
                          (!A && a.open(M, '_blank')) || (a.location.href = M),
                          (k.readyState = k.DONE),
                          R(),
                          c(M));
                  }).prototype),
                  typeof navigator < 'u' && navigator.msSaveOrOpenBlob
                    ? function (x, j, v) {
                        return (
                          (j = j || x.name || 'download'),
                          v || (x = f(x)),
                          navigator.msSaveOrOpenBlob(x, j)
                        );
                      }
                    : ((_.abort = function () {}),
                      (_.readyState = _.INIT = 0),
                      (_.WRITING = 1),
                      (_.DONE = 2),
                      (_.error =
                        _.onwritestart =
                        _.onprogress =
                        _.onwrite =
                        _.onabort =
                        _.onerror =
                        _.onwriteend =
                          null),
                      function (x, j, v) {
                        return new g(x, j || x.name || 'download', v);
                      })
                );
            })(
              (typeof self < 'u' && self) ||
                (typeof window < 'u' && window) ||
                this.content,
            );
            b !== void 0 && b.exports ? (b.exports.saveAs = u) : m != null;
          },
          {},
        ],
        237: [
          function (t, b, y) {
            var u,
              a = Object.defineProperty,
              r = (a(y, '__esModule', { value: !0 }), y),
              l = {
                GIFEncoder: () => R,
                applyPalette: () =>
                  function (q, z, X = 'rgb565') {
                    if (!q || !q.buffer)
                      throw new Error(
                        'quantize() expected RGBA Uint8Array data',
                      );
                    if (
                      !(
                        q instanceof Uint8Array ||
                        q instanceof Uint8ClampedArray
                      )
                    )
                      throw new Error(
                        'quantize() expected RGBA Uint8Array data',
                      );
                    if (256 < z.length)
                      throw new Error(
                        'applyPalette() only works with 256 colors or less',
                      );
                    const W = new Uint32Array(q.buffer),
                      Z = W.length,
                      $ = X === 'rgb444' ? 4096 : 65536,
                      ae = new Uint8Array(Z),
                      P = new Array($);
                    if (X === 'rgba4444')
                      for (let be = 0; be < Z; be++) {
                        var ee = W[be],
                          L = (ee >> 24) & 255,
                          B = (ee >> 16) & 255,
                          Y = (ee >> 8) & 255,
                          ee = 255 & ee,
                          ne = c(ee, Y, B, L),
                          ne =
                            ne in P
                              ? P[ne]
                              : (P[ne] = (function (te, se, he, ve, me) {
                                  let Ce = 0,
                                    Se = 1e100;
                                  for (let ze = 0; ze < me.length; ze++) {
                                    var Pe,
                                      Me = me[ze],
                                      Be = C(Me[3] - ve);
                                    Be > Se ||
                                      ((Pe = Me[0]),
                                      (Be += C(Pe - te)) > Se ||
                                        ((Pe = Me[1]),
                                        (Be += C(Pe - se)) > Se ||
                                          ((Pe = Me[2]),
                                          (Be += C(Pe - he)) > Se ||
                                            ((Se = Be), (Ce = ze)))));
                                  }
                                  return Ce;
                                })(ee, Y, B, L, z));
                        ae[be] = ne;
                      }
                    else {
                      const be = X === 'rgb444' ? f : n;
                      for (let te = 0; te < Z; te++) {
                        var le = W[te],
                          ce = (le >> 16) & 255,
                          pe = (le >> 8) & 255,
                          le = 255 & le,
                          ue = be(le, pe, ce),
                          ue =
                            ue in P
                              ? P[ue]
                              : (P[ue] = (function (se, he, ve, me) {
                                  let Ce = 0,
                                    Se = 1e100;
                                  for (let ze = 0; ze < me.length; ze++) {
                                    var Pe,
                                      Me = me[ze],
                                      Be = C(Me[0] - se);
                                    Be > Se ||
                                      ((Pe = Me[1]),
                                      (Be += C(Pe - he)) > Se ||
                                        ((Pe = Me[2]),
                                        (Be += C(Pe - ve)) > Se ||
                                          ((Se = Be), (Ce = ze))));
                                  }
                                  return Ce;
                                })(le, pe, ce, z));
                        ae[te] = ue;
                      }
                    }
                    return ae;
                  },
                default: () => H,
                nearestColor: () =>
                  function (q, z, X = v) {
                    return q[k(q, z, X)];
                  },
                nearestColorIndex: () => k,
                nearestColorIndexWithDistance: () => A,
                prequantize: () =>
                  function (
                    q,
                    {
                      roundRGB: z = 5,
                      roundAlpha: X = 10,
                      oneBitAlpha: W = null,
                    } = {},
                  ) {
                    const Z = new Uint32Array(q.buffer);
                    for (let B = 0; B < Z.length; B++) {
                      var L = Z[B];
                      let Y = (L >> 24) & 255;
                      var $,
                        ae = (L >> 16) & 255,
                        P = (L >> 8) & 255,
                        L = 255 & L;
                      (Y = M(Y, X)),
                        W &&
                          (($ = typeof W == 'number' ? W : 127),
                          (Y = Y <= $ ? 0 : 255)),
                        (L = M(L, z)),
                        (P = M(P, z)),
                        (ae = M(ae, z)),
                        (Z[B] = (Y << 24) | (ae << 16) | (P << 8) | (L << 0));
                    }
                  },
                quantize: () =>
                  function (q, z, X = {}) {
                    var {
                      format: W = 'rgb565',
                      clearAlpha: Z = !0,
                      clearAlphaColor: $ = 0,
                      clearAlphaThreshold: ae = 0,
                      oneBitAlpha: P = !1,
                    } = X;
                    if (!q || !q.buffer)
                      throw new Error(
                        'quantize() expected RGBA Uint8Array data',
                      );
                    if (
                      !(
                        q instanceof Uint8Array ||
                        q instanceof Uint8ClampedArray
                      )
                    )
                      throw new Error(
                        'quantize() expected RGBA Uint8Array data',
                      );
                    q = new Uint32Array(q.buffer);
                    let L = X.useSqrt !== !1;
                    const B = W === 'rgba4444',
                      Y = (function (We, Qe) {
                        const Ze = Qe === 'rgb444' ? 4096 : 65536,
                          _e = new Array(Ze),
                          Ie = We.length;
                        if (Qe === 'rgba4444')
                          for (let st = 0; st < Ie; ++st) {
                            var G = We[st],
                              xe = (G >> 24) & 255,
                              Q = (G >> 16) & 255,
                              K = (G >> 8) & 255,
                              G = 255 & G,
                              re = c(G, K, Q, xe);
                            let Ke = re in _e ? _e[re] : (_e[re] = j());
                            (Ke.rc += G),
                              (Ke.gc += K),
                              (Ke.bc += Q),
                              (Ke.ac += xe),
                              Ke.cnt++;
                          }
                        else if (Qe === 'rgb444')
                          for (let st = 0; st < Ie; ++st) {
                            var Ae = We[st],
                              ge = (Ae >> 16) & 255,
                              je = (Ae >> 8) & 255,
                              Ae = 255 & Ae,
                              Fe = f(Ae, je, ge);
                            let Ke = Fe in _e ? _e[Fe] : (_e[Fe] = j());
                            (Ke.rc += Ae),
                              (Ke.gc += je),
                              (Ke.bc += ge),
                              Ke.cnt++;
                          }
                        else
                          for (let st = 0; st < Ie; ++st) {
                            var Xe = We[st],
                              Ve = (Xe >> 16) & 255,
                              Ge = (Xe >> 8) & 255,
                              Xe = 255 & Xe,
                              at = n(Xe, Ge, Ve);
                            let Ke = at in _e ? _e[at] : (_e[at] = j());
                            (Ke.rc += Xe),
                              (Ke.gc += Ge),
                              (Ke.bc += Ve),
                              Ke.cnt++;
                          }
                        return _e;
                      })(q, W),
                      ee = Y.length,
                      ne = ee - 1,
                      ce = new Uint32Array(ee + 1);
                    for (var pe = 0, le = 0; le < ee; ++le) {
                      const We = Y[le];
                      We != null &&
                        ((Me = 1 / We.cnt),
                        B && (We.ac *= Me),
                        (We.rc *= Me),
                        (We.gc *= Me),
                        (We.bc *= Me),
                        (Y[pe++] = We));
                    }
                    _(z) / pe < 0.022 && (L = !1);
                    for (var ue, be, te, le = 0; le < pe - 1; ++le)
                      (Y[le].fw = le + 1),
                        (Y[le + 1].bk = le),
                        L && (Y[le].cnt = Math.sqrt(Y[le].cnt));
                    for (
                      L && (Y[le].cnt = Math.sqrt(Y[le].cnt)), le = 0;
                      le < pe;
                      ++le
                    ) {
                      x(Y, le, !1);
                      var se = Y[le].err;
                      for (
                        be = ++ce[0];
                        1 < be &&
                        ((te = be >> 1), !(Y[(ue = ce[te])].err <= se));
                        be = te
                      )
                        ce[be] = ue;
                      ce[be] = le;
                    }
                    var he,
                      ve = pe - z;
                    for (le = 0; le < ve; ) {
                      for (;;) {
                        var me = ce[1];
                        if ((he = Y[me]).tm >= he.mtm && Y[he.nn].mtm <= he.tm)
                          break;
                        for (
                          he.mtm == ne
                            ? (me = ce[1] = ce[ce[0]--])
                            : (x(Y, me, !1), (he.tm = le)),
                            se = Y[me].err,
                            be = 1;
                          (te = be + be) <= ce[0] &&
                          (te < ce[0] &&
                            Y[ce[te]].err > Y[ce[te + 1]].err &&
                            te++,
                          !(se <= Y[(ue = ce[te])].err));
                          be = te
                        )
                          ce[be] = ue;
                        ce[be] = me;
                      }
                      var Ce = Y[he.nn],
                        Se = he.cnt,
                        Pe = Ce.cnt,
                        Me = 1 / (Se + Pe);
                      B && (he.ac = Me * (Se * he.ac + Pe * Ce.ac)),
                        (he.rc = Me * (Se * he.rc + Pe * Ce.rc)),
                        (he.gc = Me * (Se * he.gc + Pe * Ce.gc)),
                        (he.bc = Me * (Se * he.bc + Pe * Ce.bc)),
                        (he.cnt += Ce.cnt),
                        (he.mtm = ++le),
                        (Y[Ce.bk].fw = Ce.fw),
                        (Y[Ce.fw].bk = Ce.bk),
                        (Ce.mtm = ne);
                    }
                    let Be = [];
                    for (le = 0; ; 0) {
                      let We = g(Math.round(Y[le].rc), 0, 255),
                        Qe = g(Math.round(Y[le].gc), 0, 255),
                        Ze = g(Math.round(Y[le].bc), 0, 255),
                        _e = 255;
                      B &&
                        ((_e = g(Math.round(Y[le].ac), 0, 255)),
                        P &&
                          ((ze = typeof P == 'number' ? P : 127),
                          (_e = _e <= ze ? 0 : 255)),
                        Z && _e <= ae && ((We = Qe = Ze = $), (_e = 0)));
                      var ze = B ? [We, Qe, Ze, _e] : [We, Qe, Ze];
                      if (
                        ((function (Ie, xe) {
                          for (let G = 0; G < Ie.length; G++) {
                            var K = Ie[G],
                              Q =
                                K[0] === xe[0] &&
                                K[1] === xe[1] &&
                                K[2] === xe[2],
                              K =
                                !(4 <= K.length && 4 <= xe.length) ||
                                K[3] === xe[3];
                            if (Q && K) return !0;
                          }
                          return !1;
                        })(Be, ze) || Be.push(ze),
                        (le = Y[le].fw) == 0)
                      )
                        break;
                    }
                    return Be;
                  },
                snapColorsToPalette: () =>
                  function (q, z, X = 5) {
                    if (q.length && z.length) {
                      var W = q.map((L) => L.slice(0, 3)),
                        Z = X * X,
                        $ = q[0].length;
                      for (let L = 0; L < z.length; L++) {
                        let B = z[L];
                        B =
                          B.length < $
                            ? [B[0], B[1], B[2], 255]
                            : B.length > $
                            ? B.slice(0, 3)
                            : B.slice();
                        var P = A(W, B.slice(0, 3), v),
                          ae = P[0],
                          P = P[1];
                        0 < P && P <= Z && (q[ae] = B);
                      }
                    }
                  },
              };
            for (u in l) a(r, u, { get: l[u], enumerable: !0 });
            var d = {
              signature: 'GIF',
              version: '89a',
              trailer: 59,
              extensionIntroducer: 33,
              applicationExtensionLabel: 255,
              graphicControlExtensionLabel: 249,
              imageSeparator: 44,
              signatureSize: 3,
              versionSize: 3,
              globalColorTableFlagMask: 128,
              colorResolutionMask: 112,
              sortFlagMask: 8,
              globalColorTableSizeMask: 7,
              applicationIdentifierSize: 8,
              applicationAuthCodeSize: 3,
              disposalMethodMask: 28,
              userInputFlagMask: 2,
              transparentColorFlagMask: 1,
              localColorTableFlagMask: 128,
              interlaceFlagMask: 64,
              idSortFlagMask: 32,
              localColorTableSizeMask: 7,
            };
            function h(q = 256) {
              let z = 0,
                X = new Uint8Array(q);
              return {
                get buffer() {
                  return X.buffer;
                },
                reset() {
                  z = 0;
                },
                bytesView() {
                  return X.subarray(0, z);
                },
                bytes() {
                  return X.slice(0, z);
                },
                writeByte(Z) {
                  W(z + 1), (X[z] = Z), z++;
                },
                writeBytes(Z, $ = 0, ae = Z.length) {
                  W(z + ae);
                  for (let P = 0; P < ae; P++) X[z++] = Z[P + $];
                },
                writeBytesView(Z, $ = 0, ae = Z.byteLength) {
                  W(z + ae), X.set(Z.subarray($, $ + ae), z), (z += ae);
                },
              };
              function W(Z) {
                var $ = X.length;
                if (!(Z <= $)) {
                  (Z = Math.max(Z, ($ * ($ < 1048576 ? 2 : 1.125)) >>> 0)),
                    $ != 0 && (Z = Math.max(Z, 256));
                  const ae = X;
                  (X = new Uint8Array(Z)), 0 < z && X.set(ae.subarray(0, z), 0);
                }
              }
            }
            var o = [
                0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191,
                16383, 32767, 65535,
              ],
              s = function (
                q,
                z,
                X,
                B,
                Z = h(512),
                $ = new Uint8Array(256),
                ae = new Int32Array(5003),
                P = new Int32Array(5003),
              ) {
                var L = ae.length,
                  B = Math.max(2, B);
                $.fill(0), P.fill(0), ae.fill(-1);
                let Y = 0,
                  ee = 0;
                var ne = B + 1;
                const ce = ne;
                let pe = !1,
                  le = ce,
                  ue = (1 << le) - 1;
                var be = 1 << (ne - 1);
                const te = 1 + be;
                let se = 2 + be,
                  he = 0,
                  ve = X[0],
                  me = 0;
                for (let ze = L; ze < 65536; ze *= 2) ++me;
                (me = 8 - me), Z.writeByte(B), Be(be);
                var Ce = X.length;
                for (let ze = 1; ze < Ce; ze++)
                  e: {
                    var Se = X[ze],
                      Pe = (Se << 12) + ve;
                    let We = (Se << me) ^ ve;
                    if (ae[We] === Pe) ve = P[We];
                    else {
                      for (var Me = We === 0 ? 1 : L - We; 0 <= ae[We]; )
                        if (((We -= Me) < 0 && (We += L), ae[We] === Pe)) {
                          ve = P[We];
                          break e;
                        }
                      Be(ve),
                        (ve = Se),
                        se < 4096
                          ? ((P[We] = se++), (ae[We] = Pe))
                          : (ae.fill(-1), (se = 2 + be), (pe = !0), Be(be));
                    }
                  }
                return Be(ve), Be(te), Z.writeByte(0), Z.bytesView();
                function Be(ze) {
                  for (
                    Y &= o[ee], 0 < ee ? (Y |= ze << ee) : (Y = ze), ee += le;
                    8 <= ee;

                  )
                    ($[he++] = 255 & Y),
                      254 <= he &&
                        (Z.writeByte(he), Z.writeBytesView($, 0, he), (he = 0)),
                      (Y >>= 8),
                      (ee -= 8);
                  if (
                    ((se > ue || pe) &&
                      (pe
                        ? ((le = ce), (ue = (1 << le) - 1), (pe = !1))
                        : (++le, (ue = le === 12 ? 1 << le : (1 << le) - 1))),
                    ze == te)
                  ) {
                    for (; 0 < ee; )
                      ($[he++] = 255 & Y),
                        254 <= he &&
                          (Z.writeByte(he),
                          Z.writeBytesView($, 0, he),
                          (he = 0)),
                        (Y >>= 8),
                        (ee -= 8);
                    0 < he &&
                      (Z.writeByte(he), Z.writeBytesView($, 0, he), (he = 0));
                  }
                }
              };
            function n(q, z, X) {
              return ((q << 8) & 63488) | ((z << 2) & 992) | (X >> 3);
            }
            function c(q, z, X, W) {
              return (q >> 4) | (240 & z) | ((240 & X) << 4) | ((240 & W) << 8);
            }
            function f(q, z, X) {
              return ((q >> 4) << 8) | (240 & z) | (X >> 4);
            }
            function g(q, z, X) {
              return q < z ? z : X < q ? X : q;
            }
            function _(q) {
              return q * q;
            }
            function x(q, z, X) {
              var W = 0,
                Z = 1e100;
              const $ = q[z];
              for (
                var ae = $.cnt,
                  P = $.ac,
                  L = $.rc,
                  B = $.gc,
                  Y = $.bc,
                  ee = $.fw;
                ee != 0;
                ee = q[ee].fw
              ) {
                var ne,
                  ce = q[ee],
                  pe = ce.cnt,
                  pe = (ae * pe) / (ae + pe);
                Z <= pe ||
                  ((ne = 0),
                  (X && Z <= (ne += pe * _(ce.ac - P))) ||
                    Z <= (ne += pe * _(ce.rc - L)) ||
                    Z <= (ne += pe * _(ce.gc - B)) ||
                    Z <= (ne += pe * _(ce.bc - Y)) ||
                    ((Z = ne), (W = ee)));
              }
              ($.err = Z), ($.nn = W);
            }
            function j() {
              return {
                ac: 0,
                rc: 0,
                gc: 0,
                bc: 0,
                cnt: 0,
                nn: 0,
                fw: 0,
                bk: 0,
                tm: 0,
                mtm: 0,
                err: 0,
              };
            }
            function v(q, z) {
              for (var X = 0, W = 0; W < q.length; W++) {
                var Z = q[W] - z[W];
                X += Z * Z;
              }
              return X;
            }
            function M(q, z) {
              return 1 < z ? Math.round(q / z) * z : q;
            }
            function C(q) {
              return q * q;
            }
            function k(q, z, X = v) {
              let W = 1 / 0,
                Z = -1;
              for (let ae = 0; ae < q.length; ae++) {
                var $ = X(z, q[ae]);
                $ < W && ((W = $), (Z = ae));
              }
              return Z;
            }
            function A(q, z, X = v) {
              let W = 1 / 0,
                Z = -1;
              for (let ae = 0; ae < q.length; ae++) {
                var $ = X(z, q[ae]);
                $ < W && ((W = $), (Z = ae));
              }
              return [Z, W];
            }
            function R(q = {}) {
              const { initialCapacity: z = 4096, auto: X = !0 } = q,
                W = h(z),
                Z = new Uint8Array(256),
                $ = new Int32Array(5003),
                ae = new Int32Array(5003);
              let P = !1;
              return {
                reset() {
                  W.reset(), (P = !1);
                },
                finish() {
                  W.writeByte(d.trailer);
                },
                bytes() {
                  return W.bytes();
                },
                bytesView() {
                  return W.bytesView();
                },
                get buffer() {
                  return W.buffer;
                },
                get stream() {
                  return W;
                },
                writeHeader: L,
                writeFrame(B, Y, ee, ve = {}) {
                  var {
                    transparent: ce = !1,
                    transparentIndex: pe = 0,
                    delay: Me = 0,
                    palette: le = null,
                    repeat: Ce = 0,
                    colorDepth: ue = 8,
                    dispose: be = -1,
                  } = ve;
                  let te = !1;
                  if (
                    (X
                      ? P || ((te = !0), L(), (P = !0))
                      : (te = Boolean(ve.first)),
                    (Y = Math.max(0, Math.floor(Y))),
                    (ee = Math.max(0, Math.floor(ee))),
                    te)
                  ) {
                    if (!le)
                      throw new Error(
                        'First frame must include a { palette } option',
                      );
                    var [ve, Se, he, Pe, me = 8] = [W, Y, ee, le, ue];
                    (Pe = U(Pe.length) - 1),
                      (me = 128 | ((me - 1) << 4) | Pe),
                      D(ve, Se),
                      D(ve, he),
                      ve.writeBytes([me, 0, 0]),
                      O(W, le),
                      0 <= Ce &&
                        ((Pe = W),
                        (Se = Ce),
                        Pe.writeByte(33),
                        Pe.writeByte(255),
                        Pe.writeByte(11),
                        N(Pe, 'NETSCAPE2.0'),
                        Pe.writeByte(3),
                        Pe.writeByte(1),
                        D(Pe, Se),
                        Pe.writeByte(0));
                  }
                  var se,
                    he = Math.round(Me / 10),
                    ve = W,
                    me = be,
                    Ce = he,
                    Se = ce,
                    Pe = pe,
                    Me =
                      (ve.writeByte(33),
                      ve.writeByte(249),
                      ve.writeByte(4),
                      Pe < 0 && ((Pe = 0), (Se = !1)),
                      (Se = Se ? ((se = 1), 2) : (se = 0)),
                      0 <= me && (Se = 7 & me),
                      (Se <<= 2),
                      ve.writeByte(0 | Se | se),
                      D(ve, Ce),
                      ve.writeByte(Pe || 0),
                      ve.writeByte(0),
                      Boolean(le) && !te);
                  (be = W),
                    (ce = Y),
                    (pe = ee),
                    (se = Me ? le : null),
                    be.writeByte(44),
                    D(be, 0),
                    D(be, 0),
                    D(be, ce),
                    D(be, pe),
                    se
                      ? ((ce = U(se.length) - 1), be.writeByte(128 | ce))
                      : be.writeByte(0),
                    Me && O(W, le),
                    ([Ce, ve, pe, ce, be = 8, Me, le, B] = [
                      W,
                      B,
                      Y,
                      ee,
                      ue,
                      Z,
                      $,
                      ae,
                    ]),
                    s(pe, ce, ve, be, Ce, Me, le, B);
                },
              };
              function L() {
                N(W, 'GIF89a');
              }
            }
            function O(q, z) {
              var X = 1 << U(z.length);
              for (let W = 0; W < X; W++) {
                let Z = [0, 0, 0];
                W < z.length && (Z = z[W]),
                  q.writeByte(Z[0]),
                  q.writeByte(Z[1]),
                  q.writeByte(Z[2]);
              }
            }
            function D(q, z) {
              q.writeByte(255 & z), q.writeByte((z >> 8) & 255);
            }
            function N(q, z) {
              for (var X = 0; X < z.length; X++) q.writeByte(z.charCodeAt(X));
            }
            function U(q) {
              return Math.max(Math.ceil(Math.log2(q)), 1);
            }
            var H = R;
          },
          {},
        ],
        238: [
          function (t, b, y) {
            (y.read = function (u, a, r, l, x) {
              var h,
                o,
                s = 8 * x - l - 1,
                n = (1 << s) - 1,
                c = n >> 1,
                f = -7,
                g = r ? x - 1 : 0,
                _ = r ? -1 : 1,
                x = u[a + g];
              for (
                g += _, h = x & ((1 << -f) - 1), x >>= -f, f += s;
                0 < f;
                h = 256 * h + u[a + g], g += _, f -= 8
              );
              for (
                o = h & ((1 << -f) - 1), h >>= -f, f += l;
                0 < f;
                o = 256 * o + u[a + g], g += _, f -= 8
              );
              if (h === 0) h = 1 - c;
              else {
                if (h === n) return o ? NaN : (1 / 0) * (x ? -1 : 1);
                (o += Math.pow(2, l)), (h -= c);
              }
              return (x ? -1 : 1) * o * Math.pow(2, h - l);
            }),
              (y.write = function (u, a, r, l, d, j) {
                var o,
                  s,
                  n = 8 * j - d - 1,
                  c = (1 << n) - 1,
                  f = c >> 1,
                  g = d === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                  _ = l ? 0 : j - 1,
                  x = l ? 1 : -1,
                  j = a < 0 || (a === 0 && 1 / a < 0) ? 1 : 0;
                for (
                  a = Math.abs(a),
                    isNaN(a) || a === 1 / 0
                      ? ((s = isNaN(a) ? 1 : 0), (o = c))
                      : ((o = Math.floor(Math.log(a) / Math.LN2)),
                        a * (l = Math.pow(2, -o)) < 1 && (o--, (l *= 2)),
                        2 <=
                          (a += 1 <= o + f ? g / l : g * Math.pow(2, 1 - f)) *
                            l && (o++, (l /= 2)),
                        c <= o + f
                          ? ((s = 0), (o = c))
                          : 1 <= o + f
                          ? ((s = (a * l - 1) * Math.pow(2, d)), (o += f))
                          : ((s = a * Math.pow(2, f - 1) * Math.pow(2, d)),
                            (o = 0)));
                  8 <= d;
                  u[r + _] = 255 & s, _ += x, s /= 256, d -= 8
                );
                for (
                  o = (o << d) | s, n += d;
                  0 < n;
                  u[r + _] = 255 & o, _ += x, o /= 256, n -= 8
                );
                u[r + _ - x] |= 128 * j;
              });
          },
          {},
        ],
        239: [
          function (t, b, y) {
            var u;
            function a(Q, K) {
              return Q.b === K.b && Q.a === K.a;
            }
            function r(Q, K) {
              return Q.b < K.b || (Q.b === K.b && Q.a <= K.a);
            }
            function l(Q, K, G) {
              var re = K.b - Q.b,
                ge = G.b - K.b;
              return 0 < re + ge
                ? re < ge
                  ? K.a - Q.a + (re / (re + ge)) * (Q.a - G.a)
                  : K.a - G.a + (ge / (re + ge)) * (G.a - Q.a)
                : 0;
            }
            function d(Q, K, G) {
              var re = K.b - Q.b,
                ge = G.b - K.b;
              return 0 < re + ge ? (K.a - G.a) * re + (K.a - Q.a) * ge : 0;
            }
            function h(Q, K) {
              return Q.a < K.a || (Q.a === K.a && Q.b <= K.b);
            }
            function o(Q, K, G) {
              var re = K.a - Q.a,
                ge = G.a - K.a;
              return 0 < re + ge
                ? re < ge
                  ? K.b - Q.b + (re / (re + ge)) * (Q.b - G.b)
                  : K.b - G.b + (ge / (re + ge)) * (G.b - Q.b)
                : 0;
            }
            function s(Q, K, G) {
              var re = K.a - Q.a,
                ge = G.a - K.a;
              return 0 < re + ge ? (K.b - G.b) * re + (K.b - Q.b) * ge : 0;
            }
            function n(Q, K, G, re) {
              return (Q = Q < 0 ? 0 : Q) <= (G = G < 0 ? 0 : G)
                ? G === 0
                  ? (K + re) / 2
                  : K + (Q / (Q + G)) * (re - K)
                : re + (G / (Q + G)) * (K - re);
            }
            function c(Q) {
              var K = j(Q.b);
              return M(K, Q.c), M(K.b, Q.c), C(K, Q.a), K;
            }
            function f(Q, K) {
              var G = !1,
                re = !1;
              Q !== K &&
                (K.a !== Q.a && ((re = !0), A(K.a, Q.a)),
                K.d !== Q.d && ((G = !0), R(K.d, Q.d)),
                v(K, Q),
                re || (M(K, Q.a), (Q.a.c = Q)),
                G || (C(K, Q.d), (Q.d.a = Q)));
            }
            function g(Q) {
              var K = Q.b,
                G = !1;
              Q.d !== Q.b.d && ((G = !0), R(Q.d, Q.b.d)),
                Q.c === Q
                  ? A(Q.a, null)
                  : ((Q.b.d.a = Q.b.e),
                    (Q.a.c = Q.c),
                    v(Q, Q.b.e),
                    G || C(Q, Q.d)),
                K.c === K
                  ? (A(K.a, null), R(K.d, null))
                  : ((Q.d.a = K.b.e), (K.a.c = K.c), v(K, K.b.e)),
                k(Q);
            }
            function _(Q) {
              var K = j(Q),
                G = K.b;
              return (
                v(K, Q.e),
                (K.a = Q.b.a),
                M(G, K.a),
                (K.d = G.d = Q.d),
                (K = K.b),
                v(Q.b, Q.b.b.e),
                v(Q.b, K),
                (Q.b.a = K.a),
                (K.b.a.c = K.b),
                (K.b.d = Q.b.d),
                (K.f = Q.f),
                (K.b.f = Q.b.f),
                K
              );
            }
            function x(Q, K) {
              var G = !1,
                re = j(Q),
                ge = re.b;
              return (
                K.d !== Q.d && ((G = !0), R(K.d, Q.d)),
                v(re, Q.e),
                v(ge, K),
                (re.a = Q.b.a),
                (ge.a = K.a),
                (re.d = ge.d = Q.d),
                (Q.d.a = ge),
                G || C(re, Q.d),
                re
              );
            }
            function j(Q) {
              var K = new he(),
                G = new he(),
                re = Q.b.h;
              return (
                ((((G.h = re).b.h = K).h = Q).b.h = G),
                (K.b = G),
                (((K.c = K).e = G).b = K),
                ((G.c = G).e = K)
              );
            }
            function v(Q, K) {
              var G = Q.c,
                re = K.c;
              (G.b.e = K), ((re.b.e = Q).c = re), (K.c = G);
            }
            function M(Q, K) {
              var G = K.f,
                re = new me(K, G);
              for (
                G.e = re, G = (K.f = re).c = Q;
                (G.a = re), (G = G.c) !== Q;

              );
            }
            function C(Q, K) {
              var G = K.d,
                re = new se(K, G);
              for (
                G.b = re, (K.d = re).a = Q, re.c = K.c, G = Q;
                (G.d = re), (G = G.e) !== Q;

              );
            }
            function k(Q) {
              var K = Q.h;
              (Q = Q.b.h), ((K.b.h = Q).b.h = K);
            }
            function A(Q, K) {
              for (var G = Q.c, re = G; (re.a = K), (re = re.c) !== G; );
              (G = Q.f), (((re = Q.e).f = G).e = re);
            }
            function R(Q, K) {
              for (var G = Q.a, re = G; (re.d = K), (re = re.e) !== G; );
              (G = Q.d), (((re = Q.b).d = G).b = re);
            }
            function O(Q) {
              var K = 0;
              return (
                Math.abs(Q[1]) > Math.abs(Q[0]) && (K = 1),
                (K = Math.abs(Q[2]) > Math.abs(Q[K]) ? 2 : K)
              );
            }
            function D(Q, K) {
              (Q.f += K.f), (Q.b.f += K.b.f);
            }
            function N(Q, K, G) {
              return (
                (Q = Q.a),
                (K = K.a),
                (G = G.a),
                K.b.a === Q
                  ? G.b.a === Q
                    ? r(K.a, G.a)
                      ? d(G.b.a, K.a, G.a) <= 0
                      : 0 <= d(K.b.a, G.a, K.a)
                    : d(G.b.a, Q, G.a) <= 0
                  : G.b.a === Q
                  ? 0 <= d(K.b.a, Q, K.a)
                  : ((K = l(K.b.a, Q, K.a)), (Q = l(G.b.a, Q, G.a)) <= K)
              );
            }
            function U(Q) {
              Q.a.i = null;
              var K = Q.e;
              (K.a.c = K.c), (K.c.a = K.a), (Q.e = null);
            }
            function H(Q, K) {
              g(Q.a), (Q.c = !1), ((Q.a = K).i = Q);
            }
            function q(Q) {
              for (var K = Q.a.a; (Q = xe(Q)).a.a === K; );
              return Q.c && (H(Q, (K = x(Ie(Q).a.b, Q.a.e))), (Q = xe(Q))), Q;
            }
            function z(Q, K, G) {
              var re = new _e();
              return (re.a = G), (re.e = pe(Q.f, K.e, re)), (G.i = re);
            }
            function X(Q, K) {
              switch (Q.s) {
                case 100130:
                  return (1 & K) != 0;
                case 100131:
                  return K !== 0;
                case 100132:
                  return 0 < K;
                case 100133:
                  return K < 0;
                case 100134:
                  return 2 <= K || K <= -2;
              }
              return !1;
            }
            function W(Q) {
              var K = Q.a,
                G = K.d;
              (G.c = Q.d), (G.a = K), U(Q);
            }
            function Z(Q, K, G) {
              for (K = (Q = K).a; Q !== G; ) {
                Q.c = !1;
                var re = Ie(Q),
                  ge = re.a;
                if (ge.a !== K.a) {
                  if (!re.c) {
                    W(Q);
                    break;
                  }
                  H(re, (ge = x(K.c.b, ge.b)));
                }
                K.c !== ge && (f(ge.b.e, ge), f(K, ge)),
                  W(Q),
                  (K = re.a),
                  (Q = re);
              }
              return K;
            }
            function $(Q, K, G, re, ge, je) {
              for (var Ae = !0; z(Q, K, G.b), (G = G.c) !== re; );
              for (
                ge === null && (ge = Ie(K).a.b.c);
                (G = (re = Ie(K)).a.b).a === ge.a;

              )
                G.c !== ge && (f(G.b.e, G), f(ge.b.e, G)),
                  (re.f = K.f - G.f),
                  (re.d = X(Q, re.f)),
                  (K.b = !0),
                  !Ae && B(Q, K) && (D(G, ge), U(K), g(ge)),
                  (Ae = !1),
                  (K = re),
                  (ge = G);
              (K.b = !0), je && ee(Q, K);
            }
            function ae(Q, K, G, re, ge) {
              var je = [K.g[0], K.g[1], K.g[2]];
              (K.d = null),
                (K.d = (Q.o && Q.o(je, G, re, Q.c)) || null),
                K.d === null &&
                  (ge ? Q.n || (te(Q, 100156), (Q.n = !0)) : (K.d = G[0]));
            }
            function P(Q, K, G) {
              var re = [null, null, null, null];
              (re[0] = K.a.d),
                (re[1] = G.a.d),
                ae(Q, K.a, re, [0.5, 0.5, 0, 0], !1),
                f(K, G);
            }
            function L(Q, K, G, re, ge) {
              var je = Math.abs(K.b - Q.b) + Math.abs(K.a - Q.a),
                Ae = Math.abs(G.b - Q.b) + Math.abs(G.a - Q.a),
                Fe = ge + 1;
              (re[ge] = (0.5 * Ae) / (je + Ae)),
                (re[Fe] = (0.5 * je) / (je + Ae)),
                (Q.g[0] += re[ge] * K.g[0] + re[Fe] * G.g[0]),
                (Q.g[1] += re[ge] * K.g[1] + re[Fe] * G.g[1]),
                (Q.g[2] += re[ge] * K.g[2] + re[Fe] * G.g[2]);
            }
            function B(Q, K) {
              var G = Ie(K),
                re = K.a,
                ge = G.a;
              if (r(re.a, ge.a)) {
                if (0 < d(ge.b.a, re.a, ge.a)) return;
                if (a(re.a, ge.a)) {
                  if (re.a !== ge.a) {
                    var G = Q.e,
                      je = re.a.h;
                    if (0 <= je) {
                      var Ae = (G = G.b).d,
                        Fe = G.e,
                        Ve = G.c,
                        Ge = Ve[je];
                      (Ae[Ge] = Ae[G.a]),
                        (Ve[Ae[Ge]] = Ge) <= --G.a &&
                          (Ge <= 1 || r(Fe[Ae[Ge >> 1]], Fe[Ae[Ge]]) ? Qe : Ze)(
                            G,
                            Ge,
                          ),
                        (Fe[je] = null),
                        (Ve[je] = G.b),
                        (G.b = je);
                    } else
                      for (
                        G.c[-(je + 1)] = null;
                        0 < G.a && G.c[G.d[G.a - 1]] === null;

                      )
                        --G.a;
                    P(Q, ge.b.e, re);
                  }
                } else _(ge.b), f(re, ge.b.e), (K.b = G.b = !0);
              } else {
                if (d(re.b.a, ge.a, re.a) < 0) return;
                (xe(K).b = K.b = !0), _(re.b), f(ge.b.e, re);
              }
              return 1;
            }
            function Y(Q, K) {
              var G = Ie(K),
                re = K.a,
                ge = G.a,
                je = re.a,
                Ae = ge.a,
                Fe = re.b.a,
                Ve = ge.b.a,
                Ge = new me();
              if (
                (d(Fe, Q.a, je),
                d(Ve, Q.a, Ae),
                !(je === Ae || Math.min(je.a, Fe.a) > Math.max(Ae.a, Ve.a)))
              ) {
                if (r(je, Ae)) {
                  if (0 < d(Ve, je, Ae)) return;
                } else if (d(Fe, Ae, je) < 0) return;
                var Xe,
                  at,
                  st = Fe,
                  Ke = je,
                  ot = Ve,
                  nt = Ae;
                if (
                  (r(st, Ke) || ((Xe = st), (st = Ke), (Ke = Xe)),
                  r(ot, nt) || ((Xe = ot), (ot = nt), (nt = Xe)),
                  r(st, ot) ||
                    ((Xe = st),
                    (st = ot),
                    (ot = Xe),
                    (Xe = Ke),
                    (Ke = nt),
                    (nt = Xe)),
                  r(ot, Ke)
                    ? r(Ke, nt)
                      ? ((Xe = l(st, ot, Ke)) + (at = l(ot, Ke, nt)) < 0 &&
                          ((Xe = -Xe), (at = -at)),
                        (Ge.b = n(Xe, ot.b, at, Ke.b)))
                      : ((Xe = d(st, ot, Ke)) + (at = -d(st, nt, Ke)) < 0 &&
                          ((Xe = -Xe), (at = -at)),
                        (Ge.b = n(Xe, ot.b, at, nt.b)))
                    : (Ge.b = (ot.b + Ke.b) / 2),
                  h(st, Ke) || ((Xe = st), (st = Ke), (Ke = Xe)),
                  h(ot, nt) || ((Xe = ot), (ot = nt), (nt = Xe)),
                  h(st, ot) ||
                    ((Xe = st),
                    (st = ot),
                    (ot = Xe),
                    (Xe = Ke),
                    (Ke = nt),
                    (nt = Xe)),
                  h(ot, Ke)
                    ? h(Ke, nt)
                      ? ((Xe = o(st, ot, Ke)) + (at = o(ot, Ke, nt)) < 0 &&
                          ((Xe = -Xe), (at = -at)),
                        (Ge.a = n(Xe, ot.a, at, Ke.a)))
                      : ((Xe = s(st, ot, Ke)) + (at = -s(st, nt, Ke)) < 0 &&
                          ((Xe = -Xe), (at = -at)),
                        (Ge.a = n(Xe, ot.a, at, nt.a)))
                    : (Ge.a = (ot.a + Ke.a) / 2),
                  r(Ge, Q.a) && ((Ge.b = Q.a.b), (Ge.a = Q.a.a)),
                  (st = r(je, Ae) ? je : Ae),
                  r(st, Ge) && ((Ge.b = st.b), (Ge.a = st.a)),
                  a(Ge, je) || a(Ge, Ae))
                )
                  return B(Q, K), 0;
                if (
                  (!a(Fe, Q.a) && 0 <= d(Fe, Q.a, Ge)) ||
                  (!a(Ve, Q.a) && d(Ve, Q.a, Ge) <= 0)
                ) {
                  if (Ve === Q.a)
                    _(re.b),
                      f(ge.b, re),
                      (re = Ie((K = q(K))).a),
                      Z(Q, Ie(K), G),
                      $(Q, K, re.b.e, re, re, !0);
                  else {
                    if (Fe !== Q.a)
                      return (
                        0 <= d(Fe, Q.a, Ge) &&
                          ((xe(K).b = K.b = !0),
                          _(re.b),
                          (re.a.b = Q.a.b),
                          (re.a.a = Q.a.a)),
                        void (
                          d(Ve, Q.a, Ge) <= 0 &&
                          ((K.b = G.b = !0),
                          _(ge.b),
                          (ge.a.b = Q.a.b),
                          (ge.a.a = Q.a.a))
                        )
                      );
                    for (
                      _(ge.b), f(re.e, ge.b.e), Ae = (je = G = K).a.b.a;
                      (je = xe(je)).a.b.a === Ae;

                    );
                    (je = Ie((K = je)).a.b.c),
                      (G.a = ge.b.e),
                      $(Q, K, (ge = Z(Q, G, null)).c, re.b.c, je, !0);
                  }
                  return 1;
                }
                _(re.b),
                  _(ge.b),
                  f(ge.b.e, re),
                  (re.a.b = Ge.b),
                  (re.a.a = Ge.a),
                  (re.a.h = Se(Q.e, re.a)),
                  (re = re.a),
                  (ge = [0, 0, 0, 0]),
                  (Ge = [je.d, Fe.d, Ae.d, Ve.d]),
                  (re.g[0] = re.g[1] = re.g[2] = 0),
                  L(re, je, Fe, ge, 0),
                  L(re, Ae, Ve, ge, 2),
                  ae(Q, re, Ge, ge, !0),
                  (xe(K).b = K.b = G.b = !0);
              }
            }
            function ee(Q, K) {
              for (var G = Ie(K); ; ) {
                for (; G.b; ) G = Ie((K = G));
                if (!K.b && ((K = xe((G = K))) === null || !K.b)) break;
                K.b = !1;
                var re = K.a,
                  ge = G.a;
                if ((je = re.b.a !== ge.b.a))
                  e: {
                    var je,
                      Ae = Ie((je = K)),
                      Fe = je.a,
                      Ve = Ae.a,
                      Ge = void 0;
                    if (r(Fe.b.a, Ve.b.a)) {
                      if (d(Fe.b.a, Ve.b.a, Fe.a) < 0) {
                        je = !1;
                        break e;
                      }
                      (xe(je).b = je.b = !0),
                        (Ge = _(Fe)),
                        f(Ve.b, Ge),
                        (Ge.d.c = je.d);
                    } else {
                      if (0 < d(Ve.b.a, Fe.b.a, Ve.a)) {
                        je = !1;
                        break e;
                      }
                      (je.b = Ae.b = !0),
                        (Ge = _(Ve)),
                        f(Fe.e, Ve.b),
                        (Ge.b.d.c = je.d);
                    }
                    je = !0;
                  }
                if (
                  (je &&
                    (G.c
                      ? (U(G), g(ge), (ge = (G = Ie(K)).a))
                      : K.c && (U(K), g(re), (re = (K = xe(G)).a))),
                  re.a !== ge.a)
                ) {
                  if (
                    re.b.a === ge.b.a ||
                    K.c ||
                    G.c ||
                    (re.b.a !== Q.a && ge.b.a !== Q.a)
                  )
                    B(Q, K);
                  else if (Y(Q, K)) break;
                }
                re.a === ge.a &&
                  re.b.a === ge.b.a &&
                  (D(ge, re), U(K), g(re), (K = xe(G)));
              }
            }
            function ne(Q, K) {
              var G = new _e(),
                re = c(Q.b);
              (re.a.b = 4e150),
                (re.a.a = K),
                (re.b.a.b = -4e150),
                (re.b.a.a = K),
                (Q.a = re.b.a),
                (G.a = re),
                (G.f = 0),
                (G.d = !1),
                (G.c = !1),
                (G.h = !0),
                (G.b = !1),
                (re = pe((re = Q.f), re.a, G)),
                (G.e = re);
            }
            function ce(Q) {
              (this.a = new le()), (this.b = Q), (this.c = N);
            }
            function pe(Q, K, G) {
              for (; (K = K.c).b !== null && !Q.c(Q.b, K.b, G); );
              return (Q = new le(G, K.a, K)), (K.a.c = Q), (K.a = Q);
            }
            function le(Q, K, G) {
              (this.b = Q || null), (this.a = K || this), (this.c = G || this);
            }
            function ue() {
              (this.d = 0),
                (this.p = this.b = this.q = null),
                (this.j = [0, 0, 0]),
                (this.s = 100130),
                (this.n = !1),
                (this.o = this.a = this.e = this.f = null),
                (this.m = !1),
                (this.c = this.r = this.i = this.k = this.l = this.h = null);
            }
            function be(Q, K) {
              if (Q.d !== K)
                for (; Q.d !== K; )
                  if (Q.d < K)
                    switch (Q.d) {
                      case 0:
                        te(Q, 100151), Q.u(null);
                        break;
                      case 1:
                        te(Q, 100152), Q.t();
                    }
                  else
                    switch (Q.d) {
                      case 2:
                        te(Q, 100154), Q.v();
                        break;
                      case 1:
                        te(Q, 100153), Q.w();
                    }
            }
            function te(Q, K) {
              Q.p && Q.p(K, Q.c);
            }
            function se(Q, K) {
              (this.b = Q || this),
                (this.d = K || this),
                (this.a = null),
                (this.c = !1);
            }
            function he() {
              ((this.h = this).i =
                this.d =
                this.a =
                this.e =
                this.c =
                this.b =
                  null),
                (this.f = 0);
            }
            function ve() {
              (this.c = new me()),
                (this.a = new se()),
                (this.b = new he()),
                (this.d = new he()),
                (this.b.b = this.d),
                (this.d.b = this.b);
            }
            function me(Q, K) {
              (this.e = Q || this),
                (this.f = K || this),
                (this.d = this.c = null),
                (this.g = [0, 0, 0]),
                (this.h = this.a = this.b = 0);
            }
            function Ce() {
              (this.c = []),
                (this.d = null),
                (this.a = 0),
                (this.e = !1),
                (this.b = new Me());
            }
            function Se(Q, K) {
              var G, re, ge;
              return Q.e
                ? (2 * (re = ++(G = Q.b).a) > G.f &&
                    ((G.f *= 2), (G.c = Be(G.c, G.f + 1))),
                  G.b === 0 ? (ge = re) : ((ge = G.b), (G.b = G.c[G.b])),
                  (G.e[ge] = K),
                  (G.c[ge] = re),
                  (G.d[re] = ge),
                  G.h && Ze(G, re),
                  ge)
                : ((G = Q.a++), (Q.c[G] = K), -(G + 1));
            }
            function Pe(Q) {
              if (Q.a === 0) return We(Q.b);
              var K = Q.c[Q.d[Q.a - 1]];
              if (Q.b.a !== 0 && r(ze(Q.b), K)) return We(Q.b);
              for (; --Q.a, 0 < Q.a && Q.c[Q.d[Q.a - 1]] === null; );
              return K;
            }
            function Me() {
              (this.d = Be([0], 33)),
                (this.e = [null, null]),
                (this.c = [0, 0]),
                (this.a = 0),
                (this.f = 32),
                (this.b = 0),
                (this.h = !1),
                (this.d[1] = 1);
            }
            function Be(Q, K) {
              for (var G = Array(K), re = 0; re < Q.length; re++) G[re] = Q[re];
              for (; re < K; re++) G[re] = 0;
              return G;
            }
            function ze(Q) {
              return Q.e[Q.d[1]];
            }
            function We(Q) {
              var K = Q.d,
                G = Q.e,
                re = Q.c,
                ge = K[1],
                je = G[ge];
              return (
                0 < Q.a &&
                  ((K[1] = K[Q.a]),
                  (re[K[1]] = 1),
                  (G[ge] = null),
                  (re[ge] = Q.b),
                  (Q.b = ge),
                  0 < --Q.a && Qe(Q, 1)),
                je
              );
            }
            function Qe(Q, K) {
              for (var G = Q.d, re = Q.e, ge = Q.c, je = K, Ae = G[je]; ; ) {
                var Fe = je << 1,
                  Ve =
                    (Fe < Q.a && r(re[G[Fe + 1]], re[G[Fe]]) && (Fe += 1),
                    G[Fe]);
                if (Fe > Q.a || r(re[Ae], re[Ve])) {
                  ge[(G[je] = Ae)] = je;
                  break;
                }
                (ge[(G[je] = Ve)] = je), (je = Fe);
              }
            }
            function Ze(Q, K) {
              for (var G = Q.d, re = Q.e, ge = Q.c, je = K, Ae = G[je]; ; ) {
                var Fe = je >> 1,
                  Ve = G[Fe];
                if (Fe == 0 || r(re[Ve], re[Ae])) {
                  ge[(G[je] = Ae)] = je;
                  break;
                }
                (ge[(G[je] = Ve)] = je), (je = Fe);
              }
            }
            function _e() {
              (this.e = this.a = null),
                (this.f = 0),
                (this.c = this.b = this.h = this.d = !1);
            }
            function Ie(Q) {
              return Q.e.c.b;
            }
            function xe(Q) {
              return Q.e.a.b;
            }
            ((u = ue.prototype).x = function () {
              be(this, 0);
            }),
              (u.B = function (Q, K) {
                switch (Q) {
                  case 100142:
                    return;
                  case 100140:
                    switch (K) {
                      case 100130:
                      case 100131:
                      case 100132:
                      case 100133:
                      case 100134:
                        return void (this.s = K);
                    }
                    break;
                  case 100141:
                    return void (this.m = !!K);
                  default:
                    return void te(this, 100900);
                }
                te(this, 100901);
              }),
              (u.y = function (Q) {
                switch (Q) {
                  case 100142:
                    return 0;
                  case 100140:
                    return this.s;
                  case 100141:
                    return this.m;
                  default:
                    te(this, 100900);
                }
                return !1;
              }),
              (u.A = function (Q, K, G) {
                (this.j[0] = Q), (this.j[1] = K), (this.j[2] = G);
              }),
              (u.z = function (Q, K) {
                var G = K || null;
                switch (Q) {
                  case 100100:
                  case 100106:
                    this.h = G;
                    break;
                  case 100104:
                  case 100110:
                    this.l = G;
                    break;
                  case 100101:
                  case 100107:
                    this.k = G;
                    break;
                  case 100102:
                  case 100108:
                    this.i = G;
                    break;
                  case 100103:
                  case 100109:
                    this.p = G;
                    break;
                  case 100105:
                  case 100111:
                    this.o = G;
                    break;
                  case 100112:
                    this.r = G;
                    break;
                  default:
                    te(this, 100900);
                }
              }),
              (u.C = function (Q, K) {
                var G = !1,
                  re = [0, 0, 0];
                be(this, 2);
                for (var ge = 0; ge < 3; ++ge) {
                  var je = Q[ge];
                  je < -1e150 && ((je = -1e150), (G = !0)),
                    1e150 < je && ((je = 1e150), (G = !0)),
                    (re[ge] = je);
                }
                G && te(this, 100155),
                  (G = this.q) === null
                    ? f((G = c(this.b)), G.b)
                    : (_(G), (G = G.e)),
                  (G.a.d = K),
                  (G.a.g[0] = re[0]),
                  (G.a.g[1] = re[1]),
                  (G.a.g[2] = re[2]),
                  (G.f = 1),
                  (G.b.f = -1),
                  (this.q = G);
              }),
              (u.u = function (Q) {
                be(this, 0), (this.d = 1), (this.b = new ve()), (this.c = Q);
              }),
              (u.t = function () {
                be(this, 1), (this.d = 2), (this.q = null);
              }),
              (u.v = function () {
                be(this, 2), (this.d = 1);
              }),
              (u.w = function () {
                be(this, 1), (this.d = 0);
                var Q,
                  K,
                  G = this.j[0],
                  re = this.j[1],
                  ge = this.j[2],
                  je = !1,
                  Ae = [G, re, ge];
                if (G === 0 && re === 0 && ge === 0) {
                  for (
                    var re = [-2e150, -2e150, -2e150],
                      Fe = [2e150, 2e150, 2e150],
                      ge = [],
                      Ve = [],
                      G = (je = this.b.c).e;
                    G !== je;
                    G = G.e
                  )
                    for (var Ge = 0; Ge < 3; ++Ge) {
                      var Xe = G.g[Ge];
                      Xe < Fe[Ge] && ((Fe[Ge] = Xe), (Ve[Ge] = G)),
                        Xe > re[Ge] && ((re[Ge] = Xe), (ge[Ge] = G));
                    }
                  if (
                    (re[1] - Fe[1] > re[(G = 0)] - Fe[0] && (G = 1),
                    Fe[(G = re[2] - Fe[2] > re[G] - Fe[G] ? 2 : G)] >= re[G])
                  )
                    (Ae[0] = 0), (Ae[1] = 0), (Ae[2] = 1);
                  else {
                    for (
                      Fe = Ve[G],
                        ge = ge[G],
                        Ve = [(re = 0), 0, 0],
                        Fe = [
                          Fe.g[0] - ge.g[0],
                          Fe.g[1] - ge.g[1],
                          Fe.g[2] - ge.g[2],
                        ],
                        Ge = [0, 0, 0],
                        G = je.e;
                      G !== je;
                      G = G.e
                    )
                      (Ge[0] = G.g[0] - ge.g[0]),
                        (Ge[1] = G.g[1] - ge.g[1]),
                        (Ge[2] = G.g[2] - ge.g[2]),
                        (Ve[0] = Fe[1] * Ge[2] - Fe[2] * Ge[1]),
                        (Ve[1] = Fe[2] * Ge[0] - Fe[0] * Ge[2]),
                        (Ve[2] = Fe[0] * Ge[1] - Fe[1] * Ge[0]),
                        re <
                          (Xe =
                            Ve[0] * Ve[0] + Ve[1] * Ve[1] + Ve[2] * Ve[2]) &&
                          ((re = Xe),
                          (Ae[0] = Ve[0]),
                          (Ae[1] = Ve[1]),
                          (Ae[2] = Ve[2]));
                    re <= 0 && ((Ae[0] = Ae[1] = Ae[2] = 0), (Ae[O(Fe)] = 1));
                  }
                  je = !0;
                }
                for (
                  Ve = O(Ae),
                    G = this.b.c,
                    re = (Ve + 1) % 3,
                    ge = (Ve + 2) % 3,
                    Ve = 0 < Ae[Ve] ? 1 : -1,
                    Ae = G.e;
                  Ae !== G;
                  Ae = Ae.e
                )
                  (Ae.b = Ae.g[re]), (Ae.a = Ve * Ae.g[ge]);
                if (je) {
                  for (Ae = 0, G = (je = this.b.a).b; G !== je; G = G.b)
                    if (!((re = G.a).f <= 0))
                      for (
                        ;
                        (Ae += (re.a.b - re.b.a.b) * (re.a.a + re.b.a.a)),
                          (re = re.e) !== G.a;

                      );
                  if (Ae < 0)
                    for (je = (Ae = this.b.c).e; je !== Ae; je = je.e)
                      je.a = -je.a;
                }
                for (this.n = !1, Ae = this.b.b, G = Ae.h; G !== Ae; G = je)
                  (je = G.h),
                    (re = G.e),
                    a(G.a, G.b.a) &&
                      G.e.e !== G &&
                      (P(this, re, G), g(G), (re = (G = re).e)),
                    re.e === G &&
                      (re !== G &&
                        ((re !== je && re !== je.b) || (je = je.h), g(re)),
                      (G !== je && G !== je.b) || (je = je.h),
                      g(G));
                for (
                  this.e = Ae = new Ce(), je = this.b.c, G = je.e;
                  G !== je;
                  G = G.e
                )
                  G.h = Se(Ae, G);
                var at = Ae;
                at.d = [];
                for (var st = 0; st < at.a; st++) at.d[st] = st;
                at.d.sort(
                  (function (nt) {
                    return function (jt, or) {
                      return r(nt[jt], nt[or]) ? 1 : -1;
                    };
                  })(at.c),
                ),
                  (at.e = !0);
                for (var Ke = at.b, ot = Ke.a; 1 <= ot; --ot) Qe(Ke, ot);
                for (
                  Ke.h = !0,
                    this.f = new ce(this),
                    ne(this, -4e150),
                    ne(this, 4e150);
                  (Ae = Pe(this.e)) !== null;

                ) {
                  for (;;) {
                    e: if ((G = this.e).a === 0) je = ze(G.b);
                    else if (
                      ((je = G.c[G.d[G.a - 1]]),
                      G.b.a !== 0 && r((G = ze(G.b)), je))
                    ) {
                      je = G;
                      break e;
                    }
                    if (je === null || !a(je, Ae)) break;
                    (je = Pe(this.e)), P(this, Ae.c, je.c);
                  }
                  (function nt(jt, or) {
                    for (var Gt, yt = (jt.a = or).c; yt.i === null; )
                      if ((yt = yt.c) === or.c) {
                        var yt = jt,
                          Ct = or;
                        (vt = new _e()).a = Ct.c.b;
                        for (
                          var rr = (pt = yt.f).a;
                          (rr = rr.a).b !== null && !pt.c(pt.b, vt, rr.b);

                        );
                        var pt,
                          tr,
                          $t = Ie((pt = rr.b)),
                          vt = pt.a,
                          rr = $t.a;
                        return void (d(vt.b.a, Ct, vt.a) === 0
                          ? a((vt = pt.a).a, Ct) ||
                            a(vt.b.a, Ct) ||
                            (_(vt.b),
                            pt.c && (g(vt.c), (pt.c = !1)),
                            f(Ct.c, vt),
                            nt(yt, Ct))
                          : ((tr = r(rr.b.a, vt.b.a) ? pt : $t),
                            ($t = void 0),
                            pt.d || tr.c
                              ? (($t =
                                  tr === pt
                                    ? x(Ct.c.b, vt.e)
                                    : x(rr.b.c.b, Ct.c).b),
                                tr.c
                                  ? H(tr, $t)
                                  : (((pt = z((vt = yt), pt, $t)).f =
                                      xe(pt).f + pt.a.f),
                                    (pt.d = X(vt, pt.f))),
                                nt(yt, Ct))
                              : $(yt, pt, Ct.c, Ct.c, null, !0)));
                      }
                    (pt = (vt = Ie((yt = q(yt.i)))).a),
                      (vt = Z(jt, vt, null)).c === pt
                        ? ((vt = (pt = vt).c),
                          (rr = Ie(yt)),
                          ($t = yt.a),
                          (tr = rr.a),
                          (Gt = !1),
                          $t.b.a !== tr.b.a && Y(jt, yt),
                          a($t.a, jt.a) &&
                            (f(vt.b.e, $t),
                            (vt = Ie((yt = q(yt))).a),
                            Z(jt, Ie(yt), rr),
                            (Gt = !0)),
                          a(tr.a, jt.a) &&
                            (f(pt, tr.b.e), (pt = Z(jt, rr, null)), (Gt = !0)),
                          Gt
                            ? $(jt, yt, pt.c, vt, vt, !0)
                            : ((Ct = r(tr.a, $t.a) ? tr.b.e : $t),
                              $(jt, yt, (Ct = x(pt.c.b, Ct)), Ct.c, Ct.c, !1),
                              (Ct.b.i.c = !0),
                              ee(jt, yt)))
                        : $(jt, yt, vt.c, pt, pt, !0);
                  })(this, Ae);
                }
                for (
                  this.a = this.f.a.a.b.a.a, Ae = 0;
                  (je = this.f.a.a.b) !== null;

                )
                  je.h || ++Ae, U(je);
                for (
                  this.f = null,
                    (Ae = this.e).b = null,
                    Ae.d = null,
                    this.e = Ae.c = null,
                    Ae = this.b,
                    G = Ae.a.b;
                  G !== Ae.a;
                  G = je
                )
                  (je = G.b), (G = G.a).e.e === G && (D(G.c, G), g(G));
                if (!this.n) {
                  if (((Ae = this.b), this.m))
                    for (G = Ae.b.h; G !== Ae.b; G = je)
                      (je = G.h),
                        G.b.d.c !== G.d.c ? (G.f = G.d.c ? 1 : -1) : g(G);
                  else
                    for (G = Ae.a.b; G !== Ae.a; G = je)
                      if (((je = G.b), G.c)) {
                        for (G = G.a; r(G.b.a, G.a); G = G.c.b);
                        for (; r(G.a, G.b.a); G = G.e);
                        for (re = G.c.b, ge = void 0; G.e !== re; )
                          if (r(G.b.a, re.a)) {
                            for (
                              ;
                              re.e !== G &&
                              (r((K = re.e).b.a, K.a) ||
                                d(re.a, re.b.a, re.e.b.a) <= 0);

                            )
                              re = (ge = x(re.e, re)).b;
                            re = re.c.b;
                          } else {
                            for (
                              ;
                              re.e !== G &&
                              (r((Q = G.c.b).a, Q.b.a) ||
                                0 <= d(G.b.a, G.a, G.c.b.a));

                            )
                              G = (ge = x(G, G.c.b)).b;
                            G = G.e;
                          }
                        for (; re.e.e !== G; ) (ge = x(re.e, re)), (re = ge.b);
                      }
                  if (this.h || this.i || this.k || this.l)
                    if (this.m) {
                      for (je = (Ae = this.b).a.b; je !== Ae.a; je = je.b)
                        if (je.c) {
                          for (
                            this.h && this.h(2, this.c), G = je.a;
                            this.k && this.k(G.a.d, this.c), (G = G.e) !== je.a;

                          );
                          this.i && this.i(this.c);
                        }
                    } else {
                      for (
                        Ae = this.b,
                          je = !!this.l,
                          G = !1,
                          re = -1,
                          ge = Ae.a.d;
                        ge !== Ae.a;
                        ge = ge.d
                      )
                        if (ge.c)
                          for (
                            G || (this.h && this.h(4, this.c), (G = !0)),
                              Ve = ge.a;
                            je &&
                              ((Fe = Ve.b.d.c ? 0 : 1),
                              re !== Fe &&
                                ((re = Fe), this.l && this.l(!!re, this.c))),
                              this.k && this.k(Ve.a.d, this.c),
                              (Ve = Ve.e) !== ge.a;

                          );
                      G && this.i && this.i(this.c);
                    }
                  if (this.r) {
                    for (Ae = this.b, G = Ae.a.b; G !== Ae.a; G = je)
                      if (((je = G.b), !G.c)) {
                        for (
                          ge = (re = G.a).e, Ve = void 0;
                          (ge = (Ve = ge).e),
                            (Ve.d = null) === Ve.b.d &&
                              (Ve.c === Ve
                                ? A(Ve.a, null)
                                : ((Ve.a.c = Ve.c), v(Ve, Ve.b.e)),
                              (Fe = Ve.b).c === Fe
                                ? A(Fe.a, null)
                                : ((Fe.a.c = Fe.c), v(Fe, Fe.b.e)),
                              k(Ve)),
                            Ve !== re;

                        );
                        (re = G.d), (((G = G.b).d = re).b = G);
                      }
                    return this.r(this.b), void (this.c = this.b = null);
                  }
                }
                this.b = this.c = null;
              }),
              (this.libtess = {
                GluTesselator: ue,
                windingRule: {
                  GLU_TESS_WINDING_ODD: 100130,
                  GLU_TESS_WINDING_NONZERO: 100131,
                  GLU_TESS_WINDING_POSITIVE: 100132,
                  GLU_TESS_WINDING_NEGATIVE: 100133,
                  GLU_TESS_WINDING_ABS_GEQ_TWO: 100134,
                },
                primitiveType: {
                  GL_LINE_LOOP: 2,
                  GL_TRIANGLES: 4,
                  GL_TRIANGLE_STRIP: 5,
                  GL_TRIANGLE_FAN: 6,
                },
                errorType: {
                  GLU_TESS_MISSING_BEGIN_POLYGON: 100151,
                  GLU_TESS_MISSING_END_POLYGON: 100153,
                  GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,
                  GLU_TESS_MISSING_END_CONTOUR: 100154,
                  GLU_TESS_COORD_TOO_LARGE: 100155,
                  GLU_TESS_NEED_COMBINE_CALLBACK: 100156,
                },
                gluEnum: {
                  GLU_TESS_MESH: 100112,
                  GLU_TESS_TOLERANCE: 100142,
                  GLU_TESS_WINDING_RULE: 100140,
                  GLU_TESS_BOUNDARY_ONLY: 100141,
                  GLU_INVALID_ENUM: 100900,
                  GLU_INVALID_VALUE: 100901,
                  GLU_TESS_BEGIN: 100100,
                  GLU_TESS_VERTEX: 100101,
                  GLU_TESS_END: 100102,
                  GLU_TESS_ERROR: 100103,
                  GLU_TESS_EDGE_FLAG: 100104,
                  GLU_TESS_COMBINE: 100105,
                  GLU_TESS_BEGIN_DATA: 100106,
                  GLU_TESS_VERTEX_DATA: 100107,
                  GLU_TESS_END_DATA: 100108,
                  GLU_TESS_ERROR_DATA: 100109,
                  GLU_TESS_EDGE_FLAG_DATA: 100110,
                  GLU_TESS_COMBINE_DATA: 100111,
                },
              }),
              (ue.prototype.gluDeleteTess = ue.prototype.x),
              (ue.prototype.gluTessProperty = ue.prototype.B),
              (ue.prototype.gluGetTessProperty = ue.prototype.y),
              (ue.prototype.gluTessNormal = ue.prototype.A),
              (ue.prototype.gluTessCallback = ue.prototype.z),
              (ue.prototype.gluTessVertex = ue.prototype.C),
              (ue.prototype.gluTessBeginPolygon = ue.prototype.u),
              (ue.prototype.gluTessBeginContour = ue.prototype.t),
              (ue.prototype.gluTessEndContour = ue.prototype.v),
              (ue.prototype.gluTessEndPolygon = ue.prototype.w),
              b !== void 0 && (b.exports = this.libtess);
          },
          {},
        ],
        240: [
          function (t, b, y) {
            function u(r, l, d, h) {
              var o = 0,
                s = (h = h === void 0 ? {} : h).loop === void 0 ? null : h.loop,
                n = h.palette === void 0 ? null : h.palette;
              if (l <= 0 || d <= 0 || 65535 < l || 65535 < d)
                throw new Error('Width/Height invalid.');
              function c(C) {
                if (((C = C.length), C < 2 || 256 < C || C & (C - 1)))
                  throw new Error(
                    'Invalid code/color length, must be power of 2 and 2 .. 256.',
                  );
                return C;
              }
              (r[o++] = 71),
                (r[o++] = 73),
                (r[o++] = 70),
                (r[o++] = 56),
                (r[o++] = 57),
                (r[o++] = 97);
              var f = 0,
                g = 0;
              if (n !== null) {
                for (var _ = c(n); (_ >>= 1); ) ++f;
                if (((_ = 1 << f), --f, h.background !== void 0)) {
                  if (_ <= (g = h.background))
                    throw new Error('Background index out of range.');
                  if (g === 0)
                    throw new Error('Background index explicitly passed as 0.');
                }
              }
              if (
                ((r[o++] = 255 & l),
                (r[o++] = (l >> 8) & 255),
                (r[o++] = 255 & d),
                (r[o++] = (d >> 8) & 255),
                (r[o++] = (n !== null ? 128 : 0) | f),
                (r[o++] = g),
                (r[o++] = 0),
                n !== null)
              )
                for (var x = 0, j = n.length; x < j; ++x) {
                  var v = n[x];
                  (r[o++] = (v >> 16) & 255),
                    (r[o++] = (v >> 8) & 255),
                    (r[o++] = 255 & v);
                }
              if (s !== null) {
                if (s < 0 || 65535 < s) throw new Error('Loop count invalid.');
                (r[o++] = 33),
                  (r[o++] = 255),
                  (r[o++] = 11),
                  (r[o++] = 78),
                  (r[o++] = 69),
                  (r[o++] = 84),
                  (r[o++] = 83),
                  (r[o++] = 67),
                  (r[o++] = 65),
                  (r[o++] = 80),
                  (r[o++] = 69),
                  (r[o++] = 50),
                  (r[o++] = 46),
                  (r[o++] = 48),
                  (r[o++] = 3),
                  (r[o++] = 1),
                  (r[o++] = 255 & s),
                  (r[o++] = (s >> 8) & 255),
                  (r[o++] = 0);
              }
              var M = !1;
              (this.addFrame = function (C, k, A, R, O, D) {
                if (
                  (M === !0 && (--o, (M = !1)),
                  (D = D === void 0 ? {} : D),
                  C < 0 || k < 0 || 65535 < C || 65535 < k)
                )
                  throw new Error('x/y invalid.');
                if (A <= 0 || R <= 0 || 65535 < A || 65535 < R)
                  throw new Error('Width/Height invalid.');
                if (O.length < A * R)
                  throw new Error('Not enough pixels for the frame size.');
                var N = !0,
                  U = D.palette;
                if ((U == null && ((N = !1), (U = n)), U == null))
                  throw new Error(
                    'Must supply either a local or global palette.',
                  );
                for (var q = c(U), H = 0; (q >>= 1); ) ++H;
                var q = 1 << H,
                  z = D.delay === void 0 ? 0 : D.delay,
                  X = D.disposal === void 0 ? 0 : D.disposal;
                if (X < 0 || 3 < X) throw new Error('Disposal out of range.');
                var W = !1,
                  Z = 0;
                if (
                  D.transparent !== void 0 &&
                  D.transparent !== null &&
                  ((W = !0), (Z = D.transparent) < 0 || q <= Z)
                )
                  throw new Error('Transparent color index.');
                if (
                  ((X === 0 && !W && z === 0) ||
                    ((r[o++] = 33),
                    (r[o++] = 249),
                    (r[o++] = 4),
                    (r[o++] = (X << 2) | (W === !0 ? 1 : 0)),
                    (r[o++] = 255 & z),
                    (r[o++] = (z >> 8) & 255),
                    (r[o++] = Z),
                    (r[o++] = 0)),
                  (r[o++] = 44),
                  (r[o++] = 255 & C),
                  (r[o++] = (C >> 8) & 255),
                  (r[o++] = 255 & k),
                  (r[o++] = (k >> 8) & 255),
                  (r[o++] = 255 & A),
                  (r[o++] = (A >> 8) & 255),
                  (r[o++] = 255 & R),
                  (r[o++] = (R >> 8) & 255),
                  (r[o++] = N === !0 ? 128 | (H - 1) : 0),
                  N === !0)
                )
                  for (var $ = 0, ae = U.length; $ < ae; ++$) {
                    var P = U[$];
                    (r[o++] = (P >> 16) & 255),
                      (r[o++] = (P >> 8) & 255),
                      (r[o++] = 255 & P);
                  }
                return (o = (function (L, B, Y, ee) {
                  L[B++] = Y;
                  var ne = B++,
                    ce = 1 << Y,
                    pe = ce - 1,
                    le = 1 + ce,
                    ue = 1 + le,
                    be = Y + 1,
                    te = 0,
                    se = 0;
                  function he(We) {
                    for (; We <= te; )
                      (L[B++] = 255 & se),
                        (se >>= 8),
                        (te -= 8),
                        B === ne + 256 && ((L[ne] = 255), (ne = B++));
                  }
                  function ve(We) {
                    (se |= We << te), (te += be), he(8);
                  }
                  var me = ee[0] & pe,
                    Ce = {};
                  ve(ce);
                  for (var Se = 1, Pe = ee.length; Se < Pe; ++Se) {
                    var Me = ee[Se] & pe,
                      Be = (me << 8) | Me,
                      ze = Ce[Be];
                    if (ze === void 0) {
                      for (se |= me << te, te += be; 8 <= te; )
                        (L[B++] = 255 & se),
                          (se >>= 8),
                          (te -= 8),
                          B === ne + 256 && ((L[ne] = 255), (ne = B++));
                      ue === 4096
                        ? (ve(ce), (ue = 1 + le), (be = Y + 1), (Ce = {}))
                        : (1 << be <= ue && ++be, (Ce[Be] = ue++)),
                        (me = Me);
                    } else me = ze;
                  }
                  return (
                    ve(me),
                    ve(le),
                    he(1),
                    ne + 1 === B
                      ? (L[ne] = 0)
                      : ((L[ne] = B - ne - 1), (L[B++] = 0)),
                    B
                  );
                })(r, o, H < 2 ? 2 : H, O));
              }),
                (this.end = function () {
                  return M === !1 && ((r[o++] = 59), (M = !0)), o;
                }),
                (this.getOutputBuffer = function () {
                  return r;
                }),
                (this.setOutputBuffer = function (C) {
                  r = C;
                }),
                (this.getOutputBufferPosition = function () {
                  return o;
                }),
                (this.setOutputBufferPosition = function (C) {
                  o = C;
                });
            }
            function a(r, l, d, h) {
              for (
                var o = r[l++],
                  s = 1 << o,
                  n = 1 + s,
                  c = 1 + n,
                  f = o + 1,
                  g = (1 << f) - 1,
                  _ = 0,
                  x = 0,
                  j = 0,
                  v = r[l++],
                  M = new Int32Array(4096),
                  C = null;
                ;

              ) {
                for (; _ < 16 && v !== 0; )
                  (x |= r[l++] << _), (_ += 8), v === 1 ? (v = r[l++]) : --v;
                if (_ < f) break;
                var k = x & g;
                if (((x >>= f), (_ -= f), k == s))
                  (c = 1 + n), (g = (1 << (f = o + 1)) - 1), (C = null);
                else {
                  if (k == n) break;
                  for (var A = k < c ? k : C, R = 0, O = A; s < O; )
                    (O = M[O] >> 8), ++R;
                  var D = O;
                  if (h < j + R + (A !== k ? 1 : 0))
                    return void console.log(
                      'Warning, gif stream longer than expected.',
                    );
                  d[j++] = D;
                  var N = (j += R);
                  for (A !== k && (d[j++] = D), O = A; R--; )
                    (O = M[O]), (d[--N] = 255 & O), (O >>= 8);
                  C !== null &&
                    c < 4096 &&
                    ((M[c++] = (C << 8) | D),
                    g + 1 <= c && f < 12 && (++f, (g = (g << 1) | 1))),
                    (C = k);
                }
              }
              j !== h &&
                console.log('Warning, gif stream shorter than expected.');
            }
            try {
              (y.GifWriter = u),
                (y.GifReader = function (r) {
                  var l = 0;
                  if (
                    r[l++] !== 71 ||
                    r[l++] !== 73 ||
                    r[l++] !== 70 ||
                    r[l++] !== 56 ||
                    ((r[l++] + 1) & 253) != 56 ||
                    r[l++] !== 97
                  )
                    throw new Error('Invalid GIF 87a/89a header.');
                  var d = r[l++] | (r[l++] << 8),
                    h = r[l++] | (r[l++] << 8),
                    o = r[l++],
                    s = 1 << (1 + (7 & o)),
                    n = (r[l++], r[l++], null),
                    c = null,
                    f = (o >> 7 && ((n = l), (l += 3 * (c = s))), !0),
                    g = [],
                    _ = 0,
                    x = null,
                    j = 0,
                    v = null;
                  for (this.width = d, this.height = h; f && l < r.length; )
                    switch (r[l++]) {
                      case 33:
                        switch (r[l++]) {
                          case 255:
                            if (
                              r[l] !== 11 ||
                              (r[l + 1] == 78 &&
                                r[l + 2] == 69 &&
                                r[l + 3] == 84 &&
                                r[l + 4] == 83 &&
                                r[l + 5] == 67 &&
                                r[l + 6] == 65 &&
                                r[l + 7] == 80 &&
                                r[l + 8] == 69 &&
                                r[l + 9] == 50 &&
                                r[l + 10] == 46 &&
                                r[l + 11] == 48 &&
                                r[l + 12] == 3 &&
                                r[l + 13] == 1 &&
                                r[l + 16] == 0)
                            )
                              (l += 14), (v = r[l++] | (r[l++] << 8)), l++;
                            else
                              for (l += 12; ; ) {
                                if (!(0 <= (C = r[l++])))
                                  throw Error('Invalid block size');
                                if (C === 0) break;
                                l += C;
                              }
                            break;
                          case 249:
                            if (r[l++] !== 4 || r[l + 4] !== 0)
                              throw new Error(
                                'Invalid graphics extension block.',
                              );
                            var M = r[l++],
                              _ = r[l++] | (r[l++] << 8),
                              x = r[l++];
                            (1 & M) == 0 && (x = null), (j = (M >> 2) & 7), l++;
                            break;
                          case 254:
                            for (;;) {
                              if (!(0 <= (C = r[l++])))
                                throw Error('Invalid block size');
                              if (C === 0) break;
                              l += C;
                            }
                            break;
                          default:
                            throw new Error(
                              'Unknown graphic control label: 0x' +
                                r[l - 1].toString(16),
                            );
                        }
                        break;
                      case 44:
                        var C,
                          k = r[l++] | (r[l++] << 8),
                          A = r[l++] | (r[l++] << 8),
                          R = r[l++] | (r[l++] << 8),
                          O = r[l++] | (r[l++] << 8),
                          z = r[l++],
                          D = (z >> 6) & 1,
                          N = 1 << (1 + (7 & z)),
                          U = n,
                          H = c,
                          q = !1,
                          z =
                            (z >> 7 && ((q = !0), (U = l), (l += 3 * (H = N))),
                            l);
                        for (l++; ; ) {
                          if (!(0 <= (C = r[l++])))
                            throw Error('Invalid block size');
                          if (C === 0) break;
                          l += C;
                        }
                        g.push({
                          x: k,
                          y: A,
                          width: R,
                          height: O,
                          has_local_palette: q,
                          palette_offset: U,
                          palette_size: H,
                          data_offset: z,
                          data_length: l - z,
                          transparent_index: x,
                          interlaced: !!D,
                          delay: _,
                          disposal: j,
                        });
                        break;
                      case 59:
                        f = !1;
                        break;
                      default:
                        throw new Error(
                          'Unknown gif block: 0x' + r[l - 1].toString(16),
                        );
                    }
                  (this.numFrames = function () {
                    return g.length;
                  }),
                    (this.loopCount = function () {
                      return v;
                    }),
                    (this.frameInfo = function (X) {
                      if (X < 0 || X >= g.length)
                        throw new Error('Frame index out of range.');
                      return g[X];
                    }),
                    (this.decodeAndBlitFrameBGRA = function (X, W) {
                      for (
                        var X = this.frameInfo(X),
                          Z = X.width * X.height,
                          $ = new Uint8Array(Z),
                          ae = (a(r, X.data_offset, $, Z), X.palette_offset),
                          P = X.transparent_index,
                          L = (P === null && (P = 256), X.width),
                          B = d - L,
                          Y = L,
                          ee = 4 * (X.y * d + X.x),
                          ne = 4 * ((X.y + X.height) * d + X.x),
                          ce = ee,
                          pe = 4 * B,
                          le = (X.interlaced === !0 && (pe += 4 * d * 7), 8),
                          ue = 0,
                          be = $.length;
                        ue < be;
                        ++ue
                      ) {
                        var te,
                          se,
                          he = $[ue];
                        Y === 0 &&
                          ((Y = L),
                          ne <= (ce += pe) &&
                            ((pe = 4 * B + 4 * d * (le - 1)),
                            (ce = ee + (L + B) * (le << 1)),
                            (le >>= 1))),
                          he === P
                            ? (ce += 4)
                            : ((te = r[ae + 3 * he]),
                              (se = r[ae + 3 * he + 1]),
                              (he = r[ae + 3 * he + 2]),
                              (W[ce++] = he),
                              (W[ce++] = se),
                              (W[ce++] = te),
                              (W[ce++] = 255)),
                          --Y;
                      }
                    }),
                    (this.decodeAndBlitFrameRGBA = function (X, W) {
                      for (
                        var X = this.frameInfo(X),
                          Z = X.width * X.height,
                          $ = new Uint8Array(Z),
                          ae = (a(r, X.data_offset, $, Z), X.palette_offset),
                          P = X.transparent_index,
                          L = (P === null && (P = 256), X.width),
                          B = d - L,
                          Y = L,
                          ee = 4 * (X.y * d + X.x),
                          ne = 4 * ((X.y + X.height) * d + X.x),
                          ce = ee,
                          pe = 4 * B,
                          le = (X.interlaced === !0 && (pe += 4 * d * 7), 8),
                          ue = 0,
                          be = $.length;
                        ue < be;
                        ++ue
                      ) {
                        var te,
                          se,
                          he = $[ue];
                        Y === 0 &&
                          ((Y = L),
                          ne <= (ce += pe) &&
                            ((pe = 4 * B + 4 * d * (le - 1)),
                            (ce = ee + (L + B) * (le << 1)),
                            (le >>= 1))),
                          he === P
                            ? (ce += 4)
                            : ((te = r[ae + 3 * he]),
                              (se = r[ae + 3 * he + 1]),
                              (he = r[ae + 3 * he + 2]),
                              (W[ce++] = te),
                              (W[ce++] = se),
                              (W[ce++] = he),
                              (W[ce++] = 255)),
                          --Y;
                      }
                    });
                });
            } catch {}
          },
          {},
        ],
        241: [
          function (t, b, y) {
            (function (u) {
              var a, r;
              (a = this),
                (r = function (l) {
                  function d(I) {
                    if (this == null) throw TypeError();
                    var w,
                      S = String(this),
                      E = S.length,
                      I = I ? Number(I) : 0;
                    if (!((I = I != I ? 0 : I) < 0 || E <= I))
                      return 55296 <= (w = S.charCodeAt(I)) &&
                        w <= 56319 &&
                        I + 1 < E &&
                        56320 <= (E = S.charCodeAt(I + 1)) &&
                        E <= 57343
                        ? 1024 * (w - 55296) + E - 56320 + 65536
                        : w;
                  }
                  String.prototype.codePointAt ||
                    ((h = (function () {
                      try {
                        var p = {},
                          w = Object.defineProperty,
                          S = w(p, p, p) && w;
                      } catch {}
                      return S;
                    })())
                      ? h(String.prototype, 'codePointAt', {
                          value: d,
                          configurable: !0,
                          writable: !0,
                        })
                      : (String.prototype.codePointAt = d));
                  var h,
                    o = 0,
                    s = -3;
                  function n() {
                    (this.table = new Uint16Array(16)),
                      (this.trans = new Uint16Array(288));
                  }
                  function c(p, w) {
                    (this.source = p),
                      (this.sourceIndex = 0),
                      (this.tag = 0),
                      (this.bitcount = 0),
                      (this.dest = w),
                      (this.destLen = 0),
                      (this.ltree = new n()),
                      (this.dtree = new n());
                  }
                  var f = new n(),
                    g = new n(),
                    _ = new Uint8Array(30),
                    x = new Uint16Array(30),
                    j = new Uint8Array(30),
                    v = new Uint16Array(30),
                    M = new Uint8Array([
                      16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14,
                      1, 15,
                    ]),
                    C = new n(),
                    k = new Uint8Array(320);
                  function A(p, w, S, E) {
                    for (var I, F = 0; F < S; ++F) p[F] = 0;
                    for (F = 0; F < 30 - S; ++F) p[F + S] = (F / S) | 0;
                    for (I = E, F = 0; F < 30; ++F)
                      (w[F] = I), (I += 1 << p[F]);
                  }
                  var R = new Uint16Array(16);
                  function O(p, w, S, E) {
                    for (var I, F = 0; F < 16; ++F) p.table[F] = 0;
                    for (F = 0; F < E; ++F) p.table[w[S + F]]++;
                    for (F = I = p.table[0] = 0; F < 16; ++F)
                      (R[F] = I), (I += p.table[F]);
                    for (F = 0; F < E; ++F)
                      w[S + F] && (p.trans[R[w[S + F]]++] = F);
                  }
                  function D(p, w, S) {
                    if (!w) return S;
                    for (; p.bitcount < 24; )
                      (p.tag |= p.source[p.sourceIndex++] << p.bitcount),
                        (p.bitcount += 8);
                    var E = p.tag & (65535 >>> (16 - w));
                    return (p.tag >>>= w), (p.bitcount -= w), E + S;
                  }
                  function N(p, w) {
                    for (; p.bitcount < 24; )
                      (p.tag |= p.source[p.sourceIndex++] << p.bitcount),
                        (p.bitcount += 8);
                    for (
                      var S = 0, E = 0, I = 0, F = p.tag;
                      (E = 2 * E + (1 & F)),
                        (F >>>= 1),
                        (S += w.table[++I]),
                        0 <= (E -= w.table[I]);

                    );
                    return (p.tag = F), (p.bitcount -= I), w.trans[S + E];
                  }
                  function U(p, w, S) {
                    for (;;) {
                      var E = N(p, w);
                      if (E === 256) return o;
                      if (E < 256) p.dest[p.destLen++] = E;
                      else
                        for (
                          var I,
                            F = D(p, _[(E -= 257)], x[E]),
                            E = N(p, S),
                            V = (I = p.destLen - D(p, j[E], v[E]));
                          V < I + F;
                          ++V
                        )
                          p.dest[p.destLen++] = p.dest[V];
                    }
                  }
                  for (var H = f, q = g, z = 0; z < 7; ++z) H.table[z] = 0;
                  for (
                    H.table[7] = 24, H.table[8] = 152, H.table[9] = 112, z = 0;
                    z < 24;
                    ++z
                  )
                    H.trans[z] = 256 + z;
                  for (z = 0; z < 144; ++z) H.trans[24 + z] = z;
                  for (z = 0; z < 8; ++z) H.trans[168 + z] = 280 + z;
                  for (z = 0; z < 112; ++z) H.trans[176 + z] = 144 + z;
                  for (z = 0; z < 5; ++z) q.table[z] = 0;
                  for (q.table[5] = 32, z = 0; z < 32; ++z) q.trans[z] = z;
                  A(_, x, 4, 3), A(j, v, 2, 1), (_[28] = 0), (x[28] = 258);
                  var X = function (p, w) {
                    var S,
                      E,
                      I,
                      F = new c(p, w);
                    do {
                      switch (
                        ((I = void 0),
                        (E = F).bitcount-- ||
                          ((E.tag = E.source[E.sourceIndex++]),
                          (E.bitcount = 7)),
                        (I = 1 & E.tag),
                        (E.tag >>>= 1),
                        (E = I),
                        D(F, 2, 0))
                      ) {
                        case 0:
                          S = (function (ke) {
                            for (var et, it; 8 < ke.bitcount; )
                              ke.sourceIndex--, (ke.bitcount -= 8);
                            if (
                              (et =
                                256 * ke.source[ke.sourceIndex + 1] +
                                ke.source[ke.sourceIndex]) !==
                              (65535 &
                                ~(
                                  256 * ke.source[ke.sourceIndex + 3] +
                                  ke.source[ke.sourceIndex + 2]
                                ))
                            )
                              return s;
                            for (ke.sourceIndex += 4, it = et; it; --it)
                              ke.dest[ke.destLen++] =
                                ke.source[ke.sourceIndex++];
                            return (ke.bitcount = 0), o;
                          })(F);
                          break;
                        case 1:
                          S = U(F, f, g);
                          break;
                        case 2:
                          Re =
                            Oe =
                            De =
                            Ee =
                            V =
                            de =
                            we =
                            Te =
                            ye =
                            oe =
                            ie =
                            J =
                              void 0;
                          for (
                            var V,
                              J = F,
                              ie = F.ltree,
                              oe = F.dtree,
                              ye = D(J, 5, 257),
                              Te = D(J, 5, 1),
                              we = D(J, 4, 4),
                              de = 0;
                            de < 19;
                            ++de
                          )
                            k[de] = 0;
                          for (de = 0; de < we; ++de) {
                            var De = D(J, 3, 0);
                            k[M[de]] = De;
                          }
                          for (O(C, k, 0, 19), V = 0; V < ye + Te; ) {
                            var Oe = N(J, C);
                            switch (Oe) {
                              case 16:
                                for (
                                  var Re = k[V - 1], Ee = D(J, 2, 3);
                                  Ee;
                                  --Ee
                                )
                                  k[V++] = Re;
                                break;
                              case 17:
                                for (Ee = D(J, 3, 3); Ee; --Ee) k[V++] = 0;
                                break;
                              case 18:
                                for (Ee = D(J, 7, 11); Ee; --Ee) k[V++] = 0;
                                break;
                              default:
                                k[V++] = Oe;
                            }
                          }
                          O(ie, k, 0, ye),
                            O(oe, k, ye, Te),
                            (S = U(F, F.ltree, F.dtree));
                          break;
                        default:
                          S = s;
                      }
                      if (S !== o) throw new Error('Data error');
                    } while (!E);
                    return F.destLen < F.dest.length
                      ? typeof F.dest.slice == 'function'
                        ? F.dest.slice(0, F.destLen)
                        : F.dest.subarray(0, F.destLen)
                      : F.dest;
                  };
                  function W(p, w, S, E, I) {
                    return (
                      Math.pow(1 - I, 3) * p +
                      3 * Math.pow(1 - I, 2) * I * w +
                      3 * (1 - I) * Math.pow(I, 2) * S +
                      Math.pow(I, 3) * E
                    );
                  }
                  function Z() {
                    (this.x1 = Number.NaN),
                      (this.y1 = Number.NaN),
                      (this.x2 = Number.NaN),
                      (this.y2 = Number.NaN);
                  }
                  function $() {
                    (this.commands = []),
                      (this.fill = 'black'),
                      (this.stroke = null),
                      (this.strokeWidth = 1);
                  }
                  function ae(p) {
                    throw new Error(p);
                  }
                  function P(p, w) {
                    p || ae(w);
                  }
                  (Z.prototype.isEmpty = function () {
                    return (
                      isNaN(this.x1) ||
                      isNaN(this.y1) ||
                      isNaN(this.x2) ||
                      isNaN(this.y2)
                    );
                  }),
                    (Z.prototype.addPoint = function (p, w) {
                      typeof p == 'number' &&
                        ((isNaN(this.x1) || isNaN(this.x2)) &&
                          ((this.x1 = p), (this.x2 = p)),
                        p < this.x1 && (this.x1 = p),
                        p > this.x2 && (this.x2 = p)),
                        typeof w == 'number' &&
                          ((isNaN(this.y1) || isNaN(this.y2)) &&
                            ((this.y1 = w), (this.y2 = w)),
                          w < this.y1 && (this.y1 = w),
                          w > this.y2 && (this.y2 = w));
                    }),
                    (Z.prototype.addX = function (p) {
                      this.addPoint(p, null);
                    }),
                    (Z.prototype.addY = function (p) {
                      this.addPoint(null, p);
                    }),
                    (Z.prototype.addBezier = function (p, w, S, E, I, F, V, J) {
                      var ie = [p, w],
                        oe = [S, E],
                        ye = [I, F],
                        Te = [V, J];
                      this.addPoint(p, w), this.addPoint(V, J);
                      for (var we = 0; we <= 1; we++) {
                        var de,
                          De = 6 * ie[we] - 12 * oe[we] + 6 * ye[we],
                          Oe =
                            -3 * ie[we] + 9 * oe[we] - 9 * ye[we] + 3 * Te[we],
                          Re = 3 * oe[we] - 3 * ie[we];
                        Oe == 0
                          ? De == 0 ||
                            (0 < (de = -Re / De) &&
                              de < 1 &&
                              (we === 0 &&
                                this.addX(
                                  W(ie[we], oe[we], ye[we], Te[we], de),
                                ),
                              we === 1 &&
                                this.addY(
                                  W(ie[we], oe[we], ye[we], Te[we], de),
                                )))
                          : (de = Math.pow(De, 2) - 4 * Re * Oe) < 0 ||
                            (0 < (Re = (-De + Math.sqrt(de)) / (2 * Oe)) &&
                              Re < 1 &&
                              (we === 0 &&
                                this.addX(
                                  W(ie[we], oe[we], ye[we], Te[we], Re),
                                ),
                              we === 1 &&
                                this.addY(
                                  W(ie[we], oe[we], ye[we], Te[we], Re),
                                )),
                            0 < (Re = (-De - Math.sqrt(de)) / (2 * Oe)) &&
                              Re < 1 &&
                              (we === 0 &&
                                this.addX(
                                  W(ie[we], oe[we], ye[we], Te[we], Re),
                                ),
                              we === 1 &&
                                this.addY(
                                  W(ie[we], oe[we], ye[we], Te[we], Re),
                                )));
                      }
                    }),
                    (Z.prototype.addQuad = function (p, w, S, E, I, F) {
                      (S = p + (2 / 3) * (S - p)),
                        (E = w + (2 / 3) * (E - w)),
                        this.addBezier(
                          p,
                          w,
                          S,
                          E,
                          S + (1 / 3) * (I - p),
                          E + (1 / 3) * (F - w),
                          I,
                          F,
                        );
                    }),
                    ($.prototype.moveTo = function (p, w) {
                      this.commands.push({ type: 'M', x: p, y: w });
                    }),
                    ($.prototype.lineTo = function (p, w) {
                      this.commands.push({ type: 'L', x: p, y: w });
                    }),
                    ($.prototype.curveTo = $.prototype.bezierCurveTo =
                      function (p, w, S, E, I, F) {
                        this.commands.push({
                          type: 'C',
                          x1: p,
                          y1: w,
                          x2: S,
                          y2: E,
                          x: I,
                          y: F,
                        });
                      }),
                    ($.prototype.quadTo = $.prototype.quadraticCurveTo =
                      function (p, w, S, E) {
                        this.commands.push({
                          type: 'Q',
                          x1: p,
                          y1: w,
                          x: S,
                          y: E,
                        });
                      }),
                    ($.prototype.close = $.prototype.closePath =
                      function () {
                        this.commands.push({ type: 'Z' });
                      }),
                    ($.prototype.extend = function (p) {
                      var w;
                      if (p.commands) p = p.commands;
                      else if (p instanceof Z)
                        return (
                          (w = p),
                          this.moveTo(w.x1, w.y1),
                          this.lineTo(w.x2, w.y1),
                          this.lineTo(w.x2, w.y2),
                          this.lineTo(w.x1, w.y2),
                          void this.close()
                        );
                      Array.prototype.push.apply(this.commands, p);
                    }),
                    ($.prototype.getBoundingBox = function () {
                      for (
                        var p = new Z(), w = 0, S = 0, E = 0, I = 0, F = 0;
                        F < this.commands.length;
                        F++
                      ) {
                        var V = this.commands[F];
                        switch (V.type) {
                          case 'M':
                            p.addPoint(V.x, V.y), (w = E = V.x), (S = I = V.y);
                            break;
                          case 'L':
                            p.addPoint(V.x, V.y), (E = V.x), (I = V.y);
                            break;
                          case 'Q':
                            p.addQuad(E, I, V.x1, V.y1, V.x, V.y),
                              (E = V.x),
                              (I = V.y);
                            break;
                          case 'C':
                            p.addBezier(E, I, V.x1, V.y1, V.x2, V.y2, V.x, V.y),
                              (E = V.x),
                              (I = V.y);
                            break;
                          case 'Z':
                            (E = w), (I = S);
                            break;
                          default:
                            throw new Error(
                              'Unexpected path command ' + V.type,
                            );
                        }
                      }
                      return p.isEmpty() && p.addPoint(0, 0), p;
                    }),
                    ($.prototype.draw = function (p) {
                      p.beginPath();
                      for (var w = 0; w < this.commands.length; w += 1) {
                        var S = this.commands[w];
                        S.type === 'M'
                          ? p.moveTo(S.x, S.y)
                          : S.type === 'L'
                          ? p.lineTo(S.x, S.y)
                          : S.type === 'C'
                          ? p.bezierCurveTo(S.x1, S.y1, S.x2, S.y2, S.x, S.y)
                          : S.type === 'Q'
                          ? p.quadraticCurveTo(S.x1, S.y1, S.x, S.y)
                          : S.type === 'Z' && p.closePath();
                      }
                      this.fill && ((p.fillStyle = this.fill), p.fill()),
                        this.stroke &&
                          ((p.strokeStyle = this.stroke),
                          (p.lineWidth = this.strokeWidth),
                          p.stroke());
                    }),
                    ($.prototype.toPathData = function (p) {
                      function w() {
                        for (
                          var F = arguments, V = '', J = 0;
                          J < arguments.length;
                          J += 1
                        ) {
                          var ie = F[J];
                          0 <= ie && 0 < J && (V += ' '),
                            (V +=
                              ((ie = ie),
                              Math.round(ie) === ie
                                ? '' + Math.round(ie)
                                : ie.toFixed(p)));
                        }
                        return V;
                      }
                      p = p !== void 0 ? p : 2;
                      for (
                        var S = '', E = 0;
                        E < this.commands.length;
                        E += 1
                      ) {
                        var I = this.commands[E];
                        I.type === 'M'
                          ? (S += 'M' + w(I.x, I.y))
                          : I.type === 'L'
                          ? (S += 'L' + w(I.x, I.y))
                          : I.type === 'C'
                          ? (S += 'C' + w(I.x1, I.y1, I.x2, I.y2, I.x, I.y))
                          : I.type === 'Q'
                          ? (S += 'Q' + w(I.x1, I.y1, I.x, I.y))
                          : I.type === 'Z' && (S += 'Z');
                      }
                      return S;
                    }),
                    ($.prototype.toSVG = function (p) {
                      var w = (w = '<path d="') + this.toPathData(p) + '"';
                      return (
                        this.fill &&
                          this.fill !== 'black' &&
                          (this.fill === null
                            ? (w += ' fill="none"')
                            : (w += ' fill="' + this.fill + '"')),
                        this.stroke &&
                          (w +=
                            ' stroke="' +
                            this.stroke +
                            '" stroke-width="' +
                            this.strokeWidth +
                            '"'),
                        (w += '/>')
                      );
                    }),
                    ($.prototype.toDOMElement = function (w) {
                      var w = this.toPathData(w),
                        S = document.createElementNS(
                          'http://www.w3.org/2000/svg',
                          'path',
                        );
                      return S.setAttribute('d', w), S;
                    });
                  var L = { fail: ae, argument: P, assert: P },
                    B = {},
                    Y = {},
                    ee = {};
                  function ne(p) {
                    return function () {
                      return p;
                    };
                  }
                  (Y.BYTE = function (p) {
                    return (
                      L.argument(
                        0 <= p && p <= 255,
                        'Byte value should be between 0 and 255.',
                      ),
                      [p]
                    );
                  }),
                    (ee.BYTE = ne(1)),
                    (Y.CHAR = function (p) {
                      return [p.charCodeAt(0)];
                    }),
                    (ee.CHAR = ne(1)),
                    (Y.CHARARRAY = function (p) {
                      for (var w = [], S = 0; S < p.length; S += 1)
                        w[S] = p.charCodeAt(S);
                      return w;
                    }),
                    (ee.CHARARRAY = function (p) {
                      return p.length;
                    }),
                    (Y.USHORT = function (p) {
                      return [(p >> 8) & 255, 255 & p];
                    }),
                    (ee.USHORT = ne(2)),
                    (Y.SHORT = function (p) {
                      return [
                        ((p = 32768 <= p ? -(65536 - p) : p) >> 8) & 255,
                        255 & p,
                      ];
                    }),
                    (ee.SHORT = ne(2)),
                    (Y.UINT24 = function (p) {
                      return [(p >> 16) & 255, (p >> 8) & 255, 255 & p];
                    }),
                    (ee.UINT24 = ne(3)),
                    (Y.ULONG = function (p) {
                      return [
                        (p >> 24) & 255,
                        (p >> 16) & 255,
                        (p >> 8) & 255,
                        255 & p,
                      ];
                    }),
                    (ee.ULONG = ne(4)),
                    (Y.LONG = function (p) {
                      return [
                        ((p = 2147483648 <= p ? -(4294967296 - p) : p) >> 24) &
                          255,
                        (p >> 16) & 255,
                        (p >> 8) & 255,
                        255 & p,
                      ];
                    }),
                    (ee.LONG = ne(4)),
                    (Y.FIXED = Y.ULONG),
                    (ee.FIXED = ee.ULONG),
                    (Y.FWORD = Y.SHORT),
                    (ee.FWORD = ee.SHORT),
                    (Y.UFWORD = Y.USHORT),
                    (ee.UFWORD = ee.USHORT),
                    (Y.LONGDATETIME = function (p) {
                      return [
                        0,
                        0,
                        0,
                        0,
                        (p >> 24) & 255,
                        (p >> 16) & 255,
                        (p >> 8) & 255,
                        255 & p,
                      ];
                    }),
                    (ee.LONGDATETIME = ne(8)),
                    (Y.TAG = function (p) {
                      return (
                        L.argument(
                          p.length === 4,
                          'Tag should be exactly 4 ASCII characters.',
                        ),
                        [
                          p.charCodeAt(0),
                          p.charCodeAt(1),
                          p.charCodeAt(2),
                          p.charCodeAt(3),
                        ]
                      );
                    }),
                    (ee.TAG = ne(4)),
                    (Y.Card8 = Y.BYTE),
                    (ee.Card8 = ee.BYTE),
                    (Y.Card16 = Y.USHORT),
                    (ee.Card16 = ee.USHORT),
                    (Y.OffSize = Y.BYTE),
                    (ee.OffSize = ee.BYTE),
                    (Y.SID = Y.USHORT),
                    (ee.SID = ee.USHORT),
                    (Y.NUMBER = function (p) {
                      return -107 <= p && p <= 107
                        ? [p + 139]
                        : 108 <= p && p <= 1131
                        ? [247 + ((p -= 108) >> 8), 255 & p]
                        : -1131 <= p && p <= -108
                        ? [251 + ((p = -p - 108) >> 8), 255 & p]
                        : -32768 <= p && p <= 32767
                        ? Y.NUMBER16(p)
                        : Y.NUMBER32(p);
                    }),
                    (ee.NUMBER = function (p) {
                      return Y.NUMBER(p).length;
                    }),
                    (Y.NUMBER16 = function (p) {
                      return [28, (p >> 8) & 255, 255 & p];
                    }),
                    (ee.NUMBER16 = ne(3)),
                    (Y.NUMBER32 = function (p) {
                      return [
                        29,
                        (p >> 24) & 255,
                        (p >> 16) & 255,
                        (p >> 8) & 255,
                        255 & p,
                      ];
                    }),
                    (ee.NUMBER32 = ne(5)),
                    (Y.REAL = function (p) {
                      for (
                        var w = p.toString(),
                          S =
                            /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(
                              w,
                            ),
                          E =
                            (S &&
                              ((S = parseFloat(
                                '1e' + ((S[2] ? +S[2] : 0) + S[1].length),
                              )),
                              (w = (Math.round(p * S) / S).toString())),
                            ''),
                          I = 0,
                          F = w.length;
                        I < F;
                        I += 1
                      ) {
                        var V = w[I];
                        E +=
                          V === 'e'
                            ? w[++I] === '-'
                              ? 'c'
                              : 'b'
                            : V === '.'
                            ? 'a'
                            : V === '-'
                            ? 'e'
                            : V;
                      }
                      for (
                        var J = [30],
                          ie = 0,
                          oe = (E += 1 & E.length ? 'f' : 'ff').length;
                        ie < oe;
                        ie += 2
                      )
                        J.push(parseInt(E.substr(ie, 2), 16));
                      return J;
                    }),
                    (ee.REAL = function (p) {
                      return Y.REAL(p).length;
                    }),
                    (Y.NAME = Y.CHARARRAY),
                    (ee.NAME = ee.CHARARRAY),
                    (Y.STRING = Y.CHARARRAY),
                    (ee.STRING = ee.CHARARRAY),
                    (B.UTF8 = function (p, w, S) {
                      for (var E = [], I = S, F = 0; F < I; F++, w += 1)
                        E[F] = p.getUint8(w);
                      return String.fromCharCode.apply(null, E);
                    }),
                    (B.UTF16 = function (p, w, S) {
                      for (var E = [], I = S / 2, F = 0; F < I; F++, w += 2)
                        E[F] = p.getUint16(w);
                      return String.fromCharCode.apply(null, E);
                    }),
                    (Y.UTF16 = function (p) {
                      for (var w = [], S = 0; S < p.length; S += 1) {
                        var E = p.charCodeAt(S);
                        (w[w.length] = (E >> 8) & 255), (w[w.length] = 255 & E);
                      }
                      return w;
                    }),
                    (ee.UTF16 = function (p) {
                      return 2 * p.length;
                    });
                  var ce,
                    pe = {
                      'x-mac-croatian':
                        '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7',
                      'x-mac-cyrillic':
                        '\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E',
                      'x-mac-gaelic':
                        '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83',
                      'x-mac-greek':
                        '\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD',
                      'x-mac-icelandic':
                        '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                      'x-mac-inuit':
                        '\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xA0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142',
                      'x-mac-ce':
                        '\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7',
                      macintosh:
                        '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                      'x-mac-romanian':
                        '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                      'x-mac-turkish':
                        '\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7',
                    },
                    le =
                      ((B.MACSTRING = function (p, w, S, E) {
                        var I = pe[E];
                        if (I !== void 0) {
                          for (var F = '', V = 0; V < S; V++) {
                            var J = p.getUint8(w + V);
                            F += J <= 127 ? String.fromCharCode(J) : I[127 & J];
                          }
                          return F;
                        }
                      }),
                      typeof WeakMap == 'function' && new WeakMap());
                  function ue(p) {
                    return -128 <= p && p <= 127;
                  }
                  (Y.MACSTRING = function (p, w) {
                    var S = (function (V) {
                      if (!ce)
                        for (var J in ((ce = {}), pe)) ce[J] = new String(J);
                      var ie = ce[V];
                      if (ie !== void 0) {
                        if (le) {
                          var oe = le.get(ie);
                          if (oe !== void 0) return oe;
                        }
                        var ye = pe[V];
                        if (ye !== void 0) {
                          for (var Te = {}, we = 0; we < ye.length; we++)
                            Te[ye.charCodeAt(we)] = we + 128;
                          return le && le.set(ie, Te), Te;
                        }
                      }
                    })(w);
                    if (S !== void 0) {
                      for (var E = [], I = 0; I < p.length; I++) {
                        var F = p.charCodeAt(I);
                        if (128 <= F && (F = S[F]) === void 0) return;
                        E[I] = F;
                      }
                      return E;
                    }
                  }),
                    (ee.MACSTRING = function (p, w) {
                      return (
                        (p = Y.MACSTRING(p, w)), p !== void 0 ? p.length : 0
                      );
                    }),
                    (Y.VARDELTAS = function (p) {
                      for (var E = 0, w = []; E < p.length; )
                        var S = p[E],
                          E = (
                            S === 0
                              ? function (I, F, V) {
                                  for (
                                    var J = 0, ie = I.length;
                                    F < ie && J < 64 && I[F] === 0;

                                  )
                                    ++F, ++J;
                                  return V.push(128 | (J - 1)), F;
                                }
                              : -128 <= S && S <= 127
                              ? function (I, F, V) {
                                  for (
                                    var J = 0, ie = I.length, oe = F;
                                    oe < ie && J < 64;

                                  ) {
                                    var ye = I[oe];
                                    if (
                                      !ue(ye) ||
                                      (ye === 0 &&
                                        oe + 1 < ie &&
                                        I[oe + 1] === 0)
                                    )
                                      break;
                                    ++oe, ++J;
                                  }
                                  V.push(J - 1);
                                  for (var Te = F; Te < oe; ++Te)
                                    V.push((I[Te] + 256) & 255);
                                  return oe;
                                }
                              : function (I, F, V) {
                                  for (
                                    var J = 0, ie = I.length, oe = F;
                                    oe < ie && J < 64;

                                  ) {
                                    var ye = I[oe];
                                    if (
                                      ye === 0 ||
                                      (ue(ye) && oe + 1 < ie && ue(I[oe + 1]))
                                    )
                                      break;
                                    ++oe, ++J;
                                  }
                                  V.push(64 | (J - 1));
                                  for (var Te = F; Te < oe; ++Te) {
                                    var we = I[Te];
                                    V.push(
                                      ((we + 65536) >> 8) & 255,
                                      (we + 256) & 255,
                                    );
                                  }
                                  return oe;
                                }
                          )(p, E, w);
                      return w;
                    }),
                    (Y.INDEX = function (p) {
                      for (
                        var w = 1, S = [w], E = [], I = 0;
                        I < p.length;
                        I += 1
                      ) {
                        var F = Y.OBJECT(p[I]);
                        Array.prototype.push.apply(E, F),
                          (w += F.length),
                          S.push(w);
                      }
                      if (E.length === 0) return [0, 0];
                      for (
                        var V = [],
                          J =
                            (1 + Math.floor(Math.log(w) / Math.log(2)) / 8) | 0,
                          ie = [void 0, Y.BYTE, Y.USHORT, Y.UINT24, Y.ULONG][J],
                          oe = 0;
                        oe < S.length;
                        oe += 1
                      ) {
                        var ye = ie(S[oe]);
                        Array.prototype.push.apply(V, ye);
                      }
                      return Array.prototype.concat(
                        Y.Card16(p.length),
                        Y.OffSize(J),
                        V,
                        E,
                      );
                    }),
                    (ee.INDEX = function (p) {
                      return Y.INDEX(p).length;
                    }),
                    (Y.DICT = function (p) {
                      for (
                        var w = [], S = Object.keys(p), E = S.length, I = 0;
                        I < E;
                        I += 1
                      ) {
                        var F = parseInt(S[I], 0),
                          V = p[F];
                        w = (w = w.concat(Y.OPERAND(V.value, V.type))).concat(
                          Y.OPERATOR(F),
                        );
                      }
                      return w;
                    }),
                    (ee.DICT = function (p) {
                      return Y.DICT(p).length;
                    }),
                    (Y.OPERATOR = function (p) {
                      return p < 1200 ? [p] : [12, p - 1200];
                    }),
                    (Y.OPERAND = function (p, w) {
                      var S = [];
                      if (Array.isArray(w))
                        for (var E = 0; E < w.length; E += 1)
                          L.argument(
                            p.length === w.length,
                            'Not enough arguments given for type' + w,
                          ),
                            (S = S.concat(Y.OPERAND(p[E], w[E])));
                      else if (w === 'SID') S = S.concat(Y.NUMBER(p));
                      else if (w === 'offset') S = S.concat(Y.NUMBER32(p));
                      else if (w === 'number') S = S.concat(Y.NUMBER(p));
                      else {
                        if (w !== 'real')
                          throw new Error('Unknown operand type ' + w);
                        S = S.concat(Y.REAL(p));
                      }
                      return S;
                    }),
                    (Y.OP = Y.BYTE),
                    (ee.OP = ee.BYTE);
                  var be = typeof WeakMap == 'function' && new WeakMap();
                  function te(p, w, S) {
                    for (var E = 0; E < w.length; E += 1) {
                      var I = w[E];
                      this[I.name] = I.value;
                    }
                    if (((this.tableName = p), (this.fields = w), S))
                      for (
                        var F = Object.keys(S), V = 0;
                        V < F.length;
                        V += 1
                      ) {
                        var J = F[V],
                          ie = S[J];
                        this[J] !== void 0 && (this[J] = ie);
                      }
                  }
                  function se(p, w, S) {
                    S === void 0 && (S = w.length);
                    var E = new Array(w.length + 1);
                    E[0] = { name: p + 'Count', type: 'USHORT', value: S };
                    for (var I = 0; I < w.length; I++)
                      E[I + 1] = { name: p + I, type: 'USHORT', value: w[I] };
                    return E;
                  }
                  function he(p, w, S) {
                    var E = w.length,
                      I = new Array(E + 1);
                    I[0] = { name: p + 'Count', type: 'USHORT', value: E };
                    for (var F = 0; F < E; F++)
                      I[F + 1] = {
                        name: p + F,
                        type: 'TABLE',
                        value: S(w[F], F),
                      };
                    return I;
                  }
                  function ve(p, w, S) {
                    var E = w.length,
                      I = [];
                    I[0] = { name: p + 'Count', type: 'USHORT', value: E };
                    for (var F = 0; F < E; F++) I = I.concat(S(w[F], F));
                    return I;
                  }
                  function me(p) {
                    p.format === 1
                      ? te.call(
                          this,
                          'coverageTable',
                          [
                            {
                              name: 'coverageFormat',
                              type: 'USHORT',
                              value: 1,
                            },
                          ].concat(se('glyph', p.glyphs)),
                        )
                      : L.assert(
                          !1,
                          "Can't create coverage table format 2 yet.",
                        );
                  }
                  function Ce(p) {
                    te.call(
                      this,
                      'scriptListTable',
                      ve('scriptRecord', p, function (w, S) {
                        var E = w.script,
                          I = E.defaultLangSys;
                        return (
                          L.assert(
                            !!I,
                            'Unable to write GSUB: script ' +
                              w.tag +
                              ' has no default language system.',
                          ),
                          [
                            {
                              name: 'scriptTag' + S,
                              type: 'TAG',
                              value: w.tag,
                            },
                            {
                              name: 'script' + S,
                              type: 'TABLE',
                              value: new te(
                                'scriptTable',
                                [
                                  {
                                    name: 'defaultLangSys',
                                    type: 'TABLE',
                                    value: new te(
                                      'defaultLangSys',
                                      [
                                        {
                                          name: 'lookupOrder',
                                          type: 'USHORT',
                                          value: 0,
                                        },
                                        {
                                          name: 'reqFeatureIndex',
                                          type: 'USHORT',
                                          value: I.reqFeatureIndex,
                                        },
                                      ].concat(
                                        se('featureIndex', I.featureIndexes),
                                      ),
                                    ),
                                  },
                                ].concat(
                                  ve(
                                    'langSys',
                                    E.langSysRecords,
                                    function (F, V) {
                                      var J = F.langSys;
                                      return [
                                        {
                                          name: 'langSysTag' + V,
                                          type: 'TAG',
                                          value: F.tag,
                                        },
                                        {
                                          name: 'langSys' + V,
                                          type: 'TABLE',
                                          value: new te(
                                            'langSys',
                                            [
                                              {
                                                name: 'lookupOrder',
                                                type: 'USHORT',
                                                value: 0,
                                              },
                                              {
                                                name: 'reqFeatureIndex',
                                                type: 'USHORT',
                                                value: J.reqFeatureIndex,
                                              },
                                            ].concat(
                                              se(
                                                'featureIndex',
                                                J.featureIndexes,
                                              ),
                                            ),
                                          ),
                                        },
                                      ];
                                    },
                                  ),
                                ),
                              ),
                            },
                          ]
                        );
                      }),
                    );
                  }
                  function Se(p) {
                    te.call(
                      this,
                      'featureListTable',
                      ve('featureRecord', p, function (w, S) {
                        var E = w.feature;
                        return [
                          { name: 'featureTag' + S, type: 'TAG', value: w.tag },
                          {
                            name: 'feature' + S,
                            type: 'TABLE',
                            value: new te(
                              'featureTable',
                              [
                                {
                                  name: 'featureParams',
                                  type: 'USHORT',
                                  value: E.featureParams,
                                },
                              ].concat(
                                se('lookupListIndex', E.lookupListIndexes),
                              ),
                            ),
                          },
                        ];
                      }),
                    );
                  }
                  function Pe(p, w) {
                    te.call(
                      this,
                      'lookupListTable',
                      he('lookup', p, function (S) {
                        var E = w[S.lookupType];
                        return (
                          L.assert(
                            !!E,
                            'Unable to write GSUB lookup type ' +
                              S.lookupType +
                              ' tables.',
                          ),
                          new te(
                            'lookupTable',
                            [
                              {
                                name: 'lookupType',
                                type: 'USHORT',
                                value: S.lookupType,
                              },
                              {
                                name: 'lookupFlag',
                                type: 'USHORT',
                                value: S.lookupFlag,
                              },
                            ].concat(he('subtable', S.subtables, E)),
                          )
                        );
                      }),
                    );
                  }
                  (Y.CHARSTRING = function (p) {
                    if (be) {
                      var w = be.get(p);
                      if (w !== void 0) return w;
                    }
                    for (var F = [], S = p.length, E = 0; E < S; E += 1)
                      var I = p[E], F = F.concat(Y[I.type](I.value));
                    return be && be.set(p, F), F;
                  }),
                    (ee.CHARSTRING = function (p) {
                      return Y.CHARSTRING(p).length;
                    }),
                    (Y.OBJECT = function (p) {
                      var w = Y[p.type];
                      return (
                        L.argument(
                          w !== void 0,
                          'No encoding function for type ' + p.type,
                        ),
                        w(p.value)
                      );
                    }),
                    (ee.OBJECT = function (p) {
                      var w = ee[p.type];
                      return (
                        L.argument(
                          w !== void 0,
                          'No sizeOf function for type ' + p.type,
                        ),
                        w(p.value)
                      );
                    }),
                    (Y.TABLE = function (p) {
                      for (
                        var w = [], S = p.fields.length, E = [], I = [], F = 0;
                        F < S;
                        F += 1
                      ) {
                        var V = p.fields[F],
                          ie = Y[V.type],
                          J =
                            (L.argument(
                              ie !== void 0,
                              'No encoding function for field type ' +
                                V.type +
                                ' (' +
                                V.name +
                                ')',
                            ),
                            p[V.name]),
                          ie = ie((J = J === void 0 ? V.value : J));
                        V.type === 'TABLE'
                          ? (I.push(w.length),
                            (w = w.concat([0, 0])),
                            E.push(ie))
                          : (w = w.concat(ie));
                      }
                      for (var oe = 0; oe < E.length; oe += 1) {
                        var ye = I[oe],
                          Te = w.length;
                        L.argument(
                          Te < 65536,
                          'Table ' + p.tableName + ' too big.',
                        ),
                          (w[ye] = Te >> 8),
                          (w[ye + 1] = 255 & Te),
                          (w = w.concat(E[oe]));
                      }
                      return w;
                    }),
                    (ee.TABLE = function (p) {
                      for (
                        var w = 0, S = p.fields.length, E = 0;
                        E < S;
                        E += 1
                      ) {
                        var I = p.fields[E],
                          F = ee[I.type],
                          V =
                            (L.argument(
                              F !== void 0,
                              'No sizeOf function for field type ' +
                                I.type +
                                ' (' +
                                I.name +
                                ')',
                            ),
                            p[I.name]);
                        (w += F((V = V === void 0 ? I.value : V))),
                          I.type === 'TABLE' && (w += 2);
                      }
                      return w;
                    }),
                    (Y.RECORD = Y.TABLE),
                    (ee.RECORD = ee.TABLE),
                    (Y.LITERAL = function (p) {
                      return p;
                    }),
                    (ee.LITERAL = function (p) {
                      return p.length;
                    }),
                    (te.prototype.encode = function () {
                      return Y.TABLE(this);
                    }),
                    (te.prototype.sizeOf = function () {
                      return ee.TABLE(this);
                    });
                  var Me = {
                    Table: te,
                    Record: te,
                    Coverage: ((me.prototype = Object.create(
                      te.prototype,
                    )).constructor = me),
                    ScriptList: ((Ce.prototype = Object.create(
                      te.prototype,
                    )).constructor = Ce),
                    FeatureList: ((Se.prototype = Object.create(
                      te.prototype,
                    )).constructor = Se),
                    LookupList: ((Pe.prototype = Object.create(
                      te.prototype,
                    )).constructor = Pe),
                    ushortList: se,
                    tableList: he,
                    recordList: ve,
                  };
                  function Be(p, w) {
                    return p.getUint8(w);
                  }
                  function ze(p, w) {
                    return p.getUint16(w, !1);
                  }
                  function We(p, w) {
                    return p.getUint32(w, !1);
                  }
                  function Qe(p, w) {
                    return p.getInt16(w, !1) + p.getUint16(w + 2, !1) / 65535;
                  }
                  var Ze = {
                    byte: 1,
                    uShort: 2,
                    short: 2,
                    uLong: 4,
                    fixed: 4,
                    longDateTime: 8,
                    tag: 4,
                  };
                  function _e(p, w) {
                    (this.data = p),
                      (this.offset = w),
                      (this.relativeOffset = 0);
                  }
                  (_e.prototype.parseByte = function () {
                    var p = this.data.getUint8(
                      this.offset + this.relativeOffset,
                    );
                    return (this.relativeOffset += 1), p;
                  }),
                    (_e.prototype.parseChar = function () {
                      var p = this.data.getInt8(
                        this.offset + this.relativeOffset,
                      );
                      return (this.relativeOffset += 1), p;
                    }),
                    (_e.prototype.parseCard8 = _e.prototype.parseByte),
                    (_e.prototype.parseCard16 = _e.prototype.parseUShort =
                      function () {
                        var p = this.data.getUint16(
                          this.offset + this.relativeOffset,
                        );
                        return (this.relativeOffset += 2), p;
                      }),
                    (_e.prototype.parseSID = _e.prototype.parseUShort),
                    (_e.prototype.parseOffset16 = _e.prototype.parseUShort),
                    (_e.prototype.parseShort = function () {
                      var p = this.data.getInt16(
                        this.offset + this.relativeOffset,
                      );
                      return (this.relativeOffset += 2), p;
                    }),
                    (_e.prototype.parseF2Dot14 = function () {
                      var p =
                        this.data.getInt16(this.offset + this.relativeOffset) /
                        16384;
                      return (this.relativeOffset += 2), p;
                    }),
                    (_e.prototype.parseOffset32 = _e.prototype.parseULong =
                      function () {
                        var p = We(
                          this.data,
                          this.offset + this.relativeOffset,
                        );
                        return (this.relativeOffset += 4), p;
                      }),
                    (_e.prototype.parseFixed = function () {
                      var p = Qe(this.data, this.offset + this.relativeOffset);
                      return (this.relativeOffset += 4), p;
                    }),
                    (_e.prototype.parseString = function (p) {
                      var w = this.data,
                        S = this.offset + this.relativeOffset,
                        E = '';
                      this.relativeOffset += p;
                      for (var I = 0; I < p; I++)
                        E += String.fromCharCode(w.getUint8(S + I));
                      return E;
                    }),
                    (_e.prototype.parseTag = function () {
                      return this.parseString(4);
                    }),
                    (_e.prototype.parseLongDateTime = function () {
                      var p = We(
                        this.data,
                        this.offset + this.relativeOffset + 4,
                      );
                      return (p -= 2082844800), (this.relativeOffset += 8), p;
                    }),
                    (_e.prototype.parseVersion = function (p) {
                      var w = ze(this.data, this.offset + this.relativeOffset),
                        S = ze(
                          this.data,
                          this.offset + this.relativeOffset + 2,
                        );
                      return (
                        (this.relativeOffset += 4),
                        w + S / (p = p === void 0 ? 4096 : p) / 10
                      );
                    }),
                    (_e.prototype.skip = function (p, w) {
                      this.relativeOffset += Ze[p] * (w = w === void 0 ? 1 : w);
                    }),
                    (_e.prototype.parseULongList = function (p) {
                      p === void 0 && (p = this.parseULong());
                      for (
                        var w = new Array(p),
                          S = this.data,
                          E = this.offset + this.relativeOffset,
                          I = 0;
                        I < p;
                        I++
                      )
                        (w[I] = S.getUint32(E)), (E += 4);
                      return (this.relativeOffset += 4 * p), w;
                    }),
                    (_e.prototype.parseOffset16List =
                      _e.prototype.parseUShortList =
                        function (p) {
                          p === void 0 && (p = this.parseUShort());
                          for (
                            var w = new Array(p),
                              S = this.data,
                              E = this.offset + this.relativeOffset,
                              I = 0;
                            I < p;
                            I++
                          )
                            (w[I] = S.getUint16(E)), (E += 2);
                          return (this.relativeOffset += 2 * p), w;
                        }),
                    (_e.prototype.parseShortList = function (p) {
                      for (
                        var w = new Array(p),
                          S = this.data,
                          E = this.offset + this.relativeOffset,
                          I = 0;
                        I < p;
                        I++
                      )
                        (w[I] = S.getInt16(E)), (E += 2);
                      return (this.relativeOffset += 2 * p), w;
                    }),
                    (_e.prototype.parseByteList = function (p) {
                      for (
                        var w = new Array(p),
                          S = this.data,
                          E = this.offset + this.relativeOffset,
                          I = 0;
                        I < p;
                        I++
                      )
                        w[I] = S.getUint8(E++);
                      return (this.relativeOffset += p), w;
                    }),
                    (_e.prototype.parseList = function (p, w) {
                      w || ((w = p), (p = this.parseUShort()));
                      for (var S = new Array(p), E = 0; E < p; E++)
                        S[E] = w.call(this);
                      return S;
                    }),
                    (_e.prototype.parseList32 = function (p, w) {
                      w || ((w = p), (p = this.parseULong()));
                      for (var S = new Array(p), E = 0; E < p; E++)
                        S[E] = w.call(this);
                      return S;
                    }),
                    (_e.prototype.parseRecordList = function (p, w) {
                      w || ((w = p), (p = this.parseUShort()));
                      for (
                        var S = new Array(p), E = Object.keys(w), I = 0;
                        I < p;
                        I++
                      ) {
                        for (var F = {}, V = 0; V < E.length; V++) {
                          var J = E[V],
                            ie = w[J];
                          F[J] = ie.call(this);
                        }
                        S[I] = F;
                      }
                      return S;
                    }),
                    (_e.prototype.parseRecordList32 = function (p, w) {
                      w || ((w = p), (p = this.parseULong()));
                      for (
                        var S = new Array(p), E = Object.keys(w), I = 0;
                        I < p;
                        I++
                      ) {
                        for (var F = {}, V = 0; V < E.length; V++) {
                          var J = E[V],
                            ie = w[J];
                          F[J] = ie.call(this);
                        }
                        S[I] = F;
                      }
                      return S;
                    }),
                    (_e.prototype.parseStruct = function (p) {
                      if (typeof p == 'function') return p.call(this);
                      for (
                        var w = Object.keys(p), S = {}, E = 0;
                        E < w.length;
                        E++
                      ) {
                        var I = w[E],
                          F = p[I];
                        S[I] = F.call(this);
                      }
                      return S;
                    }),
                    (_e.prototype.parseValueRecord = function (p) {
                      var w;
                      if ((p = p === void 0 ? this.parseUShort() : p) !== 0)
                        return (
                          (w = {}),
                          1 & p && (w.xPlacement = this.parseShort()),
                          2 & p && (w.yPlacement = this.parseShort()),
                          4 & p && (w.xAdvance = this.parseShort()),
                          8 & p && (w.yAdvance = this.parseShort()),
                          16 & p &&
                            ((w.xPlaDevice = void 0), this.parseShort()),
                          32 & p &&
                            ((w.yPlaDevice = void 0), this.parseShort()),
                          64 & p &&
                            ((w.xAdvDevice = void 0), this.parseShort()),
                          128 & p &&
                            ((w.yAdvDevice = void 0), this.parseShort()),
                          w
                        );
                    }),
                    (_e.prototype.parseValueRecordList = function () {
                      for (
                        var p = this.parseUShort(),
                          w = this.parseUShort(),
                          S = new Array(w),
                          E = 0;
                        E < w;
                        E++
                      )
                        S[E] = this.parseValueRecord(p);
                      return S;
                    }),
                    (_e.prototype.parsePointer = function (p) {
                      var w = this.parseOffset16();
                      if (0 < w)
                        return new _e(this.data, this.offset + w).parseStruct(
                          p,
                        );
                    }),
                    (_e.prototype.parsePointer32 = function (p) {
                      var w = this.parseOffset32();
                      if (0 < w)
                        return new _e(this.data, this.offset + w).parseStruct(
                          p,
                        );
                    }),
                    (_e.prototype.parseListOfLists = function (p) {
                      for (
                        var w = this.parseOffset16List(),
                          S = w.length,
                          E = this.relativeOffset,
                          I = new Array(S),
                          F = 0;
                        F < S;
                        F++
                      ) {
                        var V = w[F];
                        if (V === 0) I[F] = void 0;
                        else if (((this.relativeOffset = V), p)) {
                          for (
                            var J = this.parseOffset16List(),
                              ie = new Array(J.length),
                              oe = 0;
                            oe < J.length;
                            oe++
                          )
                            (this.relativeOffset = V + J[oe]),
                              (ie[oe] = p.call(this));
                          I[F] = ie;
                        } else I[F] = this.parseUShortList();
                      }
                      return (this.relativeOffset = E), I;
                    }),
                    (_e.prototype.parseCoverage = function () {
                      var p = this.offset + this.relativeOffset,
                        w = this.parseUShort(),
                        S = this.parseUShort();
                      if (w === 1)
                        return { format: 1, glyphs: this.parseUShortList(S) };
                      if (w !== 2)
                        throw new Error(
                          '0x' +
                            p.toString(16) +
                            ': Coverage format must be 1 or 2.',
                        );
                      for (var E = new Array(S), I = 0; I < S; I++)
                        E[I] = {
                          start: this.parseUShort(),
                          end: this.parseUShort(),
                          index: this.parseUShort(),
                        };
                      return { format: 2, ranges: E };
                    }),
                    (_e.prototype.parseClassDef = function () {
                      var p = this.offset + this.relativeOffset,
                        w = this.parseUShort();
                      if (w === 1)
                        return {
                          format: 1,
                          startGlyph: this.parseUShort(),
                          classes: this.parseUShortList(),
                        };
                      if (w === 2)
                        return {
                          format: 2,
                          ranges: this.parseRecordList({
                            start: _e.uShort,
                            end: _e.uShort,
                            classId: _e.uShort,
                          }),
                        };
                      throw new Error(
                        '0x' +
                          p.toString(16) +
                          ': ClassDef format must be 1 or 2.',
                      );
                    }),
                    (_e.list = function (p, w) {
                      return function () {
                        return this.parseList(p, w);
                      };
                    }),
                    (_e.list32 = function (p, w) {
                      return function () {
                        return this.parseList32(p, w);
                      };
                    }),
                    (_e.recordList = function (p, w) {
                      return function () {
                        return this.parseRecordList(p, w);
                      };
                    }),
                    (_e.recordList32 = function (p, w) {
                      return function () {
                        return this.parseRecordList32(p, w);
                      };
                    }),
                    (_e.pointer = function (p) {
                      return function () {
                        return this.parsePointer(p);
                      };
                    }),
                    (_e.pointer32 = function (p) {
                      return function () {
                        return this.parsePointer32(p);
                      };
                    }),
                    (_e.tag = _e.prototype.parseTag),
                    (_e.byte = _e.prototype.parseByte),
                    (_e.uShort = _e.offset16 = _e.prototype.parseUShort),
                    (_e.uShortList = _e.prototype.parseUShortList),
                    (_e.uLong = _e.offset32 = _e.prototype.parseULong),
                    (_e.uLongList = _e.prototype.parseULongList),
                    (_e.struct = _e.prototype.parseStruct),
                    (_e.coverage = _e.prototype.parseCoverage),
                    (_e.classDef = _e.prototype.parseClassDef);
                  var Ie = {
                      reserved: _e.uShort,
                      reqFeatureIndex: _e.uShort,
                      featureIndexes: _e.uShortList,
                    },
                    xe =
                      ((_e.prototype.parseScriptList = function () {
                        return (
                          this.parsePointer(
                            _e.recordList({
                              tag: _e.tag,
                              script: _e.pointer({
                                defaultLangSys: _e.pointer(Ie),
                                langSysRecords: _e.recordList({
                                  tag: _e.tag,
                                  langSys: _e.pointer(Ie),
                                }),
                              }),
                            }),
                          ) || []
                        );
                      }),
                      (_e.prototype.parseFeatureList = function () {
                        return (
                          this.parsePointer(
                            _e.recordList({
                              tag: _e.tag,
                              feature: _e.pointer({
                                featureParams: _e.offset16,
                                lookupListIndexes: _e.uShortList,
                              }),
                            }),
                          ) || []
                        );
                      }),
                      (_e.prototype.parseLookupList = function (p) {
                        return (
                          this.parsePointer(
                            _e.list(
                              _e.pointer(function () {
                                var w = this.parseUShort(),
                                  S =
                                    (L.argument(
                                      1 <= w && w <= 9,
                                      'GPOS/GSUB lookup type ' +
                                        w +
                                        ' unknown.',
                                    ),
                                    this.parseUShort()),
                                  E = 16 & S;
                                return {
                                  lookupType: w,
                                  lookupFlag: S,
                                  subtables: this.parseList(_e.pointer(p[w])),
                                  markFilteringSet: E
                                    ? this.parseUShort()
                                    : void 0,
                                };
                              }),
                            ),
                          ) || []
                        );
                      }),
                      (_e.prototype.parseFeatureVariationsList = function () {
                        return (
                          this.parsePointer32(function () {
                            var p = this.parseUShort(),
                              w = this.parseUShort();
                            return (
                              L.argument(
                                p === 1 && w < 1,
                                'GPOS/GSUB feature variations table unknown.',
                              ),
                              this.parseRecordList32({
                                conditionSetOffset: _e.offset32,
                                featureTableSubstitutionOffset: _e.offset32,
                              })
                            );
                          }) || []
                        );
                      }),
                      {
                        getByte: Be,
                        getCard8: Be,
                        getUShort: ze,
                        getCard16: ze,
                        getShort: function (p, w) {
                          return p.getInt16(w, !1);
                        },
                        getULong: We,
                        getFixed: Qe,
                        getTag: function (p, w) {
                          for (var S = '', E = w; E < w + 4; E += 1)
                            S += String.fromCharCode(p.getInt8(E));
                          return S;
                        },
                        getOffset: function (p, w, S) {
                          for (var E = 0, I = 0; I < S; I += 1)
                            E = (E <<= 8) + p.getUint8(w + I);
                          return E;
                        },
                        getBytes: function (p, w, S) {
                          for (var E = [], I = w; I < S; I += 1)
                            E.push(p.getUint8(I));
                          return E;
                        },
                        bytesToString: function (p) {
                          for (var w = '', S = 0; S < p.length; S += 1)
                            w += String.fromCharCode(p[S]);
                          return w;
                        },
                        Parser: _e,
                      }),
                    Q = {
                      parse: function (p, w) {
                        for (
                          var S = {},
                            E =
                              ((S.version = xe.getUShort(p, w)),
                              L.argument(
                                S.version === 0,
                                'cmap table version should be 0.',
                              ),
                              (S.numTables = xe.getUShort(p, w + 2)),
                              -1),
                            I = S.numTables - 1;
                          0 <= I;
                          --I
                        ) {
                          var F = xe.getUShort(p, w + 4 + 8 * I),
                            V = xe.getUShort(p, w + 4 + 8 * I + 2);
                          if (
                            (F === 3 && (V === 0 || V === 1 || V === 10)) ||
                            (F === 0 &&
                              (V === 0 ||
                                V === 1 ||
                                V === 2 ||
                                V === 3 ||
                                V === 4))
                          ) {
                            E = xe.getULong(p, w + 4 + 8 * I + 4);
                            break;
                          }
                        }
                        if (E === -1)
                          throw new Error('No valid cmap sub-tables found.');
                        var J = new xe.Parser(p, w + E);
                        if (((S.format = J.parseUShort()), S.format === 12)) {
                          var ie,
                            oe = S,
                            ye = J;
                          ye.parseUShort(),
                            (oe.length = ye.parseULong()),
                            (oe.language = ye.parseULong()),
                            (oe.groupCount = ie = ye.parseULong()),
                            (oe.glyphIndexMap = {});
                          for (var Te = 0; Te < ie; Te += 1)
                            for (
                              var we = ye.parseULong(),
                                de = ye.parseULong(),
                                De = ye.parseULong(),
                                Oe = we;
                              Oe <= de;
                              Oe += 1
                            )
                              (oe.glyphIndexMap[Oe] = De), De++;
                        } else {
                          if (S.format !== 4)
                            throw new Error(
                              'Only format 4 and 12 cmap tables are supported (found format ' +
                                S.format +
                                ').',
                            );
                          var Re = S,
                            Ee = p,
                            ke = w,
                            et = E;
                          (Re.length = J.parseUShort()),
                            (Re.language = J.parseUShort()),
                            (Re.segCount = it = J.parseUShort() >> 1),
                            J.skip('uShort', 3),
                            (Re.glyphIndexMap = {});
                          for (
                            var it,
                              tt = new xe.Parser(Ee, ke + et + 14),
                              rt = new xe.Parser(Ee, ke + et + 16 + 2 * it),
                              lt = new xe.Parser(Ee, ke + et + 16 + 4 * it),
                              St = new xe.Parser(Ee, ke + et + 16 + 6 * it),
                              Dt = ke + et + 16 + 8 * it,
                              qt = 0;
                            qt < it - 1;
                            qt += 1
                          )
                            for (
                              var ir = void 0,
                                ar = tt.parseUShort(),
                                jr = rt.parseUShort(),
                                wt = lt.parseShort(),
                                Et = St.parseUShort(),
                                gt = jr;
                              gt <= ar;
                              gt += 1
                            )
                              Et !== 0
                                ? ((Dt =
                                    (Dt = St.offset + St.relativeOffset - 2) +
                                    Et +
                                    2 * (gt - jr)),
                                  (ir = xe.getUShort(Ee, Dt)) !== 0 &&
                                    (ir = (ir + wt) & 65535))
                                : (ir = (gt + wt) & 65535),
                                (Re.glyphIndexMap[gt] = ir);
                        }
                        return S;
                      },
                      make: function (p) {
                        for (var w = !0, S = p.length - 1; 0 < S; --S)
                          if (65535 < p.get(S).unicode) {
                            console.log('Adding CMAP format 12 (needed!)'),
                              (w = !1);
                            break;
                          }
                        var E,
                          I,
                          F = [
                            { name: 'version', type: 'USHORT', value: 0 },
                            {
                              name: 'numTables',
                              type: 'USHORT',
                              value: w ? 1 : 2,
                            },
                            { name: 'platformID', type: 'USHORT', value: 3 },
                            { name: 'encodingID', type: 'USHORT', value: 1 },
                            {
                              name: 'offset',
                              type: 'ULONG',
                              value: w ? 12 : 20,
                            },
                          ],
                          V =
                            ((F = (F = w
                              ? F
                              : F.concat([
                                  {
                                    name: 'cmap12PlatformID',
                                    type: 'USHORT',
                                    value: 3,
                                  },
                                  {
                                    name: 'cmap12EncodingID',
                                    type: 'USHORT',
                                    value: 10,
                                  },
                                  {
                                    name: 'cmap12Offset',
                                    type: 'ULONG',
                                    value: 0,
                                  },
                                ])).concat([
                              { name: 'format', type: 'USHORT', value: 4 },
                              { name: 'cmap4Length', type: 'USHORT', value: 0 },
                              { name: 'language', type: 'USHORT', value: 0 },
                              { name: 'segCountX2', type: 'USHORT', value: 0 },
                              { name: 'searchRange', type: 'USHORT', value: 0 },
                              {
                                name: 'entrySelector',
                                type: 'USHORT',
                                value: 0,
                              },
                              { name: 'rangeShift', type: 'USHORT', value: 0 },
                            ])),
                            new Me.Table('cmap', F));
                        for (V.segments = [], S = 0; S < p.length; S += 1) {
                          for (
                            var J = p.get(S), ie = 0;
                            ie < J.unicodes.length;
                            ie += 1
                          )
                            (E = J.unicodes[ie]),
                              (I = S),
                              V.segments.push({
                                end: E,
                                start: E,
                                delta: -(E - I),
                                offset: 0,
                                glyphIndex: I,
                              });
                          V.segments = V.segments.sort(function (ke, et) {
                            return ke.start - et.start;
                          });
                        }
                        V.segments.push({
                          end: 65535,
                          start: 65535,
                          delta: 1,
                          offset: 0,
                        });
                        var oe = V.segments.length,
                          ye = 0,
                          Te = [],
                          we = [],
                          de = [],
                          De = [],
                          Oe = [],
                          Re = [];
                        for (S = 0; S < oe; S += 1) {
                          var Ee = V.segments[S];
                          Ee.end <= 65535 && Ee.start <= 65535
                            ? ((Te = Te.concat({
                                name: 'end_' + S,
                                type: 'USHORT',
                                value: Ee.end,
                              })),
                              (we = we.concat({
                                name: 'start_' + S,
                                type: 'USHORT',
                                value: Ee.start,
                              })),
                              (de = de.concat({
                                name: 'idDelta_' + S,
                                type: 'SHORT',
                                value: Ee.delta,
                              })),
                              (De = De.concat({
                                name: 'idRangeOffset_' + S,
                                type: 'USHORT',
                                value: Ee.offset,
                              })),
                              Ee.glyphId !== void 0 &&
                                (Oe = Oe.concat({
                                  name: 'glyph_' + S,
                                  type: 'USHORT',
                                  value: Ee.glyphId,
                                })))
                            : (ye += 1),
                            w ||
                              Ee.glyphIndex === void 0 ||
                              (Re = (Re = (Re = Re.concat({
                                name: 'cmap12Start_' + S,
                                type: 'ULONG',
                                value: Ee.start,
                              })).concat({
                                name: 'cmap12End_' + S,
                                type: 'ULONG',
                                value: Ee.end,
                              })).concat({
                                name: 'cmap12Glyph_' + S,
                                type: 'ULONG',
                                value: Ee.glyphIndex,
                              }));
                        }
                        return (
                          (V.segCountX2 = 2 * (oe - ye)),
                          (V.searchRange =
                            2 *
                            Math.pow(
                              2,
                              Math.floor(Math.log(oe - ye) / Math.log(2)),
                            )),
                          (V.entrySelector =
                            Math.log(V.searchRange / 2) / Math.log(2)),
                          (V.rangeShift = V.segCountX2 - V.searchRange),
                          (V.fields = V.fields.concat(Te)),
                          V.fields.push({
                            name: 'reservedPad',
                            type: 'USHORT',
                            value: 0,
                          }),
                          (V.fields = V.fields.concat(we)),
                          (V.fields = V.fields.concat(de)),
                          (V.fields = V.fields.concat(De)),
                          (V.fields = V.fields.concat(Oe)),
                          (V.cmap4Length =
                            14 +
                            2 * Te.length +
                            2 +
                            2 * we.length +
                            2 * de.length +
                            2 * De.length +
                            2 * Oe.length),
                          w ||
                            ((F = 16 + 4 * Re.length),
                            (V.cmap12Offset = 20 + V.cmap4Length),
                            (V.fields = V.fields.concat([
                              {
                                name: 'cmap12Format',
                                type: 'USHORT',
                                value: 12,
                              },
                              {
                                name: 'cmap12Reserved',
                                type: 'USHORT',
                                value: 0,
                              },
                              { name: 'cmap12Length', type: 'ULONG', value: F },
                              {
                                name: 'cmap12Language',
                                type: 'ULONG',
                                value: 0,
                              },
                              {
                                name: 'cmap12nGroups',
                                type: 'ULONG',
                                value: Re.length / 3,
                              },
                            ])),
                            (V.fields = V.fields.concat(Re))),
                          V
                        );
                      },
                    },
                    K = [
                      '.notdef',
                      'space',
                      'exclam',
                      'quotedbl',
                      'numbersign',
                      'dollar',
                      'percent',
                      'ampersand',
                      'quoteright',
                      'parenleft',
                      'parenright',
                      'asterisk',
                      'plus',
                      'comma',
                      'hyphen',
                      'period',
                      'slash',
                      'zero',
                      'one',
                      'two',
                      'three',
                      'four',
                      'five',
                      'six',
                      'seven',
                      'eight',
                      'nine',
                      'colon',
                      'semicolon',
                      'less',
                      'equal',
                      'greater',
                      'question',
                      'at',
                      'A',
                      'B',
                      'C',
                      'D',
                      'E',
                      'F',
                      'G',
                      'H',
                      'I',
                      'J',
                      'K',
                      'L',
                      'M',
                      'N',
                      'O',
                      'P',
                      'Q',
                      'R',
                      'S',
                      'T',
                      'U',
                      'V',
                      'W',
                      'X',
                      'Y',
                      'Z',
                      'bracketleft',
                      'backslash',
                      'bracketright',
                      'asciicircum',
                      'underscore',
                      'quoteleft',
                      'a',
                      'b',
                      'c',
                      'd',
                      'e',
                      'f',
                      'g',
                      'h',
                      'i',
                      'j',
                      'k',
                      'l',
                      'm',
                      'n',
                      'o',
                      'p',
                      'q',
                      'r',
                      's',
                      't',
                      'u',
                      'v',
                      'w',
                      'x',
                      'y',
                      'z',
                      'braceleft',
                      'bar',
                      'braceright',
                      'asciitilde',
                      'exclamdown',
                      'cent',
                      'sterling',
                      'fraction',
                      'yen',
                      'florin',
                      'section',
                      'currency',
                      'quotesingle',
                      'quotedblleft',
                      'guillemotleft',
                      'guilsinglleft',
                      'guilsinglright',
                      'fi',
                      'fl',
                      'endash',
                      'dagger',
                      'daggerdbl',
                      'periodcentered',
                      'paragraph',
                      'bullet',
                      'quotesinglbase',
                      'quotedblbase',
                      'quotedblright',
                      'guillemotright',
                      'ellipsis',
                      'perthousand',
                      'questiondown',
                      'grave',
                      'acute',
                      'circumflex',
                      'tilde',
                      'macron',
                      'breve',
                      'dotaccent',
                      'dieresis',
                      'ring',
                      'cedilla',
                      'hungarumlaut',
                      'ogonek',
                      'caron',
                      'emdash',
                      'AE',
                      'ordfeminine',
                      'Lslash',
                      'Oslash',
                      'OE',
                      'ordmasculine',
                      'ae',
                      'dotlessi',
                      'lslash',
                      'oslash',
                      'oe',
                      'germandbls',
                      'onesuperior',
                      'logicalnot',
                      'mu',
                      'trademark',
                      'Eth',
                      'onehalf',
                      'plusminus',
                      'Thorn',
                      'onequarter',
                      'divide',
                      'brokenbar',
                      'degree',
                      'thorn',
                      'threequarters',
                      'twosuperior',
                      'registered',
                      'minus',
                      'eth',
                      'multiply',
                      'threesuperior',
                      'copyright',
                      'Aacute',
                      'Acircumflex',
                      'Adieresis',
                      'Agrave',
                      'Aring',
                      'Atilde',
                      'Ccedilla',
                      'Eacute',
                      'Ecircumflex',
                      'Edieresis',
                      'Egrave',
                      'Iacute',
                      'Icircumflex',
                      'Idieresis',
                      'Igrave',
                      'Ntilde',
                      'Oacute',
                      'Ocircumflex',
                      'Odieresis',
                      'Ograve',
                      'Otilde',
                      'Scaron',
                      'Uacute',
                      'Ucircumflex',
                      'Udieresis',
                      'Ugrave',
                      'Yacute',
                      'Ydieresis',
                      'Zcaron',
                      'aacute',
                      'acircumflex',
                      'adieresis',
                      'agrave',
                      'aring',
                      'atilde',
                      'ccedilla',
                      'eacute',
                      'ecircumflex',
                      'edieresis',
                      'egrave',
                      'iacute',
                      'icircumflex',
                      'idieresis',
                      'igrave',
                      'ntilde',
                      'oacute',
                      'ocircumflex',
                      'odieresis',
                      'ograve',
                      'otilde',
                      'scaron',
                      'uacute',
                      'ucircumflex',
                      'udieresis',
                      'ugrave',
                      'yacute',
                      'ydieresis',
                      'zcaron',
                      'exclamsmall',
                      'Hungarumlautsmall',
                      'dollaroldstyle',
                      'dollarsuperior',
                      'ampersandsmall',
                      'Acutesmall',
                      'parenleftsuperior',
                      'parenrightsuperior',
                      '266 ff',
                      'onedotenleader',
                      'zerooldstyle',
                      'oneoldstyle',
                      'twooldstyle',
                      'threeoldstyle',
                      'fouroldstyle',
                      'fiveoldstyle',
                      'sixoldstyle',
                      'sevenoldstyle',
                      'eightoldstyle',
                      'nineoldstyle',
                      'commasuperior',
                      'threequartersemdash',
                      'periodsuperior',
                      'questionsmall',
                      'asuperior',
                      'bsuperior',
                      'centsuperior',
                      'dsuperior',
                      'esuperior',
                      'isuperior',
                      'lsuperior',
                      'msuperior',
                      'nsuperior',
                      'osuperior',
                      'rsuperior',
                      'ssuperior',
                      'tsuperior',
                      'ff',
                      'ffi',
                      'ffl',
                      'parenleftinferior',
                      'parenrightinferior',
                      'Circumflexsmall',
                      'hyphensuperior',
                      'Gravesmall',
                      'Asmall',
                      'Bsmall',
                      'Csmall',
                      'Dsmall',
                      'Esmall',
                      'Fsmall',
                      'Gsmall',
                      'Hsmall',
                      'Ismall',
                      'Jsmall',
                      'Ksmall',
                      'Lsmall',
                      'Msmall',
                      'Nsmall',
                      'Osmall',
                      'Psmall',
                      'Qsmall',
                      'Rsmall',
                      'Ssmall',
                      'Tsmall',
                      'Usmall',
                      'Vsmall',
                      'Wsmall',
                      'Xsmall',
                      'Ysmall',
                      'Zsmall',
                      'colonmonetary',
                      'onefitted',
                      'rupiah',
                      'Tildesmall',
                      'exclamdownsmall',
                      'centoldstyle',
                      'Lslashsmall',
                      'Scaronsmall',
                      'Zcaronsmall',
                      'Dieresissmall',
                      'Brevesmall',
                      'Caronsmall',
                      'Dotaccentsmall',
                      'Macronsmall',
                      'figuredash',
                      'hypheninferior',
                      'Ogoneksmall',
                      'Ringsmall',
                      'Cedillasmall',
                      'questiondownsmall',
                      'oneeighth',
                      'threeeighths',
                      'fiveeighths',
                      'seveneighths',
                      'onethird',
                      'twothirds',
                      'zerosuperior',
                      'foursuperior',
                      'fivesuperior',
                      'sixsuperior',
                      'sevensuperior',
                      'eightsuperior',
                      'ninesuperior',
                      'zeroinferior',
                      'oneinferior',
                      'twoinferior',
                      'threeinferior',
                      'fourinferior',
                      'fiveinferior',
                      'sixinferior',
                      'seveninferior',
                      'eightinferior',
                      'nineinferior',
                      'centinferior',
                      'dollarinferior',
                      'periodinferior',
                      'commainferior',
                      'Agravesmall',
                      'Aacutesmall',
                      'Acircumflexsmall',
                      'Atildesmall',
                      'Adieresissmall',
                      'Aringsmall',
                      'AEsmall',
                      'Ccedillasmall',
                      'Egravesmall',
                      'Eacutesmall',
                      'Ecircumflexsmall',
                      'Edieresissmall',
                      'Igravesmall',
                      'Iacutesmall',
                      'Icircumflexsmall',
                      'Idieresissmall',
                      'Ethsmall',
                      'Ntildesmall',
                      'Ogravesmall',
                      'Oacutesmall',
                      'Ocircumflexsmall',
                      'Otildesmall',
                      'Odieresissmall',
                      'OEsmall',
                      'Oslashsmall',
                      'Ugravesmall',
                      'Uacutesmall',
                      'Ucircumflexsmall',
                      'Udieresissmall',
                      'Yacutesmall',
                      'Thornsmall',
                      'Ydieresissmall',
                      '001.000',
                      '001.001',
                      '001.002',
                      '001.003',
                      'Black',
                      'Bold',
                      'Book',
                      'Light',
                      'Medium',
                      'Regular',
                      'Roman',
                      'Semibold',
                    ],
                    G = [
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'space',
                      'exclam',
                      'quotedbl',
                      'numbersign',
                      'dollar',
                      'percent',
                      'ampersand',
                      'quoteright',
                      'parenleft',
                      'parenright',
                      'asterisk',
                      'plus',
                      'comma',
                      'hyphen',
                      'period',
                      'slash',
                      'zero',
                      'one',
                      'two',
                      'three',
                      'four',
                      'five',
                      'six',
                      'seven',
                      'eight',
                      'nine',
                      'colon',
                      'semicolon',
                      'less',
                      'equal',
                      'greater',
                      'question',
                      'at',
                      'A',
                      'B',
                      'C',
                      'D',
                      'E',
                      'F',
                      'G',
                      'H',
                      'I',
                      'J',
                      'K',
                      'L',
                      'M',
                      'N',
                      'O',
                      'P',
                      'Q',
                      'R',
                      'S',
                      'T',
                      'U',
                      'V',
                      'W',
                      'X',
                      'Y',
                      'Z',
                      'bracketleft',
                      'backslash',
                      'bracketright',
                      'asciicircum',
                      'underscore',
                      'quoteleft',
                      'a',
                      'b',
                      'c',
                      'd',
                      'e',
                      'f',
                      'g',
                      'h',
                      'i',
                      'j',
                      'k',
                      'l',
                      'm',
                      'n',
                      'o',
                      'p',
                      'q',
                      'r',
                      's',
                      't',
                      'u',
                      'v',
                      'w',
                      'x',
                      'y',
                      'z',
                      'braceleft',
                      'bar',
                      'braceright',
                      'asciitilde',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'exclamdown',
                      'cent',
                      'sterling',
                      'fraction',
                      'yen',
                      'florin',
                      'section',
                      'currency',
                      'quotesingle',
                      'quotedblleft',
                      'guillemotleft',
                      'guilsinglleft',
                      'guilsinglright',
                      'fi',
                      'fl',
                      '',
                      'endash',
                      'dagger',
                      'daggerdbl',
                      'periodcentered',
                      '',
                      'paragraph',
                      'bullet',
                      'quotesinglbase',
                      'quotedblbase',
                      'quotedblright',
                      'guillemotright',
                      'ellipsis',
                      'perthousand',
                      '',
                      'questiondown',
                      '',
                      'grave',
                      'acute',
                      'circumflex',
                      'tilde',
                      'macron',
                      'breve',
                      'dotaccent',
                      'dieresis',
                      '',
                      'ring',
                      'cedilla',
                      '',
                      'hungarumlaut',
                      'ogonek',
                      'caron',
                      'emdash',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'AE',
                      '',
                      'ordfeminine',
                      '',
                      '',
                      '',
                      '',
                      'Lslash',
                      'Oslash',
                      'OE',
                      'ordmasculine',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'ae',
                      '',
                      '',
                      '',
                      'dotlessi',
                      '',
                      '',
                      'lslash',
                      'oslash',
                      'oe',
                      'germandbls',
                    ],
                    re = [
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'space',
                      'exclamsmall',
                      'Hungarumlautsmall',
                      '',
                      'dollaroldstyle',
                      'dollarsuperior',
                      'ampersandsmall',
                      'Acutesmall',
                      'parenleftsuperior',
                      'parenrightsuperior',
                      'twodotenleader',
                      'onedotenleader',
                      'comma',
                      'hyphen',
                      'period',
                      'fraction',
                      'zerooldstyle',
                      'oneoldstyle',
                      'twooldstyle',
                      'threeoldstyle',
                      'fouroldstyle',
                      'fiveoldstyle',
                      'sixoldstyle',
                      'sevenoldstyle',
                      'eightoldstyle',
                      'nineoldstyle',
                      'colon',
                      'semicolon',
                      'commasuperior',
                      'threequartersemdash',
                      'periodsuperior',
                      'questionsmall',
                      '',
                      'asuperior',
                      'bsuperior',
                      'centsuperior',
                      'dsuperior',
                      'esuperior',
                      '',
                      '',
                      'isuperior',
                      '',
                      '',
                      'lsuperior',
                      'msuperior',
                      'nsuperior',
                      'osuperior',
                      '',
                      '',
                      'rsuperior',
                      'ssuperior',
                      'tsuperior',
                      '',
                      'ff',
                      'fi',
                      'fl',
                      'ffi',
                      'ffl',
                      'parenleftinferior',
                      '',
                      'parenrightinferior',
                      'Circumflexsmall',
                      'hyphensuperior',
                      'Gravesmall',
                      'Asmall',
                      'Bsmall',
                      'Csmall',
                      'Dsmall',
                      'Esmall',
                      'Fsmall',
                      'Gsmall',
                      'Hsmall',
                      'Ismall',
                      'Jsmall',
                      'Ksmall',
                      'Lsmall',
                      'Msmall',
                      'Nsmall',
                      'Osmall',
                      'Psmall',
                      'Qsmall',
                      'Rsmall',
                      'Ssmall',
                      'Tsmall',
                      'Usmall',
                      'Vsmall',
                      'Wsmall',
                      'Xsmall',
                      'Ysmall',
                      'Zsmall',
                      'colonmonetary',
                      'onefitted',
                      'rupiah',
                      'Tildesmall',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      '',
                      'exclamdownsmall',
                      'centoldstyle',
                      'Lslashsmall',
                      '',
                      '',
                      'Scaronsmall',
                      'Zcaronsmall',
                      'Dieresissmall',
                      'Brevesmall',
                      'Caronsmall',
                      '',
                      'Dotaccentsmall',
                      '',
                      '',
                      'Macronsmall',
                      '',
                      '',
                      'figuredash',
                      'hypheninferior',
                      '',
                      '',
                      'Ogoneksmall',
                      'Ringsmall',
                      'Cedillasmall',
                      '',
                      '',
                      '',
                      'onequarter',
                      'onehalf',
                      'threequarters',
                      'questiondownsmall',
                      'oneeighth',
                      'threeeighths',
                      'fiveeighths',
                      'seveneighths',
                      'onethird',
                      'twothirds',
                      '',
                      '',
                      'zerosuperior',
                      'onesuperior',
                      'twosuperior',
                      'threesuperior',
                      'foursuperior',
                      'fivesuperior',
                      'sixsuperior',
                      'sevensuperior',
                      'eightsuperior',
                      'ninesuperior',
                      'zeroinferior',
                      'oneinferior',
                      'twoinferior',
                      'threeinferior',
                      'fourinferior',
                      'fiveinferior',
                      'sixinferior',
                      'seveninferior',
                      'eightinferior',
                      'nineinferior',
                      'centinferior',
                      'dollarinferior',
                      'periodinferior',
                      'commainferior',
                      'Agravesmall',
                      'Aacutesmall',
                      'Acircumflexsmall',
                      'Atildesmall',
                      'Adieresissmall',
                      'Aringsmall',
                      'AEsmall',
                      'Ccedillasmall',
                      'Egravesmall',
                      'Eacutesmall',
                      'Ecircumflexsmall',
                      'Edieresissmall',
                      'Igravesmall',
                      'Iacutesmall',
                      'Icircumflexsmall',
                      'Idieresissmall',
                      'Ethsmall',
                      'Ntildesmall',
                      'Ogravesmall',
                      'Oacutesmall',
                      'Ocircumflexsmall',
                      'Otildesmall',
                      'Odieresissmall',
                      'OEsmall',
                      'Oslashsmall',
                      'Ugravesmall',
                      'Uacutesmall',
                      'Ucircumflexsmall',
                      'Udieresissmall',
                      'Yacutesmall',
                      'Thornsmall',
                      'Ydieresissmall',
                    ],
                    ge = [
                      '.notdef',
                      '.null',
                      'nonmarkingreturn',
                      'space',
                      'exclam',
                      'quotedbl',
                      'numbersign',
                      'dollar',
                      'percent',
                      'ampersand',
                      'quotesingle',
                      'parenleft',
                      'parenright',
                      'asterisk',
                      'plus',
                      'comma',
                      'hyphen',
                      'period',
                      'slash',
                      'zero',
                      'one',
                      'two',
                      'three',
                      'four',
                      'five',
                      'six',
                      'seven',
                      'eight',
                      'nine',
                      'colon',
                      'semicolon',
                      'less',
                      'equal',
                      'greater',
                      'question',
                      'at',
                      'A',
                      'B',
                      'C',
                      'D',
                      'E',
                      'F',
                      'G',
                      'H',
                      'I',
                      'J',
                      'K',
                      'L',
                      'M',
                      'N',
                      'O',
                      'P',
                      'Q',
                      'R',
                      'S',
                      'T',
                      'U',
                      'V',
                      'W',
                      'X',
                      'Y',
                      'Z',
                      'bracketleft',
                      'backslash',
                      'bracketright',
                      'asciicircum',
                      'underscore',
                      'grave',
                      'a',
                      'b',
                      'c',
                      'd',
                      'e',
                      'f',
                      'g',
                      'h',
                      'i',
                      'j',
                      'k',
                      'l',
                      'm',
                      'n',
                      'o',
                      'p',
                      'q',
                      'r',
                      's',
                      't',
                      'u',
                      'v',
                      'w',
                      'x',
                      'y',
                      'z',
                      'braceleft',
                      'bar',
                      'braceright',
                      'asciitilde',
                      'Adieresis',
                      'Aring',
                      'Ccedilla',
                      'Eacute',
                      'Ntilde',
                      'Odieresis',
                      'Udieresis',
                      'aacute',
                      'agrave',
                      'acircumflex',
                      'adieresis',
                      'atilde',
                      'aring',
                      'ccedilla',
                      'eacute',
                      'egrave',
                      'ecircumflex',
                      'edieresis',
                      'iacute',
                      'igrave',
                      'icircumflex',
                      'idieresis',
                      'ntilde',
                      'oacute',
                      'ograve',
                      'ocircumflex',
                      'odieresis',
                      'otilde',
                      'uacute',
                      'ugrave',
                      'ucircumflex',
                      'udieresis',
                      'dagger',
                      'degree',
                      'cent',
                      'sterling',
                      'section',
                      'bullet',
                      'paragraph',
                      'germandbls',
                      'registered',
                      'copyright',
                      'trademark',
                      'acute',
                      'dieresis',
                      'notequal',
                      'AE',
                      'Oslash',
                      'infinity',
                      'plusminus',
                      'lessequal',
                      'greaterequal',
                      'yen',
                      'mu',
                      'partialdiff',
                      'summation',
                      'product',
                      'pi',
                      'integral',
                      'ordfeminine',
                      'ordmasculine',
                      'Omega',
                      'ae',
                      'oslash',
                      'questiondown',
                      'exclamdown',
                      'logicalnot',
                      'radical',
                      'florin',
                      'approxequal',
                      'Delta',
                      'guillemotleft',
                      'guillemotright',
                      'ellipsis',
                      'nonbreakingspace',
                      'Agrave',
                      'Atilde',
                      'Otilde',
                      'OE',
                      'oe',
                      'endash',
                      'emdash',
                      'quotedblleft',
                      'quotedblright',
                      'quoteleft',
                      'quoteright',
                      'divide',
                      'lozenge',
                      'ydieresis',
                      'Ydieresis',
                      'fraction',
                      'currency',
                      'guilsinglleft',
                      'guilsinglright',
                      'fi',
                      'fl',
                      'daggerdbl',
                      'periodcentered',
                      'quotesinglbase',
                      'quotedblbase',
                      'perthousand',
                      'Acircumflex',
                      'Ecircumflex',
                      'Aacute',
                      'Edieresis',
                      'Egrave',
                      'Iacute',
                      'Icircumflex',
                      'Idieresis',
                      'Igrave',
                      'Oacute',
                      'Ocircumflex',
                      'apple',
                      'Ograve',
                      'Uacute',
                      'Ucircumflex',
                      'Ugrave',
                      'dotlessi',
                      'circumflex',
                      'tilde',
                      'macron',
                      'breve',
                      'dotaccent',
                      'ring',
                      'cedilla',
                      'hungarumlaut',
                      'ogonek',
                      'caron',
                      'Lslash',
                      'lslash',
                      'Scaron',
                      'scaron',
                      'Zcaron',
                      'zcaron',
                      'brokenbar',
                      'Eth',
                      'eth',
                      'Yacute',
                      'yacute',
                      'Thorn',
                      'thorn',
                      'minus',
                      'multiply',
                      'onesuperior',
                      'twosuperior',
                      'threesuperior',
                      'onehalf',
                      'onequarter',
                      'threequarters',
                      'franc',
                      'Gbreve',
                      'gbreve',
                      'Idotaccent',
                      'Scedilla',
                      'scedilla',
                      'Cacute',
                      'cacute',
                      'Ccaron',
                      'ccaron',
                      'dcroat',
                    ];
                  function je(p) {
                    this.font = p;
                  }
                  function Ae(p) {
                    this.cmap = p;
                  }
                  function Fe(p, w) {
                    (this.encoding = p), (this.charset = w);
                  }
                  function Ve(p) {
                    switch (p.version) {
                      case 1:
                        this.names = ge.slice();
                        break;
                      case 2:
                        this.names = new Array(p.numberOfGlyphs);
                        for (var w = 0; w < p.numberOfGlyphs; w++)
                          p.glyphNameIndex[w] < ge.length
                            ? (this.names[w] = ge[p.glyphNameIndex[w]])
                            : (this.names[w] =
                                p.names[p.glyphNameIndex[w] - ge.length]);
                        break;
                      case 2.5:
                        this.names = new Array(p.numberOfGlyphs);
                        for (var S = 0; S < p.numberOfGlyphs; S++)
                          this.names[S] = ge[S + p.glyphNameIndex[S]];
                        break;
                      default:
                        this.names = [];
                    }
                  }
                  (je.prototype.charToGlyphIndex = function (p) {
                    var w = p.codePointAt(0),
                      S = this.font.glyphs;
                    if (S) {
                      for (var E = 0; E < S.length; E += 1)
                        for (
                          var I = S.get(E), F = 0;
                          F < I.unicodes.length;
                          F += 1
                        )
                          if (I.unicodes[F] === w) return E;
                    }
                    return null;
                  }),
                    (Ae.prototype.charToGlyphIndex = function (p) {
                      return this.cmap.glyphIndexMap[p.codePointAt(0)] || 0;
                    }),
                    (Fe.prototype.charToGlyphIndex = function (p) {
                      return (
                        (p = p.codePointAt(0)),
                        (p = this.encoding[p]),
                        this.charset.indexOf(p)
                      );
                    }),
                    (Ve.prototype.nameToGlyphIndex = function (p) {
                      return this.names.indexOf(p);
                    }),
                    (Ve.prototype.glyphIndexToName = function (p) {
                      return this.names[p];
                    });
                  var Ge = {
                    line: function (p, w, S, E, I) {
                      p.beginPath(), p.moveTo(w, S), p.lineTo(E, I), p.stroke();
                    },
                  };
                  function Xe(p) {
                    this.bindConstructorValues(p);
                  }
                  function at(p, w, S) {
                    Object.defineProperty(p, w, {
                      get: function () {
                        return p.path, p[S];
                      },
                      set: function (E) {
                        p[S] = E;
                      },
                      enumerable: !0,
                      configurable: !0,
                    });
                  }
                  function st(p, w) {
                    if (((this.font = p), (this.glyphs = {}), Array.isArray(w)))
                      for (var S = 0; S < w.length; S++) this.glyphs[S] = w[S];
                    this.length = (w && w.length) || 0;
                  }
                  (Xe.prototype.bindConstructorValues = function (p) {
                    var w;
                    (this.index = p.index || 0),
                      (this.name = p.name || null),
                      (this.unicode = p.unicode || void 0),
                      (this.unicodes =
                        p.unicodes || p.unicode !== void 0 ? [p.unicode] : []),
                      p.xMin && (this.xMin = p.xMin),
                      p.yMin && (this.yMin = p.yMin),
                      p.xMax && (this.xMax = p.xMax),
                      p.yMax && (this.yMax = p.yMax),
                      p.advanceWidth && (this.advanceWidth = p.advanceWidth),
                      Object.defineProperty(
                        this,
                        'path',
                        ((p = p.path),
                        (w = p || new $()),
                        {
                          configurable: !0,
                          get: function () {
                            return (w = typeof w == 'function' ? w() : w);
                          },
                          set: function (S) {
                            w = S;
                          },
                        }),
                      );
                  }),
                    (Xe.prototype.addUnicode = function (p) {
                      this.unicodes.length === 0 && (this.unicode = p),
                        this.unicodes.push(p);
                    }),
                    (Xe.prototype.getBoundingBox = function () {
                      return this.path.getBoundingBox();
                    }),
                    (Xe.prototype.getPath = function (p, w, S, E, I) {
                      (p = p !== void 0 ? p : 0),
                        (w = w !== void 0 ? w : 0),
                        (S = S !== void 0 ? S : 72);
                      for (
                        var F,
                          V,
                          J = (E = E || {}).xScale,
                          ie = E.yScale,
                          oe =
                            ((F =
                              E.hinting && I && I.hinting
                                ? this.path && I.hinting.exec(this, S)
                                : F)
                              ? ((V = I.hinting.getCommands(F)),
                                (p = Math.round(p)),
                                (w = Math.round(w)),
                                (J = ie = 1))
                              : ((V = this.path.commands),
                                (E = (1 / this.path.unitsPerEm) * S),
                                J === void 0 && (J = E),
                                ie === void 0 && (ie = E)),
                            new $()),
                          ye = 0;
                        ye < V.length;
                        ye += 1
                      ) {
                        var Te = V[ye];
                        Te.type === 'M'
                          ? oe.moveTo(p + Te.x * J, w + -Te.y * ie)
                          : Te.type === 'L'
                          ? oe.lineTo(p + Te.x * J, w + -Te.y * ie)
                          : Te.type === 'Q'
                          ? oe.quadraticCurveTo(
                              p + Te.x1 * J,
                              w + -Te.y1 * ie,
                              p + Te.x * J,
                              w + -Te.y * ie,
                            )
                          : Te.type === 'C'
                          ? oe.curveTo(
                              p + Te.x1 * J,
                              w + -Te.y1 * ie,
                              p + Te.x2 * J,
                              w + -Te.y2 * ie,
                              p + Te.x * J,
                              w + -Te.y * ie,
                            )
                          : Te.type === 'Z' && oe.closePath();
                      }
                      return oe;
                    }),
                    (Xe.prototype.getContours = function () {
                      if (this.points === void 0) return [];
                      for (
                        var p = [], w = [], S = 0;
                        S < this.points.length;
                        S += 1
                      ) {
                        var E = this.points[S];
                        w.push(E),
                          E.lastPointOfContour && (p.push(w), (w = []));
                      }
                      return (
                        L.argument(
                          w.length === 0,
                          'There are still points left in the current contour.',
                        ),
                        p
                      );
                    }),
                    (Xe.prototype.getMetrics = function () {
                      for (
                        var p = this.path.commands, w = [], S = [], E = 0;
                        E < p.length;
                        E += 1
                      ) {
                        var I = p[E];
                        I.type !== 'Z' && (w.push(I.x), S.push(I.y)),
                          (I.type !== 'Q' && I.type !== 'C') ||
                            (w.push(I.x1), S.push(I.y1)),
                          I.type === 'C' && (w.push(I.x2), S.push(I.y2));
                      }
                      var F = {
                        xMin: Math.min.apply(null, w),
                        yMin: Math.min.apply(null, S),
                        xMax: Math.max.apply(null, w),
                        yMax: Math.max.apply(null, S),
                        leftSideBearing: this.leftSideBearing,
                      };
                      return (
                        isFinite(F.xMin) || (F.xMin = 0),
                        isFinite(F.xMax) || (F.xMax = this.advanceWidth),
                        isFinite(F.yMin) || (F.yMin = 0),
                        isFinite(F.yMax) || (F.yMax = 0),
                        (F.rightSideBearing =
                          this.advanceWidth -
                          F.leftSideBearing -
                          (F.xMax - F.xMin)),
                        F
                      );
                    }),
                    (Xe.prototype.draw = function (p, w, S, E, I) {
                      this.getPath(w, S, E, I).draw(p);
                    }),
                    (Xe.prototype.drawPoints = function (p, w, S, E) {
                      function I(ye, Te, we, de) {
                        var De = 2 * Math.PI;
                        p.beginPath();
                        for (var Oe = 0; Oe < ye.length; Oe += 1)
                          p.moveTo(Te + ye[Oe].x * de, we + ye[Oe].y * de),
                            p.arc(
                              Te + ye[Oe].x * de,
                              we + ye[Oe].y * de,
                              2,
                              0,
                              De,
                              !1,
                            );
                        p.closePath(), p.fill();
                      }
                      (w = w !== void 0 ? w : 0), (S = S !== void 0 ? S : 0);
                      for (
                        var E =
                            (1 / this.path.unitsPerEm) *
                            (E = E !== void 0 ? E : 24),
                          F = [],
                          V = [],
                          J = this.path,
                          ie = 0;
                        ie < J.commands.length;
                        ie += 1
                      ) {
                        var oe = J.commands[ie];
                        oe.x !== void 0 && F.push({ x: oe.x, y: -oe.y }),
                          oe.x1 !== void 0 && V.push({ x: oe.x1, y: -oe.y1 }),
                          oe.x2 !== void 0 && V.push({ x: oe.x2, y: -oe.y2 });
                      }
                      (p.fillStyle = 'blue'),
                        I(F, w, S, E),
                        (p.fillStyle = 'red'),
                        I(V, w, S, E);
                    }),
                    (Xe.prototype.drawMetrics = function (p, w, S, E) {
                      (w = w !== void 0 ? w : 0),
                        (S = S !== void 0 ? S : 0),
                        (E =
                          (1 / this.path.unitsPerEm) *
                          (E = E !== void 0 ? E : 24)),
                        (p.lineWidth = 1),
                        (p.strokeStyle = 'black'),
                        Ge.line(p, w, -1e4, w, 1e4),
                        Ge.line(p, -1e4, S, 1e4, S);
                      var I = this.xMin || 0,
                        F = this.yMin || 0,
                        V = this.xMax || 0,
                        J = this.yMax || 0,
                        ie = this.advanceWidth || 0;
                      (p.strokeStyle = 'blue'),
                        Ge.line(p, w + I * E, -1e4, w + I * E, 1e4),
                        Ge.line(p, w + V * E, -1e4, w + V * E, 1e4),
                        Ge.line(p, -1e4, S + -F * E, 1e4, S + -F * E),
                        Ge.line(p, -1e4, S + -J * E, 1e4, S + -J * E),
                        (p.strokeStyle = 'green'),
                        Ge.line(p, w + ie * E, -1e4, w + ie * E, 1e4);
                    }),
                    (st.prototype.get = function (p) {
                      return (
                        typeof this.glyphs[p] == 'function' &&
                          (this.glyphs[p] = this.glyphs[p]()),
                        this.glyphs[p]
                      );
                    }),
                    (st.prototype.push = function (p, w) {
                      (this.glyphs[p] = w), this.length++;
                    });
                  var Ke = {
                    GlyphSet: st,
                    glyphLoader: function (p, w) {
                      return new Xe({ index: w, font: p });
                    },
                    ttfGlyphLoader: function (p, w, S, E, I, F) {
                      return function () {
                        var V = new Xe({ index: w, font: p });
                        return (
                          (V.path = function () {
                            S(V, E, I);
                            var J = F(p.glyphs, V);
                            return (J.unitsPerEm = p.unitsPerEm), J;
                          }),
                          at(V, 'xMin', '_xMin'),
                          at(V, 'xMax', '_xMax'),
                          at(V, 'yMin', '_yMin'),
                          at(V, 'yMax', '_yMax'),
                          V
                        );
                      };
                    },
                    cffGlyphLoader: function (p, w, S, E) {
                      return function () {
                        var I = new Xe({ index: w, font: p });
                        return (
                          (I.path = function () {
                            var F = S(p, I, E);
                            return (F.unitsPerEm = p.unitsPerEm), F;
                          }),
                          I
                        );
                      };
                    },
                  };
                  function ot(p) {
                    return (
                      (p =
                        p.length < 1240
                          ? 107
                          : p.length < 33900
                          ? 1131
                          : 32768),
                      p
                    );
                  }
                  function nt(p, w, S) {
                    var E,
                      I = [],
                      F = [],
                      V = xe.getCard16(p, w);
                    if (V !== 0) {
                      for (
                        var J = xe.getByte(p, w + 2),
                          ie = w + (V + 1) * J + 2,
                          oe = w + 3,
                          ye = 0;
                        ye < V + 1;
                        ye += 1
                      )
                        I.push(xe.getOffset(p, oe, J)), (oe += J);
                      E = ie + I[V];
                    } else E = w + 2;
                    for (var Te = 0; Te < I.length - 1; Te += 1) {
                      var we = xe.getBytes(p, ie + I[Te], ie + I[Te + 1]);
                      S && (we = S(we)), F.push(we);
                    }
                    return { objects: F, startOffset: w, endOffset: E };
                  }
                  function jt(p, w) {
                    if (w === 28) return (p.parseByte() << 8) | p.parseByte();
                    if (w === 29)
                      return (
                        (p.parseByte() << 24) |
                        (p.parseByte() << 16) |
                        (p.parseByte() << 8) |
                        p.parseByte()
                      );
                    if (w === 30) {
                      for (
                        var S = p,
                          E = '',
                          I = [
                            '0',
                            '1',
                            '2',
                            '3',
                            '4',
                            '5',
                            '6',
                            '7',
                            '8',
                            '9',
                            '.',
                            'E',
                            'E-',
                            null,
                            '-',
                          ];
                        ;

                      ) {
                        var V = S.parseByte(),
                          F = V >> 4,
                          V = 15 & V;
                        if (F == 15 || ((E += I[F]), V == 15)) break;
                        E += I[V];
                      }
                      return parseFloat(E);
                    }
                    if (32 <= w && w <= 246) return w - 139;
                    if (247 <= w && w <= 250)
                      return 256 * (w - 247) + p.parseByte() + 108;
                    if (251 <= w && w <= 254)
                      return 256 * -(w - 251) - p.parseByte() - 108;
                    throw new Error('Invalid b0 ' + w);
                  }
                  function or(p, w, S) {
                    var E = new xe.Parser(p, (w = w !== void 0 ? w : 0)),
                      I = [],
                      F = [];
                    for (
                      S = S !== void 0 ? S : p.length;
                      E.relativeOffset < S;

                    ) {
                      var V = E.parseByte();
                      V <= 21
                        ? (V === 12 && (V = 1200 + E.parseByte()),
                          I.push([V, F]),
                          (F = []))
                        : F.push(jt(E, V));
                    }
                    for (var J = I, ie = {}, oe = 0; oe < J.length; oe += 1) {
                      var ye = J[oe][0],
                        Te = J[oe][1],
                        we = void 0,
                        we = Te.length === 1 ? Te[0] : Te;
                      if (ie.hasOwnProperty(ye) && !isNaN(ie[ye]))
                        throw new Error(
                          'Object ' + ie + ' already has key ' + ye,
                        );
                      ie[ye] = we;
                    }
                    return ie;
                  }
                  function Gt(p, w) {
                    return (w = w <= 390 ? K[w] : p[w - 391]);
                  }
                  function yt(p, w, S) {
                    for (var E, I = {}, F = 0; F < w.length; F += 1) {
                      var V = w[F];
                      if (Array.isArray(V.type)) {
                        var J = [];
                        J.length = V.type.length;
                        for (var ie = 0; ie < V.type.length; ie++)
                          (E = p[V.op] !== void 0 ? p[V.op][ie] : void 0) ===
                            void 0 &&
                            (E =
                              V.value !== void 0 && V.value[ie] !== void 0
                                ? V.value[ie]
                                : null),
                            V.type[ie] === 'SID' && (E = Gt(S, E)),
                            (J[ie] = E);
                        I[V.name] = J;
                      } else
                        (E = p[V.op]) === void 0 &&
                          (E = V.value !== void 0 ? V.value : null),
                          V.type === 'SID' && (E = Gt(S, E)),
                          (I[V.name] = E);
                    }
                    return I;
                  }
                  var Ct = [
                      { name: 'version', op: 0, type: 'SID' },
                      { name: 'notice', op: 1, type: 'SID' },
                      { name: 'copyright', op: 1200, type: 'SID' },
                      { name: 'fullName', op: 2, type: 'SID' },
                      { name: 'familyName', op: 3, type: 'SID' },
                      { name: 'weight', op: 4, type: 'SID' },
                      {
                        name: 'isFixedPitch',
                        op: 1201,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'italicAngle',
                        op: 1202,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'underlinePosition',
                        op: 1203,
                        type: 'number',
                        value: -100,
                      },
                      {
                        name: 'underlineThickness',
                        op: 1204,
                        type: 'number',
                        value: 50,
                      },
                      { name: 'paintType', op: 1205, type: 'number', value: 0 },
                      {
                        name: 'charstringType',
                        op: 1206,
                        type: 'number',
                        value: 2,
                      },
                      {
                        name: 'fontMatrix',
                        op: 1207,
                        type: ['real', 'real', 'real', 'real', 'real', 'real'],
                        value: [0.001, 0, 0, 0.001, 0, 0],
                      },
                      { name: 'uniqueId', op: 13, type: 'number' },
                      {
                        name: 'fontBBox',
                        op: 5,
                        type: ['number', 'number', 'number', 'number'],
                        value: [0, 0, 0, 0],
                      },
                      {
                        name: 'strokeWidth',
                        op: 1208,
                        type: 'number',
                        value: 0,
                      },
                      { name: 'xuid', op: 14, type: [], value: null },
                      { name: 'charset', op: 15, type: 'offset', value: 0 },
                      { name: 'encoding', op: 16, type: 'offset', value: 0 },
                      { name: 'charStrings', op: 17, type: 'offset', value: 0 },
                      {
                        name: 'private',
                        op: 18,
                        type: ['number', 'offset'],
                        value: [0, 0],
                      },
                      { name: 'ros', op: 1230, type: ['SID', 'SID', 'number'] },
                      {
                        name: 'cidFontVersion',
                        op: 1231,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'cidFontRevision',
                        op: 1232,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'cidFontType',
                        op: 1233,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'cidCount',
                        op: 1234,
                        type: 'number',
                        value: 8720,
                      },
                      { name: 'uidBase', op: 1235, type: 'number' },
                      { name: 'fdArray', op: 1236, type: 'offset' },
                      { name: 'fdSelect', op: 1237, type: 'offset' },
                      { name: 'fontName', op: 1238, type: 'SID' },
                    ],
                    pt = [
                      { name: 'subrs', op: 19, type: 'offset', value: 0 },
                      {
                        name: 'defaultWidthX',
                        op: 20,
                        type: 'number',
                        value: 0,
                      },
                      {
                        name: 'nominalWidthX',
                        op: 21,
                        type: 'number',
                        value: 0,
                      },
                    ];
                  function tr(p, w, S, E) {
                    return yt(or(p, w, S), pt, E);
                  }
                  function $t(p, w, S, E) {
                    for (var I = [], F = 0; F < S.length; F += 1) {
                      var V = new DataView(new Uint8Array(S[F]).buffer),
                        V = ((J = E), yt(or(V, 0, V.byteLength), Ct, J)),
                        J = ((V._subrs = []), (V._subrsBias = 0), V.private[0]),
                        ie = V.private[1];
                      J !== 0 &&
                        ie !== 0 &&
                        ((J = tr(p, ie + w, J, E)),
                        (V._defaultWidthX = J.defaultWidthX),
                        (V._nominalWidthX = J.nominalWidthX),
                        J.subrs !== 0 &&
                          ((ie = nt(p, ie + J.subrs + w)),
                          (V._subrs = ie.objects),
                          (V._subrsBias = ot(V._subrs))),
                        (V._privateDict = J)),
                        I.push(V);
                    }
                    return I;
                  }
                  function vt(p, w, S) {
                    var E,
                      I,
                      F,
                      V,
                      J,
                      ie,
                      oe,
                      ye,
                      Te,
                      we = new $(),
                      de = [],
                      De = 0,
                      Oe = !1,
                      Re = !1,
                      Ee = 0,
                      ke = 0,
                      et =
                        ((Te = (
                          p.isCIDFont
                            ? ((J = p.tables.cff.topDict._fdSelect[w.index]),
                              (J = p.tables.cff.topDict._fdArray[J]),
                              (ie = J._subrs),
                              (oe = J._subrsBias),
                              (ye = J._defaultWidthX),
                              J)
                            : ((ie = p.tables.cff.topDict._subrs),
                              (oe = p.tables.cff.topDict._subrsBias),
                              (ye = p.tables.cff.topDict._defaultWidthX),
                              p.tables.cff.topDict)
                        )._nominalWidthX),
                        ye);
                    function it(rt, lt) {
                      Re && we.closePath(), we.moveTo(rt, lt), (Re = !0);
                    }
                    function tt() {
                      de.length % 2 == 0 || Oe || (et = de.shift() + Te),
                        (De += de.length >> 1),
                        (de.length = 0),
                        (Oe = !0);
                    }
                    return (
                      (function rt(lt) {
                        for (
                          var St,
                            Dt,
                            qt,
                            ir,
                            ar,
                            jr,
                            wt,
                            Et,
                            gt,
                            lr,
                            Pt,
                            nr,
                            kt = 0;
                          kt < lt.length;

                        ) {
                          var Kt = lt[kt];
                          switch (((kt += 1), Kt)) {
                            case 1:
                            case 3:
                              tt();
                              break;
                            case 4:
                              1 < de.length &&
                                !Oe &&
                                ((et = de.shift() + Te), (Oe = !0)),
                                (ke += de.pop()),
                                it(Ee, ke);
                              break;
                            case 5:
                              for (; 0 < de.length; )
                                (Ee += de.shift()),
                                  (ke += de.shift()),
                                  we.lineTo(Ee, ke);
                              break;
                            case 6:
                              for (
                                ;
                                0 < de.length &&
                                ((Ee += de.shift()),
                                we.lineTo(Ee, ke),
                                de.length !== 0);

                              )
                                (ke += de.shift()), we.lineTo(Ee, ke);
                              break;
                            case 7:
                              for (
                                ;
                                0 < de.length &&
                                ((ke += de.shift()),
                                we.lineTo(Ee, ke),
                                de.length !== 0);

                              )
                                (Ee += de.shift()), we.lineTo(Ee, ke);
                              break;
                            case 8:
                              for (; 0 < de.length; )
                                (E = Ee + de.shift()),
                                  (I = ke + de.shift()),
                                  (F = E + de.shift()),
                                  (V = I + de.shift()),
                                  (Ee = F + de.shift()),
                                  (ke = V + de.shift()),
                                  we.curveTo(E, I, F, V, Ee, ke);
                              break;
                            case 10:
                              (ar = de.pop() + oe), (jr = ie[ar]) && rt(jr);
                              break;
                            case 11:
                              return;
                            case 12:
                              switch (((Kt = lt[kt]), (kt += 1), Kt)) {
                                case 35:
                                  (E = Ee + de.shift()),
                                    (I = ke + de.shift()),
                                    (F = E + de.shift()),
                                    (V = I + de.shift()),
                                    (wt = F + de.shift()),
                                    (Et = V + de.shift()),
                                    (gt = wt + de.shift()),
                                    (lr = Et + de.shift()),
                                    (Pt = gt + de.shift()),
                                    (nr = lr + de.shift()),
                                    (Ee = Pt + de.shift()),
                                    (ke = nr + de.shift()),
                                    de.shift(),
                                    we.curveTo(E, I, F, V, wt, Et),
                                    we.curveTo(gt, lr, Pt, nr, Ee, ke);
                                  break;
                                case 34:
                                  (E = Ee + de.shift()),
                                    (I = ke),
                                    (F = E + de.shift()),
                                    (V = I + de.shift()),
                                    (wt = F + de.shift()),
                                    (Et = V),
                                    (gt = wt + de.shift()),
                                    (lr = V),
                                    (Pt = gt + de.shift()),
                                    (nr = ke),
                                    (Ee = Pt + de.shift()),
                                    we.curveTo(E, I, F, V, wt, Et),
                                    we.curveTo(gt, lr, Pt, nr, Ee, ke);
                                  break;
                                case 36:
                                  (E = Ee + de.shift()),
                                    (I = ke + de.shift()),
                                    (F = E + de.shift()),
                                    (V = I + de.shift()),
                                    (wt = F + de.shift()),
                                    (Et = V),
                                    (gt = wt + de.shift()),
                                    (lr = V),
                                    (Pt = gt + de.shift()),
                                    (nr = lr + de.shift()),
                                    (Ee = Pt + de.shift()),
                                    we.curveTo(E, I, F, V, wt, Et),
                                    we.curveTo(gt, lr, Pt, nr, Ee, ke);
                                  break;
                                case 37:
                                  (E = Ee + de.shift()),
                                    (I = ke + de.shift()),
                                    (F = E + de.shift()),
                                    (V = I + de.shift()),
                                    (wt = F + de.shift()),
                                    (Et = V + de.shift()),
                                    (gt = wt + de.shift()),
                                    (lr = Et + de.shift()),
                                    (Pt = gt + de.shift()),
                                    (nr = lr + de.shift()),
                                    Math.abs(Pt - Ee) > Math.abs(nr - ke)
                                      ? (Ee = Pt + de.shift())
                                      : (ke = nr + de.shift()),
                                    we.curveTo(E, I, F, V, wt, Et),
                                    we.curveTo(gt, lr, Pt, nr, Ee, ke);
                                  break;
                                default:
                                  console.log(
                                    'Glyph ' +
                                      w.index +
                                      ': unknown operator 1200' +
                                      Kt,
                                  ),
                                    (de.length = 0);
                              }
                              break;
                            case 14:
                              0 < de.length &&
                                !Oe &&
                                ((et = de.shift() + Te), (Oe = !0)),
                                Re && (we.closePath(), (Re = !1));
                              break;
                            case 18:
                              tt();
                              break;
                            case 19:
                            case 20:
                              tt(), (kt += (De + 7) >> 3);
                              break;
                            case 21:
                              2 < de.length &&
                                !Oe &&
                                ((et = de.shift() + Te), (Oe = !0)),
                                (ke += de.pop()),
                                it((Ee += de.pop()), ke);
                              break;
                            case 22:
                              1 < de.length &&
                                !Oe &&
                                ((et = de.shift() + Te), (Oe = !0)),
                                it((Ee += de.pop()), ke);
                              break;
                            case 23:
                              tt();
                              break;
                            case 24:
                              for (; 2 < de.length; )
                                (E = Ee + de.shift()),
                                  (I = ke + de.shift()),
                                  (F = E + de.shift()),
                                  (V = I + de.shift()),
                                  (Ee = F + de.shift()),
                                  (ke = V + de.shift()),
                                  we.curveTo(E, I, F, V, Ee, ke);
                              (Ee += de.shift()),
                                (ke += de.shift()),
                                we.lineTo(Ee, ke);
                              break;
                            case 25:
                              for (; 6 < de.length; )
                                (Ee += de.shift()),
                                  (ke += de.shift()),
                                  we.lineTo(Ee, ke);
                              (E = Ee + de.shift()),
                                (I = ke + de.shift()),
                                (F = E + de.shift()),
                                (V = I + de.shift()),
                                (Ee = F + de.shift()),
                                (ke = V + de.shift()),
                                we.curveTo(E, I, F, V, Ee, ke);
                              break;
                            case 26:
                              for (
                                de.length % 2 && (Ee += de.shift());
                                0 < de.length;

                              )
                                (E = Ee),
                                  (I = ke + de.shift()),
                                  (F = E + de.shift()),
                                  (V = I + de.shift()),
                                  (Ee = F),
                                  (ke = V + de.shift()),
                                  we.curveTo(E, I, F, V, Ee, ke);
                              break;
                            case 27:
                              for (
                                de.length % 2 && (ke += de.shift());
                                0 < de.length;

                              )
                                (E = Ee + de.shift()),
                                  (I = ke),
                                  (F = E + de.shift()),
                                  (V = I + de.shift()),
                                  (Ee = F + de.shift()),
                                  (ke = V),
                                  we.curveTo(E, I, F, V, Ee, ke);
                              break;
                            case 28:
                              (St = lt[kt]),
                                (Dt = lt[kt + 1]),
                                de.push(((St << 24) | (Dt << 16)) >> 16),
                                (kt += 2);
                              break;
                            case 29:
                              (ar = de.pop() + p.gsubrsBias),
                                (jr = p.gsubrs[ar]) && rt(jr);
                              break;
                            case 30:
                              for (
                                ;
                                0 < de.length &&
                                ((E = Ee),
                                (I = ke + de.shift()),
                                (F = E + de.shift()),
                                (V = I + de.shift()),
                                (Ee = F + de.shift()),
                                (ke = V + (de.length === 1 ? de.shift() : 0)),
                                we.curveTo(E, I, F, V, Ee, ke),
                                de.length !== 0);

                              )
                                (E = Ee + de.shift()),
                                  (I = ke),
                                  (F = E + de.shift()),
                                  (V = I + de.shift()),
                                  (ke = V + de.shift()),
                                  (Ee = F + (de.length === 1 ? de.shift() : 0)),
                                  we.curveTo(E, I, F, V, Ee, ke);
                              break;
                            case 31:
                              for (
                                ;
                                0 < de.length &&
                                ((E = Ee + de.shift()),
                                (I = ke),
                                (F = E + de.shift()),
                                (V = I + de.shift()),
                                (ke = V + de.shift()),
                                (Ee = F + (de.length === 1 ? de.shift() : 0)),
                                we.curveTo(E, I, F, V, Ee, ke),
                                de.length !== 0);

                              )
                                (E = Ee),
                                  (I = ke + de.shift()),
                                  (F = E + de.shift()),
                                  (V = I + de.shift()),
                                  (Ee = F + de.shift()),
                                  (ke = V + (de.length === 1 ? de.shift() : 0)),
                                  we.curveTo(E, I, F, V, Ee, ke);
                              break;
                            default:
                              Kt < 32
                                ? console.log(
                                    'Glyph ' +
                                      w.index +
                                      ': unknown operator ' +
                                      Kt,
                                  )
                                : Kt < 247
                                ? de.push(Kt - 139)
                                : Kt < 251
                                ? ((St = lt[kt]),
                                  (kt += 1),
                                  de.push(256 * (Kt - 247) + St + 108))
                                : Kt < 255
                                ? ((St = lt[kt]),
                                  (kt += 1),
                                  de.push(256 * -(Kt - 251) - St - 108))
                                : ((St = lt[kt]),
                                  (Dt = lt[kt + 1]),
                                  (qt = lt[kt + 2]),
                                  (ir = lt[kt + 3]),
                                  (kt += 4),
                                  de.push(
                                    ((St << 24) | (Dt << 16) | (qt << 8) | ir) /
                                      65536,
                                  ));
                          }
                        }
                      })(S),
                      (w.advanceWidth = et),
                      we
                    );
                  }
                  function rr(p, w) {
                    var S,
                      E = K.indexOf(p);
                    return (
                      0 <= E && (S = E),
                      0 <= (E = w.indexOf(p))
                        ? (S = E + K.length)
                        : ((S = K.length + w.length), w.push(p)),
                      S
                    );
                  }
                  function Wn(p, w, S) {
                    for (var E = {}, I = 0; I < p.length; I += 1) {
                      var F = p[I],
                        V = w[F.name];
                      V === void 0 ||
                        (function J(ie, oe) {
                          if (ie === oe) return 1;
                          if (
                            Array.isArray(ie) &&
                            Array.isArray(oe) &&
                            ie.length === oe.length
                          ) {
                            for (var ye = 0; ye < ie.length; ye += 1)
                              if (!J(ie[ye], oe[ye])) return;
                            return 1;
                          }
                        })(V, F.value) ||
                        (F.type === 'SID' && (V = rr(V, S)),
                        (E[F.op] = { name: F.name, type: F.type, value: V }));
                    }
                    return E;
                  }
                  function qn(p, w) {
                    var S = new Me.Record('Top DICT', [
                      { name: 'dict', type: 'DICT', value: {} },
                    ]);
                    return (S.dict = Wn(Ct, p, w)), S;
                  }
                  function zn(p) {
                    var w = new Me.Record('Top DICT INDEX', [
                      { name: 'topDicts', type: 'INDEX', value: [] },
                    ]);
                    return (
                      (w.topDicts = [
                        { name: 'topDict_0', type: 'TABLE', value: p },
                      ]),
                      w
                    );
                  }
                  function Ts(p) {
                    for (
                      var w = new Me.Record('CharStrings INDEX', [
                          { name: 'charStrings', type: 'INDEX', value: [] },
                        ]),
                        S = 0;
                      S < p.length;
                      S += 1
                    ) {
                      var E = p.get(S),
                        I = (function (F) {
                          for (
                            var V = [],
                              J = F.path,
                              ie =
                                (V.push({
                                  name: 'width',
                                  type: 'NUMBER',
                                  value: F.advanceWidth,
                                }),
                                0),
                              oe = 0,
                              ye = 0;
                            ye < J.commands.length;
                            ye += 1
                          ) {
                            var Te,
                              we,
                              de,
                              De,
                              Oe = void 0,
                              Re = void 0,
                              Ee = J.commands[ye];
                            (Ee =
                              Ee.type === 'Q'
                                ? {
                                    type: 'C',
                                    x: Ee.x,
                                    y: Ee.y,
                                    x1: (1 / 3) * ie + (2 / 3) * Ee.x1,
                                    y1: (1 / 3) * oe + (2 / 3) * Ee.y1,
                                    x2: (1 / 3) * Ee.x + (2 / 3) * Ee.x1,
                                    y2: (1 / 3) * Ee.y + (2 / 3) * Ee.y1,
                                  }
                                : Ee).type === 'M'
                              ? ((Oe = Math.round(Ee.x - ie)),
                                (Re = Math.round(Ee.y - oe)),
                                V.push({
                                  name: 'dx',
                                  type: 'NUMBER',
                                  value: Oe,
                                }),
                                V.push({
                                  name: 'dy',
                                  type: 'NUMBER',
                                  value: Re,
                                }),
                                V.push({
                                  name: 'rmoveto',
                                  type: 'OP',
                                  value: 21,
                                }),
                                (ie = Math.round(Ee.x)),
                                (oe = Math.round(Ee.y)))
                              : Ee.type === 'L'
                              ? ((Oe = Math.round(Ee.x - ie)),
                                (Re = Math.round(Ee.y - oe)),
                                V.push({
                                  name: 'dx',
                                  type: 'NUMBER',
                                  value: Oe,
                                }),
                                V.push({
                                  name: 'dy',
                                  type: 'NUMBER',
                                  value: Re,
                                }),
                                V.push({
                                  name: 'rlineto',
                                  type: 'OP',
                                  value: 5,
                                }),
                                (ie = Math.round(Ee.x)),
                                (oe = Math.round(Ee.y)))
                              : Ee.type === 'C' &&
                                ((Te = Math.round(Ee.x1 - ie)),
                                (we = Math.round(Ee.y1 - oe)),
                                (de = Math.round(Ee.x2 - Ee.x1)),
                                (De = Math.round(Ee.y2 - Ee.y1)),
                                (Oe = Math.round(Ee.x - Ee.x2)),
                                (Re = Math.round(Ee.y - Ee.y2)),
                                V.push({
                                  name: 'dx1',
                                  type: 'NUMBER',
                                  value: Te,
                                }),
                                V.push({
                                  name: 'dy1',
                                  type: 'NUMBER',
                                  value: we,
                                }),
                                V.push({
                                  name: 'dx2',
                                  type: 'NUMBER',
                                  value: de,
                                }),
                                V.push({
                                  name: 'dy2',
                                  type: 'NUMBER',
                                  value: De,
                                }),
                                V.push({
                                  name: 'dx',
                                  type: 'NUMBER',
                                  value: Oe,
                                }),
                                V.push({
                                  name: 'dy',
                                  type: 'NUMBER',
                                  value: Re,
                                }),
                                V.push({
                                  name: 'rrcurveto',
                                  type: 'OP',
                                  value: 8,
                                }),
                                (ie = Math.round(Ee.x)),
                                (oe = Math.round(Ee.y)));
                          }
                          return (
                            V.push({ name: 'endchar', type: 'OP', value: 14 }),
                            V
                          );
                        })(E);
                      w.charStrings.push({
                        name: E.name,
                        type: 'CHARSTRING',
                        value: I,
                      });
                    }
                    return w;
                  }
                  var Hn = {
                      parse: function (p, w, S) {
                        (S.tables.cff = {}),
                          (J = p),
                          (E = w),
                          ((I = {}).formatMajor = xe.getCard8(J, E)),
                          (I.formatMinor = xe.getCard8(J, E + 1)),
                          (I.size = xe.getCard8(J, E + 2)),
                          (I.offsetSize = xe.getCard8(J, E + 3)),
                          (I.startOffset = E),
                          (I.endOffset = E + 4);
                        var J = nt(p, I.endOffset, xe.bytesToString),
                          E = nt(p, J.endOffset),
                          I = nt(p, E.endOffset, xe.bytesToString),
                          J = nt(p, I.endOffset);
                        if (
                          ((S.gsubrs = J.objects),
                          (S.gsubrsBias = ot(S.gsubrs)),
                          (J = $t(p, w, E.objects, I.objects)).length !== 1)
                        )
                          throw new Error(
                            "CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " +
                              J.length,
                          );
                        if (
                          ((E = J[0]),
                          (S.tables.cff.topDict = E)._privateDict &&
                            ((S.defaultWidthX = E._privateDict.defaultWidthX),
                            (S.nominalWidthX = E._privateDict.nominalWidthX)),
                          E.ros[0] !== void 0 &&
                            E.ros[1] !== void 0 &&
                            (S.isCIDFont = !0),
                          S.isCIDFont)
                        ) {
                          var J = E.fdArray,
                            F = E.fdSelect;
                          if (J === 0 || F === 0)
                            throw new Error(
                              'Font is marked as a CID font, but FDArray and/or FDSelect information is missing',
                            );
                          (J = $t(p, w, nt(p, (J += w)).objects, I.objects)),
                            (E._fdArray = J),
                            (E._fdSelect = (function (we, de, De, Oe) {
                              var Re,
                                Ee = [],
                                ke = new xe.Parser(we, de);
                              if ((we = ke.parseCard8()) === 0)
                                for (var et = 0; et < De; et++) {
                                  if (Oe <= (Re = ke.parseCard8()))
                                    throw new Error(
                                      'CFF table CID Font FDSelect has bad FD index value ' +
                                        Re +
                                        ' (FD count ' +
                                        Oe +
                                        ')',
                                    );
                                  Ee.push(Re);
                                }
                              else {
                                if (we !== 3)
                                  throw new Error(
                                    'CFF Table CID Font FDSelect table has unsupported format ' +
                                      we,
                                  );
                                var it,
                                  tt = ke.parseCard16(),
                                  rt = ke.parseCard16();
                                if (rt !== 0)
                                  throw new Error(
                                    'CFF Table CID Font FDSelect format 3 range has bad initial GID ' +
                                      rt,
                                  );
                                for (var lt = 0; lt < tt; lt++) {
                                  if (
                                    ((Re = ke.parseCard8()),
                                    (it = ke.parseCard16()),
                                    Oe <= Re)
                                  )
                                    throw new Error(
                                      'CFF table CID Font FDSelect has bad FD index value ' +
                                        Re +
                                        ' (FD count ' +
                                        Oe +
                                        ')',
                                    );
                                  if (De < it)
                                    throw new Error(
                                      'CFF Table CID Font FDSelect format 3 range has bad GID ' +
                                        it,
                                    );
                                  for (; rt < it; rt++) Ee.push(Re);
                                  rt = it;
                                }
                                if (it !== De)
                                  throw new Error(
                                    'CFF Table CID Font FDSelect format 3 range has bad final GID ' +
                                      it,
                                  );
                              }
                              return Ee;
                            })(p, (F += w), S.numGlyphs, J.length));
                        }
                        var F = w + E.private[1],
                          J = tr(p, F, E.private[0], I.objects),
                          V =
                            ((S.defaultWidthX = J.defaultWidthX),
                            (S.nominalWidthX = J.nominalWidthX),
                            J.subrs !== 0
                              ? ((F = nt(p, F + J.subrs)),
                                (S.subrs = F.objects),
                                (S.subrsBias = ot(S.subrs)))
                              : ((S.subrs = []), (S.subrsBias = 0)),
                            nt(p, w + E.charStrings)),
                          J =
                            ((S.nGlyphs = V.objects.length),
                            (function (ye, Te, we, de) {
                              var De = new xe.Parser(ye, Te),
                                Oe = (--we, ['.notdef']);
                              if ((ye = De.parseCard8()) === 0)
                                for (var Re = 0; Re < we; Re += 1)
                                  (Ee = De.parseSID()), Oe.push(Gt(de, Ee));
                              else if (ye === 1)
                                for (; Oe.length <= we; )
                                  for (
                                    var Ee = De.parseSID(),
                                      ke = De.parseCard8(),
                                      et = 0;
                                    et <= ke;
                                    et += 1
                                  )
                                    Oe.push(Gt(de, Ee)), (Ee += 1);
                              else {
                                if (ye !== 2)
                                  throw new Error(
                                    'Unknown charset format ' + ye,
                                  );
                                for (; Oe.length <= we; ) {
                                  (Ee = De.parseSID()), (ke = De.parseCard16());
                                  for (var it = 0; it <= ke; it += 1)
                                    Oe.push(Gt(de, Ee)), (Ee += 1);
                                }
                              }
                              return Oe;
                            })(p, w + E.charset, S.nGlyphs, I.objects));
                        E.encoding === 0
                          ? (S.cffEncoding = new Fe(G, J))
                          : E.encoding === 1
                          ? (S.cffEncoding = new Fe(re, J))
                          : (S.cffEncoding = (function (ye, Te, we) {
                              var de = {},
                                De = new xe.Parser(ye, Te);
                              if ((ye = De.parseCard8()) === 0)
                                for (
                                  var Oe = De.parseCard8(), Re = 0;
                                  Re < Oe;
                                  Re += 1
                                )
                                  de[(ke = De.parseCard8())] = Re;
                              else {
                                if (ye !== 1)
                                  throw new Error(
                                    'Unknown encoding format ' + ye,
                                  );
                                for (
                                  var Ee = De.parseCard8(), ke = 1, et = 0;
                                  et < Ee;
                                  et += 1
                                )
                                  for (
                                    var it = De.parseCard8(),
                                      tt = De.parseCard8(),
                                      rt = it;
                                    rt <= it + tt;
                                    rt += 1
                                  )
                                    (de[rt] = ke), (ke += 1);
                              }
                              return new Fe(de, we);
                            })(p, w + E.encoding, J)),
                          (S.encoding = S.encoding || S.cffEncoding),
                          (S.glyphs = new Ke.GlyphSet(S));
                        for (var ie = 0; ie < S.nGlyphs; ie += 1) {
                          var oe = V.objects[ie];
                          S.glyphs.push(ie, Ke.cffGlyphLoader(S, ie, vt, oe));
                        }
                      },
                      make: function (p, ye) {
                        for (
                          var S,
                            E = new Me.Table('CFF ', [
                              { name: 'header', type: 'RECORD' },
                              { name: 'nameIndex', type: 'RECORD' },
                              { name: 'topDictIndex', type: 'RECORD' },
                              { name: 'stringIndex', type: 'RECORD' },
                              { name: 'globalSubrIndex', type: 'RECORD' },
                              { name: 'charsets', type: 'RECORD' },
                              { name: 'charStringsIndex', type: 'RECORD' },
                              { name: 'privateDict', type: 'RECORD' },
                            ]),
                            I = 1 / ye.unitsPerEm,
                            I = {
                              version: ye.version,
                              fullName: ye.fullName,
                              familyName: ye.familyName,
                              weight: ye.weightName,
                              fontBBox: ye.fontBBox || [0, 0, 0, 0],
                              fontMatrix: [I, 0, 0, I, 0, 0],
                              charset: 999,
                              encoding: 0,
                              charStrings: 999,
                              private: [0, 999],
                            },
                            F = [],
                            V = 1;
                          V < p.length;
                          V += 1
                        )
                          (S = p.get(V)), F.push(S.name);
                        var J,
                          ie,
                          oe = [],
                          ye =
                            ((E.header = new Me.Record('Header', [
                              { name: 'major', type: 'Card8', value: 1 },
                              { name: 'minor', type: 'Card8', value: 0 },
                              { name: 'hdrSize', type: 'Card8', value: 4 },
                              { name: 'major', type: 'Card8', value: 1 },
                            ])),
                            (E.nameIndex = (function (we) {
                              var de = new Me.Record('Name INDEX', [
                                { name: 'names', type: 'INDEX', value: [] },
                              ]);
                              de.names = [];
                              for (var De = 0; De < we.length; De += 1)
                                de.names.push({
                                  name: 'name_' + De,
                                  type: 'NAME',
                                  value: we[De],
                                });
                              return de;
                            })([ye.postScriptName])),
                            qn(I, oe)),
                          Te =
                            ((E.topDictIndex = zn(ye)),
                            (E.globalSubrIndex = new Me.Record(
                              'Global Subr INDEX',
                              [{ name: 'subrs', type: 'INDEX', value: [] }],
                            )),
                            (E.charsets = (function (we, de) {
                              for (
                                var De = new Me.Record('Charsets', [
                                    { name: 'format', type: 'Card8', value: 0 },
                                  ]),
                                  Oe = 0;
                                Oe < we.length;
                                Oe += 1
                              ) {
                                var Re = rr(we[Oe], de);
                                De.fields.push({
                                  name: 'glyph_' + Oe,
                                  type: 'SID',
                                  value: Re,
                                });
                              }
                              return De;
                            })(F, oe)),
                            (E.charStringsIndex = Ts(p)),
                            (E.privateDict =
                              ((Te = {}),
                              (J = oe),
                              ((ie = new Me.Record('Private DICT', [
                                { name: 'dict', type: 'DICT', value: {} },
                              ])).dict = Wn(pt, Te, J)),
                              ie)),
                            (E.stringIndex = (function (we) {
                              var de = new Me.Record('String INDEX', [
                                { name: 'strings', type: 'INDEX', value: [] },
                              ]);
                              de.strings = [];
                              for (var De = 0; De < we.length; De += 1)
                                de.strings.push({
                                  name: 'string_' + De,
                                  type: 'STRING',
                                  value: we[De],
                                });
                              return de;
                            })(oe)),
                            E.header.sizeOf() +
                              E.nameIndex.sizeOf() +
                              E.topDictIndex.sizeOf() +
                              E.stringIndex.sizeOf() +
                              E.globalSubrIndex.sizeOf());
                        return (
                          (I.charset = Te),
                          (I.encoding = 0),
                          (I.charStrings = I.charset + E.charsets.sizeOf()),
                          (I.private[1] =
                            I.charStrings + E.charStringsIndex.sizeOf()),
                          (ye = qn(I, oe)),
                          (E.topDictIndex = zn(ye)),
                          E
                        );
                      },
                    },
                    Xn = {
                      parse: function (E, w) {
                        var S = {},
                          E = new xe.Parser(E, w);
                        return (
                          (S.version = E.parseVersion()),
                          (S.fontRevision =
                            Math.round(1e3 * E.parseFixed()) / 1e3),
                          (S.checkSumAdjustment = E.parseULong()),
                          (S.magicNumber = E.parseULong()),
                          L.argument(
                            S.magicNumber === 1594834165,
                            'Font header has wrong magic number.',
                          ),
                          (S.flags = E.parseUShort()),
                          (S.unitsPerEm = E.parseUShort()),
                          (S.created = E.parseLongDateTime()),
                          (S.modified = E.parseLongDateTime()),
                          (S.xMin = E.parseShort()),
                          (S.yMin = E.parseShort()),
                          (S.xMax = E.parseShort()),
                          (S.yMax = E.parseShort()),
                          (S.macStyle = E.parseUShort()),
                          (S.lowestRecPPEM = E.parseUShort()),
                          (S.fontDirectionHint = E.parseShort()),
                          (S.indexToLocFormat = E.parseShort()),
                          (S.glyphDataFormat = E.parseShort()),
                          S
                        );
                      },
                      make: function (p) {
                        var w =
                            Math.round(new Date().getTime() / 1e3) + 2082844800,
                          S = w;
                        return (
                          p.createdTimestamp &&
                            (S = p.createdTimestamp + 2082844800),
                          new Me.Table(
                            'head',
                            [
                              { name: 'version', type: 'FIXED', value: 65536 },
                              {
                                name: 'fontRevision',
                                type: 'FIXED',
                                value: 65536,
                              },
                              {
                                name: 'checkSumAdjustment',
                                type: 'ULONG',
                                value: 0,
                              },
                              {
                                name: 'magicNumber',
                                type: 'ULONG',
                                value: 1594834165,
                              },
                              { name: 'flags', type: 'USHORT', value: 0 },
                              {
                                name: 'unitsPerEm',
                                type: 'USHORT',
                                value: 1e3,
                              },
                              {
                                name: 'created',
                                type: 'LONGDATETIME',
                                value: S,
                              },
                              {
                                name: 'modified',
                                type: 'LONGDATETIME',
                                value: w,
                              },
                              { name: 'xMin', type: 'SHORT', value: 0 },
                              { name: 'yMin', type: 'SHORT', value: 0 },
                              { name: 'xMax', type: 'SHORT', value: 0 },
                              { name: 'yMax', type: 'SHORT', value: 0 },
                              { name: 'macStyle', type: 'USHORT', value: 0 },
                              {
                                name: 'lowestRecPPEM',
                                type: 'USHORT',
                                value: 0,
                              },
                              {
                                name: 'fontDirectionHint',
                                type: 'SHORT',
                                value: 2,
                              },
                              {
                                name: 'indexToLocFormat',
                                type: 'SHORT',
                                value: 0,
                              },
                              {
                                name: 'glyphDataFormat',
                                type: 'SHORT',
                                value: 0,
                              },
                            ],
                            p,
                          )
                        );
                      },
                    },
                    fe = {
                      parse: function (E, w) {
                        var S = {},
                          E = new xe.Parser(E, w);
                        return (
                          (S.version = E.parseVersion()),
                          (S.ascender = E.parseShort()),
                          (S.descender = E.parseShort()),
                          (S.lineGap = E.parseShort()),
                          (S.advanceWidthMax = E.parseUShort()),
                          (S.minLeftSideBearing = E.parseShort()),
                          (S.minRightSideBearing = E.parseShort()),
                          (S.xMaxExtent = E.parseShort()),
                          (S.caretSlopeRise = E.parseShort()),
                          (S.caretSlopeRun = E.parseShort()),
                          (S.caretOffset = E.parseShort()),
                          (E.relativeOffset += 8),
                          (S.metricDataFormat = E.parseShort()),
                          (S.numberOfHMetrics = E.parseUShort()),
                          S
                        );
                      },
                      make: function (p) {
                        return new Me.Table(
                          'hhea',
                          [
                            { name: 'version', type: 'FIXED', value: 65536 },
                            { name: 'ascender', type: 'FWORD', value: 0 },
                            { name: 'descender', type: 'FWORD', value: 0 },
                            { name: 'lineGap', type: 'FWORD', value: 0 },
                            {
                              name: 'advanceWidthMax',
                              type: 'UFWORD',
                              value: 0,
                            },
                            {
                              name: 'minLeftSideBearing',
                              type: 'FWORD',
                              value: 0,
                            },
                            {
                              name: 'minRightSideBearing',
                              type: 'FWORD',
                              value: 0,
                            },
                            { name: 'xMaxExtent', type: 'FWORD', value: 0 },
                            { name: 'caretSlopeRise', type: 'SHORT', value: 1 },
                            { name: 'caretSlopeRun', type: 'SHORT', value: 0 },
                            { name: 'caretOffset', type: 'SHORT', value: 0 },
                            { name: 'reserved1', type: 'SHORT', value: 0 },
                            { name: 'reserved2', type: 'SHORT', value: 0 },
                            { name: 'reserved3', type: 'SHORT', value: 0 },
                            { name: 'reserved4', type: 'SHORT', value: 0 },
                            {
                              name: 'metricDataFormat',
                              type: 'SHORT',
                              value: 0,
                            },
                            {
                              name: 'numberOfHMetrics',
                              type: 'USHORT',
                              value: 0,
                            },
                          ],
                          p,
                        );
                      },
                    },
                    Ue = {
                      parse: function (p, w, S, E, I) {
                        for (
                          var F, V, J = new xe.Parser(p, w), ie = 0;
                          ie < E;
                          ie += 1
                        ) {
                          ie < S &&
                            ((F = J.parseUShort()), (V = J.parseShort()));
                          var oe = I.get(ie);
                          (oe.advanceWidth = F), (oe.leftSideBearing = V);
                        }
                      },
                      make: function (p) {
                        for (
                          var w = new Me.Table('hmtx', []), S = 0;
                          S < p.length;
                          S += 1
                        ) {
                          var I = p.get(S),
                            E = I.advanceWidth || 0,
                            I = I.leftSideBearing || 0;
                          w.fields.push({
                            name: 'advanceWidth_' + S,
                            type: 'USHORT',
                            value: E,
                          }),
                            w.fields.push({
                              name: 'leftSideBearing_' + S,
                              type: 'SHORT',
                              value: I,
                            });
                        }
                        return w;
                      },
                    },
                    Ye = {
                      make: function (p) {
                        for (
                          var w = new Me.Table('ltag', [
                              { name: 'version', type: 'ULONG', value: 1 },
                              { name: 'flags', type: 'ULONG', value: 0 },
                              {
                                name: 'numTags',
                                type: 'ULONG',
                                value: p.length,
                              },
                            ]),
                            S = '',
                            E = 12 + 4 * p.length,
                            I = 0;
                          I < p.length;
                          ++I
                        ) {
                          var F = S.indexOf(p[I]);
                          F < 0 && ((F = S.length), (S += p[I])),
                            w.fields.push({
                              name: 'offset ' + I,
                              type: 'USHORT',
                              value: E + F,
                            }),
                            w.fields.push({
                              name: 'length ' + I,
                              type: 'USHORT',
                              value: p[I].length,
                            });
                        }
                        return (
                          w.fields.push({
                            name: 'stringPool',
                            type: 'CHARARRAY',
                            value: S,
                          }),
                          w
                        );
                      },
                      parse: function (p, w) {
                        for (
                          var S = new xe.Parser(p, w),
                            E = S.parseULong(),
                            I =
                              (L.argument(
                                E === 1,
                                'Unsupported ltag table version.',
                              ),
                              S.skip('uLong', 1),
                              S.parseULong()),
                            F = [],
                            V = 0;
                          V < I;
                          V++
                        ) {
                          for (
                            var J = '',
                              ie = w + S.parseUShort(),
                              oe = S.parseUShort(),
                              ye = ie;
                            ye < ie + oe;
                            ++ye
                          )
                            J += String.fromCharCode(p.getInt8(ye));
                          F.push(J);
                        }
                        return F;
                      },
                    },
                    Ne = {
                      parse: function (E, w) {
                        var S = {},
                          E = new xe.Parser(E, w);
                        return (
                          (S.version = E.parseVersion()),
                          (S.numGlyphs = E.parseUShort()),
                          S.version === 1 &&
                            ((S.maxPoints = E.parseUShort()),
                            (S.maxContours = E.parseUShort()),
                            (S.maxCompositePoints = E.parseUShort()),
                            (S.maxCompositeContours = E.parseUShort()),
                            (S.maxZones = E.parseUShort()),
                            (S.maxTwilightPoints = E.parseUShort()),
                            (S.maxStorage = E.parseUShort()),
                            (S.maxFunctionDefs = E.parseUShort()),
                            (S.maxInstructionDefs = E.parseUShort()),
                            (S.maxStackElements = E.parseUShort()),
                            (S.maxSizeOfInstructions = E.parseUShort()),
                            (S.maxComponentElements = E.parseUShort()),
                            (S.maxComponentDepth = E.parseUShort())),
                          S
                        );
                      },
                      make: function (p) {
                        return new Me.Table('maxp', [
                          { name: 'version', type: 'FIXED', value: 20480 },
                          { name: 'numGlyphs', type: 'USHORT', value: p },
                        ]);
                      },
                    },
                    ct = [
                      'copyright',
                      'fontFamily',
                      'fontSubfamily',
                      'uniqueID',
                      'fullName',
                      'version',
                      'postScriptName',
                      'trademark',
                      'manufacturer',
                      'designer',
                      'description',
                      'manufacturerURL',
                      'designerURL',
                      'license',
                      'licenseURL',
                      'reserved',
                      'preferredFamily',
                      'preferredSubfamily',
                      'compatibleFullName',
                      'sampleText',
                      'postScriptFindFontName',
                      'wwsFamily',
                      'wwsSubfamily',
                    ],
                    Le = {
                      0: 'en',
                      1: 'fr',
                      2: 'de',
                      3: 'it',
                      4: 'nl',
                      5: 'sv',
                      6: 'es',
                      7: 'da',
                      8: 'pt',
                      9: 'no',
                      10: 'he',
                      11: 'ja',
                      12: 'ar',
                      13: 'fi',
                      14: 'el',
                      15: 'is',
                      16: 'mt',
                      17: 'tr',
                      18: 'hr',
                      19: 'zh-Hant',
                      20: 'ur',
                      21: 'hi',
                      22: 'th',
                      23: 'ko',
                      24: 'lt',
                      25: 'pl',
                      26: 'hu',
                      27: 'es',
                      28: 'lv',
                      29: 'se',
                      30: 'fo',
                      31: 'fa',
                      32: 'ru',
                      33: 'zh',
                      34: 'nl-BE',
                      35: 'ga',
                      36: 'sq',
                      37: 'ro',
                      38: 'cz',
                      39: 'sk',
                      40: 'si',
                      41: 'yi',
                      42: 'sr',
                      43: 'mk',
                      44: 'bg',
                      45: 'uk',
                      46: 'be',
                      47: 'uz',
                      48: 'kk',
                      49: 'az-Cyrl',
                      50: 'az-Arab',
                      51: 'hy',
                      52: 'ka',
                      53: 'mo',
                      54: 'ky',
                      55: 'tg',
                      56: 'tk',
                      57: 'mn-CN',
                      58: 'mn',
                      59: 'ps',
                      60: 'ks',
                      61: 'ku',
                      62: 'sd',
                      63: 'bo',
                      64: 'ne',
                      65: 'sa',
                      66: 'mr',
                      67: 'bn',
                      68: 'as',
                      69: 'gu',
                      70: 'pa',
                      71: 'or',
                      72: 'ml',
                      73: 'kn',
                      74: 'ta',
                      75: 'te',
                      76: 'si',
                      77: 'my',
                      78: 'km',
                      79: 'lo',
                      80: 'vi',
                      81: 'id',
                      82: 'tl',
                      83: 'ms',
                      84: 'ms-Arab',
                      85: 'am',
                      86: 'ti',
                      87: 'om',
                      88: 'so',
                      89: 'sw',
                      90: 'rw',
                      91: 'rn',
                      92: 'ny',
                      93: 'mg',
                      94: 'eo',
                      128: 'cy',
                      129: 'eu',
                      130: 'ca',
                      131: 'la',
                      132: 'qu',
                      133: 'gn',
                      134: 'ay',
                      135: 'tt',
                      136: 'ug',
                      137: 'dz',
                      138: 'jv',
                      139: 'su',
                      140: 'gl',
                      141: 'af',
                      142: 'br',
                      143: 'iu',
                      144: 'gd',
                      145: 'gv',
                      146: 'ga',
                      147: 'to',
                      148: 'el-polyton',
                      149: 'kl',
                      150: 'az',
                      151: 'nn',
                    },
                    mt = {
                      0: 0,
                      1: 0,
                      2: 0,
                      3: 0,
                      4: 0,
                      5: 0,
                      6: 0,
                      7: 0,
                      8: 0,
                      9: 0,
                      10: 5,
                      11: 1,
                      12: 4,
                      13: 0,
                      14: 6,
                      15: 0,
                      16: 0,
                      17: 0,
                      18: 0,
                      19: 2,
                      20: 4,
                      21: 9,
                      22: 21,
                      23: 3,
                      24: 29,
                      25: 29,
                      26: 29,
                      27: 29,
                      28: 29,
                      29: 0,
                      30: 0,
                      31: 4,
                      32: 7,
                      33: 25,
                      34: 0,
                      35: 0,
                      36: 0,
                      37: 0,
                      38: 29,
                      39: 29,
                      40: 0,
                      41: 5,
                      42: 7,
                      43: 7,
                      44: 7,
                      45: 7,
                      46: 7,
                      47: 7,
                      48: 7,
                      49: 7,
                      50: 4,
                      51: 24,
                      52: 23,
                      53: 7,
                      54: 7,
                      55: 7,
                      56: 7,
                      57: 27,
                      58: 7,
                      59: 4,
                      60: 4,
                      61: 4,
                      62: 4,
                      63: 26,
                      64: 9,
                      65: 9,
                      66: 9,
                      67: 13,
                      68: 13,
                      69: 11,
                      70: 10,
                      71: 12,
                      72: 17,
                      73: 16,
                      74: 14,
                      75: 15,
                      76: 18,
                      77: 19,
                      78: 20,
                      79: 22,
                      80: 30,
                      81: 0,
                      82: 0,
                      83: 0,
                      84: 4,
                      85: 28,
                      86: 28,
                      87: 28,
                      88: 0,
                      89: 0,
                      90: 0,
                      91: 0,
                      92: 0,
                      93: 0,
                      94: 0,
                      128: 0,
                      129: 0,
                      130: 0,
                      131: 0,
                      132: 0,
                      133: 0,
                      134: 0,
                      135: 7,
                      136: 4,
                      137: 26,
                      138: 0,
                      139: 0,
                      140: 0,
                      141: 0,
                      142: 0,
                      143: 28,
                      144: 0,
                      145: 0,
                      146: 0,
                      147: 0,
                      148: 6,
                      149: 0,
                      150: 0,
                      151: 0,
                    },
                    qe = {
                      1078: 'af',
                      1052: 'sq',
                      1156: 'gsw',
                      1118: 'am',
                      5121: 'ar-DZ',
                      15361: 'ar-BH',
                      3073: 'ar',
                      2049: 'ar-IQ',
                      11265: 'ar-JO',
                      13313: 'ar-KW',
                      12289: 'ar-LB',
                      4097: 'ar-LY',
                      6145: 'ary',
                      8193: 'ar-OM',
                      16385: 'ar-QA',
                      1025: 'ar-SA',
                      10241: 'ar-SY',
                      7169: 'aeb',
                      14337: 'ar-AE',
                      9217: 'ar-YE',
                      1067: 'hy',
                      1101: 'as',
                      2092: 'az-Cyrl',
                      1068: 'az',
                      1133: 'ba',
                      1069: 'eu',
                      1059: 'be',
                      2117: 'bn',
                      1093: 'bn-IN',
                      8218: 'bs-Cyrl',
                      5146: 'bs',
                      1150: 'br',
                      1026: 'bg',
                      1027: 'ca',
                      3076: 'zh-HK',
                      5124: 'zh-MO',
                      2052: 'zh',
                      4100: 'zh-SG',
                      1028: 'zh-TW',
                      1155: 'co',
                      1050: 'hr',
                      4122: 'hr-BA',
                      1029: 'cs',
                      1030: 'da',
                      1164: 'prs',
                      1125: 'dv',
                      2067: 'nl-BE',
                      1043: 'nl',
                      3081: 'en-AU',
                      10249: 'en-BZ',
                      4105: 'en-CA',
                      9225: 'en-029',
                      16393: 'en-IN',
                      6153: 'en-IE',
                      8201: 'en-JM',
                      17417: 'en-MY',
                      5129: 'en-NZ',
                      13321: 'en-PH',
                      18441: 'en-SG',
                      7177: 'en-ZA',
                      11273: 'en-TT',
                      2057: 'en-GB',
                      1033: 'en',
                      12297: 'en-ZW',
                      1061: 'et',
                      1080: 'fo',
                      1124: 'fil',
                      1035: 'fi',
                      2060: 'fr-BE',
                      3084: 'fr-CA',
                      1036: 'fr',
                      5132: 'fr-LU',
                      6156: 'fr-MC',
                      4108: 'fr-CH',
                      1122: 'fy',
                      1110: 'gl',
                      1079: 'ka',
                      3079: 'de-AT',
                      1031: 'de',
                      5127: 'de-LI',
                      4103: 'de-LU',
                      2055: 'de-CH',
                      1032: 'el',
                      1135: 'kl',
                      1095: 'gu',
                      1128: 'ha',
                      1037: 'he',
                      1081: 'hi',
                      1038: 'hu',
                      1039: 'is',
                      1136: 'ig',
                      1057: 'id',
                      1117: 'iu',
                      2141: 'iu-Latn',
                      2108: 'ga',
                      1076: 'xh',
                      1077: 'zu',
                      1040: 'it',
                      2064: 'it-CH',
                      1041: 'ja',
                      1099: 'kn',
                      1087: 'kk',
                      1107: 'km',
                      1158: 'quc',
                      1159: 'rw',
                      1089: 'sw',
                      1111: 'kok',
                      1042: 'ko',
                      1088: 'ky',
                      1108: 'lo',
                      1062: 'lv',
                      1063: 'lt',
                      2094: 'dsb',
                      1134: 'lb',
                      1071: 'mk',
                      2110: 'ms-BN',
                      1086: 'ms',
                      1100: 'ml',
                      1082: 'mt',
                      1153: 'mi',
                      1146: 'arn',
                      1102: 'mr',
                      1148: 'moh',
                      1104: 'mn',
                      2128: 'mn-CN',
                      1121: 'ne',
                      1044: 'nb',
                      2068: 'nn',
                      1154: 'oc',
                      1096: 'or',
                      1123: 'ps',
                      1045: 'pl',
                      1046: 'pt',
                      2070: 'pt-PT',
                      1094: 'pa',
                      1131: 'qu-BO',
                      2155: 'qu-EC',
                      3179: 'qu',
                      1048: 'ro',
                      1047: 'rm',
                      1049: 'ru',
                      9275: 'smn',
                      4155: 'smj-NO',
                      5179: 'smj',
                      3131: 'se-FI',
                      1083: 'se',
                      2107: 'se-SE',
                      8251: 'sms',
                      6203: 'sma-NO',
                      7227: 'sms',
                      1103: 'sa',
                      7194: 'sr-Cyrl-BA',
                      3098: 'sr',
                      6170: 'sr-Latn-BA',
                      2074: 'sr-Latn',
                      1132: 'nso',
                      1074: 'tn',
                      1115: 'si',
                      1051: 'sk',
                      1060: 'sl',
                      11274: 'es-AR',
                      16394: 'es-BO',
                      13322: 'es-CL',
                      9226: 'es-CO',
                      5130: 'es-CR',
                      7178: 'es-DO',
                      12298: 'es-EC',
                      17418: 'es-SV',
                      4106: 'es-GT',
                      18442: 'es-HN',
                      2058: 'es-MX',
                      19466: 'es-NI',
                      6154: 'es-PA',
                      15370: 'es-PY',
                      10250: 'es-PE',
                      20490: 'es-PR',
                      3082: 'es',
                      1034: 'es',
                      21514: 'es-US',
                      14346: 'es-UY',
                      8202: 'es-VE',
                      2077: 'sv-FI',
                      1053: 'sv',
                      1114: 'syr',
                      1064: 'tg',
                      2143: 'tzm',
                      1097: 'ta',
                      1092: 'tt',
                      1098: 'te',
                      1054: 'th',
                      1105: 'bo',
                      1055: 'tr',
                      1090: 'tk',
                      1152: 'ug',
                      1058: 'uk',
                      1070: 'hsb',
                      1056: 'ur',
                      2115: 'uz-Cyrl',
                      1091: 'uz',
                      1066: 'vi',
                      1106: 'cy',
                      1160: 'wo',
                      1157: 'sah',
                      1144: 'ii',
                      1130: 'yo',
                    },
                    ft = 'utf-16',
                    He = {
                      0: 'macintosh',
                      1: 'x-mac-japanese',
                      2: 'x-mac-chinesetrad',
                      3: 'x-mac-korean',
                      6: 'x-mac-greek',
                      7: 'x-mac-cyrillic',
                      9: 'x-mac-devanagai',
                      10: 'x-mac-gurmukhi',
                      11: 'x-mac-gujarati',
                      12: 'x-mac-oriya',
                      13: 'x-mac-bengali',
                      14: 'x-mac-tamil',
                      15: 'x-mac-telugu',
                      16: 'x-mac-kannada',
                      17: 'x-mac-malayalam',
                      18: 'x-mac-sinhalese',
                      19: 'x-mac-burmese',
                      20: 'x-mac-khmer',
                      21: 'x-mac-thai',
                      22: 'x-mac-lao',
                      23: 'x-mac-georgian',
                      24: 'x-mac-armenian',
                      25: 'x-mac-chinesesimp',
                      26: 'x-mac-tibetan',
                      27: 'x-mac-mongolian',
                      28: 'x-mac-ethiopic',
                      29: 'x-mac-ce',
                      30: 'x-mac-vietnamese',
                      31: 'x-mac-extarabic',
                    },
                    Ft = {
                      15: 'x-mac-icelandic',
                      17: 'x-mac-turkish',
                      18: 'x-mac-croatian',
                      24: 'x-mac-ce',
                      25: 'x-mac-ce',
                      26: 'x-mac-ce',
                      27: 'x-mac-ce',
                      28: 'x-mac-ce',
                      30: 'x-mac-icelandic',
                      37: 'x-mac-romanian',
                      38: 'x-mac-ce',
                      39: 'x-mac-ce',
                      40: 'x-mac-ce',
                      143: 'x-mac-inuit',
                      146: 'x-mac-gaelic',
                    };
                  function Xt(p, w, S) {
                    switch (p) {
                      case 0:
                        return ft;
                      case 1:
                        return Ft[S] || He[w];
                      case 3:
                        if (w === 1 || w === 10) return ft;
                    }
                  }
                  function It(p) {
                    var w,
                      S = {};
                    for (w in p) S[p[w]] = parseInt(w);
                    return S;
                  }
                  function Qt(p, w, S, E, I, F) {
                    return new Me.Record('NameRecord', [
                      { name: 'platformID', type: 'USHORT', value: p },
                      { name: 'encodingID', type: 'USHORT', value: w },
                      { name: 'languageID', type: 'USHORT', value: S },
                      { name: 'nameID', type: 'USHORT', value: E },
                      { name: 'length', type: 'USHORT', value: I },
                      { name: 'offset', type: 'USHORT', value: F },
                    ]);
                  }
                  function Rr(p, w) {
                    if (
                      (S = (function (F, V) {
                        var J = F.length,
                          ie = V.length - J + 1;
                        e: for (var oe = 0; oe < ie; oe++)
                          for (; oe < ie; oe++) {
                            for (var ye = 0; ye < J; ye++)
                              if (V[oe + ye] !== F[ye]) continue e;
                            return oe;
                          }
                        return -1;
                      })(p, w)) < 0
                    )
                      for (var S = w.length, E = 0, I = p.length; E < I; ++E)
                        w.push(p[E]);
                    return S;
                  }
                  var gr = {
                      parse: function (p, w, S) {
                        for (
                          var E = {},
                            I = new xe.Parser(p, w),
                            w = I.parseUShort(),
                            F = I.parseUShort(),
                            V = I.offset + I.parseUShort(),
                            J = 0;
                          J < F;
                          J++
                        ) {
                          var De = I.parseUShort(),
                            ie = I.parseUShort(),
                            oe = I.parseUShort(),
                            ye = I.parseUShort(),
                            ye = ct[ye] || ye,
                            Te = I.parseUShort(),
                            we = I.parseUShort(),
                            de = (function (Re, Ee, ke) {
                              switch (Re) {
                                case 0:
                                  if (Ee === 65535) return 'und';
                                  if (ke) return ke[Ee];
                                  break;
                                case 1:
                                  return Le[Ee];
                                case 3:
                                  return qe[Ee];
                              }
                            })(De, oe, S),
                            De = Xt(De, ie, oe);
                          De !== void 0 &&
                            de !== void 0 &&
                            ((ie = void 0),
                            (ie =
                              De === ft
                                ? B.UTF16(p, V + we, Te)
                                : B.MACSTRING(p, V + we, Te, De)) &&
                              ((oe =
                                (oe = E[ye]) === void 0 ? (E[ye] = {}) : oe)[
                                de
                              ] = ie));
                        }
                        return w === 1 && I.parseUShort(), E;
                      },
                      make: function (p, w) {
                        var S,
                          E = [],
                          I = {},
                          F = It(ct);
                        for (S in p) {
                          var V = F[S];
                          if (
                            (V === void 0 && (V = S),
                            (we = parseInt(V)),
                            isNaN(we))
                          )
                            throw new Error(
                              'Name table entry "' +
                                S +
                                '" does not exist, see nameTableNames for complete list.',
                            );
                          (I[we] = p[S]), E.push(we);
                        }
                        for (
                          var J = It(Le), ie = It(qe), oe = [], ye = [], Te = 0;
                          Te < E.length;
                          Te++
                        ) {
                          var we,
                            de,
                            De = I[(we = E[Te])];
                          for (de in De) {
                            var Oe = De[de],
                              it = 1,
                              Re = J[de],
                              Ee = mt[Re],
                              ke = Xt(it, Ee, Re),
                              ke = Y.MACSTRING(Oe, ke),
                              et =
                                (ke === void 0 &&
                                  ((it = 0),
                                  (Re = w.indexOf(de)) < 0 &&
                                    ((Re = w.length), w.push(de)),
                                  (Ee = 4),
                                  (ke = Y.UTF16(Oe))),
                                Rr(ke, ye)),
                              it =
                                (oe.push(Qt(it, Ee, Re, we, ke.length, et)),
                                ie[de]);
                            it !== void 0 &&
                              ((Re = Rr((Ee = Y.UTF16(Oe)), ye)),
                              oe.push(Qt(3, 1, it, we, Ee.length, Re)));
                          }
                        }
                        oe.sort(function (lt, St) {
                          return (
                            lt.platformID - St.platformID ||
                            lt.encodingID - St.encodingID ||
                            lt.languageID - St.languageID ||
                            lt.nameID - St.nameID
                          );
                        });
                        for (
                          var tt = new Me.Table('name', [
                              { name: 'format', type: 'USHORT', value: 0 },
                              {
                                name: 'count',
                                type: 'USHORT',
                                value: oe.length,
                              },
                              {
                                name: 'stringOffset',
                                type: 'USHORT',
                                value: 6 + 12 * oe.length,
                              },
                            ]),
                            rt = 0;
                          rt < oe.length;
                          rt++
                        )
                          tt.fields.push({
                            name: 'record_' + rt,
                            type: 'RECORD',
                            value: oe[rt],
                          });
                        return (
                          tt.fields.push({
                            name: 'strings',
                            type: 'LITERAL',
                            value: ye,
                          }),
                          tt
                        );
                      },
                    },
                    Pr = [
                      { begin: 0, end: 127 },
                      { begin: 128, end: 255 },
                      { begin: 256, end: 383 },
                      { begin: 384, end: 591 },
                      { begin: 592, end: 687 },
                      { begin: 688, end: 767 },
                      { begin: 768, end: 879 },
                      { begin: 880, end: 1023 },
                      { begin: 11392, end: 11519 },
                      { begin: 1024, end: 1279 },
                      { begin: 1328, end: 1423 },
                      { begin: 1424, end: 1535 },
                      { begin: 42240, end: 42559 },
                      { begin: 1536, end: 1791 },
                      { begin: 1984, end: 2047 },
                      { begin: 2304, end: 2431 },
                      { begin: 2432, end: 2559 },
                      { begin: 2560, end: 2687 },
                      { begin: 2688, end: 2815 },
                      { begin: 2816, end: 2943 },
                      { begin: 2944, end: 3071 },
                      { begin: 3072, end: 3199 },
                      { begin: 3200, end: 3327 },
                      { begin: 3328, end: 3455 },
                      { begin: 3584, end: 3711 },
                      { begin: 3712, end: 3839 },
                      { begin: 4256, end: 4351 },
                      { begin: 6912, end: 7039 },
                      { begin: 4352, end: 4607 },
                      { begin: 7680, end: 7935 },
                      { begin: 7936, end: 8191 },
                      { begin: 8192, end: 8303 },
                      { begin: 8304, end: 8351 },
                      { begin: 8352, end: 8399 },
                      { begin: 8400, end: 8447 },
                      { begin: 8448, end: 8527 },
                      { begin: 8528, end: 8591 },
                      { begin: 8592, end: 8703 },
                      { begin: 8704, end: 8959 },
                      { begin: 8960, end: 9215 },
                      { begin: 9216, end: 9279 },
                      { begin: 9280, end: 9311 },
                      { begin: 9312, end: 9471 },
                      { begin: 9472, end: 9599 },
                      { begin: 9600, end: 9631 },
                      { begin: 9632, end: 9727 },
                      { begin: 9728, end: 9983 },
                      { begin: 9984, end: 10175 },
                      { begin: 12288, end: 12351 },
                      { begin: 12352, end: 12447 },
                      { begin: 12448, end: 12543 },
                      { begin: 12544, end: 12591 },
                      { begin: 12592, end: 12687 },
                      { begin: 43072, end: 43135 },
                      { begin: 12800, end: 13055 },
                      { begin: 13056, end: 13311 },
                      { begin: 44032, end: 55215 },
                      { begin: 55296, end: 57343 },
                      { begin: 67840, end: 67871 },
                      { begin: 19968, end: 40959 },
                      { begin: 57344, end: 63743 },
                      { begin: 12736, end: 12783 },
                      { begin: 64256, end: 64335 },
                      { begin: 64336, end: 65023 },
                      { begin: 65056, end: 65071 },
                      { begin: 65040, end: 65055 },
                      { begin: 65104, end: 65135 },
                      { begin: 65136, end: 65279 },
                      { begin: 65280, end: 65519 },
                      { begin: 65520, end: 65535 },
                      { begin: 3840, end: 4095 },
                      { begin: 1792, end: 1871 },
                      { begin: 1920, end: 1983 },
                      { begin: 3456, end: 3583 },
                      { begin: 4096, end: 4255 },
                      { begin: 4608, end: 4991 },
                      { begin: 5024, end: 5119 },
                      { begin: 5120, end: 5759 },
                      { begin: 5760, end: 5791 },
                      { begin: 5792, end: 5887 },
                      { begin: 6016, end: 6143 },
                      { begin: 6144, end: 6319 },
                      { begin: 10240, end: 10495 },
                      { begin: 40960, end: 42127 },
                      { begin: 5888, end: 5919 },
                      { begin: 66304, end: 66351 },
                      { begin: 66352, end: 66383 },
                      { begin: 66560, end: 66639 },
                      { begin: 118784, end: 119039 },
                      { begin: 119808, end: 120831 },
                      { begin: 1044480, end: 1048573 },
                      { begin: 65024, end: 65039 },
                      { begin: 917504, end: 917631 },
                      { begin: 6400, end: 6479 },
                      { begin: 6480, end: 6527 },
                      { begin: 6528, end: 6623 },
                      { begin: 6656, end: 6687 },
                      { begin: 11264, end: 11359 },
                      { begin: 11568, end: 11647 },
                      { begin: 19904, end: 19967 },
                      { begin: 43008, end: 43055 },
                      { begin: 65536, end: 65663 },
                      { begin: 65856, end: 65935 },
                      { begin: 66432, end: 66463 },
                      { begin: 66464, end: 66527 },
                      { begin: 66640, end: 66687 },
                      { begin: 66688, end: 66735 },
                      { begin: 67584, end: 67647 },
                      { begin: 68096, end: 68191 },
                      { begin: 119552, end: 119647 },
                      { begin: 73728, end: 74751 },
                      { begin: 119648, end: 119679 },
                      { begin: 7040, end: 7103 },
                      { begin: 7168, end: 7247 },
                      { begin: 7248, end: 7295 },
                      { begin: 43136, end: 43231 },
                      { begin: 43264, end: 43311 },
                      { begin: 43312, end: 43359 },
                      { begin: 43520, end: 43615 },
                      { begin: 65936, end: 65999 },
                      { begin: 66e3, end: 66047 },
                      { begin: 66208, end: 66271 },
                      { begin: 127024, end: 127135 },
                    ],
                    Jt = {
                      parse: function (p, w) {
                        var S = {},
                          E = new xe.Parser(p, w);
                        (S.version = E.parseUShort()),
                          (S.xAvgCharWidth = E.parseShort()),
                          (S.usWeightClass = E.parseUShort()),
                          (S.usWidthClass = E.parseUShort()),
                          (S.fsType = E.parseUShort()),
                          (S.ySubscriptXSize = E.parseShort()),
                          (S.ySubscriptYSize = E.parseShort()),
                          (S.ySubscriptXOffset = E.parseShort()),
                          (S.ySubscriptYOffset = E.parseShort()),
                          (S.ySuperscriptXSize = E.parseShort()),
                          (S.ySuperscriptYSize = E.parseShort()),
                          (S.ySuperscriptXOffset = E.parseShort()),
                          (S.ySuperscriptYOffset = E.parseShort()),
                          (S.yStrikeoutSize = E.parseShort()),
                          (S.yStrikeoutPosition = E.parseShort()),
                          (S.sFamilyClass = E.parseShort()),
                          (S.panose = []);
                        for (var I = 0; I < 10; I++)
                          S.panose[I] = E.parseByte();
                        return (
                          (S.ulUnicodeRange1 = E.parseULong()),
                          (S.ulUnicodeRange2 = E.parseULong()),
                          (S.ulUnicodeRange3 = E.parseULong()),
                          (S.ulUnicodeRange4 = E.parseULong()),
                          (S.achVendID = String.fromCharCode(
                            E.parseByte(),
                            E.parseByte(),
                            E.parseByte(),
                            E.parseByte(),
                          )),
                          (S.fsSelection = E.parseUShort()),
                          (S.usFirstCharIndex = E.parseUShort()),
                          (S.usLastCharIndex = E.parseUShort()),
                          (S.sTypoAscender = E.parseShort()),
                          (S.sTypoDescender = E.parseShort()),
                          (S.sTypoLineGap = E.parseShort()),
                          (S.usWinAscent = E.parseUShort()),
                          (S.usWinDescent = E.parseUShort()),
                          1 <= S.version &&
                            ((S.ulCodePageRange1 = E.parseULong()),
                            (S.ulCodePageRange2 = E.parseULong())),
                          2 <= S.version &&
                            ((S.sxHeight = E.parseShort()),
                            (S.sCapHeight = E.parseShort()),
                            (S.usDefaultChar = E.parseUShort()),
                            (S.usBreakChar = E.parseUShort()),
                            (S.usMaxContent = E.parseUShort())),
                          S
                        );
                      },
                      make: function (p) {
                        return new Me.Table(
                          'OS/2',
                          [
                            { name: 'version', type: 'USHORT', value: 3 },
                            { name: 'xAvgCharWidth', type: 'SHORT', value: 0 },
                            { name: 'usWeightClass', type: 'USHORT', value: 0 },
                            { name: 'usWidthClass', type: 'USHORT', value: 0 },
                            { name: 'fsType', type: 'USHORT', value: 0 },
                            {
                              name: 'ySubscriptXSize',
                              type: 'SHORT',
                              value: 650,
                            },
                            {
                              name: 'ySubscriptYSize',
                              type: 'SHORT',
                              value: 699,
                            },
                            {
                              name: 'ySubscriptXOffset',
                              type: 'SHORT',
                              value: 0,
                            },
                            {
                              name: 'ySubscriptYOffset',
                              type: 'SHORT',
                              value: 140,
                            },
                            {
                              name: 'ySuperscriptXSize',
                              type: 'SHORT',
                              value: 650,
                            },
                            {
                              name: 'ySuperscriptYSize',
                              type: 'SHORT',
                              value: 699,
                            },
                            {
                              name: 'ySuperscriptXOffset',
                              type: 'SHORT',
                              value: 0,
                            },
                            {
                              name: 'ySuperscriptYOffset',
                              type: 'SHORT',
                              value: 479,
                            },
                            {
                              name: 'yStrikeoutSize',
                              type: 'SHORT',
                              value: 49,
                            },
                            {
                              name: 'yStrikeoutPosition',
                              type: 'SHORT',
                              value: 258,
                            },
                            { name: 'sFamilyClass', type: 'SHORT', value: 0 },
                            { name: 'bFamilyType', type: 'BYTE', value: 0 },
                            { name: 'bSerifStyle', type: 'BYTE', value: 0 },
                            { name: 'bWeight', type: 'BYTE', value: 0 },
                            { name: 'bProportion', type: 'BYTE', value: 0 },
                            { name: 'bContrast', type: 'BYTE', value: 0 },
                            {
                              name: 'bStrokeVariation',
                              type: 'BYTE',
                              value: 0,
                            },
                            { name: 'bArmStyle', type: 'BYTE', value: 0 },
                            { name: 'bLetterform', type: 'BYTE', value: 0 },
                            { name: 'bMidline', type: 'BYTE', value: 0 },
                            { name: 'bXHeight', type: 'BYTE', value: 0 },
                            {
                              name: 'ulUnicodeRange1',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulUnicodeRange2',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulUnicodeRange3',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulUnicodeRange4',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'achVendID',
                              type: 'CHARARRAY',
                              value: 'XXXX',
                            },
                            { name: 'fsSelection', type: 'USHORT', value: 0 },
                            {
                              name: 'usFirstCharIndex',
                              type: 'USHORT',
                              value: 0,
                            },
                            {
                              name: 'usLastCharIndex',
                              type: 'USHORT',
                              value: 0,
                            },
                            { name: 'sTypoAscender', type: 'SHORT', value: 0 },
                            { name: 'sTypoDescender', type: 'SHORT', value: 0 },
                            { name: 'sTypoLineGap', type: 'SHORT', value: 0 },
                            { name: 'usWinAscent', type: 'USHORT', value: 0 },
                            { name: 'usWinDescent', type: 'USHORT', value: 0 },
                            {
                              name: 'ulCodePageRange1',
                              type: 'ULONG',
                              value: 0,
                            },
                            {
                              name: 'ulCodePageRange2',
                              type: 'ULONG',
                              value: 0,
                            },
                            { name: 'sxHeight', type: 'SHORT', value: 0 },
                            { name: 'sCapHeight', type: 'SHORT', value: 0 },
                            { name: 'usDefaultChar', type: 'USHORT', value: 0 },
                            { name: 'usBreakChar', type: 'USHORT', value: 0 },
                            { name: 'usMaxContext', type: 'USHORT', value: 0 },
                          ],
                          p,
                        );
                      },
                      unicodeRanges: Pr,
                      getUnicodeRange: function (p) {
                        for (var w = 0; w < Pr.length; w += 1) {
                          var S = Pr[w];
                          if (p >= S.begin && p < S.end) return w;
                        }
                        return -1;
                      },
                    },
                    gi = {
                      parse: function (p, w) {
                        var S = {},
                          E = new xe.Parser(p, w);
                        switch (
                          ((S.version = E.parseVersion()),
                          (S.italicAngle = E.parseFixed()),
                          (S.underlinePosition = E.parseShort()),
                          (S.underlineThickness = E.parseShort()),
                          (S.isFixedPitch = E.parseULong()),
                          (S.minMemType42 = E.parseULong()),
                          (S.maxMemType42 = E.parseULong()),
                          (S.minMemType1 = E.parseULong()),
                          (S.maxMemType1 = E.parseULong()),
                          S.version)
                        ) {
                          case 1:
                            S.names = ge.slice();
                            break;
                          case 2:
                            (S.numberOfGlyphs = E.parseUShort()),
                              (S.glyphNameIndex = new Array(S.numberOfGlyphs));
                            for (var I = 0; I < S.numberOfGlyphs; I++)
                              S.glyphNameIndex[I] = E.parseUShort();
                            S.names = [];
                            for (var F, V = 0; V < S.numberOfGlyphs; V++)
                              S.glyphNameIndex[V] >= ge.length &&
                                ((F = E.parseChar()),
                                S.names.push(E.parseString(F)));
                            break;
                          case 2.5:
                            (S.numberOfGlyphs = E.parseUShort()),
                              (S.offset = new Array(S.numberOfGlyphs));
                            for (var J = 0; J < S.numberOfGlyphs; J++)
                              S.offset[J] = E.parseChar();
                        }
                        return S;
                      },
                      make: function () {
                        return new Me.Table('post', [
                          { name: 'version', type: 'FIXED', value: 196608 },
                          { name: 'italicAngle', type: 'FIXED', value: 0 },
                          {
                            name: 'underlinePosition',
                            type: 'FWORD',
                            value: 0,
                          },
                          {
                            name: 'underlineThickness',
                            type: 'FWORD',
                            value: 0,
                          },
                          { name: 'isFixedPitch', type: 'ULONG', value: 0 },
                          { name: 'minMemType42', type: 'ULONG', value: 0 },
                          { name: 'maxMemType42', type: 'ULONG', value: 0 },
                          { name: 'minMemType1', type: 'ULONG', value: 0 },
                          { name: 'maxMemType1', type: 'ULONG', value: 0 },
                        ]);
                      },
                    },
                    wr = new Array(9),
                    jn =
                      ((wr[1] = function () {
                        var p = this.offset + this.relativeOffset,
                          w = this.parseUShort();
                        return w === 1
                          ? {
                              substFormat: 1,
                              coverage: this.parsePointer(_e.coverage),
                              deltaGlyphId: this.parseUShort(),
                            }
                          : w === 2
                          ? {
                              substFormat: 2,
                              coverage: this.parsePointer(_e.coverage),
                              substitute: this.parseOffset16List(),
                            }
                          : void L.assert(
                              !1,
                              '0x' +
                                p.toString(16) +
                                ': lookup type 1 format must be 1 or 2.',
                            );
                      }),
                      (wr[2] = function () {
                        var p = this.parseUShort();
                        return (
                          L.argument(
                            p === 1,
                            'GSUB Multiple Substitution Subtable identifier-format must be 1',
                          ),
                          {
                            substFormat: p,
                            coverage: this.parsePointer(_e.coverage),
                            sequences: this.parseListOfLists(),
                          }
                        );
                      }),
                      (wr[3] = function () {
                        var p = this.parseUShort();
                        return (
                          L.argument(
                            p === 1,
                            'GSUB Alternate Substitution Subtable identifier-format must be 1',
                          ),
                          {
                            substFormat: p,
                            coverage: this.parsePointer(_e.coverage),
                            alternateSets: this.parseListOfLists(),
                          }
                        );
                      }),
                      (wr[4] = function () {
                        var p = this.parseUShort();
                        return (
                          L.argument(
                            p === 1,
                            'GSUB ligature table identifier-format must be 1',
                          ),
                          {
                            substFormat: p,
                            coverage: this.parsePointer(_e.coverage),
                            ligatureSets: this.parseListOfLists(function () {
                              return {
                                ligGlyph: this.parseUShort(),
                                components: this.parseUShortList(
                                  this.parseUShort() - 1,
                                ),
                              };
                            }),
                          }
                        );
                      }),
                      { sequenceIndex: _e.uShort, lookupListIndex: _e.uShort });
                  (wr[5] = function () {
                    var p,
                      w,
                      S = this.offset + this.relativeOffset,
                      E = this.parseUShort();
                    return E === 1
                      ? {
                          substFormat: E,
                          coverage: this.parsePointer(_e.coverage),
                          ruleSets: this.parseListOfLists(function () {
                            var I = this.parseUShort(),
                              F = this.parseUShort();
                            return {
                              input: this.parseUShortList(I - 1),
                              lookupRecords: this.parseRecordList(F, jn),
                            };
                          }),
                        }
                      : E === 2
                      ? {
                          substFormat: E,
                          coverage: this.parsePointer(_e.coverage),
                          classDef: this.parsePointer(_e.classDef),
                          classSets: this.parseListOfLists(function () {
                            var I = this.parseUShort(),
                              F = this.parseUShort();
                            return {
                              classes: this.parseUShortList(I - 1),
                              lookupRecords: this.parseRecordList(F, jn),
                            };
                          }),
                        }
                      : E === 3
                      ? ((p = this.parseUShort()),
                        (w = this.parseUShort()),
                        {
                          substFormat: E,
                          coverages: this.parseList(p, _e.pointer(_e.coverage)),
                          lookupRecords: this.parseRecordList(w, jn),
                        })
                      : void L.assert(
                          !1,
                          '0x' +
                            S.toString(16) +
                            ': lookup type 5 format must be 1, 2 or 3.',
                        );
                  }),
                    (wr[6] = function () {
                      var p = this.offset + this.relativeOffset,
                        w = this.parseUShort();
                      return w === 1
                        ? {
                            substFormat: 1,
                            coverage: this.parsePointer(_e.coverage),
                            chainRuleSets: this.parseListOfLists(function () {
                              return {
                                backtrack: this.parseUShortList(),
                                input: this.parseUShortList(
                                  this.parseShort() - 1,
                                ),
                                lookahead: this.parseUShortList(),
                                lookupRecords: this.parseRecordList(jn),
                              };
                            }),
                          }
                        : w === 2
                        ? {
                            substFormat: 2,
                            coverage: this.parsePointer(_e.coverage),
                            backtrackClassDef: this.parsePointer(_e.classDef),
                            inputClassDef: this.parsePointer(_e.classDef),
                            lookaheadClassDef: this.parsePointer(_e.classDef),
                            chainClassSet: this.parseListOfLists(function () {
                              return {
                                backtrack: this.parseUShortList(),
                                input: this.parseUShortList(
                                  this.parseShort() - 1,
                                ),
                                lookahead: this.parseUShortList(),
                                lookupRecords: this.parseRecordList(jn),
                              };
                            }),
                          }
                        : w === 3
                        ? {
                            substFormat: 3,
                            backtrackCoverage: this.parseList(
                              _e.pointer(_e.coverage),
                            ),
                            inputCoverage: this.parseList(
                              _e.pointer(_e.coverage),
                            ),
                            lookaheadCoverage: this.parseList(
                              _e.pointer(_e.coverage),
                            ),
                            lookupRecords: this.parseRecordList(jn),
                          }
                        : void L.assert(
                            !1,
                            '0x' +
                              p.toString(16) +
                              ': lookup type 6 format must be 1, 2 or 3.',
                          );
                    }),
                    (wr[7] = function () {
                      var p = this.parseUShort(),
                        p =
                          (L.argument(
                            p === 1,
                            'GSUB Extension Substitution subtable identifier-format must be 1',
                          ),
                          this.parseUShort()),
                        w = new _e(this.data, this.offset + this.parseULong());
                      return {
                        substFormat: 1,
                        lookupType: p,
                        extension: wr[p].call(w),
                      };
                    }),
                    (wr[8] = function () {
                      var p = this.parseUShort();
                      return (
                        L.argument(
                          p === 1,
                          'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1',
                        ),
                        {
                          substFormat: p,
                          coverage: this.parsePointer(_e.coverage),
                          backtrackCoverage: this.parseList(
                            _e.pointer(_e.coverage),
                          ),
                          lookaheadCoverage: this.parseList(
                            _e.pointer(_e.coverage),
                          ),
                          substitutes: this.parseUShortList(),
                        }
                      );
                    });
                  var Ms = new Array(9);
                  (Ms[1] = function (p) {
                    return p.substFormat === 1
                      ? new Me.Table('substitutionTable', [
                          { name: 'substFormat', type: 'USHORT', value: 1 },
                          {
                            name: 'coverage',
                            type: 'TABLE',
                            value: new Me.Coverage(p.coverage),
                          },
                          {
                            name: 'deltaGlyphID',
                            type: 'USHORT',
                            value: p.deltaGlyphId,
                          },
                        ])
                      : new Me.Table(
                          'substitutionTable',
                          [
                            { name: 'substFormat', type: 'USHORT', value: 2 },
                            {
                              name: 'coverage',
                              type: 'TABLE',
                              value: new Me.Coverage(p.coverage),
                            },
                          ].concat(Me.ushortList('substitute', p.substitute)),
                        );
                  }),
                    (Ms[3] = function (p) {
                      return (
                        L.assert(
                          p.substFormat === 1,
                          'Lookup type 3 substFormat must be 1.',
                        ),
                        new Me.Table(
                          'substitutionTable',
                          [
                            { name: 'substFormat', type: 'USHORT', value: 1 },
                            {
                              name: 'coverage',
                              type: 'TABLE',
                              value: new Me.Coverage(p.coverage),
                            },
                          ].concat(
                            Me.tableList(
                              'altSet',
                              p.alternateSets,
                              function (w) {
                                return new Me.Table(
                                  'alternateSetTable',
                                  Me.ushortList('alternate', w),
                                );
                              },
                            ),
                          ),
                        )
                      );
                    }),
                    (Ms[4] = function (p) {
                      return (
                        L.assert(
                          p.substFormat === 1,
                          'Lookup type 4 substFormat must be 1.',
                        ),
                        new Me.Table(
                          'substitutionTable',
                          [
                            { name: 'substFormat', type: 'USHORT', value: 1 },
                            {
                              name: 'coverage',
                              type: 'TABLE',
                              value: new Me.Coverage(p.coverage),
                            },
                          ].concat(
                            Me.tableList(
                              'ligSet',
                              p.ligatureSets,
                              function (w) {
                                return new Me.Table(
                                  'ligatureSetTable',
                                  Me.tableList('ligature', w, function (S) {
                                    return new Me.Table(
                                      'ligatureTable',
                                      [
                                        {
                                          name: 'ligGlyph',
                                          type: 'USHORT',
                                          value: S.ligGlyph,
                                        },
                                      ].concat(
                                        Me.ushortList(
                                          'component',
                                          S.components,
                                          S.components.length + 1,
                                        ),
                                      ),
                                    );
                                  }),
                                );
                              },
                            ),
                          ),
                        )
                      );
                    });
                  var vi = {
                      parse: function (p, w) {
                        return (
                          (w = (p = new _e(p, (w = w || 0))).parseVersion(1)),
                          L.argument(
                            w === 1 || w === 1.1,
                            'Unsupported GSUB table version.',
                          ),
                          w === 1
                            ? {
                                version: w,
                                scripts: p.parseScriptList(),
                                features: p.parseFeatureList(),
                                lookups: p.parseLookupList(wr),
                              }
                            : {
                                version: w,
                                scripts: p.parseScriptList(),
                                features: p.parseFeatureList(),
                                lookups: p.parseLookupList(wr),
                                variations: p.parseFeatureVariationsList(),
                              }
                        );
                      },
                      make: function (p) {
                        return new Me.Table('GSUB', [
                          { name: 'version', type: 'ULONG', value: 65536 },
                          {
                            name: 'scripts',
                            type: 'TABLE',
                            value: new Me.ScriptList(p.scripts),
                          },
                          {
                            name: 'features',
                            type: 'TABLE',
                            value: new Me.FeatureList(p.features),
                          },
                          {
                            name: 'lookups',
                            type: 'TABLE',
                            value: new Me.LookupList(p.lookups, Ms),
                          },
                        ]);
                      },
                    },
                    bi = {
                      parse: function (p, w) {
                        for (
                          var S = new xe.Parser(p, w),
                            E = S.parseULong(),
                            I =
                              (L.argument(
                                E === 1,
                                'Unsupported META table version.',
                              ),
                              S.parseULong(),
                              S.parseULong(),
                              S.parseULong()),
                            F = {},
                            V = 0;
                          V < I;
                          V++
                        ) {
                          var J = S.parseTag(),
                            oe = S.parseULong(),
                            ie = S.parseULong(),
                            oe = B.UTF8(p, w + oe, ie);
                          F[J] = oe;
                        }
                        return F;
                      },
                      make: function (p) {
                        var w,
                          S = Object.keys(p).length,
                          E = '',
                          I = 16 + 12 * S,
                          F = new Me.Table('meta', [
                            { name: 'version', type: 'ULONG', value: 1 },
                            { name: 'flags', type: 'ULONG', value: 0 },
                            { name: 'offset', type: 'ULONG', value: I },
                            { name: 'numTags', type: 'ULONG', value: S },
                          ]);
                        for (w in p) {
                          var V = E.length;
                          (E += p[w]),
                            F.fields.push({
                              name: 'tag ' + w,
                              type: 'TAG',
                              value: w,
                            }),
                            F.fields.push({
                              name: 'offset ' + w,
                              type: 'ULONG',
                              value: I + V,
                            }),
                            F.fields.push({
                              name: 'length ' + w,
                              type: 'ULONG',
                              value: p[w].length,
                            });
                        }
                        return (
                          F.fields.push({
                            name: 'stringPool',
                            type: 'CHARARRAY',
                            value: E,
                          }),
                          F
                        );
                      },
                    };
                  function _i(p) {
                    return (Math.log(p) / Math.log(2)) | 0;
                  }
                  function _o(p) {
                    for (; p.length % 4 != 0; ) p.push(0);
                    for (var w = 0, S = 0; S < p.length; S += 4)
                      w +=
                        (p[S] << 24) +
                        (p[S + 1] << 16) +
                        (p[S + 2] << 8) +
                        p[S + 3];
                    return (w %= Math.pow(2, 32));
                  }
                  function wi(p, w, S, E) {
                    return new Me.Record('Table Record', [
                      {
                        name: 'tag',
                        type: 'TAG',
                        value: p !== void 0 ? p : '',
                      },
                      {
                        name: 'checkSum',
                        type: 'ULONG',
                        value: w !== void 0 ? w : 0,
                      },
                      {
                        name: 'offset',
                        type: 'ULONG',
                        value: S !== void 0 ? S : 0,
                      },
                      {
                        name: 'length',
                        type: 'ULONG',
                        value: E !== void 0 ? E : 0,
                      },
                    ]);
                  }
                  function xi(p) {
                    for (
                      var w = new Me.Table('sfnt', [
                          { name: 'version', type: 'TAG', value: 'OTTO' },
                          { name: 'numTables', type: 'USHORT', value: 0 },
                          { name: 'searchRange', type: 'USHORT', value: 0 },
                          { name: 'entrySelector', type: 'USHORT', value: 0 },
                          { name: 'rangeShift', type: 'USHORT', value: 0 },
                        ]),
                        S =
                          ((w.tables = p),
                          (w.numTables = p.length),
                          Math.pow(2, _i(w.numTables))),
                        E =
                          ((w.searchRange = 16 * S),
                          (w.entrySelector = _i(S)),
                          (w.rangeShift = 16 * w.numTables - w.searchRange),
                          []),
                        I = [],
                        F = w.sizeOf() + wi().sizeOf() * w.numTables;
                      F % 4 != 0;

                    )
                      (F += 1),
                        I.push({ name: 'padding', type: 'BYTE', value: 0 });
                    for (var V = 0; V < p.length; V += 1) {
                      var J = p[V],
                        ie =
                          (L.argument(
                            J.tableName.length === 4,
                            'Table name' + J.tableName + ' is invalid.',
                          ),
                          J.sizeOf()),
                        oe = wi(J.tableName, _o(J.encode()), F, ie);
                      for (
                        E.push({
                          name: oe.tag + ' Table Record',
                          type: 'RECORD',
                          value: oe,
                        }),
                          I.push({
                            name: J.tableName + ' table',
                            type: 'RECORD',
                            value: J,
                          }),
                          F += ie,
                          L.argument(
                            !isNaN(F),
                            'Something went wrong calculating the offset.',
                          );
                        F % 4 != 0;

                      )
                        (F += 1),
                          I.push({ name: 'padding', type: 'BYTE', value: 0 });
                    }
                    return (
                      E.sort(function (ye, Te) {
                        return ye.value.tag > Te.value.tag ? 1 : -1;
                      }),
                      (w.fields = w.fields.concat(E)),
                      (w.fields = w.fields.concat(I)),
                      w
                    );
                  }
                  function ji(p, w, S) {
                    for (var E = 0; E < w.length; E += 1) {
                      var I = p.charToGlyphIndex(w[E]);
                      if (0 < I) return p.glyphs.get(I).getMetrics();
                    }
                    return S;
                  }
                  var Rl = {
                    make: xi,
                    fontToTable: function (p) {
                      for (
                        var w,
                          S = [],
                          E = [],
                          I = [],
                          F = [],
                          V = [],
                          J = [],
                          ie = [],
                          oe = 0,
                          ye = 0,
                          Te = 0,
                          we = 0,
                          de = 0,
                          De = 0;
                        De < p.glyphs.length;
                        De += 1
                      ) {
                        var Oe = p.glyphs.get(De),
                          Re = 0 | Oe.unicode;
                        if (isNaN(Oe.advanceWidth))
                          throw new Error(
                            'Glyph ' +
                              Oe.name +
                              ' (' +
                              De +
                              '): advanceWidth is not a number.',
                          );
                        (Re < w || w === void 0) && 0 < Re && (w = Re),
                          oe < Re && (oe = Re);
                        var Re = Jt.getUnicodeRange(Re);
                        if (Re < 32) ye |= 1 << Re;
                        else if (Re < 64) Te |= 1 << (Re - 32);
                        else if (Re < 96) we |= 1 << (Re - 64);
                        else {
                          if (!(Re < 123))
                            throw new Error(
                              'Unicode ranges bits > 123 are reserved for internal usage',
                            );
                          de |= 1 << (Re - 96);
                        }
                        Oe.name !== '.notdef' &&
                          ((Re = Oe.getMetrics()),
                          S.push(Re.xMin),
                          E.push(Re.yMin),
                          I.push(Re.xMax),
                          F.push(Re.yMax),
                          J.push(Re.leftSideBearing),
                          ie.push(Re.rightSideBearing),
                          V.push(Oe.advanceWidth));
                      }
                      var Ee,
                        ke = {
                          xMin: Math.min.apply(null, S),
                          yMin: Math.min.apply(null, E),
                          xMax: Math.max.apply(null, I),
                          yMax: Math.max.apply(null, F),
                          advanceWidthMax: Math.max.apply(null, V),
                          advanceWidthAvg: (function (Kt) {
                            for (var Qn = 0, Mn = 0; Mn < Kt.length; Mn += 1)
                              Qn += Kt[Mn];
                            return Qn / Kt.length;
                          })(V),
                          minLeftSideBearing: Math.min.apply(null, J),
                          maxLeftSideBearing: Math.max.apply(null, J),
                          minRightSideBearing: Math.min.apply(null, ie),
                        },
                        et =
                          ((ke.ascender = p.ascender),
                          (ke.descender = p.descender),
                          Xn.make({
                            flags: 3,
                            unitsPerEm: p.unitsPerEm,
                            xMin: ke.xMin,
                            yMin: ke.yMin,
                            xMax: ke.xMax,
                            yMax: ke.yMax,
                            lowestRecPPEM: 3,
                            createdTimestamp: p.createdTimestamp,
                          })),
                        it = fe.make({
                          ascender: ke.ascender,
                          descender: ke.descender,
                          advanceWidthMax: ke.advanceWidthMax,
                          minLeftSideBearing: ke.minLeftSideBearing,
                          minRightSideBearing: ke.minRightSideBearing,
                          xMaxExtent:
                            ke.maxLeftSideBearing + (ke.xMax - ke.xMin),
                          numberOfHMetrics: p.glyphs.length,
                        }),
                        tt = Ne.make(p.glyphs.length),
                        rt = Jt.make({
                          xAvgCharWidth: Math.round(ke.advanceWidthAvg),
                          usWeightClass: p.tables.os2.usWeightClass,
                          usWidthClass: p.tables.os2.usWidthClass,
                          usFirstCharIndex: w,
                          usLastCharIndex: oe,
                          ulUnicodeRange1: ye,
                          ulUnicodeRange2: Te,
                          ulUnicodeRange3: we,
                          ulUnicodeRange4: de,
                          fsSelection: p.tables.os2.fsSelection,
                          sTypoAscender: ke.ascender,
                          sTypoDescender: ke.descender,
                          sTypoLineGap: 0,
                          usWinAscent: ke.yMax,
                          usWinDescent: Math.abs(ke.yMin),
                          ulCodePageRange1: 1,
                          sxHeight: ji(p, 'xyvw', {
                            yMax: Math.round(ke.ascender / 2),
                          }).yMax,
                          sCapHeight: ji(p, 'HIKLEFJMNTZBDPRAGOQSUVWXY', ke)
                            .yMax,
                          usDefaultChar: p.hasChar(' ') ? 32 : 0,
                          usBreakChar: p.hasChar(' ') ? 32 : 0,
                        }),
                        lt = Ue.make(p.glyphs),
                        St = Q.make(p.glyphs),
                        Et = p.getEnglishName('fontFamily'),
                        gt = p.getEnglishName('fontSubfamily'),
                        wt = Et + ' ' + gt,
                        Dt =
                          (Dt = p.getEnglishName('postScriptName')) ||
                          Et.replace(/\s/g, '') + '-' + gt,
                        qt = {};
                      for (Ee in p.names) qt[Ee] = p.names[Ee];
                      qt.uniqueID ||
                        (qt.uniqueID = {
                          en: p.getEnglishName('manufacturer') + ':' + wt,
                        }),
                        qt.postScriptName || (qt.postScriptName = { en: Dt }),
                        qt.preferredFamily ||
                          (qt.preferredFamily = p.names.fontFamily),
                        qt.preferredSubfamily ||
                          (qt.preferredSubfamily = p.names.fontSubfamily);
                      var ar = [],
                        ir = gr.make(qt, ar),
                        ar = 0 < ar.length ? Ye.make(ar) : void 0,
                        jr = gi.make(),
                        wt = Hn.make(p.glyphs, {
                          version: p.getEnglishName('version'),
                          fullName: wt,
                          familyName: Et,
                          weightName: gt,
                          postScriptName: Dt,
                          unitsPerEm: p.unitsPerEm,
                          fontBBox: [
                            0,
                            ke.yMin,
                            ke.ascender,
                            ke.advanceWidthMax,
                          ],
                        }),
                        Et =
                          p.metas && 0 < Object.keys(p.metas).length
                            ? bi.make(p.metas)
                            : void 0,
                        gt = [et, it, tt, rt, ir, St, jr, wt, lt];
                      ar && gt.push(ar),
                        p.tables.gsub && gt.push(vi.make(p.tables.gsub)),
                        Et && gt.push(Et);
                      for (
                        var lr = _o((Dt = xi(gt)).encode()),
                          Pt = Dt.fields,
                          nr = !1,
                          kt = 0;
                        kt < Pt.length;
                        kt += 1
                      )
                        if (Pt[kt].name === 'head table') {
                          (Pt[kt].value.checkSumAdjustment = 2981146554 - lr),
                            (nr = !0);
                          break;
                        }
                      if (nr) return Dt;
                      throw new Error(
                        'Could not find head table with checkSum to adjust.',
                      );
                    },
                    computeCheckSum: _o,
                  };
                  function wo(p, w) {
                    for (var S = 0, E = p.length - 1; S <= E; ) {
                      var I = (S + E) >>> 1,
                        F = p[I].tag;
                      if (F === w) return I;
                      F < w ? (S = 1 + I) : (E = I - 1);
                    }
                    return -S - 1;
                  }
                  function Si(p, w) {
                    for (var S = 0, E = p.length - 1; S <= E; ) {
                      var I = (S + E) >>> 1,
                        F = p[I];
                      if (F === w) return I;
                      F < w ? (S = 1 + I) : (E = I - 1);
                    }
                    return -S - 1;
                  }
                  function Ti(p, w) {
                    for (var S = 0, E = p.length - 1; S <= E; ) {
                      var I,
                        F = (S + E) >>> 1,
                        V = (I = p[F]).start;
                      if (V === w) return I;
                      V < w ? (S = 1 + F) : (E = F - 1);
                    }
                    if (0 < S) return w > (I = p[S - 1]).end ? 0 : I;
                  }
                  function Cs(p, w) {
                    (this.font = p), (this.tableName = w);
                  }
                  function Es(p) {
                    Cs.call(this, p, 'gpos');
                  }
                  function Ir(p) {
                    Cs.call(this, p, 'gsub');
                  }
                  function Mi(p, w, S) {
                    for (var E = p.subtables, I = 0; I < E.length; I++) {
                      var F = E[I];
                      if (F.substFormat === w) return F;
                    }
                    if (S) return E.push(S), S;
                  }
                  function Ci(p) {
                    for (
                      var w = new ArrayBuffer(p.length),
                        S = new Uint8Array(w),
                        E = 0;
                      E < p.length;
                      ++E
                    )
                      S[E] = p[E];
                    return w;
                  }
                  function Sn(p, w) {
                    if (!p) throw w;
                  }
                  function Ei(p, w, S, E, I) {
                    var F =
                      0 < (w & E)
                        ? ((F = p.parseByte()), S + (F = (w & I) == 0 ? -F : F))
                        : 0 < (w & I)
                        ? S
                        : S + p.parseShort();
                    return F;
                  }
                  function Pl(p, w, S) {
                    var E,
                      I = new xe.Parser(w, S);
                    if (
                      ((p.numberOfContours = I.parseShort()),
                      (p._xMin = I.parseShort()),
                      (p._yMin = I.parseShort()),
                      (p._xMax = I.parseShort()),
                      (p._yMax = I.parseShort()),
                      0 < p.numberOfContours)
                    ) {
                      for (
                        var F = (p.endPointIndices = []), V = 0;
                        V < p.numberOfContours;
                        V += 1
                      )
                        F.push(I.parseUShort());
                      (p.instructionLength = I.parseUShort()),
                        (p.instructions = []);
                      for (var J = 0; J < p.instructionLength; J += 1)
                        p.instructions.push(I.parseByte());
                      for (
                        var ie = F[F.length - 1] + 1, oe = [], ye = 0;
                        ye < ie;
                        ye += 1
                      )
                        if (((E = I.parseByte()), oe.push(E), 0 < (8 & E)))
                          for (var Te = I.parseByte(), we = 0; we < Te; we += 1)
                            oe.push(E), (ye += 1);
                      if (
                        (L.argument(oe.length === ie, 'Bad flags.'),
                        0 < F.length)
                      ) {
                        var de,
                          De = [];
                        if (0 < ie) {
                          for (var Oe = 0; Oe < ie; Oe += 1)
                            (E = oe[Oe]),
                              ((de = {}).onCurve = !!(1 & E)),
                              (de.lastPointOfContour = 0 <= F.indexOf(Oe)),
                              De.push(de);
                          for (var Re = 0, Ee = 0; Ee < ie; Ee += 1)
                            (E = oe[Ee]),
                              ((de = De[Ee]).x = Ei(I, E, Re, 2, 16)),
                              (Re = de.x);
                          for (var ke = 0, et = 0; et < ie; et += 1)
                            (E = oe[et]),
                              ((de = De[et]).y = Ei(I, E, ke, 4, 32)),
                              (ke = de.y);
                        }
                        p.points = De;
                      } else p.points = [];
                    } else if (p.numberOfContours === 0) p.points = [];
                    else {
                      (p.isComposite = !0),
                        (p.points = []),
                        (p.components = []);
                      for (var it = !0; it; ) {
                        oe = I.parseUShort();
                        var tt = {
                          glyphIndex: I.parseUShort(),
                          xScale: 1,
                          scale01: 0,
                          scale10: 0,
                          yScale: 1,
                          dx: 0,
                          dy: 0,
                        };
                        0 < (1 & oe)
                          ? 0 < (2 & oe)
                            ? ((tt.dx = I.parseShort()),
                              (tt.dy = I.parseShort()))
                            : (tt.matchedPoints = [
                                I.parseUShort(),
                                I.parseUShort(),
                              ])
                          : 0 < (2 & oe)
                          ? ((tt.dx = I.parseChar()), (tt.dy = I.parseChar()))
                          : (tt.matchedPoints = [I.parseByte(), I.parseByte()]),
                          0 < (8 & oe)
                            ? (tt.xScale = tt.yScale = I.parseF2Dot14())
                            : 0 < (64 & oe)
                            ? ((tt.xScale = I.parseF2Dot14()),
                              (tt.yScale = I.parseF2Dot14()))
                            : 0 < (128 & oe) &&
                              ((tt.xScale = I.parseF2Dot14()),
                              (tt.scale01 = I.parseF2Dot14()),
                              (tt.scale10 = I.parseF2Dot14()),
                              (tt.yScale = I.parseF2Dot14())),
                          p.components.push(tt),
                          (it = !!(32 & oe));
                      }
                      if (256 & oe) {
                        (p.instructionLength = I.parseUShort()),
                          (p.instructions = []);
                        for (var rt = 0; rt < p.instructionLength; rt += 1)
                          p.instructions.push(I.parseByte());
                      }
                    }
                  }
                  function xo(p, w) {
                    for (var S = [], E = 0; E < p.length; E += 1) {
                      var I = p[E],
                        I = {
                          x: w.xScale * I.x + w.scale01 * I.y + w.dx,
                          y: w.scale10 * I.x + w.yScale * I.y + w.dy,
                          onCurve: I.onCurve,
                          lastPointOfContour: I.lastPointOfContour,
                        };
                      S.push(I);
                    }
                    return S;
                  }
                  function ki(p) {
                    var w = new $();
                    if (p)
                      for (
                        var S = (function (Te) {
                            for (
                              var we = [], de = [], De = 0;
                              De < Te.length;
                              De += 1
                            ) {
                              var Oe = Te[De];
                              de.push(Oe),
                                Oe.lastPointOfContour &&
                                  (we.push(de), (de = []));
                            }
                            return (
                              L.argument(
                                de.length === 0,
                                'There are still points left in the current contour.',
                              ),
                              we
                            );
                          })(p),
                          E = 0;
                        E < S.length;
                        ++E
                      ) {
                        var I,
                          F = S[E],
                          V = F[F.length - 1],
                          J = F[0];
                        V.onCurve
                          ? w.moveTo(V.x, V.y)
                          : J.onCurve
                          ? w.moveTo(J.x, J.y)
                          : ((I = {
                              x: 0.5 * (V.x + J.x),
                              y: 0.5 * (V.y + J.y),
                            }),
                            w.moveTo(I.x, I.y));
                        for (var ie = 0; ie < F.length; ++ie) {
                          var oe,
                            ye = V,
                            V = J,
                            J = F[(ie + 1) % F.length];
                          V.onCurve
                            ? w.lineTo(V.x, V.y)
                            : ((oe = J),
                              ye.onCurve || (V.x, ye.x, V.y, ye.y),
                              J.onCurve ||
                                (oe = {
                                  x: 0.5 * (V.x + J.x),
                                  y: 0.5 * (V.y + J.y),
                                }),
                              w.quadraticCurveTo(V.x, V.y, oe.x, oe.y));
                        }
                        w.closePath();
                      }
                    return w;
                  }
                  function Il(p, w) {
                    if (w.isComposite)
                      for (var S = 0; S < w.components.length; S += 1) {
                        var E = w.components[S],
                          I = p.get(E.glyphIndex);
                        if ((I.getPath(), I.points)) {
                          var F = void 0;
                          if (E.matchedPoints === void 0) F = xo(I.points, E);
                          else {
                            if (
                              E.matchedPoints[0] > w.points.length - 1 ||
                              E.matchedPoints[1] > I.points.length - 1
                            )
                              throw Error(
                                'Matched points out of range in ' + w.name,
                              );
                            var V = w.points[E.matchedPoints[0]],
                              J = I.points[E.matchedPoints[1]],
                              E = {
                                xScale: E.xScale,
                                scale01: E.scale01,
                                scale10: E.scale10,
                                yScale: E.yScale,
                                dx: 0,
                                dy: 0,
                              },
                              J = xo([J], E)[0];
                            (E.dx = V.x - J.x),
                              (E.dy = V.y - J.y),
                              (F = xo(I.points, E));
                          }
                          w.points = w.points.concat(F);
                        }
                      }
                    return ki(w.points);
                  }
                  ((Es.prototype = Cs.prototype =
                    {
                      searchTag: wo,
                      binSearch: Si,
                      getTable: function (p) {
                        var w = this.font.tables[this.tableName];
                        return (w =
                          !w && p
                            ? (this.font.tables[this.tableName] =
                                this.createDefaultTable())
                            : w);
                      },
                      getScriptNames: function () {
                        var p = this.getTable();
                        return p
                          ? p.scripts.map(function (w) {
                              return w.tag;
                            })
                          : [];
                      },
                      getDefaultScriptName: function () {
                        var p = this.getTable();
                        if (p) {
                          for (var w = !1, S = 0; S < p.scripts.length; S++) {
                            var E = p.scripts[S].tag;
                            if (E === 'DFLT') return E;
                            E === 'latn' && (w = !0);
                          }
                          return w ? 'latn' : void 0;
                        }
                      },
                      getScriptTable: function (p, w) {
                        var S,
                          E = this.getTable(w);
                        if (E)
                          return (
                            (S = E.scripts),
                            0 <= (E = wo(E.scripts, (p = p || 'DFLT')))
                              ? S[E].script
                              : w
                              ? (S.splice(
                                  -1 - E,
                                  0,
                                  (w = {
                                    tag: p,
                                    script: {
                                      defaultLangSys: {
                                        reserved: 0,
                                        reqFeatureIndex: 65535,
                                        featureIndexes: [],
                                      },
                                      langSysRecords: [],
                                    },
                                  }),
                                ),
                                w.script)
                              : void 0
                          );
                      },
                      getLangSysTable: function (I, w, S) {
                        var E,
                          I = this.getScriptTable(I, S);
                        if (I)
                          return w && w !== 'dflt' && w !== 'DFLT'
                            ? 0 <= (E = wo(I.langSysRecords, w))
                              ? I.langSysRecords[E].langSys
                              : S
                              ? (I.langSysRecords.splice(
                                  -1 - E,
                                  0,
                                  (S = {
                                    tag: w,
                                    langSys: {
                                      reserved: 0,
                                      reqFeatureIndex: 65535,
                                      featureIndexes: [],
                                    },
                                  }),
                                ),
                                S.langSys)
                              : void 0
                            : I.defaultLangSys;
                      },
                      getFeatureTable: function (p, w, S, E) {
                        if (((p = this.getLangSysTable(p, w, E)), p)) {
                          for (
                            var I,
                              F = p.featureIndexes,
                              V = this.font.tables[this.tableName].features,
                              J = 0;
                            J < F.length;
                            J++
                          )
                            if ((I = V[F[J]]).tag === S) return I.feature;
                          if (E)
                            return (
                              (w = V.length),
                              L.assert(
                                w === 0 || S >= V[w - 1].tag,
                                'Features must be added in alphabetical order.',
                              ),
                              V.push(
                                (I = {
                                  tag: S,
                                  feature: { params: 0, lookupListIndexes: [] },
                                }),
                              ),
                              F.push(w),
                              I.feature
                            );
                        }
                      },
                      getLookupTables: function (F, w, S, E, I) {
                        var F = this.getFeatureTable(F, w, S, I),
                          V = [];
                        if (F) {
                          for (
                            var J,
                              ie = F.lookupListIndexes,
                              oe = this.font.tables[this.tableName].lookups,
                              ye = 0;
                            ye < ie.length;
                            ye++
                          )
                            (J = oe[ie[ye]]).lookupType === E && V.push(J);
                          if (V.length === 0 && I)
                            return (
                              (w = oe.length),
                              oe.push(
                                (J = {
                                  lookupType: E,
                                  lookupFlag: 0,
                                  subtables: [],
                                  markFilteringSet: void 0,
                                }),
                              ),
                              ie.push(w),
                              [J]
                            );
                        }
                        return V;
                      },
                      getGlyphClass: function (p, w) {
                        switch (p.format) {
                          case 1:
                            return p.startGlyph <= w &&
                              w < p.startGlyph + p.classes.length
                              ? p.classes[w - p.startGlyph]
                              : 0;
                          case 2:
                            var S = Ti(p.ranges, w);
                            return S ? S.classId : 0;
                        }
                      },
                      getCoverageIndex: function (p, w) {
                        switch (p.format) {
                          case 1:
                            var S = Si(p.glyphs, w);
                            return 0 <= S ? S : -1;
                          case 2:
                            return (
                              (S = Ti(p.ranges, w)),
                              S ? S.index + w - S.start : -1
                            );
                        }
                      },
                      expandCoverage: function (p) {
                        if (p.format === 1) return p.glyphs;
                        for (var w = [], S = p.ranges, E = 0; E < S.length; E++)
                          for (
                            var I = S[E], F = I.start, V = I.end, J = F;
                            J <= V;
                            J++
                          )
                            w.push(J);
                        return w;
                      },
                    }).init = function () {
                    var p = this.getDefaultScriptName();
                    this.defaultKerningTables = this.getKerningTables(p);
                  }),
                    (Es.prototype.getKerningValue = function (p, w, S) {
                      for (var E = 0; E < p.length; E++)
                        for (var I = p[E].subtables, F = 0; F < I.length; F++) {
                          var V = I[F],
                            J = this.getCoverageIndex(V.coverage, w);
                          if (!(J < 0))
                            switch (V.posFormat) {
                              case 1:
                                for (
                                  var ie = V.pairSets[J], oe = 0;
                                  oe < ie.length;
                                  oe++
                                ) {
                                  var ye = ie[oe];
                                  if (ye.secondGlyph === S)
                                    return (
                                      (ye.value1 && ye.value1.xAdvance) || 0
                                    );
                                }
                                break;
                              case 2:
                                var we = this.getGlyphClass(V.classDef1, w),
                                  Te = this.getGlyphClass(V.classDef2, S),
                                  we = V.classRecords[we][Te];
                                return (we.value1 && we.value1.xAdvance) || 0;
                            }
                        }
                      return 0;
                    }),
                    (Es.prototype.getKerningTables = function (p, w) {
                      if (this.font.tables.gpos)
                        return this.getLookupTables(p, w, 'kern', 2);
                    }),
                    ((Ir.prototype = Cs.prototype).createDefaultTable =
                      function () {
                        return {
                          version: 1,
                          scripts: [
                            {
                              tag: 'DFLT',
                              script: {
                                defaultLangSys: {
                                  reserved: 0,
                                  reqFeatureIndex: 65535,
                                  featureIndexes: [],
                                },
                                langSysRecords: [],
                              },
                            },
                          ],
                          features: [],
                          lookups: [],
                        };
                      }),
                    (Ir.prototype.getSingle = function (p, w, S) {
                      for (
                        var E = [], I = this.getLookupTables(w, S, p, 1), F = 0;
                        F < I.length;
                        F++
                      )
                        for (var V = I[F].subtables, J = 0; J < V.length; J++) {
                          var ie = V[J],
                            oe = this.expandCoverage(ie.coverage),
                            ye = void 0;
                          if (ie.substFormat === 1)
                            for (
                              var Te = ie.deltaGlyphId, ye = 0;
                              ye < oe.length;
                              ye++
                            ) {
                              var we = oe[ye];
                              E.push({ sub: we, by: we + Te });
                            }
                          else {
                            var de = ie.substitute;
                            for (ye = 0; ye < oe.length; ye++)
                              E.push({ sub: oe[ye], by: de[ye] });
                          }
                        }
                      return E;
                    }),
                    (Ir.prototype.getAlternates = function (p, w, S) {
                      for (
                        var E = [], I = this.getLookupTables(w, S, p, 3), F = 0;
                        F < I.length;
                        F++
                      )
                        for (var V = I[F].subtables, J = 0; J < V.length; J++)
                          for (
                            var ie = V[J],
                              oe = this.expandCoverage(ie.coverage),
                              ye = ie.alternateSets,
                              Te = 0;
                            Te < oe.length;
                            Te++
                          )
                            E.push({ sub: oe[Te], by: ye[Te] });
                      return E;
                    }),
                    (Ir.prototype.getLigatures = function (p, w, S) {
                      for (
                        var E = [], I = this.getLookupTables(w, S, p, 4), F = 0;
                        F < I.length;
                        F++
                      )
                        for (var V = I[F].subtables, J = 0; J < V.length; J++)
                          for (
                            var ie = V[J],
                              oe = this.expandCoverage(ie.coverage),
                              ye = ie.ligatureSets,
                              Te = 0;
                            Te < oe.length;
                            Te++
                          )
                            for (
                              var we = oe[Te], de = ye[Te], De = 0;
                              De < de.length;
                              De++
                            ) {
                              var Oe = de[De];
                              E.push({
                                sub: [we].concat(Oe.components),
                                by: Oe.ligGlyph,
                              });
                            }
                      return E;
                    }),
                    (Ir.prototype.addSingle = function (p, w, S, E) {
                      (S = Mi(this.getLookupTables(S, E, p, 1, !0)[0], 2, {
                        substFormat: 2,
                        coverage: { format: 1, glyphs: [] },
                        substitute: [],
                      })),
                        L.assert(
                          S.coverage.format === 1,
                          'Ligature: unable to modify coverage table format ' +
                            S.coverage.format,
                        ),
                        (E = w.sub),
                        (p = this.binSearch(S.coverage.glyphs, E)),
                        p < 0 &&
                          (S.coverage.glyphs.splice((p = -1 - p), 0, E),
                          S.substitute.splice(p, 0, 0)),
                        (S.substitute[p] = w.by);
                    }),
                    (Ir.prototype.addAlternate = function (p, w, S, E) {
                      (S = Mi(this.getLookupTables(S, E, p, 3, !0)[0], 1, {
                        substFormat: 1,
                        coverage: { format: 1, glyphs: [] },
                        alternateSets: [],
                      })),
                        L.assert(
                          S.coverage.format === 1,
                          'Ligature: unable to modify coverage table format ' +
                            S.coverage.format,
                        ),
                        (E = w.sub),
                        (p = this.binSearch(S.coverage.glyphs, E)),
                        p < 0 &&
                          (S.coverage.glyphs.splice((p = -1 - p), 0, E),
                          S.alternateSets.splice(p, 0, 0)),
                        (S.alternateSets[p] = w.by);
                    }),
                    (Ir.prototype.addLigature = function (F, ie, J, I) {
                      var J = this.getLookupTables(J, I, F, 4, !0)[0],
                        I = J.subtables[0],
                        F =
                          (I ||
                            (J.subtables[0] = I =
                              {
                                substFormat: 1,
                                coverage: { format: 1, glyphs: [] },
                                ligatureSets: [],
                              }),
                          L.assert(
                            I.coverage.format === 1,
                            'Ligature: unable to modify coverage table format ' +
                              I.coverage.format,
                          ),
                          ie.sub[0]),
                        V = ie.sub.slice(1),
                        J = { ligGlyph: ie.by, components: V },
                        ie = this.binSearch(I.coverage.glyphs, F);
                      if (0 <= ie) {
                        for (
                          var oe = I.ligatureSets[ie], ye = 0;
                          ye < oe.length;
                          ye++
                        )
                          if (
                            (function (Te, we) {
                              var de = Te.length;
                              if (de === we.length) {
                                for (var De = 0; De < de; De++)
                                  if (Te[De] !== we[De]) return;
                                return 1;
                              }
                            })(oe[ye].components, V)
                          )
                            return;
                        oe.push(J);
                      } else
                        I.coverage.glyphs.splice((ie = -1 - ie), 0, F),
                          I.ligatureSets.splice(ie, 0, [J]);
                    }),
                    (Ir.prototype.getFeature = function (p, w, S) {
                      if (/ss\d\d/.test(p)) return this.getSingle(p, w, S);
                      switch (p) {
                        case 'aalt':
                        case 'salt':
                          return this.getSingle(p, w, S).concat(
                            this.getAlternates(p, w, S),
                          );
                        case 'dlig':
                        case 'liga':
                        case 'rlig':
                          return this.getLigatures(p, w, S);
                      }
                    }),
                    (Ir.prototype.add = function (p, w, S, E) {
                      if (/ss\d\d/.test(p)) return this.addSingle(p, w, S, E);
                      switch (p) {
                        case 'aalt':
                        case 'salt':
                          return typeof w.by == 'number'
                            ? this.addSingle(p, w, S, E)
                            : this.addAlternate(p, w, S, E);
                        case 'dlig':
                        case 'liga':
                        case 'rlig':
                          return this.addLigature(p, w, S, E);
                      }
                    });
                  var Oi = {
                    getPath: ki,
                    parse: function (p, w, S, E) {
                      for (
                        var I = new Ke.GlyphSet(E), F = 0;
                        F < S.length - 1;
                        F += 1
                      ) {
                        var V = S[F];
                        V !== S[F + 1]
                          ? I.push(F, Ke.ttfGlyphLoader(E, F, Pl, p, w + V, Il))
                          : I.push(F, Ke.glyphLoader(E, F));
                      }
                      return I;
                    },
                  };
                  function Ai(p) {
                    (this.font = p),
                      (this.getCommands = function (w) {
                        return Oi.getPath(w).commands;
                      }),
                      (this._fpgmState = this._prepState = void 0),
                      (this._errorState = 0);
                  }
                  function Dl(p) {
                    return p;
                  }
                  function Ri(p) {
                    return Math.sign(p) * Math.round(Math.abs(p));
                  }
                  function Ll(p) {
                    return (Math.sign(p) * Math.round(Math.abs(2 * p))) / 2;
                  }
                  function Nl(p) {
                    return Math.sign(p) * (Math.round(Math.abs(p) + 0.5) - 0.5);
                  }
                  function Fl(p) {
                    return Math.sign(p) * Math.ceil(Math.abs(p));
                  }
                  function Ul(p) {
                    return Math.sign(p) * Math.floor(Math.abs(p));
                  }
                  function Pi(p) {
                    var w = this.srPeriod,
                      S = this.srPhase,
                      E = 1;
                    return (
                      p < 0 && ((p = -p), (E = -1)),
                      (p += this.srThreshold - S),
                      (p = Math.trunc(p / w) * w),
                      (p += S) < 0 ? S * E : p * E
                    );
                  }
                  var Dr = {
                      x: 1,
                      y: 0,
                      axis: 'x',
                      distance: function (p, w, S, E) {
                        return (S ? p.xo : p.x) - (E ? w.xo : w.x);
                      },
                      interpolate: function (p, w, S, E) {
                        var I, F, V, J, ie, oe, ye;
                        if (!E || E === this)
                          return (
                            (I = p.xo - w.xo),
                            (F = p.xo - S.xo),
                            (ie = w.x - w.xo),
                            (oe = S.x - S.xo),
                            (ye = (V = Math.abs(I)) + (J = Math.abs(F))) === 0
                              ? void (p.x = p.xo + (ie + oe) / 2)
                              : void (p.x = p.xo + (ie * J + oe * V) / ye)
                          );
                        (I = E.distance(p, w, !0, !0)),
                          (F = E.distance(p, S, !0, !0)),
                          (ie = E.distance(w, w, !1, !0)),
                          (oe = E.distance(S, S, !1, !0)),
                          (ye = (V = Math.abs(I)) + (J = Math.abs(F))) === 0
                            ? Dr.setRelative(p, p, (ie + oe) / 2, E, !0)
                            : Dr.setRelative(
                                p,
                                p,
                                (ie * J + oe * V) / ye,
                                E,
                                !0,
                              );
                      },
                      normalSlope: Number.NEGATIVE_INFINITY,
                      setRelative: function (p, w, S, E, I) {
                        var F, V;
                        E && E !== this
                          ? ((F = I ? w.xo : w.x),
                            (V = I ? w.yo : w.y),
                            (F += S * E.x),
                            (V += S * E.y),
                            (p.x = F + (p.y - V) / E.normalSlope))
                          : (p.x = (I ? w.xo : w.x) + S);
                      },
                      slope: 0,
                      touch: function (p) {
                        p.xTouched = !0;
                      },
                      touched: function (p) {
                        return p.xTouched;
                      },
                      untouch: function (p) {
                        p.xTouched = !1;
                      },
                    },
                    Gr = {
                      x: 0,
                      y: 1,
                      axis: 'y',
                      distance: function (p, w, S, E) {
                        return (S ? p.yo : p.y) - (E ? w.yo : w.y);
                      },
                      interpolate: function (p, w, S, E) {
                        var I, F, V, J, ie, oe, ye;
                        if (!E || E === this)
                          return (
                            (I = p.yo - w.yo),
                            (F = p.yo - S.yo),
                            (ie = w.y - w.yo),
                            (oe = S.y - S.yo),
                            (ye = (V = Math.abs(I)) + (J = Math.abs(F))) === 0
                              ? void (p.y = p.yo + (ie + oe) / 2)
                              : void (p.y = p.yo + (ie * J + oe * V) / ye)
                          );
                        (I = E.distance(p, w, !0, !0)),
                          (F = E.distance(p, S, !0, !0)),
                          (ie = E.distance(w, w, !1, !0)),
                          (oe = E.distance(S, S, !1, !0)),
                          (ye = (V = Math.abs(I)) + (J = Math.abs(F))) === 0
                            ? Gr.setRelative(p, p, (ie + oe) / 2, E, !0)
                            : Gr.setRelative(
                                p,
                                p,
                                (ie * J + oe * V) / ye,
                                E,
                                !0,
                              );
                      },
                      normalSlope: 0,
                      setRelative: function (p, w, S, E, I) {
                        var F, V;
                        E && E !== this
                          ? ((F = I ? w.xo : w.x),
                            (V = I ? w.yo : w.y),
                            (F += S * E.x),
                            (V += S * E.y),
                            (p.y = V + E.normalSlope * (p.x - F)))
                          : (p.y = (I ? w.yo : w.y) + S);
                      },
                      slope: Number.POSITIVE_INFINITY,
                      touch: function (p) {
                        p.yTouched = !0;
                      },
                      touched: function (p) {
                        return p.yTouched;
                      },
                      untouch: function (p) {
                        p.yTouched = !1;
                      },
                    };
                  function Yn(p, w) {
                    (this.x = p),
                      (this.y = w),
                      (this.axis = void 0),
                      (this.slope = w / p),
                      (this.normalSlope = -p / w),
                      Object.freeze(this);
                  }
                  function Zn(p, w) {
                    var S = Math.sqrt(p * p + w * w);
                    return (
                      (w /= S),
                      (p /= S) === 1 && w === 0
                        ? Dr
                        : p === 0 && w === 1
                        ? Gr
                        : new Yn(p, w)
                    );
                  }
                  function Wr(p, w, S, E) {
                    (this.x = this.xo = Math.round(64 * p) / 64),
                      (this.y = this.yo = Math.round(64 * w) / 64),
                      (this.lastPointOfContour = S),
                      (this.onCurve = E),
                      (this.prevPointOnContour = void 0),
                      (this.nextPointOnContour = void 0),
                      (this.xTouched = !1),
                      (this.yTouched = !1),
                      Object.preventExtensions(this);
                  }
                  Object.freeze(Dr),
                    Object.freeze(Gr),
                    (Yn.prototype.distance = function (p, w, S, E) {
                      return (
                        this.x * Dr.distance(p, w, S, E) +
                        this.y * Gr.distance(p, w, S, E)
                      );
                    }),
                    (Yn.prototype.interpolate = function (p, I, F, E) {
                      var V = E.distance(p, I, !0, !0),
                        J = E.distance(p, F, !0, !0),
                        I = E.distance(I, I, !1, !0),
                        F = E.distance(F, F, !1, !0),
                        V = Math.abs(V),
                        J = Math.abs(J),
                        ie = V + J;
                      ie === 0
                        ? this.setRelative(p, p, (I + F) / 2, E, !0)
                        : this.setRelative(p, p, (I * J + F * V) / ie, E, !0);
                    }),
                    (Yn.prototype.setRelative = function (p, F, ie, oe, J) {
                      var V = J ? F.xo : F.x,
                        J = J ? F.yo : F.y,
                        F = V + ie * (oe = oe || this).x,
                        V = J + ie * oe.y,
                        J = oe.normalSlope,
                        ie = this.slope,
                        oe = p.x,
                        ye = p.y;
                      (p.x = (ie * oe - J * F + V - ye) / (ie - J)),
                        (p.y = ie * (p.x - oe) + ye);
                    }),
                    (Yn.prototype.touch = function (p) {
                      (p.xTouched = !0), (p.yTouched = !0);
                    }),
                    (Wr.prototype.nextTouched = function (p) {
                      for (
                        var w = this.nextPointOnContour;
                        !p.touched(w) && w !== this;

                      )
                        w = w.nextPointOnContour;
                      return w;
                    }),
                    (Wr.prototype.prevTouched = function (p) {
                      for (
                        var w = this.prevPointOnContour;
                        !p.touched(w) && w !== this;

                      )
                        w = w.prevPointOnContour;
                      return w;
                    });
                  var $n = Object.freeze(new Wr(0, 0)),
                    Bl = {
                      cvCutIn: 17 / 16,
                      deltaBase: 9,
                      deltaShift: 0.125,
                      loop: 1,
                      minDis: 1,
                      autoFlip: !0,
                    };
                  function Qr(p, w) {
                    switch (
                      ((this.env = p), (this.stack = []), (this.prog = w), p)
                    ) {
                      case 'glyf':
                        (this.zp0 = this.zp1 = this.zp2 = 1),
                          (this.rp0 = this.rp1 = this.rp2 = 0);
                      case 'prep':
                        (this.fv = this.pv = this.dpv = Dr), (this.round = Ri);
                    }
                  }
                  function ks(p) {
                    for (
                      var w = (p.tZone = new Array(p.gZone.length)), S = 0;
                      S < w.length;
                      S++
                    )
                      w[S] = new Wr(0, 0);
                  }
                  function Ii(p, w) {
                    var S,
                      E = p.prog,
                      I = p.ip,
                      F = 1;
                    do
                      if ((S = E[++I]) === 88) F++;
                      else if (S === 89) F--;
                      else if (S === 64) I += E[I + 1] + 1;
                      else if (S === 65) I += 2 * E[I + 1] + 1;
                      else if (176 <= S && S <= 183) I += S - 176 + 1;
                      else if (184 <= S && S <= 191) I += 2 * (S - 184 + 1);
                      else if (w && F === 1 && S === 27) break;
                    while (0 < F);
                    p.ip = I;
                  }
                  function Di(p, w) {
                    l.DEBUG && console.log(w.step, 'SVTCA[' + p.axis + ']'),
                      (w.fv = w.pv = w.dpv = p);
                  }
                  function Li(p, w) {
                    l.DEBUG && console.log(w.step, 'SPVTCA[' + p.axis + ']'),
                      (w.pv = w.dpv = p);
                  }
                  function Ni(p, w) {
                    l.DEBUG && console.log(w.step, 'SFVTCA[' + p.axis + ']'),
                      (w.fv = p);
                  }
                  function Fi(p, w) {
                    var S,
                      I = w.stack,
                      E = I.pop(),
                      I = I.pop(),
                      F = w.z2[E],
                      V = w.z1[I];
                    l.DEBUG && console.log('SPVTL[' + p + ']', E, I),
                      (E = p
                        ? ((S = F.y - V.y), V.x - F.x)
                        : ((S = V.x - F.x), V.y - F.y)),
                      (w.pv = w.dpv = Zn(S, E));
                  }
                  function Ui(p, w) {
                    var S,
                      I = w.stack,
                      E = I.pop(),
                      I = I.pop(),
                      F = w.z2[E],
                      V = w.z1[I];
                    l.DEBUG && console.log('SFVTL[' + p + ']', E, I),
                      (E = p
                        ? ((S = F.y - V.y), V.x - F.x)
                        : ((S = V.x - F.x), V.y - F.y)),
                      (w.fv = Zn(S, E));
                  }
                  function jo(p) {
                    l.DEBUG && console.log(p.step, 'POP[]'), p.stack.pop();
                  }
                  function Bi(p, w) {
                    var S = w.stack.pop(),
                      E = w.z0[S],
                      I = w.fv,
                      F = w.pv,
                      V =
                        (l.DEBUG && console.log(w.step, 'MDAP[' + p + ']', S),
                        F.distance(E, $n));
                    p && (V = w.round(V)),
                      I.setRelative(E, $n, V, F),
                      I.touch(E),
                      (w.rp0 = w.rp1 = S);
                  }
                  function Vi(p, w) {
                    var S,
                      E,
                      I,
                      F = w.z2,
                      V = F.length - 2;
                    l.DEBUG && console.log(w.step, 'IUP[' + p.axis + ']');
                    for (var J = 0; J < V; J++)
                      (S = F[J]),
                        p.touched(S) ||
                          ((E = S.prevTouched(p)) !== S &&
                            (E === (I = S.nextTouched(p)) &&
                              p.setRelative(
                                S,
                                S,
                                p.distance(E, E, !1, !0),
                                p,
                                !0,
                              ),
                            p.interpolate(S, E, I, p)));
                  }
                  function Gi(p, w) {
                    for (
                      var S = w.stack,
                        E = p ? w.rp1 : w.rp2,
                        I = (p ? w.z0 : w.z1)[E],
                        F = w.fv,
                        V = w.pv,
                        J = w.loop,
                        ie = w.z2;
                      J--;

                    ) {
                      var oe = S.pop(),
                        ye = ie[oe],
                        Te = V.distance(I, I, !1, !0);
                      F.setRelative(ye, ye, Te, V),
                        F.touch(ye),
                        l.DEBUG &&
                          console.log(
                            w.step,
                            (1 < w.loop ? 'loop ' + (w.loop - J) + ': ' : '') +
                              'SHP[' +
                              (p ? 'rp1' : 'rp2') +
                              ']',
                            oe,
                          );
                    }
                    w.loop = 1;
                  }
                  function Wi(p, w) {
                    for (
                      var S = w.stack,
                        V = p ? w.rp1 : w.rp2,
                        E = (p ? w.z0 : w.z1)[V],
                        I = w.fv,
                        F = w.pv,
                        V = S.pop(),
                        J = w.z2[w.contours[V]],
                        ie = J,
                        oe =
                          (l.DEBUG && console.log(w.step, 'SHC[' + p + ']', V),
                          F.distance(E, E, !1, !0));
                      ie !== E && I.setRelative(ie, ie, oe, F),
                        (ie = ie.nextPointOnContour) !== J;

                    );
                  }
                  function qi(p, w) {
                    var S,
                      E,
                      J = w.stack,
                      I = p ? w.rp1 : w.rp2,
                      I = (p ? w.z0 : w.z1)[I],
                      F = w.fv,
                      V = w.pv,
                      J = J.pop();
                    switch (
                      (l.DEBUG && console.log(w.step, 'SHZ[' + p + ']', J), J)
                    ) {
                      case 0:
                        S = w.tZone;
                        break;
                      case 1:
                        S = w.gZone;
                        break;
                      default:
                        throw new Error('Invalid zone');
                    }
                    for (
                      var ie = V.distance(I, I, !1, !0),
                        oe = S.length - 2,
                        ye = 0;
                      ye < oe;
                      ye++
                    )
                      (E = S[ye]), F.setRelative(E, E, ie, V);
                  }
                  function zi(p, w) {
                    var E = w.stack,
                      S = E.pop() / 64,
                      E = E.pop(),
                      I = w.z1[E],
                      F = w.z0[w.rp0],
                      V = w.fv,
                      J = w.pv;
                    V.setRelative(I, F, S, J),
                      V.touch(I),
                      l.DEBUG && console.log(w.step, 'MSIRP[' + p + ']', S, E),
                      (w.rp1 = w.rp0),
                      (w.rp2 = E),
                      p && (w.rp0 = E);
                  }
                  function Hi(p, w) {
                    var S = w.stack,
                      J = S.pop(),
                      S = S.pop(),
                      E = w.z0[S],
                      I = w.fv,
                      F = w.pv,
                      V = w.cvt[J],
                      J =
                        (l.DEBUG &&
                          console.log(
                            w.step,
                            'MIAP[' + p + ']',
                            J,
                            '(',
                            V,
                            ')',
                            S,
                          ),
                        F.distance(E, $n));
                    p &&
                      (Math.abs(J - V) < w.cvCutIn && (J = V),
                      (J = w.round(J))),
                      I.setRelative(E, $n, J, F),
                      w.zp0 === 0 && ((E.xo = E.x), (E.yo = E.y)),
                      I.touch(E),
                      (w.rp0 = w.rp1 = S);
                  }
                  function Xi(p, w) {
                    var S = w.stack,
                      E = S.pop(),
                      I = w.z2[E];
                    l.DEBUG && console.log(w.step, 'GC[' + p + ']', E),
                      S.push(64 * w.dpv.distance(I, $n, p, !1));
                  }
                  function Yi(p, w) {
                    var E = w.stack,
                      S = E.pop(),
                      E = E.pop(),
                      I = w.z1[S],
                      F = w.z0[E],
                      F = w.dpv.distance(F, I, p, p);
                    l.DEBUG &&
                      console.log(w.step, 'MD[' + p + ']', S, E, '->', F),
                      w.stack.push(Math.round(64 * F));
                  }
                  function So(p, w) {
                    var S = w.stack,
                      E = S.pop(),
                      I = w.fv,
                      F = w.pv,
                      V = w.ppem,
                      J = w.deltaBase + 16 * (p - 1),
                      ie = w.deltaShift,
                      oe = w.z0;
                    l.DEBUG && console.log(w.step, 'DELTAP[' + p + ']', E, S);
                    for (var ye = 0; ye < E; ye++) {
                      var Te = S.pop(),
                        we = S.pop();
                      J + ((240 & we) >> 4) === V &&
                        (0 <= (we = (15 & we) - 8) && we++,
                        l.DEBUG &&
                          console.log(w.step, 'DELTAPFIX', Te, 'by', we * ie),
                        (Te = oe[Te]),
                        I.setRelative(Te, Te, we * ie, F));
                    }
                  }
                  function Os(p, w) {
                    var S = w.stack,
                      E = S.pop();
                    l.DEBUG && console.log(w.step, 'ROUND[]'),
                      S.push(64 * w.round(E / 64));
                  }
                  function To(p, w) {
                    var S = w.stack,
                      E = S.pop(),
                      I = w.ppem,
                      F = w.deltaBase + 16 * (p - 1),
                      V = w.deltaShift;
                    l.DEBUG && console.log(w.step, 'DELTAC[' + p + ']', E, S);
                    for (var J = 0; J < E; J++) {
                      var ie = S.pop(),
                        oe = S.pop();
                      F + ((240 & oe) >> 4) === I &&
                        (0 <= (oe = (15 & oe) - 8) && oe++,
                        (oe = oe * V),
                        l.DEBUG &&
                          console.log(w.step, 'DELTACFIX', ie, 'by', oe),
                        (w.cvt[ie] += oe));
                    }
                  }
                  function Zi(p, w) {
                    var S,
                      I = w.stack,
                      E = I.pop(),
                      I = I.pop(),
                      F = w.z2[E],
                      V = w.z1[I];
                    l.DEBUG && console.log(w.step, 'SDPVTL[' + p + ']', E, I),
                      (E = p
                        ? ((S = F.y - V.y), V.x - F.x)
                        : ((S = V.x - F.x), V.y - F.y)),
                      (w.dpv = Zn(S, E));
                  }
                  function Jr(p, w) {
                    var S = w.stack,
                      E = w.prog,
                      I = w.ip;
                    l.DEBUG && console.log(w.step, 'PUSHB[' + p + ']');
                    for (var F = 0; F < p; F++) S.push(E[++I]);
                    w.ip = I;
                  }
                  function Kr(p, w) {
                    var S = w.ip,
                      E = w.prog,
                      I = w.stack;
                    l.DEBUG && console.log(w.ip, 'PUSHW[' + p + ']');
                    for (var F = 0; F < p; F++) {
                      var V = (E[++S] << 8) | E[++S];
                      32768 & V && (V = -(1 + (65535 ^ V))), I.push(V);
                    }
                    w.ip = S;
                  }
                  function Je(p, w, S, E, I, F) {
                    var V,
                      J,
                      oe = F.stack,
                      ie = p && oe.pop(),
                      oe = oe.pop(),
                      ye = F.rp0,
                      ye = F.z0[ye],
                      Te = F.z1[oe],
                      we = F.minDis,
                      de = F.fv,
                      De = F.dpv,
                      Oe = (V = De.distance(Te, ye, !0, !0)),
                      Re = 0 <= Oe ? 1 : -1;
                    (Oe = Math.abs(Oe)),
                      p &&
                        ((J = F.cvt[ie]),
                        E && Math.abs(Oe - J) < F.cvCutIn && (Oe = J)),
                      S && Oe < we && (Oe = we),
                      E && (Oe = F.round(Oe)),
                      de.setRelative(Te, ye, Re * Oe, De),
                      de.touch(Te),
                      l.DEBUG &&
                        console.log(
                          F.step,
                          (p ? 'MIRP[' : 'MDRP[') +
                            (w ? 'M' : 'm') +
                            (S ? '>' : '_') +
                            (E ? 'R' : '_') +
                            (I === 0
                              ? 'Gr'
                              : I === 1
                              ? 'Bl'
                              : I === 2
                              ? 'Wh'
                              : '') +
                            ']',
                          p ? ie + '(' + F.cvt[ie] + ',' + J + ')' : '',
                          oe,
                          '(d =',
                          V,
                          '->',
                          Re * Oe,
                          ')',
                        ),
                      (F.rp1 = F.rp0),
                      (F.rp2 = oe),
                      w && (F.rp0 = oe);
                  }
                  Ai.prototype.exec = function (p, w) {
                    if (typeof w != 'number')
                      throw new Error('Point size is not a number!');
                    if (!(2 < this._errorState)) {
                      var S = this.font,
                        E = this._prepState;
                      if (!E || E.ppem !== w) {
                        var I = this._fpgmState;
                        if (!I) {
                          (Qr.prototype = Bl),
                            ((I = this._fpgmState =
                              new Qr('fpgm', S.tables.fpgm)).funcs = []),
                            (I.font = S),
                            l.DEBUG &&
                              (console.log('---EXEC FPGM---'), (I.step = -1));
                          try {
                            Tn(I);
                          } catch (oe) {
                            return (
                              console.log('Hinting error in FPGM:' + oe),
                              void (this._errorState = 3)
                            );
                          }
                        }
                        (Qr.prototype = I),
                          ((E = this._prepState =
                            new Qr('prep', S.tables.prep)).ppem = w);
                        var F = S.tables.cvt;
                        if (F)
                          for (
                            var V = (E.cvt = new Array(F.length)),
                              J = w / S.unitsPerEm,
                              ie = 0;
                            ie < F.length;
                            ie++
                          )
                            V[ie] = F[ie] * J;
                        else E.cvt = [];
                        l.DEBUG &&
                          (console.log('---EXEC PREP---'), (E.step = -1));
                        try {
                          Tn(E);
                        } catch (oe) {
                          this._errorState < 2 &&
                            console.log('Hinting error in PREP:' + oe),
                            (this._errorState = 2);
                        }
                      }
                      if (!(1 < this._errorState))
                        try {
                          return Vl(p, E);
                        } catch (oe) {
                          this._errorState < 1 &&
                            (console.log('Hinting error:' + oe),
                            console.log(
                              'Note: further hinting errors are silenced',
                            )),
                            (this._errorState = 1);
                        }
                    }
                  };
                  var Vl = function (p, w) {
                      var S = w.ppem / w.font.unitsPerEm,
                        E = S,
                        I = p.components;
                      if (((Qr.prototype = w), I)) {
                        for (
                          var F = w.font, V = [], J = [], ie = 0;
                          ie < I.length;
                          ie++
                        ) {
                          var oe = I[ie],
                            ye = F.glyphs.get(oe.glyphIndex),
                            Te = new Qr('glyf', ye.instructions);
                          l.DEBUG &&
                            (console.log('---EXEC COMP ' + ie + '---'),
                            (Te.step = -1)),
                            $i(ye, Te, S, E);
                          for (
                            var we = Math.round(oe.dx * S),
                              de = Math.round(oe.dy * E),
                              De = Te.gZone,
                              Oe = Te.contours,
                              Re = 0;
                            Re < De.length;
                            Re++
                          ) {
                            var Ee = De[Re];
                            (Ee.xTouched = Ee.yTouched = !1),
                              (Ee.xo = Ee.x = Ee.x + we),
                              (Ee.yo = Ee.y = Ee.y + de);
                          }
                          var ke = V.length;
                          V.push.apply(V, De);
                          for (var et = 0; et < Oe.length; et++)
                            J.push(Oe[et] + ke);
                        }
                        p.instructions &&
                          !Te.inhibitGridFit &&
                          (((Te = new Qr('glyf', p.instructions)).gZone =
                            Te.z0 =
                            Te.z1 =
                            Te.z2 =
                              V),
                          (Te.contours = J),
                          V.push(
                            new Wr(0, 0),
                            new Wr(Math.round(p.advanceWidth * S), 0),
                          ),
                          l.DEBUG &&
                            (console.log('---EXEC COMPOSITE---'),
                            (Te.step = -1)),
                          Tn(Te),
                          (V.length -= 2));
                      } else
                        (Te = new Qr('glyf', p.instructions)),
                          l.DEBUG &&
                            (console.log('---EXEC GLYPH---'), (Te.step = -1)),
                          $i(p, Te, S, E),
                          (V = Te.gZone);
                      return V;
                    },
                    $i = function (p, w, S, E) {
                      for (
                        var I,
                          F,
                          V,
                          J = p.points || [],
                          ie = J.length,
                          oe = (w.gZone = w.z0 = w.z1 = w.z2 = []),
                          ye = (w.contours = []),
                          Te = 0;
                        Te < ie;
                        Te++
                      )
                        (I = J[Te]),
                          (oe[Te] = new Wr(
                            I.x * S,
                            I.y * E,
                            I.lastPointOfContour,
                            I.onCurve,
                          ));
                      for (var we = 0; we < ie; we++)
                        (I = oe[we]),
                          F || ((F = I), ye.push(we)),
                          I.lastPointOfContour
                            ? (((I.nextPointOnContour = F).prevPointOnContour =
                                I),
                              (F = void 0))
                            : ((V = oe[we + 1]),
                              ((I.nextPointOnContour = V).prevPointOnContour =
                                I));
                      if (!w.inhibitGridFit) {
                        if (l.DEBUG) {
                          console.log('PROCESSING GLYPH', w.stack);
                          for (var de = 0; de < ie; de++)
                            console.log(de, oe[de].x, oe[de].y);
                        }
                        if (
                          (oe.push(
                            new Wr(0, 0),
                            new Wr(Math.round(p.advanceWidth * S), 0),
                          ),
                          Tn(w),
                          (oe.length -= 2),
                          l.DEBUG)
                        ) {
                          console.log('FINISHED GLYPH', w.stack);
                          for (var De = 0; De < ie; De++)
                            console.log(De, oe[De].x, oe[De].y);
                        }
                      }
                    },
                    Tn = function (p) {
                      var w = p.prog;
                      if (w) {
                        var S,
                          E = w.length;
                        for (p.ip = 0; p.ip < E; p.ip++) {
                          if ((l.DEBUG && p.step++, !(S = Gl[w[p.ip]])))
                            throw new Error(
                              'unknown instruction: 0x' +
                                Number(w[p.ip]).toString(16),
                            );
                          S(p);
                        }
                      }
                    },
                    Gl = [
                      Di.bind(void 0, Gr),
                      Di.bind(void 0, Dr),
                      Li.bind(void 0, Gr),
                      Li.bind(void 0, Dr),
                      Ni.bind(void 0, Gr),
                      Ni.bind(void 0, Dr),
                      Fi.bind(void 0, 0),
                      Fi.bind(void 0, 1),
                      Ui.bind(void 0, 0),
                      Ui.bind(void 0, 1),
                      function (p) {
                        var w = (S = p.stack).pop(),
                          S = S.pop();
                        l.DEBUG && console.log(p.step, 'SPVFS[]', w, S),
                          (p.pv = p.dpv = Zn(S, w));
                      },
                      function (p) {
                        var w = (S = p.stack).pop(),
                          S = S.pop();
                        l.DEBUG && console.log(p.step, 'SPVFS[]', w, S),
                          (p.fv = Zn(S, w));
                      },
                      function (p) {
                        var w = p.stack,
                          S = p.pv;
                        l.DEBUG && console.log(p.step, 'GPV[]'),
                          w.push(16384 * S.x),
                          w.push(16384 * S.y);
                      },
                      function (p) {
                        var w = p.stack,
                          S = p.fv;
                        l.DEBUG && console.log(p.step, 'GFV[]'),
                          w.push(16384 * S.x),
                          w.push(16384 * S.y);
                      },
                      function (p) {
                        (p.fv = p.pv),
                          l.DEBUG && console.log(p.step, 'SFVTPV[]');
                      },
                      function (w) {
                        var S = (V = w.stack).pop(),
                          E = V.pop(),
                          I = V.pop(),
                          F = V.pop(),
                          V = V.pop(),
                          ie = w.z0,
                          ye = w.z1,
                          J = ie[S],
                          ie = ie[E],
                          oe = ye[I],
                          ye = ye[F],
                          w = w.z2[V],
                          S =
                            (l.DEBUG && console.log('ISECT[], ', S, E, I, F, V),
                            J.x),
                          E = J.y,
                          I = ie.x,
                          F = ie.y,
                          V = oe.x,
                          J = oe.y,
                          ie = ye.x,
                          oe = ye.y,
                          ye = (S - I) * (J - oe) - (E - F) * (V - ie),
                          Te = S * F - E * I,
                          we = V * oe - J * ie;
                        (w.x = (Te * (V - ie) - we * (S - I)) / ye),
                          (w.y = (Te * (J - oe) - we * (E - F)) / ye);
                      },
                      function (p) {
                        (p.rp0 = p.stack.pop()),
                          l.DEBUG && console.log(p.step, 'SRP0[]', p.rp0);
                      },
                      function (p) {
                        (p.rp1 = p.stack.pop()),
                          l.DEBUG && console.log(p.step, 'SRP1[]', p.rp1);
                      },
                      function (p) {
                        (p.rp2 = p.stack.pop()),
                          l.DEBUG && console.log(p.step, 'SRP2[]', p.rp2);
                      },
                      function (p) {
                        var w = p.stack.pop();
                        switch (
                          (l.DEBUG && console.log(p.step, 'SZP0[]', w),
                          (p.zp0 = w))
                        ) {
                          case 0:
                            p.tZone || ks(p), (p.z0 = p.tZone);
                            break;
                          case 1:
                            p.z0 = p.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (p) {
                        var w = p.stack.pop();
                        switch (
                          (l.DEBUG && console.log(p.step, 'SZP1[]', w),
                          (p.zp1 = w))
                        ) {
                          case 0:
                            p.tZone || ks(p), (p.z1 = p.tZone);
                            break;
                          case 1:
                            p.z1 = p.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (p) {
                        var w = p.stack.pop();
                        switch (
                          (l.DEBUG && console.log(p.step, 'SZP2[]', w),
                          (p.zp2 = w))
                        ) {
                          case 0:
                            p.tZone || ks(p), (p.z2 = p.tZone);
                            break;
                          case 1:
                            p.z2 = p.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (p) {
                        var w = p.stack.pop();
                        switch (
                          (l.DEBUG && console.log(p.step, 'SZPS[]', w),
                          (p.zp0 = p.zp1 = p.zp2 = w))
                        ) {
                          case 0:
                            p.tZone || ks(p), (p.z0 = p.z1 = p.z2 = p.tZone);
                            break;
                          case 1:
                            p.z0 = p.z1 = p.z2 = p.gZone;
                            break;
                          default:
                            throw new Error('Invalid zone pointer');
                        }
                      },
                      function (p) {
                        (p.loop = p.stack.pop()),
                          l.DEBUG && console.log(p.step, 'SLOOP[]', p.loop);
                      },
                      function (p) {
                        l.DEBUG && console.log(p.step, 'RTG[]'), (p.round = Ri);
                      },
                      function (p) {
                        l.DEBUG && console.log(p.step, 'RTHG[]'),
                          (p.round = Nl);
                      },
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'SMD[]', w),
                          (p.minDis = w / 64);
                      },
                      function (p) {
                        l.DEBUG && console.log(p.step, 'ELSE[]'), Ii(p, !1);
                      },
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'JMPR[]', w),
                          (p.ip += w - 1);
                      },
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'SCVTCI[]', w),
                          (p.cvCutIn = w / 64);
                      },
                      void 0,
                      void 0,
                      function (p) {
                        var w = p.stack;
                        l.DEBUG && console.log(p.step, 'DUP[]'),
                          w.push(w[w.length - 1]);
                      },
                      jo,
                      function (p) {
                        l.DEBUG && console.log(p.step, 'CLEAR[]'),
                          (p.stack.length = 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'SWAP[]'),
                          w.push(S),
                          w.push(E);
                      },
                      function (p) {
                        var w = p.stack;
                        l.DEBUG && console.log(p.step, 'DEPTH[]'),
                          w.push(w.length);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'CINDEX[]', S),
                          w.push(w[w.length - S]);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'MINDEX[]', S),
                          w.push(w.splice(w.length - S, 1)[0]);
                      },
                      void 0,
                      void 0,
                      void 0,
                      function (p) {
                        var w = (E = p.stack).pop(),
                          S = E.pop(),
                          E =
                            (l.DEBUG && console.log(p.step, 'LOOPCALL[]', w, S),
                            p.ip),
                          I = p.prog;
                        p.prog = p.funcs[w];
                        for (var F = 0; F < S; F++)
                          Tn(p),
                            l.DEBUG &&
                              console.log(
                                ++p.step,
                                F + 1 < S ? 'next loopcall' : 'done loopcall',
                                F,
                              );
                        (p.ip = E), (p.prog = I);
                      },
                      function (p) {
                        var w = p.stack.pop(),
                          S =
                            (l.DEBUG && console.log(p.step, 'CALL[]', w), p.ip),
                          E = p.prog;
                        (p.prog = p.funcs[w]),
                          Tn(p),
                          (p.ip = S),
                          (p.prog = E),
                          l.DEBUG && console.log(++p.step, 'returning from', w);
                      },
                      function (p) {
                        if (p.env !== 'fpgm')
                          throw new Error('FDEF not allowed here');
                        var E = p.stack,
                          w = p.prog,
                          S = p.ip,
                          E = E.pop(),
                          I = S;
                        for (
                          l.DEBUG && console.log(p.step, 'FDEF[]', E);
                          w[++S] !== 45;

                        );
                        (p.ip = S), (p.funcs[E] = w.slice(I + 1, S));
                      },
                      void 0,
                      Bi.bind(void 0, 0),
                      Bi.bind(void 0, 1),
                      Vi.bind(void 0, Gr),
                      Vi.bind(void 0, Dr),
                      Gi.bind(void 0, 0),
                      Gi.bind(void 0, 1),
                      Wi.bind(void 0, 0),
                      Wi.bind(void 0, 1),
                      qi.bind(void 0, 0),
                      qi.bind(void 0, 1),
                      function (p) {
                        for (
                          var w = p.stack,
                            S = p.loop,
                            E = p.fv,
                            I = w.pop() / 64,
                            F = p.z2;
                          S--;

                        ) {
                          var V = w.pop(),
                            J = F[V];
                          l.DEBUG &&
                            console.log(
                              p.step,
                              (1 < p.loop
                                ? 'loop ' + (p.loop - S) + ': '
                                : '') + 'SHPIX[]',
                              V,
                              I,
                            ),
                            E.setRelative(J, J, I),
                            E.touch(J);
                        }
                        p.loop = 1;
                      },
                      function (p) {
                        for (
                          var w = p.stack,
                            S = p.rp1,
                            E = p.rp2,
                            I = p.loop,
                            F = p.z0[S],
                            V = p.z1[E],
                            J = p.fv,
                            ie = p.dpv,
                            oe = p.z2;
                          I--;

                        ) {
                          var ye = w.pop(),
                            Te = oe[ye];
                          l.DEBUG &&
                            console.log(
                              p.step,
                              (1 < p.loop
                                ? 'loop ' + (p.loop - I) + ': '
                                : '') + 'IP[]',
                              ye,
                              S,
                              '<->',
                              E,
                            ),
                            J.interpolate(Te, F, V, ie),
                            J.touch(Te);
                        }
                        p.loop = 1;
                      },
                      zi.bind(void 0, 0),
                      zi.bind(void 0, 1),
                      function (p) {
                        for (
                          var w = p.stack,
                            S = p.rp0,
                            E = p.z0[S],
                            I = p.loop,
                            F = p.fv,
                            V = p.pv,
                            J = p.z1;
                          I--;

                        ) {
                          var ie = w.pop(),
                            oe = J[ie];
                          l.DEBUG &&
                            console.log(
                              p.step,
                              (1 < p.loop
                                ? 'loop ' + (p.loop - I) + ': '
                                : '') + 'ALIGNRP[]',
                              ie,
                            ),
                            F.setRelative(oe, E, 0, V),
                            F.touch(oe);
                        }
                        p.loop = 1;
                      },
                      function (p) {
                        l.DEBUG && console.log(p.step, 'RTDG[]'),
                          (p.round = Ll);
                      },
                      Hi.bind(void 0, 0),
                      Hi.bind(void 0, 1),
                      function (p) {
                        var w = p.prog,
                          S = p.ip,
                          E = p.stack,
                          I = w[++S];
                        l.DEBUG && console.log(p.step, 'NPUSHB[]', I);
                        for (var F = 0; F < I; F++) E.push(w[++S]);
                        p.ip = S;
                      },
                      function (p) {
                        var w = p.ip,
                          S = p.prog,
                          E = p.stack,
                          I = S[++w];
                        l.DEBUG && console.log(p.step, 'NPUSHW[]', I);
                        for (var F = 0; F < I; F++) {
                          var V = (S[++w] << 8) | S[++w];
                          32768 & V && (V = -(1 + (65535 ^ V))), E.push(V);
                        }
                        p.ip = w;
                      },
                      function (p) {
                        var E = p.stack,
                          w = (w = p.store) || (p.store = []),
                          S = E.pop(),
                          E = E.pop();
                        l.DEBUG && console.log(p.step, 'WS', S, E), (w[E] = S);
                      },
                      function (I) {
                        var w = I.stack,
                          S = I.store,
                          E = w.pop(),
                          I =
                            (l.DEBUG && console.log(I.step, 'RS', E),
                            (S && S[E]) || 0);
                        w.push(I);
                      },
                      function (p) {
                        var w = (S = p.stack).pop(),
                          S = S.pop();
                        l.DEBUG && console.log(p.step, 'WCVTP', w, S),
                          (p.cvt[S] = w / 64);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'RCVT', S),
                          w.push(64 * p.cvt[S]);
                      },
                      Xi.bind(void 0, 0),
                      Xi.bind(void 0, 1),
                      void 0,
                      Yi.bind(void 0, 0),
                      Yi.bind(void 0, 1),
                      function (p) {
                        l.DEBUG && console.log(p.step, 'MPPEM[]'),
                          p.stack.push(p.ppem);
                      },
                      void 0,
                      function (p) {
                        l.DEBUG && console.log(p.step, 'FLIPON[]'),
                          (p.autoFlip = !0);
                      },
                      void 0,
                      void 0,
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'LT[]', S, E),
                          w.push(E < S ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'LTEQ[]', S, E),
                          w.push(E <= S ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'GT[]', S, E),
                          w.push(S < E ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'GTEQ[]', S, E),
                          w.push(S <= E ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'EQ[]', S, E),
                          w.push(S === E ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'NEQ[]', S, E),
                          w.push(S !== E ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'ODD[]', S),
                          w.push(Math.trunc(S) % 2 ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'EVEN[]', S),
                          w.push(Math.trunc(S) % 2 ? 0 : 1);
                      },
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'IF[]', w),
                          w ||
                            (Ii(p, !0),
                            l.DEBUG && console.log(p.step, 'EIF[]'));
                      },
                      function (p) {
                        l.DEBUG && console.log(p.step, 'EIF[]');
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'AND[]', S, E),
                          w.push(S && E ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'OR[]', S, E),
                          w.push(S || E ? 1 : 0);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'NOT[]', S),
                          w.push(S ? 0 : 1);
                      },
                      So.bind(void 0, 1),
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'SDB[]', w),
                          (p.deltaBase = w);
                      },
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'SDS[]', w),
                          (p.deltaShift = Math.pow(0.5, w));
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'ADD[]', S, E),
                          w.push(E + S);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'SUB[]', S, E),
                          w.push(E - S);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'DIV[]', S, E),
                          w.push((64 * E) / S);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'MUL[]', S, E),
                          w.push((E * S) / 64);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'ABS[]', S),
                          w.push(Math.abs(S));
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'NEG[]', S), w.push(-S);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'FLOOR[]', S),
                          w.push(64 * Math.floor(S / 64));
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop();
                        l.DEBUG && console.log(p.step, 'CEILING[]', S),
                          w.push(64 * Math.ceil(S / 64));
                      },
                      Os.bind(void 0, 0),
                      Os.bind(void 0, 1),
                      Os.bind(void 0, 2),
                      Os.bind(void 0, 3),
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      function (p) {
                        var w = (S = p.stack).pop(),
                          S = S.pop();
                        l.DEBUG && console.log(p.step, 'WCVTF[]', w, S),
                          (p.cvt[S] = (w * p.ppem) / p.font.unitsPerEm);
                      },
                      So.bind(void 0, 2),
                      So.bind(void 0, 3),
                      To.bind(void 0, 1),
                      To.bind(void 0, 2),
                      To.bind(void 0, 3),
                      function (p) {
                        var w,
                          S = p.stack.pop();
                        switch (
                          (l.DEBUG && console.log(p.step, 'SROUND[]', S),
                          (p.round = Pi),
                          192 & S)
                        ) {
                          case 0:
                            w = 0.5;
                            break;
                          case 64:
                            w = 1;
                            break;
                          case 128:
                            w = 2;
                            break;
                          default:
                            throw new Error('invalid SROUND value');
                        }
                        switch (((p.srPeriod = w), 48 & S)) {
                          case 0:
                            p.srPhase = 0;
                            break;
                          case 16:
                            p.srPhase = 0.25 * w;
                            break;
                          case 32:
                            p.srPhase = 0.5 * w;
                            break;
                          case 48:
                            p.srPhase = 0.75 * w;
                            break;
                          default:
                            throw new Error('invalid SROUND value');
                        }
                        p.srThreshold = (S &= 15) === 0 ? 0 : (S / 8 - 0.5) * w;
                      },
                      function (p) {
                        var w,
                          S = p.stack.pop();
                        switch (
                          (l.DEBUG && console.log(p.step, 'S45ROUND[]', S),
                          (p.round = Pi),
                          192 & S)
                        ) {
                          case 0:
                            w = Math.sqrt(2) / 2;
                            break;
                          case 64:
                            w = Math.sqrt(2);
                            break;
                          case 128:
                            w = 2 * Math.sqrt(2);
                            break;
                          default:
                            throw new Error('invalid S45ROUND value');
                        }
                        switch (((p.srPeriod = w), 48 & S)) {
                          case 0:
                            p.srPhase = 0;
                            break;
                          case 16:
                            p.srPhase = 0.25 * w;
                            break;
                          case 32:
                            p.srPhase = 0.5 * w;
                            break;
                          case 48:
                            p.srPhase = 0.75 * w;
                            break;
                          default:
                            throw new Error('invalid S45ROUND value');
                        }
                        p.srThreshold = (S &= 15) === 0 ? 0 : (S / 8 - 0.5) * w;
                      },
                      void 0,
                      void 0,
                      function (p) {
                        l.DEBUG && console.log(p.step, 'ROFF[]'),
                          (p.round = Dl);
                      },
                      void 0,
                      function (p) {
                        l.DEBUG && console.log(p.step, 'RUTG[]'),
                          (p.round = Fl);
                      },
                      function (p) {
                        l.DEBUG && console.log(p.step, 'RDTG[]'),
                          (p.round = Ul);
                      },
                      jo,
                      jo,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'SCANCTRL[]', w);
                      },
                      Zi.bind(void 0, 0),
                      Zi.bind(void 0, 1),
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = 0;
                        l.DEBUG && console.log(p.step, 'GETINFO[]', S),
                          1 & S && (E = 35),
                          32 & S && (E |= 4096),
                          w.push(E);
                      },
                      void 0,
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop(),
                          I = w.pop();
                        l.DEBUG && console.log(p.step, 'ROLL[]'),
                          w.push(E),
                          w.push(S),
                          w.push(I);
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'MAX[]', S, E),
                          w.push(Math.max(E, S));
                      },
                      function (p) {
                        var w = p.stack,
                          S = w.pop(),
                          E = w.pop();
                        l.DEBUG && console.log(p.step, 'MIN[]', S, E),
                          w.push(Math.min(E, S));
                      },
                      function (p) {
                        var w = p.stack.pop();
                        l.DEBUG && console.log(p.step, 'SCANTYPE[]', w);
                      },
                      function (p) {
                        var w = p.stack.pop(),
                          S = p.stack.pop();
                        switch (
                          (l.DEBUG && console.log(p.step, 'INSTCTRL[]', w, S),
                          w)
                        ) {
                          case 1:
                            return void (p.inhibitGridFit = !!S);
                          case 2:
                            return void (p.ignoreCvt = !!S);
                          default:
                            throw new Error('invalid INSTCTRL[] selector');
                        }
                      },
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      Jr.bind(void 0, 1),
                      Jr.bind(void 0, 2),
                      Jr.bind(void 0, 3),
                      Jr.bind(void 0, 4),
                      Jr.bind(void 0, 5),
                      Jr.bind(void 0, 6),
                      Jr.bind(void 0, 7),
                      Jr.bind(void 0, 8),
                      Kr.bind(void 0, 1),
                      Kr.bind(void 0, 2),
                      Kr.bind(void 0, 3),
                      Kr.bind(void 0, 4),
                      Kr.bind(void 0, 5),
                      Kr.bind(void 0, 6),
                      Kr.bind(void 0, 7),
                      Kr.bind(void 0, 8),
                      Je.bind(void 0, 0, 0, 0, 0, 0),
                      Je.bind(void 0, 0, 0, 0, 0, 1),
                      Je.bind(void 0, 0, 0, 0, 0, 2),
                      Je.bind(void 0, 0, 0, 0, 0, 3),
                      Je.bind(void 0, 0, 0, 0, 1, 0),
                      Je.bind(void 0, 0, 0, 0, 1, 1),
                      Je.bind(void 0, 0, 0, 0, 1, 2),
                      Je.bind(void 0, 0, 0, 0, 1, 3),
                      Je.bind(void 0, 0, 0, 1, 0, 0),
                      Je.bind(void 0, 0, 0, 1, 0, 1),
                      Je.bind(void 0, 0, 0, 1, 0, 2),
                      Je.bind(void 0, 0, 0, 1, 0, 3),
                      Je.bind(void 0, 0, 0, 1, 1, 0),
                      Je.bind(void 0, 0, 0, 1, 1, 1),
                      Je.bind(void 0, 0, 0, 1, 1, 2),
                      Je.bind(void 0, 0, 0, 1, 1, 3),
                      Je.bind(void 0, 0, 1, 0, 0, 0),
                      Je.bind(void 0, 0, 1, 0, 0, 1),
                      Je.bind(void 0, 0, 1, 0, 0, 2),
                      Je.bind(void 0, 0, 1, 0, 0, 3),
                      Je.bind(void 0, 0, 1, 0, 1, 0),
                      Je.bind(void 0, 0, 1, 0, 1, 1),
                      Je.bind(void 0, 0, 1, 0, 1, 2),
                      Je.bind(void 0, 0, 1, 0, 1, 3),
                      Je.bind(void 0, 0, 1, 1, 0, 0),
                      Je.bind(void 0, 0, 1, 1, 0, 1),
                      Je.bind(void 0, 0, 1, 1, 0, 2),
                      Je.bind(void 0, 0, 1, 1, 0, 3),
                      Je.bind(void 0, 0, 1, 1, 1, 0),
                      Je.bind(void 0, 0, 1, 1, 1, 1),
                      Je.bind(void 0, 0, 1, 1, 1, 2),
                      Je.bind(void 0, 0, 1, 1, 1, 3),
                      Je.bind(void 0, 1, 0, 0, 0, 0),
                      Je.bind(void 0, 1, 0, 0, 0, 1),
                      Je.bind(void 0, 1, 0, 0, 0, 2),
                      Je.bind(void 0, 1, 0, 0, 0, 3),
                      Je.bind(void 0, 1, 0, 0, 1, 0),
                      Je.bind(void 0, 1, 0, 0, 1, 1),
                      Je.bind(void 0, 1, 0, 0, 1, 2),
                      Je.bind(void 0, 1, 0, 0, 1, 3),
                      Je.bind(void 0, 1, 0, 1, 0, 0),
                      Je.bind(void 0, 1, 0, 1, 0, 1),
                      Je.bind(void 0, 1, 0, 1, 0, 2),
                      Je.bind(void 0, 1, 0, 1, 0, 3),
                      Je.bind(void 0, 1, 0, 1, 1, 0),
                      Je.bind(void 0, 1, 0, 1, 1, 1),
                      Je.bind(void 0, 1, 0, 1, 1, 2),
                      Je.bind(void 0, 1, 0, 1, 1, 3),
                      Je.bind(void 0, 1, 1, 0, 0, 0),
                      Je.bind(void 0, 1, 1, 0, 0, 1),
                      Je.bind(void 0, 1, 1, 0, 0, 2),
                      Je.bind(void 0, 1, 1, 0, 0, 3),
                      Je.bind(void 0, 1, 1, 0, 1, 0),
                      Je.bind(void 0, 1, 1, 0, 1, 1),
                      Je.bind(void 0, 1, 1, 0, 1, 2),
                      Je.bind(void 0, 1, 1, 0, 1, 3),
                      Je.bind(void 0, 1, 1, 1, 0, 0),
                      Je.bind(void 0, 1, 1, 1, 0, 1),
                      Je.bind(void 0, 1, 1, 1, 0, 2),
                      Je.bind(void 0, 1, 1, 1, 0, 3),
                      Je.bind(void 0, 1, 1, 1, 1, 0),
                      Je.bind(void 0, 1, 1, 1, 1, 1),
                      Je.bind(void 0, 1, 1, 1, 1, 2),
                      Je.bind(void 0, 1, 1, 1, 1, 3),
                    ],
                    Wl =
                      Array.from ||
                      function (p) {
                        return (
                          p.match(
                            /[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g,
                          ) || []
                        );
                      };
                  function _t(p) {
                    (p = p || {}).empty ||
                      (Sn(
                        p.familyName,
                        'When creating a new Font object, familyName is required.',
                      ),
                      Sn(
                        p.styleName,
                        'When creating a new Font object, styleName is required.',
                      ),
                      Sn(
                        p.unitsPerEm,
                        'When creating a new Font object, unitsPerEm is required.',
                      ),
                      Sn(
                        p.ascender,
                        'When creating a new Font object, ascender is required.',
                      ),
                      Sn(
                        p.descender,
                        'When creating a new Font object, descender is required.',
                      ),
                      Sn(
                        p.descender < 0,
                        'Descender should be negative (e.g. -512).',
                      ),
                      (this.names = {
                        fontFamily: { en: p.familyName || ' ' },
                        fontSubfamily: { en: p.styleName || ' ' },
                        fullName: {
                          en: p.fullName || p.familyName + ' ' + p.styleName,
                        },
                        postScriptName: {
                          en:
                            p.postScriptName ||
                            (p.familyName + p.styleName).replace(/\s/g, ''),
                        },
                        designer: { en: p.designer || ' ' },
                        designerURL: { en: p.designerURL || ' ' },
                        manufacturer: { en: p.manufacturer || ' ' },
                        manufacturerURL: { en: p.manufacturerURL || ' ' },
                        license: { en: p.license || ' ' },
                        licenseURL: { en: p.licenseURL || ' ' },
                        version: { en: p.version || 'Version 0.1' },
                        description: { en: p.description || ' ' },
                        copyright: { en: p.copyright || ' ' },
                        trademark: { en: p.trademark || ' ' },
                      }),
                      (this.unitsPerEm = p.unitsPerEm || 1e3),
                      (this.ascender = p.ascender),
                      (this.descender = p.descender),
                      (this.createdTimestamp = p.createdTimestamp),
                      (this.tables = {
                        os2: {
                          usWeightClass:
                            p.weightClass || this.usWeightClasses.MEDIUM,
                          usWidthClass:
                            p.widthClass || this.usWidthClasses.MEDIUM,
                          fsSelection:
                            p.fsSelection || this.fsSelectionValues.REGULAR,
                        },
                      })),
                      (this.supported = !0),
                      (this.glyphs = new Ke.GlyphSet(this, p.glyphs || [])),
                      (this.encoding = new je(this)),
                      (this.position = new Es(this)),
                      (this.substitution = new Ir(this)),
                      (this.tables = this.tables || {}),
                      Object.defineProperty(this, 'hinting', {
                        get: function () {
                          return (
                            this._hinting ||
                            (this.outlinesFormat === 'truetype'
                              ? (this._hinting = new Ai(this))
                              : void 0)
                          );
                        },
                      });
                  }
                  function Qi(p, w) {
                    var S,
                      E = JSON.stringify(p),
                      I = 256;
                    for (S in w) {
                      var F = parseInt(S);
                      if (F && !(F < 256)) {
                        if (JSON.stringify(w[S]) === E) return F;
                        I <= F && (I = F + 1);
                      }
                    }
                    return (w[I] = p), I;
                  }
                  (_t.prototype.hasChar = function (p) {
                    return this.encoding.charToGlyphIndex(p) !== null;
                  }),
                    (_t.prototype.charToGlyphIndex = function (p) {
                      return this.encoding.charToGlyphIndex(p);
                    }),
                    (_t.prototype.charToGlyph = function (p) {
                      return (
                        (p = this.charToGlyphIndex(p)),
                        this.glyphs.get(p) || this.glyphs.get(0)
                      );
                    }),
                    (_t.prototype.stringToGlyphs = function (p, w) {
                      w = w || this.defaultRenderOptions;
                      for (var S = Wl(p), E = [], I = 0; I < S.length; I += 1) {
                        var F = S[I];
                        E.push(this.charToGlyphIndex(F));
                      }
                      var V = E.length;
                      if (w.features) {
                        var p =
                            w.script ||
                            this.substitution.getDefaultScriptName(),
                          J = [];
                        w.features.liga &&
                          (J = J.concat(
                            this.substitution.getFeature('liga', p, w.language),
                          )),
                          w.features.rlig &&
                            (J = J.concat(
                              this.substitution.getFeature(
                                'rlig',
                                p,
                                w.language,
                              ),
                            ));
                        for (var ie = 0; ie < V; ie += 1)
                          for (var oe = 0; oe < J.length; oe++) {
                            for (
                              var ye = J[oe],
                                Te = ye.sub,
                                we = Te.length,
                                de = 0;
                              de < we && Te[de] === E[ie + de];

                            )
                              de++;
                            de === we &&
                              (E.splice(ie, we, ye.by), (V = V - we + 1));
                          }
                      }
                      for (
                        var De = new Array(V), Oe = this.glyphs.get(0), Re = 0;
                        Re < V;
                        Re += 1
                      )
                        De[Re] = this.glyphs.get(E[Re]) || Oe;
                      return De;
                    }),
                    (_t.prototype.nameToGlyphIndex = function (p) {
                      return this.glyphNames.nameToGlyphIndex(p);
                    }),
                    (_t.prototype.nameToGlyph = function (p) {
                      return (
                        (p = this.nameToGlyphIndex(p)),
                        this.glyphs.get(p) || this.glyphs.get(0)
                      );
                    }),
                    (_t.prototype.glyphIndexToName = function (p) {
                      return this.glyphNames.glyphIndexToName
                        ? this.glyphNames.glyphIndexToName(p)
                        : '';
                    }),
                    (_t.prototype.getKerningValue = function (p, w) {
                      (p = p.index || p), (w = w.index || w);
                      var S = this.position.defaultKerningTables;
                      return S
                        ? this.position.getKerningValue(S, p, w)
                        : this.kerningPairs[p + ',' + w] || 0;
                    }),
                    (_t.prototype.defaultRenderOptions = {
                      kerning: !0,
                      features: { liga: !0, rlig: !0 },
                    }),
                    (_t.prototype.forEachGlyph = function (p, w, S, E, I, F) {
                      (w = w !== void 0 ? w : 0),
                        (S = S !== void 0 ? S : 0),
                        (I = I || this.defaultRenderOptions);
                      var V,
                        J = (1 / this.unitsPerEm) * (E = E !== void 0 ? E : 72),
                        ie = this.stringToGlyphs(p, I);
                      I.kerning &&
                        ((p = I.script || this.position.getDefaultScriptName()),
                        (V = this.position.getKerningTables(p, I.language)));
                      for (var oe = 0; oe < ie.length; oe += 1) {
                        var ye = ie[oe];
                        F.call(this, ye, w, S, E, I),
                          ye.advanceWidth && (w += ye.advanceWidth * J),
                          I.kerning &&
                            oe < ie.length - 1 &&
                            (w +=
                              (V
                                ? this.position.getKerningValue(
                                    V,
                                    ye.index,
                                    ie[oe + 1].index,
                                  )
                                : this.getKerningValue(ye, ie[oe + 1])) * J),
                          I.letterSpacing
                            ? (w += I.letterSpacing * E)
                            : I.tracking && (w += (I.tracking / 1e3) * E);
                      }
                      return w;
                    }),
                    (_t.prototype.getPath = function (p, w, S, E, I) {
                      var F = new $();
                      return (
                        this.forEachGlyph(
                          p,
                          w,
                          S,
                          E,
                          I,
                          function (V, J, ie, oe) {
                            (V = V.getPath(J, ie, oe, I, this)), F.extend(V);
                          },
                        ),
                        F
                      );
                    }),
                    (_t.prototype.getPaths = function (p, w, S, E, I) {
                      var F = [];
                      return (
                        this.forEachGlyph(
                          p,
                          w,
                          S,
                          E,
                          I,
                          function (V, J, ie, oe) {
                            (V = V.getPath(J, ie, oe, I, this)), F.push(V);
                          },
                        ),
                        F
                      );
                    }),
                    (_t.prototype.getAdvanceWidth = function (p, w, S) {
                      return this.forEachGlyph(p, 0, 0, w, S, function () {});
                    }),
                    (_t.prototype.draw = function (p, w, S, E, I, F) {
                      this.getPath(w, S, E, I, F).draw(p);
                    }),
                    (_t.prototype.drawPoints = function (p, w, S, E, I, F) {
                      this.forEachGlyph(w, S, E, I, F, function (V, J, ie, oe) {
                        V.drawPoints(p, J, ie, oe);
                      });
                    }),
                    (_t.prototype.drawMetrics = function (p, w, S, E, I, F) {
                      this.forEachGlyph(w, S, E, I, F, function (V, J, ie, oe) {
                        V.drawMetrics(p, J, ie, oe);
                      });
                    }),
                    (_t.prototype.getEnglishName = function (p) {
                      if (((p = this.names[p]), p)) return p.en;
                    }),
                    (_t.prototype.validate = function () {
                      var p = this;
                      function w(S) {
                        (S = p.getEnglishName(S)), S && S.trim().length;
                      }
                      w('fontFamily'),
                        w('weightName'),
                        w('manufacturer'),
                        w('copyright'),
                        w('version'),
                        this.unitsPerEm;
                    }),
                    (_t.prototype.toTables = function () {
                      return Rl.fontToTable(this);
                    }),
                    (_t.prototype.toBuffer = function () {
                      return (
                        console.warn(
                          'Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.',
                        ),
                        this.toArrayBuffer()
                      );
                    }),
                    (_t.prototype.toArrayBuffer = function () {
                      for (
                        var p = this.toTables().encode(),
                          w = new ArrayBuffer(p.length),
                          S = new Uint8Array(w),
                          E = 0;
                        E < p.length;
                        E++
                      )
                        S[E] = p[E];
                      return w;
                    }),
                    (_t.prototype.download = function (p) {
                      var w = this.getEnglishName('fontFamily'),
                        S = this.getEnglishName('fontSubfamily'),
                        E =
                          ((p = p || w.replace(/\s/g, '') + '-' + S + '.otf'),
                          this.toArrayBuffer());
                      typeof window < 'u'
                        ? ((window.requestFileSystem =
                            window.requestFileSystem ||
                            window.webkitRequestFileSystem),
                          window.requestFileSystem(
                            window.TEMPORARY,
                            E.byteLength,
                            function (I) {
                              I.root.getFile(p, { create: !0 }, function (F) {
                                F.createWriter(function (V) {
                                  var J = new DataView(E),
                                    J = new Blob([J], {
                                      type: 'font/opentype',
                                    });
                                  V.write(J),
                                    V.addEventListener(
                                      'writeend',
                                      function () {
                                        location.href = F.toURL();
                                      },
                                      !1,
                                    );
                                });
                              });
                            },
                            function (I) {
                              throw new Error(I.name + ': ' + I.message);
                            },
                          ))
                        : ((w = t('fs')),
                          (S = (function (I) {
                            for (
                              var F = new u(I.byteLength),
                                V = new Uint8Array(I),
                                J = 0;
                              J < F.length;
                              ++J
                            )
                              F[J] = V[J];
                            return F;
                          })(E)),
                          w.writeFileSync(p, S));
                    }),
                    (_t.prototype.fsSelectionValues = {
                      ITALIC: 1,
                      UNDERSCORE: 2,
                      NEGATIVE: 4,
                      OUTLINED: 8,
                      STRIKEOUT: 16,
                      BOLD: 32,
                      REGULAR: 64,
                      USER_TYPO_METRICS: 128,
                      WWS: 256,
                      OBLIQUE: 512,
                    }),
                    (_t.prototype.usWidthClasses = {
                      ULTRA_CONDENSED: 1,
                      EXTRA_CONDENSED: 2,
                      CONDENSED: 3,
                      SEMI_CONDENSED: 4,
                      MEDIUM: 5,
                      SEMI_EXPANDED: 6,
                      EXPANDED: 7,
                      EXTRA_EXPANDED: 8,
                      ULTRA_EXPANDED: 9,
                    }),
                    (_t.prototype.usWeightClasses = {
                      THIN: 100,
                      EXTRA_LIGHT: 200,
                      LIGHT: 300,
                      NORMAL: 400,
                      MEDIUM: 500,
                      SEMI_BOLD: 600,
                      BOLD: 700,
                      EXTRA_BOLD: 800,
                      BLACK: 900,
                    });
                  var ql = {
                      make: function (p, w) {
                        var S = new Me.Table('fvar', [
                          { name: 'version', type: 'ULONG', value: 65536 },
                          { name: 'offsetToData', type: 'USHORT', value: 0 },
                          { name: 'countSizePairs', type: 'USHORT', value: 2 },
                          {
                            name: 'axisCount',
                            type: 'USHORT',
                            value: p.axes.length,
                          },
                          { name: 'axisSize', type: 'USHORT', value: 20 },
                          {
                            name: 'instanceCount',
                            type: 'USHORT',
                            value: p.instances.length,
                          },
                          {
                            name: 'instanceSize',
                            type: 'USHORT',
                            value: 4 + 4 * p.axes.length,
                          },
                        ]);
                        S.offsetToData = S.sizeOf();
                        for (var E, I, F, V = 0; V < p.axes.length; V++)
                          S.fields = S.fields.concat(
                            ((E = V),
                            (I = p.axes[V]),
                            (F = w),
                            (F = Qi(I.name, w)),
                            [
                              { name: 'tag_' + E, type: 'TAG', value: I.tag },
                              {
                                name: 'minValue_' + E,
                                type: 'FIXED',
                                value: I.minValue << 16,
                              },
                              {
                                name: 'defaultValue_' + E,
                                type: 'FIXED',
                                value: I.defaultValue << 16,
                              },
                              {
                                name: 'maxValue_' + E,
                                type: 'FIXED',
                                value: I.maxValue << 16,
                              },
                              { name: 'flags_' + E, type: 'USHORT', value: 0 },
                              { name: 'nameID_' + E, type: 'USHORT', value: F },
                            ]),
                          );
                        for (var J = 0; J < p.instances.length; J++)
                          S.fields = S.fields.concat(
                            (function (ie, oe, ye, Te) {
                              for (
                                var we = [
                                    {
                                      name: 'nameID_' + ie,
                                      type: 'USHORT',
                                      value: Qi(oe.name, Te),
                                    },
                                    {
                                      name: 'flags_' + ie,
                                      type: 'USHORT',
                                      value: 0,
                                    },
                                  ],
                                  de = 0;
                                de < ye.length;
                                ++de
                              ) {
                                var De = ye[de].tag;
                                we.push({
                                  name: 'axis_' + ie + ' ' + De,
                                  type: 'FIXED',
                                  value: oe.coordinates[De] << 16,
                                });
                              }
                              return we;
                            })(J, p.instances[J], p.axes, w),
                          );
                        return S;
                      },
                      parse: function (p, w, S) {
                        for (
                          var E,
                            I,
                            F,
                            V,
                            J = new xe.Parser(p, w),
                            ie = J.parseULong(),
                            oe =
                              (L.argument(
                                ie === 65536,
                                'Unsupported fvar table version.',
                              ),
                              J.parseOffset16()),
                            ye = (J.skip('uShort', 1), J.parseUShort()),
                            Te = J.parseUShort(),
                            we = J.parseUShort(),
                            de = J.parseUShort(),
                            De = [],
                            Oe = 0;
                          Oe < ye;
                          Oe++
                        )
                          De.push(
                            ((E = p),
                            (I = w + oe + Oe * Te),
                            (F = S),
                            (V = {}),
                            (E = new xe.Parser(E, I)),
                            (V.tag = E.parseTag()),
                            (V.minValue = E.parseFixed()),
                            (V.defaultValue = E.parseFixed()),
                            (V.maxValue = E.parseFixed()),
                            E.skip('uShort', 1),
                            (V.name = F[E.parseUShort()] || {}),
                            V),
                          );
                        for (
                          var Re = [], Ee = w + oe + ye * Te, ke = 0;
                          ke < we;
                          ke++
                        )
                          Re.push(
                            (function (et, it, tt, rt) {
                              var lt = {},
                                St = new xe.Parser(et, it);
                              (lt.name = rt[St.parseUShort()] || {}),
                                St.skip('uShort', 1),
                                (lt.coordinates = {});
                              for (var Dt = 0; Dt < tt.length; ++Dt)
                                lt.coordinates[tt[Dt].tag] = St.parseFixed();
                              return lt;
                            })(p, Ee + ke * de, De, S),
                          );
                        return { axes: De, instances: Re };
                      },
                    },
                    xr = new Array(10);
                  (xr[1] = function () {
                    var p = this.offset + this.relativeOffset,
                      w = this.parseUShort();
                    return w === 1
                      ? {
                          posFormat: 1,
                          coverage: this.parsePointer(_e.coverage),
                          value: this.parseValueRecord(),
                        }
                      : w === 2
                      ? {
                          posFormat: 2,
                          coverage: this.parsePointer(_e.coverage),
                          values: this.parseValueRecordList(),
                        }
                      : void L.assert(
                          !1,
                          '0x' +
                            p.toString(16) +
                            ': GPOS lookup type 1 format must be 1 or 2.',
                        );
                  }),
                    (xr[2] = function () {
                      var p,
                        w,
                        S,
                        E,
                        F = this.offset + this.relativeOffset,
                        I = this.parseUShort(),
                        F =
                          (L.assert(
                            I === 1 || I === 2,
                            '0x' +
                              F.toString(16) +
                              ': GPOS lookup type 2 format must be 1 or 2.',
                          ),
                          this.parsePointer(_e.coverage)),
                        V = this.parseUShort(),
                        J = this.parseUShort();
                      return I === 1
                        ? {
                            posFormat: I,
                            coverage: F,
                            valueFormat1: V,
                            valueFormat2: J,
                            pairSets: this.parseList(
                              _e.pointer(
                                _e.list(function () {
                                  return {
                                    secondGlyph: this.parseUShort(),
                                    value1: this.parseValueRecord(V),
                                    value2: this.parseValueRecord(J),
                                  };
                                }),
                              ),
                            ),
                          }
                        : I === 2
                        ? ((p = this.parsePointer(_e.classDef)),
                          (w = this.parsePointer(_e.classDef)),
                          (S = this.parseUShort()),
                          (E = this.parseUShort()),
                          {
                            posFormat: I,
                            coverage: F,
                            valueFormat1: V,
                            valueFormat2: J,
                            classDef1: p,
                            classDef2: w,
                            class1Count: S,
                            class2Count: E,
                            classRecords: this.parseList(
                              S,
                              _e.list(E, function () {
                                return {
                                  value1: this.parseValueRecord(V),
                                  value2: this.parseValueRecord(J),
                                };
                              }),
                            ),
                          })
                        : void 0;
                    }),
                    (xr[3] = function () {
                      return { error: 'GPOS Lookup 3 not supported' };
                    }),
                    (xr[4] = function () {
                      return { error: 'GPOS Lookup 4 not supported' };
                    }),
                    (xr[5] = function () {
                      return { error: 'GPOS Lookup 5 not supported' };
                    }),
                    (xr[6] = function () {
                      return { error: 'GPOS Lookup 6 not supported' };
                    }),
                    (xr[7] = function () {
                      return { error: 'GPOS Lookup 7 not supported' };
                    }),
                    (xr[8] = function () {
                      return { error: 'GPOS Lookup 8 not supported' };
                    }),
                    (xr[9] = function () {
                      return { error: 'GPOS Lookup 9 not supported' };
                    });
                  var zl = new Array(10),
                    Hl = {
                      parse: function (p, w) {
                        return (
                          (w = (p = new _e(p, (w = w || 0))).parseVersion(1)),
                          L.argument(
                            w === 1 || w === 1.1,
                            'Unsupported GPOS table version ' + w,
                          ),
                          w === 1
                            ? {
                                version: w,
                                scripts: p.parseScriptList(),
                                features: p.parseFeatureList(),
                                lookups: p.parseLookupList(xr),
                              }
                            : {
                                version: w,
                                scripts: p.parseScriptList(),
                                features: p.parseFeatureList(),
                                lookups: p.parseLookupList(xr),
                                variations: p.parseFeatureVariationsList(),
                              }
                        );
                      },
                      make: function (p) {
                        return new Me.Table('GPOS', [
                          { name: 'version', type: 'ULONG', value: 65536 },
                          {
                            name: 'scripts',
                            type: 'TABLE',
                            value: new Me.ScriptList(p.scripts),
                          },
                          {
                            name: 'features',
                            type: 'TABLE',
                            value: new Me.FeatureList(p.features),
                          },
                          {
                            name: 'lookups',
                            type: 'TABLE',
                            value: new Me.LookupList(p.lookups, zl),
                          },
                        ]);
                      },
                    },
                    Xl = {
                      parse: function (p, w) {
                        if (
                          ((p = new xe.Parser(p, w)),
                          (w = p.parseUShort()) === 0)
                        ) {
                          var S = p,
                            E = {},
                            Te = (S.skip('uShort'), S.parseUShort()),
                            I =
                              (L.argument(
                                Te === 0,
                                'Unsupported kern sub-table version.',
                              ),
                              S.skip('uShort', 2),
                              S.parseUShort());
                          S.skip('uShort', 3);
                          for (var F = 0; F < I; F += 1) {
                            var V = S.parseUShort(),
                              J = S.parseUShort(),
                              ie = S.parseShort();
                            E[V + ',' + J] = ie;
                          }
                          return E;
                        }
                        if (w !== 1)
                          throw new Error(
                            'Unsupported kern table version (' + w + ').',
                          );
                        var oe = p,
                          ye = {},
                          Te =
                            (oe.skip('uShort'),
                            1 < oe.parseULong() &&
                              console.warn(
                                'Only the first kern subtable is supported.',
                              ),
                            oe.skip('uLong'),
                            255 & oe.parseUShort());
                        if ((oe.skip('uShort'), Te == 0)) {
                          var we = oe.parseUShort();
                          oe.skip('uShort', 3);
                          for (var de = 0; de < we; de += 1) {
                            var De = oe.parseUShort(),
                              Oe = oe.parseUShort(),
                              Re = oe.parseShort();
                            ye[De + ',' + Oe] = Re;
                          }
                        }
                        return ye;
                      },
                    },
                    Yl = {
                      parse: function (p, w, S, E) {
                        for (
                          var I = new xe.Parser(p, w),
                            F = E ? I.parseUShort : I.parseULong,
                            V = [],
                            J = 0;
                          J < S + 1;
                          J += 1
                        ) {
                          var ie = F.call(I);
                          E && (ie *= 2), V.push(ie);
                        }
                        return V;
                      },
                    };
                  function Zl(p, w) {
                    t('fs').readFile(p, function (S, E) {
                      if (S) return w(S.message);
                      w(null, Ci(E));
                    });
                  }
                  function $l(p, w) {
                    var S = new XMLHttpRequest();
                    S.open('get', p, !0),
                      (S.responseType = 'arraybuffer'),
                      (S.onload = function () {
                        return S.response
                          ? w(null, S.response)
                          : w('Font could not be loaded: ' + S.statusText);
                      }),
                      (S.onerror = function () {
                        w('Font could not be loaded');
                      }),
                      S.send();
                  }
                  function Ji(p, w) {
                    for (var S = [], E = 12, I = 0; I < w; I += 1) {
                      var F = xe.getTag(p, E),
                        V = xe.getULong(p, E + 4),
                        J = xe.getULong(p, E + 8),
                        ie = xe.getULong(p, E + 12);
                      S.push({
                        tag: F,
                        checksum: V,
                        offset: J,
                        length: ie,
                        compression: !1,
                      }),
                        (E += 16);
                    }
                    return S;
                  }
                  function Wt(S, w) {
                    if (w.compression !== 'WOFF')
                      return { data: S, offset: w.offset };
                    var S = new Uint8Array(
                        S.buffer,
                        w.offset + 2,
                        w.compressedLength - 2,
                      ),
                      E = new Uint8Array(w.length);
                    if ((X(S, E), E.byteLength !== w.length))
                      throw new Error(
                        'Decompression error: ' +
                          w.tag +
                          " decompressed length doesn't match recorded length",
                      );
                    return { data: new DataView(E.buffer, 0), offset: 0 };
                  }
                  function Mo(ke) {
                    var w,
                      S,
                      E,
                      I,
                      F,
                      V,
                      J,
                      ie,
                      oe,
                      ye,
                      Te,
                      we,
                      de,
                      De,
                      Oe = new _t({ empty: !0 }),
                      Re = new DataView(ke, 0),
                      Ee = [],
                      ke = xe.getTag(Re, 0);
                    if (
                      ke === String.fromCharCode(0, 1, 0, 0) ||
                      ke === 'true' ||
                      ke === 'typ1'
                    )
                      (Oe.outlinesFormat = 'truetype'),
                        (Ee = Ji(Re, (E = xe.getUShort(Re, 4))));
                    else if (ke === 'OTTO')
                      (Oe.outlinesFormat = 'cff'),
                        (Ee = Ji(Re, (E = xe.getUShort(Re, 4))));
                    else {
                      if (ke !== 'wOFF')
                        throw new Error('Unsupported OpenType signature ' + ke);
                      var et = xe.getTag(Re, 4);
                      if (et === String.fromCharCode(0, 1, 0, 0))
                        Oe.outlinesFormat = 'truetype';
                      else {
                        if (et !== 'OTTO')
                          throw new Error('Unsupported OpenType flavor ' + ke);
                        Oe.outlinesFormat = 'cff';
                      }
                      Ee = (function (Et, gt) {
                        for (var lr = [], Pt = 44, nr = 0; nr < gt; nr += 1) {
                          var kt = xe.getTag(Et, Pt),
                            Kt = xe.getULong(Et, Pt + 4),
                            Qn = xe.getULong(Et, Pt + 8),
                            Mn = xe.getULong(Et, Pt + 12),
                            Ki = void 0,
                            Ki = Qn < Mn && 'WOFF';
                          lr.push({
                            tag: kt,
                            offset: Kt,
                            compression: Ki,
                            compressedLength: Qn,
                            length: Mn,
                          }),
                            (Pt += 20);
                        }
                        return lr;
                      })(Re, (E = xe.getUShort(Re, 12)));
                    }
                    for (var it = 0; it < E; it += 1) {
                      var tt = Ee[it],
                        rt = void 0;
                      switch (tt.tag) {
                        case 'cmap':
                          (rt = Wt(Re, tt)),
                            (Oe.tables.cmap = Q.parse(rt.data, rt.offset)),
                            (Oe.encoding = new Ae(Oe.tables.cmap));
                          break;
                        case 'cvt ':
                          (rt = Wt(Re, tt)),
                            (De = new xe.Parser(rt.data, rt.offset)),
                            (Oe.tables.cvt = De.parseShortList(tt.length / 2));
                          break;
                        case 'fvar':
                          F = tt;
                          break;
                        case 'fpgm':
                          (rt = Wt(Re, tt)),
                            (De = new xe.Parser(rt.data, rt.offset)),
                            (Oe.tables.fpgm = De.parseByteList(tt.length));
                          break;
                        case 'head':
                          (rt = Wt(Re, tt)),
                            (Oe.tables.head = Xn.parse(rt.data, rt.offset)),
                            (Oe.unitsPerEm = Oe.tables.head.unitsPerEm),
                            (w = Oe.tables.head.indexToLocFormat);
                          break;
                        case 'hhea':
                          (rt = Wt(Re, tt)),
                            (Oe.tables.hhea = fe.parse(rt.data, rt.offset)),
                            (Oe.ascender = Oe.tables.hhea.ascender),
                            (Oe.descender = Oe.tables.hhea.descender),
                            (Oe.numberOfHMetrics =
                              Oe.tables.hhea.numberOfHMetrics);
                          break;
                        case 'hmtx':
                          oe = tt;
                          break;
                        case 'ltag':
                          (rt = Wt(Re, tt)), (S = Ye.parse(rt.data, rt.offset));
                          break;
                        case 'maxp':
                          (rt = Wt(Re, tt)),
                            (Oe.tables.maxp = Ne.parse(rt.data, rt.offset)),
                            (Oe.numGlyphs = Oe.tables.maxp.numGlyphs);
                          break;
                        case 'name':
                          we = tt;
                          break;
                        case 'OS/2':
                          (rt = Wt(Re, tt)),
                            (Oe.tables.os2 = Jt.parse(rt.data, rt.offset));
                          break;
                        case 'post':
                          (rt = Wt(Re, tt)),
                            (Oe.tables.post = gi.parse(rt.data, rt.offset)),
                            (Oe.glyphNames = new Ve(Oe.tables.post));
                          break;
                        case 'prep':
                          (rt = Wt(Re, tt)),
                            (De = new xe.Parser(rt.data, rt.offset)),
                            (Oe.tables.prep = De.parseByteList(tt.length));
                          break;
                        case 'glyf':
                          V = tt;
                          break;
                        case 'loca':
                          Te = tt;
                          break;
                        case 'CFF ':
                          I = tt;
                          break;
                        case 'kern':
                          ye = tt;
                          break;
                        case 'GPOS':
                          J = tt;
                          break;
                        case 'GSUB':
                          ie = tt;
                          break;
                        case 'meta':
                          de = tt;
                      }
                    }
                    if (
                      ((et = Wt(Re, we)),
                      (Oe.tables.name = gr.parse(et.data, et.offset, S)),
                      (Oe.names = Oe.tables.name),
                      V && Te)
                    )
                      (ke = w === 0),
                        (et = Wt(Re, Te)),
                        (et = Yl.parse(et.data, et.offset, Oe.numGlyphs, ke)),
                        (ke = Wt(Re, V)),
                        (Oe.glyphs = Oi.parse(ke.data, ke.offset, et, Oe));
                    else {
                      if (!I)
                        throw new Error(
                          "Font doesn't contain TrueType or CFF outlines.",
                        );
                      (ke = Wt(Re, I)), Hn.parse(ke.data, ke.offset, Oe);
                    }
                    for (
                      var et = Wt(Re, oe),
                        lt =
                          (Ue.parse(
                            et.data,
                            et.offset,
                            Oe.numberOfHMetrics,
                            Oe.numGlyphs,
                            Oe.glyphs,
                          ),
                          Oe),
                        St = lt.tables.cmap.glyphIndexMap,
                        Dt = Object.keys(St),
                        qt = 0;
                      qt < Dt.length;
                      qt += 1
                    ) {
                      var ir,
                        ar = Dt[qt],
                        jr = St[ar];
                      (ir = lt.glyphs.get(jr)).addUnicode(parseInt(ar));
                    }
                    for (var wt = 0; wt < lt.glyphs.length; wt += 1)
                      (ir = lt.glyphs.get(wt)),
                        lt.cffEncoding
                          ? lt.isCIDFont
                            ? (ir.name = 'gid' + wt)
                            : (ir.name = lt.cffEncoding.charset[wt])
                          : lt.glyphNames.names &&
                            (ir.name = lt.glyphNames.glyphIndexToName(wt));
                    return (
                      ye
                        ? ((ke = Wt(Re, ye)),
                          (Oe.kerningPairs = Xl.parse(ke.data, ke.offset)))
                        : (Oe.kerningPairs = {}),
                      J &&
                        ((et = Wt(Re, J)),
                        (Oe.tables.gpos = Hl.parse(et.data, et.offset)),
                        Oe.position.init()),
                      ie &&
                        ((ke = Wt(Re, ie)),
                        (Oe.tables.gsub = vi.parse(ke.data, ke.offset))),
                      F &&
                        ((et = Wt(Re, F)),
                        (Oe.tables.fvar = ql.parse(
                          et.data,
                          et.offset,
                          Oe.names,
                        ))),
                      de &&
                        ((ke = Wt(Re, de)),
                        (Oe.tables.meta = bi.parse(ke.data, ke.offset)),
                        (Oe.metas = Oe.tables.meta)),
                      Oe
                    );
                  }
                  (l.Font = _t),
                    (l.Glyph = Xe),
                    (l.Path = $),
                    (l.BoundingBox = Z),
                    (l._parse = xe),
                    (l.parse = Mo),
                    (l.load = function (p, w) {
                      (typeof window > 'u' ? Zl : $l)(p, function (S, E) {
                        if (S) return w(S);
                        var I;
                        try {
                          I = Mo(E);
                        } catch (F) {
                          return w(F, null);
                        }
                        return w(null, I);
                      });
                    }),
                    (l.loadSync = function (p) {
                      return Mo(Ci(t('fs').readFileSync(p)));
                    }),
                    Object.defineProperty(l, '__esModule', { value: !0 });
                }),
                r(typeof y == 'object' && b !== void 0 ? y : (a.opentype = {}));
            }.call(this, t('buffer').Buffer));
          },
          { buffer: 4, fs: 2 },
        ],
        242: [
          function (t, b, y) {
            (function (u) {
              function a(d, h) {
                for (var o = 0, s = d.length - 1; 0 <= s; s--) {
                  var n = d[s];
                  n === '.'
                    ? d.splice(s, 1)
                    : n === '..'
                    ? (d.splice(s, 1), o++)
                    : o && (d.splice(s, 1), o--);
                }
                if (h) for (; o--; ) d.unshift('..');
                return d;
              }
              function r(d, h) {
                if (d.filter) return d.filter(h);
                for (var o = [], s = 0; s < d.length; s++)
                  h(d[s], s, d) && o.push(d[s]);
                return o;
              }
              (y.resolve = function () {
                for (
                  var d = '', h = !1, o = arguments.length - 1;
                  -1 <= o && !h;
                  o--
                ) {
                  var s = 0 <= o ? arguments[o] : u.cwd();
                  if (typeof s != 'string')
                    throw new TypeError(
                      'Arguments to path.resolve must be strings',
                    );
                  s && ((d = s + '/' + d), (h = s.charAt(0) === '/'));
                }
                return (
                  (h ? '/' : '') +
                    (d = a(
                      r(d.split('/'), function (n) {
                        return !!n;
                      }),
                      !h,
                    ).join('/')) || '.'
                );
              }),
                (y.normalize = function (d) {
                  var h = y.isAbsolute(d),
                    o = l(d, -1) === '/';
                  return (
                    (d =
                      (d = a(
                        r(d.split('/'), function (s) {
                          return !!s;
                        }),
                        !h,
                      ).join('/')) || h
                        ? d
                        : '.') &&
                      o &&
                      (d += '/'),
                    (h ? '/' : '') + d
                  );
                }),
                (y.isAbsolute = function (d) {
                  return d.charAt(0) === '/';
                }),
                (y.join = function () {
                  var d = Array.prototype.slice.call(arguments, 0);
                  return y.normalize(
                    r(d, function (h, o) {
                      if (typeof h != 'string')
                        throw new TypeError(
                          'Arguments to path.join must be strings',
                        );
                      return h;
                    }).join('/'),
                  );
                }),
                (y.relative = function (d, h) {
                  function o(x) {
                    for (var j = 0; j < x.length && x[j] === ''; j++);
                    for (var v = x.length - 1; 0 <= v && x[v] === ''; v--);
                    return v < j ? [] : x.slice(j, v - j + 1);
                  }
                  (d = y.resolve(d).substr(1)), (h = y.resolve(h).substr(1));
                  for (
                    var s = o(d.split('/')),
                      n = o(h.split('/')),
                      c = Math.min(s.length, n.length),
                      f = c,
                      g = 0;
                    g < c;
                    g++
                  )
                    if (s[g] !== n[g]) {
                      f = g;
                      break;
                    }
                  for (var _ = [], g = f; g < s.length; g++) _.push('..');
                  return (_ = _.concat(n.slice(f))).join('/');
                }),
                (y.sep = '/'),
                (y.delimiter = ':'),
                (y.dirname = function (d) {
                  if ((typeof d != 'string' && (d += ''), d.length === 0))
                    return '.';
                  for (
                    var h = d.charCodeAt(0) === 47,
                      o = -1,
                      s = !0,
                      n = d.length - 1;
                    1 <= n;
                    --n
                  )
                    if (d.charCodeAt(n) === 47) {
                      if (!s) {
                        o = n;
                        break;
                      }
                    } else s = !1;
                  return o === -1
                    ? h
                      ? '/'
                      : '.'
                    : h && o === 1
                    ? '/'
                    : d.slice(0, o);
                }),
                (y.basename = function (d, h) {
                  return (
                    (d = (function (o) {
                      typeof o != 'string' && (o += '');
                      for (
                        var s = 0, n = -1, c = !0, f = o.length - 1;
                        0 <= f;
                        --f
                      )
                        if (o.charCodeAt(f) === 47) {
                          if (!c) {
                            s = f + 1;
                            break;
                          }
                        } else n === -1 && ((c = !1), (n = f + 1));
                      return n === -1 ? '' : o.slice(s, n);
                    })(d)),
                    (d =
                      h && d.substr(-1 * h.length) === h
                        ? d.substr(0, d.length - h.length)
                        : d)
                  );
                }),
                (y.extname = function (d) {
                  typeof d != 'string' && (d += '');
                  for (
                    var h = -1, o = 0, s = -1, n = !0, c = 0, f = d.length - 1;
                    0 <= f;
                    --f
                  ) {
                    var g = d.charCodeAt(f);
                    if (g === 47) {
                      if (n) continue;
                      o = f + 1;
                      break;
                    }
                    s === -1 && ((n = !1), (s = f + 1)),
                      g === 46
                        ? h === -1
                          ? (h = f)
                          : c !== 1 && (c = 1)
                        : h !== -1 && (c = -1);
                  }
                  return h === -1 ||
                    s === -1 ||
                    c === 0 ||
                    (c === 1 && h === s - 1 && h === o + 1)
                    ? ''
                    : d.slice(h, s);
                });
              var l =
                'ab'.substr(-1) === 'b'
                  ? function (d, h, o) {
                      return d.substr(h, o);
                    }
                  : function (d, h, o) {
                      return h < 0 && (h = d.length + h), d.substr(h, o);
                    };
            }.call(this, t('_process')));
          },
          { _process: 243 },
        ],
        243: [
          function (t, r, y) {
            var u,
              a,
              r = (r.exports = {});
            function l() {
              throw new Error('setTimeout has not been defined');
            }
            function d() {
              throw new Error('clearTimeout has not been defined');
            }
            try {
              u = typeof setTimeout == 'function' ? setTimeout : l;
            } catch {
              u = l;
            }
            try {
              a = typeof clearTimeout == 'function' ? clearTimeout : d;
            } catch {
              a = d;
            }
            function h(j) {
              if (u === setTimeout) return setTimeout(j, 0);
              if ((u === l || !u) && setTimeout) return (u = setTimeout)(j, 0);
              try {
                return u(j, 0);
              } catch {
                try {
                  return u.call(null, j, 0);
                } catch {
                  return u.call(this, j, 0);
                }
              }
            }
            var o,
              s = [],
              n = !1,
              c = -1;
            function f() {
              n &&
                o &&
                ((n = !1),
                o.length ? (s = o.concat(s)) : (c = -1),
                s.length && g());
            }
            function g() {
              if (!n) {
                for (var j = h(f), v = ((n = !0), s.length); v; ) {
                  for (o = s, s = []; ++c < v; ) o && o[c].run();
                  (c = -1), (v = s.length);
                }
                (o = null),
                  (n = !1),
                  (function (M) {
                    if (a === clearTimeout) return clearTimeout(M);
                    if ((a === d || !a) && clearTimeout)
                      return (a = clearTimeout)(M);
                    try {
                      a(M);
                    } catch {
                      try {
                        return a.call(null, M);
                      } catch {
                        return a.call(this, M);
                      }
                    }
                  })(j);
              }
            }
            function _(j, v) {
              (this.fun = j), (this.array = v);
            }
            function x() {}
            (r.nextTick = function (j) {
              var v = new Array(arguments.length - 1);
              if (1 < arguments.length)
                for (var M = 1; M < arguments.length; M++)
                  v[M - 1] = arguments[M];
              s.push(new _(j, v)), s.length !== 1 || n || h(g);
            }),
              (_.prototype.run = function () {
                this.fun.apply(null, this.array);
              }),
              (r.title = 'browser'),
              (r.browser = !0),
              (r.env = {}),
              (r.argv = []),
              (r.version = ''),
              (r.versions = {}),
              (r.on = x),
              (r.addListener = x),
              (r.once = x),
              (r.off = x),
              (r.removeListener = x),
              (r.removeAllListeners = x),
              (r.emit = x),
              (r.prependListener = x),
              (r.prependOnceListener = x),
              (r.listeners = function (j) {
                return [];
              }),
              (r.binding = function (j) {
                throw new Error('process.binding is not supported');
              }),
              (r.cwd = function () {
                return '/';
              }),
              (r.chdir = function (j) {
                throw new Error('process.chdir is not supported');
              }),
              (r.umask = function () {
                return 0;
              });
          },
          {},
        ],
        244: [
          function (t, b, y) {
            b = (function (u) {
              var a,
                r = Object.prototype,
                l = r.hasOwnProperty,
                C = typeof Symbol == 'function' ? Symbol : {},
                d = C.iterator || '@@iterator',
                h = C.asyncIterator || '@@asyncIterator',
                o = C.toStringTag || '@@toStringTag';
              function s(z, B, W, Y) {
                var $,
                  ae,
                  P,
                  L,
                  B = B && B.prototype instanceof j ? B : j,
                  B = Object.create(B.prototype),
                  Y = new U(Y || []);
                return (
                  (B._invoke =
                    (($ = z),
                    (ae = W),
                    (P = Y),
                    (L = c),
                    function (ee, ne) {
                      if (L === g)
                        throw new Error('Generator is already running');
                      if (L === _) {
                        if (ee === 'throw') throw ne;
                        return q();
                      }
                      for (P.method = ee, P.arg = ne; ; ) {
                        var ce = P.delegate;
                        if (
                          ce &&
                          ((ce = (function pe(le, ue) {
                            var be = le.iterator[ue.method];
                            if (be === a) {
                              if (
                                ((ue.delegate = null), ue.method === 'throw')
                              ) {
                                if (
                                  le.iterator.return &&
                                  ((ue.method = 'return'),
                                  (ue.arg = a),
                                  pe(le, ue),
                                  ue.method === 'throw')
                                )
                                  return x;
                                (ue.method = 'throw'),
                                  (ue.arg = new TypeError(
                                    "The iterator does not provide a 'throw' method",
                                  ));
                              }
                              return x;
                            }
                            if (
                              ((be = n(be, le.iterator, ue.arg)),
                              be.type === 'throw')
                            )
                              return (
                                (ue.method = 'throw'),
                                (ue.arg = be.arg),
                                (ue.delegate = null),
                                x
                              );
                            if (((be = be.arg), !be))
                              return (
                                (ue.method = 'throw'),
                                (ue.arg = new TypeError(
                                  'iterator result is not an object',
                                )),
                                (ue.delegate = null),
                                x
                              );
                            {
                              if (!be.done) return be;
                              (ue[le.resultName] = be.value),
                                (ue.next = le.nextLoc),
                                ue.method !== 'return' &&
                                  ((ue.method = 'next'), (ue.arg = a));
                            }
                            return (ue.delegate = null), x;
                          })(ce, P)),
                          ce)
                        ) {
                          if (ce === x) continue;
                          return ce;
                        }
                        if (P.method === 'next') P.sent = P._sent = P.arg;
                        else if (P.method === 'throw') {
                          if (L === c) throw ((L = _), P.arg);
                          P.dispatchException(P.arg);
                        } else
                          P.method === 'return' && P.abrupt('return', P.arg);
                        if (
                          ((L = g), (ce = n($, ae, P)), ce.type === 'normal')
                        ) {
                          if (((L = P.done ? _ : f), ce.arg !== x))
                            return { value: ce.arg, done: P.done };
                        } else
                          ce.type === 'throw' &&
                            ((L = _), (P.method = 'throw'), (P.arg = ce.arg));
                      }
                    })),
                  B
                );
              }
              function n(z, X, W) {
                try {
                  return { type: 'normal', arg: z.call(X, W) };
                } catch (Z) {
                  return { type: 'throw', arg: Z };
                }
              }
              u.wrap = s;
              var c = 'suspendedStart',
                f = 'suspendedYield',
                g = 'executing',
                _ = 'completed',
                x = {};
              function j() {}
              function v() {}
              function M() {}
              var C = {},
                k =
                  ((C[d] = function () {
                    return this;
                  }),
                  Object.getPrototypeOf),
                k = k && k(k(H([]))),
                A =
                  (k && k !== r && l.call(k, d) && (C = k),
                  (M.prototype = j.prototype = Object.create(C)));
              function R(z) {
                ['next', 'throw', 'return'].forEach(function (X) {
                  z[X] = function (W) {
                    return this._invoke(X, W);
                  };
                });
              }
              function O(z) {
                var X;
                this._invoke = function (W, Z) {
                  function $() {
                    return new Promise(function (ae, P) {
                      (function L(pe, Y, ee, ne) {
                        var ce,
                          pe = n(z[pe], z, Y);
                        if (pe.type !== 'throw')
                          return (Y = (ce = pe.arg).value) &&
                            typeof Y == 'object' &&
                            l.call(Y, '__await')
                            ? Promise.resolve(Y.__await).then(
                                function (le) {
                                  L('next', le, ee, ne);
                                },
                                function (le) {
                                  L('throw', le, ee, ne);
                                },
                              )
                            : Promise.resolve(Y).then(
                                function (le) {
                                  (ce.value = le), ee(ce);
                                },
                                function (le) {
                                  return L('throw', le, ee, ne);
                                },
                              );
                        ne(pe.arg);
                      })(W, Z, ae, P);
                    });
                  }
                  return (X = X ? X.then($, $) : $());
                };
              }
              function D(z) {
                var X = { tryLoc: z[0] };
                1 in z && (X.catchLoc = z[1]),
                  2 in z && ((X.finallyLoc = z[2]), (X.afterLoc = z[3])),
                  this.tryEntries.push(X);
              }
              function N(z) {
                var X = z.completion || {};
                (X.type = 'normal'), delete X.arg, (z.completion = X);
              }
              function U(z) {
                (this.tryEntries = [{ tryLoc: 'root' }]),
                  z.forEach(D, this),
                  this.reset(!0);
              }
              function H(z) {
                if (z) {
                  var X,
                    W = z[d];
                  if (W) return W.call(z);
                  if (typeof z.next == 'function') return z;
                  if (!isNaN(z.length))
                    return (
                      (X = -1),
                      ((W = function Z() {
                        for (; ++X < z.length; )
                          if (l.call(z, X))
                            return (Z.value = z[X]), (Z.done = !1), Z;
                        return (Z.value = a), (Z.done = !0), Z;
                      }).next = W)
                    );
                }
                return { next: q };
              }
              function q() {
                return { value: a, done: !0 };
              }
              return (
                ((v.prototype = A.constructor = M).constructor = v),
                (M[o] = v.displayName = 'GeneratorFunction'),
                (u.isGeneratorFunction = function (z) {
                  return (
                    (z = typeof z == 'function' && z.constructor),
                    !!z &&
                      (z === v ||
                        (z.displayName || z.name) === 'GeneratorFunction')
                  );
                }),
                (u.mark = function (z) {
                  return (
                    Object.setPrototypeOf
                      ? Object.setPrototypeOf(z, M)
                      : ((z.__proto__ = M),
                        o in z || (z[o] = 'GeneratorFunction')),
                    (z.prototype = Object.create(A)),
                    z
                  );
                }),
                (u.awrap = function (z) {
                  return { __await: z };
                }),
                R(O.prototype),
                (O.prototype[h] = function () {
                  return this;
                }),
                (u.AsyncIterator = O),
                (u.async = function (z, X, W, Z) {
                  var $ = new O(s(z, X, W, Z));
                  return u.isGeneratorFunction(X)
                    ? $
                    : $.next().then(function (ae) {
                        return ae.done ? ae.value : $.next();
                      });
                }),
                R(A),
                (A[o] = 'Generator'),
                (A[d] = function () {
                  return this;
                }),
                (A.toString = function () {
                  return '[object Generator]';
                }),
                (u.keys = function (z) {
                  var X,
                    W = [];
                  for (X in z) W.push(X);
                  return (
                    W.reverse(),
                    function Z() {
                      for (; W.length; ) {
                        var $ = W.pop();
                        if ($ in z) return (Z.value = $), (Z.done = !1), Z;
                      }
                      return (Z.done = !0), Z;
                    }
                  );
                }),
                (u.values = H),
                (U.prototype = {
                  constructor: U,
                  reset: function (z) {
                    if (
                      ((this.prev = 0),
                      (this.next = 0),
                      (this.sent = this._sent = a),
                      (this.done = !1),
                      (this.delegate = null),
                      (this.method = 'next'),
                      (this.arg = a),
                      this.tryEntries.forEach(N),
                      !z)
                    )
                      for (var X in this)
                        X.charAt(0) === 't' &&
                          l.call(this, X) &&
                          !isNaN(+X.slice(1)) &&
                          (this[X] = a);
                  },
                  stop: function () {
                    this.done = !0;
                    var z = this.tryEntries[0].completion;
                    if (z.type === 'throw') throw z.arg;
                    return this.rval;
                  },
                  dispatchException: function (z) {
                    if (this.done) throw z;
                    var X = this;
                    function W(B, Y) {
                      return (
                        (ae.type = 'throw'),
                        (ae.arg = z),
                        (X.next = B),
                        Y && ((X.method = 'next'), (X.arg = a)),
                        !!Y
                      );
                    }
                    for (var Z = this.tryEntries.length - 1; 0 <= Z; --Z) {
                      var $ = this.tryEntries[Z],
                        ae = $.completion;
                      if ($.tryLoc === 'root') return W('end');
                      if ($.tryLoc <= this.prev) {
                        var P = l.call($, 'catchLoc'),
                          L = l.call($, 'finallyLoc');
                        if (P && L) {
                          if (this.prev < $.catchLoc) return W($.catchLoc, !0);
                          if (this.prev < $.finallyLoc) return W($.finallyLoc);
                        } else if (P) {
                          if (this.prev < $.catchLoc) return W($.catchLoc, !0);
                        } else {
                          if (!L)
                            throw new Error(
                              'try statement without catch or finally',
                            );
                          if (this.prev < $.finallyLoc) return W($.finallyLoc);
                        }
                      }
                    }
                  },
                  abrupt: function (z, X) {
                    for (var W = this.tryEntries.length - 1; 0 <= W; --W) {
                      var Z = this.tryEntries[W];
                      if (
                        Z.tryLoc <= this.prev &&
                        l.call(Z, 'finallyLoc') &&
                        this.prev < Z.finallyLoc
                      ) {
                        var $ = Z;
                        break;
                      }
                    }
                    var ae = ($ =
                      $ &&
                      (z === 'break' || z === 'continue') &&
                      $.tryLoc <= X &&
                      X <= $.finallyLoc
                        ? null
                        : $)
                      ? $.completion
                      : {};
                    return (
                      (ae.type = z),
                      (ae.arg = X),
                      $
                        ? ((this.method = 'next'),
                          (this.next = $.finallyLoc),
                          x)
                        : this.complete(ae)
                    );
                  },
                  complete: function (z, X) {
                    if (z.type === 'throw') throw z.arg;
                    return (
                      z.type === 'break' || z.type === 'continue'
                        ? (this.next = z.arg)
                        : z.type === 'return'
                        ? ((this.rval = this.arg = z.arg),
                          (this.method = 'return'),
                          (this.next = 'end'))
                        : z.type === 'normal' && X && (this.next = X),
                      x
                    );
                  },
                  finish: function (z) {
                    for (var X = this.tryEntries.length - 1; 0 <= X; --X) {
                      var W = this.tryEntries[X];
                      if (W.finallyLoc === z)
                        return this.complete(W.completion, W.afterLoc), N(W), x;
                    }
                  },
                  catch: function (z) {
                    for (var X = this.tryEntries.length - 1; 0 <= X; --X) {
                      var W,
                        Z,
                        $ = this.tryEntries[X];
                      if ($.tryLoc === z)
                        return (
                          (W = $.completion).type === 'throw' &&
                            ((Z = W.arg), N($)),
                          Z
                        );
                    }
                    throw new Error('illegal catch attempt');
                  },
                  delegateYield: function (z, X, W) {
                    return (
                      (this.delegate = {
                        iterator: H(z),
                        resultName: X,
                        nextLoc: W,
                      }),
                      this.method === 'next' && (this.arg = a),
                      x
                    );
                  },
                }),
                u
              );
            })(typeof b == 'object' ? b.exports : {});
            try {
              regeneratorRuntime = b;
            } catch {
              Function('r', 'regeneratorRuntime = r')(b);
            }
          },
          {},
        ],
        245: [
          function (t, b, y) {
            (function (u) {
              var a, r, l, d, h, o, s, n, c, f;
              function g(N) {
                if (
                  (typeof N != 'string' && (N = String(N)),
                  /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(N))
                )
                  throw new TypeError('Invalid character in header field name');
                return N.toLowerCase();
              }
              function _(N) {
                return (N = typeof N != 'string' ? String(N) : N);
              }
              function x(N) {
                var U = {
                  next: function () {
                    var H = N.shift();
                    return { done: H === void 0, value: H };
                  },
                };
                return (
                  r &&
                    (U[Symbol.iterator] = function () {
                      return U;
                    }),
                  U
                );
              }
              function j(N) {
                (this.map = {}),
                  N instanceof j
                    ? N.forEach(function (U, H) {
                        this.append(H, U);
                      }, this)
                    : Array.isArray(N)
                    ? N.forEach(function (U) {
                        this.append(U[0], U[1]);
                      }, this)
                    : N &&
                      Object.getOwnPropertyNames(N).forEach(function (U) {
                        this.append(U, N[U]);
                      }, this);
              }
              function v(N) {
                if (N.bodyUsed)
                  return Promise.reject(new TypeError('Already read'));
                N.bodyUsed = !0;
              }
              function M(N) {
                return new Promise(function (U, H) {
                  (N.onload = function () {
                    U(N.result);
                  }),
                    (N.onerror = function () {
                      H(N.error);
                    });
                });
              }
              function C(N) {
                var U = new FileReader(),
                  H = M(U);
                return U.readAsArrayBuffer(N), H;
              }
              function k(N) {
                var U;
                return N.slice
                  ? N.slice(0)
                  : ((U = new Uint8Array(N.byteLength)).set(new Uint8Array(N)),
                    U.buffer);
              }
              function A() {
                return (
                  (this.bodyUsed = !1),
                  (this._initBody = function (N) {
                    if ((this._bodyInit = N))
                      if (typeof N == 'string') this._bodyText = N;
                      else if (l && Blob.prototype.isPrototypeOf(N))
                        this._bodyBlob = N;
                      else if (d && FormData.prototype.isPrototypeOf(N))
                        this._bodyFormData = N;
                      else if (a && URLSearchParams.prototype.isPrototypeOf(N))
                        this._bodyText = N.toString();
                      else if (h && l && s(N))
                        (this._bodyArrayBuffer = k(N.buffer)),
                          (this._bodyInit = new Blob([this._bodyArrayBuffer]));
                      else {
                        if (
                          !h ||
                          (!ArrayBuffer.prototype.isPrototypeOf(N) && !n(N))
                        )
                          throw new Error('unsupported BodyInit type');
                        this._bodyArrayBuffer = k(N);
                      }
                    else this._bodyText = '';
                    this.headers.get('content-type') ||
                      (typeof N == 'string'
                        ? this.headers.set(
                            'content-type',
                            'text/plain;charset=UTF-8',
                          )
                        : this._bodyBlob && this._bodyBlob.type
                        ? this.headers.set('content-type', this._bodyBlob.type)
                        : a &&
                          URLSearchParams.prototype.isPrototypeOf(N) &&
                          this.headers.set(
                            'content-type',
                            'application/x-www-form-urlencoded;charset=UTF-8',
                          ));
                  }),
                  l &&
                    ((this.blob = function () {
                      var N = v(this);
                      if (N) return N;
                      if (this._bodyBlob)
                        return Promise.resolve(this._bodyBlob);
                      if (this._bodyArrayBuffer)
                        return Promise.resolve(
                          new Blob([this._bodyArrayBuffer]),
                        );
                      if (this._bodyFormData)
                        throw new Error('could not read FormData body as blob');
                      return Promise.resolve(new Blob([this._bodyText]));
                    }),
                    (this.arrayBuffer = function () {
                      return this._bodyArrayBuffer
                        ? v(this) || Promise.resolve(this._bodyArrayBuffer)
                        : this.blob().then(C);
                    })),
                  (this.text = function () {
                    var N,
                      U,
                      H = v(this);
                    if (H) return H;
                    if (this._bodyBlob)
                      return (
                        (H = this._bodyBlob),
                        (N = new FileReader()),
                        (U = M(N)),
                        N.readAsText(H),
                        U
                      );
                    if (this._bodyArrayBuffer)
                      return Promise.resolve(
                        (function (q) {
                          for (
                            var z = new Uint8Array(q),
                              X = new Array(z.length),
                              W = 0;
                            W < z.length;
                            W++
                          )
                            X[W] = String.fromCharCode(z[W]);
                          return X.join('');
                        })(this._bodyArrayBuffer),
                      );
                    if (this._bodyFormData)
                      throw new Error('could not read FormData body as text');
                    return Promise.resolve(this._bodyText);
                  }),
                  d &&
                    (this.formData = function () {
                      return this.text().then(O);
                    }),
                  (this.json = function () {
                    return this.text().then(JSON.parse);
                  }),
                  this
                );
              }
              function R(N, U) {
                var H,
                  q = (U = U || {}).body;
                if (N instanceof R) {
                  if (N.bodyUsed) throw new TypeError('Already read');
                  (this.url = N.url),
                    (this.credentials = N.credentials),
                    U.headers || (this.headers = new j(N.headers)),
                    (this.method = N.method),
                    (this.mode = N.mode),
                    q ||
                      N._bodyInit == null ||
                      ((q = N._bodyInit), (N.bodyUsed = !0));
                } else this.url = String(N);
                if (
                  ((this.credentials =
                    U.credentials || this.credentials || 'omit'),
                  (!U.headers && this.headers) ||
                    (this.headers = new j(U.headers)),
                  (this.method =
                    ((N = U.method || this.method || 'GET'),
                    (H = N.toUpperCase()),
                    -1 < c.indexOf(H) ? H : N)),
                  (this.mode = U.mode || this.mode || null),
                  (this.referrer = null),
                  (this.method === 'GET' || this.method === 'HEAD') && q)
                )
                  throw new TypeError(
                    'Body not allowed for GET or HEAD requests',
                  );
                this._initBody(q);
              }
              function O(N) {
                var U = new FormData();
                return (
                  N.trim()
                    .split('&')
                    .forEach(function (H) {
                      var q;
                      H &&
                        ((q = (H = H.split('=')).shift().replace(/\+/g, ' ')),
                        (H = H.join('=').replace(/\+/g, ' ')),
                        U.append(decodeURIComponent(q), decodeURIComponent(H)));
                    }),
                  U
                );
              }
              function D(N, U) {
                (U = U || {}),
                  (this.type = 'default'),
                  (this.status = U.status === void 0 ? 200 : U.status),
                  (this.ok = 200 <= this.status && this.status < 300),
                  (this.statusText = 'statusText' in U ? U.statusText : 'OK'),
                  (this.headers = new j(U.headers)),
                  (this.url = U.url || ''),
                  this._initBody(N);
              }
              u.fetch ||
                ((a = 'URLSearchParams' in u),
                (r = 'Symbol' in u && 'iterator' in Symbol),
                (l =
                  'FileReader' in u &&
                  'Blob' in u &&
                  (function () {
                    try {
                      return new Blob(), !0;
                    } catch {
                      return !1;
                    }
                  })()),
                (d = 'FormData' in u),
                (h = 'ArrayBuffer' in u) &&
                  ((o = [
                    '[object Int8Array]',
                    '[object Uint8Array]',
                    '[object Uint8ClampedArray]',
                    '[object Int16Array]',
                    '[object Uint16Array]',
                    '[object Int32Array]',
                    '[object Uint32Array]',
                    '[object Float32Array]',
                    '[object Float64Array]',
                  ]),
                  (s = function (N) {
                    return N && DataView.prototype.isPrototypeOf(N);
                  }),
                  (n =
                    ArrayBuffer.isView ||
                    function (N) {
                      return (
                        N && -1 < o.indexOf(Object.prototype.toString.call(N))
                      );
                    })),
                (j.prototype.append = function (N, U) {
                  (N = g(N)), (U = _(U));
                  var H = this.map[N];
                  this.map[N] = H ? H + ',' + U : U;
                }),
                (j.prototype.delete = function (N) {
                  delete this.map[g(N)];
                }),
                (j.prototype.get = function (N) {
                  return (N = g(N)), this.has(N) ? this.map[N] : null;
                }),
                (j.prototype.has = function (N) {
                  return this.map.hasOwnProperty(g(N));
                }),
                (j.prototype.set = function (N, U) {
                  this.map[g(N)] = _(U);
                }),
                (j.prototype.forEach = function (N, U) {
                  for (var H in this.map)
                    this.map.hasOwnProperty(H) &&
                      N.call(U, this.map[H], H, this);
                }),
                (j.prototype.keys = function () {
                  var N = [];
                  return (
                    this.forEach(function (U, H) {
                      N.push(H);
                    }),
                    x(N)
                  );
                }),
                (j.prototype.values = function () {
                  var N = [];
                  return (
                    this.forEach(function (U) {
                      N.push(U);
                    }),
                    x(N)
                  );
                }),
                (j.prototype.entries = function () {
                  var N = [];
                  return (
                    this.forEach(function (U, H) {
                      N.push([H, U]);
                    }),
                    x(N)
                  );
                }),
                r && (j.prototype[Symbol.iterator] = j.prototype.entries),
                (c = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']),
                (R.prototype.clone = function () {
                  return new R(this, { body: this._bodyInit });
                }),
                A.call(R.prototype),
                A.call(D.prototype),
                (D.prototype.clone = function () {
                  return new D(this._bodyInit, {
                    status: this.status,
                    statusText: this.statusText,
                    headers: new j(this.headers),
                    url: this.url,
                  });
                }),
                (D.error = function () {
                  var N = new D(null, { status: 0, statusText: '' });
                  return (N.type = 'error'), N;
                }),
                (f = [301, 302, 303, 307, 308]),
                (D.redirect = function (N, U) {
                  if (f.indexOf(U) === -1)
                    throw new RangeError('Invalid status code');
                  return new D(null, { status: U, headers: { location: N } });
                }),
                (u.Headers = j),
                (u.Request = R),
                (u.Response = D),
                (u.fetch = function (N, U) {
                  return new Promise(function (H, q) {
                    var z = new R(N, U),
                      X = new XMLHttpRequest();
                    (X.onload = function () {
                      var W,
                        Z = {
                          status: X.status,
                          statusText: X.statusText,
                          headers:
                            ((Z = X.getAllResponseHeaders() || ''),
                            (W = new j()),
                            Z.replace(/\r?\n[\t ]+/g, ' ')
                              .split(/\r?\n/)
                              .forEach(function (P) {
                                var P = P.split(':'),
                                  L = P.shift().trim();
                                L && ((P = P.join(':').trim()), W.append(L, P));
                              }),
                            W),
                        },
                        $ =
                          ((Z.url =
                            'responseURL' in X
                              ? X.responseURL
                              : Z.headers.get('X-Request-URL')),
                          'response' in X ? X.response : X.responseText);
                      H(new D($, Z));
                    }),
                      (X.onerror = function () {
                        q(new TypeError('Network request failed'));
                      }),
                      (X.ontimeout = function () {
                        q(new TypeError('Network request failed'));
                      }),
                      X.open(z.method, z.url, !0),
                      z.credentials === 'include'
                        ? (X.withCredentials = !0)
                        : z.credentials === 'omit' && (X.withCredentials = !1),
                      'responseType' in X && l && (X.responseType = 'blob'),
                      z.headers.forEach(function (W, Z) {
                        X.setRequestHeader(Z, W);
                      }),
                      X.send(z._bodyInit === void 0 ? null : z._bodyInit);
                  });
                }),
                (u.fetch.polyfill = !0));
            })(typeof self < 'u' ? self : this);
          },
          {},
        ],
        246: [
          function (t, b, y) {
            t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u,
              a = l(t('../core/main')),
              r = l(t('../color/color_conversion'));
            function l(o) {
              return o && o.__esModule ? o : { default: o };
            }
            var d = [
                { h: 0, s: 0, b: 0.8275, name: 'gray' },
                { h: 0, s: 0, b: 0.8627, name: 'gray' },
                { h: 0, s: 0, b: 0.7529, name: 'gray' },
                { h: 0.0167, s: 0.1176, b: 1, name: 'light pink' },
              ],
              h = [
                { h: 0, s: 0, b: 0, name: 'black' },
                { h: 0, s: 0, b: 0.5, name: 'gray' },
                { h: 0, s: 0, b: 1, name: 'white' },
                { h: 0, s: 0.5, b: 0.5, name: 'dark maroon' },
                { h: 0, s: 0.5, b: 1, name: 'salmon pink' },
                { h: 0, s: 1, b: 0, name: 'black' },
                { h: 0, s: 1, b: 0.5, name: 'dark red' },
                { h: 0, s: 1, b: 1, name: 'red' },
                { h: 5, s: 0, b: 1, name: 'very light peach' },
                { h: 5, s: 0.5, b: 0.5, name: 'brown' },
                { h: 5, s: 0.5, b: 1, name: 'peach' },
                { h: 5, s: 1, b: 0.5, name: 'brick red' },
                { h: 5, s: 1, b: 1, name: 'crimson' },
                { h: 10, s: 0, b: 1, name: 'light peach' },
                { h: 10, s: 0.5, b: 0.5, name: 'brown' },
                { h: 10, s: 0.5, b: 1, name: 'light orange' },
                { h: 10, s: 1, b: 0.5, name: 'brown' },
                { h: 10, s: 1, b: 1, name: 'orange' },
                { h: 15, s: 0, b: 1, name: 'very light yellow' },
                { h: 15, s: 0.5, b: 0.5, name: 'olive green' },
                { h: 15, s: 0.5, b: 1, name: 'light yellow' },
                { h: 15, s: 1, b: 0, name: 'dark olive green' },
                { h: 15, s: 1, b: 0.5, name: 'olive green' },
                { h: 15, s: 1, b: 1, name: 'yellow' },
                { h: 20, s: 0, b: 1, name: 'very light yellow' },
                { h: 20, s: 0.5, b: 0.5, name: 'olive green' },
                { h: 20, s: 0.5, b: 1, name: 'light yellow green' },
                { h: 20, s: 1, b: 0, name: 'dark olive green' },
                { h: 20, s: 1, b: 0.5, name: 'dark yellow green' },
                { h: 20, s: 1, b: 1, name: 'yellow green' },
                { h: 25, s: 0.5, b: 0.5, name: 'dark yellow green' },
                { h: 25, s: 0.5, b: 1, name: 'light green' },
                { h: 25, s: 1, b: 0.5, name: 'dark green' },
                { h: 25, s: 1, b: 1, name: 'green' },
                { h: 30, s: 0.5, b: 1, name: 'light green' },
                { h: 30, s: 1, b: 0.5, name: 'dark green' },
                { h: 30, s: 1, b: 1, name: 'green' },
                { h: 35, s: 0, b: 0.5, name: 'light green' },
                { h: 35, s: 0, b: 1, name: 'very light green' },
                { h: 35, s: 0.5, b: 0.5, name: 'dark green' },
                { h: 35, s: 0.5, b: 1, name: 'light green' },
                { h: 35, s: 1, b: 0, name: 'very dark green' },
                { h: 35, s: 1, b: 0.5, name: 'dark green' },
                { h: 35, s: 1, b: 1, name: 'green' },
                { h: 40, s: 0, b: 1, name: 'very light green' },
                { h: 40, s: 0.5, b: 0.5, name: 'dark green' },
                { h: 40, s: 0.5, b: 1, name: 'light green' },
                { h: 40, s: 1, b: 0.5, name: 'dark green' },
                { h: 40, s: 1, b: 1, name: 'green' },
                { h: 45, s: 0.5, b: 1, name: 'light turquoise' },
                { h: 45, s: 1, b: 0.5, name: 'dark turquoise' },
                { h: 45, s: 1, b: 1, name: 'turquoise' },
                { h: 50, s: 0, b: 1, name: 'light sky blue' },
                { h: 50, s: 0.5, b: 0.5, name: 'dark cyan' },
                { h: 50, s: 0.5, b: 1, name: 'light cyan' },
                { h: 50, s: 1, b: 0.5, name: 'dark cyan' },
                { h: 50, s: 1, b: 1, name: 'cyan' },
                { h: 55, s: 0, b: 1, name: 'light sky blue' },
                { h: 55, s: 0.5, b: 1, name: 'light sky blue' },
                { h: 55, s: 1, b: 0.5, name: 'dark blue' },
                { h: 55, s: 1, b: 1, name: 'sky blue' },
                { h: 60, s: 0, b: 0.5, name: 'gray' },
                { h: 60, s: 0, b: 1, name: 'very light blue' },
                { h: 60, s: 0.5, b: 0.5, name: 'blue' },
                { h: 60, s: 0.5, b: 1, name: 'light blue' },
                { h: 60, s: 1, b: 0.5, name: 'navy blue' },
                { h: 60, s: 1, b: 1, name: 'blue' },
                { h: 65, s: 0, b: 1, name: 'lavender' },
                { h: 65, s: 0.5, b: 0.5, name: 'navy blue' },
                { h: 65, s: 0.5, b: 1, name: 'light purple' },
                { h: 65, s: 1, b: 0.5, name: 'dark navy blue' },
                { h: 65, s: 1, b: 1, name: 'blue' },
                { h: 70, s: 0, b: 1, name: 'lavender' },
                { h: 70, s: 0.5, b: 0.5, name: 'navy blue' },
                { h: 70, s: 0.5, b: 1, name: 'lavender blue' },
                { h: 70, s: 1, b: 0.5, name: 'dark navy blue' },
                { h: 70, s: 1, b: 1, name: 'blue' },
                { h: 75, s: 0.5, b: 1, name: 'lavender' },
                { h: 75, s: 1, b: 0.5, name: 'dark purple' },
                { h: 75, s: 1, b: 1, name: 'purple' },
                { h: 80, s: 0.5, b: 1, name: 'pinkish purple' },
                { h: 80, s: 1, b: 0.5, name: 'dark purple' },
                { h: 80, s: 1, b: 1, name: 'purple' },
                { h: 85, s: 0, b: 1, name: 'light pink' },
                { h: 85, s: 0.5, b: 0.5, name: 'purple' },
                { h: 85, s: 0.5, b: 1, name: 'light fuchsia' },
                { h: 85, s: 1, b: 0.5, name: 'dark fuchsia' },
                { h: 85, s: 1, b: 1, name: 'fuchsia' },
                { h: 90, s: 0.5, b: 0.5, name: 'dark fuchsia' },
                { h: 90, s: 0.5, b: 1, name: 'hot pink' },
                { h: 90, s: 1, b: 0.5, name: 'dark fuchsia' },
                { h: 90, s: 1, b: 1, name: 'fuchsia' },
                { h: 95, s: 0, b: 1, name: 'pink' },
                { h: 95, s: 0.5, b: 1, name: 'light pink' },
                { h: 95, s: 1, b: 0.5, name: 'dark magenta' },
                { h: 95, s: 1, b: 1, name: 'magenta' },
              ];
            (a.default.prototype._rgbColorName = function (c) {
              var s,
                n,
                c = r.default._rgbaToHSBA(c),
                f = [(u = c)[0], c[1], c[2]];
              f[0] !== 0 &&
                ((f[0] = Math.round(100 * f[0])),
                ((c = f[0].toString().split(''))[(n = c.length - 1)] = parseInt(
                  c[n],
                )),
                c[n] < 2.5
                  ? (c[n] = 0)
                  : 2.5 <= c[n] && c[n] < 7.5 && (c[n] = 5),
                c.length === 2
                  ? ((c[0] = parseInt(c[0])),
                    7.5 <= c[n] && ((c[n] = 0), (c[0] = c[0] + 1)),
                    (f[0] = 10 * c[0] + c[1]))
                  : 7.5 <= c[n]
                  ? (f[0] = 10)
                  : (f[0] = c[n])),
                (f[2] = f[2] / 255);
              for (var g = f.length - 1; 1 <= g; g--)
                f[g] <= 0.25
                  ? (f[g] = 0)
                  : 0.25 < f[g] && f[g] < 0.75
                  ? (f[g] = 0.5)
                  : (f[g] = 1);
              if (f[0] === 0 && f[1] === 0 && f[2] === 1) {
                for (var _ = 2; 0 <= _; _--)
                  u[_] = Math.round(1e4 * u[_]) / 1e4;
                for (var x = 0; x < d.length; x++) {
                  if (d[x].h === u[0] && d[x].s === u[1] && d[x].b === u[2]) {
                    s = d[x].name;
                    break;
                  }
                  s = 'white';
                }
              } else
                for (var j = 0; j < h.length; j++)
                  if (h[j].h === f[0] && h[j].s === f[1] && h[j].b === f[2]) {
                    s = h[j].name;
                    break;
                  }
              return s;
            }),
              (t = a.default),
              (y.default = t);
          },
          {
            '../color/color_conversion': 252,
            '../core/main': 267,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.split': 191,
          },
        ],
        247: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.ends-with'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.ends-with'),
              t('core-js/modules/es.string.replace'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
                (t = t('../core/main')) && t.__esModule ? t : { default: t },
              a = '_Description',
              r = '_fallbackDesc',
              l = '_fallbackTable',
              d = '_Label',
              h = '_labelDesc',
              o = '_labelTable';
            function s(n) {
              if (n === 'label' || n === 'fallback')
                throw new Error('description should not be LABEL or FALLBACK');
              return (
                n.endsWith('.') ||
                  n.endsWith(';') ||
                  n.endsWith(',') ||
                  n.endsWith('?') ||
                  n.endsWith('!') ||
                  (n += '.'),
                n
              );
            }
            (u.default.prototype.describe = function (n, c) {
              var f;
              u.default._validateParameters('describe', arguments),
                typeof n == 'string' &&
                  ((f = this.canvas.id),
                  (n = s(n)),
                  this.dummyDOM ||
                    (this.dummyDOM = document.getElementById(f).parentNode),
                  this.descriptions || (this.descriptions = {}),
                  this.descriptions.fallback
                    ? this.descriptions.fallback.innerHTML !== n &&
                      (this.descriptions.fallback.innerHTML = n)
                    : this._describeHTML('fallback', n),
                  c === this.LABEL &&
                    (this.descriptions.label
                      ? this.descriptions.label.innerHTML !== n &&
                        (this.descriptions.label.innerHTML = n)
                      : this._describeHTML('label', n)));
            }),
              (u.default.prototype.describeElement = function (n, c, f) {
                var g, _;
                u.default._validateParameters('describeElement', arguments),
                  typeof c == 'string' &&
                    typeof n == 'string' &&
                    ((g = this.canvas.id),
                    (c = s(c)),
                    (_ = (function (x) {
                      if (x === 'label' || x === 'fallback')
                        throw new Error(
                          'element name should not be LABEL or FALLBACK',
                        );
                      return (
                        x.endsWith('.') || x.endsWith(';') || x.endsWith(',')
                          ? (x = x.replace(/.$/, ':'))
                          : x.endsWith(':') || (x += ':'),
                        x
                      );
                    })(n)),
                    (n = n.replace(/[^a-zA-Z0-9]/g, '')),
                    (_ = '<th scope="row">'
                      .concat(_, '</th><td>')
                      .concat(c, '</td>')),
                    this.dummyDOM ||
                      (this.dummyDOM = document.getElementById(g).parentNode),
                    this.descriptions
                      ? this.descriptions.fallbackElements ||
                        (this.descriptions.fallbackElements = {})
                      : (this.descriptions = { fallbackElements: {} }),
                    this.descriptions.fallbackElements[n]
                      ? this.descriptions.fallbackElements[n].innerHTML !== _ &&
                        (this.descriptions.fallbackElements[n].innerHTML = _)
                      : this._describeElementHTML('fallback', n, _),
                    f === this.LABEL &&
                      (this.descriptions.labelElements ||
                        (this.descriptions.labelElements = {}),
                      this.descriptions.labelElements[n]
                        ? this.descriptions.labelElements[n].innerHTML !== _ &&
                          (this.descriptions.labelElements[n].innerHTML = _)
                        : this._describeElementHTML('label', n, _)));
              }),
              (u.default.prototype._describeHTML = function (n, c) {
                var f,
                  g = this.canvas.id;
                n === 'fallback'
                  ? (this.dummyDOM.querySelector('#'.concat(g + a))
                      ? this.dummyDOM
                          .querySelector('#' + g + l)
                          .insertAdjacentHTML(
                            'beforebegin',
                            '<p id="'.concat(g + r, '"></p>'),
                          )
                      : ((f = '<div id="'
                          .concat(g)
                          .concat(
                            a,
                            '" role="region" aria-label="Canvas Description"><p id="',
                          )
                          .concat(g)
                          .concat(r, '"></p></div>')),
                        this.dummyDOM.querySelector(
                          '#'.concat(g, 'accessibleOutput'),
                        )
                          ? this.dummyDOM
                              .querySelector('#'.concat(g, 'accessibleOutput'))
                              .insertAdjacentHTML('beforebegin', f)
                          : (this.dummyDOM.querySelector(
                              '#'.concat(g),
                            ).innerHTML = f)),
                    (this.descriptions.fallback = this.dummyDOM.querySelector(
                      '#'.concat(g).concat(r),
                    )),
                    (this.descriptions.fallback.innerHTML = c))
                  : n === 'label' &&
                    (this.dummyDOM.querySelector('#'.concat(g + d))
                      ? this.dummyDOM.querySelector('#'.concat(g + o)) &&
                        this.dummyDOM
                          .querySelector('#'.concat(g + o))
                          .insertAdjacentHTML(
                            'beforebegin',
                            '<p id="'.concat(g).concat(h, '"></p>'),
                          )
                      : ((f = '<div id="'
                          .concat(g)
                          .concat(d, '" class="p5Label"><p id="')
                          .concat(g)
                          .concat(h, '"></p></div>')),
                        this.dummyDOM.querySelector(
                          '#'.concat(g, 'accessibleOutputLabel'),
                        )
                          ? this.dummyDOM
                              .querySelector(
                                '#'.concat(g, 'accessibleOutputLabel'),
                              )
                              .insertAdjacentHTML('beforebegin', f)
                          : this.dummyDOM
                              .querySelector('#' + g)
                              .insertAdjacentHTML('afterend', f)),
                    (this.descriptions.label = this.dummyDOM.querySelector(
                      '#' + g + h,
                    )),
                    (this.descriptions.label.innerHTML = c));
              }),
              (u.default.prototype._describeElementHTML = function (n, c, f) {
                var g,
                  _ = this.canvas.id;
                n === 'fallback'
                  ? (this.dummyDOM.querySelector('#'.concat(_ + a))
                      ? this.dummyDOM.querySelector('#' + _ + l) ||
                        this.dummyDOM
                          .querySelector('#' + _ + r)
                          .insertAdjacentHTML(
                            'afterend',
                            '<table id="'
                              .concat(_)
                              .concat(
                                l,
                                '"><caption>Canvas elements and their descriptions</caption></table>',
                              ),
                          )
                      : ((g = '<div id="'
                          .concat(_)
                          .concat(
                            a,
                            '" role="region" aria-label="Canvas Description"><table id="',
                          )
                          .concat(_)
                          .concat(
                            l,
                            '"><caption>Canvas elements and their descriptions</caption></table></div>',
                          )),
                        this.dummyDOM.querySelector(
                          '#'.concat(_, 'accessibleOutput'),
                        )
                          ? this.dummyDOM
                              .querySelector('#'.concat(_, 'accessibleOutput'))
                              .insertAdjacentHTML('beforebegin', g)
                          : (this.dummyDOM.querySelector('#' + _).innerHTML =
                              g)),
                    ((g = document.createElement('tr')).id = _ + '_fte_' + c),
                    this.dummyDOM.querySelector('#' + _ + l).appendChild(g),
                    (this.descriptions.fallbackElements[c] =
                      this.dummyDOM.querySelector(
                        '#'.concat(_).concat('_fte_').concat(c),
                      )),
                    (this.descriptions.fallbackElements[c].innerHTML = f))
                  : n === 'label' &&
                    (this.dummyDOM.querySelector('#'.concat(_ + d))
                      ? this.dummyDOM.querySelector('#'.concat(_ + o)) ||
                        this.dummyDOM
                          .querySelector('#' + _ + h)
                          .insertAdjacentHTML(
                            'afterend',
                            '<table id="'.concat(_ + o, '"></table>'),
                          )
                      : ((g = '<div id="'
                          .concat(_)
                          .concat(d, '" class="p5Label"><table id="')
                          .concat(_)
                          .concat(o, '"></table></div>')),
                        this.dummyDOM.querySelector(
                          '#'.concat(_, 'accessibleOutputLabel'),
                        )
                          ? this.dummyDOM
                              .querySelector(
                                '#'.concat(_, 'accessibleOutputLabel'),
                              )
                              .insertAdjacentHTML('beforebegin', g)
                          : this.dummyDOM
                              .querySelector('#' + _)
                              .insertAdjacentHTML('afterend', g)),
                    ((n = document.createElement('tr')).id = _ + '_lte_' + c),
                    this.dummyDOM.querySelector('#' + _ + o).appendChild(n),
                    (this.descriptions.labelElements[c] =
                      this.dummyDOM.querySelector(
                        '#'.concat(_).concat('_lte_').concat(c),
                      )),
                    (this.descriptions.labelElements[c].innerHTML = f));
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.ends-with': 184,
            'core-js/modules/es.string.replace': 189,
          },
        ],
        248: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.map'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.prototype._updateGridOutput = function (u) {
                var a, r, l, d;
                this.dummyDOM.querySelector('#'.concat(u, '_summary')) &&
                  ((a = this._accessibleOutputs[u]),
                  (l = (function (h, o, s, n) {
                    return (
                      (o = ''
                        .concat(o, ' canvas, ')
                        .concat(s, ' by ')
                        .concat(n, ' pixels, contains ')
                        .concat(h[0])),
                      (o = (
                        h[0] === 1
                          ? ''.concat(o, ' shape: ')
                          : ''.concat(o, ' shapes: ')
                      ).concat(h[1])),
                      o
                    );
                  })(
                    (r = (function (h, o) {
                      var s,
                        n = '',
                        c = '',
                        f = 0;
                      for (s in o) {
                        var g,
                          _ = 0;
                        for (g in o[s]) {
                          var x = '<li id="'
                            .concat(h, 'shape')
                            .concat(f, '">')
                            .concat(o[s][g].color, ' ')
                            .concat(s, ',');
                          s === 'line'
                            ? (x += ' location = '
                                .concat(o[s][g].pos, ', length = ')
                                .concat(o[s][g].length, ' pixels'))
                            : ((x += ' location = '.concat(o[s][g].pos)),
                              s !== 'point' &&
                                (x += ', area = '.concat(o[s][g].area, ' %')),
                              (x += '</li>')),
                            (n += x),
                            _++,
                            f++;
                        }
                        c =
                          1 < _
                            ? ''.concat(c, ' ').concat(_, ' ').concat(s, 's')
                            : ''.concat(c, ' ').concat(_, ' ').concat(s);
                      }
                      return { numShapes: [f, c], details: n };
                    })(u, this.ingredients.shapes)).numShapes,
                    this.ingredients.colors.background,
                    this.width,
                    this.height,
                  )),
                  (d = (function (h, o) {
                    var s,
                      n,
                      c,
                      f = 0,
                      g = '',
                      _ = Array.apply(null, Array(10)).map(function () {});
                    for (s in _)
                      _[s] = Array.apply(null, Array(10)).map(function () {});
                    for (n in o)
                      for (var x in o[n]) {
                        var j = void 0;
                        (j =
                          n !== 'line'
                            ? '<a href="#'
                                .concat(h, 'shape')
                                .concat(f, '">')
                                .concat(o[n][x].color, ' ')
                                .concat(n, '</a>')
                            : '<a href="#'
                                .concat(h, 'shape')
                                .concat(f, '">')
                                .concat(o[n][x].color, ' ')
                                .concat(n, ' midpoint</a>')),
                          _[o[n][x].loc.locY][o[n][x].loc.locX]
                            ? (_[o[n][x].loc.locY][o[n][x].loc.locX] =
                                _[o[n][x].loc.locY][o[n][x].loc.locX] +
                                '  ' +
                                j)
                            : (_[o[n][x].loc.locY][o[n][x].loc.locX] = j),
                          f++;
                      }
                    for (c in _) {
                      var v,
                        M = '<tr>';
                      for (v in _[c])
                        (M += '<td>'),
                          _[c][v] !== void 0 && (M += _[c][v]),
                          (M += '</td>');
                      g = g + M + '</tr>';
                    }
                    return g;
                  })(u, this.ingredients.shapes)),
                  l !== a.summary.innerHTML && (a.summary.innerHTML = l),
                  d !== a.map.innerHTML && (a.map.innerHTML = d),
                  r.details !== a.shapeDetails.innerHTML &&
                    (a.shapeDetails.innerHTML = r.details),
                  (this._accessibleOutputs[u] = a));
              }),
              (t = t.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.map': 161,
          },
        ],
        249: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.number.to-fixed'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.number.to-fixed'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            function a(l, d, h) {
              return l[0] < 0.4 * d
                ? l[1] < 0.4 * h
                  ? 'top left'
                  : l[1] > 0.6 * h
                  ? 'bottom left'
                  : 'mid left'
                : l[0] > 0.6 * d
                ? l[1] < 0.4 * h
                  ? 'top right'
                  : l[1] > 0.6 * h
                  ? 'bottom right'
                  : 'mid right'
                : l[1] < 0.4 * h
                ? 'top middle'
                : l[1] > 0.6 * h
                ? 'bottom middle'
                : 'middle';
            }
            function r(l, d, h) {
              return (
                (d = Math.floor((l[0] / d) * 10)),
                (l = Math.floor((l[1] / h) * 10)),
                d === 10 && (d -= 1),
                l === 10 && (l -= 1),
                { locX: d, locY: l }
              );
            }
            (u.default.prototype.textOutput = function (l) {
              u.default._validateParameters('textOutput', arguments),
                this._accessibleOutputs.text ||
                  ((this._accessibleOutputs.text = !0),
                  this._createOutput('textOutput', 'Fallback'),
                  l === this.LABEL &&
                    ((this._accessibleOutputs.textLabel = !0),
                    this._createOutput('textOutput', 'Label')));
            }),
              (u.default.prototype.gridOutput = function (l) {
                u.default._validateParameters('gridOutput', arguments),
                  this._accessibleOutputs.grid ||
                    ((this._accessibleOutputs.grid = !0),
                    this._createOutput('gridOutput', 'Fallback'),
                    l === this.LABEL &&
                      ((this._accessibleOutputs.gridLabel = !0),
                      this._createOutput('gridOutput', 'Label')));
              }),
              (u.default.prototype._addAccsOutput = function () {
                return (
                  this._accessibleOutputs ||
                    (this._accessibleOutputs = {
                      text: !1,
                      grid: !1,
                      textLabel: !1,
                      gridLabel: !1,
                    }),
                  this._accessibleOutputs.grid || this._accessibleOutputs.text
                );
              }),
              (u.default.prototype._createOutput = function (l, d) {
                var h,
                  o,
                  s,
                  n = this.canvas.id,
                  c =
                    (this.ingredients ||
                      (this.ingredients = {
                        shapes: {},
                        colors: {
                          background: 'white',
                          fill: 'white',
                          stroke: 'black',
                        },
                        pShapes: '',
                      }),
                    this.dummyDOM ||
                      (this.dummyDOM = document.getElementById(n).parentNode),
                    '');
                d === 'Fallback'
                  ? ((h = n + l),
                    this.dummyDOM.querySelector(
                      '#'.concat((o = n + 'accessibleOutput')),
                    ) ||
                      (this.dummyDOM.querySelector(
                        '#'.concat(n, '_Description'),
                      )
                        ? this.dummyDOM
                            .querySelector('#'.concat(n, '_Description'))
                            .insertAdjacentHTML(
                              'afterend',
                              '<div id="'.concat(
                                o,
                                '" role="region" aria-label="Canvas Outputs"></div>',
                              ),
                            )
                        : (this.dummyDOM.querySelector(
                            '#'.concat(n),
                          ).innerHTML = '<div id="'.concat(
                            o,
                            '" role="region" aria-label="Canvas Outputs"></div>',
                          ))))
                  : d === 'Label' &&
                    ((h = n + l + (c = d)),
                    this.dummyDOM.querySelector(
                      '#'.concat((o = n + 'accessibleOutput' + d)),
                    ) ||
                      (this.dummyDOM.querySelector('#'.concat(n, '_Label'))
                        ? this.dummyDOM.querySelector('#'.concat(n, '_Label'))
                        : this.dummyDOM.querySelector('#'.concat(n))
                      ).insertAdjacentHTML(
                        'afterend',
                        '<div id="'.concat(o, '"></div>'),
                      )),
                  (this._accessibleOutputs[h] = {}),
                  l === 'textOutput'
                    ? ((c = '#'.concat(n, 'gridOutput').concat(c)),
                      (s = '<div id="'
                        .concat(h, '">Text Output<div id="')
                        .concat(
                          h,
                          'Summary" aria-label="text output summary"><p id="',
                        )
                        .concat(h, '_summary"></p><ul id="')
                        .concat(h, '_list"></ul></div><table id="')
                        .concat(
                          h,
                          '_shapeDetails" summary="text output shape details"></table></div>',
                        )),
                      this.dummyDOM.querySelector(c)
                        ? this.dummyDOM
                            .querySelector(c)
                            .insertAdjacentHTML('beforebegin', s)
                        : (this.dummyDOM.querySelector(
                            '#'.concat(o),
                          ).innerHTML = s),
                      (this._accessibleOutputs[h].list =
                        this.dummyDOM.querySelector('#'.concat(h, '_list'))))
                    : l === 'gridOutput' &&
                      ((c = '#'.concat(n, 'textOutput').concat(c)),
                      (s = '<div id="'
                        .concat(h, '">Grid Output<p id="')
                        .concat(
                          h,
                          '_summary" aria-label="grid output summary"><table id="',
                        )
                        .concat(
                          h,
                          '_map" summary="grid output content"></table><ul id="',
                        )
                        .concat(
                          h,
                          '_shapeDetails" aria-label="grid output shape details"></ul></div>',
                        )),
                      this.dummyDOM.querySelector(c)
                        ? this.dummyDOM
                            .querySelector(c)
                            .insertAdjacentHTML('afterend', s)
                        : (this.dummyDOM.querySelector(
                            '#'.concat(o),
                          ).innerHTML = s),
                      (this._accessibleOutputs[h].map =
                        this.dummyDOM.querySelector('#'.concat(h, '_map')))),
                  (this._accessibleOutputs[h].shapeDetails =
                    this.dummyDOM.querySelector(
                      '#'.concat(h, '_shapeDetails'),
                    )),
                  (this._accessibleOutputs[h].summary =
                    this.dummyDOM.querySelector('#'.concat(h, '_summary')));
              }),
              (u.default.prototype._updateAccsOutput = function () {
                var l = this.canvas.id;
                JSON.stringify(this.ingredients.shapes) !==
                  this.ingredients.pShapes &&
                  ((this.ingredients.pShapes = JSON.stringify(
                    this.ingredients.shapes,
                  )),
                  this._accessibleOutputs.text &&
                    this._updateTextOutput(l + 'textOutput'),
                  this._accessibleOutputs.grid &&
                    this._updateGridOutput(l + 'gridOutput'),
                  this._accessibleOutputs.textLabel &&
                    this._updateTextOutput(l + 'textOutputLabel'),
                  this._accessibleOutputs.gridLabel &&
                    this._updateGridOutput(l + 'gridOutputLabel'));
              }),
              (u.default.prototype._accsBackground = function (l) {
                (this.ingredients.pShapes = JSON.stringify(
                  this.ingredients.shapes,
                )),
                  (this.ingredients.shapes = {}),
                  this.ingredients.colors.backgroundRGBA !== l &&
                    ((this.ingredients.colors.backgroundRGBA = l),
                    (this.ingredients.colors.background =
                      this._rgbColorName(l)));
              }),
              (u.default.prototype._accsCanvasColors = function (l, d) {
                l === 'fill'
                  ? this.ingredients.colors.fillRGBA !== d &&
                    ((this.ingredients.colors.fillRGBA = d),
                    (this.ingredients.colors.fill = this._rgbColorName(d)))
                  : l === 'stroke' &&
                    this.ingredients.colors.strokeRGBA !== d &&
                    ((this.ingredients.colors.strokeRGBA = d),
                    (this.ingredients.colors.stroke = this._rgbColorName(d)));
              }),
              (u.default.prototype._accsOutput = function (l, d) {
                l === 'ellipse' && d[2] === d[3]
                  ? (l = 'circle')
                  : l === 'rectangle' && d[2] === d[3] && (l = 'square');
                var h,
                  o,
                  s = {},
                  n = !0,
                  c = (function (g, _) {
                    var x;
                    return (
                      (g =
                        g === 'rectangle' ||
                        g === 'ellipse' ||
                        g === 'arc' ||
                        g === 'circle' ||
                        g === 'square'
                          ? ((x = Math.round(_[0] + _[2] / 2)),
                            Math.round(_[1] + _[3] / 2))
                          : g === 'triangle'
                          ? ((x = (_[0] + _[2] + _[4]) / 3),
                            (_[1] + _[3] + _[5]) / 3)
                          : g === 'quadrilateral'
                          ? ((x = (_[0] + _[2] + _[4] + _[6]) / 4),
                            (_[1] + _[3] + _[5] + _[7]) / 4)
                          : g === 'line'
                          ? ((x = (_[0] + _[2]) / 2), (_[1] + _[3]) / 2)
                          : ((x = _[0]), _[1])),
                      [x, g]
                    );
                  })(l, d);
                if (
                  (l === 'line'
                    ? ((s.color = this.ingredients.colors.stroke),
                      (s.length = Math.round(
                        this.dist(d[0], d[1], d[2], d[3]),
                      )),
                      (h = a([d[0], [1]], this.width, this.height)),
                      (o = a([d[2], [3]], this.width, this.height)),
                      (s.loc = r(c, this.width, this.height)),
                      (s.pos =
                        h === o
                          ? 'at '.concat(h)
                          : 'from '.concat(h, ' to ').concat(o)))
                    : (l === 'point'
                        ? (s.color = this.ingredients.colors.stroke)
                        : ((s.color = this.ingredients.colors.fill),
                          (s.area = (function (g, _, x, j) {
                            var v = 0;
                            {
                              var M, C, k, A, R, O, D;
                              g === 'arc'
                                ? ((M =
                                    (((_[5] - _[4]) % (2 * Math.PI)) +
                                      2 * Math.PI) %
                                    (2 * Math.PI)),
                                  (v = (M * _[2] * _[3]) / 8),
                                  (_[6] !== 'open' && _[6] !== 'chord') ||
                                    ((D = _[0]),
                                    (C = _[1]),
                                    (k =
                                      _[0] +
                                      (_[2] / 2) * Math.cos(_[4]).toFixed(2)),
                                    (A =
                                      _[1] +
                                      (_[3] / 2) * Math.sin(_[4]).toFixed(2)),
                                    (R =
                                      _[0] +
                                      (_[2] / 2) * Math.cos(_[5]).toFixed(2)),
                                    (O =
                                      _[1] +
                                      (_[3] / 2) * Math.sin(_[5]).toFixed(2)),
                                    (D =
                                      Math.abs(
                                        D * (A - O) + k * (O - C) + R * (C - A),
                                      ) / 2),
                                    M > Math.PI ? (v += D) : (v -= D)))
                                : g === 'ellipse' || g === 'circle'
                                ? (v = (((3.14 * _[2]) / 2) * _[3]) / 2)
                                : g === 'line' || g === 'point'
                                ? (v = 0)
                                : g === 'quadrilateral'
                                ? (v =
                                    Math.abs(
                                      (_[6] + _[0]) * (_[7] - _[1]) +
                                        (_[0] + _[2]) * (_[1] - _[3]) +
                                        (_[2] + _[4]) * (_[3] - _[5]) +
                                        (_[4] + _[6]) * (_[5] - _[7]),
                                    ) / 2)
                                : g === 'rectangle' || g === 'square'
                                ? (v = _[2] * _[3])
                                : g === 'triangle' &&
                                  (v =
                                    Math.abs(
                                      _[0] * (_[3] - _[5]) +
                                        _[2] * (_[5] - _[1]) +
                                        _[4] * (_[1] - _[3]),
                                    ) / 2);
                            }
                            return Math.round((100 * v) / (x * j));
                          })(l, d, this.width, this.height))),
                      (s.pos = a(c, this.width, this.height)),
                      (s.loc = r(c, this.width, this.height))),
                  this.ingredients.shapes[l])
                ) {
                  if (this.ingredients.shapes[l] !== [s]) {
                    for (var f in this.ingredients.shapes[l])
                      JSON.stringify(this.ingredients.shapes[l][f]) ===
                        JSON.stringify(s) && (n = !1);
                    n === !0 && this.ingredients.shapes[l].push(s);
                  }
                } else this.ingredients.shapes[l] = [s];
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 152,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.number.to-fixed': 171,
          },
        ],
        250: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.concat'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.prototype._updateTextOutput = function (u) {
                var a, r, l, d;
                this.dummyDOM.querySelector('#'.concat(u, '_summary')) &&
                  ((a = this._accessibleOutputs[u]),
                  (l = (function (h, o, s, n) {
                    return (
                      (s = 'Your output is a, '
                        .concat(s, ' by ')
                        .concat(n, ' pixels, ')
                        .concat(o, ' canvas containing the following')),
                      (s =
                        h === 1
                          ? ''.concat(s, ' shape:')
                          : ''.concat(s, ' ').concat(h, ' shapes:')),
                      s
                    );
                  })(
                    (r = (function (h, o) {
                      var s,
                        n = '',
                        c = 0;
                      for (s in o)
                        for (var f in o[s]) {
                          var g = '<li><a href="#'
                            .concat(h, 'shape')
                            .concat(c, '">')
                            .concat(o[s][f].color, ' ')
                            .concat(s, '</a>');
                          s === 'line'
                            ? (g += ', '
                                .concat(o[s][f].pos, ', ')
                                .concat(o[s][f].length, ' pixels long.</li>'))
                            : ((g += ', at '.concat(o[s][f].pos)),
                              s !== 'point' &&
                                (g += ', covering '.concat(
                                  o[s][f].area,
                                  '% of the canvas',
                                )),
                              (g += '.</li>')),
                            (n += g),
                            c++;
                        }
                      return { numShapes: c, listShapes: n };
                    })(u, this.ingredients.shapes)).numShapes,
                    this.ingredients.colors.background,
                    this.width,
                    this.height,
                  )),
                  (d = (function (h, o) {
                    var s,
                      n = '',
                      c = 0;
                    for (s in o)
                      for (var f in o[s]) {
                        var g = '<tr id="'
                          .concat(h, 'shape')
                          .concat(c, '"><th>')
                          .concat(o[s][f].color, ' ')
                          .concat(s, '</th>');
                        s === 'line'
                          ? (g += '<td>location = '
                              .concat(o[s][f].pos, '</td><td>length = ')
                              .concat(o[s][f].length, ' pixels</td></tr>'))
                          : ((g += '<td>location = '.concat(
                              o[s][f].pos,
                              '</td>',
                            )),
                            s !== 'point' &&
                              (g += '<td> area = '.concat(
                                o[s][f].area,
                                '%</td>',
                              )),
                            (g += '</tr>')),
                          (n += g),
                          c++;
                      }
                    return n;
                  })(u, this.ingredients.shapes)),
                  l !== a.summary.innerHTML && (a.summary.innerHTML = l),
                  r.listShapes !== a.list.innerHTML &&
                    (a.list.innerHTML = r.listShapes),
                  d !== a.shapeDetails.innerHTML &&
                    (a.shapeDetails.innerHTML = d),
                  (this._accessibleOutputs[u] = a));
              }),
              (t = t.default),
              (y.default = t);
          },
          { '../core/main': 267, 'core-js/modules/es.array.concat': 149 },
        ],
        251: [
          function (t, b, y) {
            var u = (u = t('./core/main')) && u.__esModule ? u : { default: u };
            t('./core/constants'),
              t('./core/environment'),
              t('./core/friendly_errors/stacktrace'),
              t('./core/friendly_errors/validate_params'),
              t('./core/friendly_errors/file_errors'),
              t('./core/friendly_errors/fes_core'),
              t('./core/friendly_errors/sketch_reader'),
              t('./core/helpers'),
              t('./core/legacy'),
              t('./core/preload'),
              t('./core/p5.Element'),
              t('./core/p5.Graphics'),
              t('./core/p5.Renderer'),
              t('./core/p5.Renderer2D'),
              t('./core/rendering'),
              t('./core/shim'),
              t('./core/structure'),
              t('./core/transform'),
              t('./core/shape/2d_primitives'),
              t('./core/shape/attributes'),
              t('./core/shape/curves'),
              t('./core/shape/vertex'),
              t('./accessibility/outputs'),
              t('./accessibility/textOutput'),
              t('./accessibility/gridOutput'),
              t('./accessibility/color_namer'),
              t('./color/color_conversion'),
              t('./color/creating_reading'),
              t('./color/p5.Color'),
              t('./color/setting'),
              t('./data/p5.TypedDict'),
              t('./data/local_storage.js'),
              t('./dom/dom'),
              t('./accessibility/describe'),
              t('./events/acceleration'),
              t('./events/keyboard'),
              t('./events/mouse'),
              t('./events/touch'),
              t('./image/filters'),
              t('./image/image'),
              t('./image/loading_displaying'),
              t('./image/p5.Image'),
              t('./image/pixels'),
              t('./io/files'),
              t('./io/p5.Table'),
              t('./io/p5.TableRow'),
              t('./io/p5.XML'),
              t('./math/calculation'),
              t('./math/math'),
              t('./math/noise'),
              t('./math/p5.Vector'),
              t('./math/random'),
              t('./math/trigonometry'),
              t('./typography/attributes'),
              t('./typography/loading_displaying'),
              t('./typography/p5.Font'),
              t('./utilities/array_functions'),
              t('./utilities/conversion'),
              t('./utilities/string_functions'),
              t('./utilities/time_date'),
              t('./webgl/3d_primitives'),
              t('./webgl/interaction'),
              t('./webgl/light'),
              t('./webgl/loading'),
              t('./webgl/material'),
              t('./webgl/p5.Camera'),
              t('./webgl/p5.Geometry'),
              t('./webgl/p5.Matrix'),
              t('./webgl/p5.RendererGL.Immediate'),
              t('./webgl/p5.RendererGL'),
              t('./webgl/p5.RendererGL.Retained'),
              t('./webgl/p5.Shader'),
              t('./webgl/p5.RenderBuffer'),
              t('./webgl/p5.Texture'),
              t('./webgl/text'),
              t('./core/init'),
              (b.exports = u.default);
          },
          {
            './accessibility/color_namer': 246,
            './accessibility/describe': 247,
            './accessibility/gridOutput': 248,
            './accessibility/outputs': 249,
            './accessibility/textOutput': 250,
            './color/color_conversion': 252,
            './color/creating_reading': 253,
            './color/p5.Color': 254,
            './color/setting': 255,
            './core/constants': 256,
            './core/environment': 257,
            './core/friendly_errors/fes_core': 258,
            './core/friendly_errors/file_errors': 259,
            './core/friendly_errors/sketch_reader': 260,
            './core/friendly_errors/stacktrace': 261,
            './core/friendly_errors/validate_params': 262,
            './core/helpers': 263,
            './core/init': 264,
            './core/legacy': 266,
            './core/main': 267,
            './core/p5.Element': 268,
            './core/p5.Graphics': 269,
            './core/p5.Renderer': 270,
            './core/p5.Renderer2D': 271,
            './core/preload': 272,
            './core/rendering': 273,
            './core/shape/2d_primitives': 274,
            './core/shape/attributes': 275,
            './core/shape/curves': 276,
            './core/shape/vertex': 277,
            './core/shim': 278,
            './core/structure': 279,
            './core/transform': 280,
            './data/local_storage.js': 281,
            './data/p5.TypedDict': 282,
            './dom/dom': 283,
            './events/acceleration': 284,
            './events/keyboard': 285,
            './events/mouse': 286,
            './events/touch': 287,
            './image/filters': 288,
            './image/image': 289,
            './image/loading_displaying': 290,
            './image/p5.Image': 291,
            './image/pixels': 292,
            './io/files': 293,
            './io/p5.Table': 294,
            './io/p5.TableRow': 295,
            './io/p5.XML': 296,
            './math/calculation': 297,
            './math/math': 298,
            './math/noise': 299,
            './math/p5.Vector': 300,
            './math/random': 301,
            './math/trigonometry': 302,
            './typography/attributes': 303,
            './typography/loading_displaying': 304,
            './typography/p5.Font': 305,
            './utilities/array_functions': 306,
            './utilities/conversion': 307,
            './utilities/string_functions': 308,
            './utilities/time_date': 309,
            './webgl/3d_primitives': 310,
            './webgl/interaction': 311,
            './webgl/light': 312,
            './webgl/loading': 313,
            './webgl/material': 314,
            './webgl/p5.Camera': 315,
            './webgl/p5.Geometry': 316,
            './webgl/p5.Matrix': 317,
            './webgl/p5.RenderBuffer': 318,
            './webgl/p5.RendererGL': 321,
            './webgl/p5.RendererGL.Immediate': 319,
            './webgl/p5.RendererGL.Retained': 320,
            './webgl/p5.Shader': 322,
            './webgl/p5.Texture': 323,
            './webgl/text': 324,
          },
        ],
        252: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.ColorConversion = {}),
              (t.default.ColorConversion._hsbaToHSLA = function (u) {
                var a = u[0],
                  r = u[1],
                  l = u[2],
                  d = ((2 - r) * l) / 2;
                return (
                  d != 0 &&
                    (d == 1
                      ? (r = 0)
                      : d < 0.5
                      ? (r /= 2 - r)
                      : (r = (r * l) / (2 - 2 * d))),
                  [a, r, d, u[3]]
                );
              }),
              (t.default.ColorConversion._hsbaToRGBA = function (u) {
                var a,
                  r,
                  l,
                  d,
                  h,
                  o = 6 * u[0],
                  s = u[1],
                  n = u[2];
                return s === 0
                  ? [n, n, n, u[3]]
                  : ((r = n * (1 - s)),
                    (l = n * (1 - s * (o - (a = Math.floor(o))))),
                    (s = n * (1 - s * (1 + a - o))),
                    (o =
                      a === 1
                        ? ((d = l), (h = n), r)
                        : a === 2
                        ? ((d = r), (h = n), s)
                        : a === 3
                        ? ((d = r), (h = l), n)
                        : a === 4
                        ? ((d = s), (h = r), n)
                        : a === 5
                        ? ((d = n), (h = r), l)
                        : ((d = n), (h = s), r)),
                    [d, h, o, u[3]]);
              }),
              (t.default.ColorConversion._hslaToHSBA = function (u) {
                var a = u[0],
                  r = u[1],
                  l = u[2],
                  d = l < 0.5 ? (1 + r) * l : l + r - l * r;
                return [a, (r = (2 * (d - l)) / d), d, u[3]];
              }),
              (t.default.ColorConversion._hslaToRGBA = function (u) {
                var a,
                  r = 6 * u[0],
                  l = u[1],
                  d = u[2];
                return l === 0
                  ? [d, d, d, u[3]]
                  : [
                      (a = function (h, o, s) {
                        return (
                          h < 0 ? (h += 6) : 6 <= h && (h -= 6),
                          h < 1
                            ? o + (s - o) * h
                            : h < 3
                            ? s
                            : h < 4
                            ? o + (s - o) * (4 - h)
                            : o
                        );
                      })(
                        2 + r,
                        (l =
                          2 * d - (d = d < 0.5 ? (1 + l) * d : d + l - d * l)),
                        d,
                      ),
                      a(r, l, d),
                      a(r - 2, l, d),
                      u[3],
                    ];
              }),
              (t.default.ColorConversion._rgbaToHSBA = function (u) {
                var a,
                  r,
                  l = u[0],
                  d = u[1],
                  h = u[2],
                  o = Math.max(l, d, h),
                  s = o - Math.min(l, d, h);
                return (
                  s == 0
                    ? (r = a = 0)
                    : ((r = s / o),
                      l === o
                        ? (a = (d - h) / s)
                        : d === o
                        ? (a = 2 + (h - l) / s)
                        : h === o && (a = 4 + (l - d) / s),
                      a < 0 ? (a += 6) : 6 <= a && (a -= 6)),
                  [a / 6, r, o, u[3]]
                );
              }),
              (t.default.ColorConversion._rgbaToHSLA = function (u) {
                var a,
                  r,
                  l = u[0],
                  d = u[1],
                  h = u[2],
                  o = Math.max(l, d, h),
                  n = Math.min(l, d, h),
                  s = o + n,
                  n = o - n;
                return (
                  n == 0
                    ? (r = a = 0)
                    : ((r = s < 1 ? n / s : n / (2 - s)),
                      l === o
                        ? (a = (d - h) / n)
                        : d === o
                        ? (a = 2 + (h - l) / n)
                        : h === o && (a = 4 + (l - d) / n),
                      a < 0 ? (a += 6) : 6 <= a && (a -= 6)),
                  [a / 6, r, s / 2, u[3]]
                );
              }),
              (t = t.default.ColorConversion),
              (y.default = t);
          },
          { '../core/main': 267 },
        ],
        253: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.map'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (h = t('../core/main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../core/constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            t('./p5.Color'),
              t('../core/friendly_errors/validate_params'),
              t('../core/friendly_errors/file_errors'),
              t('../core/friendly_errors/fes_core'),
              (r.default.prototype.alpha = function (o) {
                return (
                  r.default._validateParameters('alpha', arguments),
                  this.color(o)._getAlpha()
                );
              }),
              (r.default.prototype.blue = function (o) {
                return (
                  r.default._validateParameters('blue', arguments),
                  this.color(o)._getBlue()
                );
              }),
              (r.default.prototype.brightness = function (o) {
                return (
                  r.default._validateParameters('brightness', arguments),
                  this.color(o)._getBrightness()
                );
              }),
              (r.default.prototype.color = function () {
                var o;
                return (
                  r.default._validateParameters('color', arguments),
                  arguments[0] instanceof r.default.Color
                    ? arguments[0]
                    : ((o =
                        arguments[0] instanceof Array
                          ? arguments[0]
                          : arguments),
                      new r.default.Color(this, o))
                );
              }),
              (r.default.prototype.green = function (o) {
                return (
                  r.default._validateParameters('green', arguments),
                  this.color(o)._getGreen()
                );
              }),
              (r.default.prototype.hue = function (o) {
                return (
                  r.default._validateParameters('hue', arguments),
                  this.color(o)._getHue()
                );
              }),
              (r.default.prototype.lerpColor = function (o, s, n) {
                r.default._validateParameters('lerpColor', arguments);
                var c,
                  f,
                  g,
                  _ = this._colorMode,
                  x = this._colorMaxes;
                if (_ === l.RGB)
                  (f = o.levels.map(function (j) {
                    return j / 255;
                  })),
                    (g = s.levels.map(function (j) {
                      return j / 255;
                    }));
                else if (_ === l.HSB)
                  o._getBrightness(),
                    s._getBrightness(),
                    (f = o.hsba),
                    (g = s.hsba);
                else {
                  if (_ !== l.HSL)
                    throw new Error(
                      ''.concat(_, 'cannot be used for interpolation.'),
                    );
                  o._getLightness(),
                    s._getLightness(),
                    (f = o.hsla),
                    (g = s.hsla);
                }
                return (
                  (n = Math.max(Math.min(n, 1), 0)),
                  this.lerp === void 0 &&
                    (this.lerp = function (j, v, M) {
                      return M * (v - j) + j;
                    }),
                  (o = this.lerp(f[0], g[0], n)),
                  (s = this.lerp(f[1], g[1], n)),
                  (c = this.lerp(f[2], g[2], n)),
                  (f = this.lerp(f[3], g[3], n)),
                  (o *= x[_][0]),
                  (s *= x[_][1]),
                  (c *= x[_][2]),
                  (f *= x[_][3]),
                  this.color(o, s, c, f)
                );
              }),
              (r.default.prototype.lightness = function (o) {
                return (
                  r.default._validateParameters('lightness', arguments),
                  this.color(o)._getLightness()
                );
              }),
              (r.default.prototype.red = function (o) {
                return (
                  r.default._validateParameters('red', arguments),
                  this.color(o)._getRed()
                );
              }),
              (r.default.prototype.saturation = function (o) {
                return (
                  r.default._validateParameters('saturation', arguments),
                  this.color(o)._getSaturation()
                );
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../core/constants': 256,
            '../core/friendly_errors/fes_core': 258,
            '../core/friendly_errors/file_errors': 259,
            '../core/friendly_errors/validate_params': 262,
            '../core/main': 267,
            './p5.Color': 254,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        254: [
          function (n, b, y) {
            function u(x) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (j) {
                      return typeof j;
                    }
                  : function (j) {
                      return j &&
                        typeof Symbol == 'function' &&
                        j.constructor === Symbol &&
                        j !== Symbol.prototype
                        ? 'symbol'
                        : typeof j;
                    })(x);
            }
            function a(x) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (j) {
                      return u(j);
                    }
                  : function (j) {
                      return j &&
                        typeof Symbol == 'function' &&
                        j.constructor === Symbol &&
                        j !== Symbol.prototype
                        ? 'symbol'
                        : u(j);
                    })(x);
            }
            n('core-js/modules/es.symbol'),
              n('core-js/modules/es.symbol.description'),
              n('core-js/modules/es.symbol.iterator'),
              n('core-js/modules/es.array.iterator'),
              n('core-js/modules/es.array.join'),
              n('core-js/modules/es.array.map'),
              n('core-js/modules/es.array.slice'),
              n('core-js/modules/es.object.get-own-property-descriptor'),
              n('core-js/modules/es.object.to-string'),
              n('core-js/modules/es.regexp.constructor'),
              n('core-js/modules/es.regexp.exec'),
              n('core-js/modules/es.regexp.to-string'),
              n('core-js/modules/es.string.iterator'),
              n('core-js/modules/es.string.trim'),
              n('core-js/modules/es.weak-map'),
              n('core-js/modules/web.dom-collections.iterator'),
              n('core-js/modules/es.array.join'),
              n('core-js/modules/es.array.map'),
              n('core-js/modules/es.array.slice'),
              n('core-js/modules/es.object.to-string'),
              n('core-js/modules/es.regexp.constructor'),
              n('core-js/modules/es.regexp.exec'),
              n('core-js/modules/es.regexp.to-string'),
              n('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = o(n('../core/main')),
              l = (function (x) {
                if (x && x.__esModule) return x;
                if (x === null || (a(x) !== 'object' && typeof x != 'function'))
                  return { default: x };
                var j = h();
                if (j && j.has(x)) return j.get(x);
                var v,
                  M = {},
                  C = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (v in x) {
                  var k;
                  Object.prototype.hasOwnProperty.call(x, v) &&
                    ((k = C ? Object.getOwnPropertyDescriptor(x, v) : null) &&
                    (k.get || k.set)
                      ? Object.defineProperty(M, v, k)
                      : (M[v] = x[v]));
                }
                return (M.default = x), j && j.set(x, M), M;
              })(n('../core/constants')),
              d = o(n('./color_conversion'));
            function h() {
              var x;
              return typeof WeakMap != 'function'
                ? null
                : ((x = new WeakMap()),
                  (h = function () {
                    return x;
                  }),
                  x);
            }
            function o(x) {
              return x && x.__esModule ? x : { default: x };
            }
            (r.default.Color = function (x, j) {
              if (
                (this._storeModeAndMaxes(x._colorMode, x._colorMaxes),
                this.mode !== l.RGB &&
                  this.mode !== l.HSL &&
                  this.mode !== l.HSB)
              )
                throw new Error(
                  ''.concat(this.mode, ' is an invalid colorMode.'),
                );
              return (
                (this._array = r.default.Color._parseInputs.apply(this, j)),
                this._calculateLevels(),
                this
              );
            }),
              (r.default.Color.prototype.toString = function (x) {
                var j = this.levels,
                  v = this._array,
                  M = v[3];
                switch (x) {
                  case '#rrggbb':
                    return '#'.concat(
                      j[0] < 16
                        ? '0'.concat(j[0].toString(16))
                        : j[0].toString(16),
                      j[1] < 16
                        ? '0'.concat(j[1].toString(16))
                        : j[1].toString(16),
                      j[2] < 16
                        ? '0'.concat(j[2].toString(16))
                        : j[2].toString(16),
                    );
                  case '#rrggbbaa':
                    return '#'.concat(
                      j[0] < 16
                        ? '0'.concat(j[0].toString(16))
                        : j[0].toString(16),
                      j[1] < 16
                        ? '0'.concat(j[1].toString(16))
                        : j[1].toString(16),
                      j[2] < 16
                        ? '0'.concat(j[2].toString(16))
                        : j[2].toString(16),
                      j[3] < 16
                        ? '0'.concat(j[3].toString(16))
                        : j[3].toString(16),
                    );
                  case '#rgb':
                    return '#'.concat(
                      Math.round(15 * v[0]).toString(16),
                      Math.round(15 * v[1]).toString(16),
                      Math.round(15 * v[2]).toString(16),
                    );
                  case '#rgba':
                    return '#'.concat(
                      Math.round(15 * v[0]).toString(16),
                      Math.round(15 * v[1]).toString(16),
                      Math.round(15 * v[2]).toString(16),
                      Math.round(15 * v[3]).toString(16),
                    );
                  case 'rgb':
                    return 'rgb('.concat(j[0], ', ', j[1], ', ', j[2], ')');
                  case 'rgb%':
                    return 'rgb('.concat(
                      (100 * v[0]).toPrecision(3),
                      '%, ',
                      (100 * v[1]).toPrecision(3),
                      '%, ',
                      (100 * v[2]).toPrecision(3),
                      '%)',
                    );
                  case 'rgba%':
                    return 'rgba('.concat(
                      (100 * v[0]).toPrecision(3),
                      '%, ',
                      (100 * v[1]).toPrecision(3),
                      '%, ',
                      (100 * v[2]).toPrecision(3),
                      '%, ',
                      (100 * v[3]).toPrecision(3),
                      '%)',
                    );
                  case 'hsb':
                  case 'hsv':
                    return (
                      this.hsba ||
                        (this.hsba = d.default._rgbaToHSBA(this._array)),
                      'hsb('.concat(
                        this.hsba[0] * this.maxes[l.HSB][0],
                        ', ',
                        this.hsba[1] * this.maxes[l.HSB][1],
                        ', ',
                        this.hsba[2] * this.maxes[l.HSB][2],
                        ')',
                      )
                    );
                  case 'hsb%':
                  case 'hsv%':
                    return (
                      this.hsba ||
                        (this.hsba = d.default._rgbaToHSBA(this._array)),
                      'hsb('.concat(
                        (100 * this.hsba[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[2]).toPrecision(3),
                        '%)',
                      )
                    );
                  case 'hsba':
                  case 'hsva':
                    return (
                      this.hsba ||
                        (this.hsba = d.default._rgbaToHSBA(this._array)),
                      'hsba('.concat(
                        this.hsba[0] * this.maxes[l.HSB][0],
                        ', ',
                        this.hsba[1] * this.maxes[l.HSB][1],
                        ', ',
                        this.hsba[2] * this.maxes[l.HSB][2],
                        ', ',
                        M,
                        ')',
                      )
                    );
                  case 'hsba%':
                  case 'hsva%':
                    return (
                      this.hsba ||
                        (this.hsba = d.default._rgbaToHSBA(this._array)),
                      'hsba('.concat(
                        (100 * this.hsba[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsba[2]).toPrecision(3),
                        '%, ',
                        (100 * M).toPrecision(3),
                        '%)',
                      )
                    );
                  case 'hsl':
                    return (
                      this.hsla ||
                        (this.hsla = d.default._rgbaToHSLA(this._array)),
                      'hsl('.concat(
                        this.hsla[0] * this.maxes[l.HSL][0],
                        ', ',
                        this.hsla[1] * this.maxes[l.HSL][1],
                        ', ',
                        this.hsla[2] * this.maxes[l.HSL][2],
                        ')',
                      )
                    );
                  case 'hsl%':
                    return (
                      this.hsla ||
                        (this.hsla = d.default._rgbaToHSLA(this._array)),
                      'hsl('.concat(
                        (100 * this.hsla[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[2]).toPrecision(3),
                        '%)',
                      )
                    );
                  case 'hsla':
                    return (
                      this.hsla ||
                        (this.hsla = d.default._rgbaToHSLA(this._array)),
                      'hsla('.concat(
                        this.hsla[0] * this.maxes[l.HSL][0],
                        ', ',
                        this.hsla[1] * this.maxes[l.HSL][1],
                        ', ',
                        this.hsla[2] * this.maxes[l.HSL][2],
                        ', ',
                        M,
                        ')',
                      )
                    );
                  case 'hsla%':
                    return (
                      this.hsla ||
                        (this.hsla = d.default._rgbaToHSLA(this._array)),
                      'hsl('.concat(
                        (100 * this.hsla[0]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[1]).toPrecision(3),
                        '%, ',
                        (100 * this.hsla[2]).toPrecision(3),
                        '%, ',
                        (100 * M).toPrecision(3),
                        '%)',
                      )
                    );
                  default:
                    return 'rgba('.concat(
                      j[0],
                      ',',
                      j[1],
                      ',',
                      j[2],
                      ',',
                      M,
                      ')',
                    );
                }
              }),
              (r.default.Color.prototype.setRed = function (x) {
                (this._array[0] = x / this.maxes[l.RGB][0]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype.setGreen = function (x) {
                (this._array[1] = x / this.maxes[l.RGB][1]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype.setBlue = function (x) {
                (this._array[2] = x / this.maxes[l.RGB][2]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype.setAlpha = function (x) {
                (this._array[3] = x / this.maxes[this.mode][3]),
                  this._calculateLevels();
              }),
              (r.default.Color.prototype._calculateLevels = function () {
                for (
                  var x = this._array,
                    j = (this.levels = new Array(x.length)),
                    v = x.length - 1;
                  0 <= v;
                  --v
                )
                  j[v] = Math.round(255 * x[v]);
                (this.hsla = null), (this.hsba = null);
              }),
              (r.default.Color.prototype._getAlpha = function () {
                return this._array[3] * this.maxes[this.mode][3];
              }),
              (r.default.Color.prototype._storeModeAndMaxes = function (x, j) {
                (this.mode = x), (this.maxes = j);
              }),
              (r.default.Color.prototype._getMode = function () {
                return this.mode;
              }),
              (r.default.Color.prototype._getMaxes = function () {
                return this.maxes;
              }),
              (r.default.Color.prototype._getBlue = function () {
                return this._array[2] * this.maxes[l.RGB][2];
              }),
              (r.default.Color.prototype._getBrightness = function () {
                return (
                  this.hsba || (this.hsba = d.default._rgbaToHSBA(this._array)),
                  this.hsba[2] * this.maxes[l.HSB][2]
                );
              }),
              (r.default.Color.prototype._getGreen = function () {
                return this._array[1] * this.maxes[l.RGB][1];
              }),
              (r.default.Color.prototype._getHue = function () {
                return this.mode === l.HSB
                  ? (this.hsba ||
                      (this.hsba = d.default._rgbaToHSBA(this._array)),
                    this.hsba[0] * this.maxes[l.HSB][0])
                  : (this.hsla ||
                      (this.hsla = d.default._rgbaToHSLA(this._array)),
                    this.hsla[0] * this.maxes[l.HSL][0]);
              }),
              (r.default.Color.prototype._getLightness = function () {
                return (
                  this.hsla || (this.hsla = d.default._rgbaToHSLA(this._array)),
                  this.hsla[2] * this.maxes[l.HSL][2]
                );
              }),
              (r.default.Color.prototype._getRed = function () {
                return this._array[0] * this.maxes[l.RGB][0];
              }),
              (r.default.Color.prototype._getSaturation = function () {
                return this.mode === l.HSB
                  ? (this.hsba ||
                      (this.hsba = d.default._rgbaToHSBA(this._array)),
                    this.hsba[1] * this.maxes[l.HSB][1])
                  : (this.hsla ||
                      (this.hsla = d.default._rgbaToHSLA(this._array)),
                    this.hsla[1] * this.maxes[l.HSL][1]);
              });
            var s = {
                aliceblue: '#f0f8ff',
                antiquewhite: '#faebd7',
                aqua: '#00ffff',
                aquamarine: '#7fffd4',
                azure: '#f0ffff',
                beige: '#f5f5dc',
                bisque: '#ffe4c4',
                black: '#000000',
                blanchedalmond: '#ffebcd',
                blue: '#0000ff',
                blueviolet: '#8a2be2',
                brown: '#a52a2a',
                burlywood: '#deb887',
                cadetblue: '#5f9ea0',
                chartreuse: '#7fff00',
                chocolate: '#d2691e',
                coral: '#ff7f50',
                cornflowerblue: '#6495ed',
                cornsilk: '#fff8dc',
                crimson: '#dc143c',
                cyan: '#00ffff',
                darkblue: '#00008b',
                darkcyan: '#008b8b',
                darkgoldenrod: '#b8860b',
                darkgray: '#a9a9a9',
                darkgreen: '#006400',
                darkgrey: '#a9a9a9',
                darkkhaki: '#bdb76b',
                darkmagenta: '#8b008b',
                darkolivegreen: '#556b2f',
                darkorange: '#ff8c00',
                darkorchid: '#9932cc',
                darkred: '#8b0000',
                darksalmon: '#e9967a',
                darkseagreen: '#8fbc8f',
                darkslateblue: '#483d8b',
                darkslategray: '#2f4f4f',
                darkslategrey: '#2f4f4f',
                darkturquoise: '#00ced1',
                darkviolet: '#9400d3',
                deeppink: '#ff1493',
                deepskyblue: '#00bfff',
                dimgray: '#696969',
                dimgrey: '#696969',
                dodgerblue: '#1e90ff',
                firebrick: '#b22222',
                floralwhite: '#fffaf0',
                forestgreen: '#228b22',
                fuchsia: '#ff00ff',
                gainsboro: '#dcdcdc',
                ghostwhite: '#f8f8ff',
                gold: '#ffd700',
                goldenrod: '#daa520',
                gray: '#808080',
                green: '#008000',
                greenyellow: '#adff2f',
                grey: '#808080',
                honeydew: '#f0fff0',
                hotpink: '#ff69b4',
                indianred: '#cd5c5c',
                indigo: '#4b0082',
                ivory: '#fffff0',
                khaki: '#f0e68c',
                lavender: '#e6e6fa',
                lavenderblush: '#fff0f5',
                lawngreen: '#7cfc00',
                lemonchiffon: '#fffacd',
                lightblue: '#add8e6',
                lightcoral: '#f08080',
                lightcyan: '#e0ffff',
                lightgoldenrodyellow: '#fafad2',
                lightgray: '#d3d3d3',
                lightgreen: '#90ee90',
                lightgrey: '#d3d3d3',
                lightpink: '#ffb6c1',
                lightsalmon: '#ffa07a',
                lightseagreen: '#20b2aa',
                lightskyblue: '#87cefa',
                lightslategray: '#778899',
                lightslategrey: '#778899',
                lightsteelblue: '#b0c4de',
                lightyellow: '#ffffe0',
                lime: '#00ff00',
                limegreen: '#32cd32',
                linen: '#faf0e6',
                magenta: '#ff00ff',
                maroon: '#800000',
                mediumaquamarine: '#66cdaa',
                mediumblue: '#0000cd',
                mediumorchid: '#ba55d3',
                mediumpurple: '#9370db',
                mediumseagreen: '#3cb371',
                mediumslateblue: '#7b68ee',
                mediumspringgreen: '#00fa9a',
                mediumturquoise: '#48d1cc',
                mediumvioletred: '#c71585',
                midnightblue: '#191970',
                mintcream: '#f5fffa',
                mistyrose: '#ffe4e1',
                moccasin: '#ffe4b5',
                navajowhite: '#ffdead',
                navy: '#000080',
                oldlace: '#fdf5e6',
                olive: '#808000',
                olivedrab: '#6b8e23',
                orange: '#ffa500',
                orangered: '#ff4500',
                orchid: '#da70d6',
                palegoldenrod: '#eee8aa',
                palegreen: '#98fb98',
                paleturquoise: '#afeeee',
                palevioletred: '#db7093',
                papayawhip: '#ffefd5',
                peachpuff: '#ffdab9',
                peru: '#cd853f',
                pink: '#ffc0cb',
                plum: '#dda0dd',
                powderblue: '#b0e0e6',
                purple: '#800080',
                rebeccapurple: '#663399',
                red: '#ff0000',
                rosybrown: '#bc8f8f',
                royalblue: '#4169e1',
                saddlebrown: '#8b4513',
                salmon: '#fa8072',
                sandybrown: '#f4a460',
                seagreen: '#2e8b57',
                seashell: '#fff5ee',
                sienna: '#a0522d',
                silver: '#c0c0c0',
                skyblue: '#87ceeb',
                slateblue: '#6a5acd',
                slategray: '#708090',
                slategrey: '#708090',
                snow: '#fffafa',
                springgreen: '#00ff7f',
                steelblue: '#4682b4',
                tan: '#d2b48c',
                teal: '#008080',
                thistle: '#d8bfd8',
                tomato: '#ff6347',
                turquoise: '#40e0d0',
                violet: '#ee82ee',
                wheat: '#f5deb3',
                white: '#ffffff',
                whitesmoke: '#f5f5f5',
                yellow: '#ffff00',
                yellowgreen: '#9acd32',
              },
              n = /\s*/,
              _ = /(\d{1,3})/,
              c = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/,
              f = new RegExp(''.concat(c.source, '%')),
              g = {
                HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
                RGB: new RegExp(
                  [
                    '^rgb\\(',
                    _.source,
                    ',',
                    _.source,
                    ',',
                    _.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                RGB_PERCENT: new RegExp(
                  [
                    '^rgb\\(',
                    f.source,
                    ',',
                    f.source,
                    ',',
                    f.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                RGBA: new RegExp(
                  [
                    '^rgba\\(',
                    _.source,
                    ',',
                    _.source,
                    ',',
                    _.source,
                    ',',
                    c.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                RGBA_PERCENT: new RegExp(
                  [
                    '^rgba\\(',
                    f.source,
                    ',',
                    f.source,
                    ',',
                    f.source,
                    ',',
                    c.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSL: new RegExp(
                  [
                    '^hsl\\(',
                    _.source,
                    ',',
                    f.source,
                    ',',
                    f.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSLA: new RegExp(
                  [
                    '^hsla\\(',
                    _.source,
                    ',',
                    f.source,
                    ',',
                    f.source,
                    ',',
                    c.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSB: new RegExp(
                  [
                    '^hsb\\(',
                    _.source,
                    ',',
                    f.source,
                    ',',
                    f.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
                HSBA: new RegExp(
                  [
                    '^hsba\\(',
                    _.source,
                    ',',
                    f.source,
                    ',',
                    f.source,
                    ',',
                    c.source,
                    '\\)$',
                  ].join(n.source),
                  'i',
                ),
              },
              _ =
                ((r.default.Color._parseInputs = function (x, j, v, M) {
                  var C,
                    k = arguments.length,
                    A = this.mode,
                    R = this.maxes[A],
                    O = [];
                  if (3 <= k) {
                    for (
                      O[0] = x / R[0],
                        O[1] = j / R[1],
                        O[2] = v / R[2],
                        O[3] = typeof M == 'number' ? M / R[3] : 1,
                        C = O.length - 1;
                      0 <= C;
                      --C
                    ) {
                      var D = O[C];
                      D < 0 ? (O[C] = 0) : 1 < D && (O[C] = 1);
                    }
                    return A === l.HSL
                      ? d.default._hslaToRGBA(O)
                      : A === l.HSB
                      ? d.default._hsbaToRGBA(O)
                      : O;
                  }
                  if (k === 1 && typeof x == 'string') {
                    if (((v = x.trim().toLowerCase()), s[v]))
                      return r.default.Color._parseInputs.call(this, s[v]);
                    if (g.HEX3.test(v))
                      return (
                        ((O = g.HEX3.exec(v)
                          .slice(1)
                          .map(function (N) {
                            return parseInt(N + N, 16) / 255;
                          }))[3] = 1),
                        O
                      );
                    if (g.HEX6.test(v))
                      return (
                        ((O = g.HEX6.exec(v)
                          .slice(1)
                          .map(function (N) {
                            return parseInt(N, 16) / 255;
                          }))[3] = 1),
                        O
                      );
                    if (g.HEX4.test(v))
                      return (O = g.HEX4.exec(v)
                        .slice(1)
                        .map(function (N) {
                          return parseInt(N + N, 16) / 255;
                        }));
                    if (g.HEX8.test(v))
                      return (O = g.HEX8.exec(v)
                        .slice(1)
                        .map(function (N) {
                          return parseInt(N, 16) / 255;
                        }));
                    if (g.RGB.test(v))
                      return (
                        ((O = g.RGB.exec(v)
                          .slice(1)
                          .map(function (N) {
                            return N / 255;
                          }))[3] = 1),
                        O
                      );
                    if (g.RGB_PERCENT.test(v))
                      return (
                        ((O = g.RGB_PERCENT.exec(v)
                          .slice(1)
                          .map(function (N) {
                            return parseFloat(N) / 100;
                          }))[3] = 1),
                        O
                      );
                    if (g.RGBA.test(v))
                      return (O = g.RGBA.exec(v)
                        .slice(1)
                        .map(function (N, U) {
                          return U === 3 ? parseFloat(N) : N / 255;
                        }));
                    if (g.RGBA_PERCENT.test(v))
                      return (O = g.RGBA_PERCENT.exec(v)
                        .slice(1)
                        .map(function (N, U) {
                          return U === 3 ? parseFloat(N) : parseFloat(N) / 100;
                        }));
                    if (
                      (g.HSL.test(v)
                        ? ((O = g.HSL.exec(v)
                            .slice(1)
                            .map(function (N, U) {
                              return U === 0
                                ? parseInt(N, 10) / 360
                                : parseInt(N, 10) / 100;
                            }))[3] = 1)
                        : g.HSLA.test(v) &&
                          (O = g.HSLA.exec(v)
                            .slice(1)
                            .map(function (N, U) {
                              return U === 0
                                ? parseInt(N, 10) / 360
                                : U === 3
                                ? parseFloat(N)
                                : parseInt(N, 10) / 100;
                            })),
                      (O = O.map(function (N) {
                        return Math.max(Math.min(N, 1), 0);
                      })).length)
                    )
                      return d.default._hslaToRGBA(O);
                    if (
                      (g.HSB.test(v)
                        ? ((O = g.HSB.exec(v)
                            .slice(1)
                            .map(function (N, U) {
                              return U === 0
                                ? parseInt(N, 10) / 360
                                : parseInt(N, 10) / 100;
                            }))[3] = 1)
                        : g.HSBA.test(v) &&
                          (O = g.HSBA.exec(v)
                            .slice(1)
                            .map(function (N, U) {
                              return U === 0
                                ? parseInt(N, 10) / 360
                                : U === 3
                                ? parseFloat(N)
                                : parseInt(N, 10) / 100;
                            })),
                      O.length)
                    ) {
                      for (C = O.length - 1; 0 <= C; --C)
                        O[C] = Math.max(Math.min(O[C], 1), 0);
                      return d.default._hsbaToRGBA(O);
                    }
                    O = [1, 1, 1, 1];
                  } else {
                    if ((k !== 1 && k !== 2) || typeof x != 'number')
                      throw new Error(
                        ''.concat(
                          arguments,
                          'is not a valid color representation.',
                        ),
                      );
                    (O[0] = x / R[2]),
                      (O[1] = x / R[2]),
                      (O[2] = x / R[2]),
                      (O[3] = typeof j == 'number' ? j / R[3] : 1),
                      (O = O.map(function (N) {
                        return Math.max(Math.min(N, 1), 0);
                      }));
                  }
                  return O;
                }),
                r.default.Color);
            y.default = _;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            './color_conversion': 252,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.trim': 193,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        255: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.fill'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (h = t('../core/main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../core/constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            t('./p5.Color'),
              (r.default.prototype.background = function () {
                var o;
                return (
                  (o = this._renderer).background.apply(o, arguments), this
                );
              }),
              (r.default.prototype.clear = function () {
                return (
                  this._renderer.clear(
                    (arguments.length <= 0 ? void 0 : arguments[0]) || 0,
                    (arguments.length <= 1 ? void 0 : arguments[1]) || 0,
                    (arguments.length <= 2 ? void 0 : arguments[2]) || 0,
                    (arguments.length <= 3 ? void 0 : arguments[3]) || 0,
                  ),
                  this
                );
              }),
              (r.default.prototype.colorMode = function (o, s, n, c, f) {
                return (
                  r.default._validateParameters('colorMode', arguments),
                  (o !== l.RGB && o !== l.HSB && o !== l.HSL) ||
                    ((this._colorMode = o),
                    (o = this._colorMaxes[o]),
                    arguments.length === 2
                      ? ((o[0] = s), (o[1] = s), (o[2] = s), (o[3] = s))
                      : arguments.length === 4
                      ? ((o[0] = s), (o[1] = n), (o[2] = c))
                      : arguments.length === 5 &&
                        ((o[0] = s), (o[1] = n), (o[2] = c), (o[3] = f))),
                  this
                );
              }),
              (r.default.prototype.fill = function () {
                var o;
                return (
                  this._renderer._setProperty('_fillSet', !0),
                  this._renderer._setProperty('_doFill', !0),
                  (o = this._renderer).fill.apply(o, arguments),
                  this
                );
              }),
              (r.default.prototype.noFill = function () {
                return this._renderer._setProperty('_doFill', !1), this;
              }),
              (r.default.prototype.noStroke = function () {
                return this._renderer._setProperty('_doStroke', !1), this;
              }),
              (r.default.prototype.stroke = function () {
                var o;
                return (
                  this._renderer._setProperty('_strokeSet', !0),
                  this._renderer._setProperty('_doStroke', !0),
                  (o = this._renderer).stroke.apply(o, arguments),
                  this
                );
              }),
              (r.default.prototype.erase = function () {
                return (
                  this._renderer.erase(
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : 255,
                    1 < arguments.length && arguments[1] !== void 0
                      ? arguments[1]
                      : 255,
                  ),
                  this
                );
              }),
              (r.default.prototype.noErase = function () {
                return this._renderer.noErase(), this;
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            './p5.Color': 254,
            'core-js/modules/es.array.fill': 152,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        256: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.BEZIER =
                y.QUADRATIC =
                y.LINEAR =
                y._CTX_MIDDLE =
                y._DEFAULT_LEADMULT =
                y._DEFAULT_TEXT_FILL =
                y.WORD =
                y.CHAR =
                y.BOLDITALIC =
                y.BOLD =
                y.ITALIC =
                y.NORMAL =
                y.BLUR =
                y.ERODE =
                y.DILATE =
                y.POSTERIZE =
                y.INVERT =
                y.OPAQUE =
                y.GRAY =
                y.THRESHOLD =
                y.BURN =
                y.DODGE =
                y.SOFT_LIGHT =
                y.HARD_LIGHT =
                y.OVERLAY =
                y.REPLACE =
                y.SCREEN =
                y.MULTIPLY =
                y.EXCLUSION =
                y.SUBTRACT =
                y.DIFFERENCE =
                y.LIGHTEST =
                y.DARKEST =
                y.ADD =
                y.REMOVE =
                y.BLEND =
                y.UP_ARROW =
                y.TAB =
                y.SHIFT =
                y.RIGHT_ARROW =
                y.RETURN =
                y.OPTION =
                y.LEFT_ARROW =
                y.ESCAPE =
                y.ENTER =
                y.DOWN_ARROW =
                y.DELETE =
                y.CONTROL =
                y.BACKSPACE =
                y.ALT =
                y.AUTO =
                y.HSL =
                y.HSB =
                y.RGB =
                y.MITER =
                y.BEVEL =
                y.ROUND =
                y.SQUARE =
                y.PROJECT =
                y.PIE =
                y.CHORD =
                y.OPEN =
                y.CLOSE =
                y.TESS =
                y.QUAD_STRIP =
                y.QUADS =
                y.TRIANGLE_STRIP =
                y.TRIANGLE_FAN =
                y.TRIANGLES =
                y.LINE_LOOP =
                y.LINE_STRIP =
                y.LINES =
                y.POINTS =
                y.BASELINE =
                y.BOTTOM =
                y.TOP =
                y.CENTER =
                y.LEFT =
                y.RIGHT =
                y.RADIUS =
                y.CORNERS =
                y.CORNER =
                y.RAD_TO_DEG =
                y.DEG_TO_RAD =
                y.RADIANS =
                y.DEGREES =
                y.TWO_PI =
                y.TAU =
                y.QUARTER_PI =
                y.PI =
                y.HALF_PI =
                y.WAIT =
                y.TEXT =
                y.MOVE =
                y.HAND =
                y.CROSS =
                y.ARROW =
                y.WEBGL =
                y.P2D =
                y.VERSION =
                  void 0),
              (y.COVER =
                y.CONTAIN =
                y.FALLBACK =
                y.LABEL =
                y.AXES =
                y.GRID =
                y._DEFAULT_FILL =
                y._DEFAULT_STROKE =
                y.PORTRAIT =
                y.LANDSCAPE =
                y.MIRROR =
                y.CLAMP =
                y.REPEAT =
                y.NEAREST =
                y.IMAGE =
                y.IMMEDIATE =
                y.TEXTURE =
                y.FILL =
                y.STROKE =
                y.CURVE =
                  void 0);
            var u = Math.PI,
              a =
                ((y.VERSION = '1.6.0'),
                (y.P2D = 'p2d'),
                (y.WEBGL = 'webgl'),
                (y.ARROW = 'default'),
                (y.CROSS = 'crosshair'),
                (y.HAND = 'pointer'),
                (y.MOVE = 'move'),
                (y.TEXT = 'text'),
                (y.WAIT = 'wait'),
                u / 2),
              a = ((y.HALF_PI = a), u),
              a = ((y.PI = a), u / 4),
              a = ((y.QUARTER_PI = a), 2 * u),
              a = ((y.TAU = a), 2 * u),
              a =
                ((y.TWO_PI = a),
                (y.DEGREES = 'degrees'),
                (y.RADIANS = 'radians'),
                u / 180),
              a = ((y.DEG_TO_RAD = a), 180 / u);
            (y.RAD_TO_DEG = a),
              (y.CORNER = 'corner'),
              (y.CORNERS = 'corners'),
              (y.RADIUS = 'radius'),
              (y.RIGHT = 'right'),
              (y.LEFT = 'left'),
              (y.CENTER = 'center'),
              (y.TOP = 'top'),
              (y.BOTTOM = 'bottom'),
              (y.BASELINE = 'alphabetic'),
              (y.POINTS = 0),
              (y.LINES = 1),
              (y.LINE_STRIP = 3),
              (y.LINE_LOOP = 2),
              (y.TRIANGLES = 4),
              (y.TRIANGLE_FAN = 6),
              (y.TRIANGLE_STRIP = 5),
              (y.QUADS = 'quads'),
              (y.QUAD_STRIP = 'quad_strip'),
              (y.TESS = 'tess'),
              (y.CLOSE = 'close'),
              (y.OPEN = 'open'),
              (y.CHORD = 'chord'),
              (y.PIE = 'pie'),
              (y.PROJECT = 'square'),
              (y.SQUARE = 'butt'),
              (y.ROUND = 'round'),
              (y.BEVEL = 'bevel'),
              (y.MITER = 'miter'),
              (y.RGB = 'rgb'),
              (y.HSB = 'hsb'),
              (y.HSL = 'hsl'),
              (y.AUTO = 'auto'),
              (y.ALT = 18),
              (y.BACKSPACE = 8),
              (y.CONTROL = 17),
              (y.DELETE = 46),
              (y.DOWN_ARROW = 40),
              (y.ENTER = 13),
              (y.ESCAPE = 27),
              (y.LEFT_ARROW = 37),
              (y.OPTION = 18),
              (y.RETURN = 13),
              (y.RIGHT_ARROW = 39),
              (y.SHIFT = 16),
              (y.TAB = 9),
              (y.UP_ARROW = 38),
              (y.BLEND = 'source-over'),
              (y.REMOVE = 'destination-out'),
              (y.ADD = 'lighter'),
              (y.DARKEST = 'darken'),
              (y.LIGHTEST = 'lighten'),
              (y.DIFFERENCE = 'difference'),
              (y.SUBTRACT = 'subtract'),
              (y.EXCLUSION = 'exclusion'),
              (y.MULTIPLY = 'multiply'),
              (y.SCREEN = 'screen'),
              (y.REPLACE = 'copy'),
              (y.OVERLAY = 'overlay'),
              (y.HARD_LIGHT = 'hard-light'),
              (y.SOFT_LIGHT = 'soft-light'),
              (y.DODGE = 'color-dodge'),
              (y.BURN = 'color-burn'),
              (y.THRESHOLD = 'threshold'),
              (y.GRAY = 'gray'),
              (y.OPAQUE = 'opaque'),
              (y.INVERT = 'invert'),
              (y.POSTERIZE = 'posterize'),
              (y.DILATE = 'dilate'),
              (y.ERODE = 'erode'),
              (y.BLUR = 'blur'),
              (y.NORMAL = 'normal'),
              (y.ITALIC = 'italic'),
              (y.BOLD = 'bold'),
              (y.BOLDITALIC = 'bold italic'),
              (y.CHAR = 'CHAR'),
              (y.WORD = 'WORD'),
              (y._DEFAULT_TEXT_FILL = '#000000'),
              (y._DEFAULT_LEADMULT = 1.25),
              (y._CTX_MIDDLE = 'middle'),
              (y.LINEAR = 'linear'),
              (y.QUADRATIC = 'quadratic'),
              (y.BEZIER = 'bezier'),
              (y.CURVE = 'curve'),
              (y.STROKE = 'stroke'),
              (y.FILL = 'fill'),
              (y.TEXTURE = 'texture'),
              (y.IMMEDIATE = 'immediate'),
              (y.IMAGE = 'image'),
              (y.NEAREST = 'nearest'),
              (y.REPEAT = 'repeat'),
              (y.CLAMP = 'clamp'),
              (y.MIRROR = 'mirror'),
              (y.LANDSCAPE = 'landscape'),
              (y.PORTRAIT = 'portrait'),
              (y._DEFAULT_STROKE = '#000000'),
              (y._DEFAULT_FILL = '#FFFFFF'),
              (y.GRID = 'grid'),
              (y.AXES = 'axes'),
              (y.LABEL = 'label'),
              (y.FALLBACK = 'fallback'),
              (y.CONTAIN = 'contain'),
              (y.COVER = 'cover');
          },
          {},
        ],
        257: [
          function (t, b, y) {
            function u(c) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (f) {
                      return typeof f;
                    }
                  : function (f) {
                      return f &&
                        typeof Symbol == 'function' &&
                        f.constructor === Symbol &&
                        f !== Symbol.prototype
                        ? 'symbol'
                        : typeof f;
                    })(c);
            }
            function a(c) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (f) {
                      return u(f);
                    }
                  : function (f) {
                      return f &&
                        typeof Symbol == 'function' &&
                        f.constructor === Symbol &&
                        f !== Symbol.prototype
                        ? 'symbol'
                        : u(f);
                    })(c);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.search'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.search'),
              t('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = (l = t('./main')) && l.__esModule ? l : { default: l },
              l = (function (c) {
                if (c && c.__esModule) return c;
                if (c === null || (a(c) !== 'object' && typeof c != 'function'))
                  return { default: c };
                var f = d();
                if (f && f.has(c)) return f.get(c);
                var g,
                  _ = {},
                  x = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (g in c) {
                  var j;
                  Object.prototype.hasOwnProperty.call(c, g) &&
                    ((j = x ? Object.getOwnPropertyDescriptor(c, g) : null) &&
                    (j.get || j.set)
                      ? Object.defineProperty(_, g, j)
                      : (_[g] = c[g]));
                }
                return (_.default = c), f && f.set(c, _), _;
              })(t('./constants'));
            function d() {
              var c;
              return typeof WeakMap != 'function'
                ? null
                : ((c = new WeakMap()),
                  (d = function () {
                    return c;
                  }),
                  c);
            }
            var h = [l.ARROW, l.CROSS, l.HAND, l.MOVE, l.TEXT, l.WAIT],
              o =
                ((r.default.prototype._frameRate = 0),
                (r.default.prototype._lastFrameTime = window.performance.now()),
                (r.default.prototype._targetFrameRate = 60),
                window.print);
            function s() {
              return (
                window.innerWidth ||
                (document.documentElement &&
                  document.documentElement.clientWidth) ||
                (document.body && document.body.clientWidth) ||
                0
              );
            }
            function n() {
              return (
                window.innerHeight ||
                (document.documentElement &&
                  document.documentElement.clientHeight) ||
                (document.body && document.body.clientHeight) ||
                0
              );
            }
            (r.default.prototype.print = function () {
              var c;
              arguments.length ? (c = console).log.apply(c, arguments) : o();
            }),
              (r.default.prototype.frameCount = 0),
              (r.default.prototype.deltaTime = 0),
              (r.default.prototype.focused = document.hasFocus()),
              (r.default.prototype.cursor = function (c, f, g) {
                var _,
                  x = 'auto',
                  j = this._curElement.elt;
                h.includes(c)
                  ? (x = c)
                  : typeof c == 'string' &&
                    ((_ = ''),
                    f &&
                      g &&
                      typeof f == 'number' &&
                      typeof g == 'number' &&
                      (_ = ''.concat(f, ' ').concat(g)),
                    (x =
                      c.substring(0, 7) === 'http://' ||
                      c.substring(0, 8) === 'https://' ||
                      /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(c)
                        ? 'url('.concat(c, ') ').concat(_, ', auto')
                        : c)),
                  (j.style.cursor = x);
              }),
              (r.default.prototype.frameRate = function (c) {
                return (
                  r.default._validateParameters('frameRate', arguments),
                  typeof c != 'number' || c < 0
                    ? this._frameRate
                    : (this._setProperty('_targetFrameRate', c),
                      c === 0 && this._setProperty('_frameRate', c),
                      this)
                );
              }),
              (r.default.prototype.getFrameRate = function () {
                return this.frameRate();
              }),
              (r.default.prototype.setFrameRate = function (c) {
                return this.frameRate(c);
              }),
              (r.default.prototype.getTargetFrameRate = function () {
                return this._targetFrameRate;
              }),
              (r.default.prototype.noCursor = function () {
                this._curElement.elt.style.cursor = 'none';
              }),
              (r.default.prototype.displayWidth = screen.width),
              (r.default.prototype.displayHeight = screen.height),
              (r.default.prototype.windowWidth = s()),
              (r.default.prototype.windowHeight = n()),
              (r.default.prototype._onresize = function (c) {
                this._setProperty('windowWidth', s()),
                  this._setProperty('windowHeight', n());
                var f = this._isGlobal ? window : this;
                typeof f.windowResized != 'function' ||
                  (f = f.windowResized(c)) === void 0 ||
                  f ||
                  c.preventDefault();
              }),
              (r.default.prototype.width = 0),
              (r.default.prototype.height = 0),
              (r.default.prototype.fullscreen = function (c) {
                if (
                  (r.default._validateParameters('fullscreen', arguments),
                  c === void 0)
                )
                  return (
                    document.fullscreenElement ||
                    document.webkitFullscreenElement ||
                    document.mozFullScreenElement ||
                    document.msFullscreenElement
                  );
                if (c) {
                  if (
                    ((c = document.documentElement),
                    !(
                      document.fullscreenEnabled ||
                      document.webkitFullscreenEnabled ||
                      document.mozFullScreenEnabled ||
                      document.msFullscreenEnabled
                    ))
                  )
                    throw new Error('Fullscreen not enabled in this browser.');
                  c.requestFullscreen
                    ? c.requestFullscreen()
                    : c.mozRequestFullScreen
                    ? c.mozRequestFullScreen()
                    : c.webkitRequestFullscreen
                    ? c.webkitRequestFullscreen()
                    : c.msRequestFullscreen && c.msRequestFullscreen();
                } else
                  document.exitFullscreen
                    ? document.exitFullscreen()
                    : document.mozCancelFullScreen
                    ? document.mozCancelFullScreen()
                    : document.webkitExitFullscreen
                    ? document.webkitExitFullscreen()
                    : document.msExitFullscreen && document.msExitFullscreen();
              }),
              (r.default.prototype.pixelDensity = function (c) {
                var f;
                return (
                  r.default._validateParameters('pixelDensity', arguments),
                  typeof c == 'number'
                    ? (c !== this._pixelDensity && (this._pixelDensity = c),
                      (f = this).resizeCanvas(this.width, this.height, !0))
                    : (f = this._pixelDensity),
                  f
                );
              }),
              (r.default.prototype.displayDensity = function () {
                return window.devicePixelRatio;
              }),
              (r.default.prototype.getURL = function () {
                return location.href;
              }),
              (r.default.prototype.getURLPath = function () {
                return location.pathname.split('/').filter(function (c) {
                  return c !== '';
                });
              }),
              (r.default.prototype.getURLParams = function () {
                for (
                  var c, f = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, g = {};
                  (c = f.exec(location.search)) != null;

                )
                  c.index === f.lastIndex && f.lastIndex++, (g[c[1]] = c[2]);
                return g;
              }),
              (t = r.default),
              (y.default = t);
          },
          {
            './constants': 256,
            './main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.search': 190,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        258: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.some'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.get-own-property-names'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.search'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.some'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.get-own-property-names'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.search'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = (h = t('../main')) && h.__esModule ? h : { default: h };
            t('../internationalization');
            function a(o, s) {
              (s = s || console.log.bind(console)),
                r || d(),
                r.some(function (n) {
                  var c;
                  if (
                    o.message &&
                    o.message.match('\\W?'.concat(n.name, '\\W')) !== null
                  )
                    return (
                      (c =
                        n.type === 'function'
                          ? ''.concat(n.name, '()')
                          : n.name),
                      s(
                        "Did you just try to use p5.js's "
                          .concat(c, ' ')
                          .concat(
                            n.type,
                            `? If so, you may want to move it into your sketch's setup() function.

For more details, see: `,
                          )
                          .concat(l),
                      ),
                      !0
                    );
                });
            }
            var r = null,
              d = null,
              l =
                ((u.default._friendlyError =
                  u.default._checkForUserDefinedFunctions =
                  u.default._fesErrorMonitor =
                    function () {}),
                (r = null),
                'https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup'),
              d = function () {
                function o(n) {
                  return Object.getOwnPropertyNames(n)
                    .filter(function (c) {
                      return c[0] !== '_' && !(c in s) && (s[c] = !0);
                    })
                    .map(function (c) {
                      var f =
                        typeof n[c] == 'function'
                          ? 'function'
                          : c === c.toUpperCase()
                          ? 'constant'
                          : 'variable';
                      return { name: c, type: f };
                    });
                }
                var s = {};
                (r = [].concat(
                  o(u.default.prototype),
                  o(t('../constants')),
                )).sort(function (n, c) {
                  return c.name.length - n.name.length;
                });
              },
              h =
                ((u.default.prototype._helpForMisusedAtTopLevelCode = a),
                document.readyState !== 'complete' &&
                  (window.addEventListener('error', a, !1),
                  window.addEventListener('load', function () {
                    window.removeEventListener('error', a, !1);
                  })),
                u.default);
            y.default = h;
          },
          {
            '../constants': 256,
            '../internationalization': 265,
            '../main': 267,
            './browser_errors': void 0,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.some': 163,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.object.assign': 172,
            'core-js/modules/es.object.get-own-property-names': 174,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.search': 190,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.for-each': 229,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        259: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = (u = t('../main')) && u.__esModule ? u : { default: u };
            t('../internationalization'),
              (u.default._friendlyFileLoadError = function () {}),
              (t = u.default),
              (y.default = t);
          },
          { '../internationalization': 265, '../main': 267 },
        ],
        260: [
          function (t, b, y) {
            function u(s) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(s);
            }
            function a(s) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (n) {
                      return u(n);
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : u(n);
                    })(s);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = h(t('../main'));
            t('../internationalization'), d(t('../constants'));
            function l() {
              var s;
              return typeof WeakMap != 'function'
                ? null
                : ((s = new WeakMap()),
                  (l = function () {
                    return s;
                  }),
                  s);
            }
            function d(s) {
              if (s && s.__esModule) return s;
              if (s === null || (a(s) !== 'object' && typeof s != 'function'))
                return { default: s };
              var n = l();
              if (n && n.has(s)) return n.get(s);
              var c,
                f,
                g = {},
                _ = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (c in s)
                Object.prototype.hasOwnProperty.call(s, c) &&
                  ((f = _ ? Object.getOwnPropertyDescriptor(s, c) : null) &&
                  (f.get || f.set)
                    ? Object.defineProperty(g, c, f)
                    : (g[c] = s[c]));
              return (g.default = s), n && n.set(s, g), g;
            }
            function h(s) {
              return s && s.__esModule ? s : { default: s };
            }
            r.default._fesCodeReader = function () {};
            var o = r.default;
            y.default = o;
          },
          {
            '../constants': 256,
            '../internationalization': 265,
            '../main': 267,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.for-each': 229,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        261: [
          function (t, b, y) {
            t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t = (t = t('../main')) && t.__esModule ? t : { default: t });
            function u() {
              var a = /(^|@)\S+:\d+/,
                r = /^\s*at .*(\S+:\d+|\(native\))/m,
                l = /^(eval@)?(\[native code])?$/;
              return {
                parse: function (d) {
                  return d.stacktrace !== void 0 ||
                    d['opera#sourceloc'] !== void 0
                    ? this.parseOpera(d)
                    : d.stack && d.stack.match(r)
                    ? this.parseV8OrIE(d)
                    : d.stack
                    ? this.parseFFOrSafari(d)
                    : void 0;
                },
                extractLocation: function (d) {
                  return d.indexOf(':') === -1
                    ? [d]
                    : [
                        (d = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(
                          d.replace(/[()]/g, ''),
                        ))[1],
                        d[2] || void 0,
                        d[3] || void 0,
                      ];
                },
                parseV8OrIE: function (d) {
                  return d.stack
                    .split(
                      `
`,
                    )
                    .filter(function (h) {
                      return !!h.match(r);
                    }, this)
                    .map(function (h) {
                      var o = (h =
                          -1 < h.indexOf('(eval ')
                            ? h
                                .replace(/eval code/g, 'eval')
                                .replace(/(\(eval at [^()]*)|(\),.*$)/g, '')
                            : h)
                          .replace(/^\s+/, '')
                          .replace(/\(eval code/g, '('),
                        s = o.match(/ (\((.+):(\d+):(\d+)\)$)/),
                        o = (o = s ? o.replace(s[0], '') : o)
                          .split(/\s+/)
                          .slice(1),
                        s = this.extractLocation(s ? s[1] : o.pop());
                      return {
                        functionName: o.join(' ') || void 0,
                        fileName:
                          -1 < ['eval', '<anonymous>'].indexOf(s[0])
                            ? void 0
                            : s[0],
                        lineNumber: s[1],
                        columnNumber: s[2],
                        source: h,
                      };
                    }, this);
                },
                parseFFOrSafari: function (d) {
                  return d.stack
                    .split(
                      `
`,
                    )
                    .filter(function (h) {
                      return !h.match(l);
                    }, this)
                    .map(function (h) {
                      var o, s;
                      return (h =
                        -1 < h.indexOf(' > eval')
                          ? h.replace(
                              / line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,
                              ':$1',
                            )
                          : h).indexOf('@') === -1 && h.indexOf(':') === -1
                        ? { functionName: h }
                        : {
                            functionName:
                              (s = h.match(
                                (o = /((.*".+"[^@]*)?[^@]*)(?:@)/),
                              )) && s[1]
                                ? s[1]
                                : void 0,
                            fileName: (s = this.extractLocation(
                              h.replace(o, ''),
                            ))[0],
                            lineNumber: s[1],
                            columnNumber: s[2],
                            source: h,
                          };
                    }, this);
                },
                parseOpera: function (d) {
                  return !d.stacktrace ||
                    (-1 <
                      d.message.indexOf(`
`) &&
                      d.message.split(`
`).length >
                        d.stacktrace.split(`
`).length)
                    ? this.parseOpera9(d)
                    : d.stack
                    ? this.parseOpera11(d)
                    : this.parseOpera10(d);
                },
                parseOpera9: function (d) {
                  for (
                    var h = /Line (\d+).*script (?:in )?(\S+)/i,
                      o = d.message.split(`
`),
                      s = [],
                      n = 2,
                      c = o.length;
                    n < c;
                    n += 2
                  ) {
                    var f = h.exec(o[n]);
                    f &&
                      s.push({
                        fileName: f[2],
                        lineNumber: f[1],
                        source: o[n],
                      });
                  }
                  return s;
                },
                parseOpera10: function (d) {
                  for (
                    var h =
                        /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,
                      o = d.stacktrace.split(`
`),
                      s = [],
                      n = 0,
                      c = o.length;
                    n < c;
                    n += 2
                  ) {
                    var f = h.exec(o[n]);
                    f &&
                      s.push({
                        functionName: f[3] || void 0,
                        fileName: f[2],
                        lineNumber: f[1],
                        source: o[n],
                      });
                  }
                  return s;
                },
                parseOpera11: function (d) {
                  return d.stack
                    .split(
                      `
`,
                    )
                    .filter(function (h) {
                      return !!h.match(a) && !h.match(/^Error created at/);
                    }, this)
                    .map(function (h) {
                      var o,
                        n = h.split('@'),
                        s = this.extractLocation(n.pop()),
                        n = n.shift() || '';
                      return {
                        functionName:
                          n
                            .replace(/<anonymous function(: (\w+))?>/, '$2')
                            .replace(/\([^)]*\)/g, '') || void 0,
                        args:
                          (o = n.match(/\(([^)]*)\)/)
                            ? n.replace(/^[^(]+\(([^)]*)\)$/, '$1')
                            : o) === void 0 || o === '[arguments not available]'
                            ? void 0
                            : o.split(','),
                        fileName: s[0],
                        lineNumber: s[1],
                        columnNumber: s[2],
                        source: h,
                      };
                    }, this);
                },
              };
            }
            (t.default._getErrorStackParser = function () {
              return new u();
            }),
              (t = t.default),
              (y.default = t);
          },
          {
            '../main': 267,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
          },
        ],
        262: [
          function (t, b, y) {
            function u(d) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (h) {
                      return typeof h;
                    }
                  : function (h) {
                      return h &&
                        typeof Symbol == 'function' &&
                        h.constructor === Symbol &&
                        h !== Symbol.prototype
                        ? 'symbol'
                        : typeof h;
                    })(d);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.last-index-of'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.map'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.get-prototype-of'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.reflect.construct'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.set'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.last-index-of'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.map'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.get-prototype-of'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.reflect.construct'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.set'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var a = (a = t('../main')) && a.__esModule ? a : { default: a };
            (function (d) {
              if (
                !(d && d.__esModule) &&
                !(d === null || (l(d) !== 'object' && typeof d != 'function'))
              ) {
                var h = r();
                if (h && h.has(d)) return h.get(d);
                var o,
                  s = {},
                  n = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (o in d) {
                  var c;
                  Object.prototype.hasOwnProperty.call(d, o) &&
                    ((c = n ? Object.getOwnPropertyDescriptor(d, o) : null) &&
                    (c.get || c.set)
                      ? Object.defineProperty(s, o, c)
                      : (s[o] = d[o]));
                }
                (s.default = d), h && h.set(d, s);
              }
            })(t('../constants')),
              t('../internationalization');
            function r() {
              var d;
              return typeof WeakMap != 'function'
                ? null
                : ((d = new WeakMap()),
                  (r = function () {
                    return d;
                  }),
                  d);
            }
            function l(d) {
              return (l =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (h) {
                      return u(h);
                    }
                  : function (h) {
                      return h &&
                        typeof Symbol == 'function' &&
                        h.constructor === Symbol &&
                        h !== Symbol.prototype
                        ? 'symbol'
                        : u(h);
                    })(d);
            }
            (a.default._validateParameters =
              a.default._clearValidateParamsCache =
                function () {}),
              (t = a.default),
              (y.default = t);
          },
          {
            '../../../docs/parameterData.json': void 0,
            '../constants': 256,
            '../internationalization': 265,
            '../main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.last-index-of': 160,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.map': 166,
            'core-js/modules/es.number.constructor': 169,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.get-prototype-of': 175,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.reflect.construct': 179,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.set': 183,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.for-each': 229,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        263: [
          function (t, b, y) {
            function u(d) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (h) {
                      return typeof h;
                    }
                  : function (h) {
                      return h &&
                        typeof Symbol == 'function' &&
                        h.constructor === Symbol &&
                        h !== Symbol.prototype
                        ? 'symbol'
                        : typeof h;
                    })(d);
            }
            function a(d) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (h) {
                      return u(h);
                    }
                  : function (h) {
                      return h &&
                        typeof Symbol == 'function' &&
                        h.constructor === Symbol &&
                        h !== Symbol.prototype
                        ? 'symbol'
                        : u(h);
                    })(d);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = (function (d) {
              if (d && d.__esModule) return d;
              if (d === null || (a(d) !== 'object' && typeof d != 'function'))
                return { default: d };
              var h = l();
              if (h && h.has(d)) return h.get(d);
              var o,
                s = {},
                n = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (o in d) {
                var c;
                Object.prototype.hasOwnProperty.call(d, o) &&
                  ((c = n ? Object.getOwnPropertyDescriptor(d, o) : null) &&
                  (c.get || c.set)
                    ? Object.defineProperty(s, o, c)
                    : (s[o] = d[o]));
              }
              return (s.default = d), h && h.set(d, s), s;
            })(t('./constants'));
            function l() {
              var d;
              return typeof WeakMap != 'function'
                ? null
                : ((d = new WeakMap()),
                  (l = function () {
                    return d;
                  }),
                  d);
            }
            y.default = {
              modeAdjust: function (d, h, o, s, n) {
                return n === r.CORNER
                  ? { x: d, y: h, w: o, h: s }
                  : n === r.CORNERS
                  ? { x: d, y: h, w: o - d, h: s - h }
                  : n === r.RADIUS
                  ? { x: d - o, y: h - s, w: 2 * o, h: 2 * s }
                  : n === r.CENTER
                  ? { x: d - 0.5 * o, y: h - 0.5 * s, w: o, h: s }
                  : void 0;
              },
            };
          },
          {
            './constants': 256,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        264: [
          function (t, b, y) {
            t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator');
            var u =
              (a = t('../core/main')) && a.__esModule ? a : { default: a };
            t('./internationalization');
            var a = Promise.resolve();
            Promise.all([
              new Promise(function (r, l) {
                document.readyState === 'complete'
                  ? r()
                  : window.addEventListener('load', r, !1);
              }),
              a,
            ]).then(function () {
              window._setupDone !== void 0
                ? console.warn(
                    'p5.js seems to have been imported multiple times. Please remove the duplicate import',
                  )
                : window.mocha ||
                  (((window.setup && typeof window.setup == 'function') ||
                    (window.draw && typeof window.draw == 'function')) &&
                    !u.default.instance &&
                    new u.default());
            });
          },
          {
            '../core/main': 267,
            './internationalization': 265,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        265: [
          function (t, b, y) {
            t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.setTranslatorLanguage =
                y.currentTranslatorLanguage =
                y.availableTranslatorLanguages =
                y.initialize =
                y.translator =
                  void 0);
            var u,
              a,
              r = d(t('i18next')),
              l = d(t('i18next-browser-languagedetector'));
            function d(s) {
              return s && s.__esModule ? s : { default: s };
            }
            function h(s, n) {
              for (var c = 0; c < n.length; c++) {
                var f = n[c];
                (f.enumerable = f.enumerable || !1),
                  (f.configurable = !0),
                  'value' in f && (f.writable = !0),
                  Object.defineProperty(s, f.key, f);
              }
            }
            var o = (function () {
              function s(f, g) {
                if (!(this instanceof s))
                  throw new TypeError('Cannot call a class as a function');
                this.init(f, g);
              }
              var n, c;
              return (
                (n = s),
                (c = [
                  {
                    key: 'fetchWithTimeout',
                    value: function (f, g) {
                      var _ =
                        2 < arguments.length && arguments[2] !== void 0
                          ? arguments[2]
                          : 2e3;
                      return Promise.race([
                        fetch(f, g),
                        new Promise(function (x, j) {
                          return setTimeout(function () {
                            return j(new Error('timeout'));
                          }, _);
                        }),
                      ]);
                    },
                  },
                  {
                    key: 'init',
                    value: function (f) {
                      var g =
                        1 < arguments.length && arguments[1] !== void 0
                          ? arguments[1]
                          : {};
                      (this.services = f), (this.options = g);
                    },
                  },
                  {
                    key: 'read',
                    value: function (f, g, _) {
                      var x = this.options.loadPath;
                      f === this.options.fallback
                        ? _(null, u[f][g])
                        : a.includes(f)
                        ? ((x = this.services.interpolator.interpolate(x, {
                            lng: f,
                            ns: g,
                          })),
                          this.loadUrl(x, _))
                        : _('Not found', !1);
                    },
                  },
                  {
                    key: 'loadUrl',
                    value: function (f, g) {
                      this.fetchWithTimeout(f)
                        .then(
                          function (_) {
                            if (_.ok) return _.json();
                            throw new Error('failed loading '.concat(f));
                          },
                          function () {
                            throw new Error('failed loading '.concat(f));
                          },
                        )
                        .then(function (_) {
                          return g(null, _);
                        })
                        .catch(g);
                    },
                  },
                ]) && h(n.prototype, c),
                s
              );
            })();
            (o.type = 'backend'),
              (y.translator = function (s, n) {
                console.debug(
                  'p5.js translator called before translations were loaded',
                ),
                  r.default.t(s, n);
              }),
              (y.initialize = function () {
                return r.default
                  .use(l.default)
                  .use(o)
                  .init({
                    fallbackLng: 'en',
                    nestingPrefix: '$tr(',
                    nestingSuffix: ')',
                    defaultNS: 'translation',
                    returnEmptyString: !1,
                    interpolation: { escapeValue: !1 },
                    detection: {
                      checkWhitelist: !1,
                      order: [
                        'querystring',
                        'navigator',
                        'htmlTag',
                        'path',
                        'subdomain',
                      ],
                      caches: [],
                    },
                    backend: {
                      fallback: 'en',
                      loadPath:
                        'https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json',
                    },
                    partialBundledLanguages: !0,
                    resources: u,
                  })
                  .then(
                    function (s) {
                      y.translator = s;
                    },
                    function (s) {
                      return console.debug(
                        'Translations failed to load ('.concat(s, ')'),
                      );
                    },
                  );
              }),
              (y.availableTranslatorLanguages = function () {
                return r.default.languages;
              }),
              (y.currentTranslatorLanguage = function (s) {
                return r.default.language;
              }),
              (y.setTranslatorLanguage = function (s) {
                return r.default.changeLanguage(s || void 0, function (n) {
                  return console.debug(
                    'Translations failed to load ('.concat(n, ')'),
                  );
                });
              });
          },
          {
            '../../translations': void 0,
            '../../translations/dev': void 0,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/web.dom-collections.iterator': 230,
            i18next: 3,
            'i18next-browser-languagedetector': 3,
          },
        ],
        266: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t = (t = t('./main')) && t.__esModule ? t : { default: t }),
              (t.default.prototype.pushStyle = function () {
                throw new Error('pushStyle() not used, see push()');
              }),
              (t.default.prototype.popStyle = function () {
                throw new Error('popStyle() not used, see pop()');
              }),
              (t.default.prototype.popMatrix = function () {
                throw new Error('popMatrix() not used, see pop()');
              }),
              (t.default.prototype.pushMatrix = function () {
                throw new Error('pushMatrix() not used, see push()');
              }),
              (t = t.default),
              (y.default = t);
          },
          { './main': 267 },
        ],
        267: [
          function (t, b, y) {
            function u(s) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(s);
            }
            function a(s) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (n) {
                      return u(n);
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : u(n);
                    })(s);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.get-own-property-names'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-names'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              t('./shim');
            var r = (function (s) {
              if (s && s.__esModule) return s;
              if (s === null || (a(s) !== 'object' && typeof s != 'function'))
                return { default: s };
              var n = l();
              if (n && n.has(s)) return n.get(s);
              var c,
                f = {},
                g = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (c in s) {
                var _;
                Object.prototype.hasOwnProperty.call(s, c) &&
                  ((_ = g ? Object.getOwnPropertyDescriptor(s, c) : null) &&
                  (_.get || _.set)
                    ? Object.defineProperty(f, c, _)
                    : (f[c] = s[c]));
              }
              return (f.default = s), n && n.set(s, f), f;
            })(t('./constants'));
            function l() {
              var s;
              return typeof WeakMap != 'function'
                ? null
                : ((s = new WeakMap()),
                  (l = function () {
                    return s;
                  }),
                  s);
            }
            function d(s, n) {
              for (var c = 0; c < n.length; c++) {
                var f = n[c];
                (f.enumerable = f.enumerable || !1),
                  (f.configurable = !0),
                  'value' in f && (f.writable = !0),
                  Object.defineProperty(s, f.key, f);
              }
            }
            var h,
              o = (function () {
                function s(f, j, _) {
                  var x = this;
                  if (!(this instanceof s))
                    throw new TypeError('Cannot call a class as a function');
                  (this._setupDone = !1),
                    (this._preloadDone = !1),
                    (this._pixelDensity =
                      Math.ceil(window.devicePixelRatio) || 1),
                    (this._userNode = j),
                    (this._curElement = null),
                    (this._elements = []),
                    (this._glAttributes = null),
                    (this._requestAnimId = 0),
                    (this._preloadCount = 0),
                    (this._isGlobal = !1),
                    (this._loop = !0),
                    this._initializeInstanceVariables(),
                    (this._defaultCanvasSize = { width: 100, height: 100 }),
                    (this._events = {
                      mousemove: null,
                      mousedown: null,
                      mouseup: null,
                      dragend: null,
                      dragover: null,
                      click: null,
                      dblclick: null,
                      mouseover: null,
                      mouseout: null,
                      keydown: null,
                      keyup: null,
                      keypress: null,
                      touchstart: null,
                      touchmove: null,
                      touchend: null,
                      resize: null,
                      blur: null,
                    }),
                    (this._millisStart = -1),
                    (this._recording = !1),
                    (this._lcg_random_state = null),
                    (this._gaussian_previous = !1),
                    (this._events.wheel = null),
                    (this._loadingScreenId = 'p5_loading'),
                    (this._registeredMethods = {});
                  var j = Object.getOwnPropertyNames(
                      s.prototype._registeredMethods,
                    ),
                    v = !0,
                    M = !1,
                    C = void 0;
                  try {
                    for (
                      var k, A = j[Symbol.iterator]();
                      !(v = (k = A.next()).done);
                      v = !0
                    ) {
                      var R = k.value;
                      this._registeredMethods[R] =
                        s.prototype._registeredMethods[R].slice();
                    }
                  } catch (W) {
                    (M = !0), (C = W);
                  } finally {
                    try {
                      v || A.return == null || A.return();
                    } finally {
                      if (M) throw C;
                    }
                  }
                  window.DeviceOrientationEvent &&
                    (this._events.deviceorientation = null),
                    window.DeviceMotionEvent &&
                      !window._isNodeWebkit &&
                      (this._events.devicemotion = null),
                    (this._start = function () {
                      x._userNode &&
                        typeof x._userNode == 'string' &&
                        (x._userNode = document.getElementById(x._userNode));
                      var W = x._isGlobal ? window : x;
                      if (W.preload) {
                        var Z,
                          $ = document.getElementById(x._loadingScreenId),
                          ae =
                            ($ ||
                              ((($ = document.createElement('div')).innerHTML =
                                'Loading...'),
                              ($.style.position = 'absolute'),
                              ($.id = x._loadingScreenId),
                              (x._userNode || document.body).appendChild($)),
                            x._preloadMethods);
                        for (Z in ae) {
                          ae[Z] = ae[Z] || s;
                          var P = ae[Z];
                          (P !== s.prototype && P !== s) ||
                            (x._isGlobal && (window[Z] = x._wrapPreload(x, Z)),
                            (P = x)),
                            (x._registeredPreloadMethods[Z] = P[Z]),
                            (P[Z] = x._wrapPreload(P, Z));
                        }
                        W.preload(), x._runIfPreloadsAreDone();
                      } else x._setup(), x._recording || x._draw();
                    }),
                    (this._runIfPreloadsAreDone = function () {
                      var W,
                        Z = this._isGlobal ? window : this;
                      Z._preloadCount === 0 &&
                        ((W = document.getElementById(Z._loadingScreenId)) &&
                          W.parentNode.removeChild(W),
                        this._setupDone ||
                          ((this._lastTargetFrameTime =
                            window.performance.now()),
                          (this._lastRealFrameTime = window.performance.now()),
                          Z._setup(),
                          this._recording || Z._draw()));
                    }),
                    (this._decrementPreload = function () {
                      var W = this._isGlobal ? window : this;
                      W._preloadDone ||
                        typeof W.preload != 'function' ||
                        (W._setProperty('_preloadCount', W._preloadCount - 1),
                        W._runIfPreloadsAreDone());
                    }),
                    (this._wrapPreload = function (W, Z) {
                      var $ = this;
                      return function () {
                        $._incrementPreload();
                        for (
                          var ae = arguments.length, P = new Array(ae), L = 0;
                          L < ae;
                          L++
                        )
                          P[L] = arguments[L];
                        return $._registeredPreloadMethods[Z].apply(W, P);
                      };
                    }),
                    (this._incrementPreload = function () {
                      var W = this._isGlobal ? window : this;
                      W._preloadDone ||
                        W._setProperty('_preloadCount', W._preloadCount + 1);
                    }),
                    (this._setup = function () {
                      x.createCanvas(
                        x._defaultCanvasSize.width,
                        x._defaultCanvasSize.height,
                        'p2d',
                      );
                      var W = x._isGlobal ? window : x;
                      if (typeof W.preload == 'function')
                        for (var Z in x._preloadMethods)
                          (W[Z] = x._preloadMethods[Z][Z]),
                            W[Z] && x && (W[Z] = W[Z].bind(x));
                      (x._millisStart = window.performance.now()),
                        (W._preloadDone = !0),
                        typeof W.setup == 'function' && W.setup();
                      var $ = document.getElementsByTagName('canvas'),
                        ae = !0,
                        P = !1,
                        L = void 0;
                      try {
                        for (
                          var B, Y = $[Symbol.iterator]();
                          !(ae = (B = Y.next()).done);
                          ae = !0
                        ) {
                          var ee = B.value;
                          ee.dataset.hidden === 'true' &&
                            ((ee.style.visibility = ''),
                            delete ee.dataset.hidden);
                        }
                      } catch (ne) {
                        (P = !0), (L = ne);
                      } finally {
                        try {
                          ae || Y.return == null || Y.return();
                        } finally {
                          if (P) throw L;
                        }
                      }
                      (x._lastTargetFrameTime = window.performance.now()),
                        (x._lastRealFrameTime = window.performance.now()),
                        (x._setupDone = !0),
                        (x._accessibleOutputs.grid ||
                          x._accessibleOutputs.text) &&
                          x._updateAccsOutput();
                    }),
                    (this._draw = function () {
                      var W = window.performance.now(),
                        Z = W - x._lastTargetFrameTime,
                        $ = 1e3 / x._targetFrameRate;
                      (!x._loop || $ - 5 <= Z) &&
                        (x.redraw(),
                        (x._frameRate = 1e3 / (W - x._lastRealFrameTime)),
                        (x.deltaTime = W - x._lastRealFrameTime),
                        x._setProperty('deltaTime', x.deltaTime),
                        (x._lastTargetFrameTime = Math.max(
                          x._lastTargetFrameTime + $,
                          W,
                        )),
                        (x._lastRealFrameTime = W),
                        x._updateMouseCoords !== void 0 &&
                          (x._updateMouseCoords(),
                          x._setProperty('movedX', 0),
                          x._setProperty('movedY', 0))),
                        x._loop &&
                          (x._requestAnimId = window.requestAnimationFrame(
                            x._draw,
                          ));
                    }),
                    (this._setProperty = function (W, Z) {
                      (x[W] = Z), x._isGlobal && (window[W] = Z);
                    }),
                    (this.remove = function () {
                      var W = document.getElementById(x._loadingScreenId);
                      if (
                        (W &&
                          (W.parentNode.removeChild(W), x._incrementPreload()),
                        x._curElement)
                      ) {
                        for (var Z in ((x._loop = !1),
                        x._requestAnimId &&
                          window.cancelAnimationFrame(x._requestAnimId),
                        x._events))
                          window.removeEventListener(Z, x._events[Z]);
                        var $ = !0,
                          W = !1,
                          ae = void 0;
                        try {
                          for (
                            var P, L = x._elements[Symbol.iterator]();
                            !($ = (P = L.next()).done);
                            $ = !0
                          ) {
                            var B,
                              Y = P.value;
                            for (B in (Y.elt &&
                              Y.elt.parentNode &&
                              Y.elt.parentNode.removeChild(Y.elt),
                            Y._events))
                              Y.elt.removeEventListener(B, Y._events[B]);
                          }
                        } catch (le) {
                          (W = !0), (ae = le);
                        } finally {
                          try {
                            $ || L.return == null || L.return();
                          } finally {
                            if (W) throw ae;
                          }
                        }
                        var ee = x;
                        x._registeredMethods.remove.forEach(function (le) {
                          le !== void 0 && le.call(ee);
                        });
                      }
                      if (x._isGlobal) {
                        for (var ne in s.prototype)
                          try {
                            delete window[ne];
                          } catch {
                            window[ne] = void 0;
                          }
                        for (var ce in x)
                          if (x.hasOwnProperty(ce))
                            try {
                              delete window[ce];
                            } catch {
                              window[ce] = void 0;
                            }
                        s.instance = null;
                      }
                    }),
                    this._registeredMethods.init.forEach(function (W) {
                      W !== void 0 && W.call(this);
                    }, this),
                    this._setupPromisePreloads();
                  var O,
                    D,
                    N = this._createFriendlyGlobalFunctionBinder();
                  if (f) f(this), s._checkForUserDefinedFunctions(this);
                  else {
                    for (var U in ((this._isGlobal = !0),
                    (s.instance = this),
                    s.prototype))
                      typeof s.prototype[U] == 'function'
                        ? ((O = U.substring(2)),
                          this._events.hasOwnProperty(O) ||
                            (Math.hasOwnProperty(U) &&
                            Math[U] === s.prototype[U]
                              ? N(U, s.prototype[U])
                              : N(U, s.prototype[U].bind(this))))
                        : N(U, s.prototype[U]);
                    for (var H in this) this.hasOwnProperty(H) && N(H, this[H]);
                  }
                  for (D in this._events) {
                    var q = this['_on'.concat(D)];
                    q &&
                      ((q = q.bind(this)),
                      window.addEventListener(D, q, { passive: !1 }),
                      (this._events[D] = q));
                  }
                  function z() {
                    x._setProperty('focused', !0);
                  }
                  function X() {
                    x._setProperty('focused', !1);
                  }
                  window.addEventListener('focus', z),
                    window.addEventListener('blur', X),
                    this.registerMethod('remove', function () {
                      window.removeEventListener('focus', z),
                        window.removeEventListener('blur', X);
                    }),
                    document.readyState === 'complete'
                      ? this._start()
                      : window.addEventListener(
                          'load',
                          this._start.bind(this),
                          !1,
                        );
                }
                var n, c;
                return (
                  (n = s),
                  (c = [
                    {
                      key: '_initializeInstanceVariables',
                      value: function () {
                        (this._accessibleOutputs = {
                          text: !1,
                          grid: !1,
                          textLabel: !1,
                          gridLabel: !1,
                        }),
                          (this._styles = []),
                          (this._bezierDetail = 20),
                          (this._curveDetail = 20),
                          (this._colorMode = r.RGB),
                          (this._colorMaxes = {
                            rgb: [255, 255, 255, 255],
                            hsb: [360, 100, 100, 1],
                            hsl: [360, 100, 100, 1],
                          }),
                          (this._downKeys = {});
                      },
                    },
                    {
                      key: 'registerPreloadMethod',
                      value: function (f, g) {
                        s.prototype._preloadMethods.hasOwnProperty(f) ||
                          (s.prototype._preloadMethods[f] = g);
                      },
                    },
                    {
                      key: 'registerMethod',
                      value: function (f, g) {
                        var _ = this || s.prototype;
                        _._registeredMethods.hasOwnProperty(f) ||
                          (_._registeredMethods[f] = []),
                          _._registeredMethods[f].push(g);
                      },
                    },
                    {
                      key: '_createFriendlyGlobalFunctionBinder',
                      value: function () {
                        var f =
                            0 < arguments.length && arguments[0] !== void 0
                              ? arguments[0]
                              : {},
                          g = f.globalObject || window;
                        return (
                          f.log || console.log.bind(console),
                          function (_, x) {
                            s.disableFriendlyErrors, (g[_] = x);
                          }
                        );
                      },
                    },
                  ]) && d(n.prototype, c),
                  s
                );
              })();
            for (h in ((o.instance = null), (o.disableFriendlyErrors = !1), r))
              o.prototype[h] = r[h];
            (o.VERSION = r.VERSION),
              (o.prototype._preloadMethods = {
                loadJSON: o.prototype,
                loadImage: o.prototype,
                loadStrings: o.prototype,
                loadXML: o.prototype,
                loadBytes: o.prototype,
                loadTable: o.prototype,
                loadFont: o.prototype,
                loadModel: o.prototype,
                loadShader: o.prototype,
              }),
              (o.prototype._registeredMethods = {
                init: [],
                pre: [],
                post: [],
                remove: [],
              }),
              (o.prototype._registeredPreloadMethods = {}),
              (y.default = o);
          },
          {
            './constants': 256,
            './shim': 278,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.get-own-property-names': 174,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.for-each': 229,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        268: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = (t = t('./main')) && t.__esModule ? t : { default: t };
            (u.default.Element = function (a, r) {
              (this.elt = a),
                (this._pInst = this._pixelsState = r),
                (this._events = {}),
                (this.width = this.elt.offsetWidth),
                (this.height = this.elt.offsetHeight);
            }),
              (u.default.Element.prototype.parent = function (a) {
                return a === void 0
                  ? this.elt.parentNode
                  : (typeof a == 'string'
                      ? (a[0] === '#' && (a = a.substring(1)),
                        (a = document.getElementById(a)))
                      : a instanceof u.default.Element && (a = a.elt),
                    a.appendChild(this.elt),
                    this);
              }),
              (u.default.Element.prototype.id = function (a) {
                return a === void 0
                  ? this.elt.id
                  : ((this.elt.id = a),
                    (this.width = this.elt.offsetWidth),
                    (this.height = this.elt.offsetHeight),
                    this);
              }),
              (u.default.Element.prototype.class = function (a) {
                return a === void 0
                  ? this.elt.className
                  : ((this.elt.className = a), this);
              }),
              (u.default.Element.prototype.mousePressed = function (a) {
                return (
                  u.default.Element._adjustListener(
                    'mousedown',
                    function (r) {
                      return (
                        this._pInst._setProperty('mouseIsPressed', !0),
                        this._pInst._setMouseButton(r),
                        a.call(this, r)
                      );
                    },
                    this,
                  ),
                  this
                );
              }),
              (u.default.Element.prototype.doubleClicked = function (a) {
                return (
                  u.default.Element._adjustListener('dblclick', a, this), this
                );
              }),
              (u.default.Element.prototype.mouseWheel = function (a) {
                return (
                  u.default.Element._adjustListener('wheel', a, this), this
                );
              }),
              (u.default.Element.prototype.mouseReleased = function (a) {
                return (
                  u.default.Element._adjustListener('mouseup', a, this), this
                );
              }),
              (u.default.Element.prototype.mouseClicked = function (a) {
                return (
                  u.default.Element._adjustListener('click', a, this), this
                );
              }),
              (u.default.Element.prototype.mouseMoved = function (a) {
                return (
                  u.default.Element._adjustListener('mousemove', a, this), this
                );
              }),
              (u.default.Element.prototype.mouseOver = function (a) {
                return (
                  u.default.Element._adjustListener('mouseover', a, this), this
                );
              }),
              (u.default.Element.prototype.mouseOut = function (a) {
                return (
                  u.default.Element._adjustListener('mouseout', a, this), this
                );
              }),
              (u.default.Element.prototype.touchStarted = function (a) {
                return (
                  u.default.Element._adjustListener('touchstart', a, this), this
                );
              }),
              (u.default.Element.prototype.touchMoved = function (a) {
                return (
                  u.default.Element._adjustListener('touchmove', a, this), this
                );
              }),
              (u.default.Element.prototype.touchEnded = function (a) {
                return (
                  u.default.Element._adjustListener('touchend', a, this), this
                );
              }),
              (u.default.Element.prototype.dragOver = function (a) {
                return (
                  u.default.Element._adjustListener('dragover', a, this), this
                );
              }),
              (u.default.Element.prototype.dragLeave = function (a) {
                return (
                  u.default.Element._adjustListener('dragleave', a, this), this
                );
              }),
              (u.default.Element._adjustListener = function (a, r, l) {
                return (
                  r === !1
                    ? u.default.Element._detachListener(a, l)
                    : u.default.Element._attachListener(a, r, l),
                  this
                );
              }),
              (u.default.Element._attachListener = function (a, r, l) {
                l._events[a] && u.default.Element._detachListener(a, l),
                  (r = r.bind(l)),
                  l.elt.addEventListener(a, r, !1),
                  (l._events[a] = r);
              }),
              (u.default.Element._detachListener = function (a, r) {
                var l = r._events[a];
                r.elt.removeEventListener(a, l, !1), (r._events[a] = null);
              }),
              (u.default.Element.prototype._setProperty = function (a, r) {
                this[a] = r;
              }),
              (t = u.default.Element),
              (y.default = t);
          },
          { './main': 267 },
        ],
        269: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.splice'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = (h = t('./main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('./constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            (r.default.Graphics = function (o, s, g, c) {
              var f,
                g = g || l.P2D;
              for (f in ((this.canvas = document.createElement('canvas')),
              (c._userNode || document.body).appendChild(this.canvas),
              r.default.Element.call(this, this.canvas, c),
              r.default.prototype))
                this[f] ||
                  (typeof r.default.prototype[f] == 'function'
                    ? (this[f] = r.default.prototype[f].bind(this))
                    : (this[f] = r.default.prototype[f]));
              return (
                r.default.prototype._initializeInstanceVariables.apply(this),
                (this.width = o),
                (this.height = s),
                (this._pixelDensity = c._pixelDensity),
                g === l.WEBGL
                  ? (this._renderer = new r.default.RendererGL(
                      this.canvas,
                      this,
                      !1,
                    ))
                  : (this._renderer = new r.default.Renderer2D(
                      this.canvas,
                      this,
                      !1,
                    )),
                c._elements.push(this),
                Object.defineProperty(this, 'deltaTime', {
                  get: function () {
                    return this._pInst.deltaTime;
                  },
                }),
                this._renderer.resize(o, s),
                this._renderer._applyDefaults(),
                this
              );
            }),
              (r.default.Graphics.prototype = Object.create(
                r.default.Element.prototype,
              )),
              (r.default.Graphics.prototype.reset = function () {
                this._renderer.resetMatrix(),
                  this._renderer.isP3D && this._renderer._update();
              }),
              (r.default.Graphics.prototype.remove = function () {
                this.elt.parentNode &&
                  this.elt.parentNode.removeChild(this.elt);
                var o,
                  s = this._pInst._elements.indexOf(this);
                for (o in (s !== -1 && this._pInst._elements.splice(s, 1),
                this._events))
                  this.elt.removeEventListener(o, this._events[o]);
              });
            var h = r.default.Graphics;
            y.default = h;
          },
          {
            './constants': 256,
            './main': 267,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        270: [
          function (t, b, y) {
            function u(s) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(s);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var a = (o = t('./main')) && o.__esModule ? o : { default: o },
              r = (function (s) {
                if (s && s.__esModule) return s;
                if (s === null || (d(s) !== 'object' && typeof s != 'function'))
                  return { default: s };
                var n = l();
                if (n && n.has(s)) return n.get(s);
                var c,
                  f = {},
                  g = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (c in s) {
                  var _;
                  Object.prototype.hasOwnProperty.call(s, c) &&
                    ((_ = g ? Object.getOwnPropertyDescriptor(s, c) : null) &&
                    (_.get || _.set)
                      ? Object.defineProperty(f, c, _)
                      : (f[c] = s[c]));
                }
                return (f.default = s), n && n.set(s, f), f;
              })(t('../core/constants'));
            function l() {
              var s;
              return typeof WeakMap != 'function'
                ? null
                : ((s = new WeakMap()),
                  (l = function () {
                    return s;
                  }),
                  s);
            }
            function d(s) {
              return (d =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (n) {
                      return u(n);
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : u(n);
                    })(s);
            }
            function h(s) {
              var n = 0,
                c = 0;
              if (s.offsetParent)
                for (
                  ;
                  (n += s.offsetLeft), (c += s.offsetTop), (s = s.offsetParent);

                );
              else (n += s.offsetLeft), (c += s.offsetTop);
              return [n, c];
            }
            (a.default.Renderer = function (s, n, c) {
              a.default.Element.call(this, s, n),
                (this.canvas = s),
                (this._pixelsState = n),
                c
                  ? ((this._isMainCanvas = !0),
                    this._pInst._setProperty('_curElement', this),
                    this._pInst._setProperty('canvas', this.canvas),
                    this._pInst._setProperty('width', this.width),
                    this._pInst._setProperty('height', this.height))
                  : ((this.canvas.style.display = 'none'), (this._styles = [])),
                (this._textSize = 12),
                (this._textLeading = 15),
                (this._textFont = 'sans-serif'),
                (this._textStyle = r.NORMAL),
                (this._textAscent = null),
                (this._textDescent = null),
                (this._textAlign = r.LEFT),
                (this._textBaseline = r.BASELINE),
                (this._textWrap = r.WORD),
                (this._rectMode = r.CORNER),
                (this._ellipseMode = r.CENTER),
                (this._curveTightness = 0),
                (this._imageMode = r.CORNER),
                (this._tint = null),
                (this._doStroke = !0),
                (this._doFill = !0),
                (this._strokeSet = !1),
                (this._fillSet = !1),
                (this._leadingSet = !1);
            }),
              (a.default.Renderer.prototype = Object.create(
                a.default.Element.prototype,
              )),
              (a.default.Renderer.prototype.push = function () {
                return {
                  properties: {
                    _doStroke: this._doStroke,
                    _strokeSet: this._strokeSet,
                    _doFill: this._doFill,
                    _fillSet: this._fillSet,
                    _tint: this._tint,
                    _imageMode: this._imageMode,
                    _rectMode: this._rectMode,
                    _ellipseMode: this._ellipseMode,
                    _textFont: this._textFont,
                    _textLeading: this._textLeading,
                    _leadingSet: this._leadingSet,
                    _textSize: this._textSize,
                    _textAlign: this._textAlign,
                    _textBaseline: this._textBaseline,
                    _textStyle: this._textStyle,
                    _textWrap: this._textWrap,
                  },
                };
              }),
              (a.default.Renderer.prototype.pop = function (s) {
                s.properties && Object.assign(this, s.properties);
              }),
              (a.default.Renderer.prototype.resize = function (s, n) {
                (this.width = s),
                  (this.height = n),
                  (this.elt.width = s * this._pInst._pixelDensity),
                  (this.elt.height = n * this._pInst._pixelDensity),
                  (this.elt.style.width = ''.concat(s, 'px')),
                  (this.elt.style.height = ''.concat(n, 'px')),
                  this._isMainCanvas &&
                    (this._pInst._setProperty('width', this.width),
                    this._pInst._setProperty('height', this.height));
              }),
              (a.default.Renderer.prototype.get = function (s, n, c, f) {
                var g = this._pixelsState,
                  _ = g._pixelDensity,
                  x = this.canvas;
                if (s === void 0 && n === void 0)
                  (s = n = 0), (c = g.width), (f = g.height);
                else if (((s *= _), (n *= _), c === void 0 && f === void 0))
                  return s < 0 || n < 0 || s >= x.width || n >= x.height
                    ? [0, 0, 0, 0]
                    : this._getPixel(s, n);
                return (
                  (g = new a.default.Image(c, f)),
                  g.canvas
                    .getContext('2d')
                    .drawImage(x, s, n, c * _, f * _, 0, 0, c, f),
                  g
                );
              }),
              (a.default.Renderer.prototype.textLeading = function (s) {
                return typeof s == 'number'
                  ? (this._setProperty('_leadingSet', !0),
                    this._setProperty('_textLeading', s),
                    this._pInst)
                  : this._textLeading;
              }),
              (a.default.Renderer.prototype.textSize = function (s) {
                return typeof s == 'number'
                  ? (this._setProperty('_textSize', s),
                    this._leadingSet ||
                      this._setProperty(
                        '_textLeading',
                        s * r._DEFAULT_LEADMULT,
                      ),
                    this._applyTextProperties())
                  : this._textSize;
              }),
              (a.default.Renderer.prototype.textStyle = function (s) {
                return s
                  ? ((s !== r.NORMAL &&
                      s !== r.ITALIC &&
                      s !== r.BOLD &&
                      s !== r.BOLDITALIC) ||
                      this._setProperty('_textStyle', s),
                    this._applyTextProperties())
                  : this._textStyle;
              }),
              (a.default.Renderer.prototype.textAscent = function () {
                return (
                  this._textAscent === null && this._updateTextMetrics(),
                  this._textAscent
                );
              }),
              (a.default.Renderer.prototype.textDescent = function () {
                return (
                  this._textDescent === null && this._updateTextMetrics(),
                  this._textDescent
                );
              }),
              (a.default.Renderer.prototype.textAlign = function (s, n) {
                return s !== void 0
                  ? (this._setProperty('_textAlign', s),
                    n !== void 0 && this._setProperty('_textBaseline', n),
                    this._applyTextProperties())
                  : {
                      horizontal: this._textAlign,
                      vertical: this._textBaseline,
                    };
              }),
              (a.default.Renderer.prototype.textWrap = function (s) {
                return this._setProperty('_textWrap', s), this._textWrap;
              }),
              (a.default.Renderer.prototype.text = function (s, n, c, f, g) {
                var _,
                  x,
                  j,
                  v,
                  M = this._pInst,
                  C = this._textWrap,
                  k = Number.MAX_VALUE,
                  A = c;
                if ((this._doFill || this._doStroke) && s !== void 0) {
                  if (
                    ((_ = (s = (s =
                      typeof s != 'string' ? s.toString() : s).replace(
                      /(\t)/g,
                      '  ',
                    )).split(`
`)),
                    f !== void 0)
                  ) {
                    switch (
                      (this._rectMode === r.CENTER && (n -= f / 2),
                      this._textAlign)
                    ) {
                      case r.CENTER:
                        n += f / 2;
                        break;
                      case r.RIGHT:
                        n += f;
                    }
                    if (g !== void 0) {
                      this._rectMode === r.CENTER &&
                        ((c -= g / 2), (A -= g / 2));
                      var s = c,
                        R = M.textAscent();
                      switch (this._textBaseline) {
                        case r.BOTTOM:
                          (v = c + g), (c = Math.max(v, c)), (A += R);
                          break;
                        case r.CENTER:
                          (v = c + g / 2), (c = Math.max(v, c)), (A += R / 2);
                      }
                      (k = c + g - R),
                        this._textBaseline === r.CENTER && (k = s + g - R / 2);
                    } else {
                      if (this._textBaseline === r.BOTTOM)
                        return console.warn(
                          'textAlign(*, BOTTOM) requires x, y, width and height',
                        );
                      if (this._textBaseline === r.CENTER)
                        return console.warn(
                          'textAlign(*, CENTER) requires x, y, width and height',
                        );
                    }
                    if (C === r.WORD) {
                      for (var O = [], D = 0; D < _.length; D++) {
                        for (
                          var N = '', U = _[D].split(' '), H = 0;
                          H < U.length;
                          H++
                        )
                          (x = ''.concat(N + U[H]) + ' '),
                            (N =
                              f < (j = this.textWidth(x)) && 0 < N.length
                                ? (O.push(N), ''.concat(U[H]) + ' ')
                                : x);
                        O.push(N);
                      }
                      var q = 0;
                      this._textBaseline === r.CENTER
                        ? (q = ((O.length - 1) * M.textLeading()) / 2)
                        : this._textBaseline === r.BOTTOM &&
                          (q = (O.length - 1) * M.textLeading());
                      for (var z = 0; z < _.length; z++) {
                        (N = ''), (U = _[z].split(' '));
                        for (var X = 0; X < U.length; X++)
                          (x = ''.concat(N + U[X]) + ' '),
                            f < (j = this.textWidth(x)) && 0 < N.length
                              ? (this._renderText(M, N.trim(), n, c - q, k, A),
                                (N = ''.concat(U[X]) + ' '),
                                (c += M.textLeading()))
                              : (N = x);
                        this._renderText(M, N.trim(), n, c - q, k, A),
                          (c += M.textLeading());
                      }
                    } else {
                      for (var W = [], Z = 0; Z < _.length; Z++)
                        for (
                          var $ = _[Z].split((N = '')), ae = 0;
                          ae < $.length;
                          ae++
                        )
                          (x = ''.concat(N + $[ae])),
                            (j = this.textWidth(x)) <= f
                              ? (N += $[ae])
                              : f < j &&
                                0 < N.length &&
                                (W.push(N), (N = ''.concat($[ae])));
                      W.push(N);
                      var P = 0;
                      this._textBaseline === r.CENTER
                        ? (P = ((W.length - 1) * M.textLeading()) / 2)
                        : this._textBaseline === r.BOTTOM &&
                          (P = (W.length - 1) * M.textLeading());
                      for (var L = 0; L < _.length; L++) {
                        $ = _[L].split((N = ''));
                        for (var B = 0; B < $.length; B++)
                          (x = ''.concat(N + $[B])),
                            (j = this.textWidth(x)) <= f
                              ? (N += $[B])
                              : f < j &&
                                0 < N.length &&
                                (this._renderText(M, N.trim(), n, c - P, k, A),
                                (c += M.textLeading()),
                                (N = ''.concat($[B])));
                      }
                      this._renderText(M, N.trim(), n, c - P, k, A),
                        (c += M.textLeading());
                    }
                  } else {
                    var Y = 0;
                    this._textBaseline === r.CENTER
                      ? (Y = ((_.length - 1) * M.textLeading()) / 2)
                      : this._textBaseline === r.BOTTOM &&
                        (Y = (_.length - 1) * M.textLeading());
                    for (var ee = 0; ee < _.length; ee++)
                      this._renderText(M, _[ee], n, c - Y, k, A - Y),
                        (c += M.textLeading());
                  }
                  return M;
                }
              }),
              (a.default.Renderer.prototype._applyDefaults = function () {
                return this;
              }),
              (a.default.Renderer.prototype._isOpenType = function () {
                var s =
                  0 < arguments.length && arguments[0] !== void 0
                    ? arguments[0]
                    : this._textFont;
                return d(s) === 'object' && s.font && s.font.supported;
              }),
              (a.default.Renderer.prototype._updateTextMetrics = function () {
                var s, n, c, f, g, _;
                return (
                  this._isOpenType()
                    ? (this._setProperty(
                        '_textAscent',
                        this._textFont._textAscent(),
                      ),
                      this._setProperty(
                        '_textDescent',
                        this._textFont._textDescent(),
                      ))
                    : (((s = document.createElement('span')).style.fontFamily =
                        this._textFont),
                      (s.style.fontSize = ''.concat(this._textSize, 'px')),
                      (s.innerHTML = 'ABCjgq|'),
                      ((_ = document.createElement('div')).style.display =
                        'inline-block'),
                      (_.style.width = '1px'),
                      (_.style.height = '0px'),
                      (f =
                        ((n = document.createElement('div')).appendChild(s),
                        n.appendChild(_),
                        (n.style.height = '0px'),
                        (n.style.overflow = 'hidden'),
                        document.body.appendChild(n),
                        (_.style.verticalAlign = 'baseline'),
                        h(_))),
                      (g = h(s)),
                      (c = f[1] - g[1]),
                      (f = ((_.style.verticalAlign = 'bottom'), h(_))),
                      (g = h(s)),
                      (_ = f[1] - g[1] - c),
                      document.body.removeChild(n),
                      this._setProperty('_textAscent', c),
                      this._setProperty('_textDescent', _)),
                  this
                );
              });
            var o = a.default.Renderer;
            y.default = o;
          },
          {
            '../core/constants': 256,
            './main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.number.constructor': 169,
            'core-js/modules/es.object.assign': 172,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        271: [
          function (t, b, y) {
            function u(s) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(s);
            }
            function a(s) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (n) {
                      return u(n);
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : u(n);
                    })(s);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.number.to-fixed'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.number.to-fixed'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = (o = t('./main')) && o.__esModule ? o : { default: o },
              l = (function (s) {
                if (s && s.__esModule) return s;
                if (s === null || (a(s) !== 'object' && typeof s != 'function'))
                  return { default: s };
                var n = d();
                if (n && n.has(s)) return n.get(s);
                var c,
                  f = {},
                  g = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (c in s) {
                  var _;
                  Object.prototype.hasOwnProperty.call(s, c) &&
                    ((_ = g ? Object.getOwnPropertyDescriptor(s, c) : null) &&
                    (_.get || _.set)
                      ? Object.defineProperty(f, c, _)
                      : (f[c] = s[c]));
                }
                return (f.default = s), n && n.set(s, f), f;
              })(t('./constants'));
            function d() {
              var s;
              return typeof WeakMap != 'function'
                ? null
                : ((s = new WeakMap()),
                  (d = function () {
                    return s;
                  }),
                  s);
            }
            t('./p5.Renderer');
            var h = 'rgba(0,0,0,0)',
              o =
                ((r.default.Renderer2D = function (s, n, c) {
                  return (
                    r.default.Renderer.call(this, s, n, c),
                    (this.drawingContext = this.canvas.getContext('2d')),
                    this._pInst._setProperty(
                      'drawingContext',
                      this.drawingContext,
                    ),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype = Object.create(
                  r.default.Renderer.prototype,
                )),
                (r.default.Renderer2D.prototype._applyDefaults = function () {
                  (this._cachedFillStyle = this._cachedStrokeStyle = void 0),
                    (this._cachedBlendMode = l.BLEND),
                    this._setFill(l._DEFAULT_FILL),
                    this._setStroke(l._DEFAULT_STROKE),
                    (this.drawingContext.lineCap = l.ROUND),
                    (this.drawingContext.font = 'normal 12px sans-serif');
                }),
                (r.default.Renderer2D.prototype.resize = function (s, n) {
                  r.default.Renderer.prototype.resize.call(this, s, n),
                    this.drawingContext.scale(
                      this._pInst._pixelDensity,
                      this._pInst._pixelDensity,
                    );
                }),
                (r.default.Renderer2D.prototype.background = function () {
                  var s, n;
                  this.drawingContext.save(),
                    this.resetMatrix(),
                    (arguments.length <= 0 ? void 0 : arguments[0]) instanceof
                    r.default.Image
                      ? 0 <= (arguments.length <= 1 ? void 0 : arguments[1])
                        ? ((s = arguments.length <= 0 ? void 0 : arguments[0]),
                          (this.drawingContext.globalAlpha =
                            (arguments.length <= 1 ? void 0 : arguments[1]) /
                            255),
                          this._pInst.image(s, 0, 0, this.width, this.height))
                        : this._pInst.image(
                            arguments.length <= 0 ? void 0 : arguments[0],
                            0,
                            0,
                            this.width,
                            this.height,
                          )
                      : ((s = this._getFill()),
                        (n = (n = this._pInst).color.apply(n, arguments)),
                        this._pInst._addAccsOutput() &&
                          this._pInst._accsBackground(n.levels),
                        (n = n.toString()),
                        this._setFill(n),
                        this._isErasing &&
                          this.blendMode(this._cachedBlendMode),
                        this.drawingContext.fillRect(
                          0,
                          0,
                          this.width,
                          this.height,
                        ),
                        this._setFill(s),
                        this._isErasing && this._pInst.erase()),
                    this.drawingContext.restore();
                }),
                (r.default.Renderer2D.prototype.clear = function () {
                  this.drawingContext.save(),
                    this.resetMatrix(),
                    this.drawingContext.clearRect(
                      0,
                      0,
                      this.width,
                      this.height,
                    ),
                    this.drawingContext.restore();
                }),
                (r.default.Renderer2D.prototype.fill = function () {
                  var s = (s = this._pInst).color.apply(s, arguments);
                  this._setFill(s.toString()),
                    this._pInst._addAccsOutput() &&
                      this._pInst._accsCanvasColors('fill', s.levels);
                }),
                (r.default.Renderer2D.prototype.stroke = function () {
                  var s = (s = this._pInst).color.apply(s, arguments);
                  this._setStroke(s.toString()),
                    this._pInst._addAccsOutput() &&
                      this._pInst._accsCanvasColors('stroke', s.levels);
                }),
                (r.default.Renderer2D.prototype.erase = function (s, n) {
                  this._isErasing ||
                    ((this._cachedFillStyle = this.drawingContext.fillStyle),
                    (s = this._pInst.color(255, s).toString()),
                    (this.drawingContext.fillStyle = s),
                    (this._cachedStrokeStyle = this.drawingContext.strokeStyle),
                    (s = this._pInst.color(255, n).toString()),
                    (this.drawingContext.strokeStyle = s),
                    (n = this._cachedBlendMode),
                    this.blendMode(l.REMOVE),
                    (this._cachedBlendMode = n),
                    (this._isErasing = !0));
                }),
                (r.default.Renderer2D.prototype.noErase = function () {
                  this._isErasing &&
                    ((this.drawingContext.fillStyle = this._cachedFillStyle),
                    (this.drawingContext.strokeStyle = this._cachedStrokeStyle),
                    this.blendMode(this._cachedBlendMode),
                    (this._isErasing = !1));
                }),
                (r.default.Renderer2D.prototype.image = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x,
                  j,
                  v,
                ) {
                  s.gifProperties && s._animateGif(this._pInst);
                  try {
                    r.default.MediaElement &&
                      s instanceof r.default.MediaElement &&
                      s._ensureCanvas();
                    var M =
                        (M =
                          this._tint && s.canvas
                            ? this._getTintedImageCanvas(s)
                            : M) ||
                        s.canvas ||
                        s.elt,
                      C = 1;
                    s.width && 0 < s.width && (C = M.width / s.width),
                      this._isErasing && this.blendMode(this._cachedBlendMode),
                      this.drawingContext.drawImage(
                        M,
                        C * n,
                        C * c,
                        C * f,
                        C * g,
                        _,
                        x,
                        j,
                        v,
                      ),
                      this._isErasing && this._pInst.erase();
                  } catch (k) {
                    if (k.name !== 'NS_ERROR_NOT_AVAILABLE') throw k;
                  }
                }),
                (r.default.Renderer2D.prototype._getTintedImageCanvas =
                  function (s) {
                    if (!s.canvas) return s;
                    s.tintCanvas ||
                      (s.tintCanvas = document.createElement('canvas')),
                      s.tintCanvas.width !== s.canvas.width &&
                        (s.tintCanvas.width = s.canvas.width),
                      s.tintCanvas.height !== s.canvas.height &&
                        (s.tintCanvas.height = s.canvas.height);
                    var n = s.tintCanvas.getContext('2d');
                    return (
                      n.save(),
                      n.clearRect(0, 0, s.canvas.width, s.canvas.height),
                      (this._tint[0] < 255 ||
                        this._tint[1] < 255 ||
                        this._tint[2] < 255) &&
                        (n.drawImage(s.canvas, 0, 0),
                        (n.globalCompositeOperation = 'luminosity'),
                        n.drawImage(s.canvas, 0, 0),
                        (n.globalCompositeOperation = 'color'),
                        n.drawImage(s.canvas, 0, 0),
                        (n.globalCompositeOperation = 'multiply'),
                        (n.fillStyle = 'rgb('.concat(
                          this._tint.slice(0, 3).join(', '),
                          ')',
                        )),
                        n.fillRect(0, 0, s.canvas.width, s.canvas.height),
                        (n.globalCompositeOperation = 'destination-in')),
                      (n.globalAlpha = this._tint[3] / 255),
                      n.drawImage(s.canvas, 0, 0),
                      n.restore(),
                      s.tintCanvas
                    );
                  }),
                (r.default.Renderer2D.prototype.blendMode = function (s) {
                  if (s === l.SUBTRACT)
                    console.warn(
                      'blendMode(SUBTRACT) only works in WEBGL mode.',
                    );
                  else {
                    if (
                      s !== l.BLEND &&
                      s !== l.REMOVE &&
                      s !== l.DARKEST &&
                      s !== l.LIGHTEST &&
                      s !== l.DIFFERENCE &&
                      s !== l.MULTIPLY &&
                      s !== l.EXCLUSION &&
                      s !== l.SCREEN &&
                      s !== l.REPLACE &&
                      s !== l.OVERLAY &&
                      s !== l.HARD_LIGHT &&
                      s !== l.SOFT_LIGHT &&
                      s !== l.DODGE &&
                      s !== l.BURN &&
                      s !== l.ADD
                    )
                      throw new Error('Mode '.concat(s, ' not recognized.'));
                    (this._cachedBlendMode = s),
                      (this.drawingContext.globalCompositeOperation = s);
                  }
                }),
                (r.default.Renderer2D.prototype.blend = function () {
                  for (
                    var s = this.drawingContext.globalCompositeOperation,
                      n = arguments.length,
                      c = new Array(n),
                      f = 0;
                    f < n;
                    f++
                  )
                    c[f] = arguments[f];
                  var g = c[c.length - 1],
                    _ = Array.prototype.slice.call(c, 0, c.length - 1);
                  (this.drawingContext.globalCompositeOperation = g),
                    r.default.prototype.copy.apply(this, _),
                    (this.drawingContext.globalCompositeOperation = s);
                }),
                (r.default.Renderer2D.prototype._getPixel = function (s, n) {
                  return (
                    (s = this.drawingContext.getImageData(s, n, 1, 1).data),
                    [s[0], s[1], s[2], s[3]]
                  );
                }),
                (r.default.Renderer2D.prototype.loadPixels = function () {
                  var s = this._pixelsState,
                    n = s._pixelDensity,
                    c = this.width * n,
                    n = this.height * n,
                    c = this.drawingContext.getImageData(0, 0, c, n);
                  s._setProperty('imageData', c),
                    s._setProperty('pixels', c.data);
                }),
                (r.default.Renderer2D.prototype.set = function (s, n, c) {
                  (s = Math.floor(s)), (n = Math.floor(n));
                  var f = this._pixelsState;
                  if (c instanceof r.default.Image)
                    this.drawingContext.save(),
                      this.drawingContext.setTransform(1, 0, 0, 1, 0, 0),
                      this.drawingContext.scale(
                        f._pixelDensity,
                        f._pixelDensity,
                      ),
                      this.drawingContext.clearRect(s, n, c.width, c.height),
                      this.drawingContext.drawImage(c.canvas, s, n),
                      this.drawingContext.restore();
                  else {
                    var g = 0,
                      _ = 0,
                      x = 0,
                      j = 0,
                      v =
                        4 *
                        (n * f._pixelDensity * (this.width * f._pixelDensity) +
                          s * f._pixelDensity);
                    if (
                      (f.imageData || f.loadPixels.call(f),
                      typeof c == 'number')
                    )
                      v < f.pixels.length && ((x = _ = g = c), (j = 255));
                    else if (c instanceof Array) {
                      if (c.length < 4)
                        throw new Error(
                          'pixel array must be of the form [R, G, B, A]',
                        );
                      v < f.pixels.length &&
                        ((g = c[0]), (_ = c[1]), (x = c[2]), (j = c[3]));
                    } else
                      c instanceof r.default.Color &&
                        v < f.pixels.length &&
                        ((g = c.levels[0]),
                        (_ = c.levels[1]),
                        (x = c.levels[2]),
                        (j = c.levels[3]));
                    for (var M = 0; M < f._pixelDensity; M++)
                      for (var C = 0; C < f._pixelDensity; C++)
                        (v =
                          4 *
                          ((n * f._pixelDensity + C) *
                            this.width *
                            f._pixelDensity +
                            (s * f._pixelDensity + M))),
                          (f.pixels[v] = g),
                          (f.pixels[v + 1] = _),
                          (f.pixels[v + 2] = x),
                          (f.pixels[v + 3] = j);
                  }
                }),
                (r.default.Renderer2D.prototype.updatePixels = function (
                  s,
                  n,
                  c,
                  f,
                ) {
                  var g = this._pixelsState,
                    _ = g._pixelDensity;
                  s === void 0 &&
                    n === void 0 &&
                    c === void 0 &&
                    f === void 0 &&
                    ((n = s = 0), (c = this.width), (f = this.height)),
                    (s *= _),
                    (n *= _),
                    (c *= _),
                    (f *= _),
                    this.gifProperties &&
                      (this.gifProperties.frames[
                        this.gifProperties.displayIndex
                      ].image = g.imageData),
                    this.drawingContext.putImageData(
                      g.imageData,
                      s,
                      n,
                      0,
                      0,
                      c,
                      f,
                    );
                }),
                (r.default.Renderer2D.prototype._acuteArcToBezier = function (
                  s,
                  n,
                ) {
                  var _ = n / 2,
                    c = Math.cos(_),
                    j = Math.sin(_),
                    f = 1 / Math.tan(_),
                    _ = s + _,
                    g = Math.cos(_),
                    _ = Math.sin(_),
                    x = (4 - c) / 3,
                    j = j + (c - x) * f;
                  return {
                    ax: Math.cos(s).toFixed(7),
                    ay: Math.sin(s).toFixed(7),
                    bx: (x * g + j * _).toFixed(7),
                    by: (x * _ - j * g).toFixed(7),
                    cx: (x * g - j * _).toFixed(7),
                    cy: (x * _ + j * g).toFixed(7),
                    dx: Math.cos(s + n).toFixed(7),
                    dy: Math.sin(s + n).toFixed(7),
                  };
                }),
                (r.default.Renderer2D.prototype.arc = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x,
                ) {
                  var j,
                    v = this.drawingContext,
                    M = c / 2,
                    C = f / 2,
                    k = [];
                  for (s += M, n += C; 1e-5 <= _ - g; )
                    (j = Math.min(_ - g, l.HALF_PI)),
                      k.push(this._acuteArcToBezier(g, j)),
                      (g += j);
                  return (
                    this._doFill &&
                      (v.beginPath(),
                      k.forEach(function (A, R) {
                        R === 0 && v.moveTo(s + A.ax * M, n + A.ay * C),
                          v.bezierCurveTo(
                            s + A.bx * M,
                            n + A.by * C,
                            s + A.cx * M,
                            n + A.cy * C,
                            s + A.dx * M,
                            n + A.dy * C,
                          );
                      }),
                      (x !== l.PIE && x != null) || v.lineTo(s, n),
                      v.closePath(),
                      v.fill()),
                    this._doStroke &&
                      (v.beginPath(),
                      k.forEach(function (A, R) {
                        R === 0 && v.moveTo(s + A.ax * M, n + A.ay * C),
                          v.bezierCurveTo(
                            s + A.bx * M,
                            n + A.by * C,
                            s + A.cx * M,
                            n + A.cy * C,
                            s + A.dx * M,
                            n + A.dy * C,
                          );
                      }),
                      x === l.PIE
                        ? (v.lineTo(s, n), v.closePath())
                        : x === l.CHORD && v.closePath(),
                      v.stroke()),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.ellipse = function (k) {
                  var n = this.drawingContext,
                    c = this._doFill,
                    f = this._doStroke,
                    g = parseFloat(k[0]),
                    _ = parseFloat(k[1]),
                    C = parseFloat(k[2]),
                    k = parseFloat(k[3]);
                  if (c && !f) {
                    if (this._getFill() === h) return this;
                  } else if (!c && f && this._getStroke() === h) return this;
                  var x = (C / 2) * 0.5522847498,
                    j = (k / 2) * 0.5522847498,
                    v = g + C,
                    M = _ + k,
                    C = g + C / 2,
                    k = _ + k / 2;
                  n.beginPath(),
                    n.moveTo(g, k),
                    n.bezierCurveTo(g, k - j, C - x, _, C, _),
                    n.bezierCurveTo(C + x, _, v, k - j, v, k),
                    n.bezierCurveTo(v, k + j, C + x, M, C, M),
                    n.bezierCurveTo(C - x, M, g, k + j, g, k),
                    c && n.fill(),
                    f && n.stroke();
                }),
                (r.default.Renderer2D.prototype.line = function (s, n, c, f) {
                  var g = this.drawingContext;
                  return (
                    this._doStroke &&
                      this._getStroke() !== h &&
                      (g.beginPath(),
                      g.moveTo(s, n),
                      g.lineTo(c, f),
                      g.stroke()),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.point = function (s, n) {
                  var c,
                    f,
                    g = this.drawingContext;
                  return !this._doStroke || this._getStroke() === h
                    ? this
                    : ((c = this._getStroke()),
                      (f = this._getFill()),
                      this._setFill(c),
                      g.beginPath(),
                      g.arc(s, n, g.lineWidth / 2, 0, l.TWO_PI, !1),
                      g.fill(),
                      void this._setFill(f));
                }),
                (r.default.Renderer2D.prototype.quad = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x,
                  j,
                ) {
                  var v = this.drawingContext,
                    M = this._doFill,
                    C = this._doStroke;
                  if (M && !C) {
                    if (this._getFill() === h) return this;
                  } else if (!M && C && this._getStroke() === h) return this;
                  return (
                    v.beginPath(),
                    v.moveTo(s, n),
                    v.lineTo(c, f),
                    v.lineTo(g, _),
                    v.lineTo(x, j),
                    v.closePath(),
                    M && v.fill(),
                    C && v.stroke(),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.rect = function (C) {
                  var n,
                    c,
                    f = C[0],
                    g = C[1],
                    _ = C[2],
                    x = C[3],
                    j = C[4],
                    v = C[5],
                    M = C[6],
                    C = C[7],
                    k = this.drawingContext,
                    A = this._doFill,
                    R = this._doStroke;
                  if (A && !R) {
                    if (this._getFill() === h) return this;
                  } else if (!A && R && this._getStroke() === h) return this;
                  return (
                    k.beginPath(),
                    j === void 0
                      ? k.rect(f, g, _, x)
                      : (v === void 0 && (v = j),
                        M === void 0 && (M = v),
                        C === void 0 && (C = M),
                        (R = (A = Math.abs(_)) / 2),
                        (c = (n = Math.abs(x)) / 2),
                        n < 2 * (j = A < 2 * j ? R : j) && (j = c),
                        n < 2 * (v = A < 2 * v ? R : v) && (v = c),
                        n < 2 * (M = A < 2 * M ? R : M) && (M = c),
                        n < 2 * (C = A < 2 * C ? R : C) && (C = c),
                        k.beginPath(),
                        k.moveTo(f + j, g),
                        k.arcTo(f + _, g, f + _, g + x, v),
                        k.arcTo(f + _, g + x, f, g + x, M),
                        k.arcTo(f, g + x, f, g, C),
                        k.arcTo(f, g, f + _, g, j),
                        k.closePath()),
                    this._doFill && k.fill(),
                    this._doStroke && k.stroke(),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.triangle = function (M) {
                  var n = this.drawingContext,
                    c = this._doFill,
                    f = this._doStroke,
                    g = M[0],
                    _ = M[1],
                    x = M[2],
                    j = M[3],
                    v = M[4],
                    M = M[5];
                  if (c && !f) {
                    if (this._getFill() === h) return this;
                  } else if (!c && f && this._getStroke() === h) return this;
                  n.beginPath(),
                    n.moveTo(g, _),
                    n.lineTo(x, j),
                    n.lineTo(v, M),
                    n.closePath(),
                    c && n.fill(),
                    f && n.stroke();
                }),
                (r.default.Renderer2D.prototype.endShape = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x,
                ) {
                  if (n.length !== 0 && (this._doStroke || this._doFill)) {
                    var j,
                      v,
                      M,
                      C = s === l.CLOSE,
                      k = (C && !_ && n.push(n[0]), n.length);
                    if (!c || (x !== l.POLYGON && x !== null))
                      if (!f || (x !== l.POLYGON && x !== null))
                        if (!g || (x !== l.POLYGON && x !== null))
                          if (x === l.POINTS)
                            for (v = 0; v < k; v++)
                              (j = n[v]),
                                this._doStroke && this._pInst.stroke(j[6]),
                                this._pInst.point(j[0], j[1]);
                          else if (x === l.LINES)
                            for (v = 0; v + 1 < k; v += 2)
                              (j = n[v]),
                                this._doStroke &&
                                  this._pInst.stroke(n[v + 1][6]),
                                this._pInst.line(
                                  j[0],
                                  j[1],
                                  n[v + 1][0],
                                  n[v + 1][1],
                                );
                          else if (x === l.TRIANGLES)
                            for (v = 0; v + 2 < k; v += 3)
                              (j = n[v]),
                                this.drawingContext.beginPath(),
                                this.drawingContext.moveTo(j[0], j[1]),
                                this.drawingContext.lineTo(
                                  n[v + 1][0],
                                  n[v + 1][1],
                                ),
                                this.drawingContext.lineTo(
                                  n[v + 2][0],
                                  n[v + 2][1],
                                ),
                                this.drawingContext.closePath(),
                                this._doFill &&
                                  (this._pInst.fill(n[v + 2][5]),
                                  this.drawingContext.fill()),
                                this._doStroke &&
                                  (this._pInst.stroke(n[v + 2][6]),
                                  this.drawingContext.stroke());
                          else if (x === l.TRIANGLE_STRIP)
                            for (v = 0; v + 1 < k; v++)
                              (j = n[v]),
                                this.drawingContext.beginPath(),
                                this.drawingContext.moveTo(
                                  n[v + 1][0],
                                  n[v + 1][1],
                                ),
                                this.drawingContext.lineTo(j[0], j[1]),
                                this._doStroke &&
                                  this._pInst.stroke(n[v + 1][6]),
                                this._doFill && this._pInst.fill(n[v + 1][5]),
                                v + 2 < k &&
                                  (this.drawingContext.lineTo(
                                    n[v + 2][0],
                                    n[v + 2][1],
                                  ),
                                  this._doStroke &&
                                    this._pInst.stroke(n[v + 2][6]),
                                  this._doFill &&
                                    this._pInst.fill(n[v + 2][5])),
                                this._doFillStrokeClose(C);
                          else if (x === l.TRIANGLE_FAN) {
                            if (2 < k) {
                              for (
                                this.drawingContext.beginPath(), v = 2;
                                v < k;
                                v++
                              )
                                (j = n[v]),
                                  this.drawingContext.moveTo(n[0][0], n[0][1]),
                                  this.drawingContext.lineTo(
                                    n[v - 1][0],
                                    n[v - 1][1],
                                  ),
                                  this.drawingContext.lineTo(j[0], j[1]),
                                  this.drawingContext.lineTo(n[0][0], n[0][1]),
                                  v < k - 1 &&
                                    ((this._doFill && j[5] !== n[v + 1][5]) ||
                                      (this._doStroke &&
                                        j[6] !== n[v + 1][6])) &&
                                    (this._doFill &&
                                      (this._pInst.fill(j[5]),
                                      this.drawingContext.fill(),
                                      this._pInst.fill(n[v + 1][5])),
                                    this._doStroke &&
                                      (this._pInst.stroke(j[6]),
                                      this.drawingContext.stroke(),
                                      this._pInst.stroke(n[v + 1][6])),
                                    this.drawingContext.closePath(),
                                    this.drawingContext.beginPath());
                              this._doFillStrokeClose(C);
                            }
                          } else if (x === l.QUADS)
                            for (v = 0; v + 3 < k; v += 4) {
                              for (
                                j = n[v],
                                  this.drawingContext.beginPath(),
                                  this.drawingContext.moveTo(j[0], j[1]),
                                  M = 1;
                                M < 4;
                                M++
                              )
                                this.drawingContext.lineTo(
                                  n[v + M][0],
                                  n[v + M][1],
                                );
                              this.drawingContext.lineTo(j[0], j[1]),
                                this._doFill && this._pInst.fill(n[v + 3][5]),
                                this._doStroke &&
                                  this._pInst.stroke(n[v + 3][6]),
                                this._doFillStrokeClose(C);
                            }
                          else if (x === l.QUAD_STRIP) {
                            if (3 < k)
                              for (v = 0; v + 1 < k; v += 2)
                                (j = n[v]),
                                  this.drawingContext.beginPath(),
                                  v + 3 < k
                                    ? (this.drawingContext.moveTo(
                                        n[v + 2][0],
                                        n[v + 2][1],
                                      ),
                                      this.drawingContext.lineTo(j[0], j[1]),
                                      this.drawingContext.lineTo(
                                        n[v + 1][0],
                                        n[v + 1][1],
                                      ),
                                      this.drawingContext.lineTo(
                                        n[v + 3][0],
                                        n[v + 3][1],
                                      ),
                                      this._doFill &&
                                        this._pInst.fill(n[v + 3][5]),
                                      this._doStroke &&
                                        this._pInst.stroke(n[v + 3][6]))
                                    : (this.drawingContext.moveTo(j[0], j[1]),
                                      this.drawingContext.lineTo(
                                        n[v + 1][0],
                                        n[v + 1][1],
                                      )),
                                  this._doFillStrokeClose(C);
                          } else {
                            for (
                              this.drawingContext.beginPath(),
                                this.drawingContext.moveTo(n[0][0], n[0][1]),
                                v = 1;
                              v < k;
                              v++
                            )
                              (j = n[v]).isVert &&
                                (j.moveTo
                                  ? this.drawingContext.moveTo(j[0], j[1])
                                  : this.drawingContext.lineTo(j[0], j[1]));
                            this._doFillStrokeClose(C);
                          }
                        else {
                          for (
                            this.drawingContext.beginPath(), v = 0;
                            v < k;
                            v++
                          )
                            n[v].isVert
                              ? n[v].moveTo
                                ? this.drawingContext.moveTo(n[v][0], n[v][1])
                                : this.drawingContext.lineTo(n[v][0], n[v][1])
                              : this.drawingContext.quadraticCurveTo(
                                  n[v][0],
                                  n[v][1],
                                  n[v][2],
                                  n[v][3],
                                );
                          this._doFillStrokeClose(C);
                        }
                      else {
                        for (this.drawingContext.beginPath(), v = 0; v < k; v++)
                          n[v].isVert
                            ? n[v].moveTo
                              ? this.drawingContext.moveTo(n[v][0], n[v][1])
                              : this.drawingContext.lineTo(n[v][0], n[v][1])
                            : this.drawingContext.bezierCurveTo(
                                n[v][0],
                                n[v][1],
                                n[v][2],
                                n[v][3],
                                n[v][4],
                                n[v][5],
                              );
                        this._doFillStrokeClose(C);
                      }
                    else if (3 < k) {
                      var A = [],
                        R = 1 - this._curveTightness;
                      for (
                        this.drawingContext.beginPath(),
                          this.drawingContext.moveTo(n[1][0], n[1][1]),
                          v = 1;
                        v + 2 < k;
                        v++
                      )
                        (j = n[v]),
                          (A[0] = [j[0], j[1]]),
                          (A[1] = [
                            j[0] + (R * n[v + 1][0] - R * n[v - 1][0]) / 6,
                            j[1] + (R * n[v + 1][1] - R * n[v - 1][1]) / 6,
                          ]),
                          (A[2] = [
                            n[v + 1][0] + (R * n[v][0] - R * n[v + 2][0]) / 6,
                            n[v + 1][1] + (R * n[v][1] - R * n[v + 2][1]) / 6,
                          ]),
                          (A[3] = [n[v + 1][0], n[v + 1][1]]),
                          this.drawingContext.bezierCurveTo(
                            A[1][0],
                            A[1][1],
                            A[2][0],
                            A[2][1],
                            A[3][0],
                            A[3][1],
                          );
                      C && this.drawingContext.lineTo(n[v + 1][0], n[v + 1][1]),
                        this._doFillStrokeClose(C);
                    }
                    (_ = g = f = c = !1), C && n.pop();
                  }
                  return this;
                }),
                (r.default.Renderer2D.prototype.strokeCap = function (s) {
                  return (
                    (s !== l.ROUND && s !== l.SQUARE && s !== l.PROJECT) ||
                      (this.drawingContext.lineCap = s),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.strokeJoin = function (s) {
                  return (
                    (s !== l.ROUND && s !== l.BEVEL && s !== l.MITER) ||
                      (this.drawingContext.lineJoin = s),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.strokeWeight = function (s) {
                  return (
                    (this.drawingContext.lineWidth =
                      s === void 0 || s === 0 ? 1e-4 : s),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype._getFill = function () {
                  return (
                    this._cachedFillStyle ||
                      (this._cachedFillStyle = this.drawingContext.fillStyle),
                    this._cachedFillStyle
                  );
                }),
                (r.default.Renderer2D.prototype._setFill = function (s) {
                  s !== this._cachedFillStyle &&
                    ((this.drawingContext.fillStyle = s),
                    (this._cachedFillStyle = s));
                }),
                (r.default.Renderer2D.prototype._getStroke = function () {
                  return (
                    this._cachedStrokeStyle ||
                      (this._cachedStrokeStyle =
                        this.drawingContext.strokeStyle),
                    this._cachedStrokeStyle
                  );
                }),
                (r.default.Renderer2D.prototype._setStroke = function (s) {
                  s !== this._cachedStrokeStyle &&
                    ((this.drawingContext.strokeStyle = s),
                    (this._cachedStrokeStyle = s));
                }),
                (r.default.Renderer2D.prototype.bezier = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x,
                  j,
                ) {
                  return (
                    this._pInst.beginShape(),
                    this._pInst.vertex(s, n),
                    this._pInst.bezierVertex(c, f, g, _, x, j),
                    this._pInst.endShape(),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.curve = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x,
                  j,
                ) {
                  return (
                    this._pInst.beginShape(),
                    this._pInst.curveVertex(s, n),
                    this._pInst.curveVertex(c, f),
                    this._pInst.curveVertex(g, _),
                    this._pInst.curveVertex(x, j),
                    this._pInst.endShape(),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype._doFillStrokeClose = function (
                  s,
                ) {
                  s && this.drawingContext.closePath(),
                    this._doFill && this.drawingContext.fill(),
                    this._doStroke && this.drawingContext.stroke();
                }),
                (r.default.Renderer2D.prototype.applyMatrix = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                ) {
                  this.drawingContext.transform(s, n, c, f, g, _);
                }),
                (r.default.Renderer2D.prototype.resetMatrix = function () {
                  return (
                    this.drawingContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.drawingContext.scale(
                      this._pInst._pixelDensity,
                      this._pInst._pixelDensity,
                    ),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.rotate = function (s) {
                  this.drawingContext.rotate(s);
                }),
                (r.default.Renderer2D.prototype.scale = function (s, n) {
                  return this.drawingContext.scale(s, n), this;
                }),
                (r.default.Renderer2D.prototype.translate = function (s, n) {
                  return (
                    s instanceof r.default.Vector && ((n = s.y), (s = s.x)),
                    this.drawingContext.translate(s, n),
                    this
                  );
                }),
                (r.default.Renderer2D.prototype.text = function (
                  s,
                  n,
                  c,
                  x,
                  g,
                ) {
                  x !== void 0 &&
                    this.drawingContext.textBaseline === l.BASELINE &&
                    ((_ = !0), (this.drawingContext.textBaseline = l.TOP));
                  var _,
                    x = r.default.Renderer.prototype.text.apply(
                      this,
                      arguments,
                    );
                  return (
                    _ && (this.drawingContext.textBaseline = l.BASELINE), x
                  );
                }),
                (r.default.Renderer2D.prototype._renderText = function (
                  s,
                  n,
                  c,
                  f,
                  g,
                  _,
                ) {
                  if (!(f < _ || g <= f))
                    return (
                      s.push(),
                      this._isOpenType()
                        ? this._textFont._renderPath(n, c, f, {
                            renderer: this,
                          })
                        : (this._doStroke &&
                            this._strokeSet &&
                            this.drawingContext.strokeText(n, c, f),
                          this._doFill &&
                            (this._fillSet ||
                              this._setFill(l._DEFAULT_TEXT_FILL),
                            this.drawingContext.fillText(n, c, f))),
                      s.pop(),
                      s
                    );
                }),
                (r.default.Renderer2D.prototype.textWidth = function (s) {
                  return this._isOpenType()
                    ? this._textFont._textWidth(s, this._textSize)
                    : this.drawingContext.measureText(s).width;
                }),
                (r.default.Renderer2D.prototype._applyTextProperties =
                  function () {
                    var s,
                      n = this._pInst;
                    return (
                      this._setProperty('_textAscent', null),
                      this._setProperty('_textDescent', null),
                      (s = this._textFont),
                      this._isOpenType() &&
                        ((s = this._textFont.font.familyName),
                        this._setProperty(
                          '_textStyle',
                          this._textFont.font.styleName,
                        )),
                      (this.drawingContext.font = ''
                        .concat(this._textStyle || 'normal', ' ')
                        .concat(this._textSize || 12, 'px ')
                        .concat(s || 'sans-serif')),
                      (this.drawingContext.textAlign = this._textAlign),
                      this._textBaseline === l.CENTER
                        ? (this.drawingContext.textBaseline = l._CTX_MIDDLE)
                        : (this.drawingContext.textBaseline =
                            this._textBaseline),
                      n
                    );
                  }),
                (r.default.Renderer2D.prototype.push = function () {
                  return (
                    this.drawingContext.save(),
                    r.default.Renderer.prototype.push.apply(this)
                  );
                }),
                (r.default.Renderer2D.prototype.pop = function (s) {
                  this.drawingContext.restore(),
                    (this._cachedFillStyle = this.drawingContext.fillStyle),
                    (this._cachedStrokeStyle = this.drawingContext.strokeStyle),
                    r.default.Renderer.prototype.pop.call(this, s);
                }),
                r.default.Renderer2D);
            y.default = o;
          },
          {
            './constants': 256,
            './main': 267,
            './p5.Renderer': 270,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 152,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.number.to-fixed': 171,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        272: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator');
            var u = (t = t('./main')) && t.__esModule ? t : { default: t };
            u.default.prototype._promisePreloads = [];
            function a() {
              return {};
            }
            var r = !(u.default.prototype.registerPromisePreload = function (
              l,
            ) {
              u.default.prototype._promisePreloads.push(l);
            });
            (u.default.prototype._setupPromisePreloads = function () {
              var l = !0,
                d = !1,
                h = void 0;
              try {
                for (
                  var o, s = this._promisePreloads[Symbol.iterator]();
                  !(l = (o = s.next()).done);
                  l = !0
                ) {
                  var n = o.value,
                    c = this,
                    f = n.method,
                    g = n.addCallbacks,
                    _ = n.legacyPreloadSetup,
                    x = n.target || this,
                    j = x[f].bind(x);
                  if (x === u.default.prototype) {
                    if (r) continue;
                    (c = null), (j = x[f]);
                  }
                  (x[f] = this._wrapPromisePreload(c, j, g)),
                    _ &&
                      (x[_.method] = this._legacyPreloadGenerator(c, _, x[f]));
                }
              } catch (v) {
                (d = !0), (h = v);
              } finally {
                try {
                  l || s.return == null || s.return();
                } finally {
                  if (d) throw h;
                }
              }
              r = !0;
            }),
              (u.default.prototype._wrapPromisePreload = function (l, d, h) {
                var o = function () {
                  for (
                    var s = this,
                      n = (this._incrementPreload(), null),
                      c = null,
                      f = arguments.length,
                      g = new Array(f),
                      _ = 0;
                    _ < f;
                    _++
                  )
                    g[_] = arguments[_];
                  if (h)
                    for (
                      var x = g.length - 1;
                      0 <= x && !c && typeof g[x] == 'function';
                      x--
                    )
                      (c = n), (n = g.pop());
                  var j = Promise.resolve(d.apply(this, g));
                  return (
                    n && j.then(n),
                    c && j.catch(c),
                    j.then(function () {
                      return s._decrementPreload();
                    }),
                    j
                  );
                };
                return (o = l ? o.bind(l) : o);
              }),
              (u.default.prototype._legacyPreloadGenerator = function (
                l,
                s,
                h,
              ) {
                var o = s.createBaseObject || a,
                  s = function () {
                    var n = this,
                      c = (this._incrementPreload(), o.apply(this, arguments));
                    return (
                      h.apply(this, arguments).then(function (f) {
                        Object.assign(c, f), n._decrementPreload();
                      }),
                      c
                    );
                  };
                return (s = l ? s.bind(l) : s);
              });
          },
          {
            './main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.assign': 172,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        273: [
          function (t, b, y) {
            function u(s) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(s);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var a = (o = t('./main')) && o.__esModule ? o : { default: o },
              r = (function (s) {
                if (s && s.__esModule) return s;
                if (s === null || (d(s) !== 'object' && typeof s != 'function'))
                  return { default: s };
                var n = l();
                if (n && n.has(s)) return n.get(s);
                var c,
                  f = {},
                  g = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (c in s) {
                  var _;
                  Object.prototype.hasOwnProperty.call(s, c) &&
                    ((_ = g ? Object.getOwnPropertyDescriptor(s, c) : null) &&
                    (_.get || _.set)
                      ? Object.defineProperty(f, c, _)
                      : (f[c] = s[c]));
                }
                return (f.default = s), n && n.set(s, f), f;
              })(t('./constants'));
            function l() {
              var s;
              return typeof WeakMap != 'function'
                ? null
                : ((s = new WeakMap()),
                  (l = function () {
                    return s;
                  }),
                  s);
            }
            function d(s) {
              return (d =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (n) {
                      return u(n);
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : u(n);
                    })(s);
            }
            t('./p5.Graphics'),
              t('./p5.Renderer2D'),
              t('../webgl/p5.RendererGL');
            var h = 'defaultCanvas0',
              o =
                ((a.default.prototype.createCanvas = function (s, n, x) {
                  a.default._validateParameters('createCanvas', arguments);
                  var f,
                    g,
                    _,
                    x = x || r.P2D;
                  if (x === r.WEBGL)
                    (g = document.getElementById(h)) &&
                      (g.parentNode.removeChild(g),
                      (f = this._renderer),
                      (this._elements = this._elements.filter(function (v) {
                        return v !== f;
                      }))),
                      ((g = document.createElement('canvas')).id = h),
                      g.classList.add('p5Canvas');
                  else if (this._defaultGraphicsCreated) g = this.canvas;
                  else {
                    g = document.createElement('canvas');
                    for (
                      var j = 0;
                      document.getElementById('defaultCanvas'.concat(j));

                    )
                      j++;
                    (h = 'defaultCanvas'.concat(j)),
                      (g.id = h),
                      g.classList.add('p5Canvas');
                  }
                  return (
                    this._setupDone ||
                      ((g.dataset.hidden = !0),
                      (g.style.visibility = 'hidden')),
                    (
                      this._userNode ||
                      (document.getElementsByTagName('main').length === 0 &&
                        ((_ = document.createElement('main')),
                        document.body.appendChild(_)),
                      document.getElementsByTagName('main')[0])
                    ).appendChild(g),
                    x === r.WEBGL
                      ? (this._setProperty(
                          '_renderer',
                          new a.default.RendererGL(g, this, !0),
                        ),
                        this._elements.push(this._renderer))
                      : this._defaultGraphicsCreated ||
                        (this._setProperty(
                          '_renderer',
                          new a.default.Renderer2D(g, this, !0),
                        ),
                        (this._defaultGraphicsCreated = !0),
                        this._elements.push(this._renderer)),
                    this._renderer.resize(s, n),
                    this._renderer._applyDefaults(),
                    this._renderer
                  );
                }),
                (a.default.prototype.resizeCanvas = function (s, n, c) {
                  if (
                    (a.default._validateParameters('resizeCanvas', arguments),
                    this._renderer)
                  ) {
                    var f,
                      g,
                      _ = {};
                    for (f in this.drawingContext) {
                      var x = this.drawingContext[f];
                      d(x) !== 'object' && typeof x != 'function' && (_[f] = x);
                    }
                    for (g in (this._renderer.resize(s, n),
                    (this.width = s),
                    (this.height = n),
                    _))
                      try {
                        this.drawingContext[g] = _[g];
                      } catch {}
                    c || this.redraw();
                  }
                  this._addAccsOutput() && this._updateAccsOutput();
                }),
                (a.default.prototype.noCanvas = function () {
                  this.canvas &&
                    this.canvas.parentNode.removeChild(this.canvas);
                }),
                (a.default.prototype.createGraphics = function (s, n, c) {
                  return (
                    a.default._validateParameters('createGraphics', arguments),
                    new a.default.Graphics(s, n, c, this)
                  );
                }),
                (a.default.prototype.blendMode = function (s) {
                  a.default._validateParameters('blendMode', arguments),
                    s === r.NORMAL &&
                      (console.warn(
                        'NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead.',
                      ),
                      (s = r.BLEND)),
                    this._renderer.blendMode(s);
                }),
                a.default);
            y.default = o;
          },
          {
            '../webgl/p5.RendererGL': 321,
            './constants': 256,
            './main': 267,
            './p5.Graphics': 269,
            './p5.Renderer2D': 271,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        274: [
          function (t, b, y) {
            function u(s) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(s);
            }
            function a(s) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (n) {
                      return u(n);
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : u(n);
                    })(s);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.slice'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = o(t('../main')),
              l = (function (s) {
                if (s && s.__esModule) return s;
                if (s === null || (a(s) !== 'object' && typeof s != 'function'))
                  return { default: s };
                var n = h();
                if (n && n.has(s)) return n.get(s);
                var c,
                  f = {},
                  g = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (c in s) {
                  var _;
                  Object.prototype.hasOwnProperty.call(s, c) &&
                    ((_ = g ? Object.getOwnPropertyDescriptor(s, c) : null) &&
                    (_.get || _.set)
                      ? Object.defineProperty(f, c, _)
                      : (f[c] = s[c]));
                }
                return (f.default = s), n && n.set(s, f), f;
              })(t('../constants')),
              d = o(t('../helpers'));
            function h() {
              var s;
              return typeof WeakMap != 'function'
                ? null
                : ((s = new WeakMap()),
                  (h = function () {
                    return s;
                  }),
                  s);
            }
            function o(s) {
              return s && s.__esModule ? s : { default: s };
            }
            t('../friendly_errors/fes_core'),
              t('../friendly_errors/file_errors'),
              t('../friendly_errors/validate_params'),
              (r.default.prototype._normalizeArcAngles = function (
                s,
                n,
                c,
                f,
                g,
              ) {
                var _;
                return (
                  (s -= l.TWO_PI * Math.floor(s / l.TWO_PI)),
                  (n -= l.TWO_PI * Math.floor(n / l.TWO_PI)),
                  (_ = Math.min(Math.abs(s - n), l.TWO_PI - Math.abs(s - n))),
                  g &&
                    ((s =
                      s <= l.HALF_PI
                        ? Math.atan((c / f) * Math.tan(s))
                        : s > l.HALF_PI && s <= 3 * l.HALF_PI
                        ? Math.atan((c / f) * Math.tan(s)) + l.PI
                        : Math.atan((c / f) * Math.tan(s)) + l.TWO_PI),
                    (n =
                      n <= l.HALF_PI
                        ? Math.atan((c / f) * Math.tan(n))
                        : n > l.HALF_PI && n <= 3 * l.HALF_PI
                        ? Math.atan((c / f) * Math.tan(n)) + l.PI
                        : Math.atan((c / f) * Math.tan(n)) + l.TWO_PI)),
                  n < s && (n += l.TWO_PI),
                  { start: s, stop: n, correspondToSamePoint: _ < 1e-5 }
                );
              }),
              (r.default.prototype.arc = function (s, n, c, f, g, _, x, j) {
                return (
                  r.default._validateParameters('arc', arguments),
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    g !== _ &&
                    ((g = this._toRadians(g)),
                    (_ = this._toRadians(_)),
                    (c = Math.abs(c)),
                    (f = Math.abs(f)),
                    (s = d.default.modeAdjust(
                      s,
                      n,
                      c,
                      f,
                      this._renderer._ellipseMode,
                    )),
                    (n = this._normalizeArcAngles(g, _, s.w, s.h, !0))
                      .correspondToSamePoint
                      ? this._renderer.ellipse([s.x, s.y, s.w, s.h, j])
                      : (this._renderer.arc(
                          s.x,
                          s.y,
                          s.w,
                          s.h,
                          n.start,
                          n.stop,
                          x,
                          j,
                        ),
                        (this._accessibleOutputs.grid ||
                          this._accessibleOutputs.text) &&
                          this._accsOutput('arc', [
                            s.x,
                            s.y,
                            s.w,
                            s.h,
                            n.start,
                            n.stop,
                            x,
                          ]))),
                  this
                );
              }),
              (r.default.prototype.ellipse = function (s, n, c, f, g) {
                return (
                  r.default._validateParameters('ellipse', arguments),
                  this._renderEllipse.apply(this, arguments)
                );
              }),
              (r.default.prototype.circle = function () {
                r.default._validateParameters('circle', arguments);
                var s = Array.prototype.slice.call(arguments, 0, 2);
                return (
                  s.push(arguments[2]),
                  s.push(arguments[2]),
                  this._renderEllipse.apply(this, s)
                );
              }),
              (r.default.prototype._renderEllipse = function (s, n, c, f, g) {
                return (
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    (c < 0 && (c = Math.abs(c)),
                    f === void 0 ? (f = c) : f < 0 && (f = Math.abs(f)),
                    (s = d.default.modeAdjust(
                      s,
                      n,
                      c,
                      f,
                      this._renderer._ellipseMode,
                    )),
                    this._renderer.ellipse([s.x, s.y, s.w, s.h, g]),
                    (this._accessibleOutputs.grid ||
                      this._accessibleOutputs.text) &&
                      this._accsOutput('ellipse', [s.x, s.y, s.w, s.h])),
                  this
                );
              }),
              (r.default.prototype.line = function () {
                for (
                  var s, n = arguments.length, c = new Array(n), f = 0;
                  f < n;
                  f++
                )
                  c[f] = arguments[f];
                return (
                  r.default._validateParameters('line', c),
                  this._renderer._doStroke &&
                    (s = this._renderer).line.apply(s, c),
                  (this._accessibleOutputs.grid ||
                    this._accessibleOutputs.text) &&
                    this._accsOutput('line', c),
                  this
                );
              }),
              (r.default.prototype.point = function () {
                for (
                  var s, n = arguments.length, c = new Array(n), f = 0;
                  f < n;
                  f++
                )
                  c[f] = arguments[f];
                return (
                  r.default._validateParameters('point', c),
                  this._renderer._doStroke &&
                    (c.length === 1 && c[0] instanceof r.default.Vector
                      ? this._renderer.point.call(
                          this._renderer,
                          c[0].x,
                          c[0].y,
                          c[0].z,
                        )
                      : ((s = this._renderer).point.apply(s, c),
                        (this._accessibleOutputs.grid ||
                          this._accessibleOutputs.text) &&
                          this._accsOutput('point', c))),
                  this
                );
              }),
              (r.default.prototype.quad = function () {
                for (
                  var s, n = arguments.length, c = new Array(n), f = 0;
                  f < n;
                  f++
                )
                  c[f] = arguments[f];
                return (
                  r.default._validateParameters('quad', c),
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    (this._renderer.isP3D && c.length < 12
                      ? this._renderer.quad.call(
                          this._renderer,
                          c[0],
                          c[1],
                          0,
                          c[2],
                          c[3],
                          0,
                          c[4],
                          c[5],
                          0,
                          c[6],
                          c[7],
                          0,
                          c[8],
                          c[9],
                        )
                      : ((s = this._renderer).quad.apply(s, c),
                        (this._accessibleOutputs.grid ||
                          this._accessibleOutputs.text) &&
                          this._accsOutput('quadrilateral', c))),
                  this
                );
              }),
              (r.default.prototype.rect = function () {
                return (
                  r.default._validateParameters('rect', arguments),
                  this._renderRect.apply(this, arguments)
                );
              }),
              (r.default.prototype.square = function (s, n, c, f, g, _, x) {
                return (
                  r.default._validateParameters('square', arguments),
                  this._renderRect.call(this, s, n, c, c, f, g, _, x)
                );
              }),
              (r.default.prototype._renderRect = function () {
                if (this._renderer._doStroke || this._renderer._doFill) {
                  arguments.length === 3 && (arguments[3] = arguments[2]);
                  for (
                    var s = d.default.modeAdjust(
                        arguments[0],
                        arguments[1],
                        arguments[2],
                        arguments[3],
                        this._renderer._rectMode,
                      ),
                      n = [s.x, s.y, s.w, s.h],
                      c = 4;
                    c < arguments.length;
                    c++
                  )
                    n[c] = arguments[c];
                  this._renderer.rect(n),
                    (this._accessibleOutputs.grid ||
                      this._accessibleOutputs.text) &&
                      this._accsOutput('rectangle', [s.x, s.y, s.w, s.h]);
                }
                return this;
              }),
              (r.default.prototype.triangle = function () {
                for (
                  var s = arguments.length, n = new Array(s), c = 0;
                  c < s;
                  c++
                )
                  n[c] = arguments[c];
                return (
                  r.default._validateParameters('triangle', n),
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    this._renderer.triangle(n),
                  (this._accessibleOutputs.grid ||
                    this._accessibleOutputs.text) &&
                    this._accsOutput('triangle', n),
                  this
                );
              }),
              (t = r.default),
              (y.default = t);
          },
          {
            '../constants': 256,
            '../friendly_errors/fes_core': 258,
            '../friendly_errors/file_errors': 259,
            '../friendly_errors/validate_params': 262,
            '../helpers': 263,
            '../main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        275: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = (h = t('../main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            (r.default.prototype.ellipseMode = function (o) {
              return (
                r.default._validateParameters('ellipseMode', arguments),
                (o !== l.CORNER &&
                  o !== l.CORNERS &&
                  o !== l.RADIUS &&
                  o !== l.CENTER) ||
                  (this._renderer._ellipseMode = o),
                this
              );
            }),
              (r.default.prototype.noSmooth = function () {
                return (
                  this._renderer.isP3D
                    ? this.setAttributes('antialias', !1)
                    : 'imageSmoothingEnabled' in this.drawingContext &&
                      (this.drawingContext.imageSmoothingEnabled = !1),
                  this
                );
              }),
              (r.default.prototype.rectMode = function (o) {
                return (
                  r.default._validateParameters('rectMode', arguments),
                  (o !== l.CORNER &&
                    o !== l.CORNERS &&
                    o !== l.RADIUS &&
                    o !== l.CENTER) ||
                    (this._renderer._rectMode = o),
                  this
                );
              }),
              (r.default.prototype.smooth = function () {
                return (
                  this.setAttributes('antialias', !0),
                  this._renderer.isP3D ||
                    ('imageSmoothingEnabled' in this.drawingContext &&
                      (this.drawingContext.imageSmoothingEnabled = !0)),
                  this
                );
              }),
              (r.default.prototype.strokeCap = function (o) {
                return (
                  r.default._validateParameters('strokeCap', arguments),
                  (o !== l.ROUND && o !== l.SQUARE && o !== l.PROJECT) ||
                    this._renderer.strokeCap(o),
                  this
                );
              }),
              (r.default.prototype.strokeJoin = function (o) {
                return (
                  r.default._validateParameters('strokeJoin', arguments),
                  (o !== l.ROUND && o !== l.BEVEL && o !== l.MITER) ||
                    this._renderer.strokeJoin(o),
                  this
                );
              }),
              (r.default.prototype.strokeWeight = function (o) {
                return (
                  r.default._validateParameters('strokeWeight', arguments),
                  this._renderer.strokeWeight(o),
                  this
                );
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../constants': 256,
            '../main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        276: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = (a = t('../main')) && a.__esModule ? a : { default: a };
            t('../friendly_errors/fes_core'),
              t('../friendly_errors/file_errors'),
              t('../friendly_errors/validate_params'),
              (u.default.prototype.bezier = function () {
                for (
                  var r, l = arguments.length, d = new Array(l), h = 0;
                  h < l;
                  h++
                )
                  d[h] = arguments[h];
                return (
                  u.default._validateParameters('bezier', d),
                  (this._renderer._doStroke || this._renderer._doFill) &&
                    (r = this._renderer).bezier.apply(r, d),
                  this
                );
              }),
              (u.default.prototype.bezierDetail = function (r) {
                return (
                  u.default._validateParameters('bezierDetail', arguments),
                  (this._bezierDetail = r),
                  this
                );
              }),
              (u.default.prototype.bezierPoint = function (r, l, d, h, o) {
                u.default._validateParameters('bezierPoint', arguments);
                var s = 1 - o;
                return (
                  Math.pow(s, 3) * r +
                  3 * Math.pow(s, 2) * o * l +
                  3 * s * Math.pow(o, 2) * d +
                  Math.pow(o, 3) * h
                );
              }),
              (u.default.prototype.bezierTangent = function (r, l, d, h, o) {
                u.default._validateParameters('bezierTangent', arguments);
                var s = 1 - o;
                return (
                  3 * h * Math.pow(o, 2) -
                  3 * d * Math.pow(o, 2) +
                  6 * d * s * o -
                  6 * l * s * o +
                  3 * l * Math.pow(s, 2) -
                  3 * r * Math.pow(s, 2)
                );
              }),
              (u.default.prototype.curve = function () {
                for (
                  var r, l = arguments.length, d = new Array(l), h = 0;
                  h < l;
                  h++
                )
                  d[h] = arguments[h];
                return (
                  u.default._validateParameters('curve', d),
                  this._renderer._doStroke &&
                    (r = this._renderer).curve.apply(r, d),
                  this
                );
              }),
              (u.default.prototype.curveDetail = function (r) {
                return (
                  u.default._validateParameters('curveDetail', arguments),
                  (this._curveDetail = r < 3 ? 3 : r),
                  this
                );
              }),
              (u.default.prototype.curveTightness = function (r) {
                return (
                  u.default._validateParameters('curveTightness', arguments),
                  (this._renderer._curveTightness = r),
                  this
                );
              }),
              (u.default.prototype.curvePoint = function (r, l, d, h, o) {
                u.default._validateParameters('curvePoint', arguments);
                var s = this._renderer._curveTightness,
                  n = o * o * o,
                  c = o * o;
                return (
                  r * (((s - 1) / 2) * n + (1 - s) * c + ((s - 1) / 2) * o) +
                  l * (((s + 3) / 2) * n + ((-5 - s) / 2) * c + 1) +
                  d * (((-3 - s) / 2) * n + (s + 2) * c + ((1 - s) / 2) * o) +
                  h * (((1 - s) / 2) * n + ((s - 1) / 2) * c)
                );
              }),
              (u.default.prototype.curveTangent = function (r, l, d, h, c) {
                u.default._validateParameters('curveTangent', arguments);
                var s = this._renderer._curveTightness,
                  n = c * c * 3,
                  c = 2 * c;
                return (
                  r * (((s - 1) / 2) * n + (1 - s) * c + (s - 1) / 2) +
                  l * (((s + 3) / 2) * n + ((-5 - s) / 2) * c) +
                  d * (((-3 - s) / 2) * n + (s + 2) * c + (1 - s) / 2) +
                  h * (((1 - s) / 2) * n + ((s - 1) / 2) * c)
                );
              });
            var a = u.default;
            y.default = a;
          },
          {
            '../friendly_errors/fes_core': 258,
            '../friendly_errors/file_errors': 259,
            '../friendly_errors/validate_params': 262,
            '../main': 267,
          },
        ],
        277: [
          function (t, b, y) {
            function u(j) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (v) {
                      return typeof v;
                    }
                  : function (v) {
                      return v &&
                        typeof Symbol == 'function' &&
                        v.constructor === Symbol &&
                        v !== Symbol.prototype
                        ? 'symbol'
                        : typeof v;
                    })(j);
            }
            function a(j) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (v) {
                      return u(v);
                    }
                  : function (v) {
                      return v &&
                        typeof Symbol == 'function' &&
                        v.constructor === Symbol &&
                        v !== Symbol.prototype
                        ? 'symbol'
                        : u(v);
                    })(j);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.slice'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = (x = t('../main')) && x.__esModule ? x : { default: x },
              l = (function (j) {
                if (j && j.__esModule) return j;
                if (j === null || (a(j) !== 'object' && typeof j != 'function'))
                  return { default: j };
                var v = d();
                if (v && v.has(j)) return v.get(j);
                var M,
                  C = {},
                  k = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (M in j) {
                  var A;
                  Object.prototype.hasOwnProperty.call(j, M) &&
                    ((A = k ? Object.getOwnPropertyDescriptor(j, M) : null) &&
                    (A.get || A.set)
                      ? Object.defineProperty(C, M, A)
                      : (C[M] = j[M]));
                }
                return (C.default = j), v && v.set(j, C), C;
              })(t('../constants'));
            function d() {
              var j;
              return typeof WeakMap != 'function'
                ? null
                : ((j = new WeakMap()),
                  (d = function () {
                    return j;
                  }),
                  j);
            }
            var h = null,
              o = [],
              s = [],
              n = !1,
              c = !1,
              f = !1,
              g = !1,
              _ = !0,
              x =
                ((r.default.prototype.beginContour = function () {
                  return (s = []), (g = !0), this;
                }),
                (r.default.prototype.beginShape = function (j) {
                  var v;
                  return (
                    r.default._validateParameters('beginShape', arguments),
                    this._renderer.isP3D
                      ? (v = this._renderer).beginShape.apply(v, arguments)
                      : ((h =
                          j === l.POINTS ||
                          j === l.LINES ||
                          j === l.TRIANGLES ||
                          j === l.TRIANGLE_FAN ||
                          j === l.TRIANGLE_STRIP ||
                          j === l.QUADS ||
                          j === l.QUAD_STRIP
                            ? j
                            : null),
                        (o = []),
                        (s = [])),
                    this
                  );
                }),
                (r.default.prototype.bezierVertex = function () {
                  for (
                    var j, v = arguments.length, M = new Array(v), C = 0;
                    C < v;
                    C++
                  )
                    M[C] = arguments[C];
                  if (
                    (r.default._validateParameters('bezierVertex', M),
                    this._renderer.isP3D)
                  )
                    (j = this._renderer).bezierVertex.apply(j, M);
                  else if (o.length === 0)
                    r.default._friendlyError(
                      'vertex() must be used once before calling bezierVertex()',
                      'bezierVertex',
                    );
                  else {
                    n = !0;
                    for (var k = [], A = 0; A < M.length; A++) k[A] = M[A];
                    (k.isVert = !1), (g ? s : o).push(k);
                  }
                  return this;
                }),
                (r.default.prototype.curveVertex = function () {
                  for (
                    var j, v = arguments.length, M = new Array(v), C = 0;
                    C < v;
                    C++
                  )
                    M[C] = arguments[C];
                  return (
                    r.default._validateParameters('curveVertex', M),
                    this._renderer.isP3D
                      ? (j = this._renderer).curveVertex.apply(j, M)
                      : ((c = !0), this.vertex(M[0], M[1])),
                    this
                  );
                }),
                (r.default.prototype.endContour = function () {
                  var j = s[0].slice();
                  (j.isVert = s[0].isVert),
                    (j.moveTo = !1),
                    s.push(j),
                    _ && (o.push(o[0]), (_ = !1));
                  for (var v = 0; v < s.length; v++) o.push(s[v]);
                  return this;
                }),
                (r.default.prototype.endShape = function (j) {
                  if (
                    (r.default._validateParameters('endShape', arguments),
                    this._renderer.isP3D)
                  )
                    this._renderer.endShape(j, c, n, f, g, h);
                  else {
                    if (o.length === 0) return this;
                    if (!this._renderer._doStroke && !this._renderer._doFill)
                      return this;
                    var v = j === l.CLOSE;
                    v && !g && o.push(o[0]),
                      this._renderer.endShape(j, o, c, n, f, g, h),
                      (_ = !(g = f = n = c = !1)),
                      v && o.pop();
                  }
                  return this;
                }),
                (r.default.prototype.quadraticVertex = function () {
                  for (
                    var j, v = arguments.length, M = new Array(v), C = 0;
                    C < v;
                    C++
                  )
                    M[C] = arguments[C];
                  if (
                    (r.default._validateParameters('quadraticVertex', M),
                    this._renderer.isP3D)
                  )
                    (j = this._renderer).quadraticVertex.apply(j, M);
                  else {
                    if (this._contourInited)
                      return (
                        ((j = {}).x = M[0]),
                        (j.y = M[1]),
                        (j.x3 = M[2]),
                        (j.y3 = M[3]),
                        (j.type = l.QUADRATIC),
                        this._contourVertices.push(j),
                        this
                      );
                    if (0 < o.length) {
                      f = !0;
                      for (var k = [], A = 0; A < M.length; A++) k[A] = M[A];
                      (k.isVert = !1), (g ? s : o).push(k);
                    } else
                      r.default._friendlyError(
                        'vertex() must be used once before calling quadraticVertex()',
                        'quadraticVertex',
                      );
                  }
                  return this;
                }),
                (r.default.prototype.vertex = function (j, v, M, C, k) {
                  var A;
                  return (
                    this._renderer.isP3D
                      ? (A = this._renderer).vertex.apply(A, arguments)
                      : (((A = []).isVert = !0),
                        (A[0] = j),
                        (A[1] = v),
                        (A[2] = 0),
                        (A[3] = 0),
                        (A[4] = 0),
                        (A[5] = this._renderer._getFill()),
                        (A[6] = this._renderer._getStroke()),
                        M && (A.moveTo = M),
                        (g ? (s.length === 0 && (A.moveTo = !0), s) : o).push(
                          A,
                        )),
                    this
                  );
                }),
                (r.default.prototype.normal = function (j, v, M) {
                  var C;
                  return (
                    this._assert3d('normal'),
                    r.default._validateParameters('normal', arguments),
                    (C = this._renderer).normal.apply(C, arguments),
                    this
                  );
                }),
                r.default);
            y.default = x;
          },
          {
            '../constants': 256,
            '../main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        278: [
          function (t, b, y) {
            function u(h) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (o) {
                      return typeof o;
                    }
                  : function (o) {
                      return o &&
                        typeof Symbol == 'function' &&
                        o.constructor === Symbol &&
                        o !== Symbol.prototype
                        ? 'symbol'
                        : typeof o;
                    })(h);
            }
            function a(h) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (o) {
                      return u(o);
                    }
                  : function (o) {
                      return o &&
                        typeof Symbol == 'function' &&
                        o.constructor === Symbol &&
                        o !== Symbol.prototype
                        ? 'symbol'
                        : u(o);
                    })(h);
            }
            var r, l, d;
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.uint8-clamped-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.uint8-clamped-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              (window.requestAnimationFrame =
                window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function (h, o) {
                  window.setTimeout(h, 1e3 / 60);
                }),
              typeof Uint8ClampedArray > 'u' ||
                Uint8ClampedArray.prototype.slice ||
                Object.defineProperty(Uint8ClampedArray.prototype, 'slice', {
                  value: Array.prototype.slice,
                  writable: !0,
                  configurable: !0,
                  enumerable: !1,
                }),
              Object.assign ||
                ((r = Object.keys),
                (t = Object.defineProperty),
                (l = typeof Symbol == 'function' && a(Symbol()) === 'symbol'),
                (d = Object.prototype.propertyIsEnumerable),
                t(Object, 'assign', {
                  value: function (h, o) {
                    if (h == null)
                      throw new TypeError('target must be an object');
                    for (
                      var s, n, c, f = Object(h), g = 1;
                      g < arguments.length;
                      ++g
                    )
                      for (
                        s = Object(arguments[g]),
                          c = r(s),
                          l &&
                            Object.getOwnPropertySymbols &&
                            c.push.apply(
                              c,
                              Object.getOwnPropertySymbols(s).filter(
                                (function (_) {
                                  return function (x) {
                                    return d.call(_, x);
                                  };
                                })(s),
                              ),
                            ),
                          n = 0;
                        n < c.length;
                        ++n
                      )
                        f[c[n]] = s[c[n]];
                    return f;
                  },
                  configurable: !0,
                  enumerable: !1,
                  writable: !0,
                }));
          },
          {
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.assign': 172,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-clamped-array': 227,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        279: [
          function (t, b, y) {
            t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.object.assign'),
              t('core-js/modules/web.dom-collections.for-each'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t = (t = t('./main')) && t.__esModule ? t : { default: t }),
              (t.default.prototype.noLoop = function () {
                this._loop = !1;
              }),
              (t.default.prototype.loop = function () {
                this._loop ||
                  ((this._loop = !0), this._setupDone && this._draw());
              }),
              (t.default.prototype.isLooping = function () {
                return this._loop;
              }),
              (t.default.prototype.push = function () {
                this._styles.push({
                  props: { _colorMode: this._colorMode },
                  renderer: this._renderer.push(),
                });
              }),
              (t.default.prototype.pop = function () {
                var u = this._styles.pop();
                u
                  ? (this._renderer.pop(u.renderer),
                    Object.assign(this, u.props))
                  : console.warn('pop() was called without matching push()');
              }),
              (t.default.prototype.redraw = function (u) {
                if (!this._inUserDraw && this._setupDone) {
                  var a = parseInt(u),
                    r =
                      ((isNaN(a) || a < 1) && (a = 1),
                      this._isGlobal ? window : this);
                  if (typeof r.draw == 'function') {
                    r.setup === void 0 &&
                      r.scale(r._pixelDensity, r._pixelDensity);
                    for (
                      var l = function (h) {
                          h.call(r);
                        },
                        d = 0;
                      d < a;
                      d++
                    ) {
                      r.resetMatrix(),
                        (this._accessibleOutputs.grid ||
                          this._accessibleOutputs.text) &&
                          this._updateAccsOutput(),
                        r._renderer.isP3D && r._renderer._update(),
                        r._setProperty('frameCount', r.frameCount + 1),
                        r._registeredMethods.pre.forEach(l),
                        (this._inUserDraw = !0);
                      try {
                        r.draw();
                      } finally {
                        this._inUserDraw = !1;
                      }
                      r._registeredMethods.post.forEach(l);
                    }
                  }
                }
              }),
              (t = t.default),
              (y.default = t);
          },
          {
            './main': 267,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.object.assign': 172,
            'core-js/modules/web.dom-collections.for-each': 229,
          },
        ],
        280: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-prototype-of'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-prototype-of'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = (t = t('./main')) && t.__esModule ? t : { default: t };
            function a(r) {
              return (
                (function (l) {
                  if (Array.isArray(l)) {
                    for (var d = 0, h = new Array(l.length); d < l.length; d++)
                      h[d] = l[d];
                    return h;
                  }
                })(r) ||
                (function (l) {
                  if (
                    Symbol.iterator in Object(l) ||
                    Object.prototype.toString.call(l) === '[object Arguments]'
                  )
                    return Array.from(l);
                })(r) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            (u.default.prototype.applyMatrix = function () {
              var r = arguments[0] instanceof Object.getPrototypeOf(Uint8Array);
              return (
                Array.isArray(arguments[0]) || r
                  ? (r = this._renderer).applyMatrix.apply(r, a(arguments[0]))
                  : (r = this._renderer).applyMatrix.apply(r, arguments),
                this
              );
            }),
              (u.default.prototype.resetMatrix = function () {
                return this._renderer.resetMatrix(), this;
              }),
              (u.default.prototype.rotate = function (r, l) {
                return (
                  u.default._validateParameters('rotate', arguments),
                  this._renderer.rotate(this._toRadians(r), l),
                  this
                );
              }),
              (u.default.prototype.rotateX = function (r) {
                return (
                  this._assert3d('rotateX'),
                  u.default._validateParameters('rotateX', arguments),
                  this._renderer.rotateX(this._toRadians(r)),
                  this
                );
              }),
              (u.default.prototype.rotateY = function (r) {
                return (
                  this._assert3d('rotateY'),
                  u.default._validateParameters('rotateY', arguments),
                  this._renderer.rotateY(this._toRadians(r)),
                  this
                );
              }),
              (u.default.prototype.rotateZ = function (r) {
                return (
                  this._assert3d('rotateZ'),
                  u.default._validateParameters('rotateZ', arguments),
                  this._renderer.rotateZ(this._toRadians(r)),
                  this
                );
              }),
              (u.default.prototype.scale = function (r, l, d) {
                var h;
                return (
                  u.default._validateParameters('scale', arguments),
                  r instanceof u.default.Vector
                    ? ((r = (h = r).x), (l = h.y), (d = h.z))
                    : r instanceof Array &&
                      ((r = (h = r)[0]), (l = h[1]), (d = h[2] || 1)),
                  isNaN(l) ? (l = d = r) : isNaN(d) && (d = 1),
                  this._renderer.scale.call(this._renderer, r, l, d),
                  this
                );
              }),
              (u.default.prototype.shearX = function (r) {
                return (
                  u.default._validateParameters('shearX', arguments),
                  (r = this._toRadians(r)),
                  this._renderer.applyMatrix(1, 0, Math.tan(r), 1, 0, 0),
                  this
                );
              }),
              (u.default.prototype.shearY = function (r) {
                return (
                  u.default._validateParameters('shearY', arguments),
                  (r = this._toRadians(r)),
                  this._renderer.applyMatrix(1, Math.tan(r), 0, 1, 0, 0),
                  this
                );
              }),
              (u.default.prototype.translate = function (r, l, d) {
                return (
                  u.default._validateParameters('translate', arguments),
                  this._renderer.isP3D
                    ? this._renderer.translate(r, l, d)
                    : this._renderer.translate(r, l),
                  this
                );
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            './main': 267,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-prototype-of': 175,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        281: [
          function (t, b, y) {
            function u(d) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (h) {
                      return typeof h;
                    }
                  : function (h) {
                      return h &&
                        typeof Symbol == 'function' &&
                        h.constructor === Symbol &&
                        h !== Symbol.prototype
                        ? 'symbol'
                        : typeof h;
                    })(d);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.ends-with'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.ends-with'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator');
            var a =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            function r(d) {
              return (
                (function (h) {
                  if (Array.isArray(h)) {
                    for (var o = 0, s = new Array(h.length); o < h.length; o++)
                      s[o] = h[o];
                    return s;
                  }
                })(d) ||
                (function (h) {
                  if (
                    Symbol.iterator in Object(h) ||
                    Object.prototype.toString.call(h) === '[object Arguments]'
                  )
                    return Array.from(h);
                })(d) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            function l(d) {
              return (l =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (h) {
                      return u(h);
                    }
                  : function (h) {
                      return h &&
                        typeof Symbol == 'function' &&
                        h.constructor === Symbol &&
                        h !== Symbol.prototype
                        ? 'symbol'
                        : u(h);
                    })(d);
            }
            (a.default.prototype.storeItem = function (d, h) {
              typeof d != 'string' &&
                console.log(
                  'The argument that you passed to storeItem() - '.concat(
                    d,
                    ' is not a string.',
                  ),
                ),
                d.endsWith('p5TypeID') &&
                  console.log(
                    'The argument that you passed to storeItem() - '.concat(
                      d,
                      " must not end with 'p5TypeID'.",
                    ),
                  ),
                h === void 0 &&
                  console.log(
                    'You cannot store undefined variables using storeItem().',
                  );
              var o = l(h);
              switch (o) {
                case 'number':
                case 'boolean':
                  h = h.toString();
                  break;
                case 'object':
                  h instanceof a.default.Color
                    ? (o = 'p5.Color')
                    : h instanceof a.default.Vector &&
                      ((o = 'p5.Vector'), (h = [h.x, h.y, h.z])),
                    (h = JSON.stringify(h));
              }
              localStorage.setItem(d, h),
                (d = ''.concat(d, 'p5TypeID')),
                localStorage.setItem(d, o);
            }),
              (a.default.prototype.getItem = function (d) {
                var h = localStorage.getItem(d),
                  o = localStorage.getItem(''.concat(d, 'p5TypeID'));
                if (o === void 0)
                  console.log(
                    'Unable to determine type of item stored under '.concat(
                      d,
                      'in local storage. Did you save the item with something other than setItem()?',
                    ),
                  );
                else if (h !== null)
                  switch (o) {
                    case 'number':
                      h = parseFloat(h);
                      break;
                    case 'boolean':
                      h = h === 'true';
                      break;
                    case 'object':
                      h = JSON.parse(h);
                      break;
                    case 'p5.Color':
                      (h = JSON.parse(h)),
                        (h = this.color.apply(this, r(h.levels)));
                      break;
                    case 'p5.Vector':
                      (h = JSON.parse(h)),
                        (h = this.createVector.apply(this, r(h)));
                  }
                return h;
              }),
              (a.default.prototype.clearStorage = function () {
                localStorage.clear();
              }),
              (a.default.prototype.removeItem = function (d) {
                typeof d != 'string' &&
                  console.log(
                    'The argument that you passed to removeItem() - '.concat(
                      d,
                      ' is not a string.',
                    ),
                  ),
                  localStorage.removeItem(d),
                  localStorage.removeItem(''.concat(d, 'p5TypeID'));
              });
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.ends-with': 184,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        282: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.string.sub'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.string.sub'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.prototype.createStringDict = function (a, r) {
              return (
                u.default._validateParameters('createStringDict', arguments),
                new u.default.StringDict(a, r)
              );
            }),
              (u.default.prototype.createNumberDict = function (a, r) {
                return (
                  u.default._validateParameters('createNumberDict', arguments),
                  new u.default.NumberDict(a, r)
                );
              }),
              (u.default.TypedDict = function (a, r) {
                return (
                  a instanceof Object
                    ? (this.data = a)
                    : ((this.data = {}), (this.data[a] = r)),
                  this
                );
              }),
              (u.default.TypedDict.prototype.size = function () {
                return Object.keys(this.data).length;
              }),
              (u.default.TypedDict.prototype.hasKey = function (a) {
                return this.data.hasOwnProperty(a);
              }),
              (u.default.TypedDict.prototype.get = function (a) {
                if (this.data.hasOwnProperty(a)) return this.data[a];
                console.log(''.concat(a, ' does not exist in this Dictionary'));
              }),
              (u.default.TypedDict.prototype.set = function (a, r) {
                this._validate(r)
                  ? (this.data[a] = r)
                  : console.log(
                      'Those values dont work for this dictionary type.',
                    );
              }),
              (u.default.TypedDict.prototype._addObj = function (a) {
                for (var r in a) this.set(r, a[r]);
              }),
              (u.default.TypedDict.prototype.create = function (a, r) {
                a instanceof Object && r === void 0
                  ? this._addObj(a)
                  : a !== void 0
                  ? this.set(a, r)
                  : console.log(
                      'In order to create a new Dictionary entry you must pass an object or a key, value pair',
                    );
              }),
              (u.default.TypedDict.prototype.clear = function () {
                this.data = {};
              }),
              (u.default.TypedDict.prototype.remove = function (a) {
                if (!this.data.hasOwnProperty(a))
                  throw new Error(
                    ''.concat(a, ' does not exist in this Dictionary'),
                  );
                delete this.data[a];
              }),
              (u.default.TypedDict.prototype.print = function () {
                for (var a in this.data)
                  console.log('key:'.concat(a, ' value:').concat(this.data[a]));
              }),
              (u.default.TypedDict.prototype.saveTable = function (a) {
                var r,
                  l = '';
                for (r in this.data)
                  l += ''.concat(r, ',').concat(
                    this.data[r],
                    `
`,
                  );
                var d = new Blob([l], { type: 'text/csv' });
                u.default.prototype.downloadFile(d, a || 'mycsv', 'csv');
              }),
              (u.default.TypedDict.prototype.saveJSON = function (a, r) {
                u.default.prototype.saveJSON(this.data, a, r);
              }),
              (u.default.TypedDict.prototype._validate = function (a) {
                return !0;
              }),
              (u.default.StringDict = function () {
                for (
                  var a = arguments.length, r = new Array(a), l = 0;
                  l < a;
                  l++
                )
                  r[l] = arguments[l];
                u.default.TypedDict.apply(this, r);
              }),
              (u.default.StringDict.prototype = Object.create(
                u.default.TypedDict.prototype,
              )),
              (u.default.StringDict.prototype._validate = function (a) {
                return typeof a == 'string';
              }),
              (u.default.NumberDict = function () {
                for (
                  var a = arguments.length, r = new Array(a), l = 0;
                  l < a;
                  l++
                )
                  r[l] = arguments[l];
                u.default.TypedDict.apply(this, r);
              }),
              (u.default.NumberDict.prototype = Object.create(
                u.default.TypedDict.prototype,
              )),
              (u.default.NumberDict.prototype._validate = function (a) {
                return typeof a == 'number';
              }),
              (u.default.NumberDict.prototype.add = function (a, r) {
                this.data.hasOwnProperty(a)
                  ? (this.data[a] += r)
                  : console.log(
                      'The key - '.concat(
                        a,
                        ' does not exist in this dictionary.',
                      ),
                    );
              }),
              (u.default.NumberDict.prototype.sub = function (a, r) {
                this.add(a, -r);
              }),
              (u.default.NumberDict.prototype.mult = function (a, r) {
                this.data.hasOwnProperty(a)
                  ? (this.data[a] *= r)
                  : console.log(
                      'The key - '.concat(
                        a,
                        ' does not exist in this dictionary.',
                      ),
                    );
              }),
              (u.default.NumberDict.prototype.div = function (a, r) {
                this.data.hasOwnProperty(a)
                  ? (this.data[a] /= r)
                  : console.log(
                      'The key - '.concat(
                        a,
                        ' does not exist in this dictionary.',
                      ),
                    );
              }),
              (u.default.NumberDict.prototype._valueTest = function (a) {
                if (Object.keys(this.data).length === 0)
                  throw new Error(
                    'Unable to search for a minimum or maximum value on an empty NumberDict',
                  );
                if (Object.keys(this.data).length === 1)
                  return this.data[Object.keys(this.data)[0]];
                var r,
                  l = this.data[Object.keys(this.data)[0]];
                for (r in this.data)
                  this.data[r] * a < l * a && (l = this.data[r]);
                return l;
              }),
              (u.default.NumberDict.prototype.minValue = function () {
                return this._valueTest(1);
              }),
              (u.default.NumberDict.prototype.maxValue = function () {
                return this._valueTest(-1);
              }),
              (u.default.NumberDict.prototype._keyTest = function (a) {
                if (Object.keys(this.data).length === 0)
                  throw new Error(
                    'Unable to use minValue on an empty NumberDict',
                  );
                if (Object.keys(this.data).length === 1)
                  return Object.keys(this.data)[0];
                for (
                  var r = Object.keys(this.data)[0], l = 1;
                  l < Object.keys(this.data).length;
                  l++
                )
                  Object.keys(this.data)[l] * a < r * a &&
                    (r = Object.keys(this.data)[l]);
                return r;
              }),
              (u.default.NumberDict.prototype.minKey = function () {
                return this._keyTest(1);
              }),
              (u.default.NumberDict.prototype.maxKey = function () {
                return this._keyTest(-1);
              }),
              (t = u.default.TypedDict),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.string.sub': 192,
          },
        ],
        283: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.every'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/web.url'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.every'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.for-each'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/web.dom-collections.for-each'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/web.url'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var a =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            function r(o) {
              return (r =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            function l(o, s, n) {
              return (
                (s._userNode || document.body).appendChild(o),
                (n = new (n ? a.default.MediaElement : a.default.Element)(
                  o,
                  s,
                )),
                s._elements.push(n),
                n
              );
            }
            function d(o, _, n, c) {
              var f = document.createElement(_),
                g = (typeof (n = n || '') == 'string' && (n = [n]), !0),
                _ = !1,
                x = void 0;
              try {
                for (
                  var j, v = n[Symbol.iterator]();
                  !(g = (j = v.next()).done);
                  g = !0
                ) {
                  var M = j.value,
                    C = document.createElement('source');
                  C.setAttribute('src', M), f.appendChild(C);
                }
              } catch (A) {
                (_ = !0), (x = A);
              } finally {
                try {
                  g || v.return == null || v.return();
                } finally {
                  if (_) throw x;
                }
              }
              typeof c == 'function' &&
                f.addEventListener('canplaythrough', function A() {
                  c(), f.removeEventListener('canplaythrough', A);
                });
              var k = l(f, o, !0);
              return (
                (k.loadedmetadata = !1),
                f.addEventListener('loadedmetadata', function () {
                  (k.width = f.videoWidth),
                    (k.height = f.videoHeight),
                    k.elt.width === 0 && (k.elt.width = f.videoWidth),
                    k.elt.height === 0 && (k.elt.height = f.videoHeight),
                    k.presetPlaybackRate &&
                      ((k.elt.playbackRate = k.presetPlaybackRate),
                      delete k.presetPlaybackRate),
                    (k.loadedmetadata = !0);
                }),
                k
              );
            }
            (a.default.prototype.select = function (o, s) {
              return (
                a.default._validateParameters('select', arguments),
                (s = this._getContainer(s).querySelector(o)),
                s ? this._wrapElement(s) : null
              );
            }),
              (a.default.prototype.selectAll = function (o, s) {
                a.default._validateParameters('selectAll', arguments);
                var n = [],
                  c = this._getContainer(s).querySelectorAll(o);
                if (c)
                  for (var f = 0; f < c.length; f++) {
                    var g = this._wrapElement(c[f]);
                    n.push(g);
                  }
                return n;
              }),
              (a.default.prototype._getContainer = function (o) {
                var s = document;
                return (
                  typeof o == 'string'
                    ? (s = document.querySelector(o) || document)
                    : o instanceof a.default.Element
                    ? (s = o.elt)
                    : o instanceof HTMLElement && (s = o),
                  s
                );
              }),
              (a.default.prototype._wrapElement = function (o) {
                var s,
                  n = Array.prototype.slice.call(o.children);
                return o.tagName === 'INPUT' && o.type === 'checkbox'
                  ? (((s = new a.default.Element(o, this)).checked =
                      function () {
                        return arguments.length === 0
                          ? this.elt.checked
                          : ((this.elt.checked = !!arguments[0]), this);
                      }),
                    s)
                  : o.tagName === 'VIDEO' || o.tagName === 'AUDIO'
                  ? new a.default.MediaElement(o, this)
                  : o.tagName === 'SELECT'
                  ? this.createSelect(new a.default.Element(o, this))
                  : 0 < n.length &&
                    n.every(function (c) {
                      return c.tagName === 'INPUT' || c.tagName === 'LABEL';
                    })
                  ? this.createRadio(new a.default.Element(o, this))
                  : new a.default.Element(o, this);
              }),
              (a.default.prototype.removeElements = function (o) {
                a.default._validateParameters('removeElements', arguments),
                  this._elements
                    .filter(function (s) {
                      return !(s.elt instanceof HTMLCanvasElement);
                    })
                    .map(function (s) {
                      return s.remove();
                    });
              }),
              (a.default.Element.prototype.changed = function (o) {
                return (
                  a.default.Element._adjustListener('change', o, this), this
                );
              }),
              (a.default.Element.prototype.input = function (o) {
                return (
                  a.default.Element._adjustListener('input', o, this), this
                );
              }),
              (a.default.prototype.createDiv = function () {
                var o =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s = document.createElement('div');
                return (s.innerHTML = o), l(s, this);
              }),
              (a.default.prototype.createP = function () {
                var o =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s = document.createElement('p');
                return (s.innerHTML = o), l(s, this);
              }),
              (a.default.prototype.createSpan = function () {
                var o =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s = document.createElement('span');
                return (s.innerHTML = o), l(s, this);
              }),
              (a.default.prototype.createImg = function () {
                a.default._validateParameters('createImg', arguments);
                var o,
                  s = document.createElement('img'),
                  n = arguments;
                return (
                  1 < n.length && typeof n[1] == 'string' && (s.alt = n[1]),
                  2 < n.length &&
                    typeof n[2] == 'string' &&
                    (s.crossOrigin = n[2]),
                  (s.src = n[0]),
                  (o = l(s, this)),
                  s.addEventListener('load', function () {
                    (o.width = s.offsetWidth || s.width),
                      (o.height = s.offsetHeight || s.height);
                    var c = n[n.length - 1];
                    typeof c == 'function' && c(o);
                  }),
                  o
                );
              }),
              (a.default.prototype.createA = function (o, s, n) {
                a.default._validateParameters('createA', arguments);
                var c = document.createElement('a');
                return (
                  (c.href = o),
                  (c.innerHTML = s),
                  n && (c.target = n),
                  l(c, this)
                );
              }),
              (a.default.prototype.createSlider = function (o, s, n, c) {
                a.default._validateParameters('createSlider', arguments);
                var f = document.createElement('input');
                return (
                  (f.type = 'range'),
                  (f.min = o),
                  (f.max = s),
                  c === 0 ? (f.step = 1e-18) : c && (f.step = c),
                  typeof n == 'number' && (f.value = n),
                  l(f, this)
                );
              }),
              (a.default.prototype.createButton = function (o, s) {
                a.default._validateParameters('createButton', arguments);
                var n = document.createElement('button');
                return (n.innerHTML = o), s && (n.value = s), l(n, this);
              }),
              (a.default.prototype.createCheckbox = function () {
                a.default._validateParameters('createCheckbox', arguments);
                var o = document.createElement('div'),
                  s = document.createElement('input'),
                  n = ((s.type = 'checkbox'), document.createElement('label')),
                  c = (n.appendChild(s), o.appendChild(n), l(o, this));
                return (
                  (c.checked = function () {
                    var f =
                      c.elt.firstElementChild.getElementsByTagName('input')[0];
                    if (f) {
                      if (arguments.length === 0) return f.checked;
                      f.checked = !!arguments[0];
                    }
                    return c;
                  }),
                  (this.value = function (f) {
                    return (c.value = f), this;
                  }),
                  arguments[0] &&
                    (c.value(arguments[0]),
                    ((o = document.createElement('span')).innerHTML =
                      arguments[0]),
                    n.appendChild(o)),
                  arguments[1] && (s.checked = !0),
                  c
                );
              }),
              (a.default.prototype.createSelect = function () {
                a.default._validateParameters('createSelect', arguments);
                var o,
                  s,
                  n = arguments[0];
                return (
                  n instanceof a.default.Element &&
                  n.elt instanceof HTMLSelectElement
                    ? (this.elt = (o = n).elt)
                    : n instanceof HTMLSelectElement
                    ? ((o = l(n, this)), (this.elt = n))
                    : ((s = document.createElement('select')),
                      n &&
                        typeof n == 'boolean' &&
                        s.setAttribute('multiple', 'true'),
                      (o = l(s, this)),
                      (this.elt = s)),
                  (o.option = function (c, f) {
                    var g;
                    if (c !== void 0) {
                      for (var _, x = 0; x < this.elt.length; x += 1)
                        if (this.elt[x].textContent === c) {
                          g = x;
                          break;
                        }
                      g !== void 0
                        ? f === !1
                          ? this.elt.remove(g)
                          : (this.elt[g].value = f)
                        : (((_ = document.createElement('option')).textContent =
                            c),
                          (_.value = f === void 0 ? c : f),
                          this.elt.appendChild(_),
                          this._pInst._elements.push(_));
                    }
                  }),
                  (o.selected = function (c) {
                    if (c !== void 0) {
                      for (var f = 0; f < this.elt.length; f += 1)
                        this.elt[f].value.toString() === c.toString() &&
                          (this.elt.selectedIndex = f);
                      return this;
                    }
                    if (this.elt.getAttribute('multiple')) {
                      var g = [],
                        _ = !0,
                        x = !1,
                        j = void 0;
                      try {
                        for (
                          var v,
                            M = this.elt.selectedOptions[Symbol.iterator]();
                          !(_ = (v = M.next()).done);
                          _ = !0
                        ) {
                          var C = v.value;
                          g.push(C.value);
                        }
                      } catch (k) {
                        (x = !0), (j = k);
                      } finally {
                        try {
                          _ || M.return == null || M.return();
                        } finally {
                          if (x) throw j;
                        }
                      }
                      return g;
                    }
                    return this.elt.value;
                  }),
                  (o.disable = function (c) {
                    if (typeof c == 'string')
                      for (var f = 0; f < this.elt.length; f++)
                        this.elt[f].value.toString() === c &&
                          ((this.elt[f].disabled = !0),
                          (this.elt[f].selected = !1));
                    else this.elt.disabled = !0;
                    return this;
                  }),
                  o
                );
              }),
              (a.default.prototype.createRadio = function () {
                function o(_) {
                  return _ instanceof HTMLInputElement && _.type === 'radio';
                }
                function s(_) {
                  return _ instanceof HTMLLabelElement;
                }
                var n,
                  c,
                  f,
                  g = arguments[0];
                return (
                  g instanceof a.default.Element &&
                  (g.elt instanceof HTMLDivElement ||
                    g.elt instanceof HTMLSpanElement)
                    ? ((n = g), (this.elt = g.elt))
                    : g instanceof HTMLDivElement ||
                      g instanceof HTMLSpanElement
                    ? ((n = l(g, this)),
                      (c = this.elt = g),
                      typeof arguments[1] == 'string' && (f = arguments[1]))
                    : (typeof g == 'string' && (f = g),
                      (c = document.createElement('div')),
                      (n = l(c, this)),
                      (this.elt = c)),
                  (n._name = f || 'radioOption'),
                  (n._getOptionsArray = function () {
                    return Array.from(this.elt.children)
                      .filter(function (_) {
                        return o(_) || (s(_) && o(_.firstElementChild));
                      })
                      .map(function (_) {
                        return o(_) ? _ : _.firstElementChild;
                      });
                  }),
                  (n.option = function (_, x) {
                    var j,
                      v,
                      M,
                      C = !0,
                      k = !1,
                      A = void 0;
                    try {
                      for (
                        var R, O = n._getOptionsArray()[Symbol.iterator]();
                        !(C = (R = O.next()).done);
                        C = !0
                      ) {
                        var D = R.value;
                        if (D.value === _) {
                          j = D;
                          break;
                        }
                      }
                    } catch (N) {
                      (k = !0), (A = N);
                    } finally {
                      try {
                        C || O.return == null || O.return();
                      } finally {
                        if (k) throw A;
                      }
                    }
                    return (
                      j === void 0 &&
                        ((j = document.createElement('input')).setAttribute(
                          'type',
                          'radio',
                        ),
                        j.setAttribute('value', _)),
                      j.setAttribute('name', n._name),
                      s(j.parentElement)
                        ? (v = j.parentElement)
                        : (v =
                            document.createElement(
                              'label',
                            )).insertAdjacentElement('afterbegin', j),
                      v.lastElementChild instanceof HTMLSpanElement
                        ? (M = v.lastElementChild)
                        : ((M = document.createElement('span')),
                          j.insertAdjacentElement('afterend', M)),
                      (M.innerHTML = x === void 0 ? _ : x),
                      this.elt.appendChild(v),
                      j
                    );
                  }),
                  (n.remove = function (_) {
                    var x = !0,
                      j = !1,
                      v = void 0;
                    try {
                      for (
                        var M, C = n._getOptionsArray()[Symbol.iterator]();
                        !(x = (M = C.next()).done);
                        x = !0
                      ) {
                        var k = M.value;
                        if (k.value === _)
                          return void (
                            s(k.parentElement) ? k.parentElement : k
                          ).remove();
                      }
                    } catch (A) {
                      (j = !0), (v = A);
                    } finally {
                      try {
                        x || C.return == null || C.return();
                      } finally {
                        if (j) throw v;
                      }
                    }
                  }),
                  (n.value = function () {
                    var _ = '',
                      x = !0,
                      j = !1,
                      v = void 0;
                    try {
                      for (
                        var M, C = n._getOptionsArray()[Symbol.iterator]();
                        !(x = (M = C.next()).done);
                        x = !0
                      ) {
                        var k = M.value;
                        if (k.checked) {
                          _ = k.value;
                          break;
                        }
                      }
                    } catch (A) {
                      (j = !0), (v = A);
                    } finally {
                      try {
                        x || C.return == null || C.return();
                      } finally {
                        if (j) throw v;
                      }
                    }
                    return _;
                  }),
                  (n.selected = function (_) {
                    var x = null;
                    if (_ === void 0) {
                      var j = !0,
                        v = !1,
                        M = void 0;
                      try {
                        for (
                          var C, k = n._getOptionsArray()[Symbol.iterator]();
                          !(j = (C = k.next()).done);
                          j = !0
                        ) {
                          var A = C.value;
                          if (A.checked) {
                            x = A;
                            break;
                          }
                        }
                      } catch (U) {
                        (v = !0), (M = U);
                      } finally {
                        try {
                          j || k.return == null || k.return();
                        } finally {
                          if (v) throw M;
                        }
                      }
                    } else {
                      n._getOptionsArray().forEach(function (q) {
                        (q.checked = !1), q.removeAttribute('checked');
                      });
                      var R = !0,
                        v = !1,
                        M = void 0;
                      try {
                        for (
                          var O, D = n._getOptionsArray()[Symbol.iterator]();
                          !(R = (O = D.next()).done);
                          R = !0
                        ) {
                          var N = O.value;
                          N.value === _ &&
                            (N.setAttribute('checked', !0),
                            (N.checked = !0),
                            (x = N));
                        }
                      } catch (q) {
                        (v = !0), (M = q);
                      } finally {
                        try {
                          R || D.return == null || D.return();
                        } finally {
                          if (v) throw M;
                        }
                      }
                    }
                    return x;
                  }),
                  (n.disable = function () {
                    var _ =
                        !(0 < arguments.length && arguments[0] !== void 0) ||
                        arguments[0],
                      x = !0,
                      j = !1,
                      v = void 0;
                    try {
                      for (
                        var M, C = n._getOptionsArray()[Symbol.iterator]();
                        !(x = (M = C.next()).done);
                        x = !0
                      )
                        M.value.setAttribute('disabled', _);
                    } catch (k) {
                      (j = !0), (v = k);
                    } finally {
                      try {
                        x || C.return == null || C.return();
                      } finally {
                        if (j) throw v;
                      }
                    }
                  }),
                  n
                );
              }),
              (a.default.prototype.createColorPicker = function (o) {
                a.default._validateParameters('createColorPicker', arguments);
                var s = document.createElement('input');
                return (
                  (s.type = 'color'),
                  o
                    ? o instanceof a.default.Color
                      ? (s.value = o.toString('#rrggbb'))
                      : ((a.default.prototype._colorMode = 'rgb'),
                        (a.default.prototype._colorMaxes = {
                          rgb: [255, 255, 255, 255],
                          hsb: [360, 100, 100, 1],
                          hsl: [360, 100, 100, 1],
                        }),
                        (s.value = a.default.prototype
                          .color(o)
                          .toString('#rrggbb')))
                    : (s.value = '#000000'),
                  ((s = l(s, this)).color = function () {
                    return (
                      o &&
                        (o.mode && (a.default.prototype._colorMode = o.mode),
                        o.maxes && (a.default.prototype._colorMaxes = o.maxes)),
                      a.default.prototype.color(this.elt.value)
                    );
                  }),
                  s
                );
              }),
              (a.default.prototype.createInput = function () {
                var o =
                    0 < arguments.length && arguments[0] !== void 0
                      ? arguments[0]
                      : '',
                  s =
                    1 < arguments.length && arguments[1] !== void 0
                      ? arguments[1]
                      : 'text',
                  n =
                    (a.default._validateParameters('createInput', arguments),
                    document.createElement('input'));
                return (
                  n.setAttribute('value', o),
                  n.setAttribute('type', s),
                  l(n, this)
                );
              }),
              (a.default.prototype.createFileInput = function (o) {
                var s,
                  n =
                    1 < arguments.length &&
                    arguments[1] !== void 0 &&
                    arguments[1];
                if (
                  (a.default._validateParameters('createFileInput', arguments),
                  window.File &&
                    window.FileReader &&
                    window.FileList &&
                    window.Blob)
                )
                  return (
                    (s = document.createElement('input')).setAttribute(
                      'type',
                      'file',
                    ),
                    n && s.setAttribute('multiple', !0),
                    s.addEventListener(
                      'change',
                      function (c) {
                        var f = !0,
                          g = !1,
                          _ = void 0;
                        try {
                          for (
                            var x, j = c.target.files[Symbol.iterator]();
                            !(f = (x = j.next()).done);
                            f = !0
                          ) {
                            var v = x.value;
                            a.default.File._load(v, o);
                          }
                        } catch (M) {
                          (g = !0), (_ = M);
                        } finally {
                          try {
                            f || j.return == null || j.return();
                          } finally {
                            if (g) throw _;
                          }
                        }
                      },
                      !1,
                    ),
                    l(s, this)
                  );
                console.log(
                  'The File APIs are not fully supported in this browser. Cannot create element.',
                );
              }),
              (a.default.prototype.createVideo = function (o, s) {
                return (
                  a.default._validateParameters('createVideo', arguments),
                  d(this, 'video', o, s)
                );
              }),
              (a.default.prototype.createAudio = function (o, s) {
                return (
                  a.default._validateParameters('createAudio', arguments),
                  d(this, 'audio', o, s)
                );
              }),
              (a.default.prototype.VIDEO = 'video'),
              (a.default.prototype.AUDIO = 'audio'),
              navigator.mediaDevices === void 0 &&
                (navigator.mediaDevices = {}),
              navigator.mediaDevices.getUserMedia === void 0 &&
                (navigator.mediaDevices.getUserMedia = function (o) {
                  var s =
                    navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
                  return s
                    ? new Promise(function (n, c) {
                        s.call(navigator, o, n, c);
                      })
                    : Promise.reject(
                        new Error(
                          'getUserMedia is not implemented in this browser',
                        ),
                      );
                }),
              (a.default.prototype.createCapture = function () {
                if (
                  (a.default._validateParameters('createCapture', arguments),
                  !navigator.mediaDevices ||
                    !navigator.mediaDevices.getUserMedia)
                )
                  throw new DOMException(
                    'getUserMedia not supported in this browser',
                  );
                var o,
                  s = !0,
                  n = !0,
                  c = !0,
                  f = !1,
                  g = void 0;
                try {
                  for (
                    var _, x = arguments[Symbol.iterator]();
                    !(c = (_ = x.next()).done);
                    c = !0
                  ) {
                    var j = _.value;
                    j === a.default.prototype.VIDEO
                      ? (n = !1)
                      : j === a.default.prototype.AUDIO
                      ? (s = !1)
                      : r(j) === 'object'
                      ? (v = j)
                      : typeof j == 'function' && (o = j);
                  }
                } catch (k) {
                  (f = !0), (g = k);
                } finally {
                  try {
                    c || x.return == null || x.return();
                  } finally {
                    if (f) throw g;
                  }
                }
                var v = v || { video: s, audio: n },
                  M = document.createElement('video'),
                  C =
                    (M.setAttribute('playsinline', ''),
                    navigator.mediaDevices.getUserMedia(v).then(function (k) {
                      try {
                        'srcObject' in M
                          ? (M.srcObject = k)
                          : (M.src = window.URL.createObjectURL(k));
                      } catch {
                        M.src = k;
                      }
                    }, console.log),
                    l(M, this, !0));
                return (
                  (C.loadedmetadata = !1),
                  M.addEventListener('loadedmetadata', function () {
                    M.play(),
                      M.width
                        ? ((C.width = M.width), (C.height = M.height))
                        : ((C.width = C.elt.width = M.videoWidth),
                          (C.height = C.elt.height = M.videoHeight)),
                      (C.loadedmetadata = !0),
                      o && o(M.srcObject);
                  }),
                  C
                );
              }),
              (a.default.prototype.createElement = function (o, s) {
                return (
                  a.default._validateParameters('createElement', arguments),
                  (o = document.createElement(o)),
                  s !== void 0 && (o.innerHTML = s),
                  l(o, this)
                );
              }),
              (a.default.Element.prototype.addClass = function (o) {
                return (
                  this.elt.className
                    ? this.hasClass(o) ||
                      (this.elt.className = this.elt.className + ' ' + o)
                    : (this.elt.className = o),
                  this
                );
              }),
              (a.default.Element.prototype.removeClass = function (o) {
                return this.elt.classList.remove(o), this;
              }),
              (a.default.Element.prototype.hasClass = function (o) {
                return this.elt.classList.contains(o);
              }),
              (a.default.Element.prototype.toggleClass = function (o) {
                return (
                  this.elt.classList.contains(o)
                    ? this.elt.classList.remove(o)
                    : this.elt.classList.add(o),
                  this
                );
              }),
              (a.default.Element.prototype.child = function (o) {
                return o === void 0
                  ? this.elt.childNodes
                  : (typeof o == 'string'
                      ? (o[0] === '#' && (o = o.substring(1)),
                        (o = document.getElementById(o)))
                      : o instanceof a.default.Element && (o = o.elt),
                    o instanceof HTMLElement && this.elt.appendChild(o),
                    this);
              }),
              (a.default.Element.prototype.center = function (o) {
                var s = this.elt.style.display,
                  n = this.elt.style.display === 'none',
                  c = this.parent().style.display === 'none',
                  f = { x: this.elt.offsetLeft, y: this.elt.offsetTop },
                  g =
                    (n && this.show(),
                    c && this.parent().show(),
                    (this.elt.style.display = 'block'),
                    this.position(0, 0),
                    Math.abs(this.parent().offsetWidth - this.elt.offsetWidth)),
                  _ = Math.abs(
                    this.parent().offsetHeight - this.elt.offsetHeight,
                  );
                return (
                  o === 'both' || o === void 0
                    ? this.position(
                        g / 2 + this.parent().offsetLeft,
                        _ / 2 + this.parent().offsetTop,
                      )
                    : o === 'horizontal'
                    ? this.position(g / 2 + this.parent().offsetLeft, f.y)
                    : o === 'vertical' &&
                      this.position(f.x, _ / 2 + this.parent().offsetTop),
                  this.style('display', s),
                  n && this.hide(),
                  c && this.parent().hide(),
                  this
                );
              }),
              (a.default.Element.prototype.html = function () {
                return arguments.length === 0
                  ? this.elt.innerHTML
                  : (arguments[1]
                      ? this.elt.insertAdjacentHTML('beforeend', arguments[0])
                      : (this.elt.innerHTML = arguments[0]),
                    this);
              }),
              (a.default.Element.prototype.position = function () {
                return arguments.length === 0
                  ? { x: this.elt.offsetLeft, y: this.elt.offsetTop }
                  : ((this.elt.style.position =
                      arguments[2] !== 'static' &&
                      arguments[2] !== 'fixed' &&
                      arguments[2] !== 'relative' &&
                      arguments[2] !== 'sticky' &&
                      arguments[2] !== 'initial' &&
                      arguments[2] !== 'inherit'
                        ? 'absolute'
                        : arguments[2]),
                    (this.elt.style.left = arguments[0] + 'px'),
                    (this.elt.style.top = arguments[1] + 'px'),
                    (this.x = arguments[0]),
                    (this.y = arguments[1]),
                    this);
              }),
              (a.default.Element.prototype._translate = function () {
                this.elt.style.position = 'absolute';
                var o = '';
                return (
                  this.elt.style.transform &&
                    (o = (o = this.elt.style.transform.replace(
                      /translate3d\(.*\)/g,
                      '',
                    )).replace(/translate[X-Z]?\(.*\)/g, '')),
                  arguments.length === 2
                    ? (this.elt.style.transform =
                        'translate(' +
                        arguments[0] +
                        'px, ' +
                        arguments[1] +
                        'px)')
                    : 2 < arguments.length &&
                      ((this.elt.style.transform =
                        'translate3d(' +
                        arguments[0] +
                        'px,' +
                        arguments[1] +
                        'px,' +
                        arguments[2] +
                        'px)'),
                      (this.elt.parentElement.style.perspective =
                        arguments.length === 3
                          ? '1000px'
                          : arguments[3] + 'px')),
                  (this.elt.style.transform += o),
                  this
                );
              }),
              (a.default.Element.prototype._rotate = function () {
                var o = '';
                return (
                  this.elt.style.transform &&
                    (o = (o = this.elt.style.transform.replace(
                      /rotate3d\(.*\)/g,
                      '',
                    )).replace(/rotate[X-Z]?\(.*\)/g, '')),
                  arguments.length === 1
                    ? (this.elt.style.transform =
                        'rotate(' + arguments[0] + 'deg)')
                    : arguments.length === 2
                    ? (this.elt.style.transform =
                        'rotate(' +
                        arguments[0] +
                        'deg, ' +
                        arguments[1] +
                        'deg)')
                    : arguments.length === 3 &&
                      ((this.elt.style.transform =
                        'rotateX(' + arguments[0] + 'deg)'),
                      (this.elt.style.transform +=
                        'rotateY(' + arguments[1] + 'deg)'),
                      (this.elt.style.transform +=
                        'rotateZ(' + arguments[2] + 'deg)')),
                  (this.elt.style.transform += o),
                  this
                );
              }),
              (a.default.Element.prototype.style = function (o, s) {
                if (
                  (s =
                    s instanceof a.default.Color
                      ? 'rgba(' +
                        s.levels[0] +
                        ',' +
                        s.levels[1] +
                        ',' +
                        s.levels[2] +
                        ',' +
                        s.levels[3] / 255 +
                        ')'
                      : s) === void 0
                ) {
                  if (o.indexOf(':') === -1)
                    return window
                      .getComputedStyle(this.elt)
                      .getPropertyValue(o);
                  for (var n = o.split(';'), c = 0; c < n.length; c++) {
                    var f = n[c].split(':');
                    f[0] && f[1] && (this.elt.style[f[0].trim()] = f[1].trim());
                  }
                } else
                  (this.elt.style[o] = s),
                    (o !== 'width' &&
                      o !== 'height' &&
                      o !== 'left' &&
                      o !== 'top') ||
                      ((s = window
                        .getComputedStyle(this.elt)
                        .getPropertyValue(o)
                        .replace(/[^\d.]/g, '')),
                      (this[o] = Math.round(parseFloat(s, 10))));
                return this;
              }),
              (a.default.Element.prototype.attribute = function (o, s) {
                if (
                  this.elt.firstChild == null ||
                  (this.elt.firstChild.type !== 'checkbox' &&
                    this.elt.firstChild.type !== 'radio')
                )
                  return s === void 0
                    ? this.elt.getAttribute(o)
                    : (this.elt.setAttribute(o, s), this);
                if (s === void 0) return this.elt.firstChild.getAttribute(o);
                for (var n = 0; n < this.elt.childNodes.length; n++)
                  this.elt.childNodes[n].setAttribute(o, s);
              }),
              (a.default.Element.prototype.removeAttribute = function (o) {
                if (
                  this.elt.firstChild != null &&
                  (this.elt.firstChild.type === 'checkbox' ||
                    this.elt.firstChild.type === 'radio')
                )
                  for (var s = 0; s < this.elt.childNodes.length; s++)
                    this.elt.childNodes[s].removeAttribute(o);
                return this.elt.removeAttribute(o), this;
              }),
              (a.default.Element.prototype.value = function () {
                return 0 < arguments.length
                  ? ((this.elt.value = arguments[0]), this)
                  : this.elt.type === 'range'
                  ? parseFloat(this.elt.value)
                  : this.elt.value;
              }),
              (a.default.Element.prototype.show = function () {
                return (this.elt.style.display = 'block'), this;
              }),
              (a.default.Element.prototype.hide = function () {
                return (this.elt.style.display = 'none'), this;
              }),
              (a.default.Element.prototype.size = function (o, s) {
                if (arguments.length === 0)
                  return {
                    width: this.elt.offsetWidth,
                    height: this.elt.offsetHeight,
                  };
                var n = o,
                  c = s,
                  f = a.default.prototype.AUTO;
                if (n !== f || c !== f) {
                  if (
                    (n === f
                      ? (n = (s * this.width) / this.height)
                      : c === f && (c = (o * this.height) / this.width),
                    this.elt instanceof HTMLCanvasElement)
                  ) {
                    var g,
                      _ = {},
                      x = this.elt.getContext('2d');
                    for (g in x) _[g] = x[g];
                    for (g in (this.elt.setAttribute(
                      'width',
                      n * this._pInst._pixelDensity,
                    ),
                    this.elt.setAttribute(
                      'height',
                      c * this._pInst._pixelDensity,
                    ),
                    (this.elt.style.width = n + 'px'),
                    (this.elt.style.height = c + 'px'),
                    this._pInst.scale(
                      this._pInst._pixelDensity,
                      this._pInst._pixelDensity,
                    ),
                    _))
                      this.elt.getContext('2d')[g] = _[g];
                  } else
                    (this.elt.style.width = n + 'px'),
                      (this.elt.style.height = c + 'px'),
                      (this.elt.width = n),
                      (this.elt.height = c);
                  (this.width = this.elt.offsetWidth),
                    (this.height = this.elt.offsetHeight),
                    this._pInst &&
                      this._pInst._curElement &&
                      this._pInst._curElement.elt === this.elt &&
                      (this._pInst._setProperty('width', this.elt.offsetWidth),
                      this._pInst._setProperty(
                        'height',
                        this.elt.offsetHeight,
                      ));
                }
                return this;
              }),
              (a.default.Element.prototype.remove = function () {
                this instanceof a.default.MediaElement &&
                  (this.stop(),
                  (s = this.elt.srcObject) !== null &&
                    s.getTracks().forEach(function (n) {
                      n.stop();
                    }));
                var o,
                  s = this._pInst._elements.indexOf(this);
                for (o in (s !== -1 && this._pInst._elements.splice(s, 1),
                this._events))
                  this.elt.removeEventListener(o, this._events[o]);
                this.elt &&
                  this.elt.parentNode &&
                  this.elt.parentNode.removeChild(this.elt);
              }),
              (a.default.Element.prototype.drop = function (o, s) {
                var n;
                return (
                  window.File &&
                  window.FileReader &&
                  window.FileList &&
                  window.Blob
                    ? (this._dragDisabled ||
                        ((this._dragDisabled = !0),
                        this.elt.addEventListener(
                          'dragover',
                          (n = function (c) {
                            c.preventDefault();
                          }),
                        ),
                        this.elt.addEventListener('dragleave', n)),
                      a.default.Element._attachListener(
                        'drop',
                        function (c) {
                          c.preventDefault(),
                            typeof s == 'function' && s.call(this, c);
                          for (
                            var f = c.dataTransfer.files, g = 0;
                            g < f.length;
                            g++
                          ) {
                            var _ = f[g];
                            a.default.File._load(_, o);
                          }
                        },
                        this,
                      ))
                    : console.log(
                        'The File APIs are not fully supported in this browser.',
                      ),
                  this
                );
              }),
              (a.default.MediaElement = function (o, s) {
                a.default.Element.call(this, o, s);
                var n = this;
                (this.elt.crossOrigin = 'anonymous'),
                  (this._prevTime = 0),
                  (this._cueIDCounter = 0),
                  (this._cues = []),
                  ((this._pixelsState = this)._pixelDensity = 1),
                  (this._modified = !1),
                  Object.defineProperty(n, 'src', {
                    get: function () {
                      var c = n.elt.children[0].src,
                        f = n.elt.src === window.location.href ? '' : n.elt.src;
                      return c === window.location.href ? f : c;
                    },
                    set: function (c) {
                      for (var f = 0; f < n.elt.children.length; f++)
                        n.elt.removeChild(n.elt.children[f]);
                      var g = document.createElement('source');
                      (g.src = c),
                        o.appendChild(g),
                        (n.elt.src = c),
                        (n.modified = !0);
                    },
                  }),
                  (n._onended = function () {}),
                  (n.elt.onended = function () {
                    n._onended(n);
                  });
              }),
              (a.default.MediaElement.prototype = Object.create(
                a.default.Element.prototype,
              )),
              (a.default.MediaElement.prototype.play = function () {
                var o;
                return (
                  this.elt.currentTime === this.elt.duration &&
                    (this.elt.currentTime = 0),
                  1 < this.elt.readyState || this.elt.load(),
                  (o = this.elt.play()) &&
                    o.catch &&
                    o.catch(function (s) {
                      s.name === 'NotAllowedError'
                        ? console.error(s)
                        : console.error(
                            'Media play method encountered an unexpected error',
                            s,
                          );
                    }),
                  this
                );
              }),
              (a.default.MediaElement.prototype.stop = function () {
                return this.elt.pause(), (this.elt.currentTime = 0), this;
              }),
              (a.default.MediaElement.prototype.pause = function () {
                return this.elt.pause(), this;
              }),
              (a.default.MediaElement.prototype.loop = function () {
                return this.elt.setAttribute('loop', !0), this.play(), this;
              }),
              (a.default.MediaElement.prototype.noLoop = function () {
                return this.elt.removeAttribute('loop'), this;
              }),
              (a.default.MediaElement.prototype._setupAutoplayFailDetection =
                function () {
                  var o = setTimeout(function () {
                    console.error(e);
                  }, 500);
                  this.elt.addEventListener(
                    'play',
                    function () {
                      return clearTimeout(o);
                    },
                    { passive: !0, once: !0 },
                  );
                }),
              (a.default.MediaElement.prototype.autoplay = function (o) {
                var s = this,
                  n = this.elt.getAttribute('autoplay');
                return (
                  this.elt.setAttribute('autoplay', o),
                  o &&
                    !n &&
                    ((o = function () {
                      return s._setupAutoplayFailDetection();
                    }),
                    this.elt.readyState === 4
                      ? o()
                      : this.elt.addEventListener('canplay', o, {
                          passive: !0,
                          once: !0,
                        })),
                  this
                );
              }),
              (a.default.MediaElement.prototype.volume = function (o) {
                if (o === void 0) return this.elt.volume;
                this.elt.volume = o;
              }),
              (a.default.MediaElement.prototype.speed = function (o) {
                if (o === void 0)
                  return this.presetPlaybackRate || this.elt.playbackRate;
                this.loadedmetadata
                  ? (this.elt.playbackRate = o)
                  : (this.presetPlaybackRate = o);
              }),
              (a.default.MediaElement.prototype.time = function (o) {
                return o === void 0
                  ? this.elt.currentTime
                  : ((this.elt.currentTime = o), this);
              }),
              (a.default.MediaElement.prototype.duration = function () {
                return this.elt.duration;
              }),
              (a.default.MediaElement.prototype.pixels = []),
              (a.default.MediaElement.prototype._ensureCanvas = function () {
                this.canvas ||
                  ((this.canvas = document.createElement('canvas')),
                  (this.drawingContext = this.canvas.getContext('2d')),
                  this.setModified(!0)),
                  this.loadedmetadata &&
                    (this.canvas.width !== this.elt.width &&
                      ((this.canvas.width = this.elt.width),
                      (this.canvas.height = this.elt.height),
                      (this.width = this.canvas.width),
                      (this.height = this.canvas.height)),
                    this.drawingContext.drawImage(
                      this.elt,
                      0,
                      0,
                      this.canvas.width,
                      this.canvas.height,
                    ),
                    this.setModified(!0));
              }),
              (a.default.MediaElement.prototype.loadPixels = function () {
                return (
                  this._ensureCanvas(),
                  a.default.Renderer2D.prototype.loadPixels.apply(
                    this,
                    arguments,
                  )
                );
              }),
              (a.default.MediaElement.prototype.updatePixels = function (
                o,
                s,
                n,
                c,
              ) {
                return (
                  this.loadedmetadata &&
                    (this._ensureCanvas(),
                    a.default.Renderer2D.prototype.updatePixels.call(
                      this,
                      o,
                      s,
                      n,
                      c,
                    )),
                  this.setModified(!0),
                  this
                );
              }),
              (a.default.MediaElement.prototype.get = function () {
                return (
                  this._ensureCanvas(),
                  a.default.Renderer2D.prototype.get.apply(this, arguments)
                );
              }),
              (a.default.MediaElement.prototype._getPixel = function () {
                return (
                  this.loadPixels(),
                  a.default.Renderer2D.prototype._getPixel.apply(
                    this,
                    arguments,
                  )
                );
              }),
              (a.default.MediaElement.prototype.set = function (o, s, n) {
                this.loadedmetadata &&
                  (this._ensureCanvas(),
                  a.default.Renderer2D.prototype.set.call(this, o, s, n),
                  this.setModified(!0));
              }),
              (a.default.MediaElement.prototype.copy = function () {
                this._ensureCanvas(),
                  a.default.prototype.copy.apply(this, arguments);
              }),
              (a.default.MediaElement.prototype.mask = function () {
                this.loadPixels(),
                  this.setModified(!0),
                  a.default.Image.prototype.mask.apply(this, arguments);
              }),
              (a.default.MediaElement.prototype.isModified = function () {
                return this._modified;
              }),
              (a.default.MediaElement.prototype.setModified = function (o) {
                this._modified = o;
              }),
              (a.default.MediaElement.prototype.onended = function (o) {
                return (this._onended = o), this;
              }),
              (a.default.MediaElement.prototype.connect = function (o) {
                var s, n;
                if (typeof a.default.prototype.getAudioContext == 'function')
                  (s = a.default.prototype.getAudioContext()),
                    (n = a.default.soundOut.input);
                else
                  try {
                    n = (s = o.context).destination;
                  } catch {
                    throw 'connect() is meant to be used with Web Audio API or p5.sound.js';
                  }
                this.audioSourceNode ||
                  ((this.audioSourceNode = s.createMediaElementSource(
                    this.elt,
                  )),
                  this.audioSourceNode.connect(n)),
                  o
                    ? o.input
                      ? this.audioSourceNode.connect(o.input)
                      : this.audioSourceNode.connect(o)
                    : this.audioSourceNode.connect(n);
              }),
              (a.default.MediaElement.prototype.disconnect = function () {
                if (!this.audioSourceNode) throw 'nothing to disconnect';
                this.audioSourceNode.disconnect();
              }),
              (a.default.MediaElement.prototype.showControls = function () {
                (this.elt.style['text-align'] = 'inherit'),
                  (this.elt.controls = !0);
              }),
              (a.default.MediaElement.prototype.hideControls = function () {
                this.elt.controls = !1;
              });
            function h(o, s, n, c) {
              (this.callback = o),
                (this.time = s),
                (this.id = n),
                (this.val = c);
            }
            (a.default.MediaElement.prototype.addCue = function (o, f, n) {
              var c = this._cueIDCounter++,
                f = new h(f, o, c, n);
              return (
                this._cues.push(f),
                this.elt.ontimeupdate ||
                  (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)),
                c
              );
            }),
              (a.default.MediaElement.prototype.removeCue = function (o) {
                for (var s = 0; s < this._cues.length; s++)
                  this._cues[s].id === o &&
                    (console.log(o), this._cues.splice(s, 1));
                this._cues.length === 0 && (this.elt.ontimeupdate = null);
              }),
              (a.default.MediaElement.prototype.clearCues = function () {
                (this._cues = []), (this.elt.ontimeupdate = null);
              }),
              (a.default.MediaElement.prototype._onTimeUpdate = function () {
                for (var o = this.time(), s = 0; s < this._cues.length; s++) {
                  var n = this._cues[s].time,
                    c = this._cues[s].val;
                  this._prevTime < n && n <= o && this._cues[s].callback(c);
                }
                this._prevTime = o;
              }),
              (a.default.File = function (o, s) {
                (this.file = o),
                  (this._pInst = s),
                  (s = o.type.split('/')),
                  (this.type = s[0]),
                  (this.subtype = s[1]),
                  (this.name = o.name),
                  (this.size = o.size),
                  (this.data = void 0);
              }),
              (a.default.File._createLoader = function (o, s) {
                var n = new FileReader();
                return (
                  (n.onload = function (c) {
                    var f,
                      g = new a.default.File(o);
                    g.file.type === 'application/json'
                      ? (g.data = JSON.parse(c.target.result))
                      : g.file.type === 'text/xml'
                      ? ((f = new DOMParser().parseFromString(
                          c.target.result,
                          'text/xml',
                        )),
                        (g.data = new a.default.XML(f.documentElement)))
                      : (g.data = c.target.result),
                      s(g);
                  }),
                  n
                );
              }),
              (a.default.File._load = function (o, s) {
                var n;
                /^text\//.test(o.type) || o.type === 'application/json'
                  ? a.default.File._createLoader(o, s).readAsText(o)
                  : /^(video|audio)\//.test(o.type)
                  ? (((n = new a.default.File(o)).data =
                      URL.createObjectURL(o)),
                    s(n))
                  : a.default.File._createLoader(o, s).readAsDataURL(o);
              }),
              (t = a.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.every': 151,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.for-each': 154,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.for-each': 229,
            'core-js/modules/web.dom-collections.iterator': 230,
            'core-js/modules/web.url': 232,
          },
        ],
        284: [
          function (t, b, y) {
            function u(j) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (v) {
                      return typeof v;
                    }
                  : function (v) {
                      return v &&
                        typeof Symbol == 'function' &&
                        v.constructor === Symbol &&
                        v !== Symbol.prototype
                        ? 'symbol'
                        : typeof v;
                    })(j);
            }
            function a(j) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (v) {
                      return u(v);
                    }
                  : function (v) {
                      return v &&
                        typeof Symbol == 'function' &&
                        v.constructor === Symbol &&
                        v !== Symbol.prototype
                        ? 'symbol'
                        : u(v);
                    })(j);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (x = t('../core/main')) && x.__esModule ? x : { default: x },
              l = (function (j) {
                if (j && j.__esModule) return j;
                if (j === null || (a(j) !== 'object' && typeof j != 'function'))
                  return { default: j };
                var v = d();
                if (v && v.has(j)) return v.get(j);
                var M,
                  C = {},
                  k = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (M in j) {
                  var A;
                  Object.prototype.hasOwnProperty.call(j, M) &&
                    ((A = k ? Object.getOwnPropertyDescriptor(j, M) : null) &&
                    (A.get || A.set)
                      ? Object.defineProperty(C, M, A)
                      : (C[M] = j[M]));
                }
                return (C.default = j), v && v.set(j, C), C;
              })(t('../core/constants'));
            function d() {
              var j;
              return typeof WeakMap != 'function'
                ? null
                : ((j = new WeakMap()),
                  (d = function () {
                    return j;
                  }),
                  j);
            }
            (r.default.prototype.deviceOrientation =
              1 < window.innerWidth / window.innerHeight
                ? 'landscape'
                : 'portrait'),
              (r.default.prototype.accelerationX = 0),
              (r.default.prototype.accelerationY = 0),
              (r.default.prototype.accelerationZ = 0),
              (r.default.prototype.pAccelerationX = 0),
              (r.default.prototype.pAccelerationY = 0),
              (r.default.prototype.pAccelerationZ = 0),
              (r.default.prototype._updatePAccelerations = function () {
                this._setProperty('pAccelerationX', this.accelerationX),
                  this._setProperty('pAccelerationY', this.accelerationY),
                  this._setProperty('pAccelerationZ', this.accelerationZ);
              }),
              (r.default.prototype.rotationX = 0),
              (r.default.prototype.rotationY = 0),
              (r.default.prototype.rotationZ = 0),
              (r.default.prototype.pRotationX = 0),
              (r.default.prototype.pRotationY = 0);
            var h = (r.default.prototype.pRotationZ = 0),
              o = 0,
              s = 0,
              n = 'clockwise',
              c = 'clockwise',
              f = 'clockwise',
              g =
                ((r.default.prototype.pRotateDirectionX = void 0),
                (r.default.prototype.pRotateDirectionY = void 0),
                (r.default.prototype.pRotateDirectionZ = void 0),
                (r.default.prototype._updatePRotations = function () {
                  this._setProperty('pRotationX', this.rotationX),
                    this._setProperty('pRotationY', this.rotationY),
                    this._setProperty('pRotationZ', this.rotationZ);
                }),
                (r.default.prototype.turnAxis = void 0),
                0.5),
              _ = 30,
              x =
                ((r.default.prototype.setMoveThreshold = function (j) {
                  r.default._validateParameters('setMoveThreshold', arguments),
                    (g = j);
                }),
                (r.default.prototype.setShakeThreshold = function (j) {
                  r.default._validateParameters('setShakeThreshold', arguments),
                    (_ = j);
                }),
                (r.default.prototype._ondeviceorientation = function (j) {
                  this._updatePRotations(),
                    this._angleMode === l.radians &&
                      ((j.beta = j.beta * (_PI / 180)),
                      (j.gamma = j.gamma * (_PI / 180)),
                      (j.alpha = j.alpha * (_PI / 180))),
                    this._setProperty('rotationX', j.beta),
                    this._setProperty('rotationY', j.gamma),
                    this._setProperty('rotationZ', j.alpha),
                    this._handleMotion();
                }),
                (r.default.prototype._ondevicemotion = function (j) {
                  this._updatePAccelerations(),
                    this._setProperty('accelerationX', 2 * j.acceleration.x),
                    this._setProperty('accelerationY', 2 * j.acceleration.y),
                    this._setProperty('accelerationZ', 2 * j.acceleration.z),
                    this._handleMotion();
                }),
                (r.default.prototype._handleMotion = function () {
                  window.orientation === 90 || window.orientation === -90
                    ? this._setProperty('deviceOrientation', 'landscape')
                    : window.orientation === 0
                    ? this._setProperty('deviceOrientation', 'portrait')
                    : window.orientation === void 0 &&
                      this._setProperty('deviceOrientation', 'undefined');
                  var j,
                    v,
                    M,
                    C,
                    k,
                    A = this._isGlobal ? window : this;
                  typeof A.deviceMoved == 'function' &&
                    (Math.abs(this.accelerationX - this.pAccelerationX) > g ||
                      Math.abs(this.accelerationY - this.pAccelerationY) > g ||
                      Math.abs(this.accelerationZ - this.pAccelerationZ) > g) &&
                    A.deviceMoved(),
                    typeof A.deviceTurned == 'function' &&
                      ((v = this.rotationX + 180),
                      (j = this.pRotationX + 180),
                      (M = h + 180),
                      (0 < v - j && v - j < 270) || v - j < -270
                        ? (n = 'clockwise')
                        : (v - j < 0 || 270 < v - j) &&
                          (n = 'counter-clockwise'),
                      n !== this.pRotateDirectionX && (M = v),
                      90 < Math.abs(v - M) &&
                        Math.abs(v - M) < 270 &&
                        ((M = v),
                        this._setProperty('turnAxis', 'X'),
                        A.deviceTurned()),
                      (this.pRotateDirectionX = n),
                      (h = M - 180),
                      (j = this.rotationY + 180),
                      (v = this.pRotationY + 180),
                      (M = o + 180),
                      (0 < j - v && j - v < 270) || j - v < -270
                        ? (c = 'clockwise')
                        : (j - v < 0 || 270 < j - this.pRotationY) &&
                          (c = 'counter-clockwise'),
                      c !== this.pRotateDirectionY && (M = j),
                      90 < Math.abs(j - M) &&
                        Math.abs(j - M) < 270 &&
                        ((M = j),
                        this._setProperty('turnAxis', 'Y'),
                        A.deviceTurned()),
                      (this.pRotateDirectionY = c),
                      (o = M - 180),
                      (0 < this.rotationZ - this.pRotationZ &&
                        this.rotationZ - this.pRotationZ < 270) ||
                      this.rotationZ - this.pRotationZ < -270
                        ? (f = 'clockwise')
                        : (this.rotationZ - this.pRotationZ < 0 ||
                            270 < this.rotationZ - this.pRotationZ) &&
                          (f = 'counter-clockwise'),
                      f !== this.pRotateDirectionZ && (s = this.rotationZ),
                      90 < Math.abs(this.rotationZ - s) &&
                        Math.abs(this.rotationZ - s) < 270 &&
                        ((s = this.rotationZ),
                        this._setProperty('turnAxis', 'Z'),
                        A.deviceTurned()),
                      (this.pRotateDirectionZ = f),
                      this._setProperty('turnAxis', void 0)),
                    typeof A.deviceShaken == 'function' &&
                      (this.pAccelerationX !== null &&
                        ((C = Math.abs(
                          this.accelerationX - this.pAccelerationX,
                        )),
                        (k = Math.abs(
                          this.accelerationY - this.pAccelerationY,
                        ))),
                      _ < C + k && A.deviceShaken());
                }),
                r.default);
            y.default = x;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        285: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.prototype.isKeyPressed = !1),
              (u.default.prototype.keyIsPressed = !1),
              (u.default.prototype.key = ''),
              (u.default.prototype.keyCode = 0),
              (u.default.prototype._onkeydown = function (a) {
                var r;
                this._downKeys[a.which] ||
                  (this._setProperty('isKeyPressed', !0),
                  this._setProperty('keyIsPressed', !0),
                  this._setProperty('keyCode', a.which),
                  (this._downKeys[a.which] = !0),
                  this._setProperty(
                    'key',
                    a.key || String.fromCharCode(a.which) || a.which,
                  ),
                  typeof (r = this._isGlobal ? window : this).keyPressed !=
                    'function' ||
                    a.charCode ||
                    (r.keyPressed(a) === !1 && a.preventDefault()));
              }),
              (u.default.prototype._onkeyup = function (a) {
                (this._downKeys[a.which] = !1),
                  this._areDownKeys() ||
                    (this._setProperty('isKeyPressed', !1),
                    this._setProperty('keyIsPressed', !1)),
                  this._setProperty('_lastKeyCodeTyped', null),
                  this._setProperty(
                    'key',
                    a.key || String.fromCharCode(a.which) || a.which,
                  ),
                  this._setProperty('keyCode', a.which);
                var r = this._isGlobal ? window : this;
                typeof r.keyReleased == 'function' &&
                  r.keyReleased(a) === !1 &&
                  a.preventDefault();
              }),
              (u.default.prototype._onkeypress = function (a) {
                var r;
                a.which !== this._lastKeyCodeTyped &&
                  (this._setProperty('_lastKeyCodeTyped', a.which),
                  this._setProperty(
                    'key',
                    a.key || String.fromCharCode(a.which) || a.which,
                  ),
                  typeof (r = this._isGlobal ? window : this).keyTyped ==
                    'function' &&
                    r.keyTyped(a) === !1 &&
                    a.preventDefault());
              }),
              (u.default.prototype._onblur = function (a) {
                this._downKeys = {};
              }),
              (u.default.prototype.keyIsDown = function (a) {
                return (
                  u.default._validateParameters('keyIsDown', arguments),
                  this._downKeys[a] || !1
                );
              }),
              (u.default.prototype._areDownKeys = function () {
                for (var a in this._downKeys)
                  if (
                    this._downKeys.hasOwnProperty(a) &&
                    this._downKeys[a] === !0
                  )
                    return !0;
                return !1;
              }),
              (t = u.default),
              (y.default = t);
          },
          { '../core/main': 267 },
        ],
        286: [
          function (t, b, y) {
            function u(h) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (o) {
                      return typeof o;
                    }
                  : function (o) {
                      return o &&
                        typeof Symbol == 'function' &&
                        o.constructor === Symbol &&
                        o !== Symbol.prototype
                        ? 'symbol'
                        : typeof o;
                    })(h);
            }
            function a(h) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (o) {
                      return u(o);
                    }
                  : function (o) {
                      return o &&
                        typeof Symbol == 'function' &&
                        o.constructor === Symbol &&
                        o !== Symbol.prototype
                        ? 'symbol'
                        : u(o);
                    })(h);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.string.includes'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (r = t('../core/main')) && r.__esModule ? r : { default: r },
              l = (function (h) {
                if (h && h.__esModule) return h;
                if (h === null || (a(h) !== 'object' && typeof h != 'function'))
                  return { default: h };
                var o = d();
                if (o && o.has(h)) return o.get(h);
                var s,
                  n = {},
                  c = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (s in h) {
                  var f;
                  Object.prototype.hasOwnProperty.call(h, s) &&
                    ((f = c ? Object.getOwnPropertyDescriptor(h, s) : null) &&
                    (f.get || f.set)
                      ? Object.defineProperty(n, s, f)
                      : (n[s] = h[s]));
                }
                return (n.default = h), o && o.set(h, n), n;
              })(t('../core/constants'));
            function d() {
              var h;
              return typeof WeakMap != 'function'
                ? null
                : ((h = new WeakMap()),
                  (d = function () {
                    return h;
                  }),
                  h);
            }
            (r.default.prototype.movedX = 0),
              (r.default.prototype.movedY = 0),
              (r.default.prototype._hasMouseInteracted = !1),
              (r.default.prototype.mouseX = 0),
              (r.default.prototype.mouseY = 0),
              (r.default.prototype.pmouseX = 0),
              (r.default.prototype.pmouseY = 0),
              (r.default.prototype.winMouseX = 0),
              (r.default.prototype.winMouseY = 0),
              (r.default.prototype.pwinMouseX = 0),
              (r.default.prototype.pwinMouseY = 0),
              (r.default.prototype.mouseButton = 0),
              (r.default.prototype.mouseIsPressed = !1),
              (r.default.prototype._updateNextMouseCoords = function (h) {
                var o, s, n, c, f;
                this._curElement !== null &&
                  (!h.touches || 0 < h.touches.length) &&
                  ((o = this._curElement.elt),
                  (s = this.width),
                  (n = this.height),
                  (c = h) &&
                    !c.clientX &&
                    (c.touches
                      ? (c = c.touches[0])
                      : c.changedTouches && (c = c.changedTouches[0])),
                  (f = o.getBoundingClientRect()),
                  (s = o.scrollWidth / s || 1),
                  (o = o.scrollHeight / n || 1),
                  (n = {
                    x: (c.clientX - f.left) / s,
                    y: (c.clientY - f.top) / o,
                    winX: c.clientX,
                    winY: c.clientY,
                    id: c.identifier,
                  }),
                  this._setProperty('movedX', h.movementX),
                  this._setProperty('movedY', h.movementY),
                  this._setProperty('mouseX', n.x),
                  this._setProperty('mouseY', n.y),
                  this._setProperty('winMouseX', n.winX),
                  this._setProperty('winMouseY', n.winY)),
                  this._hasMouseInteracted ||
                    (this._updateMouseCoords(),
                    this._setProperty('_hasMouseInteracted', !0));
              }),
              (r.default.prototype._updateMouseCoords = function () {
                this._setProperty('pmouseX', this.mouseX),
                  this._setProperty('pmouseY', this.mouseY),
                  this._setProperty('pwinMouseX', this.winMouseX),
                  this._setProperty('pwinMouseY', this.winMouseY),
                  this._setProperty(
                    '_pmouseWheelDeltaY',
                    this._mouseWheelDeltaY,
                  );
              }),
              (r.default.prototype._setMouseButton = function (h) {
                h.button === 1
                  ? this._setProperty('mouseButton', l.CENTER)
                  : h.button === 2
                  ? this._setProperty('mouseButton', l.RIGHT)
                  : this._setProperty('mouseButton', l.LEFT);
              }),
              (r.default.prototype._onmousemove = function (h) {
                var o = this._isGlobal ? window : this;
                this._updateNextMouseCoords(h),
                  this.mouseIsPressed
                    ? typeof o.mouseDragged == 'function'
                      ? o.mouseDragged(h) === !1 && h.preventDefault()
                      : typeof o.touchMoved == 'function' &&
                        o.touchMoved(h) === !1 &&
                        h.preventDefault()
                    : typeof o.mouseMoved == 'function' &&
                      o.mouseMoved(h) === !1 &&
                      h.preventDefault();
              }),
              (r.default.prototype._onmousedown = function (h) {
                var o = this._isGlobal ? window : this;
                this._setProperty('mouseIsPressed', !0),
                  this._setMouseButton(h),
                  this._updateNextMouseCoords(h),
                  typeof o.mousePressed == 'function'
                    ? o.mousePressed(h) === !1 && h.preventDefault()
                    : navigator.userAgent.toLowerCase().includes('safari') &&
                      typeof o.touchStarted == 'function' &&
                      o.touchStarted(h) === !1 &&
                      h.preventDefault();
              }),
              (r.default.prototype._onmouseup = function (h) {
                var o = this._isGlobal ? window : this;
                this._setProperty('mouseIsPressed', !1),
                  typeof o.mouseReleased == 'function'
                    ? o.mouseReleased(h) === !1 && h.preventDefault()
                    : typeof o.touchEnded == 'function' &&
                      o.touchEnded(h) === !1 &&
                      h.preventDefault();
              }),
              (r.default.prototype._ondragend = r.default.prototype._onmouseup),
              (r.default.prototype._ondragover =
                r.default.prototype._onmousemove),
              (r.default.prototype._onclick = function (h) {
                var o = this._isGlobal ? window : this;
                typeof o.mouseClicked == 'function' &&
                  o.mouseClicked(h) === !1 &&
                  h.preventDefault();
              }),
              (r.default.prototype._ondblclick = function (h) {
                var o = this._isGlobal ? window : this;
                typeof o.doubleClicked == 'function' &&
                  o.doubleClicked(h) === !1 &&
                  h.preventDefault();
              }),
              (r.default.prototype._mouseWheelDeltaY = 0),
              (r.default.prototype._pmouseWheelDeltaY = 0),
              (r.default.prototype._onwheel = function (h) {
                var o = this._isGlobal ? window : this;
                this._setProperty('_mouseWheelDeltaY', h.deltaY),
                  typeof o.mouseWheel == 'function' &&
                    ((h.delta = h.deltaY),
                    o.mouseWheel(h) === !1 && h.preventDefault());
              }),
              (r.default.prototype.requestPointerLock = function () {
                var h = this._curElement.elt;
                return (
                  (h.requestPointerLock =
                    h.requestPointerLock || h.mozRequestPointerLock),
                  h.requestPointerLock
                    ? (h.requestPointerLock(), !0)
                    : (console.log(
                        'requestPointerLock is not implemented in this browser',
                      ),
                      !1)
                );
              }),
              (r.default.prototype.exitPointerLock = function () {
                document.exitPointerLock();
              }),
              (t = r.default),
              (y.default = t);
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        287: [
          function (t, b, y) {
            t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.string.includes'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.prototype.touches = []),
              (t.default.prototype._updateTouchCoords = function (u) {
                if (this._curElement !== null) {
                  for (var a = [], r = 0; r < u.touches.length; r++)
                    a[r] = (function (f, c, g, o) {
                      var s =
                          4 < arguments.length && arguments[4] !== void 0
                            ? arguments[4]
                            : 0,
                        n = f.getBoundingClientRect(),
                        c = f.scrollWidth / c || 1,
                        f = f.scrollHeight / g || 1,
                        g = o.touches[s] || o.changedTouches[s];
                      return {
                        x: (g.clientX - n.left) / c,
                        y: (g.clientY - n.top) / f,
                        winX: g.clientX,
                        winY: g.clientY,
                        id: g.identifier,
                      };
                    })(this._curElement.elt, this.width, this.height, u, r);
                  this._setProperty('touches', a);
                }
              }),
              (t.default.prototype._ontouchstart = function (u) {
                var a = this._isGlobal ? window : this;
                this._setProperty('mouseIsPressed', !0),
                  this._updateTouchCoords(u),
                  this._updateNextMouseCoords(u),
                  this._updateMouseCoords(),
                  typeof a.touchStarted == 'function'
                    ? a.touchStarted(u) === !1 && u.preventDefault()
                    : navigator.userAgent.toLowerCase().includes('safari') &&
                      typeof a.mousePressed == 'function' &&
                      a.mousePressed(u) === !1 &&
                      u.preventDefault();
              }),
              (t.default.prototype._ontouchmove = function (u) {
                var a = this._isGlobal ? window : this;
                this._updateTouchCoords(u),
                  this._updateNextMouseCoords(u),
                  typeof a.touchMoved == 'function'
                    ? a.touchMoved(u) === !1 && u.preventDefault()
                    : typeof a.mouseDragged == 'function' &&
                      a.mouseDragged(u) === !1 &&
                      u.preventDefault();
              }),
              (t.default.prototype._ontouchend = function (u) {
                this._setProperty('mouseIsPressed', !1),
                  this._updateTouchCoords(u),
                  this._updateNextMouseCoords(u);
                var a = this._isGlobal ? window : this;
                typeof a.touchEnded == 'function'
                  ? a.touchEnded(u) === !1 && u.preventDefault()
                  : typeof a.mouseReleased == 'function' &&
                    a.mouseReleased(u) === !1 &&
                    u.preventDefault();
              }),
              (t = t.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.string.includes': 185,
          },
        ],
        288: [
          function (t, b, y) {
            t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.typed-array.int32-array'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.typed-array.int32-array'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u,
              a,
              r,
              l,
              d = {};
            function h(o, s) {
              for (
                var n,
                  c,
                  f,
                  g,
                  _,
                  x,
                  j,
                  v,
                  M,
                  C,
                  k = d._toPixels(o),
                  A = o.width,
                  R = o.height,
                  O = A * R,
                  D = new Int32Array(O),
                  N = 0;
                N < O;
                N++
              )
                D[N] = d._getARGB(k, N);
              var U,
                H,
                q,
                z = new Int32Array(O),
                X = new Int32Array(O),
                W = new Int32Array(O),
                Z = new Int32Array(O),
                $ = 0,
                ae = (3.5 * s) | 0;
              if (u !== (ae = ae < 1 ? 1 : ae < 248 ? ae : 248)) {
                (a = (1 + (u = ae)) << 1),
                  (r = new Int32Array(a)),
                  (l = new Array(a));
                for (var P, L, B = 0; B < a; B++) l[B] = new Int32Array(256);
                for (var Y = 1, ee = ae - 1; Y < ae; Y++) {
                  r[ae + Y] = r[ee] = L = ee * ee;
                  for (var ne = l[ae + Y], ce = l[ee--], pe = 0; pe < 256; pe++)
                    ne[pe] = ce[pe] = L * pe;
                }
                (P = r[ae] = ae * ae), (ne = l[ae]);
                for (var le = 0; le < 256; le++) ne[le] = P * le;
              }
              for (H = 0; H < R; H++) {
                for (U = 0; U < A; U++) {
                  if (((g = f = c = _ = n = 0), (x = U - u) < 0))
                    (C = -x), (x = 0);
                  else {
                    if (A <= x) break;
                    C = 0;
                  }
                  for (q = C; q < a && !(A <= x); q++) {
                    var ue,
                      be = D[x + $];
                    (_ += (ue = l[q])[(-16777216 & be) >>> 24]),
                      (c += ue[(16711680 & be) >> 16]),
                      (f += ue[(65280 & be) >> 8]),
                      (g += ue[255 & be]),
                      (n += r[q]),
                      x++;
                  }
                  (z[(j = $ + U)] = _ / n),
                    (X[j] = c / n),
                    (W[j] = f / n),
                    (Z[j] = g / n);
                }
                $ += A;
              }
              for (M = (v = -u) * A, H = $ = 0; H < R; H++) {
                for (U = 0; U < A; U++) {
                  if (v < (g = f = c = _ = n = 0)) (C = j = -v), (x = U);
                  else {
                    if (R <= v) break;
                    (C = 0), (j = v), (x = U + M);
                  }
                  for (q = C; q < a && !(R <= j); q++)
                    (_ += (ue = l[q])[z[x]]),
                      (c += ue[X[x]]),
                      (f += ue[W[x]]),
                      (g += ue[Z[x]]),
                      (n += r[q]),
                      j++,
                      (x += A);
                  D[U + $] =
                    ((_ / n) << 24) |
                    ((c / n) << 16) |
                    ((f / n) << 8) |
                    (g / n);
                }
                ($ += A), (M += A), v++;
              }
              d._setPixels(k, D);
            }
            (d._toPixels = function (o) {
              var s, n;
              return o instanceof ImageData
                ? o.data
                : o.getContext('2d')
                ? o.getContext('2d').getImageData(0, 0, o.width, o.height).data
                : o.getContext('webgl')
                ? ((n =
                    (s = o.getContext('webgl')).drawingBufferWidth *
                    s.drawingBufferHeight *
                    4),
                  (n = new Uint8Array(n)),
                  s.readPixels(
                    0,
                    0,
                    o.width,
                    o.height,
                    s.RGBA,
                    s.UNSIGNED_BYTE,
                    n,
                  ),
                  n)
                : void 0;
            }),
              (d._getARGB = function (o, s) {
                return (
                  (s *= 4),
                  ((o[3 + s] << 24) & 4278190080) |
                    ((o[s] << 16) & 16711680) |
                    ((o[1 + s] << 8) & 65280) |
                    (255 & o[2 + s])
                );
              }),
              (d._setPixels = function (o, s) {
                for (var n, c = 0, f = o.length; c < f; c++)
                  (o[0 + (n = 4 * c)] = (16711680 & s[c]) >>> 16),
                    (o[1 + n] = (65280 & s[c]) >>> 8),
                    (o[2 + n] = 255 & s[c]),
                    (o[3 + n] = (4278190080 & s[c]) >>> 24);
              }),
              (d._toImageData = function (o) {
                return o instanceof ImageData
                  ? o
                  : o.getContext('2d').getImageData(0, 0, o.width, o.height);
              }),
              (d._createImageData = function (o, s) {
                return (
                  (d._tmpCanvas = document.createElement('canvas')),
                  (d._tmpCtx = d._tmpCanvas.getContext('2d')),
                  this._tmpCtx.createImageData(o, s)
                );
              }),
              (d.apply = function (o, g, n) {
                var c = o.getContext('2d'),
                  f = c.getImageData(0, 0, o.width, o.height),
                  g = g(f, n);
                g instanceof ImageData
                  ? c.putImageData(g, 0, 0, 0, 0, o.width, o.height)
                  : c.putImageData(f, 0, 0, 0, 0, o.width, o.height);
              }),
              (d.threshold = function (o, s) {
                for (
                  var n = d._toPixels(o),
                    c = (s === void 0 && (s = 0.5), Math.floor(255 * s)),
                    f = 0;
                  f < n.length;
                  f += 4
                ) {
                  var g = void 0,
                    g =
                      c <= 0.2126 * n[f] + 0.7152 * n[f + 1] + 0.0722 * n[f + 2]
                        ? 255
                        : 0;
                  n[f] = n[f + 1] = n[f + 2] = g;
                }
              }),
              (d.gray = function (o) {
                for (var s = d._toPixels(o), n = 0; n < s.length; n += 4) {
                  var c = s[n],
                    f = s[n + 1],
                    g = s[n + 2];
                  s[n] =
                    s[n + 1] =
                    s[n + 2] =
                      0.2126 * c + 0.7152 * f + 0.0722 * g;
                }
              }),
              (d.opaque = function (o) {
                for (var s = d._toPixels(o), n = 0; n < s.length; n += 4)
                  s[n + 3] = 255;
                return s;
              }),
              (d.invert = function (o) {
                for (var s = d._toPixels(o), n = 0; n < s.length; n += 4)
                  (s[n] = 255 - s[n]),
                    (s[n + 1] = 255 - s[n + 1]),
                    (s[n + 2] = 255 - s[n + 2]);
              }),
              (d.posterize = function (o, s) {
                var n = d._toPixels(o);
                if (s < 2 || 255 < s)
                  throw new Error(
                    'Level must be greater than 2 and less than 255 for posterize',
                  );
                for (var c = s - 1, f = 0; f < n.length; f += 4) {
                  var g = n[f],
                    _ = n[f + 1],
                    x = n[f + 2];
                  (n[f] = (255 * ((g * s) >> 8)) / c),
                    (n[f + 1] = (255 * ((_ * s) >> 8)) / c),
                    (n[f + 2] = (255 * ((x * s) >> 8)) / c);
                }
              }),
              (d.dilate = function (o) {
                for (
                  var s,
                    n,
                    c,
                    f,
                    g,
                    _,
                    x,
                    j,
                    v,
                    M = d._toPixels(o),
                    C = 0,
                    k = M.length ? M.length / 4 : 0,
                    A = new Int32Array(k);
                  C < k;

                )
                  for (n = (s = C) + o.width; C < n; )
                    (f = c = d._getARGB(M, C)),
                      (v = C - 1) < s && (v = C),
                      n <= (j = C + 1) && (j = C),
                      (g = C - o.width) < 0 && (g = 0),
                      k <= (_ = C + o.width) && (_ = C),
                      (g = d._getARGB(M, g)),
                      (v = d._getARGB(M, v)),
                      (_ = d._getARGB(M, _)),
                      (f =
                        77 * ((f >> 16) & 255) +
                        151 * ((f >> 8) & 255) +
                        28 * (255 & f)) <
                        (x =
                          77 * ((v >> 16) & 255) +
                          151 * ((v >> 8) & 255) +
                          28 * (255 & v)) && ((c = v), (f = x)),
                      f <
                        (x =
                          77 * (((v = d._getARGB(M, j)) >> 16) & 255) +
                          151 * ((v >> 8) & 255) +
                          28 * (255 & v)) && ((c = v), (f = x)),
                      f <
                        (j =
                          77 * ((g >> 16) & 255) +
                          151 * ((g >> 8) & 255) +
                          28 * (255 & g)) && ((c = g), (f = j)),
                      f <
                        (v =
                          77 * ((_ >> 16) & 255) +
                          151 * ((_ >> 8) & 255) +
                          28 * (255 & _)) && ((c = _), (f = v)),
                      (A[C++] = c);
                d._setPixels(M, A);
              }),
              (d.erode = function (o) {
                for (
                  var s,
                    n,
                    c,
                    f,
                    g,
                    _,
                    x,
                    j,
                    v,
                    M = d._toPixels(o),
                    C = 0,
                    k = M.length ? M.length / 4 : 0,
                    A = new Int32Array(k);
                  C < k;

                )
                  for (n = (s = C) + o.width; C < n; )
                    (f = c = d._getARGB(M, C)),
                      (v = C - 1) < s && (v = C),
                      n <= (j = C + 1) && (j = C),
                      (g = C - o.width) < 0 && (g = 0),
                      k <= (_ = C + o.width) && (_ = C),
                      (g = d._getARGB(M, g)),
                      (v = d._getARGB(M, v)),
                      (_ = d._getARGB(M, _)),
                      (x =
                        77 * ((v >> 16) & 255) +
                        151 * ((v >> 8) & 255) +
                        28 * (255 & v)) <
                        (f =
                          77 * ((f >> 16) & 255) +
                          151 * ((f >> 8) & 255) +
                          28 * (255 & f)) && ((c = v), (f = x)),
                      (x =
                        77 * (((v = d._getARGB(M, j)) >> 16) & 255) +
                        151 * ((v >> 8) & 255) +
                        28 * (255 & v)) < f && ((c = v), (f = x)),
                      (j =
                        77 * ((g >> 16) & 255) +
                        151 * ((g >> 8) & 255) +
                        28 * (255 & g)) < f && ((c = g), (f = j)),
                      (v =
                        77 * ((_ >> 16) & 255) +
                        151 * ((_ >> 8) & 255) +
                        28 * (255 & _)) < f && ((c = _), (f = v)),
                      (A[C++] = c);
                d._setPixels(M, A);
              }),
              (d.blur = function (o, s) {
                h(o, s);
              }),
              (y.default = d);
          },
          {
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.int32-array': 209,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
          },
        ],
        289: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.set'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.uint32-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.set'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.uint32-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = r(t('../core/main')),
              a = r(t('omggif'));
            function r(d) {
              return d && d.__esModule ? d : { default: d };
            }
            function l(d) {
              return (
                (function (h) {
                  if (Array.isArray(h)) {
                    for (var o = 0, s = new Array(h.length); o < h.length; o++)
                      s[o] = h[o];
                    return s;
                  }
                })(d) ||
                (function (h) {
                  if (
                    Symbol.iterator in Object(h) ||
                    Object.prototype.toString.call(h) === '[object Arguments]'
                  )
                    return Array.from(h);
                })(d) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            (u.default.prototype.createImage = function (d, h) {
              return (
                u.default._validateParameters('createImage', arguments),
                new u.default.Image(d, h)
              );
            }),
              (u.default.prototype.saveCanvas = function () {
                u.default._validateParameters('saveCanvas', arguments);
                var d,
                  h,
                  o,
                  s,
                  n = [].slice.call(arguments);
                switch (
                  (arguments[0] instanceof HTMLCanvasElement
                    ? ((d = arguments[0]), n.shift())
                    : arguments[0] instanceof u.default.Element
                    ? ((d = arguments[0].elt), n.shift())
                    : (d = this._curElement && this._curElement.elt),
                  1 <= n.length && (h = n[0]),
                  (o =
                    (o = 2 <= n.length ? n[1] : o) ||
                    u.default.prototype._checkFileExtension(h, o)[1] ||
                    'png'))
                ) {
                  default:
                    s = 'image/png';
                    break;
                  case 'jpeg':
                  case 'jpg':
                    s = 'image/jpeg';
                }
                d.toBlob(function (c) {
                  u.default.prototype.downloadFile(c, h, o);
                }, s);
              }),
              (u.default.prototype.encodeAndDownloadGif = function (d, h) {
                for (
                  var o = d.gifProperties,
                    s = o.loopLimit,
                    n =
                      (s === 1 ? (s = null) : s === null && (s = 0),
                      new Uint8Array(d.width * d.height * o.numFrames)),
                    c = [],
                    f = {},
                    g = 0;
                  g < o.numFrames;
                  g++
                ) {
                  for (
                    var _ = new Set(),
                      x = o.frames[g].image.data,
                      j = x.length,
                      v = new Uint32Array(d.width * d.height),
                      M = 0,
                      C = 0;
                    M < j;
                    M += 4, C++
                  ) {
                    var k =
                      (x[M + 0] << 16) | (x[M + 1] << 8) | (x[M + 2] << 0);
                    _.add(k), (v[C] = k);
                  }
                  var A = l(_).sort().toString();
                  f[A] === void 0
                    ? (f[A] = { freq: 1, frames: [g] })
                    : ((f[A].freq += 1), f[A].frames.push(g)),
                    c.push(v);
                }
                for (
                  var D = [],
                    R = Object.keys(f).sort(function (P, L) {
                      return f[L].freq - f[P].freq;
                    }),
                    O = R[0].split(',').map(function (P) {
                      return parseInt(P);
                    }),
                    D = D.concat(f[O].frames),
                    N = new Set(O),
                    U = 1;
                  U < R.length;
                  U++
                ) {
                  var H = R[U].split(',')
                    .map(function (P) {
                      return parseInt(P);
                    })
                    .filter(function (P) {
                      return !N.has(P);
                    });
                  if (O.length + H.length <= 256) {
                    for (var q = 0; q < H.length; q++)
                      O.push(H[q]), N.add(H[q]);
                    D = D.concat(f[R[U]].frames);
                  }
                }
                D = new Set(D);
                for (var z = {}, X = 0; X < O.length; X++)
                  z[O[X]] || (z[O[X]] = X);
                for (var W = 1; W < O.length; ) W <<= 1;
                O.length = W;
                for (
                  var s = { loop: s, palette: new Uint32Array(O) },
                    Z = new a.default.GifWriter(n, d.width, d.height, s),
                    $ = {},
                    ae = 0;
                  ae < o.numFrames;
                  ae++
                )
                  (function (L) {
                    for (
                      var B = !D.has(L),
                        Y = B ? [] : O,
                        ee = new Uint8Array(d.width * d.height),
                        ne = {},
                        ce = new Set(),
                        pe = 0;
                      pe < c[L].length;
                      pe++
                    ) {
                      var le = c[L][pe];
                      B
                        ? (ne[le] === void 0 &&
                            ((ne[le] = Y.length), Y.push(le)),
                          (ee[pe] = ne[le]))
                        : (ee[pe] = z[le]),
                        0 < L && c[L - 1][pe] !== le && ce.add(le);
                    }
                    var ue = {},
                      be = Y.filter(function (ve) {
                        return !ce.has(ve);
                      });
                    if (0 < be.length) {
                      var be = be[0],
                        te = (B ? ne : z)[be];
                      if (0 < L) {
                        for (var se = 0; se < c[L].length; se++)
                          c[L - 1][se] === c[L][se] && (ee[se] = te);
                        (ue.transparent = te), ($.frameOpts.disposal = 1);
                      }
                    }
                    if (((ue.delay = o.frames[L].delay / 10), B)) {
                      for (var he = 1; he < Y.length; ) he <<= 1;
                      (Y.length = he), (ue.palette = new Uint32Array(Y));
                    }
                    0 < L &&
                      Z.addFrame(
                        0,
                        0,
                        d.width,
                        d.height,
                        $.pixelPaletteIndex,
                        $.frameOpts,
                      ),
                      ($ = { pixelPaletteIndex: ee, frameOpts: ue });
                  })(ae);
                ($.frameOpts.disposal = 1),
                  Z.addFrame(
                    0,
                    0,
                    d.width,
                    d.height,
                    $.pixelPaletteIndex,
                    $.frameOpts,
                  ),
                  (s = new Blob([n.slice(0, Z.end())], { type: 'image/gif' })),
                  u.default.prototype.downloadFile(s, h, 'gif');
              }),
              (u.default.prototype.saveFrames = function (d, h, o, c, n) {
                u.default._validateParameters('saveFrames', arguments),
                  (o = u.default.prototype.constrain((o = o || 3), 0, 15)),
                  (o *= 1e3);
                var c = u.default.prototype.constrain(c || 15, 0, 22),
                  f = 0,
                  g = u.default.prototype._makeFrame,
                  _ = this._curElement.elt,
                  x = [],
                  j = setInterval(function () {
                    x.push(g(d + f, h, _)), f++;
                  }, 1e3 / c);
                setTimeout(function () {
                  if ((clearInterval(j), n)) n(x);
                  else {
                    var v = !0,
                      M = !1,
                      C = void 0;
                    try {
                      for (
                        var k, A = x[Symbol.iterator]();
                        !(v = (k = A.next()).done);
                        v = !0
                      ) {
                        var R = k.value;
                        u.default.prototype.downloadFile(
                          R.imageData,
                          R.filename,
                          R.ext,
                        );
                      }
                    } catch (O) {
                      (M = !0), (C = O);
                    } finally {
                      try {
                        v || A.return == null || A.return();
                      } finally {
                        if (M) throw C;
                      }
                    }
                  }
                  x = [];
                }, 0.01 + o);
              }),
              (u.default.prototype._makeFrame = function (d, h, n) {
                var s,
                  n = this ? this._curElement.elt : n;
                if (h)
                  switch (h.toLowerCase()) {
                    case 'png':
                      s = 'image/png';
                      break;
                    case 'jpeg':
                    case 'jpg':
                      s = 'image/jpeg';
                      break;
                    default:
                      s = 'image/png';
                  }
                else (h = 'png'), (s = 'image/png');
                var n = (n = n.toDataURL(s)).replace(s, 'image/octet-stream'),
                  c = {};
                return (c.imageData = n), (c.filename = d), (c.ext = h), c;
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.set': 183,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint32-array': 225,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/web.dom-collections.iterator': 230,
            omggif: 240,
          },
        ],
        290: [
          function (t, b, y) {
            function u(_) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (x) {
                      return typeof x;
                    }
                  : function (x) {
                      return x &&
                        typeof Symbol == 'function' &&
                        x.constructor === Symbol &&
                        x !== Symbol.prototype
                        ? 'symbol'
                        : typeof x;
                    })(_);
            }
            function a(_) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (x) {
                      return u(x);
                    }
                  : function (x) {
                      return x &&
                        typeof Symbol == 'function' &&
                        x.constructor === Symbol &&
                        x !== Symbol.prototype
                        ? 'symbol'
                        : u(x);
                    })(_);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.copy-within'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.uint8-clamped-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.copy-within'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.uint8-clamped-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              t('regenerator-runtime/runtime');
            var r = n(t('../core/main')),
              l = n(t('../core/helpers')),
              d = (function (_) {
                if (_ && _.__esModule) return _;
                if (_ === null || (a(_) !== 'object' && typeof _ != 'function'))
                  return { default: _ };
                var x = s();
                if (x && x.has(_)) return x.get(_);
                var j,
                  v = {},
                  M = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (j in _) {
                  var C;
                  Object.prototype.hasOwnProperty.call(_, j) &&
                    ((C = M ? Object.getOwnPropertyDescriptor(_, j) : null) &&
                    (C.get || C.set)
                      ? Object.defineProperty(v, j, C)
                      : (v[j] = _[j]));
                }
                return (v.default = _), x && x.set(_, v), v;
              })(t('../core/constants')),
              h = n(t('omggif')),
              o = t('gifenc');
            function s() {
              var _;
              return typeof WeakMap != 'function'
                ? null
                : ((_ = new WeakMap()),
                  (s = function () {
                    return _;
                  }),
                  _);
            }
            function n(_) {
              return _ && _.__esModule ? _ : { default: _ };
            }
            function c(_, x, j, v, M, C, k) {
              try {
                var A = _[C](k),
                  R = A.value;
              } catch (O) {
                return void j(O);
              }
              A.done ? x(R) : Promise.resolve(R).then(v, M);
            }
            function f(_, x, j, v, M, C, k, A, R, O, D) {
              var N, U, H, q, z, X, W, Z, $;
              return (
                _ === d.COVER &&
                  ((N = x),
                  (H = j),
                  (W = C),
                  (Z = k),
                  (X = A),
                  ($ = R),
                  (U = O),
                  (q = D),
                  (z = Math.max(W / U, Z / q)),
                  (W /= z),
                  (Z /= z),
                  (z = X),
                  (X = $),
                  N === d.CENTER
                    ? (z += (U - W) / 2)
                    : N === d.RIGHT && (z += U - W),
                  H === d.CENTER
                    ? (X += (q - Z) / 2)
                    : H === d.BOTTOM && (X += q - Z),
                  (A = ($ = { x: z, y: X, w: W, h: Z }).x),
                  (R = $.y),
                  (O = $.w),
                  (D = $.h)),
                _ === d.CONTAIN &&
                  ((N = x),
                  (U = j),
                  (H = v),
                  (q = M),
                  (z = C),
                  (X = k),
                  (W = O),
                  (Z = D),
                  ($ = Math.max(W / z, Z / X)),
                  (W /= $),
                  (Z /= $),
                  ($ = H),
                  (H = q),
                  N === d.CENTER
                    ? ($ += (z - W) / 2)
                    : N === d.RIGHT && ($ += z - W),
                  U === d.CENTER
                    ? (H += (X - Z) / 2)
                    : U === d.BOTTOM && (H += X - Z),
                  (v = (_ = { x: $, y: H, w: W, h: Z }).x),
                  (M = _.y),
                  (C = _.w),
                  (k = _.h)),
                { sx: A, sy: R, sw: O, sh: D, dx: v, dy: M, dw: C, dh: k }
              );
            }
            function g(_, x) {
              return 0 < _ && _ < x ? _ : x;
            }
            t('../core/friendly_errors/validate_params'),
              t('../core/friendly_errors/file_errors'),
              t('../core/friendly_errors/fes_core'),
              (r.default.prototype.loadImage = function (_, x, j) {
                r.default._validateParameters('loadImage', arguments);
                var v = new r.default.Image(1, 1, this),
                  M = this,
                  C = new Request(_, { method: 'GET', mode: 'cors' });
                return (
                  fetch(_, C)
                    .then(function (k) {
                      var A,
                        R = k.headers.get('content-type');
                      R === null &&
                        console.warn(
                          'The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset.',
                        ),
                        R && R.includes('image/gif')
                          ? k.arrayBuffer().then(
                              function (O) {
                                if (O) {
                                  var O = new Uint8Array(O),
                                    D = v,
                                    N = x,
                                    U = j,
                                    H = function (B) {
                                      M._decrementPreload();
                                    }.bind(M),
                                    q = new h.default.GifReader(O),
                                    z =
                                      ((D.width = D.canvas.width = q.width),
                                      (D.height = D.canvas.height = q.height),
                                      []),
                                    X = q.numFrames(),
                                    W = new Uint8ClampedArray(
                                      D.width * D.height * 4,
                                    );
                                  if (1 < X) {
                                    for (var Z = 0; Z < X; Z++) {
                                      var $ = q.frameInfo(Z),
                                        ae = D.drawingContext.getImageData(
                                          0,
                                          0,
                                          D.width,
                                          D.height,
                                        ),
                                        P =
                                          ((W = ae.data.slice()),
                                          (function (B, Y) {
                                            try {
                                              Y.decodeAndBlitFrameRGBA(B, W);
                                            } catch (ee) {
                                              r.default._friendlyFileLoadError(
                                                8,
                                                D.src,
                                              ),
                                                typeof U == 'function'
                                                  ? U(ee)
                                                  : console.error(ee);
                                            }
                                          })(Z, q),
                                          new ImageData(W, D.width, D.height)),
                                        P =
                                          (D.drawingContext.putImageData(
                                            P,
                                            0,
                                            0,
                                          ),
                                          $.delay);
                                      P === 0 && (P = 10),
                                        z.push({
                                          image: D.drawingContext.getImageData(
                                            0,
                                            0,
                                            D.width,
                                            D.height,
                                          ),
                                          delay: 10 * P,
                                        }),
                                        $.disposal === 2
                                          ? D.drawingContext.clearRect(
                                              $.x,
                                              $.y,
                                              $.width,
                                              $.height,
                                            )
                                          : $.disposal === 3 &&
                                            D.drawingContext.putImageData(
                                              ae,
                                              0,
                                              0,
                                              $.x,
                                              $.y,
                                              $.width,
                                              $.height,
                                            );
                                    }
                                    (O = q.loopCount()),
                                      O === null
                                        ? (O = 1)
                                        : O === 0 && (O = null),
                                      D.drawingContext.putImageData(
                                        z[0].image,
                                        0,
                                        0,
                                      ),
                                      (D.gifProperties = {
                                        displayIndex: 0,
                                        loopLimit: O,
                                        loopCount: 0,
                                        frames: z,
                                        numFrames: X,
                                        playing: !0,
                                        timeDisplayed: 0,
                                        lastChangeTime: 0,
                                      });
                                  }
                                  typeof N == 'function' && N(D), H();
                                }
                              },
                              function (O) {
                                typeof j == 'function'
                                  ? (j(O), M._decrementPreload())
                                  : console.error(O);
                              },
                            )
                          : (((A = new Image()).onload = function () {
                              (v.width = v.canvas.width = A.width),
                                (v.height = v.canvas.height = A.height),
                                v.drawingContext.drawImage(A, 0, 0),
                                (v.modified = !0),
                                typeof x == 'function' && x(v),
                                M._decrementPreload();
                            }),
                            (A.onerror = function (O) {
                              r.default._friendlyFileLoadError(0, A.src),
                                typeof j == 'function'
                                  ? (j(O), M._decrementPreload())
                                  : console.error(O);
                            }),
                            _.indexOf('data:image/') !== 0 &&
                              (A.crossOrigin = 'Anonymous'),
                            (A.src = _)),
                        (v.modified = !0);
                    })
                    .catch(function (k) {
                      r.default._friendlyFileLoadError(0, _),
                        typeof j == 'function'
                          ? (j(k), M._decrementPreload())
                          : console.error(k);
                    }),
                  v
                );
              }),
              (r.default.prototype.saveGif = (function () {
                _ = regeneratorRuntime.mark(function j(v, M) {
                  var C,
                    k,
                    A,
                    R,
                    O,
                    D,
                    N,
                    U,
                    H,
                    q,
                    z,
                    X,
                    W,
                    Z,
                    $,
                    ae,
                    P,
                    L,
                    B,
                    Y,
                    ee,
                    ne,
                    ce,
                    pe = arguments;
                  return regeneratorRuntime.wrap(
                    function (le) {
                      for (;;)
                        switch ((le.prev = le.next)) {
                          case 0:
                            if (
                              ((C =
                                2 < pe.length && pe[2] !== void 0
                                  ? pe[2]
                                  : { delay: 0, units: 'seconds' }),
                              typeof v != 'string')
                            )
                              throw TypeError(
                                'fileName parameter must be a string',
                              );
                            le.next = 3;
                            break;
                          case 3:
                            if (typeof M != 'number')
                              throw TypeError(
                                'Duration parameter must be a number',
                              );
                            le.next = 5;
                            break;
                          case 5:
                            if (
                              ((k = (C && C.delay) || 0),
                              (A = (C && C.units) || 'seconds'),
                              typeof k != 'number')
                            )
                              throw TypeError(
                                'Delay parameter must be a number',
                              );
                            le.next = 9;
                            break;
                          case 9:
                            if (A !== 'seconds' && A !== 'frames')
                              throw TypeError(
                                'Units parameter must be either "frames" or "seconds"',
                              );
                            le.next = 11;
                            break;
                          case 11:
                            (this._recording = !0),
                              (N = this._targetFrameRate),
                              (R =
                                (R =
                                  (1 /
                                    (N =
                                      N !== 1 / 0 && N !== void 0 && N !== 0
                                        ? N
                                        : 60)) *
                                  1e3) < 20
                                  ? 20
                                  : R),
                              (D =
                                (O = A === 'seconds' ? M * N : M) +
                                (N = A === 'seconds' ? k * N : k)),
                              (N = N),
                              (this.frameCount = N),
                              (U = this._pixelDensity),
                              this.pixelDensity(1),
                              (H = []),
                              (q = 'p5.gif.progressBar'),
                              document.getElementById(q) !== null &&
                                document.getElementById(q).remove(),
                              (q = this.createP('')).id('progressBar'),
                              q.style('font-size', '16px'),
                              q.style('font-family', 'Montserrat'),
                              q.style('background-color', '#ffffffa0'),
                              q.style('padding', '8px'),
                              q.style('border-radius', '10px'),
                              q.position(0, 0),
                              this.drawingContext instanceof
                                WebGLRenderingContext &&
                                ((X = document
                                  .getElementById('defaultCanvas0')
                                  .getContext('webgl')),
                                (z = new Uint8Array(
                                  X.drawingBufferWidth *
                                    X.drawingBufferHeight *
                                    4,
                                ))),
                              this.noLoop();
                          case 36:
                            if (N < D)
                              return (
                                this.redraw(),
                                (ee = void 0),
                                (ee =
                                  this.drawingContext instanceof
                                  WebGLRenderingContext
                                    ? ((z = new Uint8Array(
                                        X.drawingBufferWidth *
                                          X.drawingBufferHeight *
                                          4,
                                      )),
                                      X.readPixels(
                                        0,
                                        0,
                                        X.drawingBufferWidth,
                                        X.drawingBufferHeight,
                                        X.RGBA,
                                        X.UNSIGNED_BYTE,
                                        z,
                                      ),
                                      (function (ue) {
                                        for (
                                          var be = parseInt(height / 2),
                                            te = 4 * width,
                                            se = new Uint8Array(4 * width),
                                            he = 0;
                                          he < be;
                                          ++he
                                        ) {
                                          var ve = he * te,
                                            me = (height - he - 1) * te;
                                          se.set(ue.subarray(ve, ve + te)),
                                            ue.copyWithin(ve, me, me + te),
                                            ue.set(se, me);
                                        }
                                        return ue;
                                      })(z))
                                    : this.drawingContext.getImageData(
                                        0,
                                        0,
                                        this.width,
                                        this.height,
                                      ).data),
                                H.push(ee),
                                N++,
                                q.html(
                                  'Saved frame <b>' +
                                    H.length.toString() +
                                    '</b> out of ' +
                                    O.toString(),
                                ),
                                (le.next = 45),
                                new Promise(function (ue) {
                                  return setTimeout(ue, 0);
                                })
                              );
                            le.next = 47;
                            break;
                          case 45:
                            le.next = 36;
                            break;
                          case 47:
                            q.html(
                              'Frames processed, generating color palette...',
                            ),
                              this.loop(),
                              this.pixelDensity(U),
                              (W = (0, o.GIFEncoder)()),
                              (Z = (function (ue) {
                                for (
                                  var be = new Uint8Array(
                                      ue.length * ue[0].length,
                                    ),
                                    te = 0;
                                  te < ue.length;
                                  te++
                                )
                                  be.set(ue[te], te * ue[0].length);
                                var se = (0, o.quantize)(be, 256, {
                                  format: 'rgba4444',
                                  oneBitAlpha: !0,
                                });
                                return (
                                  se.length === 256
                                    ? (se[se.length - 1] = [
                                        255 * Math.random(),
                                        255 * Math.random(),
                                        255 * Math.random(),
                                        0,
                                      ])
                                    : se.push([
                                        255 * Math.random(),
                                        255 * Math.random(),
                                        255 * Math.random(),
                                        0,
                                      ]),
                                  se
                                );
                              })(H)),
                              ($ = {}),
                              (ae = function (ue) {
                                for (
                                  var be = ue.length / 4,
                                    te = new Uint8Array(be),
                                    se = 0;
                                  se < be;
                                  se++
                                ) {
                                  var he =
                                    (ue[4 * se] << 24) |
                                    (ue[4 * se + 1] << 16) |
                                    (ue[4 * se + 2] << 8) |
                                    ue[4 * se + 3];
                                  $[he] === void 0 &&
                                    ($[he] = (0, o.nearestColorIndex)(
                                      Z,
                                      ue.slice(4 * se, 4 * (se + 1)),
                                    )),
                                    (te[se] = $[he]);
                                }
                                return te;
                              }),
                              (P = Z.length - 1),
                              (L = []),
                              (B = 0);
                          case 57:
                            if (!(B < H.length)) {
                              le.next = 68;
                              break;
                            }
                            if (((Y = ae(H[B])), (ee = Y.slice()), B === 0))
                              W.writeFrame(Y, this.width, this.height, {
                                palette: Z,
                                delay: R,
                                dispose: 1,
                              });
                            else {
                              for (ne = 0; ne < Y.length; ne++)
                                Y[ne] === L[ne] && (Y[ne] = P);
                              W.writeFrame(Y, this.width, this.height, {
                                delay: R,
                                transparent: !0,
                                transparentIndex: P,
                                dispose: 1,
                              });
                            }
                            return (
                              (L = ee),
                              q.html(
                                'Rendered frame <b>' +
                                  B.toString() +
                                  '</b> out of ' +
                                  O.toString(),
                              ),
                              (le.next = 65),
                              new Promise(function (ue) {
                                return setTimeout(ue, 0);
                              })
                            );
                          case 65:
                            B++, (le.next = 57);
                            break;
                          case 68:
                            W.finish(),
                              (ce = W.bytesView()),
                              (ce = new Blob([ce], { type: 'image/gif' })),
                              (H = []),
                              (this._recording = !1),
                              this.loop(),
                              q.html('Done. Downloading your gif!\u{1F338}'),
                              r.default.prototype.downloadFile(ce, v, 'gif');
                          case 77:
                          case 'end':
                            return le.stop();
                        }
                    },
                    j,
                    this,
                  );
                });
                var _,
                  x = function () {
                    var j = this,
                      v = arguments;
                    return new Promise(function (M, C) {
                      var k = _.apply(j, v);
                      function A(O) {
                        c(k, M, C, A, R, 'next', O);
                      }
                      function R(O) {
                        c(k, M, C, A, R, 'throw', O);
                      }
                      A(void 0);
                    });
                  };
                return function (j, v) {
                  return x.apply(this, arguments);
                };
              })()),
              (r.default.prototype.image = function (
                _,
                x,
                j,
                v,
                q,
                z,
                X,
                W,
                $,
                O,
                D,
                N,
              ) {
                r.default._validateParameters('image', arguments);
                var Z = _.width,
                  U = _.height,
                  H =
                    ((N = N || d.CENTER),
                    (D = D || d.CENTER),
                    _.elt &&
                      _.elt.videoWidth &&
                      !_.canvas &&
                      ((Z = _.elt.videoWidth), (U = _.elt.videoHeight)),
                    v || Z),
                  q = q || U,
                  z = z || 0,
                  X = X || 0,
                  W = g(W || Z, Z),
                  Z = g($ || U, U),
                  $ = 1;
                _.elt &&
                  !_.canvas &&
                  _.elt.style.width &&
                  (($ =
                    _.elt.videoWidth && !v ? _.elt.videoWidth : _.elt.width),
                  ($ /= parseInt(_.elt.style.width, 10))),
                  (z *= $),
                  (X *= $),
                  (Z *= $),
                  (W *= $),
                  (U = f(
                    O,
                    D,
                    N,
                    (U = l.default.modeAdjust(
                      x,
                      j,
                      H,
                      q,
                      this._renderer._imageMode,
                    )).x,
                    U.y,
                    U.w,
                    U.h,
                    z,
                    X,
                    W,
                    Z,
                  )),
                  this._renderer.image(
                    _,
                    U.sx,
                    U.sy,
                    U.sw,
                    U.sh,
                    U.dx,
                    U.dy,
                    U.dw,
                    U.dh,
                  );
              }),
              (r.default.prototype.tint = function () {
                for (
                  var _ = arguments.length, x = new Array(_), j = 0;
                  j < _;
                  j++
                )
                  x[j] = arguments[j];
                r.default._validateParameters('tint', x);
                var v = this.color.apply(this, x);
                this._renderer._tint = v.levels;
              }),
              (r.default.prototype.noTint = function () {
                this._renderer._tint = null;
              }),
              (r.default.prototype._getTintedImageCanvas =
                r.default.Renderer2D.prototype._getTintedImageCanvas),
              (r.default.prototype.imageMode = function (_) {
                r.default._validateParameters('imageMode', arguments),
                  (_ !== d.CORNER && _ !== d.CORNERS && _ !== d.CENTER) ||
                    (this._renderer._imageMode = _);
              }),
              (t = r.default),
              (y.default = t);
          },
          {
            '../core/constants': 256,
            '../core/friendly_errors/fes_core': 258,
            '../core/friendly_errors/file_errors': 259,
            '../core/friendly_errors/validate_params': 262,
            '../core/helpers': 263,
            '../core/main': 267,
            'core-js/modules/es.array.copy-within': 150,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/es.typed-array.uint8-clamped-array': 227,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
            gifenc: 237,
            omggif: 240,
            'regenerator-runtime/runtime': 244,
          },
        ],
        291: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = r(t('../core/main')),
              a = r(t('./filters'));
            function r(l) {
              return l && l.__esModule ? l : { default: l };
            }
            (u.default.Image = function (l, d) {
              (this.width = l),
                (this.height = d),
                (this.canvas = document.createElement('canvas')),
                (this.canvas.width = this.width),
                (this.canvas.height = this.height),
                (this.drawingContext = this.canvas.getContext('2d')),
                ((this._pixelsState = this)._pixelDensity = 1),
                (this.gifProperties = null),
                (this._modified = !1),
                (this.pixels = []);
            }),
              (u.default.Image.prototype._animateGif = function (o) {
                var d,
                  h = this.gifProperties,
                  o = o._lastFrameTime;
                h.lastChangeTime === 0 && (h.lastChangeTime = o),
                  h.playing &&
                    ((h.timeDisplayed = o - h.lastChangeTime),
                    (d = h.frames[h.displayIndex].delay),
                    h.timeDisplayed >= d &&
                      ((d = Math.floor(h.timeDisplayed / d)),
                      (h.timeDisplayed = 0),
                      (h.lastChangeTime = o),
                      (h.displayIndex += d),
                      (h.loopCount = Math.floor(h.displayIndex / h.numFrames)),
                      h.loopLimit !== null && h.loopCount >= h.loopLimit
                        ? (h.playing = !1)
                        : ((o = h.displayIndex % h.numFrames),
                          this.drawingContext.putImageData(
                            h.frames[o].image,
                            0,
                            0,
                          ),
                          (h.displayIndex = o),
                          this.setModified(!0))));
              }),
              (u.default.Image.prototype._setProperty = function (l, d) {
                (this[l] = d), this.setModified(!0);
              }),
              (u.default.Image.prototype.loadPixels = function () {
                u.default.Renderer2D.prototype.loadPixels.call(this),
                  this.setModified(!0);
              }),
              (u.default.Image.prototype.updatePixels = function (l, d, h, o) {
                u.default.Renderer2D.prototype.updatePixels.call(
                  this,
                  l,
                  d,
                  h,
                  o,
                ),
                  this.setModified(!0);
              }),
              (u.default.Image.prototype.get = function (l, d, h, o) {
                return (
                  u.default._validateParameters('p5.Image.get', arguments),
                  u.default.Renderer2D.prototype.get.apply(this, arguments)
                );
              }),
              (u.default.Image.prototype._getPixel =
                u.default.Renderer2D.prototype._getPixel),
              (u.default.Image.prototype.set = function (l, d, h) {
                u.default.Renderer2D.prototype.set.call(this, l, d, h),
                  this.setModified(!0);
              }),
              (u.default.Image.prototype.resize = function (l, d) {
                l === 0 && d === 0
                  ? ((l = this.canvas.width), (d = this.canvas.height))
                  : l === 0
                  ? (l = (this.canvas.width * d) / this.canvas.height)
                  : d === 0 &&
                    (d = (this.canvas.height * l) / this.canvas.width),
                  (l = Math.floor(l)),
                  (d = Math.floor(d));
                var h = document.createElement('canvas');
                if (((h.width = l), (h.height = d), this.gifProperties))
                  for (
                    var o = this.gifProperties, s = 0;
                    s < o.numFrames;
                    s++
                  ) {
                    for (
                      var n = this.drawingContext.createImageData(l, d),
                        c = ((j = j = x = _ = g = void 0), o.frames[s].image),
                        f = n,
                        g = 0,
                        _ = 0;
                      _ < f.height;
                      _++
                    )
                      for (var x = 0; x < f.width; x++) {
                        var j = Math.floor((x * c.width) / f.width),
                          j =
                            4 *
                            (Math.floor((_ * c.height) / f.height) * c.width +
                              j);
                        (f.data[g++] = c.data[j++]),
                          (f.data[g++] = c.data[j++]),
                          (f.data[g++] = c.data[j++]),
                          (f.data[g++] = c.data[+j]);
                      }
                    o.frames[s].image = n;
                  }
                h
                  .getContext('2d')
                  .drawImage(
                    this.canvas,
                    0,
                    0,
                    this.canvas.width,
                    this.canvas.height,
                    0,
                    0,
                    h.width,
                    h.height,
                  ),
                  (this.canvas.width = this.width = l),
                  (this.canvas.height = this.height = d),
                  this.drawingContext.drawImage(h, 0, 0, l, d, 0, 0, l, d),
                  0 < this.pixels.length && this.loadPixels(),
                  this.setModified(!0);
              }),
              (u.default.Image.prototype.copy = function () {
                for (
                  var l = arguments.length, d = new Array(l), h = 0;
                  h < l;
                  h++
                )
                  d[h] = arguments[h];
                u.default.prototype.copy.apply(this, d);
              }),
              (u.default.Image.prototype.mask = function (l) {
                var d = this.drawingContext.globalCompositeOperation,
                  h = 1,
                  o = [
                    (l = l === void 0 ? this : l),
                    0,
                    0,
                    (h =
                      l instanceof u.default.Renderer
                        ? l._pInst._pixelDensity
                        : h) * l.width,
                    h * l.height,
                    0,
                    0,
                    this.width,
                    this.height,
                  ];
                if (
                  ((this.drawingContext.globalCompositeOperation =
                    'destination-in'),
                  this.gifProperties)
                ) {
                  for (var s = 0; s < this.gifProperties.frames.length; s++)
                    this.drawingContext.putImageData(
                      this.gifProperties.frames[s].image,
                      0,
                      0,
                    ),
                      u.default.Image.prototype.copy.apply(this, o),
                      (this.gifProperties.frames[s].image =
                        this.drawingContext.getImageData(
                          0,
                          0,
                          this.width,
                          this.height,
                        ));
                  this.drawingContext.putImageData(
                    this.gifProperties.frames[this.gifProperties.displayIndex]
                      .image,
                    0,
                    0,
                  );
                } else u.default.Image.prototype.copy.apply(this, o);
                (this.drawingContext.globalCompositeOperation = d),
                  this.setModified(!0);
              }),
              (u.default.Image.prototype.filter = function (l, d) {
                a.default.apply(this.canvas, a.default[l], d),
                  this.setModified(!0);
              }),
              (u.default.Image.prototype.blend = function () {
                for (
                  var l = arguments.length, d = new Array(l), h = 0;
                  h < l;
                  h++
                )
                  d[h] = arguments[h];
                u.default._validateParameters('p5.Image.blend', arguments),
                  u.default.prototype.blend.apply(this, d),
                  this.setModified(!0);
              }),
              (u.default.Image.prototype.setModified = function (l) {
                this._modified = l;
              }),
              (u.default.Image.prototype.isModified = function () {
                return this._modified;
              }),
              (u.default.Image.prototype.save = function (l, d) {
                this.gifProperties
                  ? u.default.prototype.encodeAndDownloadGif(this, l)
                  : u.default.prototype.saveCanvas(this.canvas, l, d);
              }),
              (u.default.Image.prototype.reset = function () {
                var l;
                this.gifProperties &&
                  (((l = this.gifProperties).playing = !0),
                  (l.timeSinceStart = 0),
                  (l.timeDisplayed = 0),
                  (l.lastChangeTime = 0),
                  (l.loopCount = 0),
                  (l.displayIndex = 0),
                  this.drawingContext.putImageData(l.frames[0].image, 0, 0));
              }),
              (u.default.Image.prototype.getCurrentFrame = function () {
                var l;
                if (this.gifProperties)
                  return (l = this.gifProperties).displayIndex % l.numFrames;
              }),
              (u.default.Image.prototype.setFrame = function (l) {
                var d;
                this.gifProperties &&
                  (l < (d = this.gifProperties).numFrames && 0 <= l
                    ? ((d.timeDisplayed = 0),
                      (d.lastChangeTime = 0),
                      (d.displayIndex = l),
                      this.drawingContext.putImageData(d.frames[l].image, 0, 0))
                    : console.log(
                        'Cannot set GIF to a frame number that is higher than total number of frames or below zero.',
                      ));
              }),
              (u.default.Image.prototype.numFrames = function () {
                if (this.gifProperties) return this.gifProperties.numFrames;
              }),
              (u.default.Image.prototype.play = function () {
                this.gifProperties && (this.gifProperties.playing = !0);
              }),
              (u.default.Image.prototype.pause = function () {
                this.gifProperties && (this.gifProperties.playing = !1);
              }),
              (u.default.Image.prototype.delay = function (l, d) {
                if (this.gifProperties) {
                  var h = this.gifProperties;
                  if (d < h.numFrames && 0 <= d) h.frames[d].delay = l;
                  else {
                    var o = !0,
                      d = !1,
                      s = void 0;
                    try {
                      for (
                        var n, c = h.frames[Symbol.iterator]();
                        !(o = (n = c.next()).done);
                        o = !0
                      )
                        n.value.delay = l;
                    } catch (g) {
                      (d = !0), (s = g);
                    } finally {
                      try {
                        o || c.return == null || c.return();
                      } finally {
                        if (d) throw s;
                      }
                    }
                  }
                }
              }),
              (t = u.default.Image),
              (y.default = t);
          },
          {
            '../core/main': 267,
            './filters': 288,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        292: [
          function (t, b, y) {
            t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.filter'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u = r(t('../core/main')),
              a = r(t('./filters'));
            function r(l) {
              return l && l.__esModule ? l : { default: l };
            }
            t('../color/p5.Color'),
              (u.default.prototype.pixels = []),
              (u.default.prototype.blend = function () {
                for (
                  var l, d = arguments.length, h = new Array(d), o = 0;
                  o < d;
                  o++
                )
                  h[o] = arguments[o];
                u.default._validateParameters('blend', h),
                  this._renderer
                    ? (l = this._renderer).blend.apply(l, h)
                    : u.default.Renderer2D.prototype.blend.apply(this, h);
              }),
              (u.default.prototype.copy = function () {
                for (
                  var l,
                    d,
                    h,
                    o,
                    s,
                    n,
                    c,
                    f,
                    g,
                    _ = arguments.length,
                    x = new Array(_),
                    j = 0;
                  j < _;
                  j++
                )
                  x[j] = arguments[j];
                if ((u.default._validateParameters('copy', x), x.length === 9))
                  (l = x[0]),
                    (d = x[1]),
                    (h = x[2]),
                    (o = x[3]),
                    (s = x[4]),
                    (n = x[5]),
                    (c = x[6]),
                    (f = x[7]),
                    (g = x[8]);
                else {
                  if (x.length !== 8)
                    throw new Error('Signature not supported');
                  (l = this),
                    (d = x[0]),
                    (h = x[1]),
                    (o = x[2]),
                    (s = x[3]),
                    (n = x[4]),
                    (c = x[5]),
                    (f = x[6]),
                    (g = x[7]);
                }
                u.default.prototype._copyHelper(
                  this,
                  l,
                  d,
                  h,
                  o,
                  s,
                  n,
                  c,
                  f,
                  g,
                );
              }),
              (u.default.prototype._copyHelper = function (
                l,
                d,
                h,
                o,
                s,
                n,
                c,
                f,
                g,
                _,
              ) {
                d.loadPixels();
                var x = d.canvas.width / d.width,
                  j = 0,
                  v = 0;
                d._renderer &&
                  d._renderer.isP3D &&
                  ((j = d.width / 2), (v = d.height / 2)),
                  l._renderer && l._renderer.isP3D
                    ? u.default.RendererGL.prototype.image.call(
                        l._renderer,
                        d,
                        h + j,
                        o + v,
                        s,
                        n,
                        c,
                        f,
                        g,
                        _,
                      )
                    : l.drawingContext.drawImage(
                        d.canvas,
                        x * (h + j),
                        x * (o + v),
                        x * s,
                        x * n,
                        c,
                        f,
                        g,
                        _,
                      );
              }),
              (u.default.prototype.filter = function (l, d) {
                u.default._validateParameters('filter', arguments),
                  this.canvas !== void 0
                    ? a.default.apply(this.canvas, a.default[l], d)
                    : a.default.apply(this.elt, a.default[l], d);
              }),
              (u.default.prototype.get = function (l, d, h, o) {
                var s;
                return (
                  u.default._validateParameters('get', arguments),
                  (s = this._renderer).get.apply(s, arguments)
                );
              }),
              (u.default.prototype.loadPixels = function () {
                for (
                  var l = arguments.length, d = new Array(l), h = 0;
                  h < l;
                  h++
                )
                  d[h] = arguments[h];
                u.default._validateParameters('loadPixels', d),
                  this._renderer.loadPixels();
              }),
              (u.default.prototype.set = function (l, d, h) {
                this._renderer.set(l, d, h);
              }),
              (u.default.prototype.updatePixels = function (l, d, h, o) {
                u.default._validateParameters('updatePixels', arguments),
                  this.pixels.length !== 0 &&
                    this._renderer.updatePixels(l, d, h, o);
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../color/p5.Color': 254,
            '../core/main': 267,
            './filters': 288,
            'core-js/modules/es.array.filter': 153,
          },
        ],
        293: [
          function (t, b, y) {
            function u(n) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (c) {
                      return typeof c;
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : typeof c;
                    })(n);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.last-index-of'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/web.url'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.last-index-of'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.promise'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/web.url'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var a = d(t('../core/main')),
              r =
                (t('whatwg-fetch'), t('es6-promise/auto'), d(t('fetch-jsonp'))),
              l = d(t('file-saver'));
            function d(n) {
              return n && n.__esModule ? n : { default: n };
            }
            function h(n) {
              return (h =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (c) {
                      return u(c);
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : u(c);
                    })(n);
            }
            function o(n) {
              return n
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/"/g, '&quot;')
                .replace(/'/g, '&#039;');
            }
            function s(n, c) {
              (c && c !== !0 && c !== 'true') || (c = '');
              var f = '';
              return (
                (n = n || 'untitled') &&
                  n.includes('.') &&
                  (f = n.split('.').pop()),
                c && f !== c && ((f = c), (n = ''.concat(n, '.').concat(f))),
                [n, f]
              );
            }
            t('../core/friendly_errors/validate_params'),
              t('../core/friendly_errors/file_errors'),
              t('../core/friendly_errors/fes_core'),
              (a.default.prototype.loadJSON = function () {
                for (
                  var n = arguments.length, c = new Array(n), f = 0;
                  f < n;
                  f++
                )
                  c[f] = arguments[f];
                a.default._validateParameters('loadJSON', c);
                for (
                  var g, _, x, j = c[0], v = {}, M = 'json', C = 1;
                  C < c.length;
                  C++
                ) {
                  var k = c[C];
                  typeof k == 'string'
                    ? (k !== 'jsonp' && k !== 'json') || (M = k)
                    : typeof k == 'function'
                    ? g
                      ? (_ = k)
                      : (g = k)
                    : h(k) === 'object' &&
                      (k.hasOwnProperty('jsonpCallback') ||
                        k.hasOwnProperty('jsonpCallbackFunction')) &&
                      ((M = 'jsonp'), (x = k));
                }
                var A = this;
                return (
                  this.httpDo(
                    j,
                    'GET',
                    x,
                    M,
                    function (R) {
                      for (var O in R) v[O] = R[O];
                      g !== void 0 && g(R), A._decrementPreload();
                    },
                    function (R) {
                      if ((a.default._friendlyFileLoadError(5, j), !_)) throw R;
                      _(R);
                    },
                  ),
                  v
                );
              }),
              (a.default.prototype.loadStrings = function () {
                for (
                  var n = arguments.length, c = new Array(n), f = 0;
                  f < n;
                  f++
                )
                  c[f] = arguments[f];
                a.default._validateParameters('loadStrings', c);
                for (var g, _, x = [], j = 1; j < c.length; j++) {
                  var v = c[j];
                  typeof v == 'function' &&
                    (g === void 0 ? (g = v) : _ === void 0 && (_ = v));
                }
                var M = this;
                return (
                  a.default.prototype.httpDo.call(
                    this,
                    c[0],
                    'GET',
                    'text',
                    function (C) {
                      for (
                        var k = C.replace(/\r\n/g, '\r')
                            .replace(/\n/g, '\r')
                            .split(/\r/),
                          A = 0,
                          R = k.length;
                        A < R;
                        A += 32768
                      )
                        Array.prototype.push.apply(
                          x,
                          k.slice(A, Math.min(A + 32768, R)),
                        );
                      g !== void 0 && g(x), M._decrementPreload();
                    },
                    function (C) {
                      if ((a.default._friendlyFileLoadError(3, C), !_)) throw C;
                      _(C);
                    },
                  ),
                  x
                );
              }),
              (a.default.prototype.loadTable = function (n) {
                var c,
                  f,
                  g,
                  _ = !1,
                  x = n.substring(n.lastIndexOf('.') + 1, n.length);
                x === 'csv'
                  ? (g = ',')
                  : x === 'ssv'
                  ? (g = ';')
                  : x === 'tsv' && (g = '	');
                for (var j = 1; j < arguments.length; j++)
                  typeof arguments[j] == 'function'
                    ? c === void 0
                      ? (c = arguments[j])
                      : f === void 0 && (f = arguments[j])
                    : typeof arguments[j] == 'string' &&
                      (arguments[j] === 'header' && (_ = !0),
                      arguments[j] === 'csv'
                        ? (g = ',')
                        : arguments[j] === 'ssv'
                        ? (g = ';')
                        : arguments[j] === 'tsv' && (g = '	'));
                var v = new a.default.Table(),
                  M = this;
                return (
                  this.httpDo(
                    n,
                    'GET',
                    'table',
                    function (C) {
                      for (
                        var k,
                          A,
                          R = {},
                          O = 0,
                          D = [],
                          N = 0,
                          U = null,
                          H = function () {
                            (R.currentState = O), (R.token = '');
                          },
                          q = function () {
                            U.push(R.token), H();
                          },
                          z = function () {
                            (R.currentState = 4), D.push(U), (U = null);
                          };
                        ;

                      ) {
                        if ((k = C[N++]) == null) {
                          if (R.escaped)
                            throw new Error('Unclosed quote in file.');
                          if (U) {
                            q(), z();
                            break;
                          }
                        }
                        if (
                          (U === null && ((R.escaped = !1), (U = []), H()),
                          R.currentState === O)
                        ) {
                          if (k === '"') {
                            (R.escaped = !0), (R.currentState = 1);
                            continue;
                          }
                          R.currentState = 1;
                        }
                        if (R.currentState === 1 && R.escaped)
                          if (k === '"')
                            C[N] === '"'
                              ? ((R.token += '"'), N++)
                              : ((R.escaped = !1), (R.currentState = 2));
                          else {
                            if (k === '\r') continue;
                            R.token += k;
                          }
                        else
                          k === '\r'
                            ? (C[N] ===
                                `
` && N++,
                              q(),
                              z())
                            : k ===
                              `
`
                            ? (q(), z())
                            : k === g
                            ? q()
                            : R.currentState === 1 && (R.token += k);
                      }
                      if (_) v.columns = D.shift();
                      else
                        for (var X = 0; X < D[0].length; X++)
                          v.columns[X] = 'null';
                      for (var W = 0; W < D.length; W++)
                        (D[W].length !== 1 ||
                          (D[W][0] !== 'undefined' && D[W][0] !== '')) &&
                          (((A = new a.default.TableRow()).arr = D[W]),
                          (A.obj = (function (Z, $) {
                            var ae = {};
                            if (($ = $ || []) === void 0)
                              for (var P = 0; P < Z.length; P++)
                                $[P.toString()] = P;
                            for (var L = 0; L < $.length; L++) {
                              var B = $[L],
                                Y = Z[L];
                              ae[B] = Y;
                            }
                            return ae;
                          })(D[W], v.columns)),
                          v.addRow(A));
                      typeof c == 'function' && c(v), M._decrementPreload();
                    },
                    function (C) {
                      a.default._friendlyFileLoadError(2, n),
                        f ? f(C) : console.error(C);
                    },
                  ),
                  v
                );
              }),
              (a.default.prototype.loadXML = function () {
                for (
                  var n = arguments.length, c = new Array(n), f = 0;
                  f < n;
                  f++
                )
                  c[f] = arguments[f];
                for (
                  var g, _, x = new a.default.XML(), j = 1;
                  j < c.length;
                  j++
                ) {
                  var v = c[j];
                  typeof v == 'function' &&
                    (g === void 0 ? (g = v) : _ === void 0 && (_ = v));
                }
                var M = this;
                return (
                  this.httpDo(
                    c[0],
                    'GET',
                    'xml',
                    function (C) {
                      for (var k in C) x[k] = C[k];
                      g !== void 0 && g(x), M._decrementPreload();
                    },
                    function (C) {
                      if ((a.default._friendlyFileLoadError(1, C), !_)) throw C;
                      _(C);
                    },
                  ),
                  x
                );
              }),
              (a.default.prototype.loadBytes = function (n, c, f) {
                var g = {},
                  _ = this;
                return (
                  this.httpDo(
                    n,
                    'GET',
                    'arrayBuffer',
                    function (x) {
                      (g.bytes = new Uint8Array(x)),
                        typeof c == 'function' && c(g),
                        _._decrementPreload();
                    },
                    function (x) {
                      if ((a.default._friendlyFileLoadError(6, n), !f)) throw x;
                      f(x);
                    },
                  ),
                  g
                );
              }),
              (a.default.prototype.httpGet = function () {
                a.default._validateParameters('httpGet', arguments);
                var n = Array.prototype.slice.call(arguments);
                return (
                  n.splice(1, 0, 'GET'),
                  a.default.prototype.httpDo.apply(this, n)
                );
              }),
              (a.default.prototype.httpPost = function () {
                a.default._validateParameters('httpPost', arguments);
                var n = Array.prototype.slice.call(arguments);
                return (
                  n.splice(1, 0, 'POST'),
                  a.default.prototype.httpDo.apply(this, n)
                );
              }),
              (a.default.prototype.httpDo = function () {
                for (
                  var n,
                    c,
                    f,
                    g = {},
                    _ = 0,
                    x = 'text/plain',
                    j = arguments.length - 1;
                  0 < j &&
                  typeof (j < 0 || arguments.length <= j
                    ? void 0
                    : arguments[j]) == 'function';
                  j--
                )
                  _++;
                var v = arguments.length - _,
                  M = arguments.length <= 0 ? void 0 : arguments[0];
                if (
                  v == 2 &&
                  typeof M == 'string' &&
                  h(arguments.length <= 1 ? void 0 : arguments[1]) === 'object'
                )
                  (D = new Request(
                    M,
                    arguments.length <= 1 ? void 0 : arguments[1],
                  )),
                    (c = arguments.length <= 2 ? void 0 : arguments[2]),
                    (f = arguments.length <= 3 ? void 0 : arguments[3]);
                else {
                  for (var C, k = 'GET', A = 1; A < arguments.length; A++) {
                    var R =
                      A < 0 || arguments.length <= A ? void 0 : arguments[A];
                    if (typeof R == 'string')
                      R === 'GET' ||
                      R === 'POST' ||
                      R === 'PUT' ||
                      R === 'DELETE'
                        ? (k = R)
                        : R === 'json' ||
                          R === 'jsonp' ||
                          R === 'binary' ||
                          R === 'arrayBuffer' ||
                          R === 'xml' ||
                          R === 'text' ||
                          R === 'table'
                        ? (n = R)
                        : (C = R);
                    else if (typeof R == 'number') C = R.toString();
                    else if (h(R) === 'object')
                      if (
                        R.hasOwnProperty('jsonpCallback') ||
                        R.hasOwnProperty('jsonpCallbackFunction')
                      )
                        for (var O in R) g[O] = R[O];
                      else
                        x =
                          R instanceof a.default.XML
                            ? ((C = R.serialize()), 'application/xml')
                            : ((C = JSON.stringify(R)), 'application/json');
                    else typeof R == 'function' && (c ? (f = R) : (c = R));
                  }
                  var v =
                      k === 'GET'
                        ? new Headers()
                        : new Headers({ 'Content-Type': x }),
                    D = new Request(M, {
                      method: k,
                      mode: 'cors',
                      body: C,
                      headers: v,
                    });
                }
                return (
                  (v = (v =
                    (n =
                      n ||
                      (M.includes('json')
                        ? 'json'
                        : M.includes('xml')
                        ? 'xml'
                        : 'text')) === 'jsonp'
                      ? (0, r.default)(M, g)
                      : fetch(D)).then(function (N) {
                    if (!N.ok)
                      throw (
                        (((U = new Error(N.body)).status = N.status),
                        (U.ok = !1),
                        U)
                      );
                    var U = 0;
                    switch (
                      ((U =
                        n !== 'jsonp' ? N.headers.get('content-length') : U) &&
                        64e6 < U &&
                        a.default._friendlyFileLoadError(7, M),
                      n)
                    ) {
                      case 'json':
                      case 'jsonp':
                        return N.json();
                      case 'binary':
                        return N.blob();
                      case 'arrayBuffer':
                        return N.arrayBuffer();
                      case 'xml':
                        return N.text().then(function (H) {
                          return (
                            (H = new DOMParser().parseFromString(
                              H,
                              'text/xml',
                            )),
                            new a.default.XML(H.documentElement)
                          );
                        });
                      default:
                        return N.text();
                    }
                  })).then(c || function () {}),
                  v.catch(f || console.error),
                  v
                );
              }),
              (window.URL = window.URL || window.webkitURL),
              (a.default.prototype._pWriters = []),
              (a.default.prototype.createWriter = function (n, c) {
                var f, g;
                for (g in a.default.prototype._pWriters)
                  if (a.default.prototype._pWriters[g].name === n)
                    return (
                      (f = new a.default.PrintWriter(n + this.millis(), c)),
                      a.default.prototype._pWriters.push(f),
                      f
                    );
                return (
                  (f = new a.default.PrintWriter(n, c)),
                  a.default.prototype._pWriters.push(f),
                  f
                );
              }),
              (a.default.PrintWriter = function (n, c) {
                var f = this;
                (this.name = n),
                  (this.content = ''),
                  (this.write = function (g) {
                    this.content += g;
                  }),
                  (this.print = function (g) {
                    this.content += ''.concat(
                      g,
                      `
`,
                    );
                  }),
                  (this.clear = function () {
                    this.content = '';
                  }),
                  (this.close = function () {
                    var g,
                      _ = [];
                    for (g in (_.push(this.content),
                    a.default.prototype.writeFile(_, n, c),
                    a.default.prototype._pWriters))
                      a.default.prototype._pWriters[g].name === this.name &&
                        a.default.prototype._pWriters.splice(g, 1);
                    f.clear(), (f = {});
                  });
              }),
              (a.default.prototype.save = function (n, c, f) {
                var g = arguments,
                  _ = (this._curElement || this).elt;
                if (g.length === 0) a.default.prototype.saveCanvas(_);
                else if (
                  g[0] instanceof a.default.Renderer ||
                  g[0] instanceof a.default.Graphics
                )
                  a.default.prototype.saveCanvas(g[0].elt, g[1], g[2]);
                else if (g.length === 1 && typeof g[0] == 'string')
                  a.default.prototype.saveCanvas(_, g[0]);
                else
                  switch (s(g[1], g[2])[1]) {
                    case 'json':
                      return void a.default.prototype.saveJSON(
                        g[0],
                        g[1],
                        g[2],
                      );
                    case 'txt':
                      return void a.default.prototype.saveStrings(
                        g[0],
                        g[1],
                        g[2],
                      );
                    default:
                      g[0] instanceof Array
                        ? a.default.prototype.saveStrings(g[0], g[1], g[2])
                        : g[0] instanceof a.default.Table
                        ? a.default.prototype.saveTable(g[0], g[1], g[2])
                        : g[0] instanceof a.default.Image
                        ? a.default.prototype.saveCanvas(g[0].canvas, g[1])
                        : g[0] instanceof a.default.SoundFile &&
                          a.default.prototype.saveSound(g[0], g[1], g[2], g[3]);
                  }
              }),
              (a.default.prototype.saveJSON = function (n, c, f) {
                a.default._validateParameters('saveJSON', arguments),
                  (f = f ? JSON.stringify(n) : JSON.stringify(n, void 0, 2)),
                  this.saveStrings(
                    f.split(`
`),
                    c,
                    'json',
                  );
              }),
              (a.default.prototype.saveJSONObject =
                a.default.prototype.saveJSON),
              (a.default.prototype.saveJSONArray =
                a.default.prototype.saveJSON),
              (a.default.prototype.saveStrings = function (n, c, f, g) {
                a.default._validateParameters('saveStrings', arguments);
                for (
                  var _ = this.createWriter(c, f || 'txt'), x = 0;
                  x < n.length;
                  x++
                )
                  g
                    ? _.write(
                        n[x] +
                          `\r
`,
                      )
                    : _.write(
                        n[x] +
                          `
`,
                      );
                _.close(), _.clear();
              }),
              (a.default.prototype.saveTable = function (n, c, f) {
                a.default._validateParameters('saveTable', arguments),
                  (g =
                    f === void 0
                      ? c.substring(c.lastIndexOf('.') + 1, c.length)
                      : f);
                var g,
                  _ = this.createWriter(c, g),
                  x = n.columns,
                  j = g === 'tsv' ? '	' : ',';
                if (g !== 'html') {
                  if (x[0] !== '0') {
                    for (var v = 0; v < x.length; v++)
                      v < x.length - 1 ? _.write(x[v] + j) : _.write(x[v]);
                    _.write(`
`);
                  }
                  for (var M = 0; M < n.rows.length; M++) {
                    for (var C = void 0, C = 0; C < n.rows[M].arr.length; C++)
                      C < n.rows[M].arr.length - 1
                        ? g === 'csv' && String(n.rows[M].arr[C]).includes(',')
                          ? _.write('"' + n.rows[M].arr[C] + '"' + j)
                          : _.write(n.rows[M].arr[C] + j)
                        : g === 'csv' && String(n.rows[M].arr[C]).includes(',')
                        ? _.write('"' + n.rows[M].arr[C] + '"')
                        : _.write(n.rows[M].arr[C]);
                    _.write(`
`);
                  }
                } else {
                  if (
                    (_.print('<html>'),
                    _.print('<head>'),
                    _.print(
                      '  <meta http-equiv="content-type" content="text/html;charset=utf-8" />',
                    ),
                    _.print('</head>'),
                    _.print('<body>'),
                    _.print('  <table>'),
                    x[0] !== '0')
                  ) {
                    _.print('    <tr>');
                    for (var k = 0; k < x.length; k++) {
                      var A = o(x[k]);
                      _.print('      <td>'.concat(A)), _.print('      </td>');
                    }
                    _.print('    </tr>');
                  }
                  for (var R = 0; R < n.rows.length; R++) {
                    _.print('    <tr>');
                    for (var O = 0; O < n.columns.length; O++) {
                      var D = o(n.rows[R].getString(O));
                      _.print('      <td>'.concat(D)), _.print('      </td>');
                    }
                    _.print('    </tr>');
                  }
                  _.print('  </table>'), _.print('</body>'), _.print('</html>');
                }
                _.close(), _.clear();
              }),
              (a.default.prototype.writeFile = function (_, c, f) {
                var g = 'application/octet-stream',
                  _ =
                    (a.default.prototype._isSafari() && (g = 'text/plain'),
                    new Blob(_, { type: g }));
                a.default.prototype.downloadFile(_, c, f);
              }),
              (a.default.prototype.downloadFile = function (n, _, x) {
                var g,
                  _ = s(_, x),
                  x = _[0];
                n instanceof Blob
                  ? l.default.saveAs(n, x)
                  : (((g = document.createElement('a')).href = n),
                    (g.download = x),
                    (g.onclick = function (j) {
                      document.body.removeChild(j.target), j.stopPropagation();
                    }),
                    (g.style.display = 'none'),
                    document.body.appendChild(g),
                    a.default.prototype._isSafari() &&
                      ((n =
                        (n = `Hello, Safari user! To download this file...
1. Go to File --> Save As.
2. Choose "Page Source" as the Format.
`) + '3. Name it with this extension: ."'.concat(_[1], '"')),
                      alert(n)),
                    g.click());
              }),
              (a.default.prototype._checkFileExtension = s),
              (a.default.prototype._isSafari = function () {
                return (
                  0 <
                  Object.prototype.toString
                    .call(window.HTMLElement)
                    .indexOf('Constructor')
                );
              }),
              (t = a.default),
              (y.default = t);
          },
          {
            '../core/friendly_errors/fes_core': 258,
            '../core/friendly_errors/file_errors': 259,
            '../core/friendly_errors/validate_params': 262,
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.last-index-of': 160,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.promise': 178,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/web.dom-collections.iterator': 230,
            'core-js/modules/web.url': 232,
            'es6-promise/auto': 233,
            'fetch-jsonp': 235,
            'file-saver': 236,
            'whatwg-fetch': 245,
          },
        ],
        294: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.Table = function (a) {
              (this.columns = []), (this.rows = []);
            }),
              (u.default.Table.prototype.addRow = function (a) {
                if (
                  ((a = a || new u.default.TableRow()),
                  a.arr === void 0 || a.obj === void 0)
                )
                  throw new Error('invalid TableRow: '.concat(a));
                return (a.table = this).rows.push(a), a;
              }),
              (u.default.Table.prototype.removeRow = function (a) {
                (this.rows[a].table = null),
                  (a = this.rows.splice(a + 1, this.rows.length)),
                  this.rows.pop(),
                  (this.rows = this.rows.concat(a));
              }),
              (u.default.Table.prototype.getRow = function (a) {
                return this.rows[a];
              }),
              (u.default.Table.prototype.getRows = function () {
                return this.rows;
              }),
              (u.default.Table.prototype.findRow = function (a, r) {
                if (typeof r == 'string') {
                  for (var l = 0; l < this.rows.length; l++)
                    if (this.rows[l].obj[r] === a) return this.rows[l];
                } else
                  for (var d = 0; d < this.rows.length; d++)
                    if (this.rows[d].arr[r] === a) return this.rows[d];
                return null;
              }),
              (u.default.Table.prototype.findRows = function (a, r) {
                var l = [];
                if (typeof r == 'string')
                  for (var d = 0; d < this.rows.length; d++)
                    this.rows[d].obj[r] === a && l.push(this.rows[d]);
                else
                  for (var h = 0; h < this.rows.length; h++)
                    this.rows[h].arr[r] === a && l.push(this.rows[h]);
                return l;
              }),
              (u.default.Table.prototype.matchRow = function (a, r) {
                if (typeof r == 'number') {
                  for (var l = 0; l < this.rows.length; l++)
                    if (this.rows[l].arr[r].match(a)) return this.rows[l];
                } else
                  for (var d = 0; d < this.rows.length; d++)
                    if (this.rows[d].obj[r].match(a)) return this.rows[d];
                return null;
              }),
              (u.default.Table.prototype.matchRows = function (a, r) {
                var l = [];
                if (typeof r == 'number')
                  for (var d = 0; d < this.rows.length; d++)
                    this.rows[d].arr[r].match(a) && l.push(this.rows[d]);
                else
                  for (var h = 0; h < this.rows.length; h++)
                    this.rows[h].obj[r].match(a) && l.push(this.rows[h]);
                return l;
              }),
              (u.default.Table.prototype.getColumn = function (a) {
                var r = [];
                if (typeof a == 'string')
                  for (var l = 0; l < this.rows.length; l++)
                    r.push(this.rows[l].obj[a]);
                else
                  for (var d = 0; d < this.rows.length; d++)
                    r.push(this.rows[d].arr[a]);
                return r;
              }),
              (u.default.Table.prototype.clearRows = function () {
                delete this.rows, (this.rows = []);
              }),
              (u.default.Table.prototype.addColumn = function (a) {
                this.columns.push(a || null);
              }),
              (u.default.Table.prototype.getColumnCount = function () {
                return this.columns.length;
              }),
              (u.default.Table.prototype.getRowCount = function () {
                return this.rows.length;
              }),
              (u.default.Table.prototype.removeTokens = function (a, r) {
                for (var l = [], d = 0; d < a.length; d++)
                  l.push(a.charAt(d).replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&'));
                var h = new RegExp(l.join('|'), 'g');
                if (r === void 0)
                  for (var o = 0; o < this.columns.length; o++)
                    for (var s = 0; s < this.rows.length; s++) {
                      var n = (n = this.rows[s].arr[o]).replace(h, '');
                      (this.rows[s].arr[o] = n),
                        (this.rows[s].obj[this.columns[o]] = n);
                    }
                else if (typeof r == 'string')
                  for (var c = 0; c < this.rows.length; c++) {
                    var f = (f = this.rows[c].obj[r]).replace(h, ''),
                      g = ((this.rows[c].obj[r] = f), this.columns.indexOf(r));
                    this.rows[c].arr[g] = f;
                  }
                else
                  for (var _ = 0; _ < this.rows.length; _++) {
                    var x = (x = this.rows[_].arr[r]).replace(h, '');
                    (this.rows[_].arr[r] = x),
                      (this.rows[_].obj[this.columns[r]] = x);
                  }
              }),
              (u.default.Table.prototype.trim = function (a) {
                var r = new RegExp(' ', 'g');
                if (a === void 0)
                  for (var l = 0; l < this.columns.length; l++)
                    for (var d = 0; d < this.rows.length; d++) {
                      var h = (h = this.rows[d].arr[l]).replace(r, '');
                      (this.rows[d].arr[l] = h),
                        (this.rows[d].obj[this.columns[l]] = h);
                    }
                else if (typeof a == 'string')
                  for (var o = 0; o < this.rows.length; o++) {
                    var s = (s = this.rows[o].obj[a]).replace(r, ''),
                      n = ((this.rows[o].obj[a] = s), this.columns.indexOf(a));
                    this.rows[o].arr[n] = s;
                  }
                else
                  for (var c = 0; c < this.rows.length; c++) {
                    var f = (f = this.rows[c].arr[a]).replace(r, '');
                    (this.rows[c].arr[a] = f),
                      (this.rows[c].obj[this.columns[a]] = f);
                  }
              }),
              (u.default.Table.prototype.removeColumn = function (d) {
                typeof d == 'string'
                  ? (l = this.columns.indexOf((r = d)))
                  : (r = this.columns[(l = d)]);
                var r,
                  l,
                  d = this.columns.splice(l + 1, this.columns.length);
                this.columns.pop(), (this.columns = this.columns.concat(d));
                for (var h = 0; h < this.rows.length; h++) {
                  var o = this.rows[h].arr,
                    s = o.splice(l + 1, o.length);
                  o.pop(),
                    (this.rows[h].arr = o.concat(s)),
                    delete this.rows[h].obj[r];
                }
              }),
              (u.default.Table.prototype.set = function (a, r, l) {
                this.rows[a].set(r, l);
              }),
              (u.default.Table.prototype.setNum = function (a, r, l) {
                this.rows[a].setNum(r, l);
              }),
              (u.default.Table.prototype.setString = function (a, r, l) {
                this.rows[a].setString(r, l);
              }),
              (u.default.Table.prototype.get = function (a, r) {
                return this.rows[a].get(r);
              }),
              (u.default.Table.prototype.getNum = function (a, r) {
                return this.rows[a].getNum(r);
              }),
              (u.default.Table.prototype.getString = function (a, r) {
                return this.rows[a].getString(r);
              }),
              (u.default.Table.prototype.getObject = function (a) {
                for (var r, l = {}, d = 0; d < this.rows.length; d++)
                  if (((r = this.rows[d].obj), typeof a == 'string')) {
                    if (!(0 <= this.columns.indexOf(a)))
                      throw new Error(
                        'This table has no column named "'.concat(a, '"'),
                      );
                    l[r[a]] = r;
                  } else l[d] = this.rows[d].obj;
                return l;
              }),
              (u.default.Table.prototype.getArray = function () {
                for (var a = [], r = 0; r < this.rows.length; r++)
                  a.push(this.rows[r].arr);
                return a;
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.trim': 193,
          },
        ],
        295: [
          function (t, b, y) {
            t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.TableRow = function (u, a) {
                var r = [],
                  l = {};
                u && (r = u.split((a = a || ',')));
                for (var d = 0; d < r.length; d++) {
                  var h = d,
                    o = r[d];
                  l[h] = o;
                }
                (this.arr = r), (this.obj = l), (this.table = null);
              }),
              (t.default.TableRow.prototype.set = function (u, a) {
                if (typeof u == 'string') {
                  var r = this.table.columns.indexOf(u);
                  if (!(0 <= r))
                    throw new Error(
                      'This table has no column named "'.concat(u, '"'),
                    );
                  (this.obj[u] = a), (this.arr[r] = a);
                } else {
                  if (!(u < this.table.columns.length))
                    throw new Error(
                      'Column #'.concat(
                        u,
                        ' is out of the range of this table',
                      ),
                    );
                  (this.arr[u] = a),
                    (r = this.table.columns[u]),
                    (this.obj[r] = a);
                }
              }),
              (t.default.TableRow.prototype.setNum = function (u, a) {
                (a = parseFloat(a)), this.set(u, a);
              }),
              (t.default.TableRow.prototype.setString = function (u, a) {
                (a = a.toString()), this.set(u, a);
              }),
              (t.default.TableRow.prototype.get = function (u) {
                return (typeof u == 'string' ? this.obj : this.arr)[u];
              }),
              (t.default.TableRow.prototype.getNum = function (u) {
                var a = parseFloat(
                  typeof u == 'string' ? this.obj[u] : this.arr[u],
                );
                if (a.toString() === 'NaN')
                  throw 'Error: '.concat(this.obj[u], ' is NaN (Not a Number)');
                return a;
              }),
              (t.default.TableRow.prototype.getString = function (u) {
                return (typeof u == 'string' ? this.obj : this.arr)[
                  u
                ].toString();
              }),
              (t = t.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.split': 191,
          },
        ],
        296: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            function a(r) {
              for (var l = [], d = 0; d < r.length; d++)
                l.push(new u.default.XML(r[d]));
              return l;
            }
            (u.default.XML = function (r) {
              r
                ? (this.DOM = r)
                : ((r = document.implementation.createDocument(null, 'doc')),
                  (this.DOM = r.createElement('root')));
            }),
              (u.default.XML.prototype.getParent = function () {
                return new u.default.XML(this.DOM.parentElement);
              }),
              (u.default.XML.prototype.getName = function () {
                return this.DOM.tagName;
              }),
              (u.default.XML.prototype.setName = function (r) {
                var l = this.DOM.innerHTML,
                  d = this.DOM.attributes,
                  h = document.implementation
                    .createDocument(null, 'default')
                    .createElement(r);
                h.innerHTML = l;
                for (var o = 0; o < d.length; o++)
                  h.setAttribute(d[o].nodeName, d.nodeValue);
                this.DOM = h;
              }),
              (u.default.XML.prototype.hasChildren = function () {
                return 0 < this.DOM.children.length;
              }),
              (u.default.XML.prototype.listChildren = function () {
                for (var r = [], l = 0; l < this.DOM.childNodes.length; l++)
                  r.push(this.DOM.childNodes[l].nodeName);
                return r;
              }),
              (u.default.XML.prototype.getChildren = function (r) {
                return a(
                  r ? this.DOM.getElementsByTagName(r) : this.DOM.children,
                );
              }),
              (u.default.XML.prototype.getChild = function (r) {
                if (typeof r != 'string')
                  return new u.default.XML(this.DOM.children[r]);
                var l = !0,
                  d = !1,
                  h = void 0;
                try {
                  for (
                    var o, s = this.DOM.children[Symbol.iterator]();
                    !(l = (o = s.next()).done);
                    l = !0
                  ) {
                    var n = o.value;
                    if (n.tagName === r) return new u.default.XML(n);
                  }
                } catch (c) {
                  (d = !0), (h = c);
                } finally {
                  try {
                    l || s.return == null || s.return();
                  } finally {
                    if (d) throw h;
                  }
                }
              }),
              (u.default.XML.prototype.addChild = function (r) {
                r instanceof u.default.XML && this.DOM.appendChild(r.DOM);
              }),
              (u.default.XML.prototype.removeChild = function (r) {
                var l = -1;
                if (typeof r == 'string') {
                  for (var d = 0; d < this.DOM.children.length; d++)
                    if (this.DOM.children[d].tagName === r) {
                      l = d;
                      break;
                    }
                } else l = r;
                l !== -1 && this.DOM.removeChild(this.DOM.children[l]);
              }),
              (u.default.XML.prototype.getAttributeCount = function () {
                return this.DOM.attributes.length;
              }),
              (u.default.XML.prototype.listAttributes = function () {
                var r = [],
                  l = !0,
                  d = !1,
                  h = void 0;
                try {
                  for (
                    var o, s = this.DOM.attributes[Symbol.iterator]();
                    !(l = (o = s.next()).done);
                    l = !0
                  ) {
                    var n = o.value;
                    r.push(n.nodeName);
                  }
                } catch (c) {
                  (d = !0), (h = c);
                } finally {
                  try {
                    l || s.return == null || s.return();
                  } finally {
                    if (d) throw h;
                  }
                }
                return r;
              }),
              (u.default.XML.prototype.hasAttribute = function (r) {
                var l = {},
                  d = !0,
                  h = !1,
                  o = void 0;
                try {
                  for (
                    var s, n = this.DOM.attributes[Symbol.iterator]();
                    !(d = (s = n.next()).done);
                    d = !0
                  ) {
                    var c = s.value;
                    l[c.nodeName] = c.nodeValue;
                  }
                } catch (f) {
                  (h = !0), (o = f);
                } finally {
                  try {
                    d || n.return == null || n.return();
                  } finally {
                    if (h) throw o;
                  }
                }
                return !!l[r];
              }),
              (u.default.XML.prototype.getNum = function (r, l) {
                var d = {},
                  h = !0,
                  o = !1,
                  s = void 0;
                try {
                  for (
                    var n, c = this.DOM.attributes[Symbol.iterator]();
                    !(h = (n = c.next()).done);
                    h = !0
                  ) {
                    var f = n.value;
                    d[f.nodeName] = f.nodeValue;
                  }
                } catch (g) {
                  (o = !0), (s = g);
                } finally {
                  try {
                    h || c.return == null || c.return();
                  } finally {
                    if (o) throw s;
                  }
                }
                return Number(d[r]) || l || 0;
              }),
              (u.default.XML.prototype.getString = function (r, l) {
                var d = {},
                  h = !0,
                  o = !1,
                  s = void 0;
                try {
                  for (
                    var n, c = this.DOM.attributes[Symbol.iterator]();
                    !(h = (n = c.next()).done);
                    h = !0
                  ) {
                    var f = n.value;
                    d[f.nodeName] = f.nodeValue;
                  }
                } catch (g) {
                  (o = !0), (s = g);
                } finally {
                  try {
                    h || c.return == null || c.return();
                  } finally {
                    if (o) throw s;
                  }
                }
                return d[r] ? String(d[r]) : l || null;
              }),
              (u.default.XML.prototype.setAttribute = function (r, l) {
                this.DOM.setAttribute(r, l);
              }),
              (u.default.XML.prototype.getContent = function (r) {
                var l = this.DOM.textContent;
                return (l = l.replace(/\s\s+/g, ',')) || r || null;
              }),
              (u.default.XML.prototype.setContent = function (r) {
                this.DOM.children.length || (this.DOM.textContent = r);
              }),
              (u.default.XML.prototype.serialize = function () {
                return new XMLSerializer().serializeToString(this.DOM);
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.number.constructor': 169,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        297: [
          function (t, b, y) {
            t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.math.hypot'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.string.includes'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.math.hypot'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.string.includes'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            function a() {
              if (typeof Math.hypot == 'function')
                return Math.hypot.apply(null, arguments);
              for (var r = arguments.length, l = [], d = 0, h = 0; h < r; h++) {
                var o = arguments[h];
                if ((o = +o) === 1 / 0 || o === -1 / 0) return 1 / 0;
                d < (o = Math.abs(o)) && (d = o), (l[h] = o);
              }
              d === 0 && (d = 1);
              for (var g = 0, f = 0, s = 0; s < r; s++)
                var n = l[s] / d,
                  n = n * n - f,
                  c = g + n,
                  f = c - g - n,
                  g = c;
              return Math.sqrt(g) * d;
            }
            (u.default.prototype.abs = Math.abs),
              (u.default.prototype.ceil = Math.ceil),
              (u.default.prototype.constrain = function (r, l, d) {
                return (
                  u.default._validateParameters('constrain', arguments),
                  Math.max(Math.min(r, d), l)
                );
              }),
              (u.default.prototype.dist = function () {
                for (
                  var r = arguments.length, l = new Array(r), d = 0;
                  d < r;
                  d++
                )
                  l[d] = arguments[d];
                return (
                  u.default._validateParameters('dist', l),
                  l.length === 4
                    ? a(l[2] - l[0], l[3] - l[1])
                    : l.length === 6
                    ? a(l[3] - l[0], l[4] - l[1], l[5] - l[2])
                    : void 0
                );
              }),
              (u.default.prototype.exp = Math.exp),
              (u.default.prototype.floor = Math.floor),
              (u.default.prototype.lerp = function (r, l, d) {
                return (
                  u.default._validateParameters('lerp', arguments),
                  d * (l - r) + r
                );
              }),
              (u.default.prototype.log = Math.log),
              (u.default.prototype.mag = function (r, l) {
                return u.default._validateParameters('mag', arguments), a(r, l);
              }),
              (u.default.prototype.map = function (r, l, d, h, o, s) {
                return (
                  u.default._validateParameters('map', arguments),
                  (r = ((r - l) / (d - l)) * (o - h) + h),
                  s
                    ? h < o
                      ? this.constrain(r, h, o)
                      : this.constrain(r, o, h)
                    : r
                );
              }),
              (u.default.prototype.max = function () {
                for (
                  var r = arguments.length, l = new Array(r), d = 0;
                  d < r;
                  d++
                )
                  l[d] = arguments[d];
                return l[0] instanceof Array
                  ? Math.max.apply(null, l[0])
                  : Math.max.apply(null, l);
              }),
              (u.default.prototype.min = function () {
                for (
                  var r = arguments.length, l = new Array(r), d = 0;
                  d < r;
                  d++
                )
                  l[d] = arguments[d];
                return l[0] instanceof Array
                  ? Math.min.apply(null, l[0])
                  : Math.min.apply(null, l);
              }),
              (u.default.prototype.norm = function (r, l, d) {
                return (
                  u.default._validateParameters('norm', arguments),
                  this.map(r, l, d, 0, 1)
                );
              }),
              (u.default.prototype.pow = Math.pow),
              (u.default.prototype.round = function (r, l) {
                return l
                  ? ((l = Math.pow(10, l)), Math.round(r * l) / l)
                  : Math.round(r);
              }),
              (u.default.prototype.sq = function (r) {
                return r * r;
              }),
              (u.default.prototype.sqrt = Math.sqrt),
              (u.default.prototype.fract = function (h) {
                u.default._validateParameters('fract', arguments);
                var l,
                  d = 0,
                  h = Number(h);
                return isNaN(h) || Math.abs(h) === 1 / 0
                  ? h
                  : (h < 0 && ((h = -h), (d = 1)),
                    String(h).includes('.') && !String(h).includes('e')
                      ? ((l = String(h)),
                        (l = Number('0' + l.slice(l.indexOf('.')))),
                        Math.abs(d - l))
                      : h < 1
                      ? Math.abs(d - h)
                      : 0);
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.math.hypot': 167,
            'core-js/modules/es.number.constructor': 169,
            'core-js/modules/es.string.includes': 185,
          },
        ],
        298: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.reflect.construct'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.reflect.construct'),
              t('core-js/modules/es.regexp.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            function a(l, d, h) {
              return (a = (function () {
                if (
                  typeof Reflect < 'u' &&
                  Reflect.construct &&
                  !Reflect.construct.sham
                ) {
                  if (typeof Proxy == 'function') return 1;
                  try {
                    return (
                      Date.prototype.toString.call(
                        Reflect.construct(Date, [], function () {}),
                      ),
                      1
                    );
                  } catch {}
                }
              })()
                ? Reflect.construct
                : function (o, s, n) {
                    var c = [null];
                    return (
                      c.push.apply(c, s),
                      (s = new (Function.bind.apply(o, c))()),
                      n && r(s, n.prototype),
                      s
                    );
                  }).apply(null, arguments);
            }
            function r(l, d) {
              return (r =
                Object.setPrototypeOf ||
                function (h, o) {
                  return (h.__proto__ = o), h;
                })(l, d);
            }
            (u.default.prototype.createVector = function (l, d, h) {
              return this instanceof u.default
                ? a(
                    u.default.Vector,
                    [
                      this._fromRadians.bind(this),
                      this._toRadians.bind(this),
                    ].concat(Array.prototype.slice.call(arguments)),
                  )
                : new u.default.Vector(l, d, h);
            }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.reflect.construct': 179,
            'core-js/modules/es.regexp.to-string': 182,
          },
        ],
        299: [
          function (h, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (h =
                (h = h('../core/main')) && h.__esModule ? h : { default: h });
            function u(o) {
              return 0.5 * (1 - Math.cos(o * Math.PI));
            }
            var a,
              r = 4095,
              l = 4,
              d = 0.5,
              h =
                ((h.default.prototype.noise = function (o) {
                  var s =
                      1 < arguments.length && arguments[1] !== void 0
                        ? arguments[1]
                        : 0,
                    n =
                      2 < arguments.length && arguments[2] !== void 0
                        ? arguments[2]
                        : 0;
                  if (a == null) {
                    a = new Array(4096);
                    for (var c = 0; c < 4096; c++) a[c] = Math.random();
                  }
                  o < 0 && (o = -o), s < 0 && (s = -s), n < 0 && (n = -n);
                  for (
                    var f,
                      g,
                      _ = Math.floor(o),
                      x = Math.floor(s),
                      j = Math.floor(n),
                      v = o - _,
                      M = s - x,
                      C = n - j,
                      k = 0,
                      A = 0.5,
                      R = 0;
                    R < l;
                    R++
                  ) {
                    var O = _ + (x << 4) + (j << 8),
                      D = u(v),
                      N = u(M),
                      U = a[O & r];
                    (U += D * (a[(O + 1) & r] - U)),
                      (f = a[(O + 16) & r]),
                      (U += N * ((f += D * (a[(O + 16 + 1) & r] - f)) - U)),
                      (f = a[(O += 256) & r]),
                      (f += D * (a[(O + 1) & r] - f)),
                      (g = a[(O + 16) & r]),
                      (f += N * ((g += D * (a[(O + 16 + 1) & r] - g)) - f)),
                      (k += (U += u(C) * (f - U)) * A),
                      (A *= d),
                      (_ <<= 1),
                      (x <<= 1),
                      (j <<= 1),
                      1 <= (v *= 2) && (_++, v--),
                      1 <= (M *= 2) && (x++, M--),
                      1 <= (C *= 2) && (j++, C--);
                  }
                  return k;
                }),
                (h.default.prototype.noiseDetail = function (o, s) {
                  0 < o && (l = o), 0 < s && (d = s);
                }),
                (h.default.prototype.noiseSeed = function (o) {
                  c = 4294967296;
                  var s,
                    n,
                    c,
                    f = {
                      setSeed: function (_) {
                        n = s = (_ == null ? Math.random() * c : _) >>> 0;
                      },
                      getSeed: function () {
                        return s;
                      },
                      rand: function () {
                        return (n = (1664525 * n + 1013904223) % c) / c;
                      },
                    };
                  f.setSeed(o), (a = new Array(4096));
                  for (var g = 0; g < 4096; g++) a[g] = f.rand();
                }),
                h.default);
            y.default = h;
          },
          { '../core/main': 267 },
        ],
        300: [
          function (t, b, y) {
            function u(n) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (c) {
                      return typeof c;
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : typeof c;
                    })(n);
            }
            function a(n) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (c) {
                      return u(c);
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : u(c);
                    })(n);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.every'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.some'),
              t('core-js/modules/es.math.sign'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.number.is-finite'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.sub'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.every'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.some'),
              t('core-js/modules/es.math.sign'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.number.is-finite'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.sub'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (s = t('../core/main')) && s.__esModule ? s : { default: s },
              l = (function (n) {
                if (n && n.__esModule) return n;
                if (n === null || (a(n) !== 'object' && typeof n != 'function'))
                  return { default: n };
                var c = d();
                if (c && c.has(n)) return c.get(n);
                var f,
                  g = {},
                  _ = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (f in n) {
                  var x;
                  Object.prototype.hasOwnProperty.call(n, f) &&
                    ((x = _ ? Object.getOwnPropertyDescriptor(n, f) : null) &&
                    (x.get || x.set)
                      ? Object.defineProperty(g, f, x)
                      : (g[f] = n[f]));
                }
                return (g.default = n), c && c.set(n, g), g;
              })(t('../core/constants'));
            function d() {
              var n;
              return typeof WeakMap != 'function'
                ? null
                : ((n = new WeakMap()),
                  (d = function () {
                    return n;
                  }),
                  n);
            }
            (r.default.Vector = function () {
              var n,
                c,
                f =
                  {}.toString.call(arguments[0]) === '[object Function]'
                    ? ((this.isPInst = !0),
                      (this._fromRadians = arguments[0]),
                      (this._toRadians = arguments[1]),
                      (n = arguments[2] || 0),
                      (c = arguments[3] || 0),
                      arguments[4] || 0)
                    : ((n = arguments[0] || 0),
                      (c = arguments[1] || 0),
                      arguments[2] || 0);
              (this.x = n), (this.y = c), (this.z = f);
            }),
              (r.default.Vector.prototype.toString = function () {
                return 'p5.Vector Object : ['
                  .concat(this.x, ', ')
                  .concat(this.y, ', ')
                  .concat(this.z, ']');
              }),
              (r.default.Vector.prototype.set = function (n, c, f) {
                return (
                  n instanceof r.default.Vector
                    ? ((this.x = n.x || 0),
                      (this.y = n.y || 0),
                      (this.z = n.z || 0))
                    : n instanceof Array
                    ? ((this.x = n[0] || 0),
                      (this.y = n[1] || 0),
                      (this.z = n[2] || 0))
                    : ((this.x = n || 0), (this.y = c || 0), (this.z = f || 0)),
                  this
                );
              }),
              (r.default.Vector.prototype.copy = function () {
                return this.isPInst
                  ? new r.default.Vector(
                      this._fromRadians,
                      this._toRadians,
                      this.x,
                      this.y,
                      this.z,
                    )
                  : new r.default.Vector(this.x, this.y, this.z);
              }),
              (r.default.Vector.prototype.add = function (n, c, f) {
                return (
                  n instanceof r.default.Vector
                    ? ((this.x += n.x || 0),
                      (this.y += n.y || 0),
                      (this.z += n.z || 0))
                    : n instanceof Array
                    ? ((this.x += n[0] || 0),
                      (this.y += n[1] || 0),
                      (this.z += n[2] || 0))
                    : ((this.x += n || 0),
                      (this.y += c || 0),
                      (this.z += f || 0)),
                  this
                );
              });
            function h(n, c) {
              return (
                n !== 0 && (this.x = this.x % n),
                c !== 0 && (this.y = this.y % c),
                this
              );
            }
            function o(n, c, f) {
              return (
                n !== 0 && (this.x = this.x % n),
                c !== 0 && (this.y = this.y % c),
                f !== 0 && (this.z = this.z % f),
                this
              );
            }
            (r.default.Vector.prototype.rem = function (n, c, f) {
              var g;
              if (n instanceof r.default.Vector) {
                if (
                  Number.isFinite(n.x) &&
                  Number.isFinite(n.y) &&
                  Number.isFinite(n.z)
                )
                  return (
                    (_ = parseFloat(n.x)),
                    (x = parseFloat(n.y)),
                    (g = parseFloat(n.z)),
                    o.call(this, _, x, g)
                  );
              } else if (n instanceof Array) {
                if (
                  n.every(function (j) {
                    return Number.isFinite(j);
                  })
                )
                  return n.length === 2
                    ? h.call(this, n[0], n[1])
                    : n.length === 3
                    ? o.call(this, n[0], n[1], n[2])
                    : void 0;
              } else if (arguments.length === 1) {
                if (Number.isFinite(n) && n !== 0)
                  return (
                    (this.x = this.x % n),
                    (this.y = this.y % n),
                    (this.z = this.z % n),
                    this
                  );
              } else if (arguments.length === 2) {
                var _ = Array.prototype.slice.call(arguments);
                if (
                  _.every(function (j) {
                    return Number.isFinite(j);
                  }) &&
                  _.length === 2
                )
                  return h.call(this, _[0], _[1]);
              } else if (arguments.length === 3) {
                var x = Array.prototype.slice.call(arguments);
                if (
                  x.every(function (j) {
                    return Number.isFinite(j);
                  }) &&
                  x.length === 3
                )
                  return o.call(this, x[0], x[1], x[2]);
              }
            }),
              (r.default.Vector.prototype.sub = function (n, c, f) {
                return (
                  n instanceof r.default.Vector
                    ? ((this.x -= n.x || 0),
                      (this.y -= n.y || 0),
                      (this.z -= n.z || 0))
                    : n instanceof Array
                    ? ((this.x -= n[0] || 0),
                      (this.y -= n[1] || 0),
                      (this.z -= n[2] || 0))
                    : ((this.x -= n || 0),
                      (this.y -= c || 0),
                      (this.z -= f || 0)),
                  this
                );
              }),
              (r.default.Vector.prototype.mult = function (n, c, f) {
                var g;
                return (
                  n instanceof r.default.Vector
                    ? Number.isFinite(n.x) &&
                      Number.isFinite(n.y) &&
                      Number.isFinite(n.z) &&
                      typeof n.x == 'number' &&
                      typeof n.y == 'number' &&
                      typeof n.z == 'number'
                      ? ((this.x *= n.x), (this.y *= n.y), (this.z *= n.z))
                      : console.warn(
                          'p5.Vector.prototype.mult:',
                          'x contains components that are either undefined or not finite numbers',
                        )
                    : n instanceof Array
                    ? n.every(function (_) {
                        return Number.isFinite(_);
                      }) &&
                      n.every(function (_) {
                        return typeof _ == 'number';
                      })
                      ? n.length === 1
                        ? ((this.x *= n[0]), (this.y *= n[0]), (this.z *= n[0]))
                        : n.length === 2
                        ? ((this.x *= n[0]), (this.y *= n[1]))
                        : n.length === 3 &&
                          ((this.x *= n[0]), (this.y *= n[1]), (this.z *= n[2]))
                      : console.warn(
                          'p5.Vector.prototype.mult:',
                          'x contains elements that are either undefined or not finite numbers',
                        )
                    : (g = Array.prototype.slice.call(arguments)).every(
                        function (_) {
                          return Number.isFinite(_);
                        },
                      ) &&
                      g.every(function (_) {
                        return typeof _ == 'number';
                      })
                    ? (arguments.length === 1 &&
                        ((this.x *= n), (this.y *= n), (this.z *= n)),
                      arguments.length === 2 && ((this.x *= n), (this.y *= c)),
                      arguments.length === 3 &&
                        ((this.x *= n), (this.y *= c), (this.z *= f)))
                    : console.warn(
                        'p5.Vector.prototype.mult:',
                        'x, y, or z arguments are either undefined or not a finite number',
                      ),
                  this
                );
              }),
              (r.default.Vector.prototype.div = function (n, c, f) {
                if (n instanceof r.default.Vector)
                  if (
                    Number.isFinite(n.x) &&
                    Number.isFinite(n.y) &&
                    Number.isFinite(n.z) &&
                    typeof n.x == 'number' &&
                    typeof n.y == 'number' &&
                    typeof n.z == 'number'
                  ) {
                    var g = n.z === 0 && this.z === 0;
                    if (n.x === 0 || n.y === 0 || (!g && n.z === 0))
                      return (
                        console.warn('p5.Vector.prototype.div:', 'divide by 0'),
                        this
                      );
                    (this.x /= n.x), (this.y /= n.y), g || (this.z /= n.z);
                  } else
                    console.warn(
                      'p5.Vector.prototype.div:',
                      'x contains components that are either undefined or not finite numbers',
                    );
                else if (n instanceof Array)
                  if (
                    n.every(function (_) {
                      return Number.isFinite(_);
                    }) &&
                    n.every(function (_) {
                      return typeof _ == 'number';
                    })
                  ) {
                    if (
                      n.some(function (_) {
                        return _ === 0;
                      })
                    )
                      return (
                        console.warn('p5.Vector.prototype.div:', 'divide by 0'),
                        this
                      );
                    n.length === 1
                      ? ((this.x /= n[0]), (this.y /= n[0]), (this.z /= n[0]))
                      : n.length === 2
                      ? ((this.x /= n[0]), (this.y /= n[1]))
                      : n.length === 3 &&
                        ((this.x /= n[0]), (this.y /= n[1]), (this.z /= n[2]));
                  } else
                    console.warn(
                      'p5.Vector.prototype.div:',
                      'x contains components that are either undefined or not finite numbers',
                    );
                else if (
                  ((g = Array.prototype.slice.call(arguments)),
                  g.every(function (_) {
                    return Number.isFinite(_);
                  }) &&
                    g.every(function (_) {
                      return typeof _ == 'number';
                    }))
                ) {
                  if (
                    g.some(function (_) {
                      return _ === 0;
                    })
                  )
                    return (
                      console.warn('p5.Vector.prototype.div:', 'divide by 0'),
                      this
                    );
                  arguments.length === 1 &&
                    ((this.x /= n), (this.y /= n), (this.z /= n)),
                    arguments.length === 2 && ((this.x /= n), (this.y /= c)),
                    arguments.length === 3 &&
                      ((this.x /= n), (this.y /= c), (this.z /= f));
                } else
                  console.warn(
                    'p5.Vector.prototype.div:',
                    'x, y, or z arguments are either undefined or not a finite number',
                  );
                return this;
              }),
              (r.default.Vector.prototype.mag = function () {
                return Math.sqrt(this.magSq());
              }),
              (r.default.Vector.prototype.magSq = function () {
                var n = this.x,
                  c = this.y,
                  f = this.z;
                return n * n + c * c + f * f;
              }),
              (r.default.Vector.prototype.dot = function (n, c, f) {
                return n instanceof r.default.Vector
                  ? this.dot(n.x, n.y, n.z)
                  : this.x * (n || 0) + this.y * (c || 0) + this.z * (f || 0);
              }),
              (r.default.Vector.prototype.cross = function (g) {
                var c = this.y * g.z - this.z * g.y,
                  f = this.z * g.x - this.x * g.z,
                  g = this.x * g.y - this.y * g.x;
                return this.isPInst
                  ? new r.default.Vector(
                      this._fromRadians,
                      this._toRadians,
                      c,
                      f,
                      g,
                    )
                  : new r.default.Vector(c, f, g);
              }),
              (r.default.Vector.prototype.dist = function (n) {
                return n.copy().sub(this).mag();
              }),
              (r.default.Vector.prototype.normalize = function () {
                var n = this.mag();
                return n !== 0 && this.mult(1 / n), this;
              }),
              (r.default.Vector.prototype.limit = function (n) {
                var c = this.magSq();
                return n * n < c && this.div(Math.sqrt(c)).mult(n), this;
              }),
              (r.default.Vector.prototype.setMag = function (n) {
                return this.normalize().mult(n);
              }),
              (r.default.Vector.prototype.heading = function () {
                var n = Math.atan2(this.y, this.x);
                return this.isPInst ? this._fromRadians(n) : n;
              }),
              (r.default.Vector.prototype.setHeading = function (n) {
                this.isPInst && (n = this._toRadians(n));
                var c = this.mag();
                return (
                  (this.x = c * Math.cos(n)), (this.y = c * Math.sin(n)), this
                );
              }),
              (r.default.Vector.prototype.rotate = function (c) {
                var c = this.heading() + c,
                  f = (this.isPInst && (c = this._toRadians(c)), this.mag());
                return (
                  (this.x = Math.cos(c) * f), (this.y = Math.sin(c) * f), this
                );
              }),
              (r.default.Vector.prototype.angleBetween = function (n) {
                var c = this.dot(n) / (this.mag() * n.mag()),
                  c = Math.acos(Math.min(1, Math.max(-1, c)));
                return (
                  (c *= Math.sign(this.cross(n).z || 1)),
                  (c = this.isPInst ? this._fromRadians(c) : c)
                );
              }),
              (r.default.Vector.prototype.lerp = function (n, c, f, g) {
                return n instanceof r.default.Vector
                  ? this.lerp(n.x, n.y, n.z, c)
                  : ((this.x += (n - this.x) * g || 0),
                    (this.y += (c - this.y) * g || 0),
                    (this.z += (f - this.z) * g || 0),
                    this);
              }),
              (r.default.Vector.prototype.reflect = function (n) {
                return n.normalize(), this.sub(n.mult(2 * this.dot(n)));
              }),
              (r.default.Vector.prototype.array = function () {
                return [this.x || 0, this.y || 0, this.z || 0];
              }),
              (r.default.Vector.prototype.equals = function (x, c, f) {
                var g,
                  _,
                  x =
                    x instanceof r.default.Vector
                      ? ((g = x.x || 0), (_ = x.y || 0), x.z || 0)
                      : x instanceof Array
                      ? ((g = x[0] || 0), (_ = x[1] || 0), x[2] || 0)
                      : ((g = x || 0), (_ = c || 0), f || 0);
                return this.x === g && this.y === _ && this.z === x;
              }),
              (r.default.Vector.fromAngle = function (n, c) {
                return new r.default.Vector(
                  (c = c === void 0 ? 1 : c) * Math.cos(n),
                  c * Math.sin(n),
                  0,
                );
              }),
              (r.default.Vector.fromAngles = function (j, _, f) {
                f === void 0 && (f = 1);
                var g = Math.cos(_),
                  _ = Math.sin(_),
                  x = Math.cos(j),
                  j = Math.sin(j);
                return new r.default.Vector(f * j * _, -f * x, f * j * g);
              }),
              (r.default.Vector.random2D = function () {
                return this.fromAngle(Math.random() * l.TWO_PI);
              }),
              (r.default.Vector.random3D = function () {
                var n = Math.random() * l.TWO_PI,
                  c = 2 * Math.random() - 1,
                  g = Math.sqrt(1 - c * c),
                  f = g * Math.cos(n),
                  g = g * Math.sin(n);
                return new r.default.Vector(f, g, c);
              }),
              (r.default.Vector.copy = function (n) {
                return n.copy(n);
              }),
              (r.default.Vector.add = function (n, c, f) {
                return (
                  f
                    ? f.set(n)
                    : ((f = n.copy()),
                      arguments.length === 3 &&
                        r.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.add',
                        )),
                  f.add(c),
                  f
                );
              }),
              (r.default.Vector.rem = function (n, c) {
                if (
                  n instanceof r.default.Vector &&
                  c instanceof r.default.Vector
                )
                  return (n = n.copy()).rem(c), n;
              }),
              (r.default.Vector.sub = function (n, c, f) {
                return (
                  f
                    ? f.set(n)
                    : ((f = n.copy()),
                      arguments.length === 3 &&
                        r.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.sub',
                        )),
                  f.sub(c),
                  f
                );
              }),
              (r.default.Vector.mult = function (n, c, f) {
                return (
                  f
                    ? f.set(n)
                    : ((f = n.copy()),
                      arguments.length === 3 &&
                        r.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.mult',
                        )),
                  f.mult(c),
                  f
                );
              }),
              (r.default.Vector.rotate = function (n, c, f) {
                return (
                  arguments.length === 2
                    ? (f = n.copy())
                    : (f instanceof r.default.Vector ||
                        r.default._friendlyError(
                          'The target parameter should be of type p5.Vector',
                          'p5.Vector.rotate',
                        ),
                      f.set(n)),
                  f.rotate(c),
                  f
                );
              }),
              (r.default.Vector.div = function (n, c, f) {
                return (
                  f
                    ? f.set(n)
                    : ((f = n.copy()),
                      arguments.length === 3 &&
                        r.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.div',
                        )),
                  f.div(c),
                  f
                );
              }),
              (r.default.Vector.dot = function (n, c) {
                return n.dot(c);
              }),
              (r.default.Vector.cross = function (n, c) {
                return n.cross(c);
              }),
              (r.default.Vector.dist = function (n, c) {
                return n.dist(c);
              }),
              (r.default.Vector.lerp = function (n, c, f, g) {
                return (
                  g
                    ? g.set(n)
                    : ((g = n.copy()),
                      arguments.length === 4 &&
                        r.default._friendlyError(
                          'The target parameter is undefined, it should be of type p5.Vector',
                          'p5.Vector.lerp',
                        )),
                  g.lerp(c, f),
                  g
                );
              }),
              (r.default.Vector.mag = function (n) {
                return n.mag();
              }),
              (r.default.Vector.magSq = function (n) {
                return n.magSq();
              }),
              (r.default.Vector.normalize = function (n, c) {
                return (
                  arguments.length < 2
                    ? (c = n.copy())
                    : (c instanceof r.default.Vector ||
                        r.default._friendlyError(
                          'The target parameter should be of type p5.Vector',
                          'p5.Vector.normalize',
                        ),
                      c.set(n)),
                  c.normalize()
                );
              }),
              (r.default.Vector.limit = function (n, c, f) {
                return (
                  arguments.length < 3
                    ? (f = n.copy())
                    : (f instanceof r.default.Vector ||
                        r.default._friendlyError(
                          'The target parameter should be of type p5.Vector',
                          'p5.Vector.limit',
                        ),
                      f.set(n)),
                  f.limit(c)
                );
              }),
              (r.default.Vector.setMag = function (n, c, f) {
                return (
                  arguments.length < 3
                    ? (f = n.copy())
                    : (f instanceof r.default.Vector ||
                        r.default._friendlyError(
                          'The target parameter should be of type p5.Vector',
                          'p5.Vector.setMag',
                        ),
                      f.set(n)),
                  f.setMag(c)
                );
              }),
              (r.default.Vector.heading = function (n) {
                return n.heading();
              }),
              (r.default.Vector.angleBetween = function (n, c) {
                return n.angleBetween(c);
              }),
              (r.default.Vector.reflect = function (n, c, f) {
                return (
                  arguments.length < 3
                    ? (f = n.copy())
                    : (f instanceof r.default.Vector ||
                        r.default._friendlyError(
                          'The target parameter should be of type p5.Vector',
                          'p5.Vector.reflect',
                        ),
                      f.set(n)),
                  f.reflect(c)
                );
              }),
              (r.default.Vector.array = function (n) {
                return n.array();
              }),
              (r.default.Vector.equals = function (n, c) {
                var f;
                return (
                  n instanceof r.default.Vector
                    ? (f = n)
                    : n instanceof Array
                    ? (f = new r.default.Vector().set(n))
                    : r.default._friendlyError(
                        'The v1 parameter should be of type Array or p5.Vector',
                        'p5.Vector.equals',
                      ),
                  f.equals(c)
                );
              });
            var s = r.default.Vector;
            y.default = s;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.every': 151,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.some': 163,
            'core-js/modules/es.math.sign': 168,
            'core-js/modules/es.number.constructor': 169,
            'core-js/modules/es.number.is-finite': 170,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.sub': 192,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        301: [
          function (d, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
                (d = d('../core/main')) && d.__esModule ? d : { default: d },
              a = '_lcg_random_state',
              r = 4294967296,
              l = 0,
              d =
                ((u.default.prototype._lcg = function (h) {
                  return (
                    (this[h] = (1664525 * this[h] + 1013904223) % r),
                    this[h] / r
                  );
                }),
                (u.default.prototype._lcgSetSeed = function (h, o) {
                  this[h] = (o == null ? Math.random() * r : o) >>> 0;
                }),
                (u.default.prototype.randomSeed = function (h) {
                  this._lcgSetSeed(a, h), (this._gaussian_previous = !1);
                }),
                (u.default.prototype.random = function (h, o) {
                  var s, n;
                  return (
                    u.default._validateParameters('random', arguments),
                    (s = this[a] != null ? this._lcg(a) : Math.random()),
                    h === void 0
                      ? s
                      : o === void 0
                      ? h instanceof Array
                        ? h[Math.floor(s * h.length)]
                        : s * h
                      : (o < h && ((n = h), (h = o), (o = n)), s * (o - h) + h)
                  );
                }),
                (u.default.prototype.randomGaussian = function (h) {
                  var o,
                    s,
                    n,
                    c,
                    f =
                      1 < arguments.length && arguments[1] !== void 0
                        ? arguments[1]
                        : 1;
                  if (this._gaussian_previous)
                    (o = l), (this._gaussian_previous = !1);
                  else {
                    for (
                      ;
                      1 <=
                      (c =
                        (s = this.random(2) - 1) * s +
                        (n = this.random(2) - 1) * n);

                    );
                    (o = s * (c = Math.sqrt((-2 * Math.log(c)) / c))),
                      (l = n * c),
                      (this._gaussian_previous = !0);
                  }
                  return o * f + (h || 0);
                }),
                u.default);
            y.default = d;
          },
          { '../core/main': 267 },
        ],
        302: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (h = t('../core/main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../core/constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            (r.default.prototype._angleMode = l.RADIANS),
              (r.default.prototype.acos = function (o) {
                return this._fromRadians(Math.acos(o));
              }),
              (r.default.prototype.asin = function (o) {
                return this._fromRadians(Math.asin(o));
              }),
              (r.default.prototype.atan = function (o) {
                return this._fromRadians(Math.atan(o));
              }),
              (r.default.prototype.atan2 = function (o, s) {
                return this._fromRadians(Math.atan2(o, s));
              }),
              (r.default.prototype.cos = function (o) {
                return Math.cos(this._toRadians(o));
              }),
              (r.default.prototype.sin = function (o) {
                return Math.sin(this._toRadians(o));
              }),
              (r.default.prototype.tan = function (o) {
                return Math.tan(this._toRadians(o));
              }),
              (r.default.prototype.degrees = function (o) {
                return o * l.RAD_TO_DEG;
              }),
              (r.default.prototype.radians = function (o) {
                return o * l.DEG_TO_RAD;
              }),
              (r.default.prototype.angleMode = function (o) {
                if (
                  (r.default._validateParameters('angleMode', arguments),
                  o === void 0)
                )
                  return this._angleMode;
                (o !== l.DEGREES && o !== l.RADIANS) || (this._angleMode = o);
              }),
              (r.default.prototype._toRadians = function (o) {
                return this._angleMode === l.DEGREES ? o * l.DEG_TO_RAD : o;
              }),
              (r.default.prototype._toDegrees = function (o) {
                return this._angleMode === l.RADIANS ? o * l.RAD_TO_DEG : o;
              }),
              (r.default.prototype._fromRadians = function (o) {
                return this._angleMode === l.DEGREES ? o * l.RAD_TO_DEG : o;
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        303: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.prototype.textAlign = function (a, r) {
              var l;
              return (
                u.default._validateParameters('textAlign', arguments),
                (l = this._renderer).textAlign.apply(l, arguments)
              );
            }),
              (u.default.prototype.textLeading = function (a) {
                var r;
                return (
                  u.default._validateParameters('textLeading', arguments),
                  (r = this._renderer).textLeading.apply(r, arguments)
                );
              }),
              (u.default.prototype.textSize = function (a) {
                var r;
                return (
                  u.default._validateParameters('textSize', arguments),
                  (r = this._renderer).textSize.apply(r, arguments)
                );
              }),
              (u.default.prototype.textStyle = function (a) {
                var r;
                return (
                  u.default._validateParameters('textStyle', arguments),
                  (r = this._renderer).textStyle.apply(r, arguments)
                );
              }),
              (u.default.prototype.textWidth = function () {
                for (
                  var a, r = arguments.length, l = new Array(r), d = 0;
                  d < r;
                  d++
                )
                  l[d] = arguments[d];
                return (
                  (l[0] += ''),
                  u.default._validateParameters('textWidth', l),
                  l[0].length === 0
                    ? 0
                    : (a = this._renderer).textWidth.apply(a, l)
                );
              }),
              (u.default.prototype.textAscent = function () {
                for (
                  var a = arguments.length, r = new Array(a), l = 0;
                  l < a;
                  l++
                )
                  r[l] = arguments[l];
                return (
                  u.default._validateParameters('textAscent', r),
                  this._renderer.textAscent()
                );
              }),
              (u.default.prototype.textDescent = function () {
                for (
                  var a = arguments.length, r = new Array(a), l = 0;
                  l < a;
                  l++
                )
                  r[l] = arguments[l];
                return (
                  u.default._validateParameters('textDescent', r),
                  this._renderer.textDescent()
                );
              }),
              (u.default.prototype._updateTextMetrics = function () {
                return this._renderer._updateTextMetrics();
              }),
              (u.default.prototype.textWrap = function (a) {
                if (a !== 'WORD' && a !== 'CHAR')
                  throw 'Error: textWrap accepts only WORD or CHAR';
                return this._renderer.textWrap(a);
              }),
              (t = u.default),
              (y.default = t);
          },
          { '../core/main': 267 },
        ],
        304: [
          function (t, b, y) {
            function u(n) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (c) {
                      return typeof c;
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : typeof c;
                    })(n);
            }
            function a(n) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (c) {
                      return u(c);
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : u(c);
                    })(n);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.last-index-of'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.includes'),
              t('core-js/modules/es.array.last-index-of'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.split'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (s = t('../core/main')) && s.__esModule ? s : { default: s },
              l = o(t('../core/constants')),
              d = o(t('opentype.js'));
            function h() {
              var n;
              return typeof WeakMap != 'function'
                ? null
                : ((n = new WeakMap()),
                  (h = function () {
                    return n;
                  }),
                  n);
            }
            function o(n) {
              if (n && n.__esModule) return n;
              if (n === null || (a(n) !== 'object' && typeof n != 'function'))
                return { default: n };
              var c = h();
              if (c && c.has(n)) return c.get(n);
              var f,
                g,
                _ = {},
                x = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (f in n)
                Object.prototype.hasOwnProperty.call(n, f) &&
                  ((g = x ? Object.getOwnPropertyDescriptor(n, f) : null) &&
                  (g.get || g.set)
                    ? Object.defineProperty(_, f, g)
                    : (_[f] = n[f]));
              return (_.default = n), c && c.set(n, _), _;
            }
            t('../core/friendly_errors/validate_params'),
              t('../core/friendly_errors/file_errors'),
              t('../core/friendly_errors/fes_core'),
              (r.default.prototype.loadFont = function (n, c, f) {
                r.default._validateParameters('loadFont', arguments);
                var g = new r.default.Font(this),
                  _ = this;
                return (
                  d.load(n, function (v, M) {
                    if (v)
                      return (
                        r.default._friendlyFileLoadError(4, n),
                        f !== void 0 ? f(v) : void console.error(v, n)
                      );
                    (g.font = M), c !== void 0 && c(g), _._decrementPreload();
                    var v = n.split('\\').pop().split('/').pop(),
                      M = v.lastIndexOf('.'),
                      C = M < 1 ? null : v.slice(M + 1);
                    ['ttf', 'otf', 'woff', 'woff2'].includes(C) &&
                      ((C = v.slice(0, M !== -1 ? M : 0)),
                      (v = document.createElement('style')).appendChild(
                        document.createTextNode(
                          `
@font-face {
font-family: `
                            .concat(
                              C,
                              `;
src: url(`,
                            )
                            .concat(
                              n,
                              `);
}
`,
                            ),
                        ),
                      ),
                      document.head.appendChild(v));
                  }),
                  g
                );
              }),
              (r.default.prototype.text = function (n, c, f, g, _) {
                var x;
                return (
                  r.default._validateParameters('text', arguments),
                  this._renderer._doFill || this._renderer._doStroke
                    ? (x = this._renderer).text.apply(x, arguments)
                    : this
                );
              }),
              (r.default.prototype.textFont = function (n, c) {
                if (
                  (r.default._validateParameters('textFont', arguments),
                  arguments.length)
                ) {
                  if (n)
                    return (
                      this._renderer._setProperty('_textFont', n),
                      c &&
                        (this._renderer._setProperty('_textSize', c),
                        this._renderer._leadingSet ||
                          this._renderer._setProperty(
                            '_textLeading',
                            c * l._DEFAULT_LEADMULT,
                          )),
                      this._renderer._applyTextProperties()
                    );
                  throw new Error('null font passed to textFont');
                }
                return this._renderer._textFont;
              });
            var s = r.default;
            y.default = s;
          },
          {
            '../core/constants': 256,
            '../core/friendly_errors/fes_core': 258,
            '../core/friendly_errors/file_errors': 259,
            '../core/friendly_errors/validate_params': 262,
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.last-index-of': 160,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
            'opentype.js': 241,
          },
        ],
        305: [
          function (t, b, y) {
            function u(C) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (k) {
                      return typeof k;
                    }
                  : function (k) {
                      return k &&
                        typeof Symbol == 'function' &&
                        k.constructor === Symbol &&
                        k !== Symbol.prototype
                        ? 'symbol'
                        : typeof k;
                    })(C);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.number.to-fixed'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.number.to-fixed'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var a =
                (a = t('../core/main')) && a.__esModule ? a : { default: a },
              r = (function (C) {
                if (C && C.__esModule) return C;
                if (C === null || (d(C) !== 'object' && typeof C != 'function'))
                  return { default: C };
                var k = l();
                if (k && k.has(C)) return k.get(C);
                var A,
                  R = {},
                  O = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (A in C) {
                  var D;
                  Object.prototype.hasOwnProperty.call(C, A) &&
                    ((D = O ? Object.getOwnPropertyDescriptor(C, A) : null) &&
                    (D.get || D.set)
                      ? Object.defineProperty(R, A, D)
                      : (R[A] = C[A]));
                }
                return (R.default = C), k && k.set(C, R), R;
              })(t('../core/constants'));
            function l() {
              var C;
              return typeof WeakMap != 'function'
                ? null
                : ((C = new WeakMap()),
                  (l = function () {
                    return C;
                  }),
                  C);
            }
            function d(C) {
              return (d =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (k) {
                      return u(k);
                    }
                  : function (k) {
                      return k &&
                        typeof Symbol == 'function' &&
                        k.constructor === Symbol &&
                        k !== Symbol.prototype
                        ? 'symbol'
                        : u(k);
                    })(C);
            }
            function h(C, k) {
              var A = C.length;
              return C[k < 0 ? (k % A) + A : k % A];
            }
            function o(C, k, A, R) {
              var O, D, N;
              return R
                ? (o.tmpPoint1 === void 0 &&
                    ((o.tmpPoint1 = []), (o.tmpPoint2 = [])),
                  (D = o.tmpPoint1),
                  (N = o.tmpPoint2),
                  (D.x = k.x - C.x),
                  (D.y = k.y - C.y),
                  (N.x = A.x - k.x),
                  (N.y = A.y - k.y),
                  (O = D.x * N.x + D.y * N.y),
                  (D = Math.sqrt(D.x * D.x + D.y * D.y)),
                  (N = Math.sqrt(N.x * N.x + N.y * N.y)),
                  Math.acos(O / (D * N)) < R)
                : (k[0] - C[0]) * (A[1] - C[1]) -
                    (A[0] - C[0]) * (k[1] - C[1]) ==
                    0;
            }
            function s(P, B, L, Y, ee, D, N, U, H) {
              var q = 1 - H,
                X = Math.pow(q, 3),
                W = Math.pow(q, 2),
                ae = H * H,
                Z = ae * H,
                z = X * P + 3 * W * H * L + 3 * q * H * H * ee + Z * N,
                X = X * B + 3 * W * H * Y + 3 * q * H * H * D + Z * U,
                W = P + 2 * H * (L - P) + ae * (ee - 2 * L + P),
                Z = B + 2 * H * (Y - B) + ae * (D - 2 * Y + B),
                $ = L + 2 * H * (ee - L) + ae * (N - 2 * ee + L),
                ae = Y + 2 * H * (D - Y) + ae * (U - 2 * D + Y),
                P = q * P + H * L,
                L = q * B + H * Y,
                B = q * ee + H * N,
                Y = q * D + H * U,
                ee = 90 - (180 * Math.atan2(W - $, Z - ae)) / Math.PI;
              return (
                ($ < W || Z < ae) && (ee += 180),
                {
                  x: z,
                  y: X,
                  m: { x: W, y: Z },
                  n: { x: $, y: ae },
                  start: { x: P, y: L },
                  end: { x: B, y: Y },
                  alpha: ee,
                }
              );
            }
            function n(C, k, A, R, O, D, N, U, H) {
              return H == null
                ? v(C, k, A, R, O, D, N, U)
                : s(
                    C,
                    k,
                    A,
                    R,
                    O,
                    D,
                    N,
                    U,
                    (function (q, z, X, W, Z, $, ae, P, L) {
                      if (!(L < 0 || v(q, z, X, W, Z, $, ae, P) < L)) {
                        var B,
                          Y = 0.5,
                          ee = 1 - Y;
                        for (
                          B = v(q, z, X, W, Z, $, ae, P, ee);
                          0.01 < Math.abs(B - L);

                        )
                          B = v(
                            q,
                            z,
                            X,
                            W,
                            Z,
                            $,
                            ae,
                            P,
                            (ee += (B < L ? 1 : -1) * (Y /= 2)),
                          );
                        return ee;
                      }
                    })(C, k, A, R, O, D, N, U, H),
                  );
            }
            function c(C, k, A) {
              for (
                var R,
                  O,
                  D,
                  N,
                  U,
                  H = 0,
                  q = 0,
                  z = (C = (function (X, W) {
                    function Z(ve, me, Ce) {
                      var Se, Pe;
                      if (!ve) return ['C', me.x, me.y, me.x, me.y, me.x, me.y];
                      switch (
                        ((ve[0] in { T: 1, Q: 1 }) || (me.qx = me.qy = null),
                        ve[0])
                      ) {
                        case 'M':
                          (me.X = ve[1]), (me.Y = ve[2]);
                          break;
                        case 'A':
                          ve = ['C'].concat(
                            g.apply(0, [me.x, me.y].concat(ve.slice(1))),
                          );
                          break;
                        case 'S':
                          (Pe =
                            Ce === 'C' || Ce === 'S'
                              ? ((Se = 2 * me.x - me.bx), 2 * me.y - me.by)
                              : ((Se = me.x), me.y)),
                            (ve = ['C', Se, Pe].concat(ve.slice(1)));
                          break;
                        case 'T':
                          Ce === 'Q' || Ce === 'T'
                            ? ((me.qx = 2 * me.x - me.qx),
                              (me.qy = 2 * me.y - me.qy))
                            : ((me.qx = me.x), (me.qy = me.y)),
                            (ve = ['C'].concat(
                              j(me.x, me.y, me.qx, me.qy, ve[1], ve[2]),
                            ));
                          break;
                        case 'Q':
                          (me.qx = ve[1]),
                            (me.qy = ve[2]),
                            (ve = ['C'].concat(
                              j(me.x, me.y, ve[1], ve[2], ve[3], ve[4]),
                            ));
                          break;
                        case 'L':
                          ve = ['C'].concat(x(me.x, me.y, ve[1], ve[2]));
                          break;
                        case 'H':
                          ve = ['C'].concat(x(me.x, me.y, ve[1], me.y));
                          break;
                        case 'V':
                          ve = ['C'].concat(x(me.x, me.y, me.x, ve[1]));
                          break;
                        case 'Z':
                          ve = ['C'].concat(x(me.x, me.y, me.X, me.Y));
                      }
                      return ve;
                    }
                    function $(ve, me) {
                      if (7 < ve[me].length) {
                        ve[me].shift();
                        for (var Ce = ve[me]; Ce.length; )
                          (ne[me] = 'A'),
                            B && (ce[me] = 'A'),
                            ve.splice(me++, 0, ['C'].concat(Ce.splice(0, 6)));
                        ve.splice(me, 1),
                          (P = Math.max(L.length, (B && B.length) || 0));
                      }
                    }
                    function ae(ve, me, Ce, Se, Pe) {
                      ve &&
                        me &&
                        ve[Pe][0] === 'M' &&
                        me[Pe][0] !== 'M' &&
                        (me.splice(Pe, 0, ['M', Se.x, Se.y]),
                        (Ce.bx = 0),
                        (Ce.by = 0),
                        (Ce.x = ve[Pe][1]),
                        (Ce.y = ve[Pe][2]),
                        (P = Math.max(L.length, (B && B.length) || 0)));
                    }
                    var P,
                      L = f(X),
                      B = W && f(W),
                      Y = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null,
                      },
                      ee = {
                        x: 0,
                        y: 0,
                        bx: 0,
                        by: 0,
                        X: 0,
                        Y: 0,
                        qx: null,
                        qy: null,
                      },
                      ne = [],
                      ce = [],
                      pe = '',
                      le = '';
                    P = Math.max(L.length, (B && B.length) || 0);
                    for (var ue = 0; ue < P; ue++) {
                      (pe = L[ue] ? L[ue][0] : pe) !== 'C' &&
                        ((ne[ue] = pe), ue && (le = ne[ue - 1])),
                        (L[ue] = Z(L[ue], Y, le)),
                        ne[ue] !== 'A' && pe === 'C' && (ne[ue] = 'C'),
                        $(L, ue),
                        B &&
                          ((pe = B[ue] ? B[ue][0] : pe) !== 'C' &&
                            ((ce[ue] = pe), ue && (le = ce[ue - 1])),
                          (B[ue] = Z(B[ue], ee, le)),
                          ce[ue] !== 'A' && pe === 'C' && (ce[ue] = 'C'),
                          $(B, ue)),
                        ae(L, B, Y, ee, ue),
                        ae(B, L, ee, Y, ue);
                      var be = L[ue],
                        te = B && B[ue],
                        se = be.length,
                        he = B && te.length;
                      (Y.x = be[se - 2]),
                        (Y.y = be[se - 1]),
                        (Y.bx = parseFloat(be[se - 4]) || Y.x),
                        (Y.by = parseFloat(be[se - 3]) || Y.y),
                        (ee.bx = B && (parseFloat(te[he - 4]) || ee.x)),
                        (ee.by = B && (parseFloat(te[he - 3]) || ee.y)),
                        (ee.x = B && te[he - 2]),
                        (ee.y = B && te[he - 1]);
                    }
                    return B ? [L, B] : L;
                  })(C)).length;
                q < z;
                q++
              ) {
                if ((D = C[q])[0] === 'M') (R = +D[1]), (O = +D[2]);
                else {
                  if (
                    k < H + (N = n(R, O, D[1], D[2], D[3], D[4], D[5], D[6])) &&
                    !A
                  )
                    return {
                      x: (U = n(
                        R,
                        O,
                        D[1],
                        D[2],
                        D[3],
                        D[4],
                        D[5],
                        D[6],
                        k - H,
                      )).x,
                      y: U.y,
                      alpha: U.alpha,
                    };
                  (H += N), (R = +D[5]), (O = +D[6]);
                }
                D.shift();
              }
              return (U = (U = A
                ? H
                : s(R, O, D[0], D[1], D[2], D[3], D[4], D[5], 1)).alpha
                ? { x: U.x, y: U.y, alpha: U.alpha }
                : U);
            }
            function f(C) {
              var k = [],
                A = 0,
                R = 0,
                O = 0,
                D = 0,
                N = 0;
              if (C) {
                C[0][0] === 'M' &&
                  ((O = A = +C[0][1]),
                  (D = R = +C[0][2]),
                  N++,
                  (k[0] = ['M', A, R]));
                for (
                  var U,
                    H,
                    q =
                      C.length === 3 &&
                      C[0][0] === 'M' &&
                      C[1][0].toUpperCase() === 'R' &&
                      C[2][0].toUpperCase() === 'Z',
                    z = N,
                    X = C.length;
                  z < X;
                  z++
                ) {
                  if (
                    (k.push((U = [])),
                    (H = C[z])[0] !== String.prototype.toUpperCase.call(H[0]))
                  )
                    switch (
                      ((U[0] = String.prototype.toUpperCase.call(H[0])), U[0])
                    ) {
                      case 'A':
                        (U[1] = H[1]),
                          (U[2] = H[2]),
                          (U[3] = H[3]),
                          (U[4] = H[4]),
                          (U[5] = H[5]),
                          (U[6] = +(H[6] + A)),
                          (U[7] = +(H[7] + R));
                        break;
                      case 'V':
                        U[1] = +H[1] + R;
                        break;
                      case 'H':
                        U[1] = +H[1] + A;
                        break;
                      case 'R':
                        for (
                          var W,
                            Z = 2,
                            $ = (W = [A, R].concat(H.slice(1))).length;
                          Z < $;
                          Z++
                        )
                          (W[Z] = +W[Z] + A), (W[++Z] = +W[Z] + R);
                        k.pop(), (k = k.concat(_(W, q)));
                        break;
                      case 'M':
                        (O = +H[1] + A), (D = +H[2] + R);
                        break;
                      default:
                        for (var ae = 1, P = H.length; ae < P; ae++)
                          U[ae] = +H[ae] + (ae % 2 ? A : R);
                    }
                  else if (H[0] === 'R')
                    (W = [A, R].concat(H.slice(1))),
                      k.pop(),
                      (k = k.concat(_(W, q))),
                      (U = ['R'].concat(H.slice(-2)));
                  else for (var L = 0, B = H.length; L < B; L++) U[L] = H[L];
                  switch (U[0]) {
                    case 'Z':
                      (A = O), (R = D);
                      break;
                    case 'H':
                      A = U[1];
                      break;
                    case 'V':
                      R = U[1];
                      break;
                    case 'M':
                      (O = U[U.length - 2]), (D = U[U.length - 1]);
                      break;
                    default:
                      (A = U[U.length - 2]), (R = U[U.length - 1]);
                  }
                }
              }
              return k;
            }
            function g(C, k, A, R, B, ne, Y, U, H, q) {
              function z(he, ve, me) {
                return {
                  x: he * Math.cos(me) - ve * Math.sin(me),
                  y: he * Math.sin(me) + ve * Math.cos(me),
                };
              }
              var X,
                P = Math.PI,
                L = (120 * P) / 180,
                W = (P / 180) * (+B || 0),
                Z = [],
                $ =
                  (q
                    ? ((ue = q[0]), (X = q[1]), (pe = q[2]), (le = q[3]))
                    : ((C = (ee = z(C, k, -W)).x),
                      (k = ee.y),
                      1 <
                        ($ =
                          ((ae = (C - (U = (ee = z(U, H, -W)).x)) / 2) * ae) /
                            (A * A) +
                          ((ee = (k - (H = ee.y)) / 2) * ee) / (R * R)) &&
                        ((A *= $ = Math.sqrt($)), (R *= $)),
                      ($ = A * A),
                      (ce = R * R),
                      (pe =
                        ((ne =
                          (ne === Y ? -1 : 1) *
                          Math.sqrt(
                            Math.abs(
                              ($ * ce - $ * ee * ee - ce * ae * ae) /
                                ($ * ee * ee + ce * ae * ae),
                            ),
                          )) *
                          A *
                          ee) /
                          R +
                        (C + U) / 2),
                      (le = (ne * -R * ae) / A + (k + H) / 2),
                      (ue = Math.asin(((k - le) / R).toFixed(9))),
                      (X = Math.asin(((H - le) / R).toFixed(9))),
                      (ue = C < pe ? P - ue : ue) < 0 && (ue = 2 * P + ue),
                      (X = U < pe ? P - X : X) < 0 && (X = 2 * P + X),
                      Y && X < ue && (ue -= 2 * P),
                      !Y && ue < X && (X -= 2 * P)),
                  X - ue),
                ae =
                  (Math.abs($) > L &&
                    ((ce = X),
                    (ee = U),
                    (ne = H),
                    (X = ue + L * (Y && ue < X ? 1 : -1)),
                    (Z = g(
                      (U = pe + A * Math.cos(X)),
                      (H = le + R * Math.sin(X)),
                      A,
                      R,
                      B,
                      0,
                      Y,
                      ee,
                      ne,
                      [X, ce, pe, le],
                    ))),
                  ($ = X - ue),
                  Math.cos(ue)),
                P = Math.sin(ue),
                L = Math.cos(X),
                B = Math.sin(X),
                Y = Math.tan($ / 4),
                ee = (4 / 3) * A * Y,
                ne = (4 / 3) * R * Y,
                ce = [C, k],
                pe = [C + ee * P, k - ne * ae],
                le = [U + ee * B, H - ne * L],
                ue = [U, H];
              if (((pe[0] = 2 * ce[0] - pe[0]), (pe[1] = 2 * ce[1] - pe[1]), q))
                return [pe, le, ue].concat(Z);
              for (
                var be = [],
                  te = 0,
                  se = (Z = [pe, le, ue].concat(Z).join().split(',')).length;
                te < se;
                te++
              )
                be[te] =
                  te % 2 ? z(Z[te - 1], Z[te], W).y : z(Z[te], Z[te + 1], W).x;
              return be;
            }
            function _(C, k) {
              for (var A = [], R = 0, O = C.length; R < O - 2 * !k; R += 2) {
                var D = [
                  { x: +C[R - 2], y: +C[R - 1] },
                  { x: +C[R], y: +C[R + 1] },
                  { x: +C[R + 2], y: +C[R + 3] },
                  { x: +C[R + 4], y: +C[R + 5] },
                ];
                k
                  ? R
                    ? O - 4 === R
                      ? (D[3] = { x: +C[0], y: +C[1] })
                      : O - 2 === R &&
                        ((D[2] = { x: +C[0], y: +C[1] }),
                        (D[3] = { x: +C[2], y: +C[3] }))
                    : (D[0] = { x: +C[O - 2], y: +C[O - 1] })
                  : O - 4 === R
                  ? (D[3] = D[2])
                  : R || (D[0] = { x: +C[R], y: +C[R + 1] }),
                  A.push([
                    'C',
                    (-D[0].x + 6 * D[1].x + D[2].x) / 6,
                    (-D[0].y + 6 * D[1].y + D[2].y) / 6,
                    (D[1].x + 6 * D[2].x - D[3].x) / 6,
                    (D[1].y + 6 * D[2].y - D[3].y) / 6,
                    D[2].x,
                    D[2].y,
                  ]);
              }
              return A;
            }
            function x(C, k, A, R) {
              return [C, k, A, R, A, R];
            }
            function j(C, k, A, R, O, D) {
              return [
                (1 / 3) * C + (2 / 3) * A,
                (1 / 3) * k + (2 / 3) * R,
                (1 / 3) * O + (2 / 3) * A,
                (1 / 3) * D + (2 / 3) * R,
                O,
                D,
              ];
            }
            function v(C, k, A, R, O, D, N, U, H) {
              for (
                var q =
                    (H = 1 < (H = H == null ? 1 : H) ? 1 : H < 0 ? 0 : H) / 2,
                  z = [
                    -0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699,
                    0.7699, -0.9041, 0.9041, -0.9816, 0.9816,
                  ],
                  X = 0,
                  W = [
                    0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601,
                    0.1601, 0.1069, 0.1069, 0.0472, 0.0472,
                  ],
                  Z = 0;
                Z < 12;
                Z++
              ) {
                var ae = q * z[Z] + q,
                  $ = M(ae, C, A, O, N),
                  ae = M(ae, k, R, D, U);
                X += W[Z] * Math.sqrt($ * $ + ae * ae);
              }
              return q * X;
            }
            function M(C, k, A, R, O) {
              return (
                C *
                  (C * (-3 * k + 9 * A - 9 * R + 3 * O) +
                    6 * k -
                    12 * A +
                    6 * R) -
                3 * k +
                3 * A
              );
            }
            (a.default.Font = function (C) {
              (this.parent = C), (this.cache = {}), (this.font = void 0);
            }),
              (a.default.Font.prototype.textBounds = function (C) {
                var k =
                    1 < arguments.length && arguments[1] !== void 0
                      ? arguments[1]
                      : 0,
                  A =
                    2 < arguments.length && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  N = 3 < arguments.length ? arguments[3] : void 0,
                  R = 4 < arguments.length ? arguments[4] : void 0,
                  O = (R && R.renderer && R.renderer._pInst) || this.parent,
                  D = O._renderer.drawingContext,
                  N =
                    (D.textAlign || r.LEFT,
                    D.textBaseline || r.BASELINE,
                    N || O._renderer._textSize);
                if (!L) {
                  for (
                    var U = [],
                      H = [],
                      q = [],
                      z = ((q[0] = []), []),
                      X = this._scale(N),
                      W = O._renderer.textLeading(),
                      Z = 0,
                      $ =
                        (this.font.forEachGlyph(
                          C,
                          k,
                          A,
                          N,
                          R,
                          function (ee, ne, ce, pe) {
                            var le = ee.getMetrics();
                            ee.index === 0 || ee.index === 10
                              ? (q[(Z += 1)] = [])
                              : (q[Z].push(ne + le.xMin * X),
                                q[Z].push(ne + le.xMax * X),
                                z.push(ce + Z * W + -le.yMin * X),
                                z.push(ce + Z * W + -le.yMax * X));
                          },
                        ),
                        0 < q[Z].length &&
                          ((U[Z] = Math.min.apply(null, q[Z])),
                          (H[Z] = Math.max.apply(null, q[Z]))),
                        0),
                      ae = 0;
                    ae <= Z;
                    ae++
                  ) {
                    (U[ae] = Math.min.apply(null, q[ae])),
                      (H[ae] = Math.max.apply(null, q[ae]));
                    var P = H[ae] - U[ae];
                    $ < P && ($ = P);
                  }
                  var D = Math.min.apply(null, U),
                    L = {
                      x: D,
                      y: (A = Math.min.apply(null, z)),
                      h: Math.max.apply(null, z) - A,
                      w: $,
                      advance: D - k,
                    },
                    N = this._handleAlignment(
                      O._renderer,
                      C,
                      L.x,
                      L.y,
                      L.w + L.advance,
                    );
                  (L.x = N.x), (L.y = N.y);
                }
                return L;
              }),
              (a.default.Font.prototype.textToPoints = function (
                C,
                k,
                A,
                R,
                O,
              ) {
                var D = 0,
                  N = [],
                  U = this._getGlyphs(C);
                R = R || this.parent._renderer._textSize;
                for (var H, q = 0; q < U.length; q++) {
                  if (
                    !(
                      (U[(H = q)].name && U[H].name === 'space') ||
                      (C.length === U.length && C[H] === ' ')
                    )
                  )
                    for (
                      var z = (function ($) {
                          for (var ae, P = [], L = 0; L < $.length; L++)
                            $[L].type === 'M' && (ae && P.push(ae), (ae = [])),
                              ae.push(
                                (function (B) {
                                  var Y = [B.type];
                                  return (
                                    B.type === 'M' || B.type === 'L'
                                      ? Y.push(B.x, B.y)
                                      : B.type === 'C'
                                      ? Y.push(B.x1, B.y1, B.x2, B.y2, B.x, B.y)
                                      : B.type === 'Q' &&
                                        Y.push(B.x1, B.y1, B.x, B.y),
                                    Y
                                  );
                                })($[L]),
                              );
                          return P.push(ae), P;
                        })(U[q].getPath(k, A, R).commands),
                        X = 0;
                      X < z.length;
                      X++
                    )
                      for (
                        var W = (function ($, ae) {
                            for (
                              var ae = (function (ne, ce) {
                                  if (d(ne) !== 'object') ne = ce;
                                  else
                                    for (var pe in ce)
                                      ne[pe] === void 0 && (ne[pe] = ce[pe]);
                                  return ne;
                                })(ae, {
                                  sampleFactor: 0.1,
                                  simplifyThreshold: 0,
                                }),
                                P = c($, 0, 1),
                                L = P / (P * ae.sampleFactor),
                                B = [],
                                Y = 0;
                              Y < P;
                              Y += L
                            )
                              B.push(c($, Y));
                            return (
                              ae.simplifyThreshold &&
                                (function (ee) {
                                  for (
                                    var ne =
                                        1 < arguments.length &&
                                        arguments[1] !== void 0
                                          ? arguments[1]
                                          : 0,
                                      ce = 0,
                                      pe = ee.length - 1;
                                    3 < ee.length && 0 <= pe;
                                    --pe
                                  )
                                    o(
                                      h(ee, pe - 1),
                                      h(ee, pe),
                                      h(ee, pe + 1),
                                      ne,
                                    ) && (ee.splice(pe % ee.length, 1), ce++);
                                })(B, ae.simplifyThreshold),
                              B
                            );
                          })(z[X], O),
                          Z = 0;
                        Z < W.length;
                        Z++
                      )
                        (W[Z].x += D), N.push(W[Z]);
                  D += U[q].advanceWidth * this._scale(R);
                }
                return N;
              }),
              (a.default.Font.prototype._getGlyphs = function (C) {
                return this.font.stringToGlyphs(C);
              }),
              (a.default.Font.prototype._getPath = function (C, D, A, R) {
                var O = ((R && R.renderer && R.renderer._pInst) || this.parent)
                    ._renderer,
                  D = this._handleAlignment(O, C, D, A);
                return this.font.getPath(C, D.x, D.y, O._textSize, R);
              }),
              (a.default.Font.prototype._getPathData = function (C, k, A, R) {
                var O = 3;
                return (
                  typeof C == 'string' && 2 < arguments.length
                    ? (C = this._getPath(C, k, A, R))
                    : d(k) === 'object' && (R = k),
                  R && typeof R.decimals == 'number' && (O = R.decimals),
                  C.toPathData(O)
                );
              }),
              (a.default.Font.prototype._getSVG = function (C, k, A, R) {
                var O = 3;
                return (
                  typeof C == 'string' && 2 < arguments.length
                    ? (C = this._getPath(C, k, A, R))
                    : d(k) === 'object' && (R = k),
                  R &&
                    (typeof R.decimals == 'number' && (O = R.decimals),
                    typeof R.strokeWidth == 'number' &&
                      (C.strokeWidth = R.strokeWidth),
                    R.fill !== void 0 && (C.fill = R.fill),
                    R.stroke !== void 0 && (C.stroke = R.stroke)),
                  C.toSVG(O)
                );
              }),
              (a.default.Font.prototype._renderPath = function (N, H, q, R) {
                var O = (R && R.renderer) || this.parent._renderer,
                  D = O.drawingContext,
                  N = (
                    d(N) === 'object' && N.commands
                      ? N
                      : this._getPath(N, H, q, R)
                  ).commands,
                  U = (D.beginPath(), !0),
                  H = !1,
                  q = void 0;
                try {
                  for (
                    var z, X = N[Symbol.iterator]();
                    !(U = (z = X.next()).done);
                    U = !0
                  ) {
                    var W = z.value;
                    W.type === 'M'
                      ? D.moveTo(W.x, W.y)
                      : W.type === 'L'
                      ? D.lineTo(W.x, W.y)
                      : W.type === 'C'
                      ? D.bezierCurveTo(W.x1, W.y1, W.x2, W.y2, W.x, W.y)
                      : W.type === 'Q'
                      ? D.quadraticCurveTo(W.x1, W.y1, W.x, W.y)
                      : W.type === 'Z' && D.closePath();
                  }
                } catch (Z) {
                  (H = !0), (q = Z);
                } finally {
                  try {
                    U || X.return == null || X.return();
                  } finally {
                    if (H) throw q;
                  }
                }
                return (
                  O._doStroke && O._strokeSet && D.stroke(),
                  O._doFill &&
                    (O._fillSet || O._setFill(r._DEFAULT_TEXT_FILL), D.fill()),
                  this
                );
              }),
              (a.default.Font.prototype._textWidth = function (C, k) {
                return this.font.getAdvanceWidth(C, k);
              }),
              (a.default.Font.prototype._textAscent = function (C) {
                return this.font.ascender * this._scale(C);
              }),
              (a.default.Font.prototype._textDescent = function (C) {
                return -this.font.descender * this._scale(C);
              }),
              (a.default.Font.prototype._scale = function (C) {
                return (
                  (1 / this.font.unitsPerEm) *
                  (C || this.parent._renderer._textSize)
                );
              }),
              (a.default.Font.prototype._handleAlignment = function (
                C,
                k,
                A,
                R,
                O,
              ) {
                var D = C._textSize;
                switch (
                  (O === void 0 && (O = this._textWidth(k, D)), C._textAlign)
                ) {
                  case r.CENTER:
                    A -= O / 2;
                    break;
                  case r.RIGHT:
                    A -= O;
                }
                switch (C._textBaseline) {
                  case r.TOP:
                    R += this._textAscent(D);
                    break;
                  case r.CENTER:
                    R += this._textAscent(D) / 2;
                    break;
                  case r.BOTTOM:
                    R -= this._textDescent(D);
                }
                return { x: A, y: R };
              }),
              (t = a.default),
              (y.default = t);
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 152,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.number.to-fixed': 171,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        306: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.array-buffer.constructor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.array-buffer.constructor'),
              t('core-js/modules/es.object.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.prototype.append = function (u, a) {
                return u.push(a), u;
              }),
              (t.default.prototype.arrayCopy = function (u, a, r, l, d) {
                var h, o;
                (u =
                  d !== void 0
                    ? ((o = Math.min(d, u.length)), (h = l), u.slice(a, o + a))
                    : ((o =
                        r !== void 0
                          ? ((o = r), Math.min(o, u.length))
                          : u.length),
                      (r = a),
                      u.slice((h = 0), o))),
                  Array.prototype.splice.apply(r, [h, o].concat(u));
              }),
              (t.default.prototype.concat = function (u, a) {
                return u.concat(a);
              }),
              (t.default.prototype.reverse = function (u) {
                return u.reverse();
              }),
              (t.default.prototype.shorten = function (u) {
                return u.pop(), u;
              }),
              (t.default.prototype.shuffle = function (u, a) {
                for (
                  var r,
                    l,
                    d =
                      ArrayBuffer &&
                      ArrayBuffer.isView &&
                      ArrayBuffer.isView(u),
                    h = (u = a || d ? u : u.slice()).length;
                  1 < h;

                )
                  (r = (this.random(0, 1) * h) | 0),
                    (l = u[--h]),
                    (u[h] = u[r]),
                    (u[r] = l);
                return u;
              }),
              (t.default.prototype.sort = function (u, l) {
                var r = l ? u.slice(0, Math.min(l, u.length)) : u,
                  l = l ? u.slice(Math.min(l, u.length)) : [];
                return (r =
                  typeof r[0] == 'string'
                    ? r.sort()
                    : r.sort(function (d, h) {
                        return d - h;
                      })).concat(l);
              }),
              (t.default.prototype.splice = function (u, a, r) {
                return Array.prototype.splice.apply(u, [r, 0].concat(a)), u;
              }),
              (t.default.prototype.subset = function (u, a, r) {
                return r !== void 0 ? u.slice(a, a + r) : u.slice(a, u.length);
              }),
              (t = t.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array-buffer.constructor': 148,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.object.to-string': 177,
          },
        ],
        307: [
          function (t, b, y) {
            t('core-js/modules/es.array.map'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.repeat'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.number.constructor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.repeat'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.prototype.float = function (a) {
              return a instanceof Array ? a.map(parseFloat) : parseFloat(a);
            }),
              (u.default.prototype.int = function (a) {
                var r =
                  1 < arguments.length && arguments[1] !== void 0
                    ? arguments[1]
                    : 10;
                return a === 1 / 0 || a === 'Infinity'
                  ? 1 / 0
                  : a === -1 / 0 || a === '-Infinity'
                  ? -1 / 0
                  : typeof a == 'string'
                  ? parseInt(a, r)
                  : typeof a == 'number'
                  ? 0 | a
                  : typeof a == 'boolean'
                  ? a
                    ? 1
                    : 0
                  : a instanceof Array
                  ? a.map(function (l) {
                      return u.default.prototype.int(l, r);
                    })
                  : void 0;
              }),
              (u.default.prototype.str = function (a) {
                return a instanceof Array
                  ? a.map(u.default.prototype.str)
                  : String(a);
              }),
              (u.default.prototype.boolean = function (a) {
                return typeof a == 'number'
                  ? a !== 0
                  : typeof a == 'string'
                  ? a.toLowerCase() === 'true'
                  : typeof a == 'boolean'
                  ? a
                  : a instanceof Array
                  ? a.map(u.default.prototype.boolean)
                  : void 0;
              }),
              (u.default.prototype.byte = function (a) {
                return (
                  (a = u.default.prototype.int(a, 10)),
                  typeof a == 'number'
                    ? ((a + 128) % 256) - 128
                    : a instanceof Array
                    ? a.map(u.default.prototype.byte)
                    : void 0
                );
              }),
              (u.default.prototype.char = function (a) {
                return typeof a != 'number' || isNaN(a)
                  ? a instanceof Array
                    ? a.map(u.default.prototype.char)
                    : typeof a == 'string'
                    ? u.default.prototype.char(parseInt(a, 10))
                    : void 0
                  : String.fromCharCode(a);
              }),
              (u.default.prototype.unchar = function (a) {
                return typeof a == 'string' && a.length === 1
                  ? a.charCodeAt(0)
                  : a instanceof Array
                  ? a.map(u.default.prototype.unchar)
                  : void 0;
              }),
              (u.default.prototype.hex = function (a, r) {
                if (((r = r == null ? 8 : r), a instanceof Array))
                  return a.map(function (d) {
                    return u.default.prototype.hex(d, r);
                  });
                if (a === 1 / 0 || a === -1 / 0)
                  return (a === 1 / 0 ? 'F' : '0').repeat(r);
                if (typeof a == 'number') {
                  a < 0 && (a = 4294967295 + a + 1);
                  for (
                    var l = Number(a).toString(16).toUpperCase();
                    l.length < r;

                  )
                    l = '0'.concat(l);
                  return (l =
                    l.length >= r ? l.substring(l.length - r, l.length) : l);
                }
              }),
              (u.default.prototype.unhex = function (a) {
                return a instanceof Array
                  ? a.map(u.default.prototype.unhex)
                  : parseInt('0x'.concat(a), 16);
              }),
              (t = u.default),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.number.constructor': 169,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.repeat': 188,
          },
        ],
        308: [
          function (t, b, y) {
            t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/es.array.filter'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.constructor'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.replace'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (h = t('../core/main')) && h.__esModule ? h : { default: h };
            function a(f, s, n) {
              var c = f < 0,
                f = c ? f.toString().substring(1) : f.toString(),
                g = f.indexOf('.'),
                _ = g !== -1 ? f.substring(0, g) : f,
                x = g !== -1 ? f.substring(g + 1) : '',
                j = c ? '-' : '';
              if (n !== void 0) {
                (c = ''),
                  (g !== -1 || 0 < n - x.length) && (c = '.'),
                  x.length > n && (x = x.substring(0, n));
                for (var v = 0; v < s - _.length; v++) j += '0';
                for (var j = (j += _) + c + x, M = 0; M < n - x.length; M++)
                  j += '0';
                return j;
              }
              for (var C = 0; C < Math.max(s - _.length, 0); C++) j += '0';
              return (j += f);
            }
            function r(f, s) {
              var n = (f = f.toString()).indexOf('.'),
                c = n !== -1 ? f.substring(n) : '',
                f = (f = n !== -1 ? f.substring(0, n) : f)
                  .toString()
                  .replace(/\B(?=(\d{3})+(?!\d))/g, ',');
              if (s === 0) c = '';
              else if (s !== void 0)
                if (s > c.length)
                  for (
                    var g = s - (c += n === -1 ? '.' : '').length + 1, _ = 0;
                    _ < g;
                    _++
                  )
                    c += '0';
                else c = c.substring(0, s + 1);
              return f + c;
            }
            function l(o) {
              return 0 < parseFloat(o)
                ? '+'.concat(o.toString())
                : o.toString();
            }
            function d(o) {
              return 0 <= parseFloat(o)
                ? ' '.concat(o.toString())
                : o.toString();
            }
            t('../core/friendly_errors/validate_params'),
              t('../core/friendly_errors/file_errors'),
              t('../core/friendly_errors/fes_core'),
              (u.default.prototype.join = function (o, s) {
                return (
                  u.default._validateParameters('join', arguments), o.join(s)
                );
              }),
              (u.default.prototype.match = function (o, s) {
                return (
                  u.default._validateParameters('match', arguments), o.match(s)
                );
              }),
              (u.default.prototype.matchAll = function (o, s) {
                u.default._validateParameters('matchAll', arguments);
                for (
                  var n = new RegExp(s, 'g'), c = n.exec(o), f = [];
                  c !== null;

                )
                  f.push(c), (c = n.exec(o));
                return f;
              }),
              (u.default.prototype.nf = function (o, s, n) {
                return (
                  u.default._validateParameters('nf', arguments),
                  o instanceof Array
                    ? o.map(function (c) {
                        return a(c, s, n);
                      })
                    : Object.prototype.toString.call(o) === '[object Arguments]'
                    ? o.length === 3
                      ? this.nf(o[0], o[1], o[2])
                      : o.length === 2
                      ? this.nf(o[0], o[1])
                      : this.nf(o[0])
                    : a(o, s, n)
                );
              }),
              (u.default.prototype.nfc = function (o, s) {
                return (
                  u.default._validateParameters('nfc', arguments),
                  o instanceof Array
                    ? o.map(function (n) {
                        return r(n, s);
                      })
                    : r(o, s)
                );
              }),
              (u.default.prototype.nfp = function () {
                for (
                  var o = arguments.length, s = new Array(o), n = 0;
                  n < o;
                  n++
                )
                  s[n] = arguments[n];
                u.default._validateParameters('nfp', s);
                var c = u.default.prototype.nf.apply(this, s);
                return c instanceof Array ? c.map(l) : l(c);
              }),
              (u.default.prototype.nfs = function () {
                for (
                  var o = arguments.length, s = new Array(o), n = 0;
                  n < o;
                  n++
                )
                  s[n] = arguments[n];
                u.default._validateParameters('nfs', s);
                var c = u.default.prototype.nf.apply(this, s);
                return c instanceof Array ? c.map(d) : d(c);
              }),
              (u.default.prototype.split = function (o, s) {
                return (
                  u.default._validateParameters('split', arguments), o.split(s)
                );
              }),
              (u.default.prototype.splitTokens = function (o, s) {
                var n, c;
                return (
                  u.default._validateParameters('splitTokens', arguments),
                  (c =
                    s !== void 0
                      ? ((c = /\]/g.exec((s = s))),
                        (n = /\[/g.exec(s)) && c
                          ? ((s = s.slice(0, c.index) + s.slice(c.index + 1)),
                            (n = /\[/g.exec(s)),
                            (s = s.slice(0, n.index) + s.slice(n.index + 1)),
                            new RegExp('[\\['.concat(s, '\\]]'), 'g'))
                          : c
                          ? ((s = s.slice(0, c.index) + s.slice(c.index + 1)),
                            new RegExp('['.concat(s, '\\]]'), 'g'))
                          : n
                          ? ((s = s.slice(0, n.index) + s.slice(n.index + 1)),
                            new RegExp('['.concat(s, '\\[]'), 'g'))
                          : new RegExp('['.concat(s, ']'), 'g'))
                      : /\s/g),
                  o.split(c).filter(function (f) {
                    return f;
                  })
                );
              }),
              (u.default.prototype.trim = function (o) {
                return (
                  u.default._validateParameters('trim', arguments),
                  o instanceof Array ? o.map(this.trim) : o.trim()
                );
              });
            var h = u.default;
            y.default = h;
          },
          {
            '../core/friendly_errors/fes_core': 258,
            '../core/friendly_errors/file_errors': 259,
            '../core/friendly_errors/validate_params': 262,
            '../core/main': 267,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.constructor': 180,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.replace': 189,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
          },
        ],
        309: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.prototype.day = function () {
                return new Date().getDate();
              }),
              (t.default.prototype.hour = function () {
                return new Date().getHours();
              }),
              (t.default.prototype.minute = function () {
                return new Date().getMinutes();
              }),
              (t.default.prototype.millis = function () {
                return this._millisStart === -1
                  ? 0
                  : window.performance.now() - this._millisStart;
              }),
              (t.default.prototype.month = function () {
                return new Date().getMonth() + 1;
              }),
              (t.default.prototype.second = function () {
                return new Date().getSeconds();
              }),
              (t.default.prototype.year = function () {
                return new Date().getFullYear();
              }),
              (t = t.default),
              (y.default = t);
          },
          { '../core/main': 267 },
        ],
        310: [
          function (t, b, y) {
            function u(s) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (n) {
                      return typeof n;
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : typeof n;
                    })(s);
            }
            function a(s) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (n) {
                      return u(n);
                    }
                  : function (n) {
                      return n &&
                        typeof Symbol == 'function' &&
                        n.constructor === Symbol &&
                        n !== Symbol.prototype
                        ? 'symbol'
                        : u(n);
                    })(s);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.math.hypot'),
              t('core-js/modules/es.number.to-fixed'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.math.hypot'),
              t('core-js/modules/es.number.to-fixed'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (o = t('../core/main')) && o.__esModule ? o : { default: o },
              l =
                (t('./p5.Geometry'),
                (function (s) {
                  if (s && s.__esModule) return s;
                  if (
                    s === null ||
                    (a(s) !== 'object' && typeof s != 'function')
                  )
                    return { default: s };
                  var n = d();
                  if (n && n.has(s)) return n.get(s);
                  var c,
                    f = {},
                    g =
                      Object.defineProperty && Object.getOwnPropertyDescriptor;
                  for (c in s) {
                    var _;
                    Object.prototype.hasOwnProperty.call(s, c) &&
                      ((_ = g ? Object.getOwnPropertyDescriptor(s, c) : null) &&
                      (_.get || _.set)
                        ? Object.defineProperty(f, c, _)
                        : (f[c] = s[c]));
                  }
                  return (f.default = s), n && n.set(s, f), f;
                })(t('../core/constants')));
            function d() {
              var s;
              return typeof WeakMap != 'function'
                ? null
                : ((s = new WeakMap()),
                  (d = function () {
                    return s;
                  }),
                  s);
            }
            (r.default.prototype.plane = function (s, n, c, f) {
              this._assert3d('plane'),
                r.default._validateParameters('plane', arguments),
                s === void 0 && (s = 50),
                n === void 0 && (n = s),
                f === void 0 && (f = 1);
              var g,
                _ = 'plane|'.concat((c = c === void 0 ? 1 : c), '|').concat(f);
              return (
                this._renderer.geometryInHash(_) ||
                  ((g = new r.default.Geometry(c, f, function () {
                    for (var x, j, v = 0; v <= this.detailY; v++)
                      for (
                        var M = v / this.detailY, C = 0;
                        C <= this.detailX;
                        C++
                      )
                        (x = C / this.detailX),
                          (j = new r.default.Vector(x - 0.5, M - 0.5, 0)),
                          this.vertices.push(j),
                          this.uvs.push(x, M);
                  }))
                    .computeFaces()
                    .computeNormals(),
                  c <= 1 && f <= 1
                    ? g._makeTriangleEdges()._edgesToVertices()
                    : this._renderer._doStroke &&
                      console.log(
                        'Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY',
                      ),
                  this._renderer.createBuffers(_, g)),
                this._renderer.drawBuffersScaled(_, s, n, 1),
                this
              );
            }),
              (r.default.prototype.box = function (s, n, c, f, g) {
                this._assert3d('box'),
                  r.default._validateParameters('box', arguments),
                  s === void 0 && (s = 50),
                  n === void 0 && (n = s),
                  c === void 0 && (c = n);
                var _,
                  x =
                    this._renderer.attributes &&
                    this._renderer.attributes.perPixelLighting,
                  x =
                    (g === void 0 && (g = x ? 1 : 4),
                    'box|'
                      .concat((f = f === void 0 ? (x ? 1 : 4) : f), '|')
                      .concat(g));
                return (
                  this._renderer.geometryInHash(x) ||
                    ((_ = new r.default.Geometry(f, g, function () {
                      var j = [
                        [0, 4, 2, 6],
                        [1, 3, 5, 7],
                        [0, 1, 4, 5],
                        [2, 6, 3, 7],
                        [0, 2, 1, 3],
                        [4, 5, 6, 7],
                      ];
                      this.strokeIndices = [
                        [0, 1],
                        [1, 3],
                        [3, 2],
                        [6, 7],
                        [8, 9],
                        [9, 11],
                        [14, 15],
                        [16, 17],
                        [17, 19],
                        [18, 19],
                        [20, 21],
                        [22, 23],
                      ];
                      for (var v = 0; v < j.length; v++) {
                        for (var M = j[v], C = 4 * v, k = 0; k < 4; k++) {
                          var A = M[k],
                            A = new r.default.Vector(
                              (2 * (1 & A) - 1) / 2,
                              ((2 & A) - 1) / 2,
                              ((4 & A) / 2 - 1) / 2,
                            );
                          this.vertices.push(A),
                            this.uvs.push(1 & k, (2 & k) / 2);
                        }
                        this.faces.push([C, 1 + C, 2 + C]),
                          this.faces.push([2 + C, 1 + C, 3 + C]);
                      }
                    })).computeNormals(),
                    f <= 4 && g <= 4
                      ? _._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw stroke on box objects with more than 4 detailX or 4 detailY',
                        ),
                    this._renderer.createBuffers(x, _)),
                  this._renderer.drawBuffersScaled(x, s, n, c),
                  this
                );
              }),
              (r.default.prototype.sphere = function (s, n, c) {
                return (
                  this._assert3d('sphere'),
                  r.default._validateParameters('sphere', arguments),
                  this.ellipsoid(
                    (s = s === void 0 ? 50 : s),
                    s,
                    s,
                    (n = n === void 0 ? 24 : n),
                    (c = c === void 0 ? 16 : c),
                  ),
                  this
                );
              });
            function h(s, n, c, f, g, _, x) {
              (s = s <= 0 ? 1 : s),
                (n = n < 0 ? 0 : n),
                (c = c <= 0 ? s : c),
                (f = f < 3 ? 3 : f);
              for (
                var j,
                  v,
                  M = (_ = _ === void 0 || _) ? -2 : 0,
                  C =
                    (g = g < 1 ? 1 : g) +
                    ((x = x === void 0 ? n !== 0 : x) ? 2 : 0),
                  k = Math.atan2(s - n, c),
                  A = Math.sin(k),
                  R = Math.cos(k),
                  O = M;
                O <= C;
                ++O
              ) {
                var D = O / g,
                  N = c * D,
                  U = void 0,
                  U =
                    O < 0
                      ? ((D = N = 0), s)
                      : g < O
                      ? ((N = c), (D = 1), n)
                      : s + (n - s) * D;
                for (
                  (O !== -2 && O !== g + 2) || (U = 0), N -= c / 2, j = 0;
                  j < f;
                  ++j
                ) {
                  var H = j / (f - 1),
                    z = 2 * Math.PI * H,
                    q = Math.sin(z),
                    z = Math.cos(z),
                    X =
                      (this.vertices.push(
                        new r.default.Vector(q * U, N, z * U),
                      ),
                      void 0),
                    X =
                      O < 0
                        ? new r.default.Vector(0, -1, 0)
                        : g < O && n
                        ? new r.default.Vector(0, 1, 0)
                        : new r.default.Vector(q * R, A, z * R);
                  this.vertexNormals.push(X), this.uvs.push(H, D);
                }
              }
              var W = 0;
              if (_) {
                for (v = 0; v < f; ++v)
                  this.faces.push([W + v, W + f + ((v + 1) % f), W + f + v]);
                W += 2 * f;
              }
              for (O = 0; O < g; ++O) {
                for (j = 0; j < f; ++j) {
                  var Z = (j + 1) % f;
                  this.faces.push([W + j, W + Z, W + f + Z]),
                    this.faces.push([W + j, W + f + Z, W + f + j]);
                }
                W += f;
              }
              if (x)
                for (W += f, j = 0; j < f; ++j)
                  this.faces.push([W + j, W + ((j + 1) % f), W + f]);
            }
            (r.default.prototype.cylinder = function (s, n, c, f, g, _) {
              this._assert3d('cylinder'),
                r.default._validateParameters('cylinder', arguments),
                s === void 0 && (s = 50),
                n === void 0 && (n = s),
                f === void 0 && (f = 1),
                _ === void 0 && (_ = !0),
                g === void 0 && (g = !0);
              var x,
                j = 'cylinder|'
                  .concat((c = c === void 0 ? 24 : c), '|')
                  .concat(f, '|')
                  .concat(g, '|')
                  .concat(_);
              return (
                this._renderer.geometryInHash(j) ||
                  ((x = new r.default.Geometry(c, f)),
                  h.call(x, 1, 1, 1, c, f, g, _),
                  c <= 24 && f <= 16
                    ? x._makeTriangleEdges()._edgesToVertices()
                    : this._renderer._doStroke &&
                      console.log(
                        'Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY',
                      ),
                  this._renderer.createBuffers(j, x)),
                this._renderer.drawBuffersScaled(j, s, n, s),
                this
              );
            }),
              (r.default.prototype.cone = function (s, n, c, f, g) {
                this._assert3d('cone'),
                  r.default._validateParameters('cone', arguments),
                  s === void 0 && (s = 50),
                  n === void 0 && (n = s),
                  f === void 0 && (f = 1),
                  g === void 0 && (g = !0);
                var _,
                  x = 'cone|'
                    .concat((c = c === void 0 ? 24 : c), '|')
                    .concat(f, '|')
                    .concat(g);
                return (
                  this._renderer.geometryInHash(x) ||
                    ((_ = new r.default.Geometry(c, f)),
                    h.call(_, 1, 0, 1, c, f, g, !1),
                    c <= 24 && f <= 16
                      ? _._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY',
                        ),
                    this._renderer.createBuffers(x, _)),
                  this._renderer.drawBuffersScaled(x, s, n, s),
                  this
                );
              }),
              (r.default.prototype.ellipsoid = function (s, n, c, f, g) {
                this._assert3d('ellipsoid'),
                  r.default._validateParameters('ellipsoid', arguments),
                  s === void 0 && (s = 50),
                  n === void 0 && (n = s),
                  c === void 0 && (c = s),
                  g === void 0 && (g = 16);
                var _,
                  x = 'ellipsoid|'
                    .concat((f = f === void 0 ? 24 : f), '|')
                    .concat(g);
                return (
                  this._renderer.geometryInHash(x) ||
                    ((_ = new r.default.Geometry(f, g, function () {
                      for (var j = 0; j <= this.detailY; j++)
                        for (
                          var v = j / this.detailY,
                            M = Math.PI * v - Math.PI / 2,
                            C = Math.cos(M),
                            k = Math.sin(M),
                            A = 0;
                          A <= this.detailX;
                          A++
                        ) {
                          var R = A / this.detailX,
                            D = 2 * Math.PI * R,
                            O = Math.cos(D),
                            D = Math.sin(D),
                            D = new r.default.Vector(C * D, k, C * O);
                          this.vertices.push(D),
                            this.vertexNormals.push(D),
                            this.uvs.push(R, v);
                        }
                    })).computeFaces(),
                    f <= 24 && g <= 24
                      ? _._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY',
                        ),
                    this._renderer.createBuffers(x, _)),
                  this._renderer.drawBuffersScaled(x, s, n, c),
                  this
                );
              }),
              (r.default.prototype.torus = function (s, x, c, f) {
                if (
                  (this._assert3d('torus'),
                  r.default._validateParameters('torus', arguments),
                  s === void 0)
                )
                  s = 50;
                else if (!s) return;
                if (x === void 0) x = 10;
                else if (!x) return;
                c === void 0 && (c = 24), f === void 0 && (f = 16);
                var g,
                  _ = (x / s).toPrecision(4),
                  x = 'torus|'.concat(_, '|').concat(c, '|').concat(f);
                return (
                  this._renderer.geometryInHash(x) ||
                    ((g = new r.default.Geometry(c, f, function () {
                      for (var j = 0; j <= this.detailY; j++)
                        for (
                          var v = j / this.detailY,
                            M = 2 * Math.PI * v,
                            C = Math.cos(M),
                            k = Math.sin(M),
                            A = 1 + _ * C,
                            R = 0;
                          R <= this.detailX;
                          R++
                        ) {
                          var O = R / this.detailX,
                            D = 2 * Math.PI * O,
                            U = Math.cos(D),
                            D = Math.sin(D),
                            N = new r.default.Vector(A * U, A * D, _ * k),
                            U = new r.default.Vector(C * U, C * D, k);
                          this.vertices.push(N),
                            this.vertexNormals.push(U),
                            this.uvs.push(O, v);
                        }
                    })).computeFaces(),
                    c <= 24 && f <= 16
                      ? g._makeTriangleEdges()._edgesToVertices()
                      : this._renderer._doStroke &&
                        console.log(
                          'Cannot draw strokes on torus object with more than 24 detailX or 16 detailY',
                        ),
                    this._renderer.createBuffers(x, g)),
                  this._renderer.drawBuffersScaled(x, s, s, s),
                  this
                );
              }),
              (r.default.RendererGL.prototype.point = function (s, n, c) {
                var f = [];
                return (
                  f.push(
                    new r.default.Vector(s, n, (c = c === void 0 ? 0 : c)),
                  ),
                  this._drawPoints(f, this.immediateMode.buffers.point),
                  this
                );
              }),
              (r.default.RendererGL.prototype.triangle = function (x) {
                var n = x[0],
                  c = x[1],
                  f = x[2],
                  g = x[3],
                  _ = x[4],
                  x = x[5],
                  j =
                    (this.geometryInHash('tri') ||
                      ((j = new r.default.Geometry(1, 1, function () {
                        var M = [];
                        M.push(new r.default.Vector(0, 0, 0)),
                          M.push(new r.default.Vector(1, 0, 0)),
                          M.push(new r.default.Vector(0, 1, 0)),
                          (this.strokeIndices = [
                            [0, 1],
                            [1, 2],
                            [2, 0],
                          ]),
                          (this.vertices = M),
                          (this.faces = [[0, 1, 2]]),
                          (this.uvs = [0, 0, 1, 0, 1, 1]);
                      }))
                        ._makeTriangleEdges()
                        ._edgesToVertices(),
                      j.computeNormals(),
                      this.createBuffers('tri', j)),
                    this.uMVMatrix.copy());
                try {
                  var v = new r.default.Matrix([
                    f - n,
                    g - c,
                    0,
                    0,
                    _ - n,
                    x - c,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    n,
                    c,
                    0,
                    1,
                  ]).mult(this.uMVMatrix);
                  (this.uMVMatrix = v), this.drawBuffers('tri');
                } finally {
                  this.uMVMatrix = j;
                }
                return this;
              }),
              (r.default.RendererGL.prototype.ellipse = function (s) {
                this.arc(s[0], s[1], s[2], s[3], 0, l.TWO_PI, l.OPEN, s[4]);
              }),
              (r.default.RendererGL.prototype.arc = function (s) {
                var n,
                  c = arguments[1],
                  f = arguments[2],
                  g = arguments[3],
                  _ = arguments[4],
                  x = arguments[5],
                  j = arguments[6],
                  v = arguments[7] || 25,
                  M = (
                    Math.abs(x - _) >= l.TWO_PI
                      ? ''.concat((C = 'ellipse'), '|')
                      : ''
                          .concat((C = 'arc'), '|')
                          .concat(_, '|')
                          .concat(x, '|')
                          .concat(j, '|')
                  ).concat(v, '|'),
                  C =
                    (this.geometryInHash(M) ||
                      ((n = new r.default.Geometry(v, 1, function () {
                        if (
                          ((this.strokeIndices = []),
                          _.toFixed(10) !== x.toFixed(10))
                        ) {
                          (j !== l.PIE && j !== void 0) ||
                            (this.vertices.push(
                              new r.default.Vector(0.5, 0.5, 0),
                            ),
                            this.uvs.push([0.5, 0.5]));
                          for (var k = 0; k <= v; k++) {
                            var R = (x - _) * (k / v) + _,
                              A = 0.5 + Math.cos(R) / 2,
                              R = 0.5 + Math.sin(R) / 2;
                            this.vertices.push(new r.default.Vector(A, R, 0)),
                              this.uvs.push([A, R]),
                              k < v - 1 &&
                                (this.faces.push([0, k + 1, k + 2]),
                                this.strokeIndices.push([k + 1, k + 2]));
                          }
                          switch (j) {
                            case l.PIE:
                              this.faces.push([
                                0,
                                this.vertices.length - 2,
                                this.vertices.length - 1,
                              ]),
                                this.strokeIndices.push([0, 1]),
                                this.strokeIndices.push([
                                  this.vertices.length - 2,
                                  this.vertices.length - 1,
                                ]),
                                this.strokeIndices.push([
                                  0,
                                  this.vertices.length - 1,
                                ]);
                              break;
                            case l.CHORD:
                              this.strokeIndices.push([0, 1]),
                                this.strokeIndices.push([
                                  0,
                                  this.vertices.length - 1,
                                ]);
                              break;
                            case l.OPEN:
                              this.strokeIndices.push([0, 1]);
                              break;
                            default:
                              this.faces.push([
                                0,
                                this.vertices.length - 2,
                                this.vertices.length - 1,
                              ]),
                                this.strokeIndices.push([
                                  this.vertices.length - 2,
                                  this.vertices.length - 1,
                                ]);
                          }
                        }
                      })).computeNormals(),
                      v <= 50
                        ? n._makeTriangleEdges()._edgesToVertices(n)
                        : this._doStroke &&
                          console.log(
                            'Cannot apply a stroke to an '.concat(
                              C,
                              ' with more than 50 detail',
                            ),
                          ),
                      this.createBuffers(M, n)),
                    this.uMVMatrix.copy());
                try {
                  this.uMVMatrix.translate([s, c, 0]),
                    this.uMVMatrix.scale(f, g, 1),
                    this.drawBuffers(M);
                } finally {
                  this.uMVMatrix = C;
                }
                return this;
              }),
              (r.default.RendererGL.prototype.rect = function (s) {
                var n = s[0],
                  c = s[1],
                  f = s[2],
                  g = s[3];
                if (s[4] === void 0) {
                  var j = this._pInst._glAttributes.perPixelLighting,
                    _ = s[4] || (j ? 1 : 24),
                    x = s[5] || (j ? 1 : 16),
                    j = 'rect|'.concat(_, '|').concat(x),
                    v =
                      (this.geometryInHash(j) ||
                        ((v = new r.default.Geometry(_, x, function () {
                          for (var X = 0; X <= this.detailY; X++)
                            for (
                              var W = X / this.detailY, Z = 0;
                              Z <= this.detailX;
                              Z++
                            ) {
                              var $ = Z / this.detailX,
                                ae = new r.default.Vector($, W, 0);
                              this.vertices.push(ae), this.uvs.push($, W);
                            }
                          0 < _ &&
                            0 < x &&
                            (this.strokeIndices = [
                              [0, _],
                              [_, (_ + 1) * (x + 1) - 1],
                              [(_ + 1) * (x + 1) - 1, (_ + 1) * x],
                              [(_ + 1) * x, 0],
                            ]);
                        }))
                          .computeFaces()
                          .computeNormals()
                          ._makeTriangleEdges()
                          ._edgesToVertices(),
                        this.createBuffers(j, v)),
                      this.uMVMatrix.copy());
                  try {
                    this.uMVMatrix.translate([n, c, 0]),
                      this.uMVMatrix.scale(f, g, 1),
                      this.drawBuffers(j);
                  } finally {
                    this.uMVMatrix = v;
                  }
                } else {
                  var j = s[4],
                    v = s[5] === void 0 ? j : s[5],
                    M = s[6] === void 0 ? v : s[6],
                    s = s[7] === void 0 ? M : s[7],
                    D = f,
                    C = g,
                    R =
                      ((D += n) < n && ((R = n), (n = D), (D = R)),
                      (C += c) < c && ((R = c), (c = C), (C = R)),
                      Math.min((D - n) / 2, (C - c) / 2)),
                    k =
                      (R < j && (j = R),
                      R < v && (v = R),
                      R < M && (M = R),
                      R < s && (s = R),
                      n),
                    A = c,
                    R = D,
                    n = C,
                    O =
                      (this.beginShape(),
                      v !== 0
                        ? (this.vertex(R - v, A),
                          this.quadraticVertex(R, A, R, A + v))
                        : this.vertex(R, A),
                      M !== 0
                        ? (this.vertex(R, n - M),
                          this.quadraticVertex(R, n, R - M, n))
                        : this.vertex(R, n),
                      s !== 0
                        ? (this.vertex(k + s, n),
                          this.quadraticVertex(k, n, k, n - s))
                        : this.vertex(k, n),
                      j !== 0
                        ? (this.vertex(k, A + j),
                          this.quadraticVertex(k, A, k + j, A))
                        : this.vertex(k, A),
                      !(this.immediateMode.geometry.uvs.length = 0)),
                    c = !1,
                    D = void 0;
                  try {
                    for (
                      var N,
                        U =
                          this.immediateMode.geometry.vertices[
                            Symbol.iterator
                          ]();
                      !(O = (N = U.next()).done);
                      O = !0
                    ) {
                      var H = N.value,
                        q = (H.x - k) / f,
                        z = (H.y - A) / g;
                      this.immediateMode.geometry.uvs.push(q, z);
                    }
                  } catch (P) {
                    (c = !0), (D = P);
                  } finally {
                    try {
                      O || U.return == null || U.return();
                    } finally {
                      if (c) throw D;
                    }
                  }
                  this.endShape(l.CLOSE);
                }
                return this;
              }),
              (r.default.RendererGL.prototype.quad = function (
                s,
                n,
                c,
                f,
                g,
                _,
                x,
                j,
                v,
                M,
                C,
                k,
                A,
                R,
              ) {
                A === void 0 && (A = 2), R === void 0 && (R = 2);
                var O = 'quad|'
                  .concat(s, '|')
                  .concat(n, '|')
                  .concat(c, '|')
                  .concat(f, '|')
                  .concat(g, '|')
                  .concat(_, '|')
                  .concat(x, '|')
                  .concat(j, '|')
                  .concat(v, '|')
                  .concat(M, '|')
                  .concat(C, '|')
                  .concat(k, '|')
                  .concat(A, '|')
                  .concat(R);
                if (!this.geometryInHash(O)) {
                  var D = new r.default.Geometry(A, R, function () {
                    for (
                      var X = 1 / (this.detailX - 1),
                        W = 1 / (this.detailY - 1),
                        Z = 0;
                      Z < this.detailY;
                      Z++
                    )
                      for (var $ = 0; $ < this.detailX; $++) {
                        var ae = $ * X,
                          P = Z * W;
                        this.vertices.push(
                          new r.default.Vector(
                            (1 - ae) * ((1 - P) * s + P * M) +
                              ae * ((1 - P) * f + P * x),
                            (1 - ae) * ((1 - P) * n + P * C) +
                              ae * ((1 - P) * g + P * j),
                            (1 - ae) * ((1 - P) * c + P * k) +
                              ae * ((1 - P) * _ + P * v),
                          ),
                        ),
                          this.uvs.push([ae, P]);
                      }
                  });
                  D.faces = [];
                  for (var N = 0; N < R - 1; N++)
                    for (var U = 0; U < A - 1; U++) {
                      var H = U + N * A,
                        q = U + 1 + (N + 1) * A,
                        z = U + (N + 1) * A;
                      D.faces.push([H, U + 1 + N * A, q]),
                        D.faces.push([H, q, z]);
                    }
                  D.computeNormals()._makeTriangleEdges()._edgesToVertices(),
                    this.createBuffers(O, D);
                }
                return this.drawBuffers(O), this;
              }),
              (r.default.RendererGL.prototype.bezier = function (
                s,
                n,
                c,
                f,
                g,
                _,
                x,
                j,
                v,
                M,
                C,
                k,
              ) {
                arguments.length === 8 &&
                  ((C = j),
                  (M = x),
                  (j = _),
                  (x = g),
                  (g = f),
                  (f = c),
                  (c = _ = v = k = 0));
                var A = this._pInst._bezierDetail || 20;
                this.beginShape();
                for (var R = 0; R <= A; R++) {
                  var O = Math.pow(1 - R / A, 3),
                    D = (R / A) * 3 * Math.pow(1 - R / A, 2),
                    N = 3 * Math.pow(R / A, 2) * (1 - R / A),
                    U = Math.pow(R / A, 3);
                  this.vertex(
                    s * O + f * D + x * N + M * U,
                    n * O + g * D + j * N + C * U,
                    c * O + _ * D + v * N + k * U,
                  );
                }
                return this.endShape(), this;
              }),
              (r.default.RendererGL.prototype.curve = function (
                s,
                n,
                c,
                f,
                g,
                _,
                x,
                j,
                v,
                M,
                C,
                k,
              ) {
                arguments.length === 8 &&
                  ((M = x),
                  (C = j),
                  (x = g),
                  (j = f),
                  (g = f = c),
                  (c = _ = v = k = 0));
                var A = this._pInst._curveDetail;
                this.beginShape();
                for (var R = 0; R <= A; R++) {
                  var O = 0.5 * Math.pow(R / A, 3),
                    D = 0.5 * Math.pow(R / A, 2),
                    N = (R / A) * 0.5;
                  this.vertex(
                    O * (3 * f - s - 3 * x + M) +
                      D * (2 * s - 5 * f + 4 * x - M) +
                      N * (-s + x) +
                      2 * f * 0.5,
                    O * (3 * g - n - 3 * j + C) +
                      D * (2 * n - 5 * g + 4 * j - C) +
                      N * (-n + j) +
                      2 * g * 0.5,
                    O * (3 * _ - c - 3 * v + k) +
                      D * (2 * c - 5 * _ + 4 * v - k) +
                      N * (-c + v) +
                      2 * _ * 0.5,
                  );
                }
                return this.endShape(), this;
              }),
              (r.default.RendererGL.prototype.line = function () {
                return (
                  arguments.length === 6
                    ? (this.beginShape(l.LINES),
                      this.vertex(
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        arguments.length <= 2 ? void 0 : arguments[2],
                      ),
                      this.vertex(
                        arguments.length <= 3 ? void 0 : arguments[3],
                        arguments.length <= 4 ? void 0 : arguments[4],
                        arguments.length <= 5 ? void 0 : arguments[5],
                      ),
                      this.endShape())
                    : arguments.length === 4 &&
                      (this.beginShape(l.LINES),
                      this.vertex(
                        arguments.length <= 0 ? void 0 : arguments[0],
                        arguments.length <= 1 ? void 0 : arguments[1],
                        0,
                      ),
                      this.vertex(
                        arguments.length <= 2 ? void 0 : arguments[2],
                        arguments.length <= 3 ? void 0 : arguments[3],
                        0,
                      ),
                      this.endShape()),
                  this
                );
              }),
              (r.default.RendererGL.prototype.bezierVertex = function () {
                if (this.immediateMode._bezierVertex.length === 0)
                  throw Error(
                    'vertex() must be used once before calling bezierVertex()',
                  );
                var s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x = [],
                  j = [],
                  v = arguments.length;
                if (
                  this._lookUpTableBezier.length === 0 ||
                  this._lutBezierDetail !== this._pInst._curveDetail
                ) {
                  (this._lookUpTableBezier = []),
                    (this._lutBezierDetail = this._pInst._curveDetail);
                  for (
                    var M = 1 / this._lutBezierDetail, C = 0, k = 1, A = 0;
                    C < 1;

                  ) {
                    if (
                      ((_ = parseFloat(C.toFixed(6))),
                      (this._lookUpTableBezier[A] =
                        this._bezierCoefficients(_)),
                      k.toFixed(6) === M.toFixed(6))
                    ) {
                      (_ = parseFloat(k.toFixed(6)) + parseFloat(C.toFixed(6))),
                        ++A,
                        (this._lookUpTableBezier[A] =
                          this._bezierCoefficients(_));
                      break;
                    }
                    (C += M), (k -= M), ++A;
                  }
                }
                for (
                  var R = this._lookUpTableBezier.length, O = [], D = 0;
                  D < 4;
                  D++
                )
                  O.push([]);
                (O[0] = this.immediateMode.geometry.vertexColors.slice(-4)),
                  (O[3] = this.curFillColor.slice());
                var N = [];
                for (D = 0; D < 4; D++) N.push([]);
                if (
                  ((N[0] =
                    this.immediateMode.geometry.vertexStrokeColors.slice(-4)),
                  (N[3] = this.curStrokeColor.slice()),
                  v === 6)
                ) {
                  this.isBezier = !0;
                  var x = [
                      this.immediateMode._bezierVertex[0],
                      arguments.length <= 0 ? void 0 : arguments[0],
                      arguments.length <= 2 ? void 0 : arguments[2],
                      arguments.length <= 4 ? void 0 : arguments[4],
                    ],
                    j = [
                      this.immediateMode._bezierVertex[1],
                      arguments.length <= 1 ? void 0 : arguments[1],
                      arguments.length <= 3 ? void 0 : arguments[3],
                      arguments.length <= 5 ? void 0 : arguments[5],
                    ],
                    U = Math.hypot(x[0] - x[1], j[0] - j[1]),
                    q = Math.hypot(x[1] - x[2], j[1] - j[2]),
                    H = Math.hypot(x[2] - x[3], j[2] - j[3]),
                    q = U + q + H;
                  for (U /= q, H /= q, g = 0; g < 4; g++)
                    O[1].push(O[0][g] * (1 - U) + O[3][g] * U),
                      O[2].push(O[0][g] * H + O[3][g] * (1 - H)),
                      N[1].push(N[0][g] * (1 - U) + N[3][g] * U),
                      N[2].push(N[0][g] * H + N[3][g] * (1 - H));
                  for (f = 0; f < R; f++) {
                    for (
                      this.curFillColor = [0, 0, 0, 0],
                        this.curStrokeColor = [0, 0, 0, 0],
                        D = s = n = 0;
                      D < 4;
                      D++
                    ) {
                      for (g = 0; g < 4; g++)
                        (this.curFillColor[g] +=
                          this._lookUpTableBezier[f][D] * O[D][g]),
                          (this.curStrokeColor[g] +=
                            this._lookUpTableBezier[f][D] * N[D][g]);
                      (s += x[D] * this._lookUpTableBezier[f][D]),
                        (n += j[D] * this._lookUpTableBezier[f][D]);
                    }
                    this.vertex(s, n);
                  }
                  (this.curFillColor = O[3]),
                    (this.curStrokeColor = N[3]),
                    (this.immediateMode._bezierVertex[0] =
                      arguments.length <= 4 ? void 0 : arguments[4]),
                    (this.immediateMode._bezierVertex[1] =
                      arguments.length <= 5 ? void 0 : arguments[5]);
                } else if (v === 9) {
                  (this.isBezier = !0),
                    (x = [
                      this.immediateMode._bezierVertex[0],
                      arguments.length <= 0 ? void 0 : arguments[0],
                      arguments.length <= 3 ? void 0 : arguments[3],
                      arguments.length <= 6 ? void 0 : arguments[6],
                    ]),
                    (j = [
                      this.immediateMode._bezierVertex[1],
                      arguments.length <= 1 ? void 0 : arguments[1],
                      arguments.length <= 4 ? void 0 : arguments[4],
                      arguments.length <= 7 ? void 0 : arguments[7],
                    ]);
                  var z = [
                      this.immediateMode._bezierVertex[2],
                      arguments.length <= 2 ? void 0 : arguments[2],
                      arguments.length <= 5 ? void 0 : arguments[5],
                      arguments.length <= 8 ? void 0 : arguments[8],
                    ],
                    X = Math.hypot(x[0] - x[1], j[0] - j[1], z[0] - z[1]),
                    q = Math.hypot(x[1] - x[2], j[1] - j[2], z[1] - z[2]),
                    W = Math.hypot(x[2] - x[3], j[2] - j[3], z[2] - z[3]),
                    v = X + q + W;
                  for (X /= v, W /= v, g = 0; g < 4; g++)
                    O[1].push(O[0][g] * (1 - X) + O[3][g] * X),
                      O[2].push(O[0][g] * W + O[3][g] * (1 - W)),
                      N[1].push(N[0][g] * (1 - X) + N[3][g] * X),
                      N[2].push(N[0][g] * W + N[3][g] * (1 - W));
                  for (f = 0; f < R; f++) {
                    for (
                      this.curFillColor = [0, 0, 0, 0],
                        this.curStrokeColor = [0, 0, 0, 0],
                        D = s = n = c = 0;
                      D < 4;
                      D++
                    ) {
                      for (g = 0; g < 4; g++)
                        (this.curFillColor[g] +=
                          this._lookUpTableBezier[f][D] * O[D][g]),
                          (this.curStrokeColor[g] +=
                            this._lookUpTableBezier[f][D] * N[D][g]);
                      (s += x[D] * this._lookUpTableBezier[f][D]),
                        (n += j[D] * this._lookUpTableBezier[f][D]),
                        (c += z[D] * this._lookUpTableBezier[f][D]);
                    }
                    this.vertex(s, n, c);
                  }
                  (this.curFillColor = O[3]),
                    (this.curStrokeColor = N[3]),
                    (this.immediateMode._bezierVertex[0] =
                      arguments.length <= 6 ? void 0 : arguments[6]),
                    (this.immediateMode._bezierVertex[1] =
                      arguments.length <= 7 ? void 0 : arguments[7]),
                    (this.immediateMode._bezierVertex[2] =
                      arguments.length <= 8 ? void 0 : arguments[8]);
                }
              }),
              (r.default.RendererGL.prototype.quadraticVertex = function () {
                if (this.immediateMode._quadraticVertex.length === 0)
                  throw Error(
                    'vertex() must be used once before calling quadraticVertex()',
                  );
                var s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x = [],
                  j = [],
                  v = arguments.length;
                if (
                  this._lookUpTableQuadratic.length === 0 ||
                  this._lutQuadraticDetail !== this._pInst._curveDetail
                ) {
                  (this._lookUpTableQuadratic = []),
                    (this._lutQuadraticDetail = this._pInst._curveDetail);
                  for (
                    var M = 1 / this._lutQuadraticDetail, C = 0, k = 1, A = 0;
                    C < 1;

                  ) {
                    if (
                      ((_ = parseFloat(C.toFixed(6))),
                      (this._lookUpTableQuadratic[A] =
                        this._quadraticCoefficients(_)),
                      k.toFixed(6) === M.toFixed(6))
                    ) {
                      (_ = parseFloat(k.toFixed(6)) + parseFloat(C.toFixed(6))),
                        ++A,
                        (this._lookUpTableQuadratic[A] =
                          this._quadraticCoefficients(_));
                      break;
                    }
                    (C += M), (k -= M), ++A;
                  }
                }
                for (
                  var R = this._lookUpTableQuadratic.length, O = [], D = 0;
                  D < 3;
                  D++
                )
                  O.push([]);
                (O[0] = this.immediateMode.geometry.vertexColors.slice(-4)),
                  (O[2] = this.curFillColor.slice());
                var N = [];
                for (D = 0; D < 3; D++) N.push([]);
                if (
                  ((N[0] =
                    this.immediateMode.geometry.vertexStrokeColors.slice(-4)),
                  (N[2] = this.curStrokeColor.slice()),
                  v === 4)
                ) {
                  this.isQuadratic = !0;
                  var x = [
                      this.immediateMode._quadraticVertex[0],
                      arguments.length <= 0 ? void 0 : arguments[0],
                      arguments.length <= 2 ? void 0 : arguments[2],
                    ],
                    j = [
                      this.immediateMode._quadraticVertex[1],
                      arguments.length <= 1 ? void 0 : arguments[1],
                      arguments.length <= 3 ? void 0 : arguments[3],
                    ],
                    U = Math.hypot(x[0] - x[1], j[0] - j[1]);
                  for (
                    U /= U + Math.hypot(x[1] - x[2], j[1] - j[2]), g = 0;
                    g < 4;
                    g++
                  )
                    O[1].push(O[0][g] * (1 - U) + O[2][g] * U),
                      N[1].push(N[0][g] * (1 - U) + N[2][g] * U);
                  for (f = 0; f < R; f++) {
                    for (
                      this.curFillColor = [0, 0, 0, 0],
                        this.curStrokeColor = [0, 0, 0, 0],
                        D = s = n = 0;
                      D < 3;
                      D++
                    ) {
                      for (g = 0; g < 4; g++)
                        (this.curFillColor[g] +=
                          this._lookUpTableQuadratic[f][D] * O[D][g]),
                          (this.curStrokeColor[g] +=
                            this._lookUpTableQuadratic[f][D] * N[D][g]);
                      (s += x[D] * this._lookUpTableQuadratic[f][D]),
                        (n += j[D] * this._lookUpTableQuadratic[f][D]);
                    }
                    this.vertex(s, n);
                  }
                  (this.curFillColor = O[2]),
                    (this.curStrokeColor = N[2]),
                    (this.immediateMode._quadraticVertex[0] =
                      arguments.length <= 2 ? void 0 : arguments[2]),
                    (this.immediateMode._quadraticVertex[1] =
                      arguments.length <= 3 ? void 0 : arguments[3]);
                } else if (v === 6) {
                  (this.isQuadratic = !0),
                    (x = [
                      this.immediateMode._quadraticVertex[0],
                      arguments.length <= 0 ? void 0 : arguments[0],
                      arguments.length <= 3 ? void 0 : arguments[3],
                    ]),
                    (j = [
                      this.immediateMode._quadraticVertex[1],
                      arguments.length <= 1 ? void 0 : arguments[1],
                      arguments.length <= 4 ? void 0 : arguments[4],
                    ]);
                  var H = [
                      this.immediateMode._quadraticVertex[2],
                      arguments.length <= 2 ? void 0 : arguments[2],
                      arguments.length <= 5 ? void 0 : arguments[5],
                    ],
                    q = Math.hypot(x[0] - x[1], j[0] - j[1], H[0] - H[1]);
                  for (
                    q /= q + Math.hypot(x[1] - x[2], j[1] - j[2], H[1] - H[2]),
                      g = 0;
                    g < 4;
                    g++
                  )
                    O[1].push(O[0][g] * (1 - q) + O[2][g] * q),
                      N[1].push(N[0][g] * (1 - q) + N[2][g] * q);
                  for (f = 0; f < R; f++) {
                    for (
                      this.curFillColor = [0, 0, 0, 0],
                        this.curStrokeColor = [0, 0, 0, 0],
                        D = s = n = c = 0;
                      D < 3;
                      D++
                    ) {
                      for (g = 0; g < 4; g++)
                        (this.curFillColor[g] +=
                          this._lookUpTableQuadratic[f][D] * O[D][g]),
                          (this.curStrokeColor[g] +=
                            this._lookUpTableQuadratic[f][D] * N[D][g]);
                      (s += x[D] * this._lookUpTableQuadratic[f][D]),
                        (n += j[D] * this._lookUpTableQuadratic[f][D]),
                        (c += H[D] * this._lookUpTableQuadratic[f][D]);
                    }
                    this.vertex(s, n, c);
                  }
                  (this.curFillColor = O[2]),
                    (this.curStrokeColor = N[2]),
                    (this.immediateMode._quadraticVertex[0] =
                      arguments.length <= 3 ? void 0 : arguments[3]),
                    (this.immediateMode._quadraticVertex[1] =
                      arguments.length <= 4 ? void 0 : arguments[4]),
                    (this.immediateMode._quadraticVertex[2] =
                      arguments.length <= 5 ? void 0 : arguments[5]);
                }
              }),
              (r.default.RendererGL.prototype.curveVertex = function () {
                var s,
                  n,
                  c,
                  f,
                  g,
                  _,
                  x = [],
                  j = [],
                  v = arguments.length;
                if (
                  this._lookUpTableBezier.length === 0 ||
                  this._lutBezierDetail !== this._pInst._curveDetail
                ) {
                  (this._lookUpTableBezier = []),
                    (this._lutBezierDetail = this._pInst._curveDetail);
                  for (
                    var M = 1 / this._lutBezierDetail, C = 0, k = 1, A = 0;
                    C < 1;

                  ) {
                    if (
                      ((_ = parseFloat(C.toFixed(6))),
                      (this._lookUpTableBezier[A] =
                        this._bezierCoefficients(_)),
                      k.toFixed(6) === M.toFixed(6))
                    ) {
                      (_ = parseFloat(k.toFixed(6)) + parseFloat(C.toFixed(6))),
                        ++A,
                        (this._lookUpTableBezier[A] =
                          this._bezierCoefficients(_));
                      break;
                    }
                    (C += M), (k -= M), ++A;
                  }
                }
                var R = this._lookUpTableBezier.length;
                if (v === 2) {
                  if (
                    (this.immediateMode._curveVertex.push(
                      arguments.length <= 0 ? void 0 : arguments[0],
                    ),
                    this.immediateMode._curveVertex.push(
                      arguments.length <= 1 ? void 0 : arguments[1],
                    ),
                    this.immediateMode._curveVertex.length === 8)
                  ) {
                    for (
                      this.isCurve = !0,
                        x = this._bezierToCatmull([
                          this.immediateMode._curveVertex[0],
                          this.immediateMode._curveVertex[2],
                          this.immediateMode._curveVertex[4],
                          this.immediateMode._curveVertex[6],
                        ]),
                        j = this._bezierToCatmull([
                          this.immediateMode._curveVertex[1],
                          this.immediateMode._curveVertex[3],
                          this.immediateMode._curveVertex[5],
                          this.immediateMode._curveVertex[7],
                        ]),
                        g = 0;
                      g < R;
                      g++
                    )
                      (n =
                        x[0] * this._lookUpTableBezier[g][0] +
                        x[1] * this._lookUpTableBezier[g][1] +
                        x[2] * this._lookUpTableBezier[g][2] +
                        x[3] * this._lookUpTableBezier[g][3]),
                        (c =
                          j[0] * this._lookUpTableBezier[g][0] +
                          j[1] * this._lookUpTableBezier[g][1] +
                          j[2] * this._lookUpTableBezier[g][2] +
                          j[3] * this._lookUpTableBezier[g][3]),
                        this.vertex(n, c);
                    for (g = 0; g < v; g++)
                      this.immediateMode._curveVertex.shift();
                  }
                } else if (
                  v === 3 &&
                  (this.immediateMode._curveVertex.push(
                    arguments.length <= 0 ? void 0 : arguments[0],
                  ),
                  this.immediateMode._curveVertex.push(
                    arguments.length <= 1 ? void 0 : arguments[1],
                  ),
                  this.immediateMode._curveVertex.push(
                    arguments.length <= 2 ? void 0 : arguments[2],
                  ),
                  this.immediateMode._curveVertex.length === 12)
                ) {
                  for (
                    this.isCurve = !0,
                      x = this._bezierToCatmull([
                        this.immediateMode._curveVertex[0],
                        this.immediateMode._curveVertex[3],
                        this.immediateMode._curveVertex[6],
                        this.immediateMode._curveVertex[9],
                      ]),
                      j = this._bezierToCatmull([
                        this.immediateMode._curveVertex[1],
                        this.immediateMode._curveVertex[4],
                        this.immediateMode._curveVertex[7],
                        this.immediateMode._curveVertex[10],
                      ]),
                      s = this._bezierToCatmull([
                        this.immediateMode._curveVertex[2],
                        this.immediateMode._curveVertex[5],
                        this.immediateMode._curveVertex[8],
                        this.immediateMode._curveVertex[11],
                      ]),
                      g = 0;
                    g < R;
                    g++
                  )
                    (n =
                      x[0] * this._lookUpTableBezier[g][0] +
                      x[1] * this._lookUpTableBezier[g][1] +
                      x[2] * this._lookUpTableBezier[g][2] +
                      x[3] * this._lookUpTableBezier[g][3]),
                      (c =
                        j[0] * this._lookUpTableBezier[g][0] +
                        j[1] * this._lookUpTableBezier[g][1] +
                        j[2] * this._lookUpTableBezier[g][2] +
                        j[3] * this._lookUpTableBezier[g][3]),
                      (f =
                        s[0] * this._lookUpTableBezier[g][0] +
                        s[1] * this._lookUpTableBezier[g][1] +
                        s[2] * this._lookUpTableBezier[g][2] +
                        s[3] * this._lookUpTableBezier[g][3]),
                      this.vertex(n, c, f);
                  for (g = 0; g < v; g++)
                    this.immediateMode._curveVertex.shift();
                }
              }),
              (r.default.RendererGL.prototype.image = function (
                s,
                k,
                c,
                A,
                g,
                _,
                x,
                j,
                v,
              ) {
                this._isErasing && this.blendMode(this._cachedBlendMode),
                  this._pInst.push(),
                  this._pInst.noLights(),
                  this._pInst.noStroke(),
                  this._pInst.texture(s),
                  this._pInst.textureMode(l.NORMAL);
                var M = 0,
                  C = (k <= s.width && (M = k / s.width), 1),
                  k = (k + A <= s.width && (C = (k + A) / s.width), 0),
                  A = (c <= s.height && (k = c / s.height), 1);
                c + g <= s.height && (A = (c + g) / s.height),
                  this.beginShape(),
                  this.vertex(_, x, 0, M, k),
                  this.vertex(_ + j, x, 0, C, k),
                  this.vertex(_ + j, x + v, 0, C, A),
                  this.vertex(_, x + v, 0, M, A),
                  this.endShape(l.CLOSE),
                  this._pInst.pop(),
                  this._isErasing && this.blendMode(l.REMOVE);
              });
            var o = r.default;
            y.default = o;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            './p5.Geometry': 316,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.math.hypot': 167,
            'core-js/modules/es.number.to-fixed': 171,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        311: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (h = t('../core/main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../core/constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            (r.default.prototype.orbitControl = function (o, s, n) {
              var c, f;
              if (
                (this._assert3d('orbitControl'),
                r.default._validateParameters('orbitControl', arguments),
                this.mouseX < this.width &&
                  0 < this.mouseX &&
                  this.mouseY < this.height &&
                  0 < this.mouseY)
              )
                return (
                  (c = this._renderer._curCamera),
                  o === void 0 && (o = 1),
                  s === void 0 && (s = o),
                  n === void 0 && (n = 0.5),
                  this.contextMenuDisabled !== !0 &&
                    ((this.canvas.oncontextmenu = function () {
                      return !1;
                    }),
                    this._setProperty('contextMenuDisabled', !0)),
                  this.wheelDefaultDisabled !== !0 &&
                    ((this.canvas.onwheel = function () {
                      return !1;
                    }),
                    this._setProperty('wheelDefaultDisabled', !0)),
                  (f = this.height < this.width ? this.height : this.width),
                  this._mouseWheelDeltaY !== this._pmouseWheelDeltaY &&
                    (0 < this._mouseWheelDeltaY
                      ? this._renderer._curCamera._orbit(0, 0, n * f)
                      : this._renderer._curCamera._orbit(0, 0, -n * f)),
                  this.mouseIsPressed &&
                    (this.mouseButton === this.LEFT
                      ? ((n = (-o * (this.mouseX - this.pmouseX)) / f),
                        (f = (s * (this.mouseY - this.pmouseY)) / f),
                        this._renderer._curCamera._orbit(n, f, 0))
                      : this.mouseButton === this.RIGHT &&
                        ((n = c._getLocalAxes()),
                        (f = Math.sqrt(n.x[0] * n.x[0] + n.x[2] * n.x[2])) !==
                          0 && ((n.x[0] /= f), (n.x[2] /= f)),
                        (f = Math.sqrt(n.y[0] * n.y[0] + n.y[2] * n.y[2])) !==
                          0 && ((n.y[0] /= f), (n.y[2] /= f)),
                        (f = -1 * o * (this.mouseX - this.pmouseX)),
                        (o = -1 * s * (this.mouseY - this.pmouseY)),
                        c.setPosition(
                          c.eyeX + f * n.x[0] + o * n.z[0],
                          c.eyeY,
                          c.eyeZ + f * n.x[2] + o * n.z[2],
                        ))),
                  this
                );
            }),
              (r.default.prototype.debugMode = function () {
                this._assert3d('debugMode');
                for (
                  var o = arguments.length, s = new Array(o), n = 0;
                  n < o;
                  n++
                )
                  s[n] = arguments[n];
                r.default._validateParameters('debugMode', s);
                for (
                  var c = this._registeredMethods.post.length - 1;
                  0 <= c;
                  c--
                )
                  (this._registeredMethods.post[c].toString() !==
                    this._grid().toString() &&
                    this._registeredMethods.post[c].toString() !==
                      this._axesIcon().toString()) ||
                    this._registeredMethods.post.splice(c, 1);
                s[0] === l.GRID
                  ? this.registerMethod(
                      'post',
                      this._grid.call(this, s[1], s[2], s[3], s[4], s[5]),
                    )
                  : s[0] === l.AXES
                  ? this.registerMethod(
                      'post',
                      this._axesIcon.call(this, s[1], s[2], s[3], s[4]),
                    )
                  : (this.registerMethod(
                      'post',
                      this._grid.call(this, s[0], s[1], s[2], s[3], s[4]),
                    ),
                    this.registerMethod(
                      'post',
                      this._axesIcon.call(this, s[5], s[6], s[7], s[8]),
                    ));
              }),
              (r.default.prototype.noDebugMode = function () {
                this._assert3d('noDebugMode');
                for (
                  var o = this._registeredMethods.post.length - 1;
                  0 <= o;
                  o--
                )
                  (this._registeredMethods.post[o].toString() !==
                    this._grid().toString() &&
                    this._registeredMethods.post[o].toString() !==
                      this._axesIcon().toString()) ||
                    this._registeredMethods.post.splice(o, 1);
              }),
              (r.default.prototype._grid = function (o, s, n, c, f) {
                o === void 0 && (o = this.width / 2),
                  s === void 0 &&
                    (s = Math.round(o / 30) < 4 ? 4 : Math.round(o / 30)),
                  n === void 0 && (n = 0),
                  c === void 0 && (c = 0),
                  f === void 0 && (f = 0);
                var g = o / s,
                  _ = o / 2;
                return function () {
                  this.push(),
                    this.stroke(
                      255 * this._renderer.curStrokeColor[0],
                      255 * this._renderer.curStrokeColor[1],
                      255 * this._renderer.curStrokeColor[2],
                    ),
                    this._renderer.uMVMatrix.set(
                      this._renderer._curCamera.cameraMatrix.mat4[0],
                      this._renderer._curCamera.cameraMatrix.mat4[1],
                      this._renderer._curCamera.cameraMatrix.mat4[2],
                      this._renderer._curCamera.cameraMatrix.mat4[3],
                      this._renderer._curCamera.cameraMatrix.mat4[4],
                      this._renderer._curCamera.cameraMatrix.mat4[5],
                      this._renderer._curCamera.cameraMatrix.mat4[6],
                      this._renderer._curCamera.cameraMatrix.mat4[7],
                      this._renderer._curCamera.cameraMatrix.mat4[8],
                      this._renderer._curCamera.cameraMatrix.mat4[9],
                      this._renderer._curCamera.cameraMatrix.mat4[10],
                      this._renderer._curCamera.cameraMatrix.mat4[11],
                      this._renderer._curCamera.cameraMatrix.mat4[12],
                      this._renderer._curCamera.cameraMatrix.mat4[13],
                      this._renderer._curCamera.cameraMatrix.mat4[14],
                      this._renderer._curCamera.cameraMatrix.mat4[15],
                    );
                  for (var x = 0; x <= s; x++)
                    this.beginShape(this.LINES),
                      this.vertex(-_ + n, c, x * g - _ + f),
                      this.vertex(_ + n, c, x * g - _ + f),
                      this.endShape();
                  for (var j = 0; j <= s; j++)
                    this.beginShape(this.LINES),
                      this.vertex(j * g - _ + n, c, -_ + f),
                      this.vertex(j * g - _ + n, c, _ + f),
                      this.endShape();
                  this.pop();
                };
              }),
              (r.default.prototype._axesIcon = function (o, s, n, c) {
                return (
                  o === void 0 &&
                    (o = 40 < this.width / 20 ? this.width / 20 : 40),
                  s === void 0 && (s = -this.width / 4),
                  n === void 0 && (n = s),
                  c === void 0 && (c = s),
                  function () {
                    this.push(),
                      this._renderer.uMVMatrix.set(
                        this._renderer._curCamera.cameraMatrix.mat4[0],
                        this._renderer._curCamera.cameraMatrix.mat4[1],
                        this._renderer._curCamera.cameraMatrix.mat4[2],
                        this._renderer._curCamera.cameraMatrix.mat4[3],
                        this._renderer._curCamera.cameraMatrix.mat4[4],
                        this._renderer._curCamera.cameraMatrix.mat4[5],
                        this._renderer._curCamera.cameraMatrix.mat4[6],
                        this._renderer._curCamera.cameraMatrix.mat4[7],
                        this._renderer._curCamera.cameraMatrix.mat4[8],
                        this._renderer._curCamera.cameraMatrix.mat4[9],
                        this._renderer._curCamera.cameraMatrix.mat4[10],
                        this._renderer._curCamera.cameraMatrix.mat4[11],
                        this._renderer._curCamera.cameraMatrix.mat4[12],
                        this._renderer._curCamera.cameraMatrix.mat4[13],
                        this._renderer._curCamera.cameraMatrix.mat4[14],
                        this._renderer._curCamera.cameraMatrix.mat4[15],
                      ),
                      this.strokeWeight(2),
                      this.stroke(255, 0, 0),
                      this.beginShape(this.LINES),
                      this.vertex(s, n, c),
                      this.vertex(s + o, n, c),
                      this.endShape(),
                      this.stroke(0, 255, 0),
                      this.beginShape(this.LINES),
                      this.vertex(s, n, c),
                      this.vertex(s, n + o, c),
                      this.endShape(),
                      this.stroke(0, 0, 255),
                      this.beginShape(this.LINES),
                      this.vertex(s, n, c),
                      this.vertex(s, n, c + o),
                      this.endShape(),
                      this.pop();
                  }
                );
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        312: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (h = t('../core/main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../core/constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            (r.default.prototype.ambientLight = function (o, s, n, c) {
              this._assert3d('ambientLight'),
                r.default._validateParameters('ambientLight', arguments);
              var f = this.color.apply(this, arguments);
              return (
                this._renderer.ambientLightColors.push(
                  f._array[0],
                  f._array[1],
                  f._array[2],
                ),
                (this._renderer._enableLighting = !0),
                this
              );
            }),
              (r.default.prototype.specularColor = function (o, s, n) {
                this._assert3d('specularColor'),
                  r.default._validateParameters('specularColor', arguments);
                var c = this.color.apply(this, arguments);
                return (
                  (this._renderer.specularColors = [
                    c._array[0],
                    c._array[1],
                    c._array[2],
                  ]),
                  this
                );
              }),
              (r.default.prototype.directionalLight = function (
                o,
                v,
                j,
                c,
                f,
                g,
              ) {
                this._assert3d('directionalLight'),
                  r.default._validateParameters('directionalLight', arguments),
                  (o = o instanceof r.default.Color ? o : this.color(o, v, j));
                var _,
                  x,
                  v = arguments[arguments.length - 1],
                  j =
                    typeof v == 'number'
                      ? ((_ = arguments[arguments.length - 3]),
                        (x = arguments[arguments.length - 2]),
                        arguments[arguments.length - 1])
                      : ((_ = v.x), (x = v.y), v.z),
                  v = Math.sqrt(_ * _ + x * x + j * j);
                return (
                  this._renderer.directionalLightDirections.push(
                    _ / v,
                    x / v,
                    j / v,
                  ),
                  this._renderer.directionalLightDiffuseColors.push(
                    o._array[0],
                    o._array[1],
                    o._array[2],
                  ),
                  Array.prototype.push.apply(
                    this._renderer.directionalLightSpecularColors,
                    this._renderer.specularColors,
                  ),
                  (this._renderer._enableLighting = !0),
                  this
                );
              }),
              (r.default.prototype.pointLight = function (o, j, v, c, f, g) {
                this._assert3d('pointLight'),
                  r.default._validateParameters('pointLight', arguments),
                  (o = o instanceof r.default.Color ? o : this.color(o, j, v));
                var _,
                  x,
                  j = arguments[arguments.length - 1],
                  v =
                    typeof j == 'number'
                      ? ((_ = arguments[arguments.length - 3]),
                        (x = arguments[arguments.length - 2]),
                        arguments[arguments.length - 1])
                      : ((_ = j.x), (x = j.y), j.z);
                return (
                  this._renderer.pointLightPositions.push(_, x, v),
                  this._renderer.pointLightDiffuseColors.push(
                    o._array[0],
                    o._array[1],
                    o._array[2],
                  ),
                  Array.prototype.push.apply(
                    this._renderer.pointLightSpecularColors,
                    this._renderer.specularColors,
                  ),
                  (this._renderer._enableLighting = !0),
                  this
                );
              }),
              (r.default.prototype.lights = function () {
                var o;
                return (
                  this._assert3d('lights'),
                  this._colorMode === l.RGB
                    ? (this.ambientLight(128, 128, 128),
                      this.directionalLight(128, 128, 128, 0, 0, -1))
                    : ((o = this._colorMaxes[this._colorMode][2]),
                      this.ambientLight(0, 0, o),
                      this.directionalLight(0, 0, o, 0, 0, -1)),
                  this
                );
              }),
              (r.default.prototype.lightFalloff = function (o, s, n) {
                return (
                  this._assert3d('lightFalloff'),
                  r.default._validateParameters('lightFalloff', arguments),
                  o < 0 &&
                    ((o = 0),
                    console.warn(
                      'Value of constant argument in lightFalloff() should be never be negative. Set to 0.',
                    )),
                  s < 0 &&
                    ((s = 0),
                    console.warn(
                      'Value of linear argument in lightFalloff() should be never be negative. Set to 0.',
                    )),
                  n < 0 &&
                    ((n = 0),
                    console.warn(
                      'Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.',
                    )),
                  o === 0 &&
                    s === 0 &&
                    n === 0 &&
                    ((o = 1),
                    console.warn(
                      'Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.',
                    )),
                  (this._renderer.constantAttenuation = o),
                  (this._renderer.linearAttenuation = s),
                  (this._renderer.quadraticAttenuation = n),
                  this
                );
              }),
              (r.default.prototype.spotLight = function (
                o,
                s,
                n,
                c,
                f,
                g,
                _,
                x,
                j,
                v,
                M,
              ) {
                this._assert3d('spotLight'),
                  r.default._validateParameters('spotLight', arguments);
                var C,
                  k,
                  A,
                  R = arguments.length;
                switch (R) {
                  case 11:
                  case 10:
                    (C = this.color(o, s, n)),
                      (k = new r.default.Vector(c, f, g)),
                      (A = new r.default.Vector(_, x, j));
                    break;
                  case 9:
                    o instanceof r.default.Color
                      ? ((C = o),
                        (k = new r.default.Vector(s, n, c)),
                        (A = new r.default.Vector(f, g, _)),
                        (v = x),
                        (M = j))
                      : c instanceof r.default.Vector
                      ? ((C = this.color(o, s, n)),
                        (k = c),
                        (A = new r.default.Vector(f, g, _)),
                        (v = x),
                        (M = j))
                      : _ instanceof r.default.Vector
                      ? ((C = this.color(o, s, n)),
                        (k = new r.default.Vector(c, f, g)),
                        (A = _),
                        (v = x),
                        (M = j))
                      : ((C = this.color(o, s, n)),
                        (k = new r.default.Vector(c, f, g)),
                        (A = new r.default.Vector(_, x, j)));
                    break;
                  case 8:
                    v =
                      ((A =
                        o instanceof r.default.Color
                          ? ((C = o),
                            (k = new r.default.Vector(s, n, c)),
                            new r.default.Vector(f, g, _))
                          : c instanceof r.default.Vector
                          ? ((C = this.color(o, s, n)),
                            (k = c),
                            new r.default.Vector(f, g, _))
                          : ((C = this.color(o, s, n)),
                            (k = new r.default.Vector(c, f, g)),
                            _)),
                      x);
                    break;
                  case 7:
                    o instanceof r.default.Color &&
                    s instanceof r.default.Vector
                      ? ((C = o),
                        (k = s),
                        (A = new r.default.Vector(n, c, f)),
                        (v = g),
                        (M = _))
                      : o instanceof r.default.Color &&
                        f instanceof r.default.Vector
                      ? ((C = o),
                        (k = new r.default.Vector(s, n, c)),
                        (A = f),
                        (v = g),
                        (M = _))
                      : c instanceof r.default.Vector &&
                        f instanceof r.default.Vector
                      ? ((C = this.color(o, s, n)),
                        (k = c),
                        (A = f),
                        (v = g),
                        (M = _))
                      : (A =
                          o instanceof r.default.Color
                            ? ((C = o),
                              (k = new r.default.Vector(s, n, c)),
                              new r.default.Vector(f, g, _))
                            : c instanceof r.default.Vector
                            ? ((C = this.color(o, s, n)),
                              (k = c),
                              new r.default.Vector(f, g, _))
                            : ((C = this.color(o, s, n)),
                              (k = new r.default.Vector(c, f, g)),
                              _));
                    break;
                  case 6:
                    c instanceof r.default.Vector &&
                    f instanceof r.default.Vector
                      ? ((C = this.color(o, s, n)), (k = c), (A = f), (v = g))
                      : o instanceof r.default.Color &&
                        f instanceof r.default.Vector
                      ? ((C = o),
                        (k = new r.default.Vector(s, n, c)),
                        (A = f),
                        (v = g))
                      : o instanceof r.default.Color &&
                        s instanceof r.default.Vector &&
                        ((C = o),
                        (k = s),
                        (A = new r.default.Vector(n, c, f)),
                        (v = g));
                    break;
                  case 5:
                    o instanceof r.default.Color &&
                    s instanceof r.default.Vector &&
                    n instanceof r.default.Vector
                      ? ((C = o), (k = s), (A = n), (v = c), (M = f))
                      : c instanceof r.default.Vector &&
                        f instanceof r.default.Vector
                      ? ((C = this.color(o, s, n)), (k = c), (A = f))
                      : o instanceof r.default.Color &&
                        f instanceof r.default.Vector
                      ? ((C = o), (k = new r.default.Vector(s, n, c)), (A = f))
                      : o instanceof r.default.Color &&
                        s instanceof r.default.Vector &&
                        ((C = o), (k = s), (A = new r.default.Vector(n, c, f)));
                    break;
                  case 4:
                    (C = o), (k = s), (A = n), (v = c);
                    break;
                  case 3:
                    (C = o), (k = s), (A = n);
                    break;
                  default:
                    return (
                      console.warn(
                        'Sorry, input for spotlight() is not in prescribed format. Too '.concat(
                          R < 3 ? 'few' : 'many',
                          ' arguments were provided',
                        ),
                      ),
                      this
                    );
                }
                return (
                  this._renderer.spotLightDiffuseColors.push(
                    C._array[0],
                    C._array[1],
                    C._array[2],
                  ),
                  Array.prototype.push.apply(
                    this._renderer.spotLightSpecularColors,
                    this._renderer.specularColors,
                  ),
                  this._renderer.spotLightPositions.push(k.x, k.y, k.z),
                  A.normalize(),
                  this._renderer.spotLightDirections.push(A.x, A.y, A.z),
                  v === void 0 && (v = Math.PI / 3),
                  M !== void 0 && M < 1
                    ? ((M = 1),
                      console.warn(
                        'Value of concentration needs to be greater than 1. Setting it to 1',
                      ))
                    : M === void 0 && (M = 100),
                  (v = this._renderer._pInst._toRadians(v)),
                  this._renderer.spotLightAngle.push(Math.cos(v)),
                  this._renderer.spotLightConc.push(M),
                  (this._renderer._enableLighting = !0),
                  this
                );
              }),
              (r.default.prototype.noLights = function () {
                return (
                  this._assert3d('noLights'),
                  r.default._validateParameters('noLights', arguments),
                  (this._renderer._enableLighting = !1),
                  (this._renderer.ambientLightColors.length = 0),
                  (this._renderer.specularColors = [1, 1, 1]),
                  (this._renderer.directionalLightDirections.length = 0),
                  (this._renderer.directionalLightDiffuseColors.length = 0),
                  (this._renderer.directionalLightSpecularColors.length = 0),
                  (this._renderer.pointLightPositions.length = 0),
                  (this._renderer.pointLightDiffuseColors.length = 0),
                  (this._renderer.pointLightSpecularColors.length = 0),
                  (this._renderer.spotLightPositions.length = 0),
                  (this._renderer.spotLightDirections.length = 0),
                  (this._renderer.spotLightDiffuseColors.length = 0),
                  (this._renderer.spotLightSpecularColors.length = 0),
                  (this._renderer.spotLightAngle.length = 0),
                  (this._renderer.spotLightConc.length = 0),
                  (this._renderer.constantAttenuation = 1),
                  (this._renderer.linearAttenuation = 0),
                  (this._renderer.quadraticAttenuation = 0),
                  (this._renderer._useShininess = 1),
                  this
                );
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        313: [
          function (t, b, y) {
            t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.array.splice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.match'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.trim'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (a = t('../core/main')) && a.__esModule ? a : { default: a };
            t('./p5.Geometry'),
              (u.default.prototype.loadModel = function (r) {
                u.default._validateParameters('loadModel', arguments);
                var l,
                  d,
                  h,
                  o = r.slice(-4),
                  s =
                    (typeof arguments[1] == 'boolean'
                      ? ((l = arguments[1]),
                        (d = arguments[2]),
                        (h = arguments[3]),
                        arguments[4] !== void 0 && (o = arguments[4]))
                      : ((l = !1),
                        (d = arguments[1]),
                        (h = arguments[2]),
                        arguments[3] !== void 0 && (o = arguments[3])),
                    new u.default.Geometry()),
                  n = ((s.gid = ''.concat(r, '|').concat(l)), this);
                return (
                  o.match(/\.stl$/i)
                    ? this.httpDo(
                        r,
                        'GET',
                        'arrayBuffer',
                        function (c) {
                          (function (f, g) {
                            if (
                              (function (_) {
                                for (
                                  var x = new DataView(_),
                                    j = [115, 111, 108, 105, 100],
                                    v = 0;
                                  v < 5;
                                  v++
                                )
                                  if (
                                    (function (M, C, k) {
                                      for (var A = 0, R = M.length; A < R; A++)
                                        if (M[A] !== C.getUint8(k + A, !1))
                                          return;
                                      return 1;
                                    })(j, x, v)
                                  )
                                    return;
                                return 1;
                              })(g)
                            )
                              (function (_, x) {
                                for (
                                  var j,
                                    v,
                                    M,
                                    C,
                                    k,
                                    A,
                                    R,
                                    O = new DataView(x),
                                    D = O.getUint32(80, !0),
                                    N = !1,
                                    U = 0;
                                  U < 70;
                                  U++
                                )
                                  O.getUint32(U, !1) === 1129270351 &&
                                    O.getUint8(U + 4) === 82 &&
                                    O.getUint8(U + 5) === 61 &&
                                    ((N = !0),
                                    (C = []),
                                    (k = O.getUint8(U + 6) / 255),
                                    (A = O.getUint8(U + 7) / 255),
                                    (R = O.getUint8(U + 8) / 255));
                                for (var H = 0; H < D; H++) {
                                  for (
                                    var q,
                                      z = 84 + 50 * H,
                                      X = O.getFloat32(z, !0),
                                      W = O.getFloat32(4 + z, !0),
                                      Z = O.getFloat32(8 + z, !0),
                                      $ =
                                        (N &&
                                          ((q = O.getUint16(48 + z, !0)),
                                          (M =
                                            (32768 & q) == 0
                                              ? ((j = (31 & q) / 31),
                                                (v = ((q >> 5) & 31) / 31),
                                                ((q >> 10) & 31) / 31)
                                              : ((j = k), (v = A), R))),
                                        new u.default.Vector(X, W, Z)),
                                      ae = 1;
                                    ae <= 3;
                                    ae++
                                  ) {
                                    var P = z + 12 * ae,
                                      P = new u.default.Vector(
                                        O.getFloat32(P, !0),
                                        O.getFloat32(4 + P, !0),
                                        O.getFloat32(8 + P, !0),
                                      );
                                    _.vertices.push(P),
                                      _.vertexNormals.push($),
                                      N && C.push(j, v, M);
                                  }
                                  _.faces.push([3 * H, 3 * H + 1, 3 * H + 2]),
                                    _.uvs.push([0, 0], [0, 0], [0, 0]);
                                }
                              })(f, g);
                            else {
                              if (
                                ((g = new DataView(g)),
                                !('TextDecoder' in window))
                              )
                                return console.warn(
                                  'Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)',
                                );
                              (g = new TextDecoder('utf-8').decode(g).split(`
`)),
                                (function (_, x) {
                                  for (
                                    var j, v, M = '', C = [], k = 0;
                                    k < x.length;
                                    ++k
                                  ) {
                                    for (
                                      var A = x[k].trim(),
                                        R = A.split(' '),
                                        O = 0;
                                      O < R.length;
                                      ++O
                                    )
                                      R[O] === '' && R.splice(O, 1);
                                    if (R.length !== 0)
                                      switch (M) {
                                        case '':
                                          if (R[0] !== 'solid')
                                            return (
                                              console.error(A),
                                              console.error(
                                                'Invalid state "'.concat(
                                                  R[0],
                                                  '", should be "solid"',
                                                ),
                                              )
                                            );
                                          M = 'solid';
                                          break;
                                        case 'solid':
                                          if (
                                            R[0] !== 'facet' ||
                                            R[1] !== 'normal'
                                          )
                                            return (
                                              console.error(A),
                                              console.error(
                                                'Invalid state "'.concat(
                                                  R[0],
                                                  '", should be "facet normal"',
                                                ),
                                              )
                                            );
                                          (j = new u.default.Vector(
                                            parseFloat(R[2]),
                                            parseFloat(R[3]),
                                            parseFloat(R[4]),
                                          )),
                                            _.vertexNormals.push(j, j, j),
                                            (M = 'facet normal');
                                          break;
                                        case 'facet normal':
                                          if (
                                            R[0] !== 'outer' ||
                                            R[1] !== 'loop'
                                          )
                                            return (
                                              console.error(A),
                                              console.error(
                                                'Invalid state "'.concat(
                                                  R[0],
                                                  '", should be "outer loop"',
                                                ),
                                              )
                                            );
                                          M = 'vertex';
                                          break;
                                        case 'vertex':
                                          if (R[0] === 'vertex')
                                            (v = new u.default.Vector(
                                              parseFloat(R[1]),
                                              parseFloat(R[2]),
                                              parseFloat(R[3]),
                                            )),
                                              _.vertices.push(v),
                                              _.uvs.push([0, 0]),
                                              C.push(_.vertices.indexOf(v));
                                          else {
                                            if (R[0] !== 'endloop')
                                              return (
                                                console.error(A),
                                                console.error(
                                                  'Invalid state "'.concat(
                                                    R[0],
                                                    '", should be "vertex" or "endloop"',
                                                  ),
                                                )
                                              );
                                            _.faces.push(C),
                                              (C = []),
                                              (M = 'endloop');
                                          }
                                          break;
                                        case 'endloop':
                                          if (R[0] !== 'endfacet')
                                            return (
                                              console.error(A),
                                              console.error(
                                                'Invalid state "'.concat(
                                                  R[0],
                                                  '", should be "endfacet"',
                                                ),
                                              )
                                            );
                                          M = 'endfacet';
                                          break;
                                        case 'endfacet':
                                          if (R[0] !== 'endsolid') {
                                            if (
                                              R[0] !== 'facet' ||
                                              R[1] !== 'normal'
                                            )
                                              return (
                                                console.error(A),
                                                console.error(
                                                  'Invalid state "'.concat(
                                                    R[0],
                                                    '", should be "endsolid" or "facet normal"',
                                                  ),
                                                )
                                              );
                                            (j = new u.default.Vector(
                                              parseFloat(R[2]),
                                              parseFloat(R[3]),
                                              parseFloat(R[4]),
                                            )),
                                              _.vertexNormals.push(j, j, j),
                                              (M = 'facet normal');
                                          }
                                          break;
                                        default:
                                          console.error(
                                            'Invalid state "'.concat(M, '"'),
                                          );
                                      }
                                  }
                                })(f, g);
                            }
                          })(s, c),
                            l && s.normalize(),
                            n._decrementPreload(),
                            typeof d == 'function' && d(s);
                        },
                        h,
                      )
                    : o.match(/\.obj$/i)
                    ? this.loadStrings(
                        r,
                        function (c) {
                          for (
                            var f = s,
                              g = c,
                              _ = { v: [], vt: [], vn: [] },
                              x = {},
                              j = 0;
                            j < g.length;
                            ++j
                          ) {
                            var v = g[j].trim().split(/\b\s+/);
                            if (0 < v.length) {
                              if (v[0] === 'v' || v[0] === 'vn') {
                                var M = new u.default.Vector(
                                  parseFloat(v[1]),
                                  parseFloat(v[2]),
                                  parseFloat(v[3]),
                                );
                                _[v[0]].push(M);
                              } else if (v[0] === 'vt')
                                (M = [parseFloat(v[1]), 1 - parseFloat(v[2])]),
                                  _[v[0]].push(M);
                              else if (v[0] === 'f')
                                for (var C = 3; C < v.length; ++C) {
                                  for (
                                    var k = [], A = [1, C - 1, C], R = 0;
                                    R < A.length;
                                    ++R
                                  ) {
                                    var O = v[A[R]],
                                      D = 0;
                                    if (x[O] !== void 0) D = x[O];
                                    else {
                                      for (
                                        var N = O.split('/'), U = 0;
                                        U < N.length;
                                        U++
                                      )
                                        N[U] = parseInt(N[U]) - 1;
                                      (D = x[O] = f.vertices.length),
                                        f.vertices.push(_.v[N[0]].copy()),
                                        _.vt[N[1]]
                                          ? f.uvs.push(_.vt[N[1]].slice())
                                          : f.uvs.push([0, 0]),
                                        _.vn[N[2]] &&
                                          f.vertexNormals.push(
                                            _.vn[N[2]].copy(),
                                          );
                                    }
                                    k.push(D);
                                  }
                                  k[0] !== k[1] &&
                                    k[0] !== k[2] &&
                                    k[1] !== k[2] &&
                                    f.faces.push(k);
                                }
                            }
                          }
                          f.vertexNormals.length === 0 && f.computeNormals(),
                            l && s.normalize(),
                            n._decrementPreload(),
                            typeof d == 'function' && d(s);
                        },
                        h,
                      )
                    : (u.default._friendlyFileLoadError(3, r),
                      h
                        ? h()
                        : console.error(
                            'Sorry, the file type is invalid. Only OBJ and STL files are supported.',
                          )),
                  s
                );
              }),
              (u.default.prototype.model = function (r) {
                this._assert3d('model'),
                  u.default._validateParameters('model', arguments),
                  0 < r.vertices.length &&
                    (this._renderer.geometryInHash(r.gid) ||
                      (r._makeTriangleEdges()._edgesToVertices(),
                      this._renderer.createBuffers(r.gid, r)),
                    this._renderer.drawBuffers(r.gid));
              });
            var a = u.default;
            y.default = a;
          },
          {
            '../core/main': 267,
            './p5.Geometry': 316,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.array.splice': 164,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.match': 187,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.trim': 193,
          },
        ],
        314: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.join'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.join'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (h = t('../core/main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../core/constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            t('./p5.Texture'),
              (r.default.prototype.loadShader = function (o, s, n, c) {
                r.default._validateParameters('loadShader', arguments),
                  (c = c || console.error);
                function f() {
                  _._decrementPreload(), n && n(g);
                }
                var g = new r.default.Shader(),
                  _ = this,
                  x = !1,
                  j = !1;
                return (
                  this.loadStrings(
                    o,
                    function (v) {
                      (g._vertSrc = v.join(`
`)),
                        (j = !0),
                        x && f();
                    },
                    c,
                  ),
                  this.loadStrings(
                    s,
                    function (v) {
                      (g._fragSrc = v.join(`
`)),
                        (x = !0),
                        j && f();
                    },
                    c,
                  ),
                  g
                );
              }),
              (r.default.prototype.createShader = function (o, s) {
                return (
                  this._assert3d('createShader'),
                  r.default._validateParameters('createShader', arguments),
                  new r.default.Shader(this._renderer, o, s)
                );
              }),
              (r.default.prototype.shader = function (o) {
                return (
                  this._assert3d('shader'),
                  r.default._validateParameters('shader', arguments),
                  o._renderer === void 0 && (o._renderer = this._renderer),
                  o.init(),
                  o.isStrokeShader()
                    ? (this._renderer.userStrokeShader = o)
                    : ((this._renderer.userFillShader = o),
                      (this._renderer._useNormalMaterial = !1)),
                  this
                );
              }),
              (r.default.prototype.resetShader = function () {
                return (
                  (this._renderer.userFillShader =
                    this._renderer.userStrokeShader =
                      null),
                  this
                );
              }),
              (r.default.prototype.texture = function (o) {
                return (
                  this._assert3d('texture'),
                  r.default._validateParameters('texture', arguments),
                  o.gifProperties && o._animateGif(this),
                  (this._renderer.drawMode = l.TEXTURE),
                  (this._renderer._useSpecularMaterial = !1),
                  (this._renderer._useEmissiveMaterial = !1),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._tex = o),
                  this._renderer._setProperty('_doFill', !0),
                  this
                );
              }),
              (r.default.prototype.textureMode = function (o) {
                o !== l.IMAGE && o !== l.NORMAL
                  ? console.warn(
                      'You tried to set '.concat(
                        o,
                        ' textureMode only supports IMAGE & NORMAL ',
                      ),
                    )
                  : (this._renderer.textureMode = o);
              }),
              (r.default.prototype.textureWrap = function (o) {
                for (
                  var s =
                      1 < arguments.length && arguments[1] !== void 0
                        ? arguments[1]
                        : o,
                    n =
                      ((this._renderer.textureWrapX = o),
                      (this._renderer.textureWrapY = s),
                      this._renderer.textures),
                    c = 0;
                  c < n.length;
                  c++
                )
                  n[c].setWrapMode(o, s);
              }),
              (r.default.prototype.normalMaterial = function () {
                this._assert3d('normalMaterial');
                for (
                  var o = arguments.length, s = new Array(o), n = 0;
                  n < o;
                  n++
                )
                  s[n] = arguments[n];
                return (
                  r.default._validateParameters('normalMaterial', s),
                  (this._renderer.drawMode = l.FILL),
                  (this._renderer._useSpecularMaterial = !1),
                  (this._renderer._useEmissiveMaterial = !1),
                  (this._renderer._useNormalMaterial = !0),
                  (this._renderer.curFillColor = [1, 1, 1, 1]),
                  this._renderer._setProperty('_doFill', !0),
                  this.noStroke(),
                  this
                );
              }),
              (r.default.prototype.ambientMaterial = function (o, s, n) {
                this._assert3d('ambientMaterial'),
                  r.default._validateParameters('ambientMaterial', arguments);
                var c = r.default.prototype.color.apply(this, arguments);
                return (
                  (this._renderer.curAmbientColor = c._array),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._enableLighting = !0),
                  (this._renderer._tex = null),
                  this._renderer._setProperty('_doFill', !0),
                  this
                );
              }),
              (r.default.prototype.emissiveMaterial = function (o, s, n, c) {
                this._assert3d('emissiveMaterial'),
                  r.default._validateParameters('emissiveMaterial', arguments);
                var f = r.default.prototype.color.apply(this, arguments);
                return (
                  (this._renderer.curEmissiveColor = f._array),
                  (this._renderer._useEmissiveMaterial = !0),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._enableLighting = !0),
                  (this._renderer._tex = null),
                  this
                );
              }),
              (r.default.prototype.specularMaterial = function (o, s, n, c) {
                this._assert3d('specularMaterial'),
                  r.default._validateParameters('specularMaterial', arguments);
                var f = r.default.prototype.color.apply(this, arguments);
                return (
                  (this._renderer.curSpecularColor = f._array),
                  (this._renderer._useSpecularMaterial = !0),
                  (this._renderer._useNormalMaterial = !1),
                  (this._renderer._enableLighting = !0),
                  (this._renderer._tex = null),
                  this
                );
              }),
              (r.default.prototype.shininess = function (o) {
                return (
                  this._assert3d('shininess'),
                  r.default._validateParameters('shininess', arguments),
                  (this._renderer._useShininess = o = o < 1 ? 1 : o),
                  this
                );
              }),
              (r.default.RendererGL.prototype._applyColorBlend = function (o) {
                var s = this.GL,
                  n = this.drawMode === l.TEXTURE,
                  n =
                    this.userFillShader ||
                    this.userStrokeShader ||
                    this.userPointShader ||
                    n ||
                    this.curBlendMode !== l.BLEND ||
                    o[o.length - 1] < 1 ||
                    this._isErasing;
                return (
                  n !== this._isBlending &&
                    (n ||
                    (this.curBlendMode !== l.BLEND &&
                      this.curBlendMode !== l.ADD)
                      ? s.enable(s.BLEND)
                      : s.disable(s.BLEND),
                    s.depthMask(!0),
                    (this._isBlending = n)),
                  this._applyBlendMode(),
                  o
                );
              }),
              (r.default.RendererGL.prototype._applyBlendMode = function () {
                if (this._cachedBlendMode !== this.curBlendMode) {
                  var o = this.GL;
                  switch (this.curBlendMode) {
                    case l.BLEND:
                      o.blendEquation(o.FUNC_ADD),
                        o.blendFunc(o.ONE, o.ONE_MINUS_SRC_ALPHA);
                      break;
                    case l.ADD:
                      o.blendEquation(o.FUNC_ADD), o.blendFunc(o.ONE, o.ONE);
                      break;
                    case l.REMOVE:
                      o.blendEquation(o.FUNC_ADD),
                        o.blendFunc(o.ZERO, o.ONE_MINUS_SRC_ALPHA);
                      break;
                    case l.MULTIPLY:
                      o.blendEquation(o.FUNC_ADD),
                        o.blendFunc(o.DST_COLOR, o.ONE_MINUS_SRC_ALPHA);
                      break;
                    case l.SCREEN:
                      o.blendEquation(o.FUNC_ADD),
                        o.blendFunc(o.ONE, o.ONE_MINUS_SRC_COLOR);
                      break;
                    case l.EXCLUSION:
                      o.blendEquationSeparate(o.FUNC_ADD, o.FUNC_ADD),
                        o.blendFuncSeparate(
                          o.ONE_MINUS_DST_COLOR,
                          o.ONE_MINUS_SRC_COLOR,
                          o.ONE,
                          o.ONE,
                        );
                      break;
                    case l.REPLACE:
                      o.blendEquation(o.FUNC_ADD), o.blendFunc(o.ONE, o.ZERO);
                      break;
                    case l.SUBTRACT:
                      o.blendEquationSeparate(
                        o.FUNC_REVERSE_SUBTRACT,
                        o.FUNC_ADD,
                      ),
                        o.blendFuncSeparate(
                          o.ONE,
                          o.ONE,
                          o.ONE,
                          o.ONE_MINUS_SRC_ALPHA,
                        );
                      break;
                    case l.DARKEST:
                      this.blendExt
                        ? (o.blendEquationSeparate(
                            this.blendExt.MIN_EXT,
                            o.FUNC_ADD,
                          ),
                          o.blendFuncSeparate(o.ONE, o.ONE, o.ONE, o.ONE))
                        : console.warn(
                            'blendMode(DARKEST) does not work in your browser in WEBGL mode.',
                          );
                      break;
                    case l.LIGHTEST:
                      this.blendExt
                        ? (o.blendEquationSeparate(
                            this.blendExt.MAX_EXT,
                            o.FUNC_ADD,
                          ),
                          o.blendFuncSeparate(o.ONE, o.ONE, o.ONE, o.ONE))
                        : console.warn(
                            'blendMode(LIGHTEST) does not work in your browser in WEBGL mode.',
                          );
                      break;
                    default:
                      console.error(
                        'Oops! Somehow RendererGL set curBlendMode to an unsupported mode.',
                      );
                  }
                  this._isErasing ||
                    (this._cachedBlendMode = this.curBlendMode);
                }
              });
            var h = r.default;
            y.default = h;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            './p5.Texture': 323,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.join': 159,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        315: [
          function (t, b, y) {
            Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.prototype.camera = function () {
              var a;
              this._assert3d('camera');
              for (
                var r = arguments.length, l = new Array(r), d = 0;
                d < r;
                d++
              )
                l[d] = arguments[d];
              return (
                u.default._validateParameters('camera', l),
                (a = this._renderer._curCamera).camera.apply(a, l),
                this
              );
            }),
              (u.default.prototype.perspective = function () {
                var a;
                this._assert3d('perspective');
                for (
                  var r = arguments.length, l = new Array(r), d = 0;
                  d < r;
                  d++
                )
                  l[d] = arguments[d];
                return (
                  u.default._validateParameters('perspective', l),
                  (a = this._renderer._curCamera).perspective.apply(a, l),
                  this
                );
              }),
              (u.default.prototype.ortho = function () {
                var a;
                this._assert3d('ortho');
                for (
                  var r = arguments.length, l = new Array(r), d = 0;
                  d < r;
                  d++
                )
                  l[d] = arguments[d];
                return (
                  u.default._validateParameters('ortho', l),
                  (a = this._renderer._curCamera).ortho.apply(a, l),
                  this
                );
              }),
              (u.default.prototype.frustum = function () {
                var a;
                this._assert3d('frustum');
                for (
                  var r = arguments.length, l = new Array(r), d = 0;
                  d < r;
                  d++
                )
                  l[d] = arguments[d];
                return (
                  u.default._validateParameters('frustum', l),
                  (a = this._renderer._curCamera).frustum.apply(a, l),
                  this
                );
              }),
              (u.default.prototype.createCamera = function () {
                this._assert3d('createCamera');
                var a = new u.default.Camera(this._renderer);
                return (
                  a._computeCameraDefaultSettings(),
                  a._setDefaultCamera(),
                  (this._renderer._curCamera = a)
                );
              }),
              (u.default.Camera = function (a) {
                (this._renderer = a),
                  (this.cameraType = 'default'),
                  (this.cameraMatrix = new u.default.Matrix()),
                  (this.projMatrix = new u.default.Matrix());
              }),
              (u.default.Camera.prototype.perspective = function (h, r, l, d) {
                (this.cameraType = 0 < arguments.length ? 'custom' : 'default'),
                  h === void 0
                    ? ((h = this.defaultCameraFOV), (this.cameraFOV = h))
                    : (this.cameraFOV = this._renderer._pInst._toRadians(h)),
                  r === void 0 && (r = this.defaultAspectRatio),
                  l === void 0 && (l = this.defaultCameraNear),
                  d === void 0 && (d = this.defaultCameraFar),
                  l <= 1e-4 &&
                    ((l = 0.01),
                    console.log(
                      'Avoid perspective near plane values close to or below 0. Setting value to 0.01.',
                    )),
                  d < l &&
                    console.log(
                      'Perspective far plane value is less than near plane value. Nothing will be shown.',
                    ),
                  (this.aspectRatio = r),
                  (this.cameraNear = l),
                  (this.cameraFar = d),
                  (this.projMatrix = u.default.Matrix.identity());
                var h = 1 / Math.tan(this.cameraFOV / 2),
                  o = 1 / (this.cameraNear - this.cameraFar);
                this.projMatrix.set(
                  h / r,
                  0,
                  0,
                  0,
                  0,
                  -h,
                  0,
                  0,
                  0,
                  0,
                  (d + l) * o,
                  -1,
                  0,
                  0,
                  2 * d * l * o,
                  0,
                ),
                  this._isActive() &&
                    this._renderer.uPMatrix.set(
                      this.projMatrix.mat4[0],
                      this.projMatrix.mat4[1],
                      this.projMatrix.mat4[2],
                      this.projMatrix.mat4[3],
                      this.projMatrix.mat4[4],
                      this.projMatrix.mat4[5],
                      this.projMatrix.mat4[6],
                      this.projMatrix.mat4[7],
                      this.projMatrix.mat4[8],
                      this.projMatrix.mat4[9],
                      this.projMatrix.mat4[10],
                      this.projMatrix.mat4[11],
                      this.projMatrix.mat4[12],
                      this.projMatrix.mat4[13],
                      this.projMatrix.mat4[14],
                      this.projMatrix.mat4[15],
                    );
              }),
              (u.default.Camera.prototype.ortho = function (x, _, l, d, h, o) {
                x === void 0 && (x = -this._renderer.width / 2),
                  _ === void 0 && (_ = +this._renderer.width / 2),
                  l === void 0 && (l = -this._renderer.height / 2),
                  h === void 0 && (h = 0);
                var j = _ - x,
                  s = (d = d === void 0 ? +this._renderer.height / 2 : d) - l,
                  n =
                    (o =
                      o === void 0
                        ? Math.max(this._renderer.width, this._renderer.height)
                        : o) - h,
                  c = 2 / j,
                  f = 2 / s,
                  g = -2 / n,
                  _ = -(_ + x) / j,
                  x = -(d + l) / s,
                  j = -(o + h) / n;
                (this.projMatrix = u.default.Matrix.identity()),
                  this.projMatrix.set(
                    c,
                    0,
                    0,
                    0,
                    0,
                    -f,
                    0,
                    0,
                    0,
                    0,
                    g,
                    0,
                    _,
                    x,
                    j,
                    1,
                  ),
                  this._isActive() &&
                    this._renderer.uPMatrix.set(
                      this.projMatrix.mat4[0],
                      this.projMatrix.mat4[1],
                      this.projMatrix.mat4[2],
                      this.projMatrix.mat4[3],
                      this.projMatrix.mat4[4],
                      this.projMatrix.mat4[5],
                      this.projMatrix.mat4[6],
                      this.projMatrix.mat4[7],
                      this.projMatrix.mat4[8],
                      this.projMatrix.mat4[9],
                      this.projMatrix.mat4[10],
                      this.projMatrix.mat4[11],
                      this.projMatrix.mat4[12],
                      this.projMatrix.mat4[13],
                      this.projMatrix.mat4[14],
                      this.projMatrix.mat4[15],
                    ),
                  (this.cameraType = 'custom');
              }),
              (u.default.Camera.prototype.frustum = function (
                x,
                _,
                l,
                d,
                h,
                o,
              ) {
                x === void 0 && (x = -this._renderer.width / 2),
                  _ === void 0 && (_ = +this._renderer.width / 2),
                  l === void 0 && (l = -this._renderer.height / 2),
                  h === void 0 && (h = 0);
                var j = _ - x,
                  s = (d = d === void 0 ? +this._renderer.height / 2 : d) - l,
                  n =
                    (o =
                      o === void 0
                        ? Math.max(this._renderer.width, this._renderer.height)
                        : o) - h,
                  c = (2 * h) / j,
                  f = (2 * h) / s,
                  g = (-2 * o * h) / n,
                  _ = (_ + x) / j,
                  x = (d + l) / s,
                  j = -(o + h) / n;
                (this.projMatrix = u.default.Matrix.identity()),
                  this.projMatrix.set(
                    c,
                    0,
                    0,
                    0,
                    0,
                    f,
                    0,
                    0,
                    _,
                    x,
                    j,
                    -1,
                    0,
                    0,
                    g,
                    0,
                  ),
                  this._isActive() &&
                    this._renderer.uPMatrix.set(
                      this.projMatrix.mat4[0],
                      this.projMatrix.mat4[1],
                      this.projMatrix.mat4[2],
                      this.projMatrix.mat4[3],
                      this.projMatrix.mat4[4],
                      this.projMatrix.mat4[5],
                      this.projMatrix.mat4[6],
                      this.projMatrix.mat4[7],
                      this.projMatrix.mat4[8],
                      this.projMatrix.mat4[9],
                      this.projMatrix.mat4[10],
                      this.projMatrix.mat4[11],
                      this.projMatrix.mat4[12],
                      this.projMatrix.mat4[13],
                      this.projMatrix.mat4[14],
                      this.projMatrix.mat4[15],
                    ),
                  (this.cameraType = 'custom');
              }),
              (u.default.Camera.prototype._rotateView = function (c, r, l, d) {
                var h = this.centerX,
                  o = this.centerY,
                  s = this.centerZ,
                  n =
                    ((h -= this.eyeX),
                    (o -= this.eyeY),
                    (s -= this.eyeZ),
                    u.default.Matrix.identity(this._renderer._pInst)),
                  c =
                    (n.rotate(this._renderer._pInst._toRadians(c), r, l, d),
                    [
                      h * n.mat4[0] + o * n.mat4[4] + s * n.mat4[8],
                      h * n.mat4[1] + o * n.mat4[5] + s * n.mat4[9],
                      h * n.mat4[2] + o * n.mat4[6] + s * n.mat4[10],
                    ]);
                (c[0] += this.eyeX),
                  (c[1] += this.eyeY),
                  (c[2] += this.eyeZ),
                  this.camera(
                    this.eyeX,
                    this.eyeY,
                    this.eyeZ,
                    c[0],
                    c[1],
                    c[2],
                    this.upX,
                    this.upY,
                    this.upZ,
                  );
              }),
              (u.default.Camera.prototype.pan = function (a) {
                var r = this._getLocalAxes();
                this._rotateView(a, r.y[0], r.y[1], r.y[2]);
              }),
              (u.default.Camera.prototype.tilt = function (a) {
                var r = this._getLocalAxes();
                this._rotateView(a, r.x[0], r.x[1], r.x[2]);
              }),
              (u.default.Camera.prototype.lookAt = function (a, r, l) {
                this.camera(
                  this.eyeX,
                  this.eyeY,
                  this.eyeZ,
                  a,
                  r,
                  l,
                  this.upX,
                  this.upY,
                  this.upZ,
                );
              }),
              (u.default.Camera.prototype.camera = function (
                a,
                r,
                l,
                d,
                h,
                o,
                s,
                n,
                c,
              ) {
                return (
                  a === void 0 &&
                    ((a = this.defaultEyeX),
                    (r = this.defaultEyeY),
                    (l = this.defaultEyeZ),
                    (d = a),
                    (h = r),
                    (n = 1),
                    (c = s = o = 0)),
                  (this.eyeX = a),
                  (this.eyeY = r),
                  (this.eyeZ = l),
                  d !== void 0 &&
                    ((this.centerX = d),
                    (this.centerY = h),
                    (this.centerZ = o)),
                  s !== void 0 &&
                    ((this.upX = s), (this.upY = n), (this.upZ = c)),
                  (d = this._getLocalAxes()),
                  this.cameraMatrix.set(
                    d.x[0],
                    d.y[0],
                    d.z[0],
                    0,
                    d.x[1],
                    d.y[1],
                    d.z[1],
                    0,
                    d.x[2],
                    d.y[2],
                    d.z[2],
                    0,
                    0,
                    0,
                    0,
                    1,
                  ),
                  (h = -a),
                  this.cameraMatrix.translate([h, -r, -l]),
                  this._isActive() &&
                    this._renderer.uMVMatrix.set(
                      this.cameraMatrix.mat4[0],
                      this.cameraMatrix.mat4[1],
                      this.cameraMatrix.mat4[2],
                      this.cameraMatrix.mat4[3],
                      this.cameraMatrix.mat4[4],
                      this.cameraMatrix.mat4[5],
                      this.cameraMatrix.mat4[6],
                      this.cameraMatrix.mat4[7],
                      this.cameraMatrix.mat4[8],
                      this.cameraMatrix.mat4[9],
                      this.cameraMatrix.mat4[10],
                      this.cameraMatrix.mat4[11],
                      this.cameraMatrix.mat4[12],
                      this.cameraMatrix.mat4[13],
                      this.cameraMatrix.mat4[14],
                      this.cameraMatrix.mat4[15],
                    ),
                  this
                );
              }),
              (u.default.Camera.prototype.move = function (d, h, l) {
                var o = this._getLocalAxes(),
                  d = [o.x[0] * d, o.x[1] * d, o.x[2] * d],
                  h = [o.y[0] * h, o.y[1] * h, o.y[2] * h],
                  o = [o.z[0] * l, o.z[1] * l, o.z[2] * l];
                this.camera(
                  this.eyeX + d[0] + h[0] + o[0],
                  this.eyeY + d[1] + h[1] + o[1],
                  this.eyeZ + d[2] + h[2] + o[2],
                  this.centerX + d[0] + h[0] + o[0],
                  this.centerY + d[1] + h[1] + o[1],
                  this.centerZ + d[2] + h[2] + o[2],
                  this.upX,
                  this.upY,
                  this.upZ,
                );
              }),
              (u.default.Camera.prototype.setPosition = function (a, r, l) {
                var d = a - this.eyeX,
                  h = r - this.eyeY,
                  o = l - this.eyeZ;
                this.camera(
                  a,
                  r,
                  l,
                  this.centerX + d,
                  this.centerY + h,
                  this.centerZ + o,
                  this.upX,
                  this.upY,
                  this.upZ,
                );
              }),
              (u.default.Camera.prototype._computeCameraDefaultSettings =
                function () {
                  (this.defaultCameraFOV = (60 / 180) * Math.PI),
                    (this.defaultAspectRatio =
                      this._renderer.width / this._renderer.height),
                    (this.defaultEyeX = 0),
                    (this.defaultEyeY = 0),
                    (this.defaultEyeZ =
                      this._renderer.height /
                      2 /
                      Math.tan(this.defaultCameraFOV / 2)),
                    (this.defaultCenterX = 0),
                    (this.defaultCenterY = 0),
                    (this.defaultCenterZ = 0),
                    (this.defaultCameraNear = 0.1 * this.defaultEyeZ),
                    (this.defaultCameraFar = 10 * this.defaultEyeZ);
                }),
              (u.default.Camera.prototype._setDefaultCamera = function () {
                (this.cameraFOV = this.defaultCameraFOV),
                  (this.aspectRatio = this.defaultAspectRatio),
                  (this.eyeX = this.defaultEyeX),
                  (this.eyeY = this.defaultEyeY),
                  (this.eyeZ = this.defaultEyeZ),
                  (this.centerX = this.defaultCenterX),
                  (this.centerY = this.defaultCenterY),
                  (this.centerZ = this.defaultCenterZ),
                  (this.upX = 0),
                  (this.upY = 1),
                  (this.upZ = 0),
                  (this.cameraNear = this.defaultCameraNear),
                  (this.cameraFar = this.defaultCameraFar),
                  this.perspective(),
                  this.camera(),
                  (this.cameraType = 'default');
              }),
              (u.default.Camera.prototype._resize = function () {
                this.cameraType === 'default'
                  ? (this._computeCameraDefaultSettings(),
                    this._setDefaultCamera())
                  : this.perspective(
                      this.cameraFOV,
                      this._renderer.width / this._renderer.height,
                    );
              }),
              (u.default.Camera.prototype.copy = function () {
                var a = new u.default.Camera(this._renderer);
                return (
                  (a.cameraFOV = this.cameraFOV),
                  (a.aspectRatio = this.aspectRatio),
                  (a.eyeX = this.eyeX),
                  (a.eyeY = this.eyeY),
                  (a.eyeZ = this.eyeZ),
                  (a.centerX = this.centerX),
                  (a.centerY = this.centerY),
                  (a.centerZ = this.centerZ),
                  (a.cameraNear = this.cameraNear),
                  (a.cameraFar = this.cameraFar),
                  (a.cameraType = this.cameraType),
                  (a.cameraMatrix = this.cameraMatrix.copy()),
                  (a.projMatrix = this.projMatrix.copy()),
                  a
                );
              }),
              (u.default.Camera.prototype._getLocalAxes = function () {
                var a = this.eyeX - this.centerX,
                  r = this.eyeY - this.centerY,
                  l = this.eyeZ - this.centerZ,
                  s = Math.sqrt(a * a + r * r + l * l),
                  s = (s !== 0 && ((a /= s), (r /= s), (l /= s)), this.upX),
                  d = (n = this.upY) * l - (c = this.upZ) * r,
                  h = -s * l + c * a,
                  o = s * r - n * a,
                  s = r * o - l * h,
                  n = -a * o + l * d,
                  c = a * h - r * d,
                  f = Math.sqrt(d * d + h * h + o * o),
                  f =
                    (f !== 0 && ((d /= f), (h /= f), (o /= f)),
                    Math.sqrt(s * s + n * n + c * c));
                return (
                  f !== 0 && ((s /= f), (n /= f), (c /= f)),
                  { x: [d, h, o], y: [s, n, c], z: [a, r, l] }
                );
              }),
              (u.default.Camera.prototype._orbit = function (n, c, f) {
                var h = this.eyeX - this.centerX,
                  s = this.eyeY - this.centerY,
                  o = this.eyeZ - this.centerZ,
                  d = Math.sqrt(h * h + s * s + o * o),
                  h = Math.atan2(h, o),
                  o = Math.acos(Math.max(-1, Math.min(1, s / d))),
                  s = 0 < this.upY ? 1 : -1,
                  n =
                    ((h += s * n),
                    ((o += s * c) <= 0 || o >= Math.PI) && (s *= -1),
                    (d += f) < 0 && (d = 0.1),
                    Math.sin(o) * d * Math.sin(h)),
                  c = Math.cos(o) * d,
                  f = Math.sin(o) * d * Math.cos(h);
                this.camera(
                  n + this.centerX,
                  c + this.centerY,
                  f + this.centerZ,
                  this.centerX,
                  this.centerY,
                  this.centerZ,
                  0,
                  s,
                  0,
                );
              }),
              (u.default.Camera.prototype._isActive = function () {
                return this === this._renderer._curCamera;
              }),
              (u.default.prototype.setCamera = function (a) {
                (this._renderer._curCamera = a),
                  this._renderer.uPMatrix.set(
                    a.projMatrix.mat4[0],
                    a.projMatrix.mat4[1],
                    a.projMatrix.mat4[2],
                    a.projMatrix.mat4[3],
                    a.projMatrix.mat4[4],
                    a.projMatrix.mat4[5],
                    a.projMatrix.mat4[6],
                    a.projMatrix.mat4[7],
                    a.projMatrix.mat4[8],
                    a.projMatrix.mat4[9],
                    a.projMatrix.mat4[10],
                    a.projMatrix.mat4[11],
                    a.projMatrix.mat4[12],
                    a.projMatrix.mat4[13],
                    a.projMatrix.mat4[14],
                    a.projMatrix.mat4[15],
                  );
              }),
              (t = u.default.Camera),
              (y.default = t);
          },
          { '../core/main': 267 },
        ],
        316: [
          function (t, b, y) {
            t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.string.sub'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.string.sub'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.Geometry = function (a, r, l) {
              return (
                (this.vertices = []),
                (this.lineVertices = []),
                (this.lineTangentsIn = []),
                (this.lineTangentsOut = []),
                (this.lineSides = []),
                (this.vertexNormals = []),
                (this.faces = []),
                (this.uvs = []),
                (this.edges = []),
                (this.vertexColors = []),
                (this.vertexStrokeColors = []),
                (this.lineVertexColors = []),
                (this.detailX = a !== void 0 ? a : 1),
                (this.detailY = r !== void 0 ? r : 1),
                (this.dirtyFlags = {}),
                l instanceof Function && l.call(this),
                this
              );
            }),
              (u.default.Geometry.prototype.reset = function () {
                (this.lineVertices.length = 0),
                  (this.lineTangentsIn.length = 0),
                  (this.lineTangentsOut.length = 0),
                  (this.lineSides.length = 0),
                  (this.vertices.length = 0),
                  (this.edges.length = 0),
                  (this.vertexColors.length = 0),
                  (this.vertexStrokeColors.length = 0),
                  (this.lineVertexColors.length = 0),
                  (this.vertexNormals.length = 0),
                  (this.uvs.length = 0),
                  (this.dirtyFlags = {});
              }),
              (u.default.Geometry.prototype.computeFaces = function () {
                this.faces.length = 0;
                for (
                  var a, r, l, d = this.detailX + 1, h = 0;
                  h < this.detailY;
                  h++
                )
                  for (var o = 0; o < this.detailX; o++)
                    (r = (h + 1) * d + o + 1),
                      this.faces.push([
                        h * d + o,
                        (a = h * d + o + 1),
                        (l = (h + 1) * d + o),
                      ]),
                      this.faces.push([l, a, r]);
                return this;
              }),
              (u.default.Geometry.prototype._getFaceNormal = function (r) {
                var r = this.faces[r],
                  l = this.vertices[r[0]],
                  h = this.vertices[r[1]],
                  r = this.vertices[r[2]],
                  h = u.default.Vector.sub(h, l),
                  r = u.default.Vector.sub(r, l),
                  l = u.default.Vector.cross(h, r),
                  d = u.default.Vector.mag(l),
                  h = d / (u.default.Vector.mag(h) * u.default.Vector.mag(r));
                return h === 0 || isNaN(h)
                  ? (console.warn(
                      'p5.Geometry.prototype._getFaceNormal:',
                      'face has colinear sides or a repeated vertex',
                    ),
                    l)
                  : (1 < h && (h = 1), l.mult(Math.asin(h) / d));
              }),
              (u.default.Geometry.prototype.computeNormals = function () {
                for (
                  var a = this.vertexNormals,
                    r = this.vertices,
                    l = this.faces,
                    d = (a.length = 0);
                  d < r.length;
                  ++d
                )
                  a.push(new u.default.Vector());
                for (var h = 0; h < l.length; ++h)
                  for (
                    var o = l[h], s = this._getFaceNormal(h), n = 0;
                    n < 3;
                    ++n
                  )
                    a[o[n]].add(s);
                for (d = 0; d < r.length; ++d) a[d].normalize();
                return this;
              }),
              (u.default.Geometry.prototype.averageNormals = function () {
                for (var a = 0; a <= this.detailY; a++) {
                  var r = this.detailX + 1,
                    l = u.default.Vector.add(
                      this.vertexNormals[a * r],
                      this.vertexNormals[a * r + this.detailX],
                    ),
                    l = u.default.Vector.div(l, 2);
                  (this.vertexNormals[a * r] = l),
                    (this.vertexNormals[a * r + this.detailX] = l);
                }
                return this;
              }),
              (u.default.Geometry.prototype.averagePoleNormals = function () {
                for (
                  var a = new u.default.Vector(0, 0, 0), r = 0;
                  r < this.detailX;
                  r++
                )
                  a.add(this.vertexNormals[r]);
                for (
                  var a = u.default.Vector.div(a, this.detailX), l = 0;
                  l < this.detailX;
                  l++
                )
                  this.vertexNormals[l] = a;
                a = new u.default.Vector(0, 0, 0);
                for (
                  var d = this.vertices.length - 1;
                  d > this.vertices.length - 1 - this.detailX;
                  d--
                )
                  a.add(this.vertexNormals[d]);
                a = u.default.Vector.div(a, this.detailX);
                for (
                  var h = this.vertices.length - 1;
                  h > this.vertices.length - 1 - this.detailX;
                  h--
                )
                  this.vertexNormals[h] = a;
                return this;
              }),
              (u.default.Geometry.prototype._makeTriangleEdges = function () {
                if (
                  ((this.edges.length = 0), Array.isArray(this.strokeIndices))
                )
                  for (var a = 0, r = this.strokeIndices.length; a < r; a++)
                    this.edges.push(this.strokeIndices[a]);
                else
                  for (var l = 0; l < this.faces.length; l++)
                    this.edges.push([this.faces[l][0], this.faces[l][1]]),
                      this.edges.push([this.faces[l][1], this.faces[l][2]]),
                      this.edges.push([this.faces[l][2], this.faces[l][0]]);
                return this;
              }),
              (u.default.Geometry.prototype._edgesToVertices = function () {
                (this.lineVertices.length = 0),
                  (this.lineTangentsIn.length = 0),
                  (this.lineTangentsOut.length = 0),
                  (this.lineSides.length = 0);
                for (
                  var a,
                    r =
                      1 < this.edges.length &&
                      this.edges[0][0] === this.edges[this.edges.length - 1][1],
                    l = !1,
                    d = 0;
                  d < this.edges.length;
                  d++
                ) {
                  var h = this.edges[d - 1],
                    o = this.edges[d],
                    s = this.vertices[o[0]],
                    n = this.vertices[o[1]],
                    c =
                      0 < this.vertexStrokeColors.length
                        ? this.vertexStrokeColors.slice(
                            4 * o[0],
                            4 * (o[0] + 1),
                          )
                        : [0, 0, 0, 0],
                    f =
                      0 < this.vertexStrokeColors.length
                        ? this.vertexStrokeColors.slice(
                            4 * o[1],
                            4 * (o[1] + 1),
                          )
                        : [0, 0, 0, 0],
                    g = n.copy().sub(s).normalize(),
                    _ = 0 < g.magSq();
                  _ && this._addSegment(s, n, c, f, g),
                    0 < d && h[1] === o[0]
                      ? (a &&
                          _ &&
                          g.dot(a) < 1 - 1e-8 &&
                          this._addJoin(s, a, g, c),
                        !_ ||
                          l ||
                          r ||
                          (this._addCap(s, g.copy().mult(-1), c), (l = !0)))
                      : ((l = !1),
                        _ &&
                          (!r || 0 < d) &&
                          (this._addCap(s, g.copy().mult(-1), c), (l = !0)),
                        a &&
                          (!r || d < this.edges.length - 1) &&
                          (this._addCap(this.vertices[h[1]], a, c),
                          (a = void 0))),
                    d === this.edges.length - 1 &&
                      (r
                        ? this._addJoin(
                            n,
                            g,
                            this.vertices[this.edges[0][1]]
                              .copy()
                              .sub(n)
                              .normalize(),
                            f,
                          )
                        : this._addCap(n, g, f)),
                    _ && (a = g);
                }
                return this;
              }),
              (u.default.Geometry.prototype._addSegment = function (
                o,
                s,
                l,
                d,
                h,
              ) {
                var o = o.array(),
                  s = s.array(),
                  n = h.array();
                this.lineSides.push(1, -1, 1, 1, -1, -1);
                for (
                  var c = 0, f = [this.lineTangentsIn, this.lineTangentsOut];
                  c < f.length;
                  c++
                )
                  f[c].push(n, n, n, n, n, n);
                return (
                  this.lineVertices.push(o, o, s, s, o, s),
                  this.lineVertexColors.push(l, l, d, d, l, d),
                  this
                );
              }),
              (u.default.Geometry.prototype._addCap = function (a, r, l) {
                for (
                  var d = a.array(), h = r.array(), o = [0, 0, 0], s = 0;
                  s < 6;
                  s++
                )
                  this.lineVertices.push(d),
                    this.lineTangentsIn.push(h),
                    this.lineTangentsOut.push(o),
                    this.lineVertexColors.push(l);
                return this.lineSides.push(-1, -2, 2, 2, 1, -1), this;
              }),
              (u.default.Geometry.prototype._addJoin = function (a, r, l, d) {
                for (
                  var h = a.array(), o = r.array(), s = l.array(), n = 0;
                  n < 12;
                  n++
                )
                  this.lineVertices.push(h),
                    this.lineTangentsIn.push(o),
                    this.lineTangentsOut.push(s),
                    this.lineVertexColors.push(d);
                for (var c = 0, f = [-1, 1]; c < f.length; c++) {
                  var g = f[c];
                  this.lineSides.push(g, 2 * g, 3 * g, g, 3 * g, 0);
                }
                return this;
              }),
              (u.default.Geometry.prototype.normalize = function () {
                if (0 < this.vertices.length) {
                  for (
                    var a = this.vertices[0].copy(),
                      r = this.vertices[0].copy(),
                      l = 0;
                    l < this.vertices.length;
                    l++
                  )
                    (a.x = Math.max(a.x, this.vertices[l].x)),
                      (r.x = Math.min(r.x, this.vertices[l].x)),
                      (a.y = Math.max(a.y, this.vertices[l].y)),
                      (r.y = Math.min(r.y, this.vertices[l].y)),
                      (a.z = Math.max(a.z, this.vertices[l].z)),
                      (r.z = Math.min(r.z, this.vertices[l].z));
                  for (
                    var d = u.default.Vector.lerp(a, r, 0.5),
                      h = u.default.Vector.sub(a, r),
                      o = 200 / Math.max(Math.max(h.x, h.y), h.z),
                      s = 0;
                    s < this.vertices.length;
                    s++
                  )
                    this.vertices[s].sub(d), this.vertices[s].mult(o);
                }
                return this;
              }),
              (t = u.default.Geometry),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.string.sub': 192,
          },
        ],
        317: [
          function (l, b, y) {
            l('core-js/modules/es.array.iterator'),
              l('core-js/modules/es.object.to-string'),
              l('core-js/modules/es.typed-array.float32-array'),
              l('core-js/modules/es.typed-array.copy-within'),
              l('core-js/modules/es.typed-array.every'),
              l('core-js/modules/es.typed-array.fill'),
              l('core-js/modules/es.typed-array.filter'),
              l('core-js/modules/es.typed-array.find'),
              l('core-js/modules/es.typed-array.find-index'),
              l('core-js/modules/es.typed-array.for-each'),
              l('core-js/modules/es.typed-array.includes'),
              l('core-js/modules/es.typed-array.index-of'),
              l('core-js/modules/es.typed-array.iterator'),
              l('core-js/modules/es.typed-array.join'),
              l('core-js/modules/es.typed-array.last-index-of'),
              l('core-js/modules/es.typed-array.map'),
              l('core-js/modules/es.typed-array.reduce'),
              l('core-js/modules/es.typed-array.reduce-right'),
              l('core-js/modules/es.typed-array.reverse'),
              l('core-js/modules/es.typed-array.set'),
              l('core-js/modules/es.typed-array.slice'),
              l('core-js/modules/es.typed-array.some'),
              l('core-js/modules/es.typed-array.sort'),
              l('core-js/modules/es.typed-array.subarray'),
              l('core-js/modules/es.typed-array.to-locale-string'),
              l('core-js/modules/es.typed-array.to-string'),
              l('core-js/modules/es.array.iterator'),
              l('core-js/modules/es.object.to-string'),
              l('core-js/modules/es.typed-array.float32-array'),
              l('core-js/modules/es.typed-array.copy-within'),
              l('core-js/modules/es.typed-array.every'),
              l('core-js/modules/es.typed-array.fill'),
              l('core-js/modules/es.typed-array.filter'),
              l('core-js/modules/es.typed-array.find'),
              l('core-js/modules/es.typed-array.find-index'),
              l('core-js/modules/es.typed-array.for-each'),
              l('core-js/modules/es.typed-array.includes'),
              l('core-js/modules/es.typed-array.index-of'),
              l('core-js/modules/es.typed-array.iterator'),
              l('core-js/modules/es.typed-array.join'),
              l('core-js/modules/es.typed-array.last-index-of'),
              l('core-js/modules/es.typed-array.map'),
              l('core-js/modules/es.typed-array.reduce'),
              l('core-js/modules/es.typed-array.reduce-right'),
              l('core-js/modules/es.typed-array.reverse'),
              l('core-js/modules/es.typed-array.set'),
              l('core-js/modules/es.typed-array.slice'),
              l('core-js/modules/es.typed-array.some'),
              l('core-js/modules/es.typed-array.sort'),
              l('core-js/modules/es.typed-array.subarray'),
              l('core-js/modules/es.typed-array.to-locale-string'),
              l('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
                (l = l('../core/main')) && l.__esModule ? l : { default: l },
              a = Array,
              r = function (d) {
                return d instanceof Array;
              },
              l =
                (typeof Float32Array < 'u' &&
                  ((a = Float32Array),
                  (r = function (d) {
                    return d instanceof Array || d instanceof Float32Array;
                  })),
                (u.default.Matrix = function () {
                  for (
                    var d = new Array(arguments.length), h = 0;
                    h < d.length;
                    ++h
                  )
                    d[h] = arguments[h];
                  return (
                    d.length &&
                      d[d.length - 1] instanceof u.default &&
                      (this.p5 = d[d.length - 1]),
                    d[0] === 'mat3'
                      ? (this.mat3 = Array.isArray(d[1])
                          ? d[1]
                          : new a([1, 0, 0, 0, 1, 0, 0, 0, 1]))
                      : (this.mat4 = Array.isArray(d[0])
                          ? d[0]
                          : new a([
                              1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
                            ])),
                    this
                  );
                }),
                (u.default.Matrix.prototype.set = function (d) {
                  return (
                    d instanceof u.default.Matrix
                      ? (this.mat4 = d.mat4)
                      : r(d)
                      ? (this.mat4 = d)
                      : arguments.length === 16 &&
                        ((this.mat4[0] = d),
                        (this.mat4[1] = arguments[1]),
                        (this.mat4[2] = arguments[2]),
                        (this.mat4[3] = arguments[3]),
                        (this.mat4[4] = arguments[4]),
                        (this.mat4[5] = arguments[5]),
                        (this.mat4[6] = arguments[6]),
                        (this.mat4[7] = arguments[7]),
                        (this.mat4[8] = arguments[8]),
                        (this.mat4[9] = arguments[9]),
                        (this.mat4[10] = arguments[10]),
                        (this.mat4[11] = arguments[11]),
                        (this.mat4[12] = arguments[12]),
                        (this.mat4[13] = arguments[13]),
                        (this.mat4[14] = arguments[14]),
                        (this.mat4[15] = arguments[15])),
                    this
                  );
                }),
                (u.default.Matrix.prototype.get = function () {
                  return new u.default.Matrix(this.mat4, this.p5);
                }),
                (u.default.Matrix.prototype.copy = function () {
                  var d = new u.default.Matrix(this.p5);
                  return (
                    (d.mat4[0] = this.mat4[0]),
                    (d.mat4[1] = this.mat4[1]),
                    (d.mat4[2] = this.mat4[2]),
                    (d.mat4[3] = this.mat4[3]),
                    (d.mat4[4] = this.mat4[4]),
                    (d.mat4[5] = this.mat4[5]),
                    (d.mat4[6] = this.mat4[6]),
                    (d.mat4[7] = this.mat4[7]),
                    (d.mat4[8] = this.mat4[8]),
                    (d.mat4[9] = this.mat4[9]),
                    (d.mat4[10] = this.mat4[10]),
                    (d.mat4[11] = this.mat4[11]),
                    (d.mat4[12] = this.mat4[12]),
                    (d.mat4[13] = this.mat4[13]),
                    (d.mat4[14] = this.mat4[14]),
                    (d.mat4[15] = this.mat4[15]),
                    d
                  );
                }),
                (u.default.Matrix.identity = function (d) {
                  return new u.default.Matrix(d);
                }),
                (u.default.Matrix.prototype.transpose = function (d) {
                  var h, o, s, n, c, f;
                  return (
                    d instanceof u.default.Matrix
                      ? ((h = d.mat4[1]),
                        (o = d.mat4[2]),
                        (s = d.mat4[3]),
                        (n = d.mat4[6]),
                        (c = d.mat4[7]),
                        (f = d.mat4[11]),
                        (this.mat4[0] = d.mat4[0]),
                        (this.mat4[1] = d.mat4[4]),
                        (this.mat4[2] = d.mat4[8]),
                        (this.mat4[3] = d.mat4[12]),
                        (this.mat4[4] = h),
                        (this.mat4[5] = d.mat4[5]),
                        (this.mat4[6] = d.mat4[9]),
                        (this.mat4[7] = d.mat4[13]),
                        (this.mat4[8] = o),
                        (this.mat4[9] = n),
                        (this.mat4[10] = d.mat4[10]),
                        (this.mat4[11] = d.mat4[14]),
                        (this.mat4[12] = s),
                        (this.mat4[13] = c),
                        (this.mat4[14] = f),
                        (this.mat4[15] = d.mat4[15]))
                      : r(d) &&
                        ((h = d[1]),
                        (o = d[2]),
                        (s = d[3]),
                        (n = d[6]),
                        (c = d[7]),
                        (f = d[11]),
                        (this.mat4[0] = d[0]),
                        (this.mat4[1] = d[4]),
                        (this.mat4[2] = d[8]),
                        (this.mat4[3] = d[12]),
                        (this.mat4[4] = h),
                        (this.mat4[5] = d[5]),
                        (this.mat4[6] = d[9]),
                        (this.mat4[7] = d[13]),
                        (this.mat4[8] = o),
                        (this.mat4[9] = n),
                        (this.mat4[10] = d[10]),
                        (this.mat4[11] = d[14]),
                        (this.mat4[12] = s),
                        (this.mat4[13] = c),
                        (this.mat4[14] = f),
                        (this.mat4[15] = d[15])),
                    this
                  );
                }),
                (u.default.Matrix.prototype.invert = function (O) {
                  O instanceof u.default.Matrix
                    ? ((h = O.mat4[0]),
                      (o = O.mat4[1]),
                      (s = O.mat4[2]),
                      (n = O.mat4[3]),
                      (c = O.mat4[4]),
                      (f = O.mat4[5]),
                      (g = O.mat4[6]),
                      (_ = O.mat4[7]),
                      (x = O.mat4[8]),
                      (j = O.mat4[9]),
                      (v = O.mat4[10]),
                      (M = O.mat4[11]),
                      (C = O.mat4[12]),
                      (k = O.mat4[13]),
                      (A = O.mat4[14]),
                      (R = O.mat4[15]))
                    : r(O) &&
                      ((h = O[0]),
                      (o = O[1]),
                      (s = O[2]),
                      (n = O[3]),
                      (c = O[4]),
                      (f = O[5]),
                      (g = O[6]),
                      (_ = O[7]),
                      (x = O[8]),
                      (j = O[9]),
                      (v = O[10]),
                      (M = O[11]),
                      (C = O[12]),
                      (k = O[13]),
                      (A = O[14]),
                      (R = O[15]));
                  var h,
                    o,
                    s,
                    n,
                    c,
                    f,
                    g,
                    _,
                    x,
                    j,
                    v,
                    M,
                    C,
                    k,
                    A,
                    R,
                    O = h * f - o * c,
                    D = h * g - s * c,
                    N = h * _ - n * c,
                    U = o * g - s * f,
                    H = o * _ - n * f,
                    q = s * _ - n * g,
                    z = x * k - j * C,
                    X = x * A - v * C,
                    W = x * R - M * C,
                    Z = j * A - v * k,
                    $ = j * R - M * k,
                    ae = v * R - M * A,
                    P = O * ae - D * $ + N * Z + U * W - H * X + q * z;
                  return P
                    ? ((this.mat4[0] = (f * ae - g * $ + _ * Z) * (P = 1 / P)),
                      (this.mat4[1] = (s * $ - o * ae - n * Z) * P),
                      (this.mat4[2] = (k * q - A * H + R * U) * P),
                      (this.mat4[3] = (v * H - j * q - M * U) * P),
                      (this.mat4[4] = (g * W - c * ae - _ * X) * P),
                      (this.mat4[5] = (h * ae - s * W + n * X) * P),
                      (this.mat4[6] = (A * N - C * q - R * D) * P),
                      (this.mat4[7] = (x * q - v * N + M * D) * P),
                      (this.mat4[8] = (c * $ - f * W + _ * z) * P),
                      (this.mat4[9] = (o * W - h * $ - n * z) * P),
                      (this.mat4[10] = (C * H - k * N + R * O) * P),
                      (this.mat4[11] = (j * N - x * H - M * O) * P),
                      (this.mat4[12] = (f * X - c * Z - g * z) * P),
                      (this.mat4[13] = (h * Z - o * X + s * z) * P),
                      (this.mat4[14] = (k * D - C * U - A * O) * P),
                      (this.mat4[15] = (x * U - j * D + v * O) * P),
                      this)
                    : null;
                }),
                (u.default.Matrix.prototype.invert3x3 = function () {
                  var d = this.mat3[0],
                    h = this.mat3[1],
                    o = this.mat3[2],
                    s = this.mat3[3],
                    n = this.mat3[4],
                    c = this.mat3[5],
                    f = this.mat3[6],
                    g = this.mat3[7],
                    _ = this.mat3[8],
                    x = _ * n - c * g,
                    j = -_ * s + c * f,
                    v = g * s - n * f,
                    M = d * x + h * j + o * v;
                  return M
                    ? ((this.mat3[0] = x * (M = 1 / M)),
                      (this.mat3[1] = (-_ * h + o * g) * M),
                      (this.mat3[2] = (c * h - o * n) * M),
                      (this.mat3[3] = j * M),
                      (this.mat3[4] = (_ * d - o * f) * M),
                      (this.mat3[5] = (-c * d + o * s) * M),
                      (this.mat3[6] = v * M),
                      (this.mat3[7] = (-g * d + h * f) * M),
                      (this.mat3[8] = (n * d - h * s) * M),
                      this)
                    : null;
                }),
                (u.default.Matrix.prototype.transpose3x3 = function (d) {
                  var h = d[1],
                    o = d[2],
                    s = d[5];
                  return (
                    (this.mat3[1] = d[3]),
                    (this.mat3[2] = d[6]),
                    (this.mat3[3] = h),
                    (this.mat3[5] = d[7]),
                    (this.mat3[6] = o),
                    (this.mat3[7] = s),
                    this
                  );
                }),
                (u.default.Matrix.prototype.inverseTranspose = function (d) {
                  if (
                    (this.mat3 === void 0
                      ? console.error(
                          'sorry, this function only works with mat3',
                        )
                      : ((this.mat3[0] = d.mat4[0]),
                        (this.mat3[1] = d.mat4[1]),
                        (this.mat3[2] = d.mat4[2]),
                        (this.mat3[3] = d.mat4[4]),
                        (this.mat3[4] = d.mat4[5]),
                        (this.mat3[5] = d.mat4[6]),
                        (this.mat3[6] = d.mat4[8]),
                        (this.mat3[7] = d.mat4[9]),
                        (this.mat3[8] = d.mat4[10])),
                    (d = this.invert3x3()),
                    d)
                  )
                    d.transpose3x3(this.mat3);
                  else for (var h = 0; h < 9; h++) this.mat3[h] = 0;
                  return this;
                }),
                (u.default.Matrix.prototype.determinant = function () {
                  var d =
                      this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4],
                    h =
                      this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4],
                    o =
                      this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4],
                    s =
                      this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5],
                    n =
                      this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5],
                    c =
                      this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6],
                    f =
                      this.mat4[8] * this.mat4[13] -
                      this.mat4[9] * this.mat4[12],
                    g =
                      this.mat4[8] * this.mat4[14] -
                      this.mat4[10] * this.mat4[12],
                    _ =
                      this.mat4[8] * this.mat4[15] -
                      this.mat4[11] * this.mat4[12],
                    x =
                      this.mat4[9] * this.mat4[14] -
                      this.mat4[10] * this.mat4[13],
                    j =
                      this.mat4[9] * this.mat4[15] -
                      this.mat4[11] * this.mat4[13];
                  return (
                    d *
                      (this.mat4[10] * this.mat4[15] -
                        this.mat4[11] * this.mat4[14]) -
                    h * j +
                    o * x +
                    s * _ -
                    n * g +
                    c * f
                  );
                }),
                (u.default.Matrix.prototype.mult = function (o) {
                  var h;
                  if (o === this || o === this.mat4) h = this.copy().mat4;
                  else if (o instanceof u.default.Matrix) h = o.mat4;
                  else if (r(o)) h = o;
                  else {
                    if (arguments.length !== 16) return;
                    h = arguments;
                  }
                  var o = this.mat4[0],
                    s = this.mat4[1],
                    n = this.mat4[2],
                    c = this.mat4[3];
                  return (
                    (this.mat4[0] = o * h[0] + s * h[4] + n * h[8] + c * h[12]),
                    (this.mat4[1] = o * h[1] + s * h[5] + n * h[9] + c * h[13]),
                    (this.mat4[2] =
                      o * h[2] + s * h[6] + n * h[10] + c * h[14]),
                    (this.mat4[3] =
                      o * h[3] + s * h[7] + n * h[11] + c * h[15]),
                    (o = this.mat4[4]),
                    (s = this.mat4[5]),
                    (n = this.mat4[6]),
                    (c = this.mat4[7]),
                    (this.mat4[4] = o * h[0] + s * h[4] + n * h[8] + c * h[12]),
                    (this.mat4[5] = o * h[1] + s * h[5] + n * h[9] + c * h[13]),
                    (this.mat4[6] =
                      o * h[2] + s * h[6] + n * h[10] + c * h[14]),
                    (this.mat4[7] =
                      o * h[3] + s * h[7] + n * h[11] + c * h[15]),
                    (o = this.mat4[8]),
                    (s = this.mat4[9]),
                    (n = this.mat4[10]),
                    (c = this.mat4[11]),
                    (this.mat4[8] = o * h[0] + s * h[4] + n * h[8] + c * h[12]),
                    (this.mat4[9] = o * h[1] + s * h[5] + n * h[9] + c * h[13]),
                    (this.mat4[10] =
                      o * h[2] + s * h[6] + n * h[10] + c * h[14]),
                    (this.mat4[11] =
                      o * h[3] + s * h[7] + n * h[11] + c * h[15]),
                    (o = this.mat4[12]),
                    (s = this.mat4[13]),
                    (n = this.mat4[14]),
                    (c = this.mat4[15]),
                    (this.mat4[12] =
                      o * h[0] + s * h[4] + n * h[8] + c * h[12]),
                    (this.mat4[13] =
                      o * h[1] + s * h[5] + n * h[9] + c * h[13]),
                    (this.mat4[14] =
                      o * h[2] + s * h[6] + n * h[10] + c * h[14]),
                    (this.mat4[15] =
                      o * h[3] + s * h[7] + n * h[11] + c * h[15]),
                    this
                  );
                }),
                (u.default.Matrix.prototype.apply = function (o) {
                  var h;
                  if (o === this || o === this.mat4) h = this.copy().mat4;
                  else if (o instanceof u.default.Matrix) h = o.mat4;
                  else if (r(o)) h = o;
                  else {
                    if (arguments.length !== 16) return;
                    h = arguments;
                  }
                  var o = this.mat4,
                    s = o[0],
                    n = o[4],
                    c = o[8],
                    f = o[12],
                    s =
                      ((o[0] = h[0] * s + h[1] * n + h[2] * c + h[3] * f),
                      (o[4] = h[4] * s + h[5] * n + h[6] * c + h[7] * f),
                      (o[8] = h[8] * s + h[9] * n + h[10] * c + h[11] * f),
                      (o[12] = h[12] * s + h[13] * n + h[14] * c + h[15] * f),
                      o[1]),
                    n = o[5],
                    c = o[9],
                    f = o[13],
                    s =
                      ((o[1] = h[0] * s + h[1] * n + h[2] * c + h[3] * f),
                      (o[5] = h[4] * s + h[5] * n + h[6] * c + h[7] * f),
                      (o[9] = h[8] * s + h[9] * n + h[10] * c + h[11] * f),
                      (o[13] = h[12] * s + h[13] * n + h[14] * c + h[15] * f),
                      o[2]),
                    n = o[6],
                    c = o[10],
                    f = o[14],
                    s =
                      ((o[2] = h[0] * s + h[1] * n + h[2] * c + h[3] * f),
                      (o[6] = h[4] * s + h[5] * n + h[6] * c + h[7] * f),
                      (o[10] = h[8] * s + h[9] * n + h[10] * c + h[11] * f),
                      (o[14] = h[12] * s + h[13] * n + h[14] * c + h[15] * f),
                      o[3]),
                    n = o[7],
                    c = o[11],
                    f = o[15];
                  return (
                    (o[3] = h[0] * s + h[1] * n + h[2] * c + h[3] * f),
                    (o[7] = h[4] * s + h[5] * n + h[6] * c + h[7] * f),
                    (o[11] = h[8] * s + h[9] * n + h[10] * c + h[11] * f),
                    (o[15] = h[12] * s + h[13] * n + h[14] * c + h[15] * f),
                    this
                  );
                }),
                (u.default.Matrix.prototype.scale = function (d, h, o) {
                  return (
                    d instanceof u.default.Vector
                      ? ((h = d.y), (o = d.z), (d = d.x))
                      : d instanceof Array &&
                        ((h = d[1]), (o = d[2]), (d = d[0])),
                    (this.mat4[0] *= d),
                    (this.mat4[1] *= d),
                    (this.mat4[2] *= d),
                    (this.mat4[3] *= d),
                    (this.mat4[4] *= h),
                    (this.mat4[5] *= h),
                    (this.mat4[6] *= h),
                    (this.mat4[7] *= h),
                    (this.mat4[8] *= o),
                    (this.mat4[9] *= o),
                    (this.mat4[10] *= o),
                    (this.mat4[11] *= o),
                    this
                  );
                }),
                (u.default.Matrix.prototype.rotate = function (O, $, Z, s) {
                  $ instanceof u.default.Vector
                    ? ((Z = $.y), (s = $.z), ($ = $.x))
                    : $ instanceof Array &&
                      ((Z = $[1]), (s = $[2]), ($ = $[0]));
                  var n = Math.sqrt($ * $ + Z * Z + s * s),
                    n =
                      (($ *= 1 / n), (Z *= 1 / n), (s *= 1 / n), this.mat4[0]),
                    c = this.mat4[1],
                    f = this.mat4[2],
                    g = this.mat4[3],
                    _ = this.mat4[4],
                    x = this.mat4[5],
                    j = this.mat4[6],
                    v = this.mat4[7],
                    M = this.mat4[8],
                    C = this.mat4[9],
                    k = this.mat4[10],
                    A = this.mat4[11],
                    R = Math.sin(O),
                    O = Math.cos(O),
                    D = 1 - O,
                    N = $ * $ * D + O,
                    U = Z * $ * D + s * R,
                    H = s * $ * D - Z * R,
                    q = $ * Z * D - s * R,
                    z = Z * Z * D + O,
                    X = s * Z * D + $ * R,
                    W = $ * s * D + Z * R,
                    Z = Z * s * D - $ * R,
                    $ = s * s * D + O;
                  return (
                    (this.mat4[0] = n * N + _ * U + M * H),
                    (this.mat4[1] = c * N + x * U + C * H),
                    (this.mat4[2] = f * N + j * U + k * H),
                    (this.mat4[3] = g * N + v * U + A * H),
                    (this.mat4[4] = n * q + _ * z + M * X),
                    (this.mat4[5] = c * q + x * z + C * X),
                    (this.mat4[6] = f * q + j * z + k * X),
                    (this.mat4[7] = g * q + v * z + A * X),
                    (this.mat4[8] = n * W + _ * Z + M * $),
                    (this.mat4[9] = c * W + x * Z + C * $),
                    (this.mat4[10] = f * W + j * Z + k * $),
                    (this.mat4[11] = g * W + v * Z + A * $),
                    this
                  );
                }),
                (u.default.Matrix.prototype.translate = function (s) {
                  var h = s[0],
                    o = s[1],
                    s = s[2] || 0;
                  (this.mat4[12] +=
                    this.mat4[0] * h + this.mat4[4] * o + this.mat4[8] * s),
                    (this.mat4[13] +=
                      this.mat4[1] * h + this.mat4[5] * o + this.mat4[9] * s),
                    (this.mat4[14] +=
                      this.mat4[2] * h + this.mat4[6] * o + this.mat4[10] * s),
                    (this.mat4[15] +=
                      this.mat4[3] * h + this.mat4[7] * o + this.mat4[11] * s);
                }),
                (u.default.Matrix.prototype.rotateX = function (d) {
                  this.rotate(d, 1, 0, 0);
                }),
                (u.default.Matrix.prototype.rotateY = function (d) {
                  this.rotate(d, 0, 1, 0);
                }),
                (u.default.Matrix.prototype.rotateZ = function (d) {
                  this.rotate(d, 0, 0, 1);
                }),
                (u.default.Matrix.prototype.perspective = function (
                  n,
                  h,
                  o,
                  s,
                ) {
                  var n = 1 / Math.tan(n / 2),
                    c = 1 / (o - s);
                  return (
                    (this.mat4[0] = n / h),
                    (this.mat4[1] = 0),
                    (this.mat4[2] = 0),
                    (this.mat4[3] = 0),
                    (this.mat4[4] = 0),
                    (this.mat4[5] = n),
                    (this.mat4[6] = 0),
                    (this.mat4[7] = 0),
                    (this.mat4[8] = 0),
                    (this.mat4[9] = 0),
                    (this.mat4[10] = (s + o) * c),
                    (this.mat4[11] = -1),
                    (this.mat4[12] = 0),
                    (this.mat4[13] = 0),
                    (this.mat4[14] = 2 * s * o * c),
                    (this.mat4[15] = 0),
                    this
                  );
                }),
                (u.default.Matrix.prototype.ortho = function (
                  d,
                  h,
                  o,
                  s,
                  n,
                  c,
                ) {
                  var f = 1 / (d - h),
                    g = 1 / (o - s),
                    _ = 1 / (n - c);
                  return (
                    (this.mat4[0] = -2 * f),
                    (this.mat4[1] = 0),
                    (this.mat4[2] = 0),
                    (this.mat4[3] = 0),
                    (this.mat4[4] = 0),
                    (this.mat4[5] = -2 * g),
                    (this.mat4[6] = 0),
                    (this.mat4[7] = 0),
                    (this.mat4[8] = 0),
                    (this.mat4[9] = 0),
                    (this.mat4[10] = 2 * _),
                    (this.mat4[11] = 0),
                    (this.mat4[12] = (d + h) * f),
                    (this.mat4[13] = (s + o) * g),
                    (this.mat4[14] = (c + n) * _),
                    (this.mat4[15] = 1),
                    this
                  );
                }),
                u.default.Matrix);
            y.default = l;
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.float32-array': 203,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
          },
        ],
        318: [
          function (t, b, y) {
            t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.map'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0),
              (t =
                (t = t('../core/main')) && t.__esModule ? t : { default: t }),
              (t.default.RenderBuffer = function (u, a, r, l, d, h) {
                (this.size = u),
                  (this.src = a),
                  (this.dst = r),
                  (this.attr = l),
                  (this._renderer = d),
                  (this.map = h);
              }),
              (t.default.RenderBuffer.prototype._prepareBuffer = function (
                u,
                a,
              ) {
                var r,
                  l,
                  d,
                  s = a.attributes,
                  h = this._renderer.GL,
                  o = u.model || u,
                  s = s[this.attr];
                s &&
                  ((r = u[this.dst]),
                  0 < (l = o[this.src]).length
                    ? ((d = !r) && (u[this.dst] = r = h.createBuffer()),
                      h.bindBuffer(h.ARRAY_BUFFER, r),
                      (!d && o.dirtyFlags[this.src] === !1) ||
                        ((d = (u = this.map) ? u(l) : l),
                        this._renderer._bindBuffer(r, h.ARRAY_BUFFER, d),
                        (o.dirtyFlags[this.src] = !1)),
                      a.enableAttrib(s, this.size))
                    : (u = s.location) !== -1 &&
                      this._renderer.registerEnabled[u] &&
                      (h.disableVertexAttribArray(u),
                      (this._renderer.registerEnabled[u] = !1)));
              }),
              (t = t.default.RenderBuffer),
              (y.default = t);
          },
          { '../core/main': 267, 'core-js/modules/es.array.map': 161 },
        ],
        319: [
          function (t, b, y) {
            function u(n) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (c) {
                      return typeof c;
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : typeof c;
                    })(n);
            }
            function a(n) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (c) {
                      return u(c);
                    }
                  : function (c) {
                      return c &&
                        typeof Symbol == 'function' &&
                        c.constructor === Symbol &&
                        c !== Symbol.prototype
                        ? 'symbol'
                        : u(c);
                    })(n);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.concat'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.from'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.map'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (s = t('../core/main')) && s.__esModule ? s : { default: s },
              l = (function (n) {
                if (n && n.__esModule) return n;
                if (n === null || (a(n) !== 'object' && typeof n != 'function'))
                  return { default: n };
                var c = d();
                if (c && c.has(n)) return c.get(n);
                var f,
                  g = {},
                  _ = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (f in n) {
                  var x;
                  Object.prototype.hasOwnProperty.call(n, f) &&
                    ((x = _ ? Object.getOwnPropertyDescriptor(n, f) : null) &&
                    (x.get || x.set)
                      ? Object.defineProperty(g, f, x)
                      : (g[f] = n[f]));
                }
                return (g.default = n), c && c.set(n, g), g;
              })(t('../core/constants'));
            function d() {
              var n;
              return typeof WeakMap != 'function'
                ? null
                : ((n = new WeakMap()),
                  (d = function () {
                    return n;
                  }),
                  n);
            }
            function h(n) {
              return (
                (function (c) {
                  if (Array.isArray(c)) {
                    for (var f = 0, g = new Array(c.length); f < c.length; f++)
                      g[f] = c[f];
                    return g;
                  }
                })(n) ||
                (function (c) {
                  if (
                    Symbol.iterator in Object(c) ||
                    Object.prototype.toString.call(c) === '[object Arguments]'
                  )
                    return Array.from(c);
                })(n) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            t('./p5.RenderBuffer'),
              (r.default.RendererGL.prototype.beginShape = function (n) {
                return (
                  (this.immediateMode.shapeMode = n !== void 0 ? n : l.TESS),
                  this.immediateMode.geometry.reset(),
                  this
                );
              });
            var o = {
                vertices: 1,
                vertexNormals: 1,
                vertexColors: 4,
                vertexStrokeColors: 4,
                uvs: 2,
              },
              s =
                ((r.default.RendererGL.prototype.vertex = function (n, c) {
                  if (
                    this.immediateMode.shapeMode === l.QUADS &&
                    this.immediateMode.geometry.vertices.length % 6 == 3
                  )
                    for (var f in o) {
                      var g = o[f],
                        f = this.immediateMode.geometry[f];
                      f.push.apply(
                        f,
                        h(f.slice(f.length - 3 * g, f.length - 2 * g)).concat(
                          h(f.slice(f.length - g, f.length)),
                        ),
                      );
                    }
                  var _,
                    x,
                    j = (_ = x = 0),
                    v =
                      (arguments.length === 3
                        ? (j = arguments[2])
                        : arguments.length === 4
                        ? ((_ = arguments[2]), (x = arguments[3]))
                        : arguments.length === 5 &&
                          ((j = arguments[2]),
                          (_ = arguments[3]),
                          (x = arguments[4])),
                      new r.default.Vector(n, c, j)),
                    v =
                      (this.immediateMode.geometry.vertices.push(v),
                      this.immediateMode.geometry.vertexNormals.push(
                        this._currentNormal,
                      ),
                      this.curFillColor || [0.5, 0.5, 0.5, 1]),
                    v =
                      (this.immediateMode.geometry.vertexColors.push(
                        v[0],
                        v[1],
                        v[2],
                        v[3],
                      ),
                      this.curStrokeColor || [0.5, 0.5, 0.5, 1]);
                  return (
                    this.immediateMode.geometry.vertexStrokeColors.push(
                      v[0],
                      v[1],
                      v[2],
                      v[3],
                    ),
                    this.textureMode === l.IMAGE &&
                      (this._tex !== null
                        ? 0 < this._tex.width &&
                          0 < this._tex.height &&
                          ((_ /= this._tex.width), (x /= this._tex.height))
                        : !this.isProcessingVertices &&
                          this._tex === null &&
                          4 <= arguments.length &&
                          console.warn(
                            'You must first call texture() before using vertex() with image based u and v coordinates',
                          )),
                    this.immediateMode.geometry.uvs.push(_, x),
                    (this.immediateMode._bezierVertex[0] = n),
                    (this.immediateMode._bezierVertex[1] = c),
                    (this.immediateMode._bezierVertex[2] = j),
                    (this.immediateMode._quadraticVertex[0] = n),
                    (this.immediateMode._quadraticVertex[1] = c),
                    (this.immediateMode._quadraticVertex[2] = j),
                    this
                  );
                }),
                (r.default.RendererGL.prototype.normal = function (n, c, f) {
                  return (
                    n instanceof r.default.Vector
                      ? (this._currentNormal = n)
                      : (this._currentNormal = new r.default.Vector(n, c, f)),
                    this
                  );
                }),
                (r.default.RendererGL.prototype.endShape = function (
                  n,
                  c,
                  f,
                  g,
                  _,
                  x,
                ) {
                  return (
                    this.immediateMode.shapeMode === l.POINTS
                      ? this._drawPoints(
                          this.immediateMode.geometry.vertices,
                          this.immediateMode.buffers.point,
                        )
                      : ((this.isProcessingVertices = !0),
                        this._processVertices.apply(this, arguments),
                        (this.isProcessingVertices = !1),
                        this._doFill &&
                          1 < this.immediateMode.geometry.vertices.length &&
                          this._drawImmediateFill(),
                        this._doStroke &&
                          1 < this.immediateMode.geometry.lineVertices.length &&
                          this._drawImmediateStroke(),
                        (this.isBezier = !1),
                        (this.isQuadratic = !1),
                        (this.isCurve = !1),
                        (this.immediateMode._bezierVertex.length = 0),
                        (this.immediateMode._quadraticVertex.length = 0),
                        (this.immediateMode._curveVertex.length = 0)),
                    this
                  );
                }),
                (r.default.RendererGL.prototype._processVertices = function (
                  n,
                ) {
                  var c;
                  this.immediateMode.geometry.vertices.length !== 0 &&
                    ((c = this._doStroke),
                    (n = n === l.CLOSE),
                    c &&
                      ((this.immediateMode.geometry.edges =
                        this._calculateEdges(
                          this.immediateMode.shapeMode,
                          this.immediateMode.geometry.vertices,
                          n,
                        )),
                      this.immediateMode.geometry._edgesToVertices()),
                    (c = this.immediateMode.shapeMode === l.TESS),
                    this._doFill &&
                      (this.isBezier ||
                        this.isQuadratic ||
                        this.isCurve ||
                        c) &&
                      this.immediateMode.shapeMode !== l.LINES &&
                      this._tesselateShape());
                }),
                (r.default.RendererGL.prototype._calculateEdges = function (
                  n,
                  c,
                  f,
                ) {
                  var g = [],
                    _ = 0;
                  switch (n) {
                    case l.TRIANGLE_STRIP:
                      for (_ = 0; _ < c.length - 2; _++)
                        g.push([_, _ + 1]), g.push([_, _ + 2]);
                      g.push([_, _ + 1]);
                      break;
                    case l.TRIANGLE_FAN:
                      for (_ = 1; _ < c.length - 1; _++)
                        g.push([0, _]), g.push([_, _ + 1]);
                      g.push([0, c.length - 1]);
                      break;
                    case l.TRIANGLES:
                      for (_ = 0; _ < c.length - 2; _ += 3)
                        g.push([_, _ + 1]),
                          g.push([_ + 1, _ + 2]),
                          g.push([_ + 2, _]);
                      break;
                    case l.LINES:
                      for (_ = 0; _ < c.length - 1; _ += 2) g.push([_, _ + 1]);
                      break;
                    case l.QUADS:
                      for (_ = 0; _ < c.length - 5; _ += 6)
                        g.push([_, _ + 1]),
                          g.push([_ + 1, _ + 2]),
                          g.push([_ + 3, _ + 5]),
                          g.push([_ + 4, _ + 5]);
                      break;
                    case l.QUAD_STRIP:
                      for (_ = 0; _ < c.length - 2; _ += 2)
                        g.push([_, _ + 1]),
                          g.push([_, _ + 2]),
                          g.push([_ + 1, _ + 3]);
                      g.push([_, _ + 1]);
                      break;
                    default:
                      for (_ = 0; _ < c.length - 1; _++) g.push([_, _ + 1]);
                  }
                  return f && g.push([c.length - 1, 0]), g;
                }),
                (r.default.RendererGL.prototype._tesselateShape = function () {
                  for (
                    var n = this,
                      c =
                        ((this.immediateMode.shapeMode = l.TRIANGLES),
                        [
                          this._flatten(
                            this.immediateMode.geometry.vertices.map(function (
                              j,
                              v,
                            ) {
                              return [
                                j.x,
                                j.y,
                                j.z,
                                n.immediateMode.geometry.uvs[2 * v],
                                n.immediateMode.geometry.uvs[2 * v + 1],
                                n.immediateMode.geometry.vertexColors[4 * v],
                                n.immediateMode.geometry.vertexColors[
                                  4 * v + 1
                                ],
                                n.immediateMode.geometry.vertexColors[
                                  4 * v + 2
                                ],
                                n.immediateMode.geometry.vertexColors[
                                  4 * v + 3
                                ],
                                n.immediateMode.geometry.vertexNormals[v].x,
                                n.immediateMode.geometry.vertexNormals[v].y,
                                n.immediateMode.geometry.vertexNormals[v].z,
                              ];
                            }),
                          ),
                        ]),
                      f = this._triangulate(c),
                      g =
                        ((this.immediateMode.geometry.vertices = []),
                        (this.immediateMode.geometry.vertexNormals = []),
                        (this.immediateMode.geometry.uvs = []),
                        []),
                      _ = 0,
                      x = f.length;
                    _ < x;
                    _ += r.default.RendererGL.prototype.tessyVertexSize
                  )
                    g.push.apply(g, h(f.slice(_ + 5, _ + 9))),
                      this.normal.apply(this, h(f.slice(_ + 9, _ + 12))),
                      this.vertex.apply(this, h(f.slice(_, _ + 5)));
                  this.immediateMode.geometry.vertexColors = g;
                }),
                (r.default.RendererGL.prototype._drawImmediateFill =
                  function () {
                    var n = this.GL,
                      c =
                        ((this._useVertexColor =
                          0 < this.immediateMode.geometry.vertexColors.length),
                        this._getImmediateFillShader()),
                      f = (this._setFillUniforms(c), !0),
                      g = !1,
                      _ = void 0;
                    try {
                      for (
                        var x,
                          j =
                            this.immediateMode.buffers.fill[Symbol.iterator]();
                        !(f = (x = j.next()).done);
                        f = !0
                      )
                        x.value._prepareBuffer(this.immediateMode.geometry, c);
                    } catch (v) {
                      (g = !0), (_ = v);
                    } finally {
                      try {
                        f || j.return == null || j.return();
                      } finally {
                        if (g) throw _;
                      }
                    }
                    (this.immediateMode.shapeMode !== l.LINE_STRIP &&
                      this.immediateMode.shapeMode !== l.LINES) ||
                      (this.immediateMode.shapeMode = l.TRIANGLE_FAN),
                      this.immediateMode.shapeMode === l.QUADS
                        ? (this.immediateMode.shapeMode = l.TRIANGLES)
                        : this.immediateMode.shapeMode === l.QUAD_STRIP &&
                          (this.immediateMode.shapeMode = l.TRIANGLE_STRIP),
                      this._applyColorBlend(this.curFillColor),
                      n.drawArrays(
                        this.immediateMode.shapeMode,
                        0,
                        this.immediateMode.geometry.vertices.length,
                      ),
                      c.unbindShader();
                  }),
                (r.default.RendererGL.prototype._drawImmediateStroke =
                  function () {
                    var n = this.GL,
                      c = n.isEnabled(n.CULL_FACE),
                      f =
                        (n.disable(n.CULL_FACE),
                        this._getImmediateStrokeShader()),
                      g =
                        ((this._useLineColor =
                          0 <
                          this.immediateMode.geometry.vertexStrokeColors
                            .length),
                        this._setStrokeUniforms(f),
                        !0),
                      _ = !1,
                      x = void 0;
                    try {
                      for (
                        var j,
                          v =
                            this.immediateMode.buffers.stroke[
                              Symbol.iterator
                            ]();
                        !(g = (j = v.next()).done);
                        g = !0
                      )
                        j.value._prepareBuffer(this.immediateMode.geometry, f);
                    } catch (M) {
                      (_ = !0), (x = M);
                    } finally {
                      try {
                        g || v.return == null || v.return();
                      } finally {
                        if (_) throw x;
                      }
                    }
                    this._applyColorBlend(this.curStrokeColor),
                      n.drawArrays(
                        n.TRIANGLES,
                        0,
                        this.immediateMode.geometry.lineVertices.length,
                      ),
                      c && n.enable(n.CULL_FACE),
                      f.unbindShader();
                  }),
                r.default.RendererGL);
            y.default = s;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            './p5.RenderBuffer': 318,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 152,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.map': 161,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        320: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.some'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.float32-array'),
              t('core-js/modules/es.typed-array.uint16-array'),
              t('core-js/modules/es.typed-array.uint32-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.fill'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.some'),
              t('core-js/modules/es.object.keys'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.float32-array'),
              t('core-js/modules/es.typed-array.uint16-array'),
              t('core-js/modules/es.typed-array.uint32-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (r = t('../core/main')) && r.__esModule ? r : { default: r };
            t('./p5.RendererGL'), t('./p5.RenderBuffer');
            var a = 0,
              r =
                ((u.default.RendererGL.prototype._initBufferDefaults =
                  function (l) {
                    var d;
                    return (
                      this._freeBuffers(l),
                      1e3 < ++a &&
                        ((d = Object.keys(this.retainedMode.geometry)[0]),
                        delete this.retainedMode.geometry[d],
                        a--),
                      (this.retainedMode.geometry[l] = {})
                    );
                  }),
                (u.default.RendererGL.prototype._freeBuffers = function (l) {
                  var d,
                    h = this.retainedMode.geometry[l];
                  function o(s) {
                    var n = !0,
                      c = !1,
                      f = void 0;
                    try {
                      for (
                        var g, _ = s[Symbol.iterator]();
                        !(n = (g = _.next()).done);
                        n = !0
                      ) {
                        var x = g.value;
                        h[x.dst] &&
                          (d.deleteBuffer(h[x.dst]), (h[x.dst] = null));
                      }
                    } catch (j) {
                      (c = !0), (f = j);
                    } finally {
                      try {
                        n || _.return == null || _.return();
                      } finally {
                        if (c) throw f;
                      }
                    }
                  }
                  h &&
                    (delete this.retainedMode.geometry[l],
                    a--,
                    (d = this.GL),
                    h.indexBuffer && d.deleteBuffer(h.indexBuffer),
                    o(this.retainedMode.buffers.stroke),
                    o(this.retainedMode.buffers.fill));
                }),
                (u.default.RendererGL.prototype.createBuffers = function (
                  c,
                  d,
                ) {
                  var h,
                    o,
                    s,
                    n = this.GL,
                    c = this._initBufferDefaults(c),
                    f = ((c.model = d), c.indexBuffer);
                  return (
                    d.faces.length
                      ? ((f = f || (c.indexBuffer = n.createBuffer())),
                        (s = (o = (h = u.default.RendererGL.prototype._flatten(
                          d.faces,
                        )).some(function (g) {
                          return 65535 < g;
                        }))
                          ? Uint32Array
                          : Uint16Array),
                        this._bindBuffer(f, n.ELEMENT_ARRAY_BUFFER, h, s),
                        (c.indexBufferType = o
                          ? n.UNSIGNED_INT
                          : n.UNSIGNED_SHORT),
                        (c.vertexCount = 3 * d.faces.length))
                      : (f && (n.deleteBuffer(f), (c.indexBuffer = null)),
                        (c.vertexCount = d.vertices ? d.vertices.length : 0)),
                    (c.lineVertexCount = d.lineVertices
                      ? d.lineVertices.length
                      : 0),
                    c
                  );
                }),
                (u.default.RendererGL.prototype.drawBuffers = function (l) {
                  var d = this.GL,
                    h = this.retainedMode.geometry[l];
                  if (this._doStroke && 0 < h.lineVertexCount) {
                    var o = d.isEnabled(d.CULL_FACE),
                      s =
                        (d.disable(d.CULL_FACE),
                        this._getRetainedStrokeShader()),
                      n =
                        ((this._useLineColor =
                          0 < h.model.vertexStrokeColors.length),
                        this._setStrokeUniforms(s),
                        !0),
                      c = !1,
                      f = void 0;
                    try {
                      for (
                        var g,
                          _ =
                            this.retainedMode.buffers.stroke[Symbol.iterator]();
                        !(n = (g = _.next()).done);
                        n = !0
                      )
                        g.value._prepareBuffer(h, s);
                    } catch (C) {
                      (c = !0), (f = C);
                    } finally {
                      try {
                        n || _.return == null || _.return();
                      } finally {
                        if (c) throw f;
                      }
                    }
                    this._applyColorBlend(this.curStrokeColor),
                      this._drawArrays(d.TRIANGLES, l),
                      o && d.enable(d.CULL_FACE),
                      s.unbindShader();
                  }
                  if (this._doFill) {
                    this._useVertexColor = 0 < h.model.vertexColors.length;
                    var x = this._getRetainedFillShader(),
                      j = (this._setFillUniforms(x), !0),
                      c = !1,
                      f = void 0;
                    try {
                      for (
                        var v,
                          M = this.retainedMode.buffers.fill[Symbol.iterator]();
                        !(j = (v = M.next()).done);
                        j = !0
                      )
                        v.value._prepareBuffer(h, x);
                    } catch (A) {
                      (c = !0), (f = A);
                    } finally {
                      try {
                        j || M.return == null || M.return();
                      } finally {
                        if (c) throw f;
                      }
                    }
                    h.indexBuffer &&
                      this._bindBuffer(h.indexBuffer, d.ELEMENT_ARRAY_BUFFER),
                      this._applyColorBlend(this.curFillColor),
                      this._drawElements(d.TRIANGLES, l),
                      x.unbindShader();
                  }
                  return this;
                }),
                (u.default.RendererGL.prototype.drawBuffersScaled = function (
                  l,
                  d,
                  h,
                  o,
                ) {
                  var s = this.uMVMatrix.copy();
                  try {
                    this.uMVMatrix.scale(d, h, o), this.drawBuffers(l);
                  } finally {
                    this.uMVMatrix = s;
                  }
                }),
                (u.default.RendererGL.prototype._drawArrays = function (l, d) {
                  return (
                    this.GL.drawArrays(
                      l,
                      0,
                      this.retainedMode.geometry[d].lineVertexCount,
                    ),
                    this
                  );
                }),
                (u.default.RendererGL.prototype._drawElements = function (
                  l,
                  h,
                ) {
                  var h = this.retainedMode.geometry[h],
                    o = this.GL;
                  if (h.indexBuffer) {
                    if (
                      h.indexBufferType === o.UNSIGNED_INT &&
                      !o.getExtension('OES_element_index_uint')
                    )
                      throw new Error(
                        'Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.',
                      );
                    o.drawElements(
                      o.TRIANGLES,
                      h.vertexCount,
                      h.indexBufferType,
                      0,
                    );
                  } else o.drawArrays(l || o.TRIANGLES, 0, h.vertexCount);
                }),
                (u.default.RendererGL.prototype._drawPoints = function (l, d) {
                  var h = this.GL,
                    o = this._getImmediatePointShader();
                  this._setPointUniforms(o),
                    this._bindBuffer(
                      d,
                      h.ARRAY_BUFFER,
                      this._vToNArray(l),
                      Float32Array,
                      h.STATIC_DRAW,
                    ),
                    o.enableAttrib(o.attributes.aPosition, 3),
                    h.drawArrays(h.Points, 0, l.length),
                    o.unbindShader();
                }),
                u.default.RendererGL);
            y.default = r;
          },
          {
            '../core/main': 267,
            './p5.RenderBuffer': 318,
            './p5.RendererGL': 321,
            'core-js/modules/es.array.fill': 152,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.some': 163,
            'core-js/modules/es.object.keys': 176,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.float32-array': 203,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint16-array': 224,
            'core-js/modules/es.typed-array.uint32-array': 225,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        321: [
          function (j, b, y) {
            function u(v) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (M) {
                      return typeof M;
                    }
                  : function (M) {
                      return M &&
                        typeof Symbol == 'function' &&
                        M.constructor === Symbol &&
                        M !== Symbol.prototype
                        ? 'symbol'
                        : typeof M;
                    })(v);
            }
            function a(v) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (M) {
                      return u(M);
                    }
                  : function (M) {
                      return M &&
                        typeof Symbol == 'function' &&
                        M.constructor === Symbol &&
                        M !== Symbol.prototype
                        ? 'symbol'
                        : u(M);
                    })(v);
            }
            j('core-js/modules/es.symbol'),
              j('core-js/modules/es.symbol.description'),
              j('core-js/modules/es.symbol.iterator'),
              j('core-js/modules/es.array.concat'),
              j('core-js/modules/es.array.fill'),
              j('core-js/modules/es.array.filter'),
              j('core-js/modules/es.array.from'),
              j('core-js/modules/es.array.includes'),
              j('core-js/modules/es.array.iterator'),
              j('core-js/modules/es.array.slice'),
              j('core-js/modules/es.object.assign'),
              j('core-js/modules/es.object.get-own-property-descriptor'),
              j('core-js/modules/es.object.to-string'),
              j('core-js/modules/es.regexp.to-string'),
              j('core-js/modules/es.string.includes'),
              j('core-js/modules/es.string.iterator'),
              j('core-js/modules/es.typed-array.float32-array'),
              j('core-js/modules/es.typed-array.float64-array'),
              j('core-js/modules/es.typed-array.int16-array'),
              j('core-js/modules/es.typed-array.uint8-array'),
              j('core-js/modules/es.typed-array.uint16-array'),
              j('core-js/modules/es.typed-array.uint32-array'),
              j('core-js/modules/es.typed-array.copy-within'),
              j('core-js/modules/es.typed-array.every'),
              j('core-js/modules/es.typed-array.fill'),
              j('core-js/modules/es.typed-array.filter'),
              j('core-js/modules/es.typed-array.find'),
              j('core-js/modules/es.typed-array.find-index'),
              j('core-js/modules/es.typed-array.for-each'),
              j('core-js/modules/es.typed-array.includes'),
              j('core-js/modules/es.typed-array.index-of'),
              j('core-js/modules/es.typed-array.iterator'),
              j('core-js/modules/es.typed-array.join'),
              j('core-js/modules/es.typed-array.last-index-of'),
              j('core-js/modules/es.typed-array.map'),
              j('core-js/modules/es.typed-array.reduce'),
              j('core-js/modules/es.typed-array.reduce-right'),
              j('core-js/modules/es.typed-array.reverse'),
              j('core-js/modules/es.typed-array.set'),
              j('core-js/modules/es.typed-array.slice'),
              j('core-js/modules/es.typed-array.some'),
              j('core-js/modules/es.typed-array.sort'),
              j('core-js/modules/es.typed-array.subarray'),
              j('core-js/modules/es.typed-array.to-locale-string'),
              j('core-js/modules/es.typed-array.to-string'),
              j('core-js/modules/es.weak-map'),
              j('core-js/modules/web.dom-collections.iterator'),
              j('core-js/modules/es.symbol'),
              j('core-js/modules/es.symbol.description'),
              j('core-js/modules/es.symbol.iterator'),
              j('core-js/modules/es.array.concat'),
              j('core-js/modules/es.array.fill'),
              j('core-js/modules/es.array.filter'),
              j('core-js/modules/es.array.from'),
              j('core-js/modules/es.array.includes'),
              j('core-js/modules/es.array.iterator'),
              j('core-js/modules/es.array.slice'),
              j('core-js/modules/es.object.assign'),
              j('core-js/modules/es.object.to-string'),
              j('core-js/modules/es.regexp.to-string'),
              j('core-js/modules/es.string.includes'),
              j('core-js/modules/es.string.iterator'),
              j('core-js/modules/es.typed-array.float32-array'),
              j('core-js/modules/es.typed-array.float64-array'),
              j('core-js/modules/es.typed-array.int16-array'),
              j('core-js/modules/es.typed-array.uint8-array'),
              j('core-js/modules/es.typed-array.uint16-array'),
              j('core-js/modules/es.typed-array.uint32-array'),
              j('core-js/modules/es.typed-array.copy-within'),
              j('core-js/modules/es.typed-array.every'),
              j('core-js/modules/es.typed-array.fill'),
              j('core-js/modules/es.typed-array.filter'),
              j('core-js/modules/es.typed-array.find'),
              j('core-js/modules/es.typed-array.find-index'),
              j('core-js/modules/es.typed-array.for-each'),
              j('core-js/modules/es.typed-array.includes'),
              j('core-js/modules/es.typed-array.index-of'),
              j('core-js/modules/es.typed-array.iterator'),
              j('core-js/modules/es.typed-array.join'),
              j('core-js/modules/es.typed-array.last-index-of'),
              j('core-js/modules/es.typed-array.map'),
              j('core-js/modules/es.typed-array.reduce'),
              j('core-js/modules/es.typed-array.reduce-right'),
              j('core-js/modules/es.typed-array.reverse'),
              j('core-js/modules/es.typed-array.set'),
              j('core-js/modules/es.typed-array.slice'),
              j('core-js/modules/es.typed-array.some'),
              j('core-js/modules/es.typed-array.sort'),
              j('core-js/modules/es.typed-array.subarray'),
              j('core-js/modules/es.typed-array.to-locale-string'),
              j('core-js/modules/es.typed-array.to-string'),
              j('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r = o(j('../core/main')),
              l = (function (v) {
                if (v && v.__esModule) return v;
                if (v === null || (a(v) !== 'object' && typeof v != 'function'))
                  return { default: v };
                var M = h();
                if (M && M.has(v)) return M.get(v);
                var C,
                  k = {},
                  A = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (C in v) {
                  var R;
                  Object.prototype.hasOwnProperty.call(v, C) &&
                    ((R = A ? Object.getOwnPropertyDescriptor(v, C) : null) &&
                    (R.get || R.set)
                      ? Object.defineProperty(k, C, R)
                      : (k[C] = v[C]));
                }
                return (k.default = v), M && M.set(v, k), k;
              })(j('../core/constants')),
              d = o(j('libtess'));
            j('./p5.Shader'),
              j('./p5.Camera'),
              j('../core/p5.Renderer'),
              j('./p5.Matrix'),
              j('path');
            function h() {
              var v;
              return typeof WeakMap != 'function'
                ? null
                : ((v = new WeakMap()),
                  (h = function () {
                    return v;
                  }),
                  v);
            }
            function o(v) {
              return v && v.__esModule ? v : { default: v };
            }
            function s(v) {
              return (
                (function (M) {
                  if (Array.isArray(M)) {
                    for (var C = 0, k = new Array(M.length); C < M.length; C++)
                      k[C] = M[C];
                    return k;
                  }
                })(v) ||
                (function (M) {
                  if (
                    Symbol.iterator in Object(M) ||
                    Object.prototype.toString.call(M) === '[object Arguments]'
                  )
                    return Array.from(M);
                })(v) ||
                (function () {
                  throw new TypeError(
                    'Invalid attempt to spread non-iterable instance',
                  );
                })()
              );
            }
            function n(v, M) {
              (_ += '#define STROKE_CAP_'.concat(v, ' ').concat(
                M,
                `
`,
              )),
                (f[l[v]] = M);
            }
            function c(v, M) {
              (_ += '#define STROKE_JOIN_'.concat(v, ' ').concat(
                M,
                `
`,
              )),
                (g[l[v]] = M);
            }
            var f = {},
              g = {},
              _ = '',
              j =
                (n('ROUND', 0),
                n('PROJECT', 1),
                n('SQUARE', 2),
                c('ROUND', 0),
                c('MITER', 1),
                c('BEVEL', 2),
                `precision highp float;
precision highp int;

uniform mat4 uViewMatrix;

uniform bool uUseLighting;

uniform int uAmbientLightCount;
uniform vec3 uAmbientColor[5];

uniform int uDirectionalLightCount;
uniform vec3 uLightingDirection[5];
uniform vec3 uDirectionalDiffuseColors[5];
uniform vec3 uDirectionalSpecularColors[5];

uniform int uPointLightCount;
uniform vec3 uPointLightLocation[5];
uniform vec3 uPointLightDiffuseColors[5];	
uniform vec3 uPointLightSpecularColors[5];

uniform int uSpotLightCount;
uniform float uSpotLightAngle[5];
uniform float uSpotLightConc[5];
uniform vec3 uSpotLightDiffuseColors[5];
uniform vec3 uSpotLightSpecularColors[5];
uniform vec3 uSpotLightLocation[5];
uniform vec3 uSpotLightDirection[5];

uniform bool uSpecular;
uniform float uShininess;

uniform float uConstantAttenuation;
uniform float uLinearAttenuation;
uniform float uQuadraticAttenuation;

const float specularFactor = 2.0;
const float diffuseFactor = 0.73;

struct LightResult {
  float specular;
  float diffuse;
};

float _phongSpecular(
  vec3 lightDirection,
  vec3 viewDirection,
  vec3 surfaceNormal,
  float shininess) {

  vec3 R = reflect(lightDirection, surfaceNormal);
  return pow(max(0.0, dot(R, viewDirection)), shininess);
}

float _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {
  return max(0.0, dot(-lightDirection, surfaceNormal));
}

LightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {

  vec3 lightDir = normalize(lightVector);

  //compute our diffuse & specular terms
  LightResult lr;
  if (uSpecular)
    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);
  lr.diffuse = _lambertDiffuse(lightDir, normal);
  return lr;
}

void totalLight(
  vec3 modelPosition,
  vec3 normal,
  out vec3 totalDiffuse,
  out vec3 totalSpecular
) {

  totalSpecular = vec3(0.0);

  if (!uUseLighting) {
    totalDiffuse = vec3(1.0);
    return;
  }

  totalDiffuse = vec3(0.0);

  vec3 viewDirection = normalize(-modelPosition);

  for (int j = 0; j < 5; j++) {
    if (j < uDirectionalLightCount) {
      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;
      vec3 lightColor = uDirectionalDiffuseColors[j];
      vec3 specularColor = uDirectionalSpecularColors[j];
      LightResult result = _light(viewDirection, normal, lightVector);
      totalDiffuse += result.diffuse * lightColor;
      totalSpecular += result.specular * lightColor * specularColor;
    }

    if (j < uPointLightCount) {
      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;
      vec3 lightVector = modelPosition - lightPosition;
    
      //calculate attenuation
      float lightDistance = length(lightVector);
      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);
      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];
      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];

      LightResult result = _light(viewDirection, normal, lightVector);
      totalDiffuse += result.diffuse * lightColor;
      totalSpecular += result.specular * lightColor * specularColor;
    }

    if(j < uSpotLightCount) {
      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;
      vec3 lightVector = modelPosition - lightPosition;
    
      float lightDistance = length(lightVector);
      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);

      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;
      float spotDot = dot(normalize(lightVector), normalize(lightDirection));
      float spotFalloff;
      if(spotDot < uSpotLightAngle[j]) {
        spotFalloff = 0.0;
      }
      else {
        spotFalloff = pow(spotDot, uSpotLightConc[j]);
      }
      lightFalloff *= spotFalloff;

      vec3 lightColor = uSpotLightDiffuseColors[j];
      vec3 specularColor = uSpotLightSpecularColors[j];
     
      LightResult result = _light(viewDirection, normal, lightVector);
      
      totalDiffuse += result.diffuse * lightColor * lightFalloff;
      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;
    }
  }

  totalDiffuse *= diffuseFactor;
  totalSpecular *= specularFactor;
}
`),
              x = {
                immediateVert: `attribute vec3 aPosition;
attribute vec4 aVertexColor;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform float uResolution;
uniform float uPointSize;

varying vec4 vColor;
void main(void) {
  vec4 positionVec4 = vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vColor = aVertexColor;
  gl_PointSize = uPointSize;
}
`,
                vertexColorVert: `attribute vec3 aPosition;
attribute vec4 aVertexColor;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;

varying vec4 vColor;

void main(void) {
  vec4 positionVec4 = vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vColor = aVertexColor;
}
`,
                vertexColorFrag: `precision mediump float;
varying vec4 vColor;
void main(void) {
  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;
}
`,
                normalVert: `attribute vec3 aPosition;
attribute vec3 aNormal;
attribute vec2 aTexCoord;
attribute vec4 aVertexColor;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform mat3 uNormalMatrix;

uniform vec4 uMaterialColor;
uniform bool uUseVertexColor;

varying vec3 vVertexNormal;
varying highp vec2 vVertTexCoord;
varying vec4 vColor;

void main(void) {
  vec4 positionVec4 = vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));
  vVertTexCoord = aTexCoord;
  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);
}
`,
                normalFrag: `precision mediump float;
varying vec3 vVertexNormal;
void main(void) {
  gl_FragColor = vec4(vVertexNormal, 1.0);
}`,
                basicFrag: `precision mediump float;
varying vec4 vColor;
void main(void) {
  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;
}
`,
                lightVert:
                  j +
                  `// include lighting.glgl

attribute vec3 aPosition;
attribute vec3 aNormal;
attribute vec2 aTexCoord;
attribute vec4 aVertexColor;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform mat3 uNormalMatrix;

uniform bool uUseVertexColor;
uniform vec4 uMaterialColor;

varying highp vec2 vVertTexCoord;
varying vec3 vDiffuseColor;
varying vec3 vSpecularColor;
varying vec4 vColor;

void main(void) {

  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);
  gl_Position = uProjectionMatrix * viewModelPosition;

  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);
  vVertTexCoord = aTexCoord;

  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);

  for (int i = 0; i < 8; i++) {
    if (i < uAmbientLightCount) {
      vDiffuseColor += uAmbientColor[i];
    }
  }
  
  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);
}
`,
                lightTextureFrag: `precision highp float;

uniform vec4 uTint;
uniform sampler2D uSampler;
uniform bool isTexture;
uniform bool uEmissive;

varying highp vec2 vVertTexCoord;
varying vec3 vDiffuseColor;
varying vec3 vSpecularColor;
varying vec4 vColor;

void main(void) {
  if(uEmissive && !isTexture) {
    gl_FragColor = vColor;
  }
  else {
    vec4 baseColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : vColor;
    gl_FragColor = vec4(gl_FragColor.rgb * vDiffuseColor + vSpecularColor, 1.) * baseColor.a;
  }
}
`,
                phongVert: `precision highp float;
precision highp int;

attribute vec3 aPosition;
attribute vec3 aNormal;
attribute vec2 aTexCoord;
attribute vec4 aVertexColor;

uniform vec3 uAmbientColor[5];

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform mat3 uNormalMatrix;
uniform int uAmbientLightCount;

uniform bool uUseVertexColor;
uniform vec4 uMaterialColor;

varying vec3 vNormal;
varying vec2 vTexCoord;
varying vec3 vViewPosition;
varying vec3 vAmbientColor;
varying vec4 vColor;

void main(void) {

  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);

  // Pass varyings to fragment shader
  vViewPosition = viewModelPosition.xyz;
  gl_Position = uProjectionMatrix * viewModelPosition;  

  vNormal = uNormalMatrix * aNormal;
  vTexCoord = aTexCoord;

  // TODO: this should be a uniform
  vAmbientColor = vec3(0.0);
  for (int i = 0; i < 5; i++) {
    if (i < uAmbientLightCount) {
      vAmbientColor += uAmbientColor[i];
    }
  }
  
  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);
}
`,
                phongFrag:
                  j +
                  `// include lighting.glsl
precision highp float;
precision highp int;

uniform vec4 uSpecularMatColor;
uniform vec4 uAmbientMatColor;
uniform vec4 uEmissiveMatColor;

uniform vec4 uTint;
uniform sampler2D uSampler;
uniform bool isTexture;

varying vec3 vNormal;
varying vec2 vTexCoord;
varying vec3 vViewPosition;
varying vec3 vAmbientColor;
varying vec4 vColor;

void main(void) {

  vec3 diffuse;
  vec3 specular;
  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);

  // Calculating final color as result of all lights (plus emissive term).

  vec4 baseColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : vColor;
  gl_FragColor = vec4(diffuse * baseColor.rgb + 
                    vAmbientColor * uAmbientMatColor.rgb + 
                    specular * uSpecularMatColor.rgb + 
                    uEmissiveMatColor.rgb, 1.) * baseColor.a;
}
`,
                fontVert: `precision mediump float;

attribute vec3 aPosition;
attribute vec2 aTexCoord;
uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;

uniform vec4 uGlyphRect;
uniform float uGlyphOffset;

varying vec2 vTexCoord;
varying float w;

void main() {
  vec4 positionVec4 = vec4(aPosition, 1.0);

  // scale by the size of the glyph's rectangle
  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;

  // Expand glyph bounding boxes by 1px on each side to give a bit of room
  // for antialiasing
  vec2 pixelScale = vec2(
    1. / uModelViewMatrix[0][0],
    1. / uModelViewMatrix[1][1]
  );
  vec2 offset = pixelScale * normalize(aTexCoord - vec2(0.5, 0.5)) * vec2(1., -1.);
  vec2 textureOffset = offset * (1. / vec2(
    uGlyphRect.z - uGlyphRect.x,
    uGlyphRect.w - uGlyphRect.y
  ));

  // move to the corner of the glyph
  positionVec4.xy += uGlyphRect.xy;

  // move to the letter's line offset
  positionVec4.x += uGlyphOffset;

  positionVec4.xy += offset;
  
  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
  vTexCoord = aTexCoord + textureOffset;
  w = gl_Position.w;
}
`,
                fontFrag: `#extension GL_OES_standard_derivatives : enable
precision mediump float;

#if 0
  // simulate integer math using floats
	#define int float
	#define ivec2 vec2
	#define INT(x) float(x)

	int ifloor(float v) { return floor(v); }
	ivec2 ifloor(vec2 v) { return floor(v); }

#else
  // use native integer math
	precision highp int;
	#define INT(x) x

	int ifloor(float v) { return int(v); }
	int ifloor(int v) { return v; }
	ivec2 ifloor(vec2 v) { return ivec2(v); }

#endif

uniform sampler2D uSamplerStrokes;
uniform sampler2D uSamplerRowStrokes;
uniform sampler2D uSamplerRows;
uniform sampler2D uSamplerColStrokes;
uniform sampler2D uSamplerCols;

uniform ivec2 uStrokeImageSize;
uniform ivec2 uCellsImageSize;
uniform ivec2 uGridImageSize;

uniform ivec2 uGridOffset;
uniform ivec2 uGridSize;
uniform vec4 uMaterialColor;

varying vec2 vTexCoord;

// some helper functions
int round(float v) { return ifloor(v + 0.5); }
ivec2 round(vec2 v) { return ifloor(v + 0.5); }
float saturate(float v) { return clamp(v, 0.0, 1.0); }
vec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }

int mul(float v1, int v2) {
  return ifloor(v1 * float(v2));
}

ivec2 mul(vec2 v1, ivec2 v2) {
  return ifloor(v1 * vec2(v2) + 0.5);
}

// unpack a 16-bit integer from a float vec2
int getInt16(vec2 v) {
  ivec2 iv = round(v * 255.0);
  return iv.x * INT(128) + iv.y;
}

vec2 pixelScale;
vec2 coverage = vec2(0.0);
vec2 weight = vec2(0.5);
const float minDistance = 1.0/8192.0;
const float hardness = 1.05; // amount of antialias

// the maximum number of curves in a glyph
const int N = INT(250);

// retrieves an indexed pixel from a sampler
vec4 getTexel(sampler2D sampler, int pos, ivec2 size) {
  int width = size.x;
  int y = ifloor(pos / width);
  int x = pos - y * width;  // pos % width

  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));
}

void calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {

  // get the coefficients of the quadratic in t
  vec2 a = p0 - p1 * 2.0 + p2;
  vec2 b = p0 - p1;
  vec2 c = p0 - vTexCoord;

  // found out which values of 't' it crosses the axes
  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));
  vec2 t1 = ((b - surd) / a).yx;
  vec2 t2 = ((b + surd) / a).yx;

  // approximate straight lines to avoid rounding errors
  if (abs(a.y) < 0.001)
    t1.x = t2.x = c.y / (2.0 * b.y);

  if (abs(a.x) < 0.001)
    t1.y = t2.y = c.x / (2.0 * b.x);

  // plug into quadratic formula to find the corrdinates of the crossings
  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;
  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;
}

void coverageX(vec2 p0, vec2 p1, vec2 p2) {

  vec2 C1, C2;
  calulateCrossings(p0, p1, p2, C1, C2);

  // determine on which side of the x-axis the points lie
  bool y0 = p0.y > vTexCoord.y;
  bool y1 = p1.y > vTexCoord.y;
  bool y2 = p2.y > vTexCoord.y;

  // could web be under the curve (after t1)?
  if (y1 ? !y2 : y0) {
    // add the coverage for t1
    coverage.x += saturate(C1.x + 0.5);
    // calculate the anti-aliasing for t1
    weight.x = min(weight.x, abs(C1.x));
  }

  // are we outside the curve (after t2)?
  if (y1 ? !y0 : y2) {
    // subtract the coverage for t2
    coverage.x -= saturate(C2.x + 0.5);
    // calculate the anti-aliasing for t2
    weight.x = min(weight.x, abs(C2.x));
  }
}

// this is essentially the same as coverageX, but with the axes swapped
void coverageY(vec2 p0, vec2 p1, vec2 p2) {

  vec2 C1, C2;
  calulateCrossings(p0, p1, p2, C1, C2);

  bool x0 = p0.x > vTexCoord.x;
  bool x1 = p1.x > vTexCoord.x;
  bool x2 = p2.x > vTexCoord.x;

  if (x1 ? !x2 : x0) {
    coverage.y -= saturate(C1.y + 0.5);
    weight.y = min(weight.y, abs(C1.y));
  }

  if (x1 ? !x0 : x2) {
    coverage.y += saturate(C2.y + 0.5);
    weight.y = min(weight.y, abs(C2.y));
  }
}

void main() {

  // calculate the pixel scale based on screen-coordinates
  pixelScale = hardness / fwidth(vTexCoord);

  // which grid cell is this pixel in?
  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));

  // intersect curves in this row
  {
    // the index into the row info bitmap
    int rowIndex = gridCoord.y + uGridOffset.y;
    // fetch the info texel
    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);
    // unpack the rowInfo
    int rowStrokeIndex = getInt16(rowInfo.xy);
    int rowStrokeCount = getInt16(rowInfo.zw);

    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {
      if (iRowStroke >= rowStrokeCount)
        break;

      // each stroke is made up of 3 points: the start and control point
      // and the start of the next curve.
      // fetch the indices of this pair of strokes:
      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);

      // unpack the stroke index
      int strokePos = getInt16(strokeIndices.xy);

      // fetch the two strokes
      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);
      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);

      // calculate the coverage
      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);
    }
  }

  // intersect curves in this column
  {
    int colIndex = gridCoord.x + uGridOffset.x;
    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);
    int colStrokeIndex = getInt16(colInfo.xy);
    int colStrokeCount = getInt16(colInfo.zw);
    
    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {
      if (iColStroke >= colStrokeCount)
        break;

      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);

      int strokePos = getInt16(strokeIndices.xy);
      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);
      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);
      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);
    }
  }

  weight = saturate(1.0 - weight * 2.0);
  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.
  float antialias = abs(dot(coverage, weight) / distance);
  float cover = min(abs(coverage.x), abs(coverage.y));
  gl_FragColor = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;
  gl_FragColor *= saturate(max(antialias, cover));
}
`,
                lineVert:
                  _ +
                  `/*
  Part of the Processing project - http://processing.org
  Copyright (c) 2012-15 The Processing Foundation
  Copyright (c) 2004-12 Ben Fry and Casey Reas
  Copyright (c) 2001-04 Massachusetts Institute of Technology
  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation, version 2.1.
  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General
  Public License along with this library; if not, write to the
  Free Software Foundation, Inc., 59 Temple Place, Suite 330,
  Boston, MA  02111-1307  USA
*/

#define PROCESSING_LINE_SHADER

precision mediump float;
precision mediump int;

uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
uniform float uStrokeWeight;

uniform bool uUseLineColor;
uniform vec4 uMaterialColor;

uniform vec4 uViewport;
uniform int uPerspective;
uniform int uStrokeJoin;

attribute vec4 aPosition;
attribute vec3 aTangentIn;
attribute vec3 aTangentOut;
attribute float aSide;
attribute vec4 aVertexColor;

varying vec4 vColor;
varying vec2 vTangent;
varying vec2 vCenter;
varying vec2 vPosition;
varying float vMaxDist;
varying float vCap;
varying float vJoin;

vec2 lineIntersection(vec2 aPoint, vec2 aDir, vec2 bPoint, vec2 bDir) {
  // Rotate and translate so a starts at the origin and goes out to the right
  bPoint -= aPoint;
  vec2 rotatedBFrom = vec2(
    bPoint.x*aDir.x + bPoint.y*aDir.y,
    bPoint.y*aDir.x - bPoint.x*aDir.y
  );
  vec2 bTo = bPoint + bDir;
  vec2 rotatedBTo = vec2(
    bTo.x*aDir.x + bTo.y*aDir.y,
    bTo.y*aDir.x - bTo.x*aDir.y
  );
  float intersectionDistance =
    rotatedBTo.x + (rotatedBFrom.x - rotatedBTo.x) * rotatedBTo.y /
    (rotatedBTo.y - rotatedBFrom.y);
  return aPoint + aDir * intersectionDistance;
}

void main() {
  // using a scale <1 moves the lines towards the camera
  // in order to prevent popping effects due to half of
  // the line disappearing behind the geometry faces.
  vec3 scale = vec3(0.9995);

  // Caps have one of either the in or out tangent set to 0
  vCap = (aTangentIn == vec3(0.)) != (aTangentOut == (vec3(0.)))
    ? 1. : 0.;

  // Joins have two unique, defined tangents
  vJoin = (
    aTangentIn != vec3(0.) &&
    aTangentOut != vec3(0.) &&
    aTangentIn != aTangentOut
  ) ? 1. : 0.;

  vec4 posp = uModelViewMatrix * aPosition;
  vec4 posqIn = uModelViewMatrix * (aPosition + vec4(aTangentIn, 0));
  vec4 posqOut = uModelViewMatrix * (aPosition + vec4(aTangentOut, 0));

  // Moving vertices slightly toward the camera
  // to avoid depth-fighting with the fill triangles.
  // Discussed here:
  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  
  posp.xyz = posp.xyz * scale;
  posqIn.xyz = posqIn.xyz * scale;
  posqOut.xyz = posqOut.xyz * scale;

  vec4 p = uProjectionMatrix * posp;
  vec4 qIn = uProjectionMatrix * posqIn;
  vec4 qOut = uProjectionMatrix * posqOut;
  vCenter = p.xy;

  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])
  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw

  // prevent division by W by transforming the tangent formula (div by 0 causes
  // the line to disappear, see https://github.com/processing/processing/issues/5183)
  // t = screen_q - screen_p
  //
  // tangent is normalized and we don't care which aDirection it points to (+-)
  // t = +- normalize( screen_q - screen_p )
  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )
  //
  // extract common factor, <1,1> - <1,1> cancels out
  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )
  //
  // convert to common divisor
  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )
  //
  // remove the common scalar divisor/factor, not needed due to normalize and +-
  // (keep uViewport - can't remove because it has different components for x and y
  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)
  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )

  vec2 tangentIn = normalize((qIn.xy*p.w - p.xy*qIn.w) * uViewport.zw);
  vec2 tangentOut = normalize((qOut.xy*p.w - p.xy*qOut.w) * uViewport.zw);

  vec2 curPerspScale;
  if(uPerspective == 1) {
    // Perspective ---
    // convert from world to clip by multiplying with projection scaling factor
    // to get the right thickness (see https://github.com/processing/processing/issues/5182)
    // invert Y, projections in Processing invert Y
    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;
  } else {
    // No Perspective ---
    // multiply by W (to cancel out division by W later in the pipeline) and
    // convert from screen to clip (derived from clip to screen above)
    curPerspScale = p.w / (0.5 * uViewport.zw);
  }

  vec2 offset;
  if (vJoin == 1.) {
    vTangent = normalize(tangentIn + tangentOut);
    vec2 normalIn = vec2(-tangentIn.y, tangentIn.x);
    vec2 normalOut = vec2(-tangentOut.y, tangentOut.x);
    float side = sign(aSide);
    float sideEnum = abs(aSide);

    // We generate vertices for joins on either side of the centerline, but
    // the "elbow" side is the only one needing a join. By not setting the
    // offset for the other side, all its vertices will end up in the same
    // spot and not render, effectively discarding it.
    if (sign(dot(tangentOut, vec2(-tangentIn.y, tangentIn.x))) != side) {
      // Side enums:
      //   1: the side going into the join
      //   2: the middle of the join
      //   3: the side going out of the join
      if (sideEnum == 2.) {
        // Calculate the position + tangent on either side of the join, and
        // find where the lines intersect to find the elbow of the join
        vec2 c = (posp.xy/posp.w + vec2(1.,1.)) * 0.5 * uViewport.zw;
        vec2 intersection = lineIntersection(
          c + (side * normalIn * uStrokeWeight / 2.) * curPerspScale,
          tangentIn,
          c + (side * normalOut * uStrokeWeight / 2.) * curPerspScale,
          tangentOut
        );
        offset = (intersection - c);

        // When lines are thick and the angle of the join approaches 180, the
        // elbow might be really far from the center. We'll apply a limit to
        // the magnitude to avoid lines going across the whole screen when this
        // happens.
        float mag = length(offset);
        float maxMag = 3. * uStrokeWeight;
        if (mag > maxMag) {
          offset *= maxMag / mag;
        }
      } else if (sideEnum == 1.) {
        offset = side * normalIn * curPerspScale * uStrokeWeight / 2.;
      } else if (sideEnum == 3.) {
        offset = side * normalOut * curPerspScale * uStrokeWeight / 2.;
      }
    }
    if (uStrokeJoin == STROKE_JOIN_BEVEL) {
      vec2 avgNormal = vec2(-vTangent.y, vTangent.x);
      vMaxDist = abs(dot(avgNormal, normalIn * uStrokeWeight / 2.));
    } else {
      vMaxDist = uStrokeWeight / 2.;
    }
  } else {
    vec2 tangent = aTangentIn == vec3(0.) ? tangentOut : tangentIn;
    vTangent = tangent;
    vec2 normal = vec2(-tangent.y, tangent.x);

    float normalOffset = sign(aSide);
    // Caps will have side values of -2 or 2 on the edge of the cap that
    // extends out from the line
    float tangentOffset = abs(aSide) - 1.;
    offset = (normal * normalOffset + tangent * tangentOffset) *
      uStrokeWeight * 0.5 * curPerspScale;
    vMaxDist = uStrokeWeight / 2.;
  }
  vPosition = vCenter + offset / curPerspScale;

  gl_Position.xy = p.xy + offset.xy;
  gl_Position.zw = p.zw;
  
  vColor = (uUseLineColor ? aVertexColor : uMaterialColor);
}
`,
                lineFrag:
                  _ +
                  `precision mediump float;
precision mediump int;

uniform vec4 uMaterialColor;
uniform int uStrokeCap;
uniform int uStrokeJoin;
uniform float uStrokeWeight;

varying vec4 vColor;
varying vec2 vTangent;
varying vec2 vCenter;
varying vec2 vPosition;
varying float vMaxDist;
varying float vCap;
varying float vJoin;

float distSquared(vec2 a, vec2 b) {
  vec2 aToB = b - a;
  return dot(aToB, aToB);
}

void main() {
  if (vCap > 0.) {
    if (
      uStrokeCap == STROKE_CAP_ROUND &&
      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25
    ) {
      discard;
    } else if (
      uStrokeCap == STROKE_CAP_SQUARE &&
      dot(vPosition - vCenter, vTangent) > 0.
    ) {
      discard;
    }
    // Use full area for PROJECT
  } else if (vJoin > 0.) {
    if (
      uStrokeJoin == STROKE_JOIN_ROUND &&
      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25
    ) {
      discard;
    } else if (uStrokeJoin == STROKE_JOIN_BEVEL) {
      vec2 normal = vec2(-vTangent.y, vTangent.x);
      if (abs(dot(vPosition - vCenter, normal)) > vMaxDist) {
        discard;
      }
    }
    // Use full area for MITER
  }
  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;
}
`,
                pointVert: `attribute vec3 aPosition;
uniform float uPointSize;
varying float vStrokeWeight;
uniform mat4 uModelViewMatrix;
uniform mat4 uProjectionMatrix;
void main() {
	vec4 positionVec4 =  vec4(aPosition, 1.0);
	gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;
	gl_PointSize = uPointSize;
	vStrokeWeight = uPointSize;
}`,
                pointFrag: `precision mediump float;
precision mediump int;
uniform vec4 uMaterialColor;
varying float vStrokeWeight;

void main(){
  float mask = 0.0;

  // make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)
  // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant

  mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));

  // if strokeWeight is 1 or less lets just draw a square
  // this prevents weird artifacting from carving circles when our points are really small
  // if strokeWeight is larger than 1, we just use it as is

  mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));

  // throw away the borders of the mask
  // otherwise we get weird alpha blending issues

  if(mask > 0.98){
    discard;
  }

  gl_FragColor = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;
}
`,
              },
              j =
                ((r.default.RendererGL = function (v, M, C, k) {
                  return (
                    r.default.Renderer.call(this, v, M, C),
                    this._setAttributeDefaults(M),
                    this._initContext(),
                    (this.isP3D = !0),
                    (this.GL = this.drawingContext),
                    this._pInst._setProperty(
                      'drawingContext',
                      this.drawingContext,
                    ),
                    (this._isErasing = !1),
                    (this._enableLighting = !1),
                    (this.ambientLightColors = []),
                    (this.specularColors = [1, 1, 1]),
                    (this.directionalLightDirections = []),
                    (this.directionalLightDiffuseColors = []),
                    (this.directionalLightSpecularColors = []),
                    (this.pointLightPositions = []),
                    (this.pointLightDiffuseColors = []),
                    (this.pointLightSpecularColors = []),
                    (this.spotLightPositions = []),
                    (this.spotLightDirections = []),
                    (this.spotLightDiffuseColors = []),
                    (this.spotLightSpecularColors = []),
                    (this.spotLightAngle = []),
                    (this.spotLightConc = []),
                    (this.drawMode = l.FILL),
                    (this.curFillColor = this._cachedFillStyle = [1, 1, 1, 1]),
                    (this.curAmbientColor = this._cachedFillStyle =
                      [1, 1, 1, 1]),
                    (this.curSpecularColor = this._cachedFillStyle =
                      [0, 0, 0, 0]),
                    (this.curEmissiveColor = this._cachedFillStyle =
                      [0, 0, 0, 0]),
                    (this.curStrokeColor = this._cachedStrokeStyle =
                      [0, 0, 0, 1]),
                    (this.curBlendMode = l.BLEND),
                    (this._cachedBlendMode = void 0),
                    (this.blendExt = this.GL.getExtension('EXT_blend_minmax')),
                    (this._isBlending = !1),
                    (this._useSpecularMaterial = !1),
                    (this._useEmissiveMaterial = !1),
                    (this._useNormalMaterial = !1),
                    (this._useShininess = 1),
                    (this._useLineColor = !1),
                    (this._useVertexColor = !1),
                    (this.registerEnabled = []),
                    (this._tint = [255, 255, 255, 255]),
                    (this.constantAttenuation = 1),
                    (this.linearAttenuation = 0),
                    (this.quadraticAttenuation = 0),
                    (this.uMVMatrix = new r.default.Matrix()),
                    (this.uPMatrix = new r.default.Matrix()),
                    (this.uNMatrix = new r.default.Matrix('mat3')),
                    (this._currentNormal = new r.default.Vector(0, 0, 1)),
                    (this._curCamera = new r.default.Camera(this)),
                    this._curCamera._computeCameraDefaultSettings(),
                    this._curCamera._setDefaultCamera(),
                    (this._defaultLightShader = void 0),
                    (this._defaultImmediateModeShader = void 0),
                    (this._defaultNormalShader = void 0),
                    (this._defaultColorShader = void 0),
                    (this._defaultPointShader = void 0),
                    (this.userFillShader = void 0),
                    (this.userStrokeShader = void 0),
                    (this.userPointShader = void 0),
                    (this.retainedMode = {
                      geometry: {},
                      buffers: {
                        stroke: [
                          new r.default.RenderBuffer(
                            4,
                            'lineVertexColors',
                            'lineColorBuffer',
                            'aVertexColor',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'lineVertices',
                            'lineVerticesBuffer',
                            'aPosition',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'lineTangentsIn',
                            'lineTangentsInBuffer',
                            'aTangentIn',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'lineTangentsOut',
                            'lineTangentsOutBuffer',
                            'aTangentOut',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            1,
                            'lineSides',
                            'lineSidesBuffer',
                            'aSide',
                            this,
                          ),
                        ],
                        fill: [
                          new r.default.RenderBuffer(
                            3,
                            'vertices',
                            'vertexBuffer',
                            'aPosition',
                            this,
                            this._vToNArray,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'vertexNormals',
                            'normalBuffer',
                            'aNormal',
                            this,
                            this._vToNArray,
                          ),
                          new r.default.RenderBuffer(
                            4,
                            'vertexColors',
                            'colorBuffer',
                            'aVertexColor',
                            this,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'vertexAmbients',
                            'ambientBuffer',
                            'aAmbientColor',
                            this,
                          ),
                          new r.default.RenderBuffer(
                            2,
                            'uvs',
                            'uvBuffer',
                            'aTexCoord',
                            this,
                            this._flatten,
                          ),
                        ],
                        text: [
                          new r.default.RenderBuffer(
                            3,
                            'vertices',
                            'vertexBuffer',
                            'aPosition',
                            this,
                            this._vToNArray,
                          ),
                          new r.default.RenderBuffer(
                            2,
                            'uvs',
                            'uvBuffer',
                            'aTexCoord',
                            this,
                            this._flatten,
                          ),
                        ],
                      },
                    }),
                    (this.immediateMode = {
                      geometry: new r.default.Geometry(),
                      shapeMode: l.TRIANGLE_FAN,
                      _bezierVertex: [],
                      _quadraticVertex: [],
                      _curveVertex: [],
                      buffers: {
                        fill: [
                          new r.default.RenderBuffer(
                            3,
                            'vertices',
                            'vertexBuffer',
                            'aPosition',
                            this,
                            this._vToNArray,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'vertexNormals',
                            'normalBuffer',
                            'aNormal',
                            this,
                            this._vToNArray,
                          ),
                          new r.default.RenderBuffer(
                            4,
                            'vertexColors',
                            'colorBuffer',
                            'aVertexColor',
                            this,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'vertexAmbients',
                            'ambientBuffer',
                            'aAmbientColor',
                            this,
                          ),
                          new r.default.RenderBuffer(
                            2,
                            'uvs',
                            'uvBuffer',
                            'aTexCoord',
                            this,
                            this._flatten,
                          ),
                        ],
                        stroke: [
                          new r.default.RenderBuffer(
                            4,
                            'lineVertexColors',
                            'lineColorBuffer',
                            'aVertexColor',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'lineVertices',
                            'lineVerticesBuffer',
                            'aPosition',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'lineTangentsIn',
                            'lineTangentsInBuffer',
                            'aTangentIn',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            3,
                            'lineTangentsOut',
                            'lineTangentsOutBuffer',
                            'aTangentOut',
                            this,
                            this._flatten,
                          ),
                          new r.default.RenderBuffer(
                            1,
                            'lineSides',
                            'lineSidesBuffer',
                            'aSide',
                            this,
                          ),
                        ],
                        point: this.GL.createBuffer(),
                      },
                    }),
                    (this.pointSize = 5),
                    (this.curStrokeWeight = 1),
                    (this.curStrokeCap = l.ROUND),
                    (this.curStrokeJoin = l.ROUND),
                    (this.textures = []),
                    (this.textureMode = l.IMAGE),
                    (this.textureWrapX = l.CLAMP),
                    (this.textureWrapY = l.CLAMP),
                    (this._tex = null),
                    (this._curveTightness = 6),
                    (this._lookUpTableBezier = []),
                    (this._lookUpTableQuadratic = []),
                    (this._lutBezierDetail = 0),
                    (this._lutQuadraticDetail = 0),
                    (this.isProcessingVertices = !1),
                    (this._tessy = this._initTessy()),
                    (this.fontInfos = {}),
                    (this._curShader = void 0),
                    this
                  );
                }),
                (r.default.RendererGL.prototype = Object.create(
                  r.default.Renderer.prototype,
                )),
                (r.default.RendererGL.prototype._setAttributeDefaults =
                  function (v) {
                    var M = {
                      alpha: !0,
                      depth: !0,
                      stencil: !0,
                      antialias: navigator.userAgent
                        .toLowerCase()
                        .includes('safari'),
                      premultipliedAlpha: !0,
                      preserveDrawingBuffer: !0,
                      perPixelLighting: !0,
                    };
                    v._glAttributes === null
                      ? (v._glAttributes = M)
                      : (v._glAttributes = Object.assign(M, v._glAttributes));
                  }),
                (r.default.RendererGL.prototype._initContext = function () {
                  if (
                    ((this.drawingContext =
                      this.canvas.getContext(
                        'webgl',
                        this._pInst._glAttributes,
                      ) ||
                      this.canvas.getContext(
                        'experimental-webgl',
                        this._pInst._glAttributes,
                      )),
                    this.drawingContext === null)
                  )
                    throw new Error('Error creating webgl context');
                  var v = this.drawingContext;
                  v.enable(v.DEPTH_TEST),
                    v.depthFunc(v.LEQUAL),
                    v.viewport(
                      0,
                      0,
                      v.drawingBufferWidth,
                      v.drawingBufferHeight,
                    ),
                    (this._viewport = this.drawingContext.getParameter(
                      this.drawingContext.VIEWPORT,
                    ));
                }),
                (r.default.RendererGL.prototype._resetContext = function (
                  v,
                  M,
                ) {
                  var C,
                    k = this.width,
                    A = this.height,
                    O = this.canvas.id,
                    R = this._pInst instanceof r.default.Graphics,
                    O =
                      (R
                        ? ((C = this._pInst).canvas.parentNode.removeChild(
                            C.canvas,
                          ),
                          (C.canvas = document.createElement('canvas')),
                          (C._pInst._userNode || document.body).appendChild(
                            C.canvas,
                          ),
                          r.default.Element.call(C, C.canvas, C._pInst),
                          (C.width = k),
                          (C.height = A))
                        : ((C = this.canvas) && C.parentNode.removeChild(C),
                          ((C = document.createElement('canvas')).id = O),
                          (this._pInst._userNode || document.body).appendChild(
                            C,
                          ),
                          (this._pInst.canvas = C),
                          (this.canvas = C)),
                      new r.default.RendererGL(
                        this._pInst.canvas,
                        this._pInst,
                        !R,
                      ));
                  this._pInst._setProperty('_renderer', O),
                    O.resize(k, A),
                    O._applyDefaults(),
                    R || this._pInst._elements.push(O),
                    typeof M == 'function' &&
                      setTimeout(function () {
                        M.apply(window._renderer, v);
                      }, 0);
                }),
                (r.default.prototype.setAttributes = function (v, M) {
                  if (this._glAttributes === void 0)
                    console.log(
                      'You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.',
                    );
                  else {
                    var C = !0;
                    if (
                      (M !== void 0
                        ? (this._glAttributes === null &&
                            (this._glAttributes = {}),
                          this._glAttributes[v] !== M &&
                            ((this._glAttributes[v] = M), (C = !1)))
                        : v instanceof Object &&
                          this._glAttributes !== v &&
                          ((this._glAttributes = v), (C = !1)),
                      this._renderer.isP3D && !C)
                    ) {
                      if (!this._setupDone) {
                        for (var k in this._renderer.retainedMode.geometry)
                          if (
                            this._renderer.retainedMode.geometry.hasOwnProperty(
                              k,
                            )
                          )
                            return void console.error(
                              'Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()',
                            );
                      }
                      this.push(),
                        this._renderer._resetContext(),
                        this.pop(),
                        this._renderer._curCamera &&
                          (this._renderer._curCamera._renderer =
                            this._renderer);
                    }
                  }
                }),
                (r.default.RendererGL.prototype._update = function () {
                  this.uMVMatrix.set(
                    this._curCamera.cameraMatrix.mat4[0],
                    this._curCamera.cameraMatrix.mat4[1],
                    this._curCamera.cameraMatrix.mat4[2],
                    this._curCamera.cameraMatrix.mat4[3],
                    this._curCamera.cameraMatrix.mat4[4],
                    this._curCamera.cameraMatrix.mat4[5],
                    this._curCamera.cameraMatrix.mat4[6],
                    this._curCamera.cameraMatrix.mat4[7],
                    this._curCamera.cameraMatrix.mat4[8],
                    this._curCamera.cameraMatrix.mat4[9],
                    this._curCamera.cameraMatrix.mat4[10],
                    this._curCamera.cameraMatrix.mat4[11],
                    this._curCamera.cameraMatrix.mat4[12],
                    this._curCamera.cameraMatrix.mat4[13],
                    this._curCamera.cameraMatrix.mat4[14],
                    this._curCamera.cameraMatrix.mat4[15],
                  ),
                    (this.ambientLightColors.length = 0),
                    (this.specularColors = [1, 1, 1]),
                    (this.directionalLightDirections.length = 0),
                    (this.directionalLightDiffuseColors.length = 0),
                    (this.directionalLightSpecularColors.length = 0),
                    (this.pointLightPositions.length = 0),
                    (this.pointLightDiffuseColors.length = 0),
                    (this.pointLightSpecularColors.length = 0),
                    (this.spotLightPositions.length = 0),
                    (this.spotLightDirections.length = 0),
                    (this.spotLightDiffuseColors.length = 0),
                    (this.spotLightSpecularColors.length = 0),
                    (this.spotLightAngle.length = 0),
                    (this.spotLightConc.length = 0),
                    (this._enableLighting = !1),
                    (this._tint = [255, 255, 255, 255]),
                    this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
                }),
                (r.default.RendererGL.prototype.background = function () {
                  var k = (k = this._pInst).color.apply(k, arguments),
                    v = k.levels[0] / 255,
                    M = k.levels[1] / 255,
                    C = k.levels[2] / 255,
                    k = k.levels[3] / 255;
                  this.clear(v, M, C, k);
                }),
                (r.default.RendererGL.prototype.fill = function (v, M, C, k) {
                  var A = r.default.prototype.color.apply(
                    this._pInst,
                    arguments,
                  );
                  (this.curFillColor = A._array),
                    (this.drawMode = l.FILL),
                    (this._useNormalMaterial = !1),
                    (this._tex = null);
                }),
                (r.default.RendererGL.prototype.stroke = function (v, M, C, k) {
                  var A = r.default.prototype.color.apply(
                    this._pInst,
                    arguments,
                  );
                  this.curStrokeColor = A._array;
                }),
                (r.default.RendererGL.prototype.strokeCap = function (v) {
                  this.curStrokeCap = v;
                }),
                (r.default.RendererGL.prototype.strokeJoin = function (v) {
                  this.curStrokeJoin = v;
                }),
                (r.default.RendererGL.prototype.filter = function (v) {
                  console.error('filter() does not work in WEBGL mode');
                }),
                (r.default.RendererGL.prototype.blendMode = function (v) {
                  v === l.DARKEST ||
                  v === l.LIGHTEST ||
                  v === l.ADD ||
                  v === l.BLEND ||
                  v === l.SUBTRACT ||
                  v === l.SCREEN ||
                  v === l.EXCLUSION ||
                  v === l.REPLACE ||
                  v === l.MULTIPLY ||
                  v === l.REMOVE
                    ? (this.curBlendMode = v)
                    : (v !== l.BURN &&
                        v !== l.OVERLAY &&
                        v !== l.HARD_LIGHT &&
                        v !== l.SOFT_LIGHT &&
                        v !== l.DODGE) ||
                      console.warn(
                        'BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.',
                      );
                }),
                (r.default.RendererGL.prototype.erase = function (v, M) {
                  this._isErasing ||
                    (this._applyBlendMode(l.REMOVE),
                    (this._isErasing = !0),
                    (this._cachedFillStyle = this.curFillColor.slice()),
                    (this.curFillColor = [1, 1, 1, v / 255]),
                    (this._cachedStrokeStyle = this.curStrokeColor.slice()),
                    (this.curStrokeColor = [1, 1, 1, M / 255]));
                }),
                (r.default.RendererGL.prototype.noErase = function () {
                  this._isErasing &&
                    ((this._isErasing = !1),
                    (this.curFillColor = this._cachedFillStyle.slice()),
                    (this.curStrokeColor = this._cachedStrokeStyle.slice()),
                    this.blendMode(this._cachedBlendMode));
                }),
                (r.default.RendererGL.prototype.strokeWeight = function (v) {
                  this.curStrokeWeight !== v &&
                    ((this.pointSize = v), (this.curStrokeWeight = v));
                }),
                (r.default.RendererGL.prototype._getPixel = function (v, M) {
                  var C = new Uint8Array(4);
                  return (
                    this.drawingContext.readPixels(
                      v,
                      M,
                      1,
                      1,
                      this.drawingContext.RGBA,
                      this.drawingContext.UNSIGNED_BYTE,
                      C,
                    ),
                    [C[0], C[1], C[2], C[3]]
                  );
                }),
                (r.default.RendererGL.prototype.loadPixels = function () {
                  var v,
                    M = this._pixelsState;
                  this._pInst._glAttributes.preserveDrawingBuffer !== !0
                    ? console.log(
                        'loadPixels only works in WebGL when preserveDrawingBuffer is true.',
                      )
                    : ((M = M.pixels),
                      (v =
                        this.GL.drawingBufferWidth *
                        this.GL.drawingBufferHeight *
                        4),
                      (M instanceof Uint8Array && M.length === v) ||
                        ((M = new Uint8Array(v)),
                        this._pixelsState._setProperty('pixels', M)),
                      (v = this._pInst._pixelDensity),
                      this.GL.readPixels(
                        0,
                        0,
                        this.width * v,
                        this.height * v,
                        this.GL.RGBA,
                        this.GL.UNSIGNED_BYTE,
                        M,
                      ));
                }),
                (r.default.RendererGL.prototype.geometryInHash = function (v) {
                  return this.retainedMode.geometry[v] !== void 0;
                }),
                (r.default.RendererGL.prototype.resize = function (v, M) {
                  r.default.Renderer.prototype.resize.call(this, v, M),
                    this.GL.viewport(
                      0,
                      0,
                      this.GL.drawingBufferWidth,
                      this.GL.drawingBufferHeight,
                    ),
                    (this._viewport = this.GL.getParameter(this.GL.VIEWPORT)),
                    this._curCamera._resize(),
                    (v = this._pixelsState),
                    v.pixels !== void 0 &&
                      v._setProperty(
                        'pixels',
                        new Uint8Array(
                          this.GL.drawingBufferWidth *
                            this.GL.drawingBufferHeight *
                            4,
                        ),
                      );
                }),
                (r.default.RendererGL.prototype.clear = function () {
                  var v = (arguments.length <= 0 ? void 0 : arguments[0]) || 0,
                    M = (arguments.length <= 1 ? void 0 : arguments[1]) || 0,
                    C = (arguments.length <= 2 ? void 0 : arguments[2]) || 0,
                    k = (arguments.length <= 3 ? void 0 : arguments[3]) || 0;
                  this.GL.clearColor(v * k, M * k, C * k, k),
                    this.GL.clearDepth(1),
                    this.GL.clear(
                      this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT,
                    );
                }),
                (r.default.RendererGL.prototype.applyMatrix = function (
                  v,
                  M,
                  C,
                  k,
                  A,
                  R,
                ) {
                  arguments.length === 16
                    ? r.default.Matrix.prototype.apply.apply(
                        this.uMVMatrix,
                        arguments,
                      )
                    : this.uMVMatrix.apply([
                        v,
                        M,
                        0,
                        0,
                        C,
                        k,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        A,
                        R,
                        0,
                        1,
                      ]);
                }),
                (r.default.RendererGL.prototype.translate = function (v, M, C) {
                  return (
                    v instanceof r.default.Vector &&
                      ((C = v.z), (M = v.y), (v = v.x)),
                    this.uMVMatrix.translate([v, M, C]),
                    this
                  );
                }),
                (r.default.RendererGL.prototype.scale = function (v, M, C) {
                  return this.uMVMatrix.scale(v, M, C), this;
                }),
                (r.default.RendererGL.prototype.rotate = function (v, M) {
                  return M === void 0
                    ? this.rotateZ(v)
                    : (r.default.Matrix.prototype.rotate.apply(
                        this.uMVMatrix,
                        arguments,
                      ),
                      this);
                }),
                (r.default.RendererGL.prototype.rotateX = function (v) {
                  return this.rotate(v, 1, 0, 0), this;
                }),
                (r.default.RendererGL.prototype.rotateY = function (v) {
                  return this.rotate(v, 0, 1, 0), this;
                }),
                (r.default.RendererGL.prototype.rotateZ = function (v) {
                  return this.rotate(v, 0, 0, 1), this;
                }),
                (r.default.RendererGL.prototype.push = function () {
                  var v = r.default.Renderer.prototype.push.apply(this),
                    M = v.properties;
                  return (
                    (M.uMVMatrix = this.uMVMatrix.copy()),
                    (M.uPMatrix = this.uPMatrix.copy()),
                    (M._curCamera = this._curCamera),
                    (this._curCamera = this._curCamera.copy()),
                    (M.ambientLightColors = this.ambientLightColors.slice()),
                    (M.specularColors = this.specularColors.slice()),
                    (M.directionalLightDirections =
                      this.directionalLightDirections.slice()),
                    (M.directionalLightDiffuseColors =
                      this.directionalLightDiffuseColors.slice()),
                    (M.directionalLightSpecularColors =
                      this.directionalLightSpecularColors.slice()),
                    (M.pointLightPositions = this.pointLightPositions.slice()),
                    (M.pointLightDiffuseColors =
                      this.pointLightDiffuseColors.slice()),
                    (M.pointLightSpecularColors =
                      this.pointLightSpecularColors.slice()),
                    (M.spotLightPositions = this.spotLightPositions.slice()),
                    (M.spotLightDirections = this.spotLightDirections.slice()),
                    (M.spotLightDiffuseColors =
                      this.spotLightDiffuseColors.slice()),
                    (M.spotLightSpecularColors =
                      this.spotLightSpecularColors.slice()),
                    (M.spotLightAngle = this.spotLightAngle.slice()),
                    (M.spotLightConc = this.spotLightConc.slice()),
                    (M.userFillShader = this.userFillShader),
                    (M.userStrokeShader = this.userStrokeShader),
                    (M.userPointShader = this.userPointShader),
                    (M.pointSize = this.pointSize),
                    (M.curStrokeWeight = this.curStrokeWeight),
                    (M.curStrokeColor = this.curStrokeColor),
                    (M.curFillColor = this.curFillColor),
                    (M.curAmbientColor = this.curAmbientColor),
                    (M.curSpecularColor = this.curSpecularColor),
                    (M.curEmissiveColor = this.curEmissiveColor),
                    (M._useSpecularMaterial = this._useSpecularMaterial),
                    (M._useEmissiveMaterial = this._useEmissiveMaterial),
                    (M._useShininess = this._useShininess),
                    (M.constantAttenuation = this.constantAttenuation),
                    (M.linearAttenuation = this.linearAttenuation),
                    (M.quadraticAttenuation = this.quadraticAttenuation),
                    (M._enableLighting = this._enableLighting),
                    (M._useNormalMaterial = this._useNormalMaterial),
                    (M._tex = this._tex),
                    (M.drawMode = this.drawMode),
                    (M._currentNormal = this._currentNormal),
                    (M.curBlendMode = this.curBlendMode),
                    v
                  );
                }),
                (r.default.RendererGL.prototype.resetMatrix = function () {
                  return (
                    this.uMVMatrix.set(
                      this._curCamera.cameraMatrix.mat4[0],
                      this._curCamera.cameraMatrix.mat4[1],
                      this._curCamera.cameraMatrix.mat4[2],
                      this._curCamera.cameraMatrix.mat4[3],
                      this._curCamera.cameraMatrix.mat4[4],
                      this._curCamera.cameraMatrix.mat4[5],
                      this._curCamera.cameraMatrix.mat4[6],
                      this._curCamera.cameraMatrix.mat4[7],
                      this._curCamera.cameraMatrix.mat4[8],
                      this._curCamera.cameraMatrix.mat4[9],
                      this._curCamera.cameraMatrix.mat4[10],
                      this._curCamera.cameraMatrix.mat4[11],
                      this._curCamera.cameraMatrix.mat4[12],
                      this._curCamera.cameraMatrix.mat4[13],
                      this._curCamera.cameraMatrix.mat4[14],
                      this._curCamera.cameraMatrix.mat4[15],
                    ),
                    this
                  );
                }),
                (r.default.RendererGL.prototype._getImmediateStrokeShader =
                  function () {
                    var v = this.userStrokeShader;
                    return v && v.isStrokeShader() ? v : this._getLineShader();
                  }),
                (r.default.RendererGL.prototype._getRetainedStrokeShader =
                  r.default.RendererGL.prototype._getImmediateStrokeShader),
                (r.default.RendererGL.prototype._getImmediateFillShader =
                  function () {
                    var v = this.userFillShader;
                    if (this._useNormalMaterial && (!v || !v.isNormalShader()))
                      return this._getNormalShader();
                    if (this._enableLighting) {
                      if (!v || !v.isLightShader())
                        return this._getLightShader();
                    } else if (this._tex) {
                      if (!v || !v.isTextureShader())
                        return this._getLightShader();
                    } else if (!v) return this._getImmediateModeShader();
                    return v;
                  }),
                (r.default.RendererGL.prototype._getRetainedFillShader =
                  function () {
                    if (this._useNormalMaterial) return this._getNormalShader();
                    var v = this.userFillShader;
                    if (this._enableLighting) {
                      if (!v || !v.isLightShader())
                        return this._getLightShader();
                    } else if (this._tex) {
                      if (!v || !v.isTextureShader())
                        return this._getLightShader();
                    } else if (!v) return this._getColorShader();
                    return v;
                  }),
                (r.default.RendererGL.prototype._getImmediatePointShader =
                  function () {
                    var v = this.userPointShader;
                    return v && v.isPointShader() ? v : this._getPointShader();
                  }),
                (r.default.RendererGL.prototype._getRetainedLineShader =
                  r.default.RendererGL.prototype._getImmediateLineShader),
                (r.default.RendererGL.prototype._getLightShader = function () {
                  return (
                    this._defaultLightShader ||
                      (this._pInst._glAttributes.perPixelLighting
                        ? (this._defaultLightShader = new r.default.Shader(
                            this,
                            x.phongVert,
                            x.phongFrag,
                          ))
                        : (this._defaultLightShader = new r.default.Shader(
                            this,
                            x.lightVert,
                            x.lightTextureFrag,
                          ))),
                    this._defaultLightShader
                  );
                }),
                (r.default.RendererGL.prototype._getImmediateModeShader =
                  function () {
                    return (
                      this._defaultImmediateModeShader ||
                        (this._defaultImmediateModeShader =
                          new r.default.Shader(
                            this,
                            x.immediateVert,
                            x.vertexColorFrag,
                          )),
                      this._defaultImmediateModeShader
                    );
                  }),
                (r.default.RendererGL.prototype._getNormalShader = function () {
                  return (
                    this._defaultNormalShader ||
                      (this._defaultNormalShader = new r.default.Shader(
                        this,
                        x.normalVert,
                        x.normalFrag,
                      )),
                    this._defaultNormalShader
                  );
                }),
                (r.default.RendererGL.prototype._getColorShader = function () {
                  return (
                    this._defaultColorShader ||
                      (this._defaultColorShader = new r.default.Shader(
                        this,
                        x.normalVert,
                        x.basicFrag,
                      )),
                    this._defaultColorShader
                  );
                }),
                (r.default.RendererGL.prototype._getPointShader = function () {
                  return (
                    this._defaultPointShader ||
                      (this._defaultPointShader = new r.default.Shader(
                        this,
                        x.pointVert,
                        x.pointFrag,
                      )),
                    this._defaultPointShader
                  );
                }),
                (r.default.RendererGL.prototype._getLineShader = function () {
                  return (
                    this._defaultLineShader ||
                      (this._defaultLineShader = new r.default.Shader(
                        this,
                        x.lineVert,
                        x.lineFrag,
                      )),
                    this._defaultLineShader
                  );
                }),
                (r.default.RendererGL.prototype._getFontShader = function () {
                  return (
                    this._defaultFontShader ||
                      (this.GL.getExtension('OES_standard_derivatives'),
                      (this._defaultFontShader = new r.default.Shader(
                        this,
                        x.fontVert,
                        x.fontFrag,
                      ))),
                    this._defaultFontShader
                  );
                }),
                (r.default.RendererGL.prototype._getEmptyTexture = function () {
                  var v;
                  return (
                    this._emptyTexture ||
                      ((v = new r.default.Image(1, 1)).set(0, 0, 255),
                      (this._emptyTexture = new r.default.Texture(this, v))),
                    this._emptyTexture
                  );
                }),
                (r.default.RendererGL.prototype.getTexture = function (v) {
                  var M = this.textures,
                    C = !0,
                    k = !1,
                    A = void 0;
                  try {
                    for (
                      var R, O = M[Symbol.iterator]();
                      !(C = (R = O.next()).done);
                      C = !0
                    ) {
                      var D = R.value;
                      if (D.src === v) return D;
                    }
                  } catch (N) {
                    (k = !0), (A = N);
                  } finally {
                    try {
                      C || O.return == null || O.return();
                    } finally {
                      if (k) throw A;
                    }
                  }
                  return (k = new r.default.Texture(this, v)), M.push(k), k;
                }),
                (r.default.RendererGL.prototype._setStrokeUniforms = function (
                  v,
                ) {
                  v.bindShader(),
                    v.setUniform('uUseLineColor', this._useLineColor),
                    v.setUniform('uMaterialColor', this.curStrokeColor),
                    v.setUniform('uStrokeWeight', this.curStrokeWeight),
                    v.setUniform('uStrokeCap', f[this.curStrokeCap]),
                    v.setUniform('uStrokeJoin', g[this.curStrokeJoin]);
                }),
                (r.default.RendererGL.prototype._setFillUniforms = function (
                  v,
                ) {
                  v.bindShader(),
                    v.setUniform('uUseVertexColor', this._useVertexColor),
                    v.setUniform('uMaterialColor', this.curFillColor),
                    v.setUniform('isTexture', !!this._tex),
                    this._tex && v.setUniform('uSampler', this._tex),
                    v.setUniform('uTint', this._tint),
                    v.setUniform('uAmbientMatColor', this.curAmbientColor),
                    v.setUniform('uSpecularMatColor', this.curSpecularColor),
                    v.setUniform('uEmissiveMatColor', this.curEmissiveColor),
                    v.setUniform('uSpecular', this._useSpecularMaterial),
                    v.setUniform('uEmissive', this._useEmissiveMaterial),
                    v.setUniform('uShininess', this._useShininess),
                    v.setUniform('uUseLighting', this._enableLighting);
                  var M = this.pointLightDiffuseColors.length / 3,
                    M =
                      (v.setUniform('uPointLightCount', M),
                      v.setUniform(
                        'uPointLightLocation',
                        this.pointLightPositions,
                      ),
                      v.setUniform(
                        'uPointLightDiffuseColors',
                        this.pointLightDiffuseColors,
                      ),
                      v.setUniform(
                        'uPointLightSpecularColors',
                        this.pointLightSpecularColors,
                      ),
                      this.directionalLightDiffuseColors.length / 3),
                    M =
                      (v.setUniform('uDirectionalLightCount', M),
                      v.setUniform(
                        'uLightingDirection',
                        this.directionalLightDirections,
                      ),
                      v.setUniform(
                        'uDirectionalDiffuseColors',
                        this.directionalLightDiffuseColors,
                      ),
                      v.setUniform(
                        'uDirectionalSpecularColors',
                        this.directionalLightSpecularColors,
                      ),
                      this.ambientLightColors.length / 3),
                    M =
                      (v.setUniform('uAmbientLightCount', M),
                      v.setUniform('uAmbientColor', this.ambientLightColors),
                      this.spotLightDiffuseColors.length / 3);
                  v.setUniform('uSpotLightCount', M),
                    v.setUniform('uSpotLightAngle', this.spotLightAngle),
                    v.setUniform('uSpotLightConc', this.spotLightConc),
                    v.setUniform(
                      'uSpotLightDiffuseColors',
                      this.spotLightDiffuseColors,
                    ),
                    v.setUniform(
                      'uSpotLightSpecularColors',
                      this.spotLightSpecularColors,
                    ),
                    v.setUniform('uSpotLightLocation', this.spotLightPositions),
                    v.setUniform(
                      'uSpotLightDirection',
                      this.spotLightDirections,
                    ),
                    v.setUniform(
                      'uConstantAttenuation',
                      this.constantAttenuation,
                    ),
                    v.setUniform('uLinearAttenuation', this.linearAttenuation),
                    v.setUniform(
                      'uQuadraticAttenuation',
                      this.quadraticAttenuation,
                    ),
                    v.bindTextures();
                }),
                (r.default.RendererGL.prototype._setPointUniforms = function (
                  v,
                ) {
                  v.bindShader(),
                    v.setUniform('uMaterialColor', this.curStrokeColor),
                    v.setUniform(
                      'uPointSize',
                      this.pointSize * this._pInst._pixelDensity,
                    );
                }),
                (r.default.RendererGL.prototype._bindBuffer = function (
                  v,
                  M,
                  C,
                  k,
                  A,
                ) {
                  (M = M || this.GL.ARRAY_BUFFER),
                    this.GL.bindBuffer(M, v),
                    C !== void 0 &&
                      ((v = new (k || Float32Array)(C)),
                      this.GL.bufferData(M, v, A || this.GL.STATIC_DRAW));
                }),
                (r.default.RendererGL.prototype._arraysEqual = function (v, M) {
                  var C = v.length;
                  if (C !== M.length) return !1;
                  for (var k = 0; k < C; k++) if (v[k] !== M[k]) return !1;
                  return !0;
                }),
                (r.default.RendererGL.prototype._isTypedArray = function (v) {
                  return v instanceof Uint32Array;
                }),
                (r.default.RendererGL.prototype._flatten = function (v) {
                  if (v.length === 0) return [];
                  var M;
                  if (2e4 < v.length) {
                    for (
                      var C = Object.prototype.toString,
                        k = [],
                        A = v.slice(),
                        R = A.pop();
                      C.call(R) === '[object Array]'
                        ? A.push.apply(A, s(R))
                        : k.push(R),
                        A.length && (R = A.pop()) !== void 0;

                    );
                    return k.reverse(), k;
                  }
                  return (M = []).concat.apply(M, s(v));
                }),
                (r.default.RendererGL.prototype._vToNArray = function (v) {
                  var M = [],
                    C = !0,
                    k = !1,
                    A = void 0;
                  try {
                    for (
                      var R, O = v[Symbol.iterator]();
                      !(C = (R = O.next()).done);
                      C = !0
                    ) {
                      var D = R.value;
                      M.push(D.x, D.y, D.z);
                    }
                  } catch (N) {
                    (k = !0), (A = N);
                  } finally {
                    try {
                      C || O.return == null || O.return();
                    } finally {
                      if (k) throw A;
                    }
                  }
                  return M;
                }),
                (r.default.prototype._assert3d = function (v) {
                  if (!this._renderer.isP3D)
                    throw new Error(
                      ''.concat(
                        v,
                        "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information.",
                      ),
                    );
                }),
                (r.default.RendererGL.prototype.tessyVertexSize = 12),
                (r.default.RendererGL.prototype._initTessy = function () {
                  var v = new d.default.GluTesselator();
                  return (
                    v.gluTessCallback(
                      d.default.gluEnum.GLU_TESS_VERTEX_DATA,
                      function (M, C) {
                        for (var k = 0; k < M.length; k++) C[C.length] = M[k];
                      },
                    ),
                    v.gluTessCallback(
                      d.default.gluEnum.GLU_TESS_BEGIN,
                      function (M) {
                        M !== d.default.primitiveType.GL_TRIANGLES &&
                          console.log(
                            'expected TRIANGLES but got type: '.concat(M),
                          );
                      },
                    ),
                    v.gluTessCallback(
                      d.default.gluEnum.GLU_TESS_ERROR,
                      function (M) {
                        console.log('error callback'),
                          console.log('error number: '.concat(M));
                      },
                    ),
                    v.gluTessCallback(
                      d.default.gluEnum.GLU_TESS_COMBINE,
                      function (M, C, k) {
                        for (
                          var A = new Array(
                              r.default.RendererGL.prototype.tessyVertexSize,
                            ).fill(0),
                            R = 0;
                          R < k.length;
                          R++
                        )
                          for (var O = 0; O < A.length; O++)
                            k[R] !== 0 && C[R] && (A[O] += C[R][O] * k[R]);
                        return A;
                      },
                    ),
                    v.gluTessCallback(
                      d.default.gluEnum.GLU_TESS_EDGE_FLAG,
                      function (M) {},
                    ),
                    v
                  );
                }),
                (r.default.RendererGL.prototype._triangulate = function (v) {
                  var M = v[0] ? v[0][2] : void 0,
                    C = !0,
                    k = !0,
                    A = !1,
                    R = void 0;
                  try {
                    for (
                      var O, D = v[Symbol.iterator]();
                      !(k = (O = D.next()).done);
                      k = !0
                    )
                      for (
                        var N = O.value, U = 0;
                        U < N.length;
                        U += r.default.RendererGL.prototype.tessyVertexSize
                      )
                        if (N[U + 2] !== M) {
                          C = !1;
                          break;
                        }
                  } catch (W) {
                    (A = !0), (R = W);
                  } finally {
                    try {
                      k || D.return == null || D.return();
                    } finally {
                      if (A) throw R;
                    }
                  }
                  C
                    ? this._tessy.gluTessNormal(0, 0, 1)
                    : this._tessy.gluTessNormal(0, 0, 0),
                    (A = []),
                    this._tessy.gluTessBeginPolygon(A);
                  for (var H = 0; H < v.length; H++) {
                    this._tessy.gluTessBeginContour();
                    for (
                      var q = v[H], z = 0;
                      z < q.length;
                      z += r.default.RendererGL.prototype.tessyVertexSize
                    ) {
                      var X = q.slice(
                        z,
                        z + r.default.RendererGL.prototype.tessyVertexSize,
                      );
                      this._tessy.gluTessVertex(X, X);
                    }
                    this._tessy.gluTessEndContour();
                  }
                  return this._tessy.gluTessEndPolygon(), A;
                }),
                (r.default.RendererGL.prototype._bezierCoefficients = function (
                  v,
                ) {
                  var M = v * v,
                    C = 1 - v,
                    k = C * C;
                  return [k * C, 3 * k * v, 3 * C * M, M * v];
                }),
                (r.default.RendererGL.prototype._quadraticCoefficients =
                  function (v) {
                    var M = 1 - v;
                    return [M * M, 2 * M * v, v * v];
                  }),
                (r.default.RendererGL.prototype._bezierToCatmull = function (
                  v,
                ) {
                  return [
                    v[1],
                    v[1] + (v[2] - v[0]) / this._curveTightness,
                    v[2] - (v[3] - v[1]) / this._curveTightness,
                    v[2],
                  ];
                }),
                r.default.RendererGL);
            y.default = j;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            '../core/p5.Renderer': 270,
            './p5.Camera': 315,
            './p5.Matrix': 317,
            './p5.Shader': 322,
            'core-js/modules/es.array.concat': 149,
            'core-js/modules/es.array.fill': 152,
            'core-js/modules/es.array.filter': 153,
            'core-js/modules/es.array.from': 155,
            'core-js/modules/es.array.includes': 156,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.object.assign': 172,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.to-string': 182,
            'core-js/modules/es.string.includes': 185,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.float32-array': 203,
            'core-js/modules/es.typed-array.float64-array': 204,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.int16-array': 208,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint16-array': 224,
            'core-js/modules/es.typed-array.uint32-array': 225,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
            libtess: 239,
            path: 242,
          },
        ],
        322: [
          function (t, b, y) {
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.index-of'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.array.slice'),
              t('core-js/modules/es.function.name'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/web.dom-collections.iterator'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var u =
              (t = t('../core/main')) && t.__esModule ? t : { default: t };
            (u.default.Shader = function (a, r, l) {
              (this._renderer = a),
                (this._vertSrc = r),
                (this._fragSrc = l),
                (this._vertShader = -1),
                (this._fragShader = -1),
                (this._glProgram = 0),
                (this._loadedAttributes = !1),
                (this.attributes = {}),
                (this._loadedUniforms = !1),
                (this.uniforms = {}),
                (this._bound = !1),
                (this.samplers = []);
            }),
              (u.default.Shader.prototype.init = function () {
                if (this._glProgram === 0) {
                  var a = this._renderer.GL;
                  if (
                    ((this._vertShader = a.createShader(a.VERTEX_SHADER)),
                    a.shaderSource(this._vertShader, this._vertSrc),
                    a.compileShader(this._vertShader),
                    !a.getShaderParameter(this._vertShader, a.COMPILE_STATUS))
                  )
                    return (
                      console.error(
                        'Yikes! An error occurred compiling the vertex shader:'.concat(
                          a.getShaderInfoLog(this._vertShader),
                        ),
                      ),
                      null
                    );
                  if (
                    ((this._fragShader = a.createShader(a.FRAGMENT_SHADER)),
                    a.shaderSource(this._fragShader, this._fragSrc),
                    a.compileShader(this._fragShader),
                    !a.getShaderParameter(this._fragShader, a.COMPILE_STATUS))
                  )
                    return (
                      console.error(
                        'Darn! An error occurred compiling the fragment shader:'.concat(
                          a.getShaderInfoLog(this._fragShader),
                        ),
                      ),
                      null
                    );
                  (this._glProgram = a.createProgram()),
                    a.attachShader(this._glProgram, this._vertShader),
                    a.attachShader(this._glProgram, this._fragShader),
                    a.linkProgram(this._glProgram),
                    a.getProgramParameter(this._glProgram, a.LINK_STATUS) ||
                      console.error(
                        'Snap! Error linking shader program: '.concat(
                          a.getProgramInfoLog(this._glProgram),
                        ),
                      ),
                    this._loadAttributes(),
                    this._loadUniforms();
                }
                return this;
              }),
              (u.default.Shader.prototype._loadAttributes = function () {
                if (!this._loadedAttributes) {
                  this.attributes = {};
                  for (
                    var a = this._renderer.GL,
                      r = a.getProgramParameter(
                        this._glProgram,
                        a.ACTIVE_ATTRIBUTES,
                      ),
                      l = 0;
                    l < r;
                    ++l
                  ) {
                    var d = a.getActiveAttrib(this._glProgram, l),
                      h = d.name,
                      o = a.getAttribLocation(this._glProgram, h),
                      s = {};
                    (s.name = h),
                      (s.location = o),
                      (s.index = l),
                      (s.type = d.type),
                      (s.size = d.size),
                      (this.attributes[h] = s);
                  }
                  this._loadedAttributes = !0;
                }
              }),
              (u.default.Shader.prototype._loadUniforms = function () {
                if (!this._loadedUniforms) {
                  for (
                    var a = this._renderer.GL,
                      r = a.getProgramParameter(
                        this._glProgram,
                        a.ACTIVE_UNIFORMS,
                      ),
                      l = 0,
                      d = 0;
                    d < r;
                    ++d
                  ) {
                    var h = a.getActiveUniform(this._glProgram, d),
                      o = {},
                      s =
                        ((o.location = a.getUniformLocation(
                          this._glProgram,
                          h.name,
                        )),
                        (o.size = h.size),
                        h.name);
                    1 < h.size && (s = s.substring(0, s.indexOf('[0]'))),
                      (o.name = s),
                      (o.type = h.type),
                      (o._cachedData = void 0),
                      o.type === a.SAMPLER_2D &&
                        ((o.samplerIndex = l), l++, this.samplers.push(o)),
                      (o.isArray =
                        1 < h.size ||
                        o.type === a.FLOAT_MAT3 ||
                        o.type === a.FLOAT_MAT4 ||
                        o.type === a.FLOAT_VEC2 ||
                        o.type === a.FLOAT_VEC3 ||
                        o.type === a.FLOAT_VEC4 ||
                        o.type === a.INT_VEC2 ||
                        o.type === a.INT_VEC4 ||
                        o.type === a.INT_VEC3),
                      (this.uniforms[s] = o);
                  }
                  this._loadedUniforms = !0;
                }
              }),
              (u.default.Shader.prototype.compile = function () {}),
              (u.default.Shader.prototype.bindShader = function () {
                this.init(),
                  this._bound ||
                    (this.useProgram(),
                    (this._bound = !0),
                    this._setMatrixUniforms(),
                    this.setUniform('uViewport', this._renderer._viewport));
              }),
              (u.default.Shader.prototype.unbindShader = function () {
                return (
                  this._bound && (this.unbindTextures(), (this._bound = !1)),
                  this
                );
              }),
              (u.default.Shader.prototype.bindTextures = function () {
                var a = this._renderer.GL,
                  r = !0,
                  l = !1,
                  d = void 0;
                try {
                  for (
                    var h, o = this.samplers[Symbol.iterator]();
                    !(r = (h = o.next()).done);
                    r = !0
                  ) {
                    var s = h.value,
                      n = s.texture;
                    n === void 0 && (n = this._renderer._getEmptyTexture()),
                      a.activeTexture(a.TEXTURE0 + s.samplerIndex),
                      n.bindTexture(),
                      n.update(),
                      a.uniform1i(s.location, s.samplerIndex);
                  }
                } catch (c) {
                  (l = !0), (d = c);
                } finally {
                  try {
                    r || o.return == null || o.return();
                  } finally {
                    if (l) throw d;
                  }
                }
              }),
              (u.default.Shader.prototype.updateTextures = function () {
                var a = !0,
                  r = !1,
                  l = void 0;
                try {
                  for (
                    var d, h = this.samplers[Symbol.iterator]();
                    !(a = (d = h.next()).done);
                    a = !0
                  ) {
                    var o = d.value.texture;
                    o && o.update();
                  }
                } catch (s) {
                  (r = !0), (l = s);
                } finally {
                  try {
                    a || h.return == null || h.return();
                  } finally {
                    if (r) throw l;
                  }
                }
              }),
              (u.default.Shader.prototype.unbindTextures = function () {
                var a = !0,
                  r = !1,
                  l = void 0;
                try {
                  for (
                    var d, h = this.samplers[Symbol.iterator]();
                    !(a = (d = h.next()).done);
                    a = !0
                  ) {
                    var o = d.value;
                    this.setUniform(o.name, this._renderer._getEmptyTexture());
                  }
                } catch (s) {
                  (r = !0), (l = s);
                } finally {
                  try {
                    a || h.return == null || h.return();
                  } finally {
                    if (r) throw l;
                  }
                }
              }),
              (u.default.Shader.prototype._setMatrixUniforms = function () {
                var a = this._renderer._curCamera.cameraMatrix,
                  r = this._renderer.uPMatrix,
                  l = this._renderer.uMVMatrix,
                  d = l.copy();
                d.mult(r),
                  this.isStrokeShader() &&
                    (this._renderer._curCamera.cameraType === 'default'
                      ? this.setUniform('uPerspective', 1)
                      : this.setUniform('uPerspective', 0)),
                  this.setUniform('uViewMatrix', a.mat4),
                  this.setUniform('uProjectionMatrix', r.mat4),
                  this.setUniform('uModelViewMatrix', l.mat4),
                  this.setUniform('uModelViewProjectionMatrix', d.mat4),
                  this.uniforms.uNormalMatrix &&
                    (this._renderer.uNMatrix.inverseTranspose(
                      this._renderer.uMVMatrix,
                    ),
                    this.setUniform(
                      'uNormalMatrix',
                      this._renderer.uNMatrix.mat3,
                    ));
              }),
              (u.default.Shader.prototype.useProgram = function () {
                var a = this._renderer.GL;
                return (
                  this._renderer._curShader !== this &&
                    (a.useProgram(this._glProgram),
                    (this._renderer._curShader = this)),
                  this
                );
              }),
              (u.default.Shader.prototype.setUniform = function (a, r) {
                var l = this.uniforms[a];
                if (l) {
                  var d = this._renderer.GL;
                  if (l.isArray) {
                    if (
                      l._cachedData &&
                      this._renderer._arraysEqual(l._cachedData, r)
                    )
                      return;
                    l._cachedData = r.slice(0);
                  } else {
                    if (l._cachedData && l._cachedData === r) return;
                    Array.isArray(r)
                      ? (l._cachedData = r.slice(0))
                      : (l._cachedData = r);
                  }
                  var h = l.location;
                  switch ((this.useProgram(), l.type)) {
                    case d.BOOL:
                      r === !0 ? d.uniform1i(h, 1) : d.uniform1i(h, 0);
                      break;
                    case d.INT:
                      1 < l.size
                        ? r.length && d.uniform1iv(h, r)
                        : d.uniform1i(h, r);
                      break;
                    case d.FLOAT:
                      1 < l.size
                        ? r.length && d.uniform1fv(h, r)
                        : d.uniform1f(h, r);
                      break;
                    case d.FLOAT_MAT3:
                      d.uniformMatrix3fv(h, !1, r);
                      break;
                    case d.FLOAT_MAT4:
                      d.uniformMatrix4fv(h, !1, r);
                      break;
                    case d.FLOAT_VEC2:
                      1 < l.size
                        ? r.length && d.uniform2fv(h, r)
                        : d.uniform2f(h, r[0], r[1]);
                      break;
                    case d.FLOAT_VEC3:
                      1 < l.size
                        ? r.length && d.uniform3fv(h, r)
                        : d.uniform3f(h, r[0], r[1], r[2]);
                      break;
                    case d.FLOAT_VEC4:
                      1 < l.size
                        ? r.length && d.uniform4fv(h, r)
                        : d.uniform4f(h, r[0], r[1], r[2], r[3]);
                      break;
                    case d.INT_VEC2:
                      1 < l.size
                        ? r.length && d.uniform2iv(h, r)
                        : d.uniform2i(h, r[0], r[1]);
                      break;
                    case d.INT_VEC3:
                      1 < l.size
                        ? r.length && d.uniform3iv(h, r)
                        : d.uniform3i(h, r[0], r[1], r[2]);
                      break;
                    case d.INT_VEC4:
                      1 < l.size
                        ? r.length && d.uniform4iv(h, r)
                        : d.uniform4i(h, r[0], r[1], r[2], r[3]);
                      break;
                    case d.SAMPLER_2D:
                      d.activeTexture(d.TEXTURE0 + l.samplerIndex),
                        (l.texture =
                          r instanceof u.default.Texture
                            ? r
                            : this._renderer.getTexture(r)),
                        d.uniform1i(h, l.samplerIndex),
                        l.texture.src.gifProperties &&
                          l.texture.src._animateGif(this._renderer._pInst);
                  }
                  return this;
                }
              }),
              (u.default.Shader.prototype.isLightShader = function () {
                return (
                  this.attributes.aNormal !== void 0 ||
                  this.uniforms.uUseLighting !== void 0 ||
                  this.uniforms.uAmbientLightCount !== void 0 ||
                  this.uniforms.uDirectionalLightCount !== void 0 ||
                  this.uniforms.uPointLightCount !== void 0 ||
                  this.uniforms.uAmbientColor !== void 0 ||
                  this.uniforms.uDirectionalDiffuseColors !== void 0 ||
                  this.uniforms.uDirectionalSpecularColors !== void 0 ||
                  this.uniforms.uPointLightLocation !== void 0 ||
                  this.uniforms.uPointLightDiffuseColors !== void 0 ||
                  this.uniforms.uPointLightSpecularColors !== void 0 ||
                  this.uniforms.uLightingDirection !== void 0 ||
                  this.uniforms.uSpecular !== void 0
                );
              }),
              (u.default.Shader.prototype.isNormalShader = function () {
                return this.attributes.aNormal !== void 0;
              }),
              (u.default.Shader.prototype.isTextureShader = function () {
                return 0 < this.samplers.length;
              }),
              (u.default.Shader.prototype.isColorShader = function () {
                return (
                  this.attributes.aVertexColor !== void 0 ||
                  this.uniforms.uMaterialColor !== void 0
                );
              }),
              (u.default.Shader.prototype.isTexLightShader = function () {
                return this.isLightShader() && this.isTextureShader();
              }),
              (u.default.Shader.prototype.isStrokeShader = function () {
                return this.uniforms.uStrokeWeight !== void 0;
              }),
              (u.default.Shader.prototype.enableAttrib = function (
                a,
                r,
                l,
                d,
                h,
                o,
              ) {
                var s;
                return (
                  a &&
                    (a = a.location) !== -1 &&
                    ((s = this._renderer.GL),
                    this._renderer.registerEnabled[a] ||
                      (s.enableVertexAttribArray(a),
                      (this._renderer.registerEnabled[a] = !0)),
                    this._renderer.GL.vertexAttribPointer(
                      a,
                      r,
                      l || s.FLOAT,
                      d || !1,
                      h || 0,
                      o || 0,
                    )),
                  this
                );
              }),
              (t = u.default.Shader),
              (y.default = t);
          },
          {
            '../core/main': 267,
            'core-js/modules/es.array.index-of': 157,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.array.slice': 162,
            'core-js/modules/es.function.name': 165,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        323: [
          function (t, b, y) {
            function u(o) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (s) {
                      return typeof s;
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : typeof s;
                    })(o);
            }
            function a(o) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (s) {
                      return u(s);
                    }
                  : function (s) {
                      return s &&
                        typeof Symbol == 'function' &&
                        s.constructor === Symbol &&
                        s !== Symbol.prototype
                        ? 'symbol'
                        : u(s);
                    })(o);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.typed-array.uint8-array'),
              t('core-js/modules/es.typed-array.copy-within'),
              t('core-js/modules/es.typed-array.every'),
              t('core-js/modules/es.typed-array.fill'),
              t('core-js/modules/es.typed-array.filter'),
              t('core-js/modules/es.typed-array.find'),
              t('core-js/modules/es.typed-array.find-index'),
              t('core-js/modules/es.typed-array.for-each'),
              t('core-js/modules/es.typed-array.includes'),
              t('core-js/modules/es.typed-array.index-of'),
              t('core-js/modules/es.typed-array.iterator'),
              t('core-js/modules/es.typed-array.join'),
              t('core-js/modules/es.typed-array.last-index-of'),
              t('core-js/modules/es.typed-array.map'),
              t('core-js/modules/es.typed-array.reduce'),
              t('core-js/modules/es.typed-array.reduce-right'),
              t('core-js/modules/es.typed-array.reverse'),
              t('core-js/modules/es.typed-array.set'),
              t('core-js/modules/es.typed-array.slice'),
              t('core-js/modules/es.typed-array.some'),
              t('core-js/modules/es.typed-array.sort'),
              t('core-js/modules/es.typed-array.subarray'),
              t('core-js/modules/es.typed-array.to-locale-string'),
              t('core-js/modules/es.typed-array.to-string'),
              Object.defineProperty(y, '__esModule', { value: !0 }),
              (y.default = void 0);
            var r =
                (h = t('../core/main')) && h.__esModule ? h : { default: h },
              l = (function (o) {
                if (o && o.__esModule) return o;
                if (o === null || (a(o) !== 'object' && typeof o != 'function'))
                  return { default: o };
                var s = d();
                if (s && s.has(o)) return s.get(o);
                var n,
                  c = {},
                  f = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (n in o) {
                  var g;
                  Object.prototype.hasOwnProperty.call(o, n) &&
                    ((g = f ? Object.getOwnPropertyDescriptor(o, n) : null) &&
                    (g.get || g.set)
                      ? Object.defineProperty(c, n, g)
                      : (c[n] = o[n]));
                }
                return (c.default = o), s && s.set(o, c), c;
              })(t('../core/constants'));
            function d() {
              var o;
              return typeof WeakMap != 'function'
                ? null
                : ((o = new WeakMap()),
                  (d = function () {
                    return o;
                  }),
                  o);
            }
            (r.default.Texture = function (o, s, n) {
              return (
                (this._renderer = o),
                (o = this._renderer.GL),
                (n = n || {}).dataType === o.FLOAT &&
                  (o.getExtension('OES_texture_float') ||
                    console.log(
                      "Oh no, your device doesn't support floating point textures!",
                    ),
                  o.getExtension('OES_texture_float_linear') ||
                    console.log(
                      "Ack! Your device doesn't support linear filtering for floating point textures",
                    )),
                (this.src = s),
                (this.glTex = void 0),
                (this.glTarget = o.TEXTURE_2D),
                (this.glFormat = n.format || o.RGBA),
                (this.mipmaps = !1),
                (this.glMinFilter = n.minFilter || o.LINEAR),
                (this.glMagFilter = n.magFilter || o.LINEAR),
                (this.glWrapS = n.wrapS || o.CLAMP_TO_EDGE),
                (this.glWrapT = n.wrapT || o.CLAMP_TO_EDGE),
                (this.glDataType = n.dataType || o.UNSIGNED_BYTE),
                (this.isSrcMediaElement =
                  r.default.MediaElement !== void 0 &&
                  s instanceof r.default.MediaElement),
                (this._videoPrevUpdateTime = 0),
                (this.isSrcHTMLElement =
                  r.default.Element !== void 0 &&
                  s instanceof r.default.Element &&
                  !(s instanceof r.default.Graphics) &&
                  !(s instanceof r.default.Renderer)),
                (this.isSrcP5Image = s instanceof r.default.Image),
                (this.isSrcP5Graphics = s instanceof r.default.Graphics),
                (this.isSrcP5Renderer = s instanceof r.default.Renderer),
                (this.isImageData =
                  typeof ImageData < 'u' && s instanceof ImageData),
                (n = this._getTextureDataFromSource()),
                (this.width = n.width),
                (this.height = n.height),
                this.init(n),
                this
              );
            }),
              (r.default.Texture.prototype._getTextureDataFromSource =
                function () {
                  var o;
                  return (
                    this.isSrcP5Image
                      ? (o = this.src.canvas)
                      : this.isSrcMediaElement ||
                        this.isSrcP5Graphics ||
                        this.isSrcP5Renderer ||
                        this.isSrcHTMLElement
                      ? (o = this.src.elt)
                      : this.isImageData && (o = this.src),
                    o
                  );
                }),
              (r.default.Texture.prototype.init = function (o) {
                var s,
                  n = this._renderer.GL;
                (this.glTex = n.createTexture()),
                  (this.glWrapS = this._renderer.textureWrapX),
                  (this.glWrapT = this._renderer.textureWrapY),
                  this.setWrapMode(this.glWrapS, this.glWrapT),
                  this.bindTexture(),
                  n.texParameteri(
                    n.TEXTURE_2D,
                    n.TEXTURE_MAG_FILTER,
                    this.glMagFilter,
                  ),
                  n.texParameteri(
                    n.TEXTURE_2D,
                    n.TEXTURE_MIN_FILTER,
                    this.glMinFilter,
                  ),
                  this.width === 0 ||
                  this.height === 0 ||
                  (this.isSrcMediaElement && !this.src.loadedmetadata)
                    ? ((s = new Uint8Array([1, 1, 1, 1])),
                      n.texImage2D(
                        this.glTarget,
                        0,
                        n.RGBA,
                        1,
                        1,
                        0,
                        this.glFormat,
                        this.glDataType,
                        s,
                      ))
                    : n.texImage2D(
                        this.glTarget,
                        0,
                        this.glFormat,
                        this.glFormat,
                        this.glDataType,
                        o,
                      );
              }),
              (r.default.Texture.prototype.update = function () {
                var o,
                  s,
                  n,
                  c = this.src;
                return (
                  c.width !== 0 &&
                  c.height !== 0 &&
                  ((o = this._getTextureDataFromSource()),
                  (s = !1),
                  (n = this._renderer.GL),
                  o.width !== this.width || o.height !== this.height
                    ? ((s = !0),
                      (this.width = o.width),
                      (this.height = o.height),
                      this.isSrcP5Image
                        ? c.setModified(!1)
                        : (this.isSrcMediaElement || this.isSrcHTMLElement) &&
                          c.setModified(!0))
                    : this.isSrcP5Image
                    ? c.isModified() && c.setModified(!(s = !0))
                    : this.isSrcMediaElement
                    ? c.isModified()
                      ? c.setModified(!(s = !0))
                      : c.loadedmetadata &&
                        this._videoPrevUpdateTime !== c.time() &&
                        ((this._videoPrevUpdateTime = c.time()), (s = !0))
                    : this.isImageData
                    ? c._dirty && (s = !(c._dirty = !1))
                    : (s = !0),
                  s &&
                    (this.bindTexture(),
                    n.texImage2D(
                      this.glTarget,
                      0,
                      this.glFormat,
                      this.glFormat,
                      this.glDataType,
                      o,
                    )),
                  s)
                );
              }),
              (r.default.Texture.prototype.bindTexture = function () {
                return (
                  this._renderer.GL.bindTexture(this.glTarget, this.glTex), this
                );
              }),
              (r.default.Texture.prototype.unbindTexture = function () {
                this._renderer.GL.bindTexture(this.glTarget, null);
              }),
              (r.default.Texture.prototype.setInterpolation = function (o, s) {
                var n = this._renderer.GL;
                o === l.NEAREST
                  ? (this.glMinFilter = n.NEAREST)
                  : (this.glMinFilter = n.LINEAR),
                  s === l.NEAREST
                    ? (this.glMagFilter = n.NEAREST)
                    : (this.glMagFilter = n.LINEAR),
                  this.bindTexture(),
                  n.texParameteri(
                    n.TEXTURE_2D,
                    n.TEXTURE_MIN_FILTER,
                    this.glMinFilter,
                  ),
                  n.texParameteri(
                    n.TEXTURE_2D,
                    n.TEXTURE_MAG_FILTER,
                    this.glMagFilter,
                  ),
                  this.unbindTexture();
              }),
              (r.default.Texture.prototype.setWrapMode = function (o, s) {
                function n(_) {
                  return (_ & (_ - 1)) == 0;
                }
                var c = this._renderer.GL,
                  g = this._getTextureDataFromSource(),
                  g =
                    g.naturalWidth && g.naturalHeight
                      ? ((f = g.naturalWidth), g.naturalHeight)
                      : ((f = this.width), this.height),
                  f = n(f),
                  g = n(g);
                o === l.REPEAT
                  ? f && g
                    ? (this.glWrapS = c.REPEAT)
                    : (console.warn(
                        'You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead',
                      ),
                      (this.glWrapS = c.CLAMP_TO_EDGE))
                  : o === l.MIRROR
                  ? f && g
                    ? (this.glWrapS = c.MIRRORED_REPEAT)
                    : (console.warn(
                        'You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead',
                      ),
                      (this.glWrapS = c.CLAMP_TO_EDGE))
                  : (this.glWrapS = c.CLAMP_TO_EDGE),
                  s === l.REPEAT
                    ? f && g
                      ? (this.glWrapT = c.REPEAT)
                      : (console.warn(
                          'You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead',
                        ),
                        (this.glWrapT = c.CLAMP_TO_EDGE))
                    : s === l.MIRROR
                    ? f && g
                      ? (this.glWrapT = c.MIRRORED_REPEAT)
                      : (console.warn(
                          'You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead',
                        ),
                        (this.glWrapT = c.CLAMP_TO_EDGE))
                    : (this.glWrapT = c.CLAMP_TO_EDGE),
                  this.bindTexture(),
                  c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_S, this.glWrapS),
                  c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_T, this.glWrapT),
                  this.unbindTexture();
              });
            var h = r.default.Texture;
            y.default = h;
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.typed-array.copy-within': 197,
            'core-js/modules/es.typed-array.every': 198,
            'core-js/modules/es.typed-array.fill': 199,
            'core-js/modules/es.typed-array.filter': 200,
            'core-js/modules/es.typed-array.find': 202,
            'core-js/modules/es.typed-array.find-index': 201,
            'core-js/modules/es.typed-array.for-each': 205,
            'core-js/modules/es.typed-array.includes': 206,
            'core-js/modules/es.typed-array.index-of': 207,
            'core-js/modules/es.typed-array.iterator': 210,
            'core-js/modules/es.typed-array.join': 211,
            'core-js/modules/es.typed-array.last-index-of': 212,
            'core-js/modules/es.typed-array.map': 213,
            'core-js/modules/es.typed-array.reduce': 215,
            'core-js/modules/es.typed-array.reduce-right': 214,
            'core-js/modules/es.typed-array.reverse': 216,
            'core-js/modules/es.typed-array.set': 217,
            'core-js/modules/es.typed-array.slice': 218,
            'core-js/modules/es.typed-array.some': 219,
            'core-js/modules/es.typed-array.sort': 220,
            'core-js/modules/es.typed-array.subarray': 221,
            'core-js/modules/es.typed-array.to-locale-string': 222,
            'core-js/modules/es.typed-array.to-string': 223,
            'core-js/modules/es.typed-array.uint8-array': 226,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
        324: [
          function (t, b, y) {
            function u(f) {
              return (u =
                typeof Symbol == 'function' &&
                typeof Symbol.iterator == 'symbol'
                  ? function (g) {
                      return typeof g;
                    }
                  : function (g) {
                      return g &&
                        typeof Symbol == 'function' &&
                        g.constructor === Symbol &&
                        g !== Symbol.prototype
                        ? 'symbol'
                        : typeof g;
                    })(f);
            }
            function a(f) {
              return (a =
                typeof Symbol == 'function' && u(Symbol.iterator) === 'symbol'
                  ? function (g) {
                      return u(g);
                    }
                  : function (g) {
                      return g &&
                        typeof Symbol == 'function' &&
                        g.constructor === Symbol &&
                        g !== Symbol.prototype
                        ? 'symbol'
                        : u(g);
                    })(f);
            }
            t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.get-own-property-descriptor'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.sub'),
              t('core-js/modules/es.weak-map'),
              t('core-js/modules/web.dom-collections.iterator'),
              t('core-js/modules/es.symbol'),
              t('core-js/modules/es.symbol.description'),
              t('core-js/modules/es.symbol.iterator'),
              t('core-js/modules/es.array.iterator'),
              t('core-js/modules/es.object.to-string'),
              t('core-js/modules/es.regexp.exec'),
              t('core-js/modules/es.string.iterator'),
              t('core-js/modules/es.string.split'),
              t('core-js/modules/es.string.sub'),
              t('core-js/modules/web.dom-collections.iterator');
            var r,
              l = (r = t('../core/main')) && r.__esModule ? r : { default: r },
              d = (function (f) {
                if (f && f.__esModule) return f;
                if (f === null || (a(f) !== 'object' && typeof f != 'function'))
                  return { default: f };
                var g = h();
                if (g && g.has(f)) return g.get(f);
                var _,
                  x = {},
                  j = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (_ in f) {
                  var v;
                  Object.prototype.hasOwnProperty.call(f, _) &&
                    ((v = j ? Object.getOwnPropertyDescriptor(f, _) : null) &&
                    (v.get || v.set)
                      ? Object.defineProperty(x, _, v)
                      : (x[_] = f[_]));
                }
                return (x.default = f), g && g.set(f, x), x;
              })(t('../core/constants'));
            function h() {
              var f;
              return typeof WeakMap != 'function'
                ? null
                : ((f = new WeakMap()),
                  (h = function () {
                    return f;
                  }),
                  f);
            }
            t('./p5.Shader'),
              t('./p5.RendererGL.Retained'),
              (l.default.RendererGL.prototype._applyTextProperties =
                function () {}),
              (l.default.RendererGL.prototype.textWidth = function (f) {
                return this._isOpenType()
                  ? this._textFont._textWidth(f, this._textSize)
                  : 0;
              });
            function o(f, g) {
              (this.width = f),
                (this.height = g),
                (this.infos = []),
                (this.findImage = function (_) {
                  var x,
                    j,
                    v = this.width * this.height;
                  if (v < _)
                    throw new Error('font is too complex to render in 3D');
                  for (var M = this.infos.length - 1; 0 <= M; --M) {
                    var C = this.infos[M];
                    if (C.index + _ < v) {
                      j = (x = C).imageData;
                      break;
                    }
                  }
                  if (!x) {
                    try {
                      j = new ImageData(this.width, this.height);
                    } catch {
                      var k = document.getElementsByTagName('canvas')[0],
                        A = !k,
                        R =
                          (k ||
                            (((k =
                              document.createElement('canvas')).style.display =
                              'none'),
                            document.body.appendChild(k)),
                          k.getContext('2d'));
                      R && (j = R.createImageData(this.width, this.height)),
                        A && document.body.removeChild(k);
                    }
                    this.infos.push((x = { index: 0, imageData: j }));
                  }
                  return (
                    (R = x.index),
                    (x.index += _),
                    (j._dirty = !0),
                    { imageData: j, index: R }
                  );
                });
            }
            function s(M, g, _, x, j) {
              var v = M.imageData.data,
                M = 4 * M.index++;
              (v[M++] = g), (v[M++] = _), (v[M++] = x), (v[+M] = j);
            }
            function n(f) {
              (this.font = f),
                (this.strokeImageInfos = new o(64, 64)),
                (this.colDimImageInfos = new o(64, 64)),
                (this.rowDimImageInfos = new o(64, 64)),
                (this.colCellImageInfos = new o(64, 64)),
                (this.rowCellImageInfos = new o(64, 64)),
                (this.glyphInfos = {}),
                (this.getGlyphInfo = function (g) {
                  var _ = this.glyphInfos[g.index];
                  if (!_) {
                    var x = g.getBoundingBox(),
                      j = x.x1,
                      v = x.y1,
                      M = x.x2 - j,
                      C = x.y2 - v,
                      k = g.path.commands;
                    if (M == 0 || C == 0 || !k.length)
                      return (this.glyphInfos[g.index] = {});
                    for (
                      var A, R, O, D, N = [], U = [], H = [], q = 8;
                      0 <= q;
                      --q
                    )
                      H.push([]);
                    for (q = 8; 0 <= q; --q) U.push([]);
                    var z = !0,
                      X = !1,
                      W = void 0;
                    try {
                      for (
                        var Z, $ = k[Symbol.iterator]();
                        !(z = (Z = $.next()).done);
                        z = !0
                      ) {
                        var ae = Z.value,
                          P = (ae.x - j) / M,
                          L = (ae.y - v) / C;
                        if (!Ce(A, R, P, L)) {
                          switch (ae.type) {
                            case 'M':
                              (O = P), (D = L);
                              break;
                            case 'L':
                              me(A, R, P, L);
                              break;
                            case 'Q':
                              var B = (ae.x1 - j) / M,
                                Y = (ae.y1 - v) / C;
                              se([A, P, B], [R, L, Y], {
                                x: A,
                                y: R,
                                cx: B,
                                cy: Y,
                              });
                              break;
                            case 'Z':
                              Ce(A, R, O, D)
                                ? N.push({ x: A, y: R })
                                : (me(A, R, O, D), N.push({ x: O, y: D }));
                              break;
                            case 'C':
                              for (
                                var ee = (function (
                                    Ie,
                                    G,
                                    re,
                                    ze,
                                    We,
                                    Qe,
                                    Ze,
                                    _e,
                                  ) {
                                    var Ie = new ve(
                                        new l.default.Vector(Ie, G),
                                        new l.default.Vector(re, ze),
                                        new l.default.Vector(We, Qe),
                                        new l.default.Vector(Ze, _e),
                                      ).splitInflections(),
                                      xe = [],
                                      Q = 30 / c,
                                      K = !0,
                                      G = !1,
                                      re = void 0;
                                    try {
                                      for (
                                        var ge, je = Ie[Symbol.iterator]();
                                        !(K = (ge = je.next()).done);
                                        K = !0
                                      ) {
                                        for (
                                          var Ae = ge.value,
                                            Fe = [],
                                            Ve = void 0;
                                          !(0.125 <= (Ve = Q / Ae.quadError()));

                                        ) {
                                          var Ge = Math.pow(
                                              Ve,
                                              0.3333333333333333,
                                            ),
                                            Xe = Ae.split(Ge),
                                            at = Ae.split(1 - Ge / (1 - Ge));
                                          xe.push(Xe), Fe.push(Ae), (Ae = at);
                                        }
                                        Ve < 1 && xe.push(Ae.split(0.5)),
                                          xe.push(Ae),
                                          Array.prototype.push.apply(
                                            xe,
                                            Fe.reverse(),
                                          );
                                      }
                                    } catch (st) {
                                      (G = !0), (re = st);
                                    } finally {
                                      try {
                                        K || je.return == null || je.return();
                                      } finally {
                                        if (G) throw re;
                                      }
                                    }
                                    return xe;
                                  })(
                                    A,
                                    R,
                                    (ae.x1 - j) / M,
                                    (ae.y1 - v) / C,
                                    (ae.x2 - j) / M,
                                    (ae.y2 - v) / C,
                                    P,
                                    L,
                                  ),
                                  ne = 0;
                                ne < ee.length;
                                ne++
                              ) {
                                var ce = ee[ne].toQuadratic();
                                se(
                                  [ce.x, ce.x1, ce.cx],
                                  [ce.y, ce.y1, ce.cy],
                                  ce,
                                );
                              }
                              break;
                            default:
                              throw new Error(
                                'unknown command type: '.concat(ae.type),
                              );
                          }
                          (A = P), (R = L);
                        }
                      }
                    } catch (Pe) {
                      (X = !0), (W = Pe);
                    } finally {
                      try {
                        z || $.return == null || $.return();
                      } finally {
                        if (X) throw W;
                      }
                    }
                    for (
                      var pe = N.length,
                        le = this.strokeImageInfos.findImage(pe),
                        ue = le.index,
                        be = 0;
                      be < pe;
                      ++be
                    ) {
                      var te = N[be];
                      s(le, he(te.x), he(te.y), he(te.cx), he(te.cy));
                    }
                    (_ = this.glyphInfos[g.index] =
                      {
                        glyph: g,
                        uGlyphRect: [x.x1, -x.y1, x.x2, -x.y2],
                        strokeImageInfo: le,
                        strokes: N,
                        colInfo: Se(
                          H,
                          this.colDimImageInfos,
                          this.colCellImageInfos,
                        ),
                        rowInfo: Se(
                          U,
                          this.rowDimImageInfos,
                          this.rowCellImageInfos,
                        ),
                      }).uGridOffset = [
                      _.colInfo.dimOffset,
                      _.rowInfo.dimOffset,
                    ];
                  }
                  return _;
                  function se(Pe, Me, Be) {
                    var ze = N.length;
                    function We(xe, Q, K) {
                      for (var G = xe.length; 0 < G--; ) {
                        var re = xe[G];
                        re < Q && (Q = re), K < re && (K = re);
                      }
                      return { min: Q, max: K };
                    }
                    N.push(Be);
                    for (
                      var Be = We(Pe, 1, 0),
                        Pe = Math.max(Math.floor(9 * Be.min - 0.5), 0),
                        Qe = Math.min(Math.ceil(9 * Be.max + 0.5), 9),
                        Ze = Pe;
                      Ze < Qe;
                      ++Ze
                    )
                      H[Ze].push(ze);
                    for (
                      var Be = We(Me, 1, 0),
                        Pe = Math.max(Math.floor(9 * Be.min - 0.5), 0),
                        _e = Math.min(Math.ceil(9 * Be.max + 0.5), 9),
                        Ie = Pe;
                      Ie < _e;
                      ++Ie
                    )
                      U[Ie].push(ze);
                  }
                  function he(Pe) {
                    return (Pe = (Be = 255) * Pe) < (Me = 0)
                      ? Me
                      : Be < Pe
                      ? Be
                      : Pe;
                    var Me, Be;
                  }
                  function ve(Pe, Me, Be, ze) {
                    (this.p0 = Pe),
                      (this.c0 = Me),
                      (this.c1 = Be),
                      (this.p1 = ze),
                      (this.toQuadratic = function () {
                        return {
                          x: this.p0.x,
                          y: this.p0.y,
                          x1: this.p1.x,
                          y1: this.p1.y,
                          cx:
                            (3 * (this.c0.x + this.c1.x) -
                              (this.p0.x + this.p1.x)) /
                            4,
                          cy:
                            (3 * (this.c0.y + this.c1.y) -
                              (this.p0.y + this.p1.y)) /
                            4,
                        };
                      }),
                      (this.quadError = function () {
                        return (
                          l.default.Vector.sub(
                            l.default.Vector.sub(this.p1, this.p0),
                            l.default.Vector.mult(
                              l.default.Vector.sub(this.c1, this.c0),
                              3,
                            ),
                          ).mag() / 2
                        );
                      }),
                      (this.split = function (Ie) {
                        var Qe = l.default.Vector.lerp(this.p0, this.c0, Ie),
                          _e = l.default.Vector.lerp(this.c0, this.c1, Ie),
                          Ze = l.default.Vector.lerp(Qe, _e, Ie),
                          _e =
                            ((this.c1 = l.default.Vector.lerp(
                              this.c1,
                              this.p1,
                              Ie,
                            )),
                            (this.c0 = l.default.Vector.lerp(_e, this.c1, Ie)),
                            l.default.Vector.lerp(Ze, this.c0, Ie)),
                          Ie = new ve(this.p0, Qe, Ze, _e);
                        return (this.p0 = _e), Ie;
                      }),
                      (this.splitInflections = function () {
                        var We = l.default.Vector.sub(this.c0, this.p0),
                          Qe = l.default.Vector.sub(
                            l.default.Vector.sub(this.c1, this.c0),
                            We,
                          ),
                          Ze = l.default.Vector.sub(
                            l.default.Vector.sub(
                              l.default.Vector.sub(this.p1, this.c1),
                              We,
                            ),
                            l.default.Vector.mult(Qe, 2),
                          ),
                          _e = [],
                          Ie = Qe.x * Ze.y - Qe.y * Ze.x;
                        return (
                          Ie !== 0 &&
                            0 <=
                              (We =
                                (Ze = We.x * Ze.y - We.y * Ze.x) * Ze -
                                4 * Ie * (We.x * Qe.y - We.y * Qe.x)) &&
                            (Ie < 0 && ((Ie = -Ie), (Ze = -Ze)),
                            (We = (-Ze + (Qe = Math.sqrt(We))) / (2 * Ie)),
                            0 < (Ze = (-Ze - Qe) / (2 * Ie)) &&
                              Ze < 1 &&
                              (_e.push(this.split(Ze)),
                              (We = 1 - (1 - We) / (1 - Ze))),
                            0 < We && We < 1 && _e.push(this.split(We))),
                          _e.push(this),
                          _e
                        );
                      });
                  }
                  function me(Pe, Me, Be, ze) {
                    se([Pe, Be], [Me, ze], {
                      x: Pe,
                      y: Me,
                      cx: (Pe + Be) / 2,
                      cy: (Me + ze) / 2,
                    });
                  }
                  function Ce(Pe, Me, Be, ze) {
                    return Math.abs(Be - Pe) < 1e-5 && Math.abs(ze - Me) < 1e-5;
                  }
                  function Se(Pe, Me, Be) {
                    for (
                      var ze = Pe.length,
                        We = Me.findImage(ze),
                        Me = We.index,
                        Qe = 0,
                        Ze = 0;
                      Ze < ze;
                      ++Ze
                    )
                      Qe += Pe[Ze].length;
                    for (var _e = Be.findImage(Qe), Ie = 0; Ie < ze; ++Ie) {
                      var xe = Pe[Ie],
                        Q = xe.length,
                        K = _e.index;
                      s(We, K >> 7, 127 & K, Q >> 7, 127 & Q);
                      for (var G = 0; G < Q; ++G) {
                        var re = xe[G] + ue;
                        s(_e, re >> 7, 127 & re, 0, 0);
                      }
                    }
                    return {
                      cellImageInfo: _e,
                      dimOffset: Me,
                      dimImageInfo: We,
                    };
                  }
                });
            }
            var c = Math.sqrt(3);
            l.default.RendererGL.prototype._renderText = function (
              f,
              g,
              _,
              x,
              j,
            ) {
              if (this._textFont && typeof this._textFont != 'string') {
                if (!(j <= x) && this._doFill) {
                  if (this._isOpenType()) {
                    f.push();
                    var j = this._doStroke,
                      v = this.drawMode,
                      M =
                        ((this._doStroke = !1),
                        (this.drawMode = d.TEXTURE),
                        this._textFont.font),
                      C =
                        (C = this._textFont._fontInfo) ||
                        (this._textFont._fontInfo = new n(M)),
                      _ = this._textFont._handleAlignment(this, g, _, x),
                      x = this._textSize / M.unitsPerEm,
                      k =
                        (this.translate(_.x, _.y, 0),
                        this.scale(x, x, 1),
                        this.GL),
                      _ = !this._defaultFontShader,
                      A = this._getFontShader(),
                      R =
                        (A.init(),
                        A.bindShader(),
                        _ &&
                          (A.setUniform('uGridImageSize', [64, 64]),
                          A.setUniform('uCellsImageSize', [64, 64]),
                          A.setUniform('uStrokeImageSize', [64, 64]),
                          A.setUniform('uGridSize', [9, 9])),
                        this._applyColorBlend(this.curFillColor),
                        this.retainedMode.geometry.glyph),
                      O =
                        (R ||
                          ((x = this._textGeom =
                            new l.default.Geometry(1, 1, function () {
                              for (var ce = 0; ce <= 1; ce++)
                                for (var pe = 0; pe <= 1; pe++)
                                  this.vertices.push(
                                    new l.default.Vector(pe, ce, 0),
                                  ),
                                    this.uvs.push(pe, ce);
                            }))
                            .computeFaces()
                            .computeNormals(),
                          (R = this.createBuffers('glyph', x))),
                        !0),
                      _ = !1,
                      x = void 0;
                    try {
                      for (
                        var D,
                          N = this.retainedMode.buffers.text[Symbol.iterator]();
                        !(O = (D = N.next()).done);
                        O = !0
                      )
                        D.value._prepareBuffer(R, A);
                    } catch (ce) {
                      (_ = !0), (x = ce);
                    } finally {
                      try {
                        O || N.return == null || N.return();
                      } finally {
                        if (_) throw x;
                      }
                    }
                    this._bindBuffer(R.indexBuffer, k.ELEMENT_ARRAY_BUFFER),
                      A.setUniform('uMaterialColor', this.curFillColor);
                    try {
                      var U = 0,
                        H = null,
                        q = M.stringToGlyphs(g),
                        z = !0,
                        X = !1,
                        W = void 0;
                      try {
                        for (
                          var Z, $ = q[Symbol.iterator]();
                          !(z = (Z = $.next()).done);
                          z = !0
                        ) {
                          var ae,
                            P,
                            L = Z.value,
                            B =
                              (H && (U += M.getKerningValue(H, L)),
                              C.getGlyphInfo(L));
                          B.uGlyphRect &&
                            ((ae = B.rowInfo),
                            (P = B.colInfo),
                            A.setUniform(
                              'uSamplerStrokes',
                              B.strokeImageInfo.imageData,
                            ),
                            A.setUniform(
                              'uSamplerRowStrokes',
                              ae.cellImageInfo.imageData,
                            ),
                            A.setUniform(
                              'uSamplerRows',
                              ae.dimImageInfo.imageData,
                            ),
                            A.setUniform(
                              'uSamplerColStrokes',
                              P.cellImageInfo.imageData,
                            ),
                            A.setUniform(
                              'uSamplerCols',
                              P.dimImageInfo.imageData,
                            ),
                            A.setUniform('uGridOffset', B.uGridOffset),
                            A.setUniform('uGlyphRect', B.uGlyphRect),
                            A.setUniform('uGlyphOffset', U),
                            A.bindTextures(),
                            k.drawElements(
                              k.TRIANGLES,
                              6,
                              this.GL.UNSIGNED_SHORT,
                              0,
                            )),
                            (U += L.advanceWidth),
                            (H = L);
                        }
                      } catch (ce) {
                        (X = !0), (W = ce);
                      } finally {
                        try {
                          z || $.return == null || $.return();
                        } finally {
                          if (X) throw W;
                        }
                      }
                    } finally {
                      A.unbindShader(),
                        (this._doStroke = j),
                        (this.drawMode = v),
                        f.pop();
                    }
                  } else
                    console.log(
                      'WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported',
                    );
                  return f;
                }
              } else
                console.log(
                  'WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.',
                );
            };
          },
          {
            '../core/constants': 256,
            '../core/main': 267,
            './p5.RendererGL.Retained': 320,
            './p5.Shader': 322,
            'core-js/modules/es.array.iterator': 158,
            'core-js/modules/es.object.get-own-property-descriptor': 173,
            'core-js/modules/es.object.to-string': 177,
            'core-js/modules/es.regexp.exec': 181,
            'core-js/modules/es.string.iterator': 186,
            'core-js/modules/es.string.split': 191,
            'core-js/modules/es.string.sub': 192,
            'core-js/modules/es.symbol': 196,
            'core-js/modules/es.symbol.description': 194,
            'core-js/modules/es.symbol.iterator': 195,
            'core-js/modules/es.weak-map': 228,
            'core-js/modules/web.dom-collections.iterator': 230,
          },
        ],
      },
      {},
      [251],
    )(251);
  });
})(_a);
const Jl = Ql(_a.exports),
  zt = (T, i) => fxrand() * (i - T) + T,
  Kl = () => eu([zt(0, 1), 1, zt(0.5, 0.8)]);
function eu([T, i, m]) {
  var t, b, y;
  if (i == 0) t = b = y = m;
  else {
    var u = function (d, h, o) {
        return (
          o < 0 && (o += 1),
          o > 1 && (o -= 1),
          o < 0.16666666666666666
            ? d + (h - d) * 6 * o
            : o < 0.5
            ? h
            : o < 0.6666666666666666
            ? d + (h - d) * (0.6666666666666666 - o) * 6
            : d
        );
      },
      a = m < 0.5 ? m * (1 + i) : m + i - m * i,
      r = 2 * m - a;
    (t = u(r, a, T + 1 / 3)), (b = u(r, a, T)), (y = u(r, a, T - 1 / 3));
  }
  return [Math.round(t * 255), Math.round(b * 255), Math.round(y * 255)];
}
const tu = () => {
    const T = [
        'contextmenu',
        'dblclick',
        'mousedown',
        'mouseenter',
        'mouseleave',
        'mousemove',
        'mouseover',
        'mouseout',
        'mouseup',
        'keydown',
        'keypress',
        'keyup',
        'blur',
        'change',
        'focus',
        'focusin',
        'focusout',
        'input',
        'invalid',
        'reset',
        'scroll',
        'search',
        'select',
        'submit',
        'drag',
        'dragend',
        'dragenter',
        'dragleave',
        'dragover',
        'dragstart',
        'drop',
        'copy',
        'cut',
        'paste',
        'mousewheel',
        'wheel',
        'touchcancel',
        'touchmove',
      ],
      i = (m) => {
        m.stopPropagation(), m.preventDefault();
      };
    for (let m = 0, t = T.length; m < t; m++)
      document.addEventListener(T[m], i, { passive: !1 });
  },
  Co = (T) => {
    const { clientWidth: i, clientHeight: m } = T;
    return i > m ? i : m;
  },
  wa = '14.7.77',
  ea = (T, i, m) => ({
    endTime: i,
    insertTime: m,
    type: 'exponentialRampToValue',
    value: T,
  }),
  ta = (T, i, m) => ({
    endTime: i,
    insertTime: m,
    type: 'linearRampToValue',
    value: T,
  }),
  Oo = (T, i) => ({ startTime: i, type: 'setValue', value: T }),
  xa = (T, i, m) => ({
    duration: m,
    startTime: i,
    type: 'setValueCurve',
    values: T,
  }),
  ja = (T, i, { startTime: m, target: t, timeConstant: b }) =>
    t + (i - t) * Math.exp((m - T) / b),
  En = (T) => T.type === 'exponentialRampToValue',
  Bs = (T) => T.type === 'linearRampToValue',
  tn = (T) => En(T) || Bs(T),
  Go = (T) => T.type === 'setValue',
  qr = (T) => T.type === 'setValueCurve',
  Vs = (T, i, m, t) => {
    const b = T[i];
    return b === void 0
      ? t
      : tn(b) || Go(b)
      ? b.value
      : qr(b)
      ? b.values[b.values.length - 1]
      : ja(m, Vs(T, i - 1, b.startTime, t), b);
  },
  ra = (T, i, m, t, b) =>
    m === void 0
      ? [t.insertTime, b]
      : tn(m)
      ? [m.endTime, m.value]
      : Go(m)
      ? [m.startTime, m.value]
      : qr(m)
      ? [m.startTime + m.duration, m.values[m.values.length - 1]]
      : [m.startTime, Vs(T, i - 1, m.startTime, b)],
  Ao = (T) => T.type === 'cancelAndHold',
  Ro = (T) => T.type === 'cancelScheduledValues',
  en = (T) =>
    Ao(T) || Ro(T) ? T.cancelTime : En(T) || Bs(T) ? T.endTime : T.startTime,
  na = (T, i, m, { endTime: t, value: b }) =>
    m === b
      ? b
      : (0 < m && 0 < b) || (m < 0 && b < 0)
      ? m * (b / m) ** ((T - i) / (t - i))
      : 0,
  sa = (T, i, m, { endTime: t, value: b }) => m + ((T - i) / (t - i)) * (b - m),
  ru = (T, i) => {
    const m = Math.floor(i),
      t = Math.ceil(i);
    return m === t ? T[m] : (1 - (i - m)) * T[m] + (1 - (t - i)) * T[t];
  },
  nu = (T, { duration: i, startTime: m, values: t }) => {
    const b = ((T - m) / i) * (t.length - 1);
    return ru(t, b);
  },
  Ps = (T) => T.type === 'setTarget';
class su {
  constructor(i) {
    (this._automationEvents = []),
      (this._currenTime = 0),
      (this._defaultValue = i);
  }
  [Symbol.iterator]() {
    return this._automationEvents[Symbol.iterator]();
  }
  add(i) {
    const m = en(i);
    if (Ao(i) || Ro(i)) {
      const t = this._automationEvents.findIndex((y) =>
          Ro(i) && qr(y) ? y.startTime + y.duration >= m : en(y) >= m,
        ),
        b = this._automationEvents[t];
      if (
        (t !== -1 &&
          (this._automationEvents = this._automationEvents.slice(0, t)),
        Ao(i))
      ) {
        const y = this._automationEvents[this._automationEvents.length - 1];
        if (b !== void 0 && tn(b)) {
          if (y !== void 0 && Ps(y))
            throw new Error('The internal list is malformed.');
          const u =
              y === void 0
                ? b.insertTime
                : qr(y)
                ? y.startTime + y.duration
                : en(y),
            a =
              y === void 0
                ? this._defaultValue
                : qr(y)
                ? y.values[y.values.length - 1]
                : y.value,
            r = En(b) ? na(m, u, a, b) : sa(m, u, a, b),
            l = En(b) ? ea(r, m, this._currenTime) : ta(r, m, this._currenTime);
          this._automationEvents.push(l);
        }
        if (
          (y !== void 0 &&
            Ps(y) &&
            this._automationEvents.push(Oo(this.getValue(m), m)),
          y !== void 0 && qr(y) && y.startTime + y.duration > m)
        ) {
          const u = m - y.startTime,
            a = (y.values.length - 1) / y.duration,
            r = Math.max(2, 1 + Math.ceil(u * a)),
            l = (u / (r - 1)) * a,
            d = y.values.slice(0, r);
          if (l < 1)
            for (let h = 1; h < r; h += 1) {
              const o = (l * h) % 1;
              d[h] = y.values[h - 1] * (1 - o) + y.values[h] * o;
            }
          this._automationEvents[this._automationEvents.length - 1] = xa(
            d,
            y.startTime,
            u,
          );
        }
      }
    } else {
      const t = this._automationEvents.findIndex((u) => en(u) > m),
        b =
          t === -1
            ? this._automationEvents[this._automationEvents.length - 1]
            : this._automationEvents[t - 1];
      if (b !== void 0 && qr(b) && en(b) + b.duration > m) return !1;
      const y = En(i)
        ? ea(i.value, i.endTime, this._currenTime)
        : Bs(i)
        ? ta(i.value, m, this._currenTime)
        : i;
      if (t === -1) this._automationEvents.push(y);
      else {
        if (qr(i) && m + i.duration > en(this._automationEvents[t])) return !1;
        this._automationEvents.splice(t, 0, y);
      }
    }
    return !0;
  }
  flush(i) {
    const m = this._automationEvents.findIndex((t) => en(t) > i);
    if (m > 1) {
      const t = this._automationEvents.slice(m - 1),
        b = t[0];
      Ps(b) &&
        t.unshift(
          Oo(
            Vs(this._automationEvents, m - 2, b.startTime, this._defaultValue),
            b.startTime,
          ),
        ),
        (this._automationEvents = t);
    }
  }
  getValue(i) {
    if (this._automationEvents.length === 0) return this._defaultValue;
    const m = this._automationEvents.findIndex((u) => en(u) > i),
      t = this._automationEvents[m],
      b = (m === -1 ? this._automationEvents.length : m) - 1,
      y = this._automationEvents[b];
    if (y !== void 0 && Ps(y) && (t === void 0 || !tn(t) || t.insertTime > i))
      return ja(
        i,
        Vs(this._automationEvents, b - 1, y.startTime, this._defaultValue),
        y,
      );
    if (y !== void 0 && Go(y) && (t === void 0 || !tn(t))) return y.value;
    if (
      y !== void 0 &&
      qr(y) &&
      (t === void 0 || !tn(t) || y.startTime + y.duration > i)
    )
      return i < y.startTime + y.duration
        ? nu(i, y)
        : y.values[y.values.length - 1];
    if (y !== void 0 && tn(y) && (t === void 0 || !tn(t))) return y.value;
    if (t !== void 0 && En(t)) {
      const [u, a] = ra(this._automationEvents, b, y, t, this._defaultValue);
      return na(i, u, a, t);
    }
    if (t !== void 0 && Bs(t)) {
      const [u, a] = ra(this._automationEvents, b, y, t, this._defaultValue);
      return sa(i, u, a, t);
    }
    return this._defaultValue;
  }
}
const ou = (T) => ({ cancelTime: T, type: 'cancelAndHold' }),
  iu = (T) => ({ cancelTime: T, type: 'cancelScheduledValues' }),
  au = (T, i) => ({ endTime: i, type: 'exponentialRampToValue', value: T }),
  lu = (T, i) => ({ endTime: i, type: 'linearRampToValue', value: T }),
  uu = (T, i, m) => ({
    startTime: i,
    target: T,
    timeConstant: m,
    type: 'setTarget',
  }),
  cu = () => new DOMException('', 'AbortError'),
  du =
    (T) =>
    (i, m, [t, b, y], u) => {
      T(i[b], [m, t, y], (a) => a[0] === m && a[1] === t, u);
    },
  hu = (T) => (i, m, t) => {
    const b = [];
    for (let y = 0; y < t.numberOfInputs; y += 1) b.push(new Set());
    T.set(i, {
      activeInputs: b,
      outputs: new Set(),
      passiveInputs: new WeakMap(),
      renderer: m,
    });
  },
  fu = (T) => (i, m) => {
    T.set(i, {
      activeInputs: new Set(),
      passiveInputs: new WeakMap(),
      renderer: m,
    });
  },
  Rn = new WeakSet(),
  Sa = new WeakMap(),
  Wo = new WeakMap(),
  Ta = new WeakMap(),
  qo = new WeakMap(),
  uo = new WeakMap(),
  Ma = new WeakMap(),
  Po = new WeakMap(),
  Io = new WeakMap(),
  Do = new WeakMap(),
  Ca = {
    construct() {
      return Ca;
    },
  },
  pu = (T) => {
    try {
      const i = new Proxy(T, Ca);
      new i();
    } catch {
      return !1;
    }
    return !0;
  },
  oa =
    /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,
  ia = (T, i) => {
    const m = [];
    let t = T.replace(/^[\s]+/, ''),
      b = t.match(oa);
    for (; b !== null; ) {
      const y = b[1].slice(1, -1),
        u = b[0]
          .replace(/([\s]+)?;?$/, '')
          .replace(y, new URL(y, i).toString());
      m.push(u),
        (t = t.slice(b[0].length).replace(/^[\s]+/, '')),
        (b = t.match(oa));
    }
    return [m.join(';'), t];
  },
  aa = (T) => {
    if (T !== void 0 && !Array.isArray(T))
      throw new TypeError(
        'The parameterDescriptors property of given value for processorCtor is not an array.',
      );
  },
  la = (T) => {
    if (!pu(T))
      throw new TypeError(
        'The given value for processorCtor should be a constructor.',
      );
    if (T.prototype === null || typeof T.prototype != 'object')
      throw new TypeError(
        'The given value for processorCtor should have a prototype.',
      );
  },
  mu = (T, i, m, t, b, y, u, a, r, l, d, h, o) => {
    let s = 0;
    return (n, c, f = { credentials: 'omit' }) => {
      const g = d.get(n);
      if (g !== void 0 && g.has(c)) return Promise.resolve();
      const _ = l.get(n);
      if (_ !== void 0) {
        const v = _.get(c);
        if (v !== void 0) return v;
      }
      const x = y(n),
        j =
          x.audioWorklet === void 0
            ? b(c)
                .then(([v, M]) => {
                  const [C, k] = ia(v, M),
                    A = `${C};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${k}
})})(window,'_AWGS')`;
                  return m(A);
                })
                .then(() => {
                  const v = o._AWGS.pop();
                  if (v === void 0) throw new SyntaxError();
                  t(x.currentTime, x.sampleRate, () =>
                    v(
                      class {},
                      void 0,
                      (M, C) => {
                        if (M.trim() === '') throw i();
                        const k = Io.get(x);
                        if (k !== void 0) {
                          if (k.has(M)) throw i();
                          la(C), aa(C.parameterDescriptors), k.set(M, C);
                        } else
                          la(C),
                            aa(C.parameterDescriptors),
                            Io.set(x, new Map([[M, C]]));
                      },
                      x.sampleRate,
                      void 0,
                      void 0,
                    ),
                  );
                })
            : Promise.all([b(c), Promise.resolve(T(h, h))]).then(
                ([[v, M], C]) => {
                  const k = s + 1;
                  s = k;
                  const [A, R] = ia(v, M),
                    U = `${A};((AudioWorkletProcessor,registerProcessor)=>{${R}
})(${
                      C
                        ? 'AudioWorkletProcessor'
                        : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}'
                    },(n,p)=>registerProcessor(n,class extends p{${
                      C
                        ? ''
                        : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));'
                    }process(i,o,p){${
                      C
                        ? ''
                        : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));'
                    }return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${k}',class extends AudioWorkletProcessor{process(){return !1}})`,
                    H = new Blob([U], {
                      type: 'application/javascript; charset=utf-8',
                    }),
                    q = URL.createObjectURL(H);
                  return x.audioWorklet
                    .addModule(q, f)
                    .then(() => {
                      if (a(x)) return x;
                      const z = u(x);
                      return z.audioWorklet.addModule(q, f).then(() => z);
                    })
                    .then((z) => {
                      if (r === null) throw new SyntaxError();
                      try {
                        new r(z, `__sac${k}`);
                      } catch {
                        throw new SyntaxError();
                      }
                    })
                    .finally(() => URL.revokeObjectURL(q));
                },
              );
      return (
        _ === void 0 ? l.set(n, new Map([[c, j]])) : _.set(c, j),
        j
          .then(() => {
            const v = d.get(n);
            v === void 0 ? d.set(n, new Set([c])) : v.add(c);
          })
          .finally(() => {
            const v = l.get(n);
            v !== void 0 && v.delete(c);
          }),
        j
      );
    };
  },
  Er = (T, i) => {
    const m = T.get(i);
    if (m === void 0)
      throw new Error('A value with the given key could not be found.');
    return m;
  },
  co = (T, i) => {
    const m = Array.from(T).filter(i);
    if (m.length > 1) throw Error('More than one element was found.');
    if (m.length === 0) throw Error('No element was found.');
    const [t] = m;
    return T.delete(t), t;
  },
  Ea = (T, i, m, t) => {
    const b = Er(T, i),
      y = co(b, (u) => u[0] === m && u[1] === t);
    return b.size === 0 && T.delete(i), y;
  },
  ms = (T) => Er(Ma, T),
  Pn = (T) => {
    if (Rn.has(T)) throw new Error('The AudioNode is already stored.');
    Rn.add(T), ms(T).forEach((i) => i(!0));
  },
  ka = (T) => 'port' in T,
  ys = (T) => {
    if (!Rn.has(T)) throw new Error('The AudioNode is not stored.');
    Rn.delete(T), ms(T).forEach((i) => i(!1));
  },
  Lo = (T, i) => {
    !ka(T) && i.every((m) => m.size === 0) && ys(T);
  },
  yu = (T, i, m, t, b, y, u, a, r, l, d, h, o) => {
    const s = new WeakMap();
    return (n, c, f, g, _) => {
      const { activeInputs: x, passiveInputs: j } = y(c),
        { outputs: v } = y(n),
        M = a(n),
        C = (k) => {
          const A = r(c),
            R = r(n);
          if (k) {
            const O = Ea(j, n, f, g);
            T(x, n, O, !1), !_ && !h(n) && m(R, A, f, g), o(c) && Pn(c);
          } else {
            const O = t(x, n, f, g);
            i(j, g, O, !1), !_ && !h(n) && b(R, A, f, g);
            const D = u(c);
            if (D === 0) d(c) && Lo(c, x);
            else {
              const N = s.get(c);
              N !== void 0 && clearTimeout(N),
                s.set(
                  c,
                  setTimeout(() => {
                    d(c) && Lo(c, x);
                  }, D * 1e3),
                );
            }
          }
        };
      return l(v, [c, f, g], (k) => k[0] === c && k[1] === f && k[2] === g, !0)
        ? (M.add(C), d(n) ? T(x, n, [f, g, C], !0) : i(j, g, [n, f, C], !0), !0)
        : !1;
    };
  },
  gu =
    (T) =>
    (i, m, [t, b, y], u) => {
      const a = i.get(t);
      a === void 0
        ? i.set(t, new Set([[b, m, y]]))
        : T(a, [b, m, y], (r) => r[0] === b && r[1] === m, u);
    },
  vu = (T) => (i, m) => {
    const t = T(i, {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      gain: 0,
    });
    m.connect(t).connect(i.destination);
    const b = () => {
      m.removeEventListener('ended', b), m.disconnect(t), t.disconnect();
    };
    m.addEventListener('ended', b);
  },
  bu = (T) => (i, m) => {
    T(i).add(m);
  },
  _u = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    fftSize: 2048,
    maxDecibels: -30,
    minDecibels: -100,
    smoothingTimeConstant: 0.8,
  },
  wu = (T, i, m, t, b, y) =>
    class extends T {
      constructor(a, r) {
        const l = b(a),
          d = { ..._u, ...r },
          h = t(l, d),
          o = y(l) ? i() : null;
        super(a, !1, h, o), (this._nativeAnalyserNode = h);
      }
      get fftSize() {
        return this._nativeAnalyserNode.fftSize;
      }
      set fftSize(a) {
        this._nativeAnalyserNode.fftSize = a;
      }
      get frequencyBinCount() {
        return this._nativeAnalyserNode.frequencyBinCount;
      }
      get maxDecibels() {
        return this._nativeAnalyserNode.maxDecibels;
      }
      set maxDecibels(a) {
        const r = this._nativeAnalyserNode.maxDecibels;
        if (
          ((this._nativeAnalyserNode.maxDecibels = a),
          !(a > this._nativeAnalyserNode.minDecibels))
        )
          throw ((this._nativeAnalyserNode.maxDecibels = r), m());
      }
      get minDecibels() {
        return this._nativeAnalyserNode.minDecibels;
      }
      set minDecibels(a) {
        const r = this._nativeAnalyserNode.minDecibels;
        if (
          ((this._nativeAnalyserNode.minDecibels = a),
          !(this._nativeAnalyserNode.maxDecibels > a))
        )
          throw ((this._nativeAnalyserNode.minDecibels = r), m());
      }
      get smoothingTimeConstant() {
        return this._nativeAnalyserNode.smoothingTimeConstant;
      }
      set smoothingTimeConstant(a) {
        this._nativeAnalyserNode.smoothingTimeConstant = a;
      }
      getByteFrequencyData(a) {
        this._nativeAnalyserNode.getByteFrequencyData(a);
      }
      getByteTimeDomainData(a) {
        this._nativeAnalyserNode.getByteTimeDomainData(a);
      }
      getFloatFrequencyData(a) {
        this._nativeAnalyserNode.getFloatFrequencyData(a);
      }
      getFloatTimeDomainData(a) {
        this._nativeAnalyserNode.getFloatTimeDomainData(a);
      }
    },
  ur = (T, i) => T.context === i,
  xu = (T, i, m) => () => {
    const t = new WeakMap(),
      b = async (y, u) => {
        let a = i(y);
        if (!ur(a, u)) {
          const l = {
            channelCount: a.channelCount,
            channelCountMode: a.channelCountMode,
            channelInterpretation: a.channelInterpretation,
            fftSize: a.fftSize,
            maxDecibels: a.maxDecibels,
            minDecibels: a.minDecibels,
            smoothingTimeConstant: a.smoothingTimeConstant,
          };
          a = T(u, l);
        }
        return t.set(u, a), await m(y, u, a), a;
      };
    return {
      render(y, u) {
        const a = t.get(u);
        return a !== void 0 ? Promise.resolve(a) : b(y, u);
      },
    };
  },
  Gs = (T) => {
    try {
      T.copyToChannel(new Float32Array(1), 0, -1);
    } catch {
      return !1;
    }
    return !0;
  },
  Fr = () => new DOMException('', 'IndexSizeError'),
  zo = (T) => {
    T.getChannelData = ((i) => (m) => {
      try {
        return i.call(T, m);
      } catch (t) {
        throw t.code === 12 ? Fr() : t;
      }
    })(T.getChannelData);
  },
  ju = { numberOfChannels: 1 },
  Su = (T, i, m, t, b, y, u, a) => {
    let r = null;
    return class Oa {
      constructor(d) {
        if (b === null)
          throw new Error(
            'Missing the native OfflineAudioContext constructor.',
          );
        const {
          length: h,
          numberOfChannels: o,
          sampleRate: s,
        } = { ...ju, ...d };
        r === null && (r = new b(1, 1, 44100));
        const n =
          t !== null && i(y, y)
            ? new t({ length: h, numberOfChannels: o, sampleRate: s })
            : r.createBuffer(o, h, s);
        if (n.numberOfChannels === 0) throw m();
        return (
          typeof n.copyFromChannel != 'function'
            ? (u(n), zo(n))
            : i(Gs, () => Gs(n)) || a(n),
          T.add(n),
          n
        );
      }
      static [Symbol.hasInstance](d) {
        return (
          (d !== null &&
            typeof d == 'object' &&
            Object.getPrototypeOf(d) === Oa.prototype) ||
          T.has(d)
        );
      }
    };
  },
  pr = -34028234663852886e22,
  cr = -pr,
  Hr = (T) => Rn.has(T),
  Tu = {
    buffer: null,
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    loop: !1,
    loopEnd: 0,
    loopStart: 0,
    playbackRate: 1,
  },
  Mu = (T, i, m, t, b, y, u, a) =>
    class extends T {
      constructor(l, d) {
        const h = y(l),
          o = { ...Tu, ...d },
          s = b(h, o),
          n = u(h),
          c = n ? i() : null;
        super(l, !1, s, c),
          (this._audioBufferSourceNodeRenderer = c),
          (this._isBufferNullified = !1),
          (this._isBufferSet = o.buffer !== null),
          (this._nativeAudioBufferSourceNode = s),
          (this._onended = null),
          (this._playbackRate = m(this, n, s.playbackRate, cr, pr));
      }
      get buffer() {
        return this._isBufferNullified
          ? null
          : this._nativeAudioBufferSourceNode.buffer;
      }
      set buffer(l) {
        if (((this._nativeAudioBufferSourceNode.buffer = l), l !== null)) {
          if (this._isBufferSet) throw t();
          this._isBufferSet = !0;
        }
      }
      get loop() {
        return this._nativeAudioBufferSourceNode.loop;
      }
      set loop(l) {
        this._nativeAudioBufferSourceNode.loop = l;
      }
      get loopEnd() {
        return this._nativeAudioBufferSourceNode.loopEnd;
      }
      set loopEnd(l) {
        this._nativeAudioBufferSourceNode.loopEnd = l;
      }
      get loopStart() {
        return this._nativeAudioBufferSourceNode.loopStart;
      }
      set loopStart(l) {
        this._nativeAudioBufferSourceNode.loopStart = l;
      }
      get onended() {
        return this._onended;
      }
      set onended(l) {
        const d = typeof l == 'function' ? a(this, l) : null;
        this._nativeAudioBufferSourceNode.onended = d;
        const h = this._nativeAudioBufferSourceNode.onended;
        this._onended = h !== null && h === d ? l : h;
      }
      get playbackRate() {
        return this._playbackRate;
      }
      start(l = 0, d = 0, h) {
        if (
          (this._nativeAudioBufferSourceNode.start(l, d, h),
          this._audioBufferSourceNodeRenderer !== null &&
            (this._audioBufferSourceNodeRenderer.start =
              h === void 0 ? [l, d] : [l, d, h]),
          this.context.state !== 'closed')
        ) {
          Pn(this);
          const o = () => {
            this._nativeAudioBufferSourceNode.removeEventListener('ended', o),
              Hr(this) && ys(this);
          };
          this._nativeAudioBufferSourceNode.addEventListener('ended', o);
        }
      }
      stop(l = 0) {
        this._nativeAudioBufferSourceNode.stop(l),
          this._audioBufferSourceNodeRenderer !== null &&
            (this._audioBufferSourceNodeRenderer.stop = l);
      }
    },
  Cu = (T, i, m, t, b) => () => {
    const y = new WeakMap();
    let u = null,
      a = null;
    const r = async (l, d) => {
      let h = m(l);
      const o = ur(h, d);
      if (!o) {
        const s = {
          buffer: h.buffer,
          channelCount: h.channelCount,
          channelCountMode: h.channelCountMode,
          channelInterpretation: h.channelInterpretation,
          loop: h.loop,
          loopEnd: h.loopEnd,
          loopStart: h.loopStart,
          playbackRate: h.playbackRate.value,
        };
        (h = i(d, s)), u !== null && h.start(...u), a !== null && h.stop(a);
      }
      return (
        y.set(d, h),
        o
          ? await T(d, l.playbackRate, h.playbackRate)
          : await t(d, l.playbackRate, h.playbackRate),
        await b(l, d, h),
        h
      );
    };
    return {
      set start(l) {
        u = l;
      },
      set stop(l) {
        a = l;
      },
      render(l, d) {
        const h = y.get(d);
        return h !== void 0 ? Promise.resolve(h) : r(l, d);
      },
    };
  },
  Eu = (T) => 'playbackRate' in T,
  ku = (T) => 'frequency' in T && 'gain' in T,
  Ou = (T) => 'offset' in T,
  Au = (T) => !('frequency' in T) && 'gain' in T,
  Ru = (T) => 'detune' in T && 'frequency' in T,
  Pu = (T) => 'pan' in T,
  dr = (T) => Er(Sa, T),
  gs = (T) => Er(Ta, T),
  No = (T, i) => {
    const { activeInputs: m } = dr(T);
    m.forEach((b) =>
      b.forEach(([y]) => {
        i.includes(T) || No(y, [...i, T]);
      }),
    );
    const t = Eu(T)
      ? [T.playbackRate]
      : ka(T)
      ? Array.from(T.parameters.values())
      : ku(T)
      ? [T.Q, T.detune, T.frequency, T.gain]
      : Ou(T)
      ? [T.offset]
      : Au(T)
      ? [T.gain]
      : Ru(T)
      ? [T.detune, T.frequency]
      : Pu(T)
      ? [T.pan]
      : [];
    for (const b of t) {
      const y = gs(b);
      y !== void 0 && y.activeInputs.forEach(([u]) => No(u, i));
    }
    Hr(T) && ys(T);
  },
  Aa = (T) => {
    No(T.destination, []);
  },
  Iu = (T) =>
    T === void 0 ||
    typeof T == 'number' ||
    (typeof T == 'string' &&
      (T === 'balanced' || T === 'interactive' || T === 'playback')),
  Du = (T, i, m, t, b, y, u, a, r) =>
    class extends T {
      constructor(d = {}) {
        if (r === null)
          throw new Error('Missing the native AudioContext constructor.');
        let h;
        try {
          h = new r(d);
        } catch (n) {
          throw n.code === 12 && n.message === 'sampleRate is not in range'
            ? m()
            : n;
        }
        if (h === null) throw t();
        if (!Iu(d.latencyHint))
          throw new TypeError(
            `The provided value '${d.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`,
          );
        if (d.sampleRate !== void 0 && h.sampleRate !== d.sampleRate) throw m();
        super(h, 2);
        const { latencyHint: o } = d,
          { sampleRate: s } = h;
        if (
          ((this._baseLatency =
            typeof h.baseLatency == 'number'
              ? h.baseLatency
              : o === 'balanced'
              ? 512 / s
              : o === 'interactive' || o === void 0
              ? 256 / s
              : o === 'playback'
              ? 1024 / s
              : (Math.max(2, Math.min(128, Math.round((o * s) / 128))) * 128) /
                s),
          (this._nativeAudioContext = h),
          r.name === 'webkitAudioContext'
            ? ((this._nativeGainNode = h.createGain()),
              (this._nativeOscillatorNode = h.createOscillator()),
              (this._nativeGainNode.gain.value = 1e-37),
              this._nativeOscillatorNode
                .connect(this._nativeGainNode)
                .connect(h.destination),
              this._nativeOscillatorNode.start())
            : ((this._nativeGainNode = null),
              (this._nativeOscillatorNode = null)),
          (this._state = null),
          h.state === 'running')
        ) {
          this._state = 'suspended';
          const n = () => {
            this._state === 'suspended' && (this._state = null),
              h.removeEventListener('statechange', n);
          };
          h.addEventListener('statechange', n);
        }
      }
      get baseLatency() {
        return this._baseLatency;
      }
      get state() {
        return this._state !== null
          ? this._state
          : this._nativeAudioContext.state;
      }
      close() {
        return this.state === 'closed'
          ? this._nativeAudioContext.close().then(() => {
              throw i();
            })
          : (this._state === 'suspended' && (this._state = null),
            this._nativeAudioContext.close().then(() => {
              this._nativeGainNode !== null &&
                this._nativeOscillatorNode !== null &&
                (this._nativeOscillatorNode.stop(),
                this._nativeGainNode.disconnect(),
                this._nativeOscillatorNode.disconnect()),
                Aa(this);
            }));
      }
      createMediaElementSource(d) {
        return new b(this, { mediaElement: d });
      }
      createMediaStreamDestination() {
        return new y(this);
      }
      createMediaStreamSource(d) {
        return new u(this, { mediaStream: d });
      }
      createMediaStreamTrackSource(d) {
        return new a(this, { mediaStreamTrack: d });
      }
      resume() {
        return this._state === 'suspended'
          ? new Promise((d, h) => {
              const o = () => {
                this._nativeAudioContext.removeEventListener('statechange', o),
                  this._nativeAudioContext.state === 'running'
                    ? d()
                    : this.resume().then(d, h);
              };
              this._nativeAudioContext.addEventListener('statechange', o);
            })
          : this._nativeAudioContext.resume().catch((d) => {
              throw d === void 0 || d.code === 15 ? i() : d;
            });
      }
      suspend() {
        return this._nativeAudioContext.suspend().catch((d) => {
          throw d === void 0 ? i() : d;
        });
      }
    },
  Lu = (T, i, m, t, b, y, u, a) =>
    class extends T {
      constructor(l, d) {
        const h = y(l),
          o = u(h),
          s = b(h, d, o),
          n = o ? i(a) : null;
        super(l, !1, s, n),
          (this._isNodeOfNativeOfflineAudioContext = o),
          (this._nativeAudioDestinationNode = s);
      }
      get channelCount() {
        return this._nativeAudioDestinationNode.channelCount;
      }
      set channelCount(l) {
        if (this._isNodeOfNativeOfflineAudioContext) throw t();
        if (l > this._nativeAudioDestinationNode.maxChannelCount) throw m();
        this._nativeAudioDestinationNode.channelCount = l;
      }
      get channelCountMode() {
        return this._nativeAudioDestinationNode.channelCountMode;
      }
      set channelCountMode(l) {
        if (this._isNodeOfNativeOfflineAudioContext) throw t();
        this._nativeAudioDestinationNode.channelCountMode = l;
      }
      get maxChannelCount() {
        return this._nativeAudioDestinationNode.maxChannelCount;
      }
    },
  Nu = (T) => {
    const i = new WeakMap(),
      m = async (t, b) => {
        const y = b.destination;
        return i.set(b, y), await T(t, b, y), y;
      };
    return {
      render(t, b) {
        const y = i.get(b);
        return y !== void 0 ? Promise.resolve(y) : m(t, b);
      },
    };
  },
  Fu = (T, i, m, t, b, y, u, a) => (r, l) => {
    const d = l.listener,
      h = () => {
        const v = new Float32Array(1),
          M = i(l, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'speakers',
            numberOfInputs: 9,
          }),
          C = u(l);
        let k = !1,
          A = [0, 0, -1, 0, 1, 0],
          R = [0, 0, 0];
        const O = () => {
            if (k) return;
            k = !0;
            const H = t(l, 256, 9, 0);
            (H.onaudioprocess = ({ inputBuffer: q }) => {
              const z = [
                y(q, v, 0),
                y(q, v, 1),
                y(q, v, 2),
                y(q, v, 3),
                y(q, v, 4),
                y(q, v, 5),
              ];
              z.some((W, Z) => W !== A[Z]) && (d.setOrientation(...z), (A = z));
              const X = [y(q, v, 6), y(q, v, 7), y(q, v, 8)];
              X.some((W, Z) => W !== R[Z]) && (d.setPosition(...X), (R = X));
            }),
              M.connect(H);
          },
          D = (H) => (q) => {
            q !== A[H] && ((A[H] = q), d.setOrientation(...A));
          },
          N = (H) => (q) => {
            q !== R[H] && ((R[H] = q), d.setPosition(...R));
          },
          U = (H, q, z) => {
            const X = m(l, {
              channelCount: 1,
              channelCountMode: 'explicit',
              channelInterpretation: 'discrete',
              offset: q,
            });
            X.connect(M, 0, H),
              X.start(),
              Object.defineProperty(X.offset, 'defaultValue', {
                get() {
                  return q;
                },
              });
            const W = T({ context: r }, C, X.offset, cr, pr);
            return (
              a(
                W,
                'value',
                (Z) => () => Z.call(W),
                (Z) => ($) => {
                  try {
                    Z.call(W, $);
                  } catch (ae) {
                    if (ae.code !== 9) throw ae;
                  }
                  O(), C && z($);
                },
              ),
              (W.cancelAndHoldAtTime = ((Z) =>
                C
                  ? () => {
                      throw b();
                    }
                  : (...$) => {
                      const ae = Z.apply(W, $);
                      return O(), ae;
                    })(W.cancelAndHoldAtTime)),
              (W.cancelScheduledValues = ((Z) =>
                C
                  ? () => {
                      throw b();
                    }
                  : (...$) => {
                      const ae = Z.apply(W, $);
                      return O(), ae;
                    })(W.cancelScheduledValues)),
              (W.exponentialRampToValueAtTime = ((Z) =>
                C
                  ? () => {
                      throw b();
                    }
                  : (...$) => {
                      const ae = Z.apply(W, $);
                      return O(), ae;
                    })(W.exponentialRampToValueAtTime)),
              (W.linearRampToValueAtTime = ((Z) =>
                C
                  ? () => {
                      throw b();
                    }
                  : (...$) => {
                      const ae = Z.apply(W, $);
                      return O(), ae;
                    })(W.linearRampToValueAtTime)),
              (W.setTargetAtTime = ((Z) =>
                C
                  ? () => {
                      throw b();
                    }
                  : (...$) => {
                      const ae = Z.apply(W, $);
                      return O(), ae;
                    })(W.setTargetAtTime)),
              (W.setValueAtTime = ((Z) =>
                C
                  ? () => {
                      throw b();
                    }
                  : (...$) => {
                      const ae = Z.apply(W, $);
                      return O(), ae;
                    })(W.setValueAtTime)),
              (W.setValueCurveAtTime = ((Z) =>
                C
                  ? () => {
                      throw b();
                    }
                  : (...$) => {
                      const ae = Z.apply(W, $);
                      return O(), ae;
                    })(W.setValueCurveAtTime)),
              W
            );
          };
        return {
          forwardX: U(0, 0, D(0)),
          forwardY: U(1, 0, D(1)),
          forwardZ: U(2, -1, D(2)),
          positionX: U(6, 0, N(0)),
          positionY: U(7, 0, N(1)),
          positionZ: U(8, 0, N(2)),
          upX: U(3, 0, D(3)),
          upY: U(4, 1, D(4)),
          upZ: U(5, 0, D(5)),
        };
      },
      {
        forwardX: o,
        forwardY: s,
        forwardZ: n,
        positionX: c,
        positionY: f,
        positionZ: g,
        upX: _,
        upY: x,
        upZ: j,
      } = d.forwardX === void 0 ? h() : d;
    return {
      get forwardX() {
        return o;
      },
      get forwardY() {
        return s;
      },
      get forwardZ() {
        return n;
      },
      get positionX() {
        return c;
      },
      get positionY() {
        return f;
      },
      get positionZ() {
        return g;
      },
      get upX() {
        return _;
      },
      get upY() {
        return x;
      },
      get upZ() {
        return j;
      },
    };
  },
  Ws = (T) => 'context' in T,
  vs = (T) => Ws(T[0]),
  _n = (T, i, m, t) => {
    for (const b of T)
      if (m(b)) {
        if (t) return !1;
        throw Error('The set contains at least one similar element.');
      }
    return T.add(i), !0;
  },
  ua = (T, i, [m, t], b) => {
    _n(T, [i, m, t], (y) => y[0] === i && y[1] === m, b);
  },
  ca = (T, [i, m, t], b) => {
    const y = T.get(i);
    y === void 0
      ? T.set(i, new Set([[m, t]]))
      : _n(y, [m, t], (u) => u[0] === m, b);
  },
  Nn = (T) => 'inputs' in T,
  qs = (T, i, m, t) => {
    if (Nn(i)) {
      const b = i.inputs[t];
      return T.connect(b, m, 0), [b, m, 0];
    }
    return T.connect(i, m, t), [i, m, t];
  },
  Ra = (T, i, m) => {
    for (const t of T) if (t[0] === i && t[1] === m) return T.delete(t), t;
    return null;
  },
  Uu = (T, i, m) => co(T, (t) => t[0] === i && t[1] === m),
  Pa = (T, i) => {
    if (!ms(T).delete(i))
      throw new Error('Missing the expected event listener.');
  },
  Ia = (T, i, m) => {
    const t = Er(T, i),
      b = co(t, (y) => y[0] === m);
    return t.size === 0 && T.delete(i), b;
  },
  zs = (T, i, m, t) => {
    Nn(i) ? T.disconnect(i.inputs[t], m, 0) : T.disconnect(i, m, t);
  },
  Ot = (T) => Er(Wo, T),
  es = (T) => Er(qo, T),
  fn = (T) => Po.has(T),
  Ns = (T) => !Rn.has(T),
  da = (T, i) =>
    new Promise((m) => {
      if (i !== null) m(!0);
      else {
        const t = T.createScriptProcessor(256, 1, 1),
          b = T.createGain(),
          y = T.createBuffer(1, 2, 44100),
          u = y.getChannelData(0);
        (u[0] = 1), (u[1] = 1);
        const a = T.createBufferSource();
        (a.buffer = y),
          (a.loop = !0),
          a.connect(t).connect(T.destination),
          a.connect(b),
          a.disconnect(b),
          (t.onaudioprocess = (r) => {
            const l = r.inputBuffer.getChannelData(0);
            Array.prototype.some.call(l, (d) => d === 1) ? m(!0) : m(!1),
              a.stop(),
              (t.onaudioprocess = null),
              a.disconnect(t),
              t.disconnect(T.destination);
          }),
          a.start();
      }
    }),
  Eo = (T, i) => {
    const m = new Map();
    for (const t of T)
      for (const b of t) {
        const y = m.get(b);
        m.set(b, y === void 0 ? 1 : y + 1);
      }
    m.forEach((t, b) => i(b, t));
  },
  Hs = (T) => 'context' in T,
  Bu = (T) => {
    const i = new Map();
    (T.connect = (
      (m) =>
      (t, b = 0, y = 0) => {
        const u = Hs(t) ? m(t, b, y) : m(t, b),
          a = i.get(t);
        return (
          a === void 0
            ? i.set(t, [{ input: y, output: b }])
            : a.every((r) => r.input !== y || r.output !== b) &&
              a.push({ input: y, output: b }),
          u
        );
      }
    )(T.connect.bind(T))),
      (T.disconnect = ((m) => (t, b, y) => {
        if ((m.apply(T), t === void 0)) i.clear();
        else if (typeof t == 'number')
          for (const [u, a] of i) {
            const r = a.filter((l) => l.output !== t);
            r.length === 0 ? i.delete(u) : i.set(u, r);
          }
        else if (i.has(t))
          if (b === void 0) i.delete(t);
          else {
            const u = i.get(t);
            if (u !== void 0) {
              const a = u.filter(
                (r) => r.output !== b && (r.input !== y || y === void 0),
              );
              a.length === 0 ? i.delete(t) : i.set(t, a);
            }
          }
        for (const [u, a] of i)
          a.forEach((r) => {
            Hs(u) ? T.connect(u, r.output, r.input) : T.connect(u, r.output);
          });
      })(T.disconnect));
  },
  Vu = (T, i, m, t) => {
    const { activeInputs: b, passiveInputs: y } = gs(i),
      { outputs: u } = dr(T),
      a = ms(T),
      r = (l) => {
        const d = Ot(T),
          h = es(i);
        if (l) {
          const o = Ia(y, T, m);
          ua(b, T, o, !1), !t && !fn(T) && d.connect(h, m);
        } else {
          const o = Uu(b, T, m);
          ca(y, o, !1), !t && !fn(T) && d.disconnect(h, m);
        }
      };
    return _n(u, [i, m], (l) => l[0] === i && l[1] === m, !0)
      ? (a.add(r), Hr(T) ? ua(b, T, [m, r], !0) : ca(y, [T, m, r], !0), !0)
      : !1;
  },
  Gu = (T, i, m, t) => {
    const { activeInputs: b, passiveInputs: y } = dr(i),
      u = Ra(b[t], T, m);
    return u === null ? [Ea(y, T, m, t)[2], !1] : [u[2], !0];
  },
  Wu = (T, i, m) => {
    const { activeInputs: t, passiveInputs: b } = gs(i),
      y = Ra(t, T, m);
    return y === null ? [Ia(b, T, m)[1], !1] : [y[2], !0];
  },
  Ho = (T, i, m, t, b) => {
    const [y, u] = Gu(T, m, t, b);
    if (
      (y !== null && (Pa(T, y), u && !i && !fn(T) && zs(Ot(T), Ot(m), t, b)),
      Hr(m))
    ) {
      const { activeInputs: a } = dr(m);
      Lo(m, a);
    }
  },
  Xo = (T, i, m, t) => {
    const [b, y] = Wu(T, m, t);
    b !== null && (Pa(T, b), y && !i && !fn(T) && Ot(T).disconnect(es(m), t));
  },
  qu = (T, i) => {
    const m = dr(T),
      t = [];
    for (const b of m.outputs)
      vs(b) ? Ho(T, i, ...b) : Xo(T, i, ...b), t.push(b[0]);
    return m.outputs.clear(), t;
  },
  zu = (T, i, m) => {
    const t = dr(T),
      b = [];
    for (const y of t.outputs)
      y[1] === m &&
        (vs(y) ? Ho(T, i, ...y) : Xo(T, i, ...y),
        b.push(y[0]),
        t.outputs.delete(y));
    return b;
  },
  Hu = (T, i, m, t, b) => {
    const y = dr(T);
    return Array.from(y.outputs)
      .filter(
        (u) =>
          u[0] === m &&
          (t === void 0 || u[1] === t) &&
          (b === void 0 || u[2] === b),
      )
      .map(
        (u) => (
          vs(u) ? Ho(T, i, ...u) : Xo(T, i, ...u), y.outputs.delete(u), u[0]
        ),
      );
  },
  Xu = (T, i, m, t, b, y, u, a, r, l, d, h, o, s, n, c) =>
    class extends l {
      constructor(g, _, x, j) {
        super(x), (this._context = g), (this._nativeAudioNode = x);
        const v = d(g);
        h(v) && m(da, () => da(v, c)) !== !0 && Bu(x),
          Wo.set(this, x),
          Ma.set(this, new Set()),
          g.state !== 'closed' && _ && Pn(this),
          T(this, j, x);
      }
      get channelCount() {
        return this._nativeAudioNode.channelCount;
      }
      set channelCount(g) {
        this._nativeAudioNode.channelCount = g;
      }
      get channelCountMode() {
        return this._nativeAudioNode.channelCountMode;
      }
      set channelCountMode(g) {
        this._nativeAudioNode.channelCountMode = g;
      }
      get channelInterpretation() {
        return this._nativeAudioNode.channelInterpretation;
      }
      set channelInterpretation(g) {
        this._nativeAudioNode.channelInterpretation = g;
      }
      get context() {
        return this._context;
      }
      get numberOfInputs() {
        return this._nativeAudioNode.numberOfInputs;
      }
      get numberOfOutputs() {
        return this._nativeAudioNode.numberOfOutputs;
      }
      connect(g, _ = 0, x = 0) {
        if (_ < 0 || _ >= this._nativeAudioNode.numberOfOutputs) throw b();
        const j = d(this._context),
          v = n(j);
        if (o(g) || s(g)) throw y();
        if (Ws(g)) {
          const k = Ot(g);
          try {
            const R = qs(this._nativeAudioNode, k, _, x),
              O = Ns(this);
            (v || O) && this._nativeAudioNode.disconnect(...R),
              this.context.state !== 'closed' && !O && Ns(g) && Pn(g);
          } catch (R) {
            throw R.code === 12 ? y() : R;
          }
          if (i(this, g, _, x, v)) {
            const R = r([this], g);
            Eo(R, t(v));
          }
          return g;
        }
        const M = es(g);
        if (M.name === 'playbackRate' && M.maxValue === 1024) throw u();
        try {
          this._nativeAudioNode.connect(M, _),
            (v || Ns(this)) && this._nativeAudioNode.disconnect(M, _);
        } catch (k) {
          throw k.code === 12 ? y() : k;
        }
        if (Vu(this, g, _, v)) {
          const k = r([this], g);
          Eo(k, t(v));
        }
      }
      disconnect(g, _, x) {
        let j;
        const v = d(this._context),
          M = n(v);
        if (g === void 0) j = qu(this, M);
        else if (typeof g == 'number') {
          if (g < 0 || g >= this.numberOfOutputs) throw b();
          j = zu(this, M, g);
        } else {
          if (
            (_ !== void 0 && (_ < 0 || _ >= this.numberOfOutputs)) ||
            (Ws(g) && x !== void 0 && (x < 0 || x >= g.numberOfInputs))
          )
            throw b();
          if (((j = Hu(this, M, g, _, x)), j.length === 0)) throw y();
        }
        for (const C of j) {
          const k = r([this], C);
          Eo(k, a);
        }
      }
    },
  Yu =
    (T, i, m, t, b, y, u, a, r, l, d, h, o) =>
    (s, n, c, f = null, g = null) => {
      const _ = c.value,
        x = new su(_),
        j = n ? t(x) : null,
        v = {
          get defaultValue() {
            return _;
          },
          get maxValue() {
            return f === null ? c.maxValue : f;
          },
          get minValue() {
            return g === null ? c.minValue : g;
          },
          get value() {
            return c.value;
          },
          set value(M) {
            (c.value = M), v.setValueAtTime(M, s.context.currentTime);
          },
          cancelAndHoldAtTime(M) {
            if (typeof c.cancelAndHoldAtTime == 'function')
              j === null && x.flush(s.context.currentTime),
                x.add(b(M)),
                c.cancelAndHoldAtTime(M);
            else {
              const C = Array.from(x).pop();
              j === null && x.flush(s.context.currentTime), x.add(b(M));
              const k = Array.from(x).pop();
              c.cancelScheduledValues(M),
                C !== k &&
                  k !== void 0 &&
                  (k.type === 'exponentialRampToValue'
                    ? c.exponentialRampToValueAtTime(k.value, k.endTime)
                    : k.type === 'linearRampToValue'
                    ? c.linearRampToValueAtTime(k.value, k.endTime)
                    : k.type === 'setValue'
                    ? c.setValueAtTime(k.value, k.startTime)
                    : k.type === 'setValueCurve' &&
                      c.setValueCurveAtTime(k.values, k.startTime, k.duration));
            }
            return v;
          },
          cancelScheduledValues(M) {
            return (
              j === null && x.flush(s.context.currentTime),
              x.add(y(M)),
              c.cancelScheduledValues(M),
              v
            );
          },
          exponentialRampToValueAtTime(M, C) {
            if (M === 0) throw new RangeError();
            if (!Number.isFinite(C) || C < 0) throw new RangeError();
            const k = s.context.currentTime;
            return (
              j === null && x.flush(k),
              Array.from(x).length === 0 &&
                (x.add(l(_, k)), c.setValueAtTime(_, k)),
              x.add(u(M, C)),
              c.exponentialRampToValueAtTime(M, C),
              v
            );
          },
          linearRampToValueAtTime(M, C) {
            const k = s.context.currentTime;
            return (
              j === null && x.flush(k),
              Array.from(x).length === 0 &&
                (x.add(l(_, k)), c.setValueAtTime(_, k)),
              x.add(a(M, C)),
              c.linearRampToValueAtTime(M, C),
              v
            );
          },
          setTargetAtTime(M, C, k) {
            return (
              j === null && x.flush(s.context.currentTime),
              x.add(r(M, C, k)),
              c.setTargetAtTime(M, C, k),
              v
            );
          },
          setValueAtTime(M, C) {
            return (
              j === null && x.flush(s.context.currentTime),
              x.add(l(M, C)),
              c.setValueAtTime(M, C),
              v
            );
          },
          setValueCurveAtTime(M, C, k) {
            const A = M instanceof Float32Array ? M : new Float32Array(M);
            if (h !== null && h.name === 'webkitAudioContext') {
              const R = C + k,
                O = s.context.sampleRate,
                D = Math.ceil(C * O),
                N = Math.floor(R * O),
                U = N - D,
                H = new Float32Array(U);
              for (let z = 0; z < U; z += 1) {
                const X = ((A.length - 1) / k) * ((D + z) / O - C),
                  W = Math.floor(X),
                  Z = Math.ceil(X);
                H[z] =
                  W === Z ? A[W] : (1 - (X - W)) * A[W] + (1 - (Z - X)) * A[Z];
              }
              j === null && x.flush(s.context.currentTime),
                x.add(d(H, C, k)),
                c.setValueCurveAtTime(H, C, k);
              const q = N / O;
              q < R && o(v, H[H.length - 1], q), o(v, A[A.length - 1], R);
            } else
              j === null && x.flush(s.context.currentTime),
                x.add(d(A, C, k)),
                c.setValueCurveAtTime(A, C, k);
            return v;
          },
        };
      return m.set(v, c), i.set(v, s), T(v, j), v;
    },
  Zu = (T) => ({
    replay(i) {
      for (const m of T)
        if (m.type === 'exponentialRampToValue') {
          const { endTime: t, value: b } = m;
          i.exponentialRampToValueAtTime(b, t);
        } else if (m.type === 'linearRampToValue') {
          const { endTime: t, value: b } = m;
          i.linearRampToValueAtTime(b, t);
        } else if (m.type === 'setTarget') {
          const { startTime: t, target: b, timeConstant: y } = m;
          i.setTargetAtTime(b, t, y);
        } else if (m.type === 'setValue') {
          const { startTime: t, value: b } = m;
          i.setValueAtTime(b, t);
        } else if (m.type === 'setValueCurve') {
          const { duration: t, startTime: b, values: y } = m;
          i.setValueCurveAtTime(y, b, t);
        } else throw new Error("Can't apply an unknown automation.");
    },
  });
class Da {
  constructor(i) {
    this._map = new Map(i);
  }
  get size() {
    return this._map.size;
  }
  entries() {
    return this._map.entries();
  }
  forEach(i, m = null) {
    return this._map.forEach((t, b) => i.call(m, t, b, this));
  }
  get(i) {
    return this._map.get(i);
  }
  has(i) {
    return this._map.has(i);
  }
  keys() {
    return this._map.keys();
  }
  values() {
    return this._map.values();
  }
}
const $u = {
    channelCount: 2,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    numberOfInputs: 1,
    numberOfOutputs: 1,
    parameterData: {},
    processorOptions: {},
  },
  Qu = (T, i, m, t, b, y, u, a, r, l, d, h, o, s) =>
    class extends i {
      constructor(c, f, g) {
        var _;
        const x = a(c),
          j = r(x),
          v = d({ ...$u, ...g });
        o(v);
        const M = Io.get(x),
          C = M == null ? void 0 : M.get(f),
          k =
            j || x.state !== 'closed'
              ? x
              : (_ = u(x)) !== null && _ !== void 0
              ? _
              : x,
          A = b(k, j ? null : c.baseLatency, l, f, C, v),
          R = j ? t(f, v, C) : null;
        super(c, !0, A, R);
        const O = [];
        A.parameters.forEach((N, U) => {
          const H = m(this, j, N);
          O.push([U, H]);
        }),
          (this._nativeAudioWorkletNode = A),
          (this._onprocessorerror = null),
          (this._parameters = new Da(O)),
          j && T(x, this);
        const { activeInputs: D } = y(this);
        h(A, D);
      }
      get onprocessorerror() {
        return this._onprocessorerror;
      }
      set onprocessorerror(c) {
        const f = typeof c == 'function' ? s(this, c) : null;
        this._nativeAudioWorkletNode.onprocessorerror = f;
        const g = this._nativeAudioWorkletNode.onprocessorerror;
        this._onprocessorerror = g !== null && g === f ? c : g;
      }
      get parameters() {
        return this._parameters === null
          ? this._nativeAudioWorkletNode.parameters
          : this._parameters;
      }
      get port() {
        return this._nativeAudioWorkletNode.port;
      }
    };
function Xs(T, i, m, t, b) {
  if (typeof T.copyFromChannel == 'function')
    i[m].byteLength === 0 && (i[m] = new Float32Array(128)),
      T.copyFromChannel(i[m], t, b);
  else {
    const y = T.getChannelData(t);
    if (i[m].byteLength === 0) i[m] = y.slice(b, b + 128);
    else {
      const u = new Float32Array(
        y.buffer,
        b * Float32Array.BYTES_PER_ELEMENT,
        128,
      );
      i[m].set(u);
    }
  }
}
const La = (T, i, m, t, b) => {
    typeof T.copyToChannel == 'function'
      ? i[m].byteLength !== 0 && T.copyToChannel(i[m], t, b)
      : i[m].byteLength !== 0 && T.getChannelData(t).set(i[m], b);
  },
  Ys = (T, i) => {
    const m = [];
    for (let t = 0; t < T; t += 1) {
      const b = [],
        y = typeof i == 'number' ? i : i[t];
      for (let u = 0; u < y; u += 1) b.push(new Float32Array(128));
      m.push(b);
    }
    return m;
  },
  Ju = (T, i) => {
    const m = Er(Do, T),
      t = Ot(i);
    return Er(m, t);
  },
  Ku = async (T, i, m, t, b, y, u) => {
    const a = i === null ? Math.ceil(T.context.length / 128) * 128 : i.length,
      r = t.channelCount * t.numberOfInputs,
      l = b.reduce((f, g) => f + g, 0),
      d = l === 0 ? null : m.createBuffer(l, a, m.sampleRate);
    if (y === void 0) throw new Error('Missing the processor constructor.');
    const h = dr(T),
      o = await Ju(m, T),
      s = Ys(t.numberOfInputs, t.channelCount),
      n = Ys(t.numberOfOutputs, b),
      c = Array.from(T.parameters.keys()).reduce(
        (f, g) => ({ ...f, [g]: new Float32Array(128) }),
        {},
      );
    for (let f = 0; f < a; f += 128) {
      if (t.numberOfInputs > 0 && i !== null)
        for (let g = 0; g < t.numberOfInputs; g += 1)
          for (let _ = 0; _ < t.channelCount; _ += 1) Xs(i, s[g], _, _, f);
      y.parameterDescriptors !== void 0 &&
        i !== null &&
        y.parameterDescriptors.forEach(({ name: g }, _) => {
          Xs(i, c, g, r + _, f);
        });
      for (let g = 0; g < t.numberOfInputs; g += 1)
        for (let _ = 0; _ < b[g]; _ += 1)
          n[g][_].byteLength === 0 && (n[g][_] = new Float32Array(128));
      try {
        const g = s.map((x, j) => (h.activeInputs[j].size === 0 ? [] : x)),
          _ = u(f / m.sampleRate, m.sampleRate, () => o.process(g, n, c));
        if (d !== null)
          for (let x = 0, j = 0; x < t.numberOfOutputs; x += 1) {
            for (let v = 0; v < b[x]; v += 1) La(d, n[x], v, j + v, f);
            j += b[x];
          }
        if (!_) break;
      } catch (g) {
        T.dispatchEvent(
          new ErrorEvent('processorerror', {
            colno: g.colno,
            filename: g.filename,
            lineno: g.lineno,
            message: g.message,
          }),
        );
        break;
      }
    }
    return d;
  },
  ec = (T, i, m, t, b, y, u, a, r, l, d, h, o, s, n, c) => (f, g, _) => {
    const x = new WeakMap();
    let j = null;
    const v = async (M, C) => {
      let k = d(M),
        A = null;
      const R = ur(k, C),
        O = Array.isArray(g.outputChannelCount)
          ? g.outputChannelCount
          : Array.from(g.outputChannelCount);
      if (h === null) {
        const D = O.reduce((q, z) => q + z, 0),
          N = b(C, {
            channelCount: Math.max(1, D),
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: Math.max(1, D),
          }),
          U = [];
        for (let q = 0; q < M.numberOfOutputs; q += 1)
          U.push(
            t(C, {
              channelCount: 1,
              channelCountMode: 'explicit',
              channelInterpretation: 'speakers',
              numberOfInputs: O[q],
            }),
          );
        const H = u(C, {
          channelCount: g.channelCount,
          channelCountMode: g.channelCountMode,
          channelInterpretation: g.channelInterpretation,
          gain: 1,
        });
        (H.connect = i.bind(null, U)),
          (H.disconnect = r.bind(null, U)),
          (A = [N, U, H]);
      } else R || (k = new h(C, f));
      if ((x.set(C, A === null ? k : A[2]), A !== null)) {
        if (j === null) {
          if (_ === void 0)
            throw new Error('Missing the processor constructor.');
          if (o === null)
            throw new Error(
              'Missing the native OfflineAudioContext constructor.',
            );
          const z = M.channelCount * M.numberOfInputs,
            X =
              _.parameterDescriptors === void 0
                ? 0
                : _.parameterDescriptors.length,
            W = z + X;
          j = Ku(
            M,
            W === 0
              ? null
              : await (async () => {
                  const $ = new o(
                      W,
                      Math.ceil(M.context.length / 128) * 128,
                      C.sampleRate,
                    ),
                    ae = [],
                    P = [];
                  for (let Y = 0; Y < g.numberOfInputs; Y += 1)
                    ae.push(
                      u($, {
                        channelCount: g.channelCount,
                        channelCountMode: g.channelCountMode,
                        channelInterpretation: g.channelInterpretation,
                        gain: 1,
                      }),
                    ),
                      P.push(
                        b($, {
                          channelCount: g.channelCount,
                          channelCountMode: 'explicit',
                          channelInterpretation: 'discrete',
                          numberOfOutputs: g.channelCount,
                        }),
                      );
                  const L = await Promise.all(
                      Array.from(M.parameters.values()).map(async (Y) => {
                        const ee = y($, {
                          channelCount: 1,
                          channelCountMode: 'explicit',
                          channelInterpretation: 'discrete',
                          offset: Y.value,
                        });
                        return await s($, Y, ee.offset), ee;
                      }),
                    ),
                    B = t($, {
                      channelCount: 1,
                      channelCountMode: 'explicit',
                      channelInterpretation: 'speakers',
                      numberOfInputs: Math.max(1, z + X),
                    });
                  for (let Y = 0; Y < g.numberOfInputs; Y += 1) {
                    ae[Y].connect(P[Y]);
                    for (let ee = 0; ee < g.channelCount; ee += 1)
                      P[Y].connect(B, ee, Y * g.channelCount + ee);
                  }
                  for (const [Y, ee] of L.entries())
                    ee.connect(B, 0, z + Y), ee.start(0);
                  return (
                    B.connect($.destination),
                    await Promise.all(ae.map((Y) => n(M, $, Y))),
                    c($)
                  );
                })(),
            C,
            g,
            O,
            _,
            l,
          );
        }
        const D = await j,
          N = m(C, {
            buffer: null,
            channelCount: 2,
            channelCountMode: 'max',
            channelInterpretation: 'speakers',
            loop: !1,
            loopEnd: 0,
            loopStart: 0,
            playbackRate: 1,
          }),
          [U, H, q] = A;
        D !== null && ((N.buffer = D), N.start(0)), N.connect(U);
        for (let z = 0, X = 0; z < M.numberOfOutputs; z += 1) {
          const W = H[z];
          for (let Z = 0; Z < O[z]; Z += 1) U.connect(W, X + Z, Z);
          X += O[z];
        }
        return q;
      }
      if (R)
        for (const [D, N] of M.parameters.entries())
          await T(C, N, k.parameters.get(D));
      else
        for (const [D, N] of M.parameters.entries())
          await s(C, N, k.parameters.get(D));
      return await n(M, C, k), k;
    };
    return {
      render(M, C) {
        a(C, M);
        const k = x.get(C);
        return k !== void 0 ? Promise.resolve(k) : v(M, C);
      },
    };
  },
  tc = (T, i, m, t, b, y, u, a, r, l, d, h, o, s, n, c, f, g, _, x) =>
    class extends n {
      constructor(v, M) {
        super(v, M),
          (this._nativeContext = v),
          (this._audioWorklet =
            T === void 0 ? void 0 : { addModule: (C, k) => T(this, C, k) });
      }
      get audioWorklet() {
        return this._audioWorklet;
      }
      createAnalyser() {
        return new i(this);
      }
      createBiquadFilter() {
        return new b(this);
      }
      createBuffer(v, M, C) {
        return new m({ length: M, numberOfChannels: v, sampleRate: C });
      }
      createBufferSource() {
        return new t(this);
      }
      createChannelMerger(v = 6) {
        return new y(this, { numberOfInputs: v });
      }
      createChannelSplitter(v = 6) {
        return new u(this, { numberOfOutputs: v });
      }
      createConstantSource() {
        return new a(this);
      }
      createConvolver() {
        return new r(this);
      }
      createDelay(v = 1) {
        return new d(this, { maxDelayTime: v });
      }
      createDynamicsCompressor() {
        return new h(this);
      }
      createGain() {
        return new o(this);
      }
      createIIRFilter(v, M) {
        return new s(this, { feedback: M, feedforward: v });
      }
      createOscillator() {
        return new c(this);
      }
      createPanner() {
        return new f(this);
      }
      createPeriodicWave(v, M, C = { disableNormalization: !1 }) {
        return new g(this, { ...C, imag: M, real: v });
      }
      createStereoPanner() {
        return new _(this);
      }
      createWaveShaper() {
        return new x(this);
      }
      decodeAudioData(v, M, C) {
        return l(this._nativeContext, v).then(
          (k) => (typeof M == 'function' && M(k), k),
          (k) => {
            throw (typeof C == 'function' && C(k), k);
          },
        );
      }
    },
  rc = {
    Q: 1,
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    detune: 0,
    frequency: 350,
    gain: 0,
    type: 'lowpass',
  },
  nc = (T, i, m, t, b, y, u, a) =>
    class extends T {
      constructor(l, d) {
        const h = y(l),
          o = { ...rc, ...d },
          s = b(h, o),
          n = u(h),
          c = n ? m() : null;
        super(l, !1, s, c),
          (this._Q = i(this, n, s.Q, cr, pr)),
          (this._detune = i(
            this,
            n,
            s.detune,
            1200 * Math.log2(cr),
            -1200 * Math.log2(cr),
          )),
          (this._frequency = i(this, n, s.frequency, l.sampleRate / 2, 0)),
          (this._gain = i(this, n, s.gain, 40 * Math.log10(cr), pr)),
          (this._nativeBiquadFilterNode = s),
          a(this, 1);
      }
      get detune() {
        return this._detune;
      }
      get frequency() {
        return this._frequency;
      }
      get gain() {
        return this._gain;
      }
      get Q() {
        return this._Q;
      }
      get type() {
        return this._nativeBiquadFilterNode.type;
      }
      set type(l) {
        this._nativeBiquadFilterNode.type = l;
      }
      getFrequencyResponse(l, d, h) {
        try {
          this._nativeBiquadFilterNode.getFrequencyResponse(l, d, h);
        } catch (o) {
          throw o.code === 11 ? t() : o;
        }
        if (l.length !== d.length || d.length !== h.length) throw t();
      }
    },
  sc = (T, i, m, t, b) => () => {
    const y = new WeakMap(),
      u = async (a, r) => {
        let l = m(a);
        const d = ur(l, r);
        if (!d) {
          const h = {
            Q: l.Q.value,
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            detune: l.detune.value,
            frequency: l.frequency.value,
            gain: l.gain.value,
            type: l.type,
          };
          l = i(r, h);
        }
        return (
          y.set(r, l),
          d
            ? (await T(r, a.Q, l.Q),
              await T(r, a.detune, l.detune),
              await T(r, a.frequency, l.frequency),
              await T(r, a.gain, l.gain))
            : (await t(r, a.Q, l.Q),
              await t(r, a.detune, l.detune),
              await t(r, a.frequency, l.frequency),
              await t(r, a.gain, l.gain)),
          await b(a, r, l),
          l
        );
      };
    return {
      render(a, r) {
        const l = y.get(r);
        return l !== void 0 ? Promise.resolve(l) : u(a, r);
      },
    };
  },
  oc = (T, i) => (m, t) => {
    const b = i.get(m);
    if (b !== void 0) return b;
    const y = T.get(m);
    if (y !== void 0) return y;
    try {
      const u = t();
      return u instanceof Promise
        ? (T.set(m, u),
          u.catch(() => !1).then((a) => (T.delete(m), i.set(m, a), a)))
        : (i.set(m, u), u);
    } catch {
      return i.set(m, !1), !1;
    }
  },
  ic = {
    channelCount: 1,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    numberOfInputs: 6,
  },
  ac = (T, i, m, t, b) =>
    class extends T {
      constructor(u, a) {
        const r = t(u),
          l = { ...ic, ...a },
          d = m(r, l),
          h = b(r) ? i() : null;
        super(u, !1, d, h);
      }
    },
  lc = (T, i, m) => () => {
    const t = new WeakMap(),
      b = async (y, u) => {
        let a = i(y);
        if (!ur(a, u)) {
          const l = {
            channelCount: a.channelCount,
            channelCountMode: a.channelCountMode,
            channelInterpretation: a.channelInterpretation,
            numberOfInputs: a.numberOfInputs,
          };
          a = T(u, l);
        }
        return t.set(u, a), await m(y, u, a), a;
      };
    return {
      render(y, u) {
        const a = t.get(u);
        return a !== void 0 ? Promise.resolve(a) : b(y, u);
      },
    };
  },
  uc = {
    channelCount: 6,
    channelCountMode: 'explicit',
    channelInterpretation: 'discrete',
    numberOfOutputs: 6,
  },
  cc = (T, i, m, t, b, y) =>
    class extends T {
      constructor(a, r) {
        const l = t(a),
          d = y({ ...uc, ...r }),
          h = m(l, d),
          o = b(l) ? i() : null;
        super(a, !1, h, o);
      }
    },
  dc = (T, i, m) => () => {
    const t = new WeakMap(),
      b = async (y, u) => {
        let a = i(y);
        if (!ur(a, u)) {
          const l = {
            channelCount: a.channelCount,
            channelCountMode: a.channelCountMode,
            channelInterpretation: a.channelInterpretation,
            numberOfOutputs: a.numberOfOutputs,
          };
          a = T(u, l);
        }
        return t.set(u, a), await m(y, u, a), a;
      };
    return {
      render(y, u) {
        const a = t.get(u);
        return a !== void 0 ? Promise.resolve(a) : b(y, u);
      },
    };
  },
  hc = (T) => (i, m, t) => T(m, i, t),
  fc =
    (T) =>
    (i, m, t = 0, b = 0) => {
      const y = i[t];
      if (y === void 0) throw T();
      return Hs(m) ? y.connect(m, 0, b) : y.connect(m, 0);
    },
  pc = (T) => (i, m) => {
    const t = T(i, {
        buffer: null,
        channelCount: 2,
        channelCountMode: 'max',
        channelInterpretation: 'speakers',
        loop: !1,
        loopEnd: 0,
        loopStart: 0,
        playbackRate: 1,
      }),
      b = i.createBuffer(1, 2, 44100);
    return (
      (t.buffer = b),
      (t.loop = !0),
      t.connect(m),
      t.start(),
      () => {
        t.stop(), t.disconnect(m);
      }
    );
  },
  mc = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    offset: 1,
  },
  yc = (T, i, m, t, b, y, u) =>
    class extends T {
      constructor(r, l) {
        const d = b(r),
          h = { ...mc, ...l },
          o = t(d, h),
          s = y(d),
          n = s ? m() : null;
        super(r, !1, o, n),
          (this._constantSourceNodeRenderer = n),
          (this._nativeConstantSourceNode = o),
          (this._offset = i(this, s, o.offset, cr, pr)),
          (this._onended = null);
      }
      get offset() {
        return this._offset;
      }
      get onended() {
        return this._onended;
      }
      set onended(r) {
        const l = typeof r == 'function' ? u(this, r) : null;
        this._nativeConstantSourceNode.onended = l;
        const d = this._nativeConstantSourceNode.onended;
        this._onended = d !== null && d === l ? r : d;
      }
      start(r = 0) {
        if (
          (this._nativeConstantSourceNode.start(r),
          this._constantSourceNodeRenderer !== null &&
            (this._constantSourceNodeRenderer.start = r),
          this.context.state !== 'closed')
        ) {
          Pn(this);
          const l = () => {
            this._nativeConstantSourceNode.removeEventListener('ended', l),
              Hr(this) && ys(this);
          };
          this._nativeConstantSourceNode.addEventListener('ended', l);
        }
      }
      stop(r = 0) {
        this._nativeConstantSourceNode.stop(r),
          this._constantSourceNodeRenderer !== null &&
            (this._constantSourceNodeRenderer.stop = r);
      }
    },
  gc = (T, i, m, t, b) => () => {
    const y = new WeakMap();
    let u = null,
      a = null;
    const r = async (l, d) => {
      let h = m(l);
      const o = ur(h, d);
      if (!o) {
        const s = {
          channelCount: h.channelCount,
          channelCountMode: h.channelCountMode,
          channelInterpretation: h.channelInterpretation,
          offset: h.offset.value,
        };
        (h = i(d, s)), u !== null && h.start(u), a !== null && h.stop(a);
      }
      return (
        y.set(d, h),
        o ? await T(d, l.offset, h.offset) : await t(d, l.offset, h.offset),
        await b(l, d, h),
        h
      );
    };
    return {
      set start(l) {
        u = l;
      },
      set stop(l) {
        a = l;
      },
      render(l, d) {
        const h = y.get(d);
        return h !== void 0 ? Promise.resolve(h) : r(l, d);
      },
    };
  },
  vc = (T) => (i) => ((T[0] = i), T[0]),
  bc = {
    buffer: null,
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    disableNormalization: !1,
  },
  _c = (T, i, m, t, b, y) =>
    class extends T {
      constructor(a, r) {
        const l = t(a),
          d = { ...bc, ...r },
          h = m(l, d),
          s = b(l) ? i() : null;
        super(a, !1, h, s),
          (this._isBufferNullified = !1),
          (this._nativeConvolverNode = h),
          d.buffer !== null && y(this, d.buffer.duration);
      }
      get buffer() {
        return this._isBufferNullified
          ? null
          : this._nativeConvolverNode.buffer;
      }
      set buffer(a) {
        if (
          ((this._nativeConvolverNode.buffer = a),
          a === null && this._nativeConvolverNode.buffer !== null)
        ) {
          const r = this._nativeConvolverNode.context;
          (this._nativeConvolverNode.buffer = r.createBuffer(
            1,
            1,
            r.sampleRate,
          )),
            (this._isBufferNullified = !0),
            y(this, 0);
        } else
          (this._isBufferNullified = !1),
            y(
              this,
              this._nativeConvolverNode.buffer === null
                ? 0
                : this._nativeConvolverNode.buffer.duration,
            );
      }
      get normalize() {
        return this._nativeConvolverNode.normalize;
      }
      set normalize(a) {
        this._nativeConvolverNode.normalize = a;
      }
    },
  wc = (T, i, m) => () => {
    const t = new WeakMap(),
      b = async (y, u) => {
        let a = i(y);
        if (!ur(a, u)) {
          const l = {
            buffer: a.buffer,
            channelCount: a.channelCount,
            channelCountMode: a.channelCountMode,
            channelInterpretation: a.channelInterpretation,
            disableNormalization: !a.normalize,
          };
          a = T(u, l);
        }
        return (
          t.set(u, a), Nn(a) ? await m(y, u, a.inputs[0]) : await m(y, u, a), a
        );
      };
    return {
      render(y, u) {
        const a = t.get(u);
        return a !== void 0 ? Promise.resolve(a) : b(y, u);
      },
    };
  },
  xc = (T, i) => (m, t, b) => {
    if (i === null)
      throw new Error('Missing the native OfflineAudioContext constructor.');
    try {
      return new i(m, t, b);
    } catch (y) {
      throw y.name === 'SyntaxError' ? T() : y;
    }
  },
  jc = () => new DOMException('', 'DataCloneError'),
  ha = (T) => {
    const { port1: i, port2: m } = new MessageChannel();
    return new Promise((t) => {
      const b = () => {
        (m.onmessage = null), i.close(), m.close(), t();
      };
      m.onmessage = () => b();
      try {
        i.postMessage(T, [T]);
      } catch {
      } finally {
        b();
      }
    });
  },
  Sc = (T, i, m, t, b, y, u, a, r, l, d) => (h, o) => {
    const s = u(h) ? h : y(h);
    if (b.has(o)) {
      const n = m();
      return Promise.reject(n);
    }
    try {
      b.add(o);
    } catch {}
    return i(r, () => r(s))
      ? s
          .decodeAudioData(o)
          .then(
            (n) => (
              ha(o).catch(() => {}), i(a, () => a(n)) || d(n), T.add(n), n
            ),
          )
      : new Promise((n, c) => {
          const f = async () => {
              try {
                await ha(o);
              } catch {}
            },
            g = (_) => {
              c(_), f();
            };
          try {
            s.decodeAudioData(
              o,
              (_) => {
                typeof _.copyFromChannel != 'function' && (l(_), zo(_)),
                  T.add(_),
                  f().then(() => n(_));
              },
              (_) => {
                g(_ === null ? t() : _);
              },
            );
          } catch (_) {
            g(_);
          }
        });
  },
  Tc = (T, i, m, t, b, y, u, a) => (r, l) => {
    const d = i.get(r);
    if (d === void 0) throw new Error('Missing the expected cycle count.');
    const h = y(r.context),
      o = a(h);
    if (d === l) {
      if ((i.delete(r), !o && u(r))) {
        const s = t(r),
          { outputs: n } = m(r);
        for (const c of n)
          if (vs(c)) {
            const f = t(c[0]);
            T(s, f, c[1], c[2]);
          } else {
            const f = b(c[0]);
            s.connect(f, c[1]);
          }
      }
    } else i.set(r, d - l);
  },
  Mc = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    delayTime: 0,
    maxDelayTime: 1,
  },
  Cc = (T, i, m, t, b, y, u) =>
    class extends T {
      constructor(r, l) {
        const d = b(r),
          h = { ...Mc, ...l },
          o = t(d, h),
          s = y(d),
          n = s ? m(h.maxDelayTime) : null;
        super(r, !1, o, n),
          (this._delayTime = i(this, s, o.delayTime)),
          u(this, h.maxDelayTime);
      }
      get delayTime() {
        return this._delayTime;
      }
    },
  Ec = (T, i, m, t, b) => (y) => {
    const u = new WeakMap(),
      a = async (r, l) => {
        let d = m(r);
        const h = ur(d, l);
        if (!h) {
          const o = {
            channelCount: d.channelCount,
            channelCountMode: d.channelCountMode,
            channelInterpretation: d.channelInterpretation,
            delayTime: d.delayTime.value,
            maxDelayTime: y,
          };
          d = i(l, o);
        }
        return (
          u.set(l, d),
          h
            ? await T(l, r.delayTime, d.delayTime)
            : await t(l, r.delayTime, d.delayTime),
          await b(r, l, d),
          d
        );
      };
    return {
      render(r, l) {
        const d = u.get(l);
        return d !== void 0 ? Promise.resolve(d) : a(r, l);
      },
    };
  },
  kc = (T) => (i, m, t, b) => T(i[b], (y) => y[0] === m && y[1] === t),
  Oc = (T) => (i, m) => {
    T(i).delete(m);
  },
  Ac = (T) => 'delayTime' in T,
  Rc = (T, i, m) =>
    function t(b, y) {
      const u = Ws(y) ? y : m(T, y);
      if (Ac(u)) return [];
      if (b[0] === u) return [b];
      if (b.includes(u)) return [];
      const { outputs: a } = i(u);
      return Array.from(a)
        .map((r) => t([...b, u], r[0]))
        .reduce((r, l) => r.concat(l), []);
    },
  Is = (T, i, m) => {
    const t = i[m];
    if (t === void 0) throw T();
    return t;
  },
  Pc =
    (T) =>
    (i, m = void 0, t = void 0, b = 0) =>
      m === void 0
        ? i.forEach((y) => y.disconnect())
        : typeof m == 'number'
        ? Is(T, i, m).disconnect()
        : Hs(m)
        ? t === void 0
          ? i.forEach((y) => y.disconnect(m))
          : b === void 0
          ? Is(T, i, t).disconnect(m, 0)
          : Is(T, i, t).disconnect(m, 0, b)
        : t === void 0
        ? i.forEach((y) => y.disconnect(m))
        : Is(T, i, t).disconnect(m, 0),
  Ic = {
    attack: 0.003,
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    knee: 30,
    ratio: 12,
    release: 0.25,
    threshold: -24,
  },
  Dc = (T, i, m, t, b, y, u, a) =>
    class extends T {
      constructor(l, d) {
        const h = y(l),
          o = { ...Ic, ...d },
          s = t(h, o),
          n = u(h),
          c = n ? m() : null;
        super(l, !1, s, c),
          (this._attack = i(this, n, s.attack)),
          (this._knee = i(this, n, s.knee)),
          (this._nativeDynamicsCompressorNode = s),
          (this._ratio = i(this, n, s.ratio)),
          (this._release = i(this, n, s.release)),
          (this._threshold = i(this, n, s.threshold)),
          a(this, 0.006);
      }
      get attack() {
        return this._attack;
      }
      get channelCount() {
        return this._nativeDynamicsCompressorNode.channelCount;
      }
      set channelCount(l) {
        const d = this._nativeDynamicsCompressorNode.channelCount;
        if (((this._nativeDynamicsCompressorNode.channelCount = l), l > 2))
          throw ((this._nativeDynamicsCompressorNode.channelCount = d), b());
      }
      get channelCountMode() {
        return this._nativeDynamicsCompressorNode.channelCountMode;
      }
      set channelCountMode(l) {
        const d = this._nativeDynamicsCompressorNode.channelCountMode;
        if (
          ((this._nativeDynamicsCompressorNode.channelCountMode = l),
          l === 'max')
        )
          throw (
            ((this._nativeDynamicsCompressorNode.channelCountMode = d), b())
          );
      }
      get knee() {
        return this._knee;
      }
      get ratio() {
        return this._ratio;
      }
      get reduction() {
        return typeof this._nativeDynamicsCompressorNode.reduction.value ==
          'number'
          ? this._nativeDynamicsCompressorNode.reduction.value
          : this._nativeDynamicsCompressorNode.reduction;
      }
      get release() {
        return this._release;
      }
      get threshold() {
        return this._threshold;
      }
    },
  Lc = (T, i, m, t, b) => () => {
    const y = new WeakMap(),
      u = async (a, r) => {
        let l = m(a);
        const d = ur(l, r);
        if (!d) {
          const h = {
            attack: l.attack.value,
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            knee: l.knee.value,
            ratio: l.ratio.value,
            release: l.release.value,
            threshold: l.threshold.value,
          };
          l = i(r, h);
        }
        return (
          y.set(r, l),
          d
            ? (await T(r, a.attack, l.attack),
              await T(r, a.knee, l.knee),
              await T(r, a.ratio, l.ratio),
              await T(r, a.release, l.release),
              await T(r, a.threshold, l.threshold))
            : (await t(r, a.attack, l.attack),
              await t(r, a.knee, l.knee),
              await t(r, a.ratio, l.ratio),
              await t(r, a.release, l.release),
              await t(r, a.threshold, l.threshold)),
          await b(a, r, l),
          l
        );
      };
    return {
      render(a, r) {
        const l = y.get(r);
        return l !== void 0 ? Promise.resolve(l) : u(a, r);
      },
    };
  },
  Nc = () => new DOMException('', 'EncodingError'),
  Fc = (T) => (i) =>
    new Promise((m, t) => {
      if (T === null) {
        t(new SyntaxError());
        return;
      }
      const b = T.document.head;
      if (b === null) t(new SyntaxError());
      else {
        const y = T.document.createElement('script'),
          u = new Blob([i], { type: 'application/javascript' }),
          a = URL.createObjectURL(u),
          r = T.onerror,
          l = () => {
            (T.onerror = r), URL.revokeObjectURL(a);
          };
        (T.onerror = (d, h, o, s, n) => {
          if (h === a || (h === T.location.href && o === 1 && s === 1))
            return l(), t(n), !1;
          if (r !== null) return r(d, h, o, s, n);
        }),
          (y.onerror = () => {
            l(), t(new SyntaxError());
          }),
          (y.onload = () => {
            l(), m();
          }),
          (y.src = a),
          (y.type = 'module'),
          b.appendChild(y);
      }
    }),
  Uc = (T) =>
    class {
      constructor(m) {
        (this._nativeEventTarget = m), (this._listeners = new WeakMap());
      }
      addEventListener(m, t, b) {
        if (t !== null) {
          let y = this._listeners.get(t);
          y === void 0 &&
            ((y = T(this, t)),
            typeof t == 'function' && this._listeners.set(t, y)),
            this._nativeEventTarget.addEventListener(m, y, b);
        }
      }
      dispatchEvent(m) {
        return this._nativeEventTarget.dispatchEvent(m);
      }
      removeEventListener(m, t, b) {
        const y = t === null ? void 0 : this._listeners.get(t);
        this._nativeEventTarget.removeEventListener(
          m,
          y === void 0 ? null : y,
          b,
        );
      }
    },
  Bc = (T) => (i, m, t) => {
    Object.defineProperties(T, {
      currentFrame: {
        configurable: !0,
        get() {
          return Math.round(i * m);
        },
      },
      currentTime: {
        configurable: !0,
        get() {
          return i;
        },
      },
    });
    try {
      return t();
    } finally {
      T !== null && (delete T.currentFrame, delete T.currentTime);
    }
  },
  Vc = (T) => async (i) => {
    try {
      const m = await fetch(i);
      if (m.ok) return [await m.text(), m.url];
    } catch {}
    throw T();
  },
  Gc = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    gain: 1,
  },
  Wc = (T, i, m, t, b, y) =>
    class extends T {
      constructor(a, r) {
        const l = b(a),
          d = { ...Gc, ...r },
          h = t(l, d),
          o = y(l),
          s = o ? m() : null;
        super(a, !1, h, s), (this._gain = i(this, o, h.gain, cr, pr));
      }
      get gain() {
        return this._gain;
      }
    },
  qc = (T, i, m, t, b) => () => {
    const y = new WeakMap(),
      u = async (a, r) => {
        let l = m(a);
        const d = ur(l, r);
        if (!d) {
          const h = {
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            gain: l.gain.value,
          };
          l = i(r, h);
        }
        return (
          y.set(r, l),
          d ? await T(r, a.gain, l.gain) : await t(r, a.gain, l.gain),
          await b(a, r, l),
          l
        );
      };
    return {
      render(a, r) {
        const l = y.get(r);
        return l !== void 0 ? Promise.resolve(l) : u(a, r);
      },
    };
  },
  zc = (T, i) => (m) => i(T, m),
  Hc = (T) => (i) => {
    const m = T(i);
    if (m.renderer === null)
      throw new Error(
        'Missing the renderer of the given AudioNode in the audio graph.',
      );
    return m.renderer;
  },
  Xc = (T) => (i) => {
    var m;
    return (m = T.get(i)) !== null && m !== void 0 ? m : 0;
  },
  Yc = (T) => (i) => {
    const m = T(i);
    if (m.renderer === null)
      throw new Error(
        'Missing the renderer of the given AudioParam in the audio graph.',
      );
    return m.renderer;
  },
  Zc = (T) => (i) => T.get(i),
  er = () => new DOMException('', 'InvalidStateError'),
  $c = (T) => (i) => {
    const m = T.get(i);
    if (m === void 0) throw er();
    return m;
  },
  Qc = (T, i) => (m) => {
    let t = T.get(m);
    if (t !== void 0) return t;
    if (i === null)
      throw new Error('Missing the native OfflineAudioContext constructor.');
    return (t = new i(1, 1, 44100)), T.set(m, t), t;
  },
  Jc = (T) => (i) => {
    const m = T.get(i);
    if (m === void 0)
      throw new Error('The context has no set of AudioWorkletNodes.');
    return m;
  },
  ho = () => new DOMException('', 'InvalidAccessError'),
  Kc = (T) => {
    T.getFrequencyResponse = ((i) => (m, t, b) => {
      if (m.length !== t.length || t.length !== b.length) throw ho();
      return i.call(T, m, t, b);
    })(T.getFrequencyResponse);
  },
  ed = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
  },
  td = (T, i, m, t, b, y) =>
    class extends T {
      constructor(a, r) {
        const l = t(a),
          d = b(l),
          h = { ...ed, ...r },
          o = i(l, d ? null : a.baseLatency, h),
          s = d ? m(h.feedback, h.feedforward) : null;
        super(a, !1, o, s), Kc(o), (this._nativeIIRFilterNode = o), y(this, 1);
      }
      getFrequencyResponse(a, r, l) {
        return this._nativeIIRFilterNode.getFrequencyResponse(a, r, l);
      }
    },
  Na = (T, i, m, t, b, y, u, a, r, l, d) => {
    const h = l.length;
    let o = a;
    for (let s = 0; s < h; s += 1) {
      let n = m[0] * l[s];
      for (let c = 1; c < b; c += 1) {
        const f = (o - c) & (r - 1);
        (n += m[c] * y[f]), (n -= T[c] * u[f]);
      }
      for (let c = b; c < t; c += 1) n += m[c] * y[(o - c) & (r - 1)];
      for (let c = b; c < i; c += 1) n -= T[c] * u[(o - c) & (r - 1)];
      (y[o] = l[s]), (u[o] = n), (o = (o + 1) & (r - 1)), (d[s] = n);
    }
    return o;
  },
  rd = (T, i, m, t) => {
    const b = m instanceof Float64Array ? m : new Float64Array(m),
      y = t instanceof Float64Array ? t : new Float64Array(t),
      u = b.length,
      a = y.length,
      r = Math.min(u, a);
    if (b[0] !== 1) {
      for (let n = 0; n < u; n += 1) y[n] /= b[0];
      for (let n = 1; n < a; n += 1) b[n] /= b[0];
    }
    const l = 32,
      d = new Float32Array(l),
      h = new Float32Array(l),
      o = i.createBuffer(T.numberOfChannels, T.length, T.sampleRate),
      s = T.numberOfChannels;
    for (let n = 0; n < s; n += 1) {
      const c = T.getChannelData(n),
        f = o.getChannelData(n);
      d.fill(0), h.fill(0), Na(b, u, y, a, r, d, h, 0, l, c, f);
    }
    return o;
  },
  nd = (T, i, m, t, b) => (y, u) => {
    const a = new WeakMap();
    let r = null;
    const l = async (d, h) => {
      let o = null,
        s = i(d);
      const n = ur(s, h);
      if (
        (h.createIIRFilter === void 0
          ? (o = T(h, {
              buffer: null,
              channelCount: 2,
              channelCountMode: 'max',
              channelInterpretation: 'speakers',
              loop: !1,
              loopEnd: 0,
              loopStart: 0,
              playbackRate: 1,
            }))
          : n || (s = h.createIIRFilter(u, y)),
        a.set(h, o === null ? s : o),
        o !== null)
      ) {
        if (r === null) {
          if (m === null)
            throw new Error(
              'Missing the native OfflineAudioContext constructor.',
            );
          const f = new m(
            d.context.destination.channelCount,
            d.context.length,
            h.sampleRate,
          );
          r = (async () => {
            await t(d, f, f.destination);
            const g = await b(f);
            return rd(g, h, y, u);
          })();
        }
        const c = await r;
        return (o.buffer = c), o.start(0), o;
      }
      return await t(d, h, s), s;
    };
    return {
      render(d, h) {
        const o = a.get(h);
        return o !== void 0 ? Promise.resolve(o) : l(d, h);
      },
    };
  },
  sd = (T, i, m, t, b, y) => (u) => (a, r) => {
    const l = T.get(a);
    if (l === void 0) {
      if (!u && y(a)) {
        const d = t(a),
          { outputs: h } = m(a);
        for (const o of h)
          if (vs(o)) {
            const s = t(o[0]);
            i(d, s, o[1], o[2]);
          } else {
            const s = b(o[0]);
            d.disconnect(s, o[1]);
          }
      }
      T.set(a, r);
    } else T.set(a, l + r);
  },
  od = (T, i) => (m) => {
    const t = T.get(m);
    return i(t) || i(m);
  },
  id = (T, i) => (m) => T.has(m) || i(m),
  ad = (T, i) => (m) => T.has(m) || i(m),
  ld = (T, i) => (m) => {
    const t = T.get(m);
    return i(t) || i(m);
  },
  ud = (T) => (i) => T !== null && i instanceof T,
  cd = (T) => (i) =>
    T !== null && typeof T.AudioNode == 'function' && i instanceof T.AudioNode,
  dd = (T) => (i) =>
    T !== null &&
    typeof T.AudioParam == 'function' &&
    i instanceof T.AudioParam,
  hd = (T, i) => (m) => T(m) || i(m),
  fd = (T) => (i) => T !== null && i instanceof T,
  pd = (T) => T !== null && T.isSecureContext,
  md = (T, i, m, t) =>
    class extends T {
      constructor(y, u) {
        const a = m(y),
          r = i(a, u);
        if (t(a)) throw TypeError();
        super(y, !0, r, null), (this._nativeMediaElementAudioSourceNode = r);
      }
      get mediaElement() {
        return this._nativeMediaElementAudioSourceNode.mediaElement;
      }
    },
  yd = {
    channelCount: 2,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
  },
  gd = (T, i, m, t) =>
    class extends T {
      constructor(y, u) {
        const a = m(y);
        if (t(a)) throw new TypeError();
        const r = { ...yd, ...u },
          l = i(a, r);
        super(y, !1, l, null),
          (this._nativeMediaStreamAudioDestinationNode = l);
      }
      get stream() {
        return this._nativeMediaStreamAudioDestinationNode.stream;
      }
    },
  vd = (T, i, m, t) =>
    class extends T {
      constructor(y, u) {
        const a = m(y),
          r = i(a, u);
        if (t(a)) throw new TypeError();
        super(y, !0, r, null), (this._nativeMediaStreamAudioSourceNode = r);
      }
      get mediaStream() {
        return this._nativeMediaStreamAudioSourceNode.mediaStream;
      }
    },
  bd = (T, i, m) =>
    class extends T {
      constructor(b, y) {
        const u = m(b),
          a = i(u, y);
        super(b, !0, a, null);
      }
    },
  _d = (T, i, m, t, b, y) =>
    class extends m {
      constructor(a, r) {
        super(a),
          (this._nativeContext = a),
          uo.set(this, a),
          t(a) && b.set(a, new Set()),
          (this._destination = new T(this, r)),
          (this._listener = i(this, a)),
          (this._onstatechange = null);
      }
      get currentTime() {
        return this._nativeContext.currentTime;
      }
      get destination() {
        return this._destination;
      }
      get listener() {
        return this._listener;
      }
      get onstatechange() {
        return this._onstatechange;
      }
      set onstatechange(a) {
        const r = typeof a == 'function' ? y(this, a) : null;
        this._nativeContext.onstatechange = r;
        const l = this._nativeContext.onstatechange;
        this._onstatechange = l !== null && l === r ? a : l;
      }
      get sampleRate() {
        return this._nativeContext.sampleRate;
      }
      get state() {
        return this._nativeContext.state;
      }
    },
  ts = (T) => {
    const i = new Uint32Array([
      1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580,
      1635017060, 4, 0,
    ]);
    try {
      const m = T.decodeAudioData(i.buffer, () => {});
      return m === void 0 ? !1 : (m.catch(() => {}), !0);
    } catch {}
    return !1;
  },
  wd = (T, i) => (m, t, b) => {
    const y = new Set();
    return (
      (m.connect = (
        (u) =>
        (a, r = 0, l = 0) => {
          const d = y.size === 0;
          if (i(a))
            return (
              u.call(m, a, r, l),
              T(
                y,
                [a, r, l],
                (h) => h[0] === a && h[1] === r && h[2] === l,
                !0,
              ),
              d && t(),
              a
            );
          u.call(m, a, r),
            T(y, [a, r], (h) => h[0] === a && h[1] === r, !0),
            d && t();
        }
      )(m.connect)),
      (m.disconnect = ((u) => (a, r, l) => {
        const d = y.size > 0;
        if (a === void 0) u.apply(m), y.clear();
        else if (typeof a == 'number') {
          u.call(m, a);
          for (const o of y) o[1] === a && y.delete(o);
        } else {
          i(a) ? u.call(m, a, r, l) : u.call(m, a, r);
          for (const o of y)
            o[0] === a &&
              (r === void 0 || o[1] === r) &&
              (l === void 0 || o[2] === l) &&
              y.delete(o);
        }
        const h = y.size === 0;
        d && h && b();
      })(m.disconnect)),
      m
    );
  },
  Rt = (T, i, m) => {
    const t = i[m];
    t !== void 0 && t !== T[m] && (T[m] = t);
  },
  Yt = (T, i) => {
    Rt(T, i, 'channelCount'),
      Rt(T, i, 'channelCountMode'),
      Rt(T, i, 'channelInterpretation');
  },
  fa = (T) => typeof T.getFloatTimeDomainData == 'function',
  xd = (T) => {
    T.getFloatTimeDomainData = (i) => {
      const m = new Uint8Array(i.length);
      T.getByteTimeDomainData(m);
      const t = Math.max(m.length, T.fftSize);
      for (let b = 0; b < t; b += 1) i[b] = (m[b] - 128) * 0.0078125;
      return i;
    };
  },
  jd = (T, i) => (m, t) => {
    const b = m.createAnalyser();
    if ((Yt(b, t), !(t.maxDecibels > t.minDecibels))) throw i();
    return (
      Rt(b, t, 'fftSize'),
      Rt(b, t, 'maxDecibels'),
      Rt(b, t, 'minDecibels'),
      Rt(b, t, 'smoothingTimeConstant'),
      T(fa, () => fa(b)) || xd(b),
      b
    );
  },
  Sd = (T) =>
    T === null ? null : T.hasOwnProperty('AudioBuffer') ? T.AudioBuffer : null,
  Lt = (T, i, m) => {
    const t = i[m];
    t !== void 0 && t !== T[m].value && (T[m].value = t);
  },
  Td = (T) => {
    T.start = ((i) => {
      let m = !1;
      return (t = 0, b = 0, y) => {
        if (m) throw er();
        i.call(T, t, b, y), (m = !0);
      };
    })(T.start);
  },
  Yo = (T) => {
    T.start = (
      (i) =>
      (m = 0, t = 0, b) => {
        if ((typeof b == 'number' && b < 0) || t < 0 || m < 0)
          throw new RangeError("The parameters can't be negative.");
        i.call(T, m, t, b);
      }
    )(T.start);
  },
  Zo = (T) => {
    T.stop = (
      (i) =>
      (m = 0) => {
        if (m < 0) throw new RangeError("The parameter can't be negative.");
        i.call(T, m);
      }
    )(T.stop);
  },
  Md = (T, i, m, t, b, y, u, a, r, l, d) => (h, o) => {
    const s = h.createBufferSource();
    return (
      Yt(s, o),
      Lt(s, o, 'playbackRate'),
      Rt(s, o, 'buffer'),
      Rt(s, o, 'loop'),
      Rt(s, o, 'loopEnd'),
      Rt(s, o, 'loopStart'),
      i(m, () => m(h)) || Td(s),
      i(t, () => t(h)) || r(s),
      i(b, () => b(h)) || l(s, h),
      i(y, () => y(h)) || Yo(s),
      i(u, () => u(h)) || d(s, h),
      i(a, () => a(h)) || Zo(s),
      T(h, s),
      s
    );
  },
  Cd = (T) =>
    T === null
      ? null
      : T.hasOwnProperty('AudioContext')
      ? T.AudioContext
      : T.hasOwnProperty('webkitAudioContext')
      ? T.webkitAudioContext
      : null,
  Ed = (T, i) => (m, t, b) => {
    const y = m.destination;
    if (y.channelCount !== t)
      try {
        y.channelCount = t;
      } catch {}
    b && y.channelCountMode !== 'explicit' && (y.channelCountMode = 'explicit'),
      y.maxChannelCount === 0 &&
        Object.defineProperty(y, 'maxChannelCount', { value: t });
    const u = T(m, {
      channelCount: t,
      channelCountMode: y.channelCountMode,
      channelInterpretation: y.channelInterpretation,
      gain: 1,
    });
    return (
      i(
        u,
        'channelCount',
        (a) => () => a.call(u),
        (a) => (r) => {
          a.call(u, r);
          try {
            y.channelCount = r;
          } catch (l) {
            if (r > y.maxChannelCount) throw l;
          }
        },
      ),
      i(
        u,
        'channelCountMode',
        (a) => () => a.call(u),
        (a) => (r) => {
          a.call(u, r), (y.channelCountMode = r);
        },
      ),
      i(
        u,
        'channelInterpretation',
        (a) => () => a.call(u),
        (a) => (r) => {
          a.call(u, r), (y.channelInterpretation = r);
        },
      ),
      Object.defineProperty(u, 'maxChannelCount', {
        get: () => y.maxChannelCount,
      }),
      u.connect(y),
      u
    );
  },
  kd = (T) =>
    T === null
      ? null
      : T.hasOwnProperty('AudioWorkletNode')
      ? T.AudioWorkletNode
      : null,
  Od = (T) => {
    const { port1: i } = new MessageChannel();
    try {
      i.postMessage(T);
    } finally {
      i.close();
    }
  },
  Ad = (T, i, m, t, b) => (y, u, a, r, l, d) => {
    if (a !== null)
      try {
        const h = new a(y, r, d),
          o = new Map();
        let s = null;
        if (
          (Object.defineProperties(h, {
            channelCount: {
              get: () => d.channelCount,
              set: () => {
                throw T();
              },
            },
            channelCountMode: {
              get: () => 'explicit',
              set: () => {
                throw T();
              },
            },
            onprocessorerror: {
              get: () => s,
              set: (n) => {
                typeof s == 'function' &&
                  h.removeEventListener('processorerror', s),
                  (s = typeof n == 'function' ? n : null),
                  typeof s == 'function' &&
                    h.addEventListener('processorerror', s);
              },
            },
          }),
          (h.addEventListener = (
            (n) =>
            (...c) => {
              if (c[0] === 'processorerror') {
                const f =
                  typeof c[1] == 'function'
                    ? c[1]
                    : typeof c[1] == 'object' &&
                      c[1] !== null &&
                      typeof c[1].handleEvent == 'function'
                    ? c[1].handleEvent
                    : null;
                if (f !== null) {
                  const g = o.get(c[1]);
                  g !== void 0
                    ? (c[1] = g)
                    : ((c[1] = (_) => {
                        _.type === 'error'
                          ? (Object.defineProperties(_, {
                              type: { value: 'processorerror' },
                            }),
                            f(_))
                          : f(new ErrorEvent(c[0], { ..._ }));
                      }),
                      o.set(f, c[1]));
                }
              }
              return n.call(h, 'error', c[1], c[2]), n.call(h, ...c);
            }
          )(h.addEventListener)),
          (h.removeEventListener = (
            (n) =>
            (...c) => {
              if (c[0] === 'processorerror') {
                const f = o.get(c[1]);
                f !== void 0 && (o.delete(c[1]), (c[1] = f));
              }
              return (
                n.call(h, 'error', c[1], c[2]), n.call(h, c[0], c[1], c[2])
              );
            }
          )(h.removeEventListener)),
          d.numberOfOutputs !== 0)
        ) {
          const n = m(y, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0,
          });
          return (
            h.connect(n).connect(y.destination),
            b(
              h,
              () => n.disconnect(),
              () => n.connect(y.destination),
            )
          );
        }
        return h;
      } catch (h) {
        throw h.code === 11 ? t() : h;
      }
    if (l === void 0) throw t();
    return Od(d), i(y, u, l, d);
  },
  Fa = (T, i) =>
    T === null
      ? 512
      : Math.max(
          512,
          Math.min(16384, Math.pow(2, Math.round(Math.log2(T * i)))),
        ),
  Rd = (T) =>
    new Promise((i, m) => {
      const { port1: t, port2: b } = new MessageChannel();
      (t.onmessage = ({ data: y }) => {
        t.close(), b.close(), i(y);
      }),
        (t.onmessageerror = ({ data: y }) => {
          t.close(), b.close(), m(y);
        }),
        b.postMessage(T);
    }),
  Pd = async (T, i) => {
    const m = await Rd(i);
    return new T(m);
  },
  Id = (T, i, m, t) => {
    let b = Do.get(T);
    b === void 0 && ((b = new WeakMap()), Do.set(T, b));
    const y = Pd(m, t);
    return b.set(i, y), y;
  },
  Dd = (T, i, m, t, b, y, u, a, r, l, d, h, o) => (s, n, c, f) => {
    if (f.numberOfInputs === 0 && f.numberOfOutputs === 0) throw r();
    const g = Array.isArray(f.outputChannelCount)
      ? f.outputChannelCount
      : Array.from(f.outputChannelCount);
    if (g.some((se) => se < 1)) throw r();
    if (g.length !== f.numberOfOutputs) throw i();
    if (f.channelCountMode !== 'explicit') throw r();
    const _ = f.channelCount * f.numberOfInputs,
      x = g.reduce((se, he) => se + he, 0),
      j = c.parameterDescriptors === void 0 ? 0 : c.parameterDescriptors.length;
    if (_ + j > 6 || x > 6) throw r();
    const v = new MessageChannel(),
      M = [],
      C = [];
    for (let se = 0; se < f.numberOfInputs; se += 1)
      M.push(
        u(s, {
          channelCount: f.channelCount,
          channelCountMode: f.channelCountMode,
          channelInterpretation: f.channelInterpretation,
          gain: 1,
        }),
      ),
        C.push(
          b(s, {
            channelCount: f.channelCount,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: f.channelCount,
          }),
        );
    const k = [];
    if (c.parameterDescriptors !== void 0)
      for (const {
        defaultValue: se,
        maxValue: he,
        minValue: ve,
        name: me,
      } of c.parameterDescriptors) {
        const Ce = y(s, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          offset:
            f.parameterData[me] !== void 0
              ? f.parameterData[me]
              : se === void 0
              ? 0
              : se,
        });
        Object.defineProperties(Ce.offset, {
          defaultValue: { get: () => (se === void 0 ? 0 : se) },
          maxValue: { get: () => (he === void 0 ? cr : he) },
          minValue: { get: () => (ve === void 0 ? pr : ve) },
        }),
          k.push(Ce);
      }
    const A = t(s, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'speakers',
        numberOfInputs: Math.max(1, _ + j),
      }),
      R = Fa(n, s.sampleRate),
      O = a(s, R, _ + j, Math.max(1, x)),
      D = b(s, {
        channelCount: Math.max(1, x),
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        numberOfOutputs: Math.max(1, x),
      }),
      N = [];
    for (let se = 0; se < f.numberOfOutputs; se += 1)
      N.push(
        t(s, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'speakers',
          numberOfInputs: g[se],
        }),
      );
    for (let se = 0; se < f.numberOfInputs; se += 1) {
      M[se].connect(C[se]);
      for (let he = 0; he < f.channelCount; he += 1)
        C[se].connect(A, he, se * f.channelCount + he);
    }
    const U = new Da(
      c.parameterDescriptors === void 0
        ? []
        : c.parameterDescriptors.map(({ name: se }, he) => {
            const ve = k[he];
            return ve.connect(A, 0, _ + he), ve.start(0), [se, ve.offset];
          }),
    );
    A.connect(O);
    let H = f.channelInterpretation,
      q = null;
    const z = f.numberOfOutputs === 0 ? [O] : N,
      X = {
        get bufferSize() {
          return R;
        },
        get channelCount() {
          return f.channelCount;
        },
        set channelCount(se) {
          throw m();
        },
        get channelCountMode() {
          return f.channelCountMode;
        },
        set channelCountMode(se) {
          throw m();
        },
        get channelInterpretation() {
          return H;
        },
        set channelInterpretation(se) {
          for (const he of M) he.channelInterpretation = se;
          H = se;
        },
        get context() {
          return O.context;
        },
        get inputs() {
          return M;
        },
        get numberOfInputs() {
          return f.numberOfInputs;
        },
        get numberOfOutputs() {
          return f.numberOfOutputs;
        },
        get onprocessorerror() {
          return q;
        },
        set onprocessorerror(se) {
          typeof q == 'function' && X.removeEventListener('processorerror', q),
            (q = typeof se == 'function' ? se : null),
            typeof q == 'function' && X.addEventListener('processorerror', q);
        },
        get parameters() {
          return U;
        },
        get port() {
          return v.port2;
        },
        addEventListener(...se) {
          return O.addEventListener(se[0], se[1], se[2]);
        },
        connect: T.bind(null, z),
        disconnect: l.bind(null, z),
        dispatchEvent(...se) {
          return O.dispatchEvent(se[0]);
        },
        removeEventListener(...se) {
          return O.removeEventListener(se[0], se[1], se[2]);
        },
      },
      W = new Map();
    (v.port1.addEventListener = (
      (se) =>
      (...he) => {
        if (he[0] === 'message') {
          const ve =
            typeof he[1] == 'function'
              ? he[1]
              : typeof he[1] == 'object' &&
                he[1] !== null &&
                typeof he[1].handleEvent == 'function'
              ? he[1].handleEvent
              : null;
          if (ve !== null) {
            const me = W.get(he[1]);
            me !== void 0
              ? (he[1] = me)
              : ((he[1] = (Ce) => {
                  d(s.currentTime, s.sampleRate, () => ve(Ce));
                }),
                W.set(ve, he[1]));
          }
        }
        return se.call(v.port1, he[0], he[1], he[2]);
      }
    )(v.port1.addEventListener)),
      (v.port1.removeEventListener = (
        (se) =>
        (...he) => {
          if (he[0] === 'message') {
            const ve = W.get(he[1]);
            ve !== void 0 && (W.delete(he[1]), (he[1] = ve));
          }
          return se.call(v.port1, he[0], he[1], he[2]);
        }
      )(v.port1.removeEventListener));
    let Z = null;
    Object.defineProperty(v.port1, 'onmessage', {
      get: () => Z,
      set: (se) => {
        typeof Z == 'function' && v.port1.removeEventListener('message', Z),
          (Z = typeof se == 'function' ? se : null),
          typeof Z == 'function' &&
            (v.port1.addEventListener('message', Z), v.port1.start());
      },
    }),
      (c.prototype.port = v.port1);
    let $ = null;
    Id(s, X, c, f).then((se) => ($ = se));
    const P = Ys(f.numberOfInputs, f.channelCount),
      L = Ys(f.numberOfOutputs, g),
      B =
        c.parameterDescriptors === void 0
          ? []
          : c.parameterDescriptors.reduce(
              (se, { name: he }) => ({ ...se, [he]: new Float32Array(128) }),
              {},
            );
    let Y = !0;
    const ee = () => {
        f.numberOfOutputs > 0 && O.disconnect(D);
        for (let se = 0, he = 0; se < f.numberOfOutputs; se += 1) {
          const ve = N[se];
          for (let me = 0; me < g[se]; me += 1) D.disconnect(ve, he + me, me);
          he += g[se];
        }
      },
      ne = new Map();
    O.onaudioprocess = ({ inputBuffer: se, outputBuffer: he }) => {
      if ($ !== null) {
        const ve = h(X);
        for (let me = 0; me < R; me += 128) {
          for (let Ce = 0; Ce < f.numberOfInputs; Ce += 1)
            for (let Se = 0; Se < f.channelCount; Se += 1)
              Xs(se, P[Ce], Se, Se, me);
          c.parameterDescriptors !== void 0 &&
            c.parameterDescriptors.forEach(({ name: Ce }, Se) => {
              Xs(se, B, Ce, _ + Se, me);
            });
          for (let Ce = 0; Ce < f.numberOfInputs; Ce += 1)
            for (let Se = 0; Se < g[Ce]; Se += 1)
              L[Ce][Se].byteLength === 0 && (L[Ce][Se] = new Float32Array(128));
          try {
            const Ce = P.map((Pe, Me) => {
              if (ve[Me].size > 0) return ne.set(Me, R / 128), Pe;
              const ze = ne.get(Me);
              return ze === void 0
                ? []
                : (Pe.every((We) => We.every((Qe) => Qe === 0)) &&
                    (ze === 1 ? ne.delete(Me) : ne.set(Me, ze - 1)),
                  Pe);
            });
            Y = d(s.currentTime + me / s.sampleRate, s.sampleRate, () =>
              $.process(Ce, L, B),
            );
            for (let Pe = 0, Me = 0; Pe < f.numberOfOutputs; Pe += 1) {
              for (let Be = 0; Be < g[Pe]; Be += 1)
                La(he, L[Pe], Be, Me + Be, me);
              Me += g[Pe];
            }
          } catch (Ce) {
            (Y = !1),
              X.dispatchEvent(
                new ErrorEvent('processorerror', {
                  colno: Ce.colno,
                  filename: Ce.filename,
                  lineno: Ce.lineno,
                  message: Ce.message,
                }),
              );
          }
          if (!Y) {
            for (let Ce = 0; Ce < f.numberOfInputs; Ce += 1) {
              M[Ce].disconnect(C[Ce]);
              for (let Se = 0; Se < f.channelCount; Se += 1)
                C[me].disconnect(A, Se, Ce * f.channelCount + Se);
            }
            if (c.parameterDescriptors !== void 0) {
              const Ce = c.parameterDescriptors.length;
              for (let Se = 0; Se < Ce; Se += 1) {
                const Pe = k[Se];
                Pe.disconnect(A, 0, _ + Se), Pe.stop();
              }
            }
            A.disconnect(O), (O.onaudioprocess = null), ce ? ee() : ue();
            break;
          }
        }
      }
    };
    let ce = !1;
    const pe = u(s, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        gain: 0,
      }),
      le = () => O.connect(pe).connect(s.destination),
      ue = () => {
        O.disconnect(pe), pe.disconnect();
      },
      be = () => {
        if (Y) {
          ue(), f.numberOfOutputs > 0 && O.connect(D);
          for (let se = 0, he = 0; se < f.numberOfOutputs; se += 1) {
            const ve = N[se];
            for (let me = 0; me < g[se]; me += 1) D.connect(ve, he + me, me);
            he += g[se];
          }
        }
        ce = !0;
      },
      te = () => {
        Y && (le(), ee()), (ce = !1);
      };
    return le(), o(X, be, te);
  },
  Ua = (T, i) => {
    const m = T.createBiquadFilter();
    return (
      Yt(m, i),
      Lt(m, i, 'Q'),
      Lt(m, i, 'detune'),
      Lt(m, i, 'frequency'),
      Lt(m, i, 'gain'),
      Rt(m, i, 'type'),
      m
    );
  },
  Ld = (T, i) => (m, t) => {
    const b = m.createChannelMerger(t.numberOfInputs);
    return (
      T !== null && T.name === 'webkitAudioContext' && i(m, b), Yt(b, t), b
    );
  },
  Nd = (T) => {
    const i = T.numberOfOutputs;
    Object.defineProperty(T, 'channelCount', {
      get: () => i,
      set: (m) => {
        if (m !== i) throw er();
      },
    }),
      Object.defineProperty(T, 'channelCountMode', {
        get: () => 'explicit',
        set: (m) => {
          if (m !== 'explicit') throw er();
        },
      }),
      Object.defineProperty(T, 'channelInterpretation', {
        get: () => 'discrete',
        set: (m) => {
          if (m !== 'discrete') throw er();
        },
      });
  },
  bs = (T, i) => {
    const m = T.createChannelSplitter(i.numberOfOutputs);
    return Yt(m, i), Nd(m), m;
  },
  Fd = (T, i, m, t, b) => (y, u) => {
    if (y.createConstantSource === void 0) return m(y, u);
    const a = y.createConstantSource();
    return (
      Yt(a, u),
      Lt(a, u, 'offset'),
      i(t, () => t(y)) || Yo(a),
      i(b, () => b(y)) || Zo(a),
      T(y, a),
      a
    );
  },
  Fn = (T, i) => (
    (T.connect = i.connect.bind(i)), (T.disconnect = i.disconnect.bind(i)), T
  ),
  Ud =
    (T, i, m, t) =>
    (b, { offset: y, ...u }) => {
      const a = b.createBuffer(1, 2, 44100),
        r = i(b, {
          buffer: null,
          channelCount: 2,
          channelCountMode: 'max',
          channelInterpretation: 'speakers',
          loop: !1,
          loopEnd: 0,
          loopStart: 0,
          playbackRate: 1,
        }),
        l = m(b, { ...u, gain: y }),
        d = a.getChannelData(0);
      (d[0] = 1), (d[1] = 1), (r.buffer = a), (r.loop = !0);
      const h = {
          get bufferSize() {},
          get channelCount() {
            return l.channelCount;
          },
          set channelCount(n) {
            l.channelCount = n;
          },
          get channelCountMode() {
            return l.channelCountMode;
          },
          set channelCountMode(n) {
            l.channelCountMode = n;
          },
          get channelInterpretation() {
            return l.channelInterpretation;
          },
          set channelInterpretation(n) {
            l.channelInterpretation = n;
          },
          get context() {
            return l.context;
          },
          get inputs() {
            return [];
          },
          get numberOfInputs() {
            return r.numberOfInputs;
          },
          get numberOfOutputs() {
            return l.numberOfOutputs;
          },
          get offset() {
            return l.gain;
          },
          get onended() {
            return r.onended;
          },
          set onended(n) {
            r.onended = n;
          },
          addEventListener(...n) {
            return r.addEventListener(n[0], n[1], n[2]);
          },
          dispatchEvent(...n) {
            return r.dispatchEvent(n[0]);
          },
          removeEventListener(...n) {
            return r.removeEventListener(n[0], n[1], n[2]);
          },
          start(n = 0) {
            r.start.call(r, n);
          },
          stop(n = 0) {
            r.stop.call(r, n);
          },
        },
        o = () => r.connect(l),
        s = () => r.disconnect(l);
      return T(b, r), t(Fn(h, l), o, s);
    },
  Bd = (T, i) => (m, t) => {
    const b = m.createConvolver();
    if (
      (Yt(b, t),
      t.disableNormalization === b.normalize &&
        (b.normalize = !t.disableNormalization),
      Rt(b, t, 'buffer'),
      t.channelCount > 2 ||
        (i(
          b,
          'channelCount',
          (y) => () => y.call(b),
          (y) => (u) => {
            if (u > 2) throw T();
            return y.call(b, u);
          },
        ),
        t.channelCountMode === 'max'))
    )
      throw T();
    return (
      i(
        b,
        'channelCountMode',
        (y) => () => y.call(b),
        (y) => (u) => {
          if (u === 'max') throw T();
          return y.call(b, u);
        },
      ),
      b
    );
  },
  Ba = (T, i) => {
    const m = T.createDelay(i.maxDelayTime);
    return Yt(m, i), Lt(m, i, 'delayTime'), m;
  },
  Vd = (T) => (i, m) => {
    const t = i.createDynamicsCompressor();
    if ((Yt(t, m), m.channelCount > 2 || m.channelCountMode === 'max'))
      throw T();
    return (
      Lt(t, m, 'attack'),
      Lt(t, m, 'knee'),
      Lt(t, m, 'ratio'),
      Lt(t, m, 'release'),
      Lt(t, m, 'threshold'),
      t
    );
  },
  yr = (T, i) => {
    const m = T.createGain();
    return Yt(m, i), Lt(m, i, 'gain'), m;
  },
  Gd = (T) => (i, m, t) => {
    if (i.createIIRFilter === void 0) return T(i, m, t);
    const b = i.createIIRFilter(t.feedforward, t.feedback);
    return Yt(b, t), b;
  };
function Wd(T, i) {
  const m = i[0] * i[0] + i[1] * i[1];
  return [(T[0] * i[0] + T[1] * i[1]) / m, (T[1] * i[0] - T[0] * i[1]) / m];
}
function qd(T, i) {
  return [T[0] * i[0] - T[1] * i[1], T[0] * i[1] + T[1] * i[0]];
}
function pa(T, i) {
  let m = [0, 0];
  for (let t = T.length - 1; t >= 0; t -= 1) (m = qd(m, i)), (m[0] += T[t]);
  return m;
}
const zd =
    (T, i, m, t) =>
    (
      b,
      y,
      {
        channelCount: u,
        channelCountMode: a,
        channelInterpretation: r,
        feedback: l,
        feedforward: d,
      },
    ) => {
      const h = Fa(y, b.sampleRate),
        o = l instanceof Float64Array ? l : new Float64Array(l),
        s = d instanceof Float64Array ? d : new Float64Array(d),
        n = o.length,
        c = s.length,
        f = Math.min(n, c);
      if (n === 0 || n > 20) throw t();
      if (o[0] === 0) throw i();
      if (c === 0 || c > 20) throw t();
      if (s[0] === 0) throw i();
      if (o[0] !== 1) {
        for (let k = 0; k < c; k += 1) s[k] /= o[0];
        for (let k = 1; k < n; k += 1) o[k] /= o[0];
      }
      const g = m(b, h, u, u);
      (g.channelCount = u),
        (g.channelCountMode = a),
        (g.channelInterpretation = r);
      const _ = 32,
        x = [],
        j = [],
        v = [];
      for (let k = 0; k < u; k += 1) {
        x.push(0);
        const A = new Float32Array(_),
          R = new Float32Array(_);
        A.fill(0), R.fill(0), j.push(A), v.push(R);
      }
      g.onaudioprocess = (k) => {
        const A = k.inputBuffer,
          R = k.outputBuffer,
          O = A.numberOfChannels;
        for (let D = 0; D < O; D += 1) {
          const N = A.getChannelData(D),
            U = R.getChannelData(D);
          x[D] = Na(o, n, s, c, f, j[D], v[D], x[D], _, N, U);
        }
      };
      const M = b.sampleRate / 2;
      return Fn(
        {
          get bufferSize() {
            return h;
          },
          get channelCount() {
            return g.channelCount;
          },
          set channelCount(k) {
            g.channelCount = k;
          },
          get channelCountMode() {
            return g.channelCountMode;
          },
          set channelCountMode(k) {
            g.channelCountMode = k;
          },
          get channelInterpretation() {
            return g.channelInterpretation;
          },
          set channelInterpretation(k) {
            g.channelInterpretation = k;
          },
          get context() {
            return g.context;
          },
          get inputs() {
            return [g];
          },
          get numberOfInputs() {
            return g.numberOfInputs;
          },
          get numberOfOutputs() {
            return g.numberOfOutputs;
          },
          addEventListener(...k) {
            return g.addEventListener(k[0], k[1], k[2]);
          },
          dispatchEvent(...k) {
            return g.dispatchEvent(k[0]);
          },
          getFrequencyResponse(k, A, R) {
            if (k.length !== A.length || A.length !== R.length) throw T();
            const O = k.length;
            for (let D = 0; D < O; D += 1) {
              const N = -Math.PI * (k[D] / M),
                U = [Math.cos(N), Math.sin(N)],
                H = pa(s, U),
                q = pa(o, U),
                z = Wd(H, q);
              (A[D] = Math.sqrt(z[0] * z[0] + z[1] * z[1])),
                (R[D] = Math.atan2(z[1], z[0]));
            }
          },
          removeEventListener(...k) {
            return g.removeEventListener(k[0], k[1], k[2]);
          },
        },
        g,
      );
    },
  Hd = (T, i) => T.createMediaElementSource(i.mediaElement),
  Xd = (T, i) => {
    const m = T.createMediaStreamDestination();
    return (
      Yt(m, i),
      m.numberOfOutputs === 1 &&
        Object.defineProperty(m, 'numberOfOutputs', { get: () => 0 }),
      m
    );
  },
  Yd = (T, { mediaStream: i }) => {
    const m = i.getAudioTracks();
    m.sort((y, u) => (y.id < u.id ? -1 : y.id > u.id ? 1 : 0));
    const t = m.slice(0, 1),
      b = T.createMediaStreamSource(new MediaStream(t));
    return Object.defineProperty(b, 'mediaStream', { value: i }), b;
  },
  Zd =
    (T, i) =>
    (m, { mediaStreamTrack: t }) => {
      if (typeof m.createMediaStreamTrackSource == 'function')
        return m.createMediaStreamTrackSource(t);
      const b = new MediaStream([t]),
        y = m.createMediaStreamSource(b);
      if (t.kind !== 'audio') throw T();
      if (i(m)) throw new TypeError();
      return y;
    },
  $d = (T) =>
    T === null
      ? null
      : T.hasOwnProperty('OfflineAudioContext')
      ? T.OfflineAudioContext
      : T.hasOwnProperty('webkitOfflineAudioContext')
      ? T.webkitOfflineAudioContext
      : null,
  Qd = (T, i, m, t, b, y) => (u, a) => {
    const r = u.createOscillator();
    return (
      Yt(r, a),
      Lt(r, a, 'detune'),
      Lt(r, a, 'frequency'),
      a.periodicWave !== void 0
        ? r.setPeriodicWave(a.periodicWave)
        : Rt(r, a, 'type'),
      i(m, () => m(u)) || Yo(r),
      i(t, () => t(u)) || y(r, u),
      i(b, () => b(u)) || Zo(r),
      T(u, r),
      r
    );
  },
  Jd = (T) => (i, m) => {
    const t = i.createPanner();
    return t.orientationX === void 0
      ? T(i, m)
      : (Yt(t, m),
        Lt(t, m, 'orientationX'),
        Lt(t, m, 'orientationY'),
        Lt(t, m, 'orientationZ'),
        Lt(t, m, 'positionX'),
        Lt(t, m, 'positionY'),
        Lt(t, m, 'positionZ'),
        Rt(t, m, 'coneInnerAngle'),
        Rt(t, m, 'coneOuterAngle'),
        Rt(t, m, 'coneOuterGain'),
        Rt(t, m, 'distanceModel'),
        Rt(t, m, 'maxDistance'),
        Rt(t, m, 'panningModel'),
        Rt(t, m, 'refDistance'),
        Rt(t, m, 'rolloffFactor'),
        t);
  },
  Kd =
    (T, i, m, t, b, y, u, a, r, l) =>
    (
      d,
      {
        coneInnerAngle: h,
        coneOuterAngle: o,
        coneOuterGain: s,
        distanceModel: n,
        maxDistance: c,
        orientationX: f,
        orientationY: g,
        orientationZ: _,
        panningModel: x,
        positionX: j,
        positionY: v,
        positionZ: M,
        refDistance: C,
        rolloffFactor: k,
        ...A
      },
    ) => {
      const R = d.createPanner();
      if (A.channelCount > 2 || A.channelCountMode === 'max') throw u();
      Yt(R, A);
      const O = {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
        },
        D = m(d, {
          ...O,
          channelInterpretation: 'speakers',
          numberOfInputs: 6,
        }),
        N = t(d, { ...A, gain: 1 }),
        U = t(d, { ...O, gain: 1 }),
        H = t(d, { ...O, gain: 0 }),
        q = t(d, { ...O, gain: 0 }),
        z = t(d, { ...O, gain: 0 }),
        X = t(d, { ...O, gain: 0 }),
        W = t(d, { ...O, gain: 0 }),
        Z = b(d, 256, 6, 1),
        $ = y(d, { ...O, curve: new Float32Array([1, 1]), oversample: 'none' });
      let ae = [f, g, _],
        P = [j, v, M];
      const L = new Float32Array(1);
      (Z.onaudioprocess = ({ inputBuffer: ne }) => {
        const ce = [r(ne, L, 0), r(ne, L, 1), r(ne, L, 2)];
        ce.some((le, ue) => le !== ae[ue]) &&
          (R.setOrientation(...ce), (ae = ce));
        const pe = [r(ne, L, 3), r(ne, L, 4), r(ne, L, 5)];
        pe.some((le, ue) => le !== P[ue]) && (R.setPosition(...pe), (P = pe));
      }),
        Object.defineProperty(H.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(q.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(z.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(X.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(W.gain, 'defaultValue', { get: () => 0 });
      const B = {
        get bufferSize() {},
        get channelCount() {
          return R.channelCount;
        },
        set channelCount(ne) {
          if (ne > 2) throw u();
          (N.channelCount = ne), (R.channelCount = ne);
        },
        get channelCountMode() {
          return R.channelCountMode;
        },
        set channelCountMode(ne) {
          if (ne === 'max') throw u();
          (N.channelCountMode = ne), (R.channelCountMode = ne);
        },
        get channelInterpretation() {
          return R.channelInterpretation;
        },
        set channelInterpretation(ne) {
          (N.channelInterpretation = ne), (R.channelInterpretation = ne);
        },
        get coneInnerAngle() {
          return R.coneInnerAngle;
        },
        set coneInnerAngle(ne) {
          R.coneInnerAngle = ne;
        },
        get coneOuterAngle() {
          return R.coneOuterAngle;
        },
        set coneOuterAngle(ne) {
          R.coneOuterAngle = ne;
        },
        get coneOuterGain() {
          return R.coneOuterGain;
        },
        set coneOuterGain(ne) {
          if (ne < 0 || ne > 1) throw i();
          R.coneOuterGain = ne;
        },
        get context() {
          return R.context;
        },
        get distanceModel() {
          return R.distanceModel;
        },
        set distanceModel(ne) {
          R.distanceModel = ne;
        },
        get inputs() {
          return [N];
        },
        get maxDistance() {
          return R.maxDistance;
        },
        set maxDistance(ne) {
          if (ne < 0) throw new RangeError();
          R.maxDistance = ne;
        },
        get numberOfInputs() {
          return R.numberOfInputs;
        },
        get numberOfOutputs() {
          return R.numberOfOutputs;
        },
        get orientationX() {
          return U.gain;
        },
        get orientationY() {
          return H.gain;
        },
        get orientationZ() {
          return q.gain;
        },
        get panningModel() {
          return R.panningModel;
        },
        set panningModel(ne) {
          R.panningModel = ne;
        },
        get positionX() {
          return z.gain;
        },
        get positionY() {
          return X.gain;
        },
        get positionZ() {
          return W.gain;
        },
        get refDistance() {
          return R.refDistance;
        },
        set refDistance(ne) {
          if (ne < 0) throw new RangeError();
          R.refDistance = ne;
        },
        get rolloffFactor() {
          return R.rolloffFactor;
        },
        set rolloffFactor(ne) {
          if (ne < 0) throw new RangeError();
          R.rolloffFactor = ne;
        },
        addEventListener(...ne) {
          return N.addEventListener(ne[0], ne[1], ne[2]);
        },
        dispatchEvent(...ne) {
          return N.dispatchEvent(ne[0]);
        },
        removeEventListener(...ne) {
          return N.removeEventListener(ne[0], ne[1], ne[2]);
        },
      };
      h !== B.coneInnerAngle && (B.coneInnerAngle = h),
        o !== B.coneOuterAngle && (B.coneOuterAngle = o),
        s !== B.coneOuterGain && (B.coneOuterGain = s),
        n !== B.distanceModel && (B.distanceModel = n),
        c !== B.maxDistance && (B.maxDistance = c),
        f !== B.orientationX.value && (B.orientationX.value = f),
        g !== B.orientationY.value && (B.orientationY.value = g),
        _ !== B.orientationZ.value && (B.orientationZ.value = _),
        x !== B.panningModel && (B.panningModel = x),
        j !== B.positionX.value && (B.positionX.value = j),
        v !== B.positionY.value && (B.positionY.value = v),
        M !== B.positionZ.value && (B.positionZ.value = M),
        C !== B.refDistance && (B.refDistance = C),
        k !== B.rolloffFactor && (B.rolloffFactor = k),
        (ae[0] !== 1 || ae[1] !== 0 || ae[2] !== 0) && R.setOrientation(...ae),
        (P[0] !== 0 || P[1] !== 0 || P[2] !== 0) && R.setPosition(...P);
      const Y = () => {
          N.connect(R),
            T(N, $, 0, 0),
            $.connect(U).connect(D, 0, 0),
            $.connect(H).connect(D, 0, 1),
            $.connect(q).connect(D, 0, 2),
            $.connect(z).connect(D, 0, 3),
            $.connect(X).connect(D, 0, 4),
            $.connect(W).connect(D, 0, 5),
            D.connect(Z).connect(d.destination);
        },
        ee = () => {
          N.disconnect(R),
            a(N, $, 0, 0),
            $.disconnect(U),
            U.disconnect(D),
            $.disconnect(H),
            H.disconnect(D),
            $.disconnect(q),
            q.disconnect(D),
            $.disconnect(z),
            z.disconnect(D),
            $.disconnect(X),
            X.disconnect(D),
            $.disconnect(W),
            W.disconnect(D),
            D.disconnect(Z),
            Z.disconnect(d.destination);
        };
      return l(Fn(B, R), Y, ee);
    },
  eh =
    (T) =>
    (i, { disableNormalization: m, imag: t, real: b }) => {
      const y = t instanceof Float32Array ? t : new Float32Array(t),
        u = b instanceof Float32Array ? b : new Float32Array(b),
        a = i.createPeriodicWave(u, y, { disableNormalization: m });
      if (Array.from(t).length < 2) throw T();
      return a;
    },
  _s = (T, i, m, t) => T.createScriptProcessor(i, m, t),
  th = (T, i) => (m, t) => {
    const b = t.channelCountMode;
    if (b === 'clamped-max') throw i();
    if (m.createStereoPanner === void 0) return T(m, t);
    const y = m.createStereoPanner();
    return (
      Yt(y, t),
      Lt(y, t, 'pan'),
      Object.defineProperty(y, 'channelCountMode', {
        get: () => b,
        set: (u) => {
          if (u !== b) throw i();
        },
      }),
      y
    );
  },
  rh = (T, i, m, t, b, y) => {
    const a = new Float32Array([1, 1]),
      r = Math.PI / 2,
      l = {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
      },
      d = { ...l, oversample: 'none' },
      h = (n, c, f, g) => {
        const _ = new Float32Array(16385),
          x = new Float32Array(16385);
        for (let A = 0; A < 16385; A += 1) {
          const R = (A / 16384) * r;
          (_[A] = Math.cos(R)), (x[A] = Math.sin(R));
        }
        const j = m(n, { ...l, gain: 0 }),
          v = t(n, { ...d, curve: _ }),
          M = t(n, { ...d, curve: a }),
          C = m(n, { ...l, gain: 0 }),
          k = t(n, { ...d, curve: x });
        return {
          connectGraph() {
            c.connect(j),
              c.connect(M.inputs === void 0 ? M : M.inputs[0]),
              c.connect(C),
              M.connect(f),
              f.connect(v.inputs === void 0 ? v : v.inputs[0]),
              f.connect(k.inputs === void 0 ? k : k.inputs[0]),
              v.connect(j.gain),
              k.connect(C.gain),
              j.connect(g, 0, 0),
              C.connect(g, 0, 1);
          },
          disconnectGraph() {
            c.disconnect(j),
              c.disconnect(M.inputs === void 0 ? M : M.inputs[0]),
              c.disconnect(C),
              M.disconnect(f),
              f.disconnect(v.inputs === void 0 ? v : v.inputs[0]),
              f.disconnect(k.inputs === void 0 ? k : k.inputs[0]),
              v.disconnect(j.gain),
              k.disconnect(C.gain),
              j.disconnect(g, 0, 0),
              C.disconnect(g, 0, 1);
          },
        };
      },
      o = (n, c, f, g) => {
        const _ = new Float32Array(16385),
          x = new Float32Array(16385),
          j = new Float32Array(16385),
          v = new Float32Array(16385),
          M = Math.floor(16385 / 2);
        for (let z = 0; z < 16385; z += 1)
          if (z > M) {
            const X = ((z - M) / (16384 - M)) * r;
            (_[z] = Math.cos(X)), (x[z] = Math.sin(X)), (j[z] = 0), (v[z] = 1);
          } else {
            const X = (z / (16384 - M)) * r;
            (_[z] = 1), (x[z] = 0), (j[z] = Math.cos(X)), (v[z] = Math.sin(X));
          }
        const C = i(n, {
            channelCount: 2,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: 2,
          }),
          k = m(n, { ...l, gain: 0 }),
          A = t(n, { ...d, curve: _ }),
          R = m(n, { ...l, gain: 0 }),
          O = t(n, { ...d, curve: x }),
          D = t(n, { ...d, curve: a }),
          N = m(n, { ...l, gain: 0 }),
          U = t(n, { ...d, curve: j }),
          H = m(n, { ...l, gain: 0 }),
          q = t(n, { ...d, curve: v });
        return {
          connectGraph() {
            c.connect(C),
              c.connect(D.inputs === void 0 ? D : D.inputs[0]),
              C.connect(k, 0),
              C.connect(R, 0),
              C.connect(N, 1),
              C.connect(H, 1),
              D.connect(f),
              f.connect(A.inputs === void 0 ? A : A.inputs[0]),
              f.connect(O.inputs === void 0 ? O : O.inputs[0]),
              f.connect(U.inputs === void 0 ? U : U.inputs[0]),
              f.connect(q.inputs === void 0 ? q : q.inputs[0]),
              A.connect(k.gain),
              O.connect(R.gain),
              U.connect(N.gain),
              q.connect(H.gain),
              k.connect(g, 0, 0),
              N.connect(g, 0, 0),
              R.connect(g, 0, 1),
              H.connect(g, 0, 1);
          },
          disconnectGraph() {
            c.disconnect(C),
              c.disconnect(D.inputs === void 0 ? D : D.inputs[0]),
              C.disconnect(k, 0),
              C.disconnect(R, 0),
              C.disconnect(N, 1),
              C.disconnect(H, 1),
              D.disconnect(f),
              f.disconnect(A.inputs === void 0 ? A : A.inputs[0]),
              f.disconnect(O.inputs === void 0 ? O : O.inputs[0]),
              f.disconnect(U.inputs === void 0 ? U : U.inputs[0]),
              f.disconnect(q.inputs === void 0 ? q : q.inputs[0]),
              A.disconnect(k.gain),
              O.disconnect(R.gain),
              U.disconnect(N.gain),
              q.disconnect(H.gain),
              k.disconnect(g, 0, 0),
              N.disconnect(g, 0, 0),
              R.disconnect(g, 0, 1),
              H.disconnect(g, 0, 1);
          },
        };
      },
      s = (n, c, f, g, _) => {
        if (c === 1) return h(n, f, g, _);
        if (c === 2) return o(n, f, g, _);
        throw b();
      };
    return (n, { channelCount: c, channelCountMode: f, pan: g, ..._ }) => {
      if (f === 'max') throw b();
      const x = T(n, {
          ..._,
          channelCount: 1,
          channelCountMode: f,
          numberOfInputs: 2,
        }),
        j = m(n, { ..._, channelCount: c, channelCountMode: f, gain: 1 }),
        v = m(n, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          gain: g,
        });
      let { connectGraph: M, disconnectGraph: C } = s(n, c, j, v, x);
      Object.defineProperty(v.gain, 'defaultValue', { get: () => 0 }),
        Object.defineProperty(v.gain, 'maxValue', { get: () => 1 }),
        Object.defineProperty(v.gain, 'minValue', { get: () => -1 });
      const k = {
        get bufferSize() {},
        get channelCount() {
          return j.channelCount;
        },
        set channelCount(D) {
          j.channelCount !== D &&
            (A && C(),
            ({ connectGraph: M, disconnectGraph: C } = s(n, D, j, v, x)),
            A && M()),
            (j.channelCount = D);
        },
        get channelCountMode() {
          return j.channelCountMode;
        },
        set channelCountMode(D) {
          if (D === 'clamped-max' || D === 'max') throw b();
          j.channelCountMode = D;
        },
        get channelInterpretation() {
          return j.channelInterpretation;
        },
        set channelInterpretation(D) {
          j.channelInterpretation = D;
        },
        get context() {
          return j.context;
        },
        get inputs() {
          return [j];
        },
        get numberOfInputs() {
          return j.numberOfInputs;
        },
        get numberOfOutputs() {
          return j.numberOfOutputs;
        },
        get pan() {
          return v.gain;
        },
        addEventListener(...D) {
          return j.addEventListener(D[0], D[1], D[2]);
        },
        dispatchEvent(...D) {
          return j.dispatchEvent(D[0]);
        },
        removeEventListener(...D) {
          return j.removeEventListener(D[0], D[1], D[2]);
        },
      };
      let A = !1;
      const R = () => {
          M(), (A = !0);
        },
        O = () => {
          C(), (A = !1);
        };
      return y(Fn(k, x), R, O);
    };
  },
  nh = (T, i, m, t, b, y, u) => (a, r) => {
    const l = a.createWaveShaper();
    if (
      y !== null &&
      y.name === 'webkitAudioContext' &&
      a.createGain().gain.automationRate === void 0
    )
      return m(a, r);
    Yt(l, r);
    const d =
      r.curve === null || r.curve instanceof Float32Array
        ? r.curve
        : new Float32Array(r.curve);
    if (d !== null && d.length < 2) throw i();
    Rt(l, { curve: d }, 'curve'), Rt(l, r, 'oversample');
    let h = null,
      o = !1;
    return (
      u(
        l,
        'curve',
        (c) => () => c.call(l),
        (c) => (f) => (
          c.call(l, f),
          o &&
            (t(f) && h === null
              ? (h = T(a, l))
              : !t(f) && h !== null && (h(), (h = null))),
          f
        ),
      ),
      b(
        l,
        () => {
          (o = !0), t(l.curve) && (h = T(a, l));
        },
        () => {
          (o = !1), h !== null && (h(), (h = null));
        },
      )
    );
  },
  sh =
    (T, i, m, t, b) =>
    (y, { curve: u, oversample: a, ...r }) => {
      const l = y.createWaveShaper(),
        d = y.createWaveShaper();
      Yt(l, r), Yt(d, r);
      const h = m(y, { ...r, gain: 1 }),
        o = m(y, { ...r, gain: -1 }),
        s = m(y, { ...r, gain: 1 }),
        n = m(y, { ...r, gain: -1 });
      let c = null,
        f = !1,
        g = null;
      const _ = {
        get bufferSize() {},
        get channelCount() {
          return l.channelCount;
        },
        set channelCount(v) {
          (h.channelCount = v),
            (o.channelCount = v),
            (l.channelCount = v),
            (s.channelCount = v),
            (d.channelCount = v),
            (n.channelCount = v);
        },
        get channelCountMode() {
          return l.channelCountMode;
        },
        set channelCountMode(v) {
          (h.channelCountMode = v),
            (o.channelCountMode = v),
            (l.channelCountMode = v),
            (s.channelCountMode = v),
            (d.channelCountMode = v),
            (n.channelCountMode = v);
        },
        get channelInterpretation() {
          return l.channelInterpretation;
        },
        set channelInterpretation(v) {
          (h.channelInterpretation = v),
            (o.channelInterpretation = v),
            (l.channelInterpretation = v),
            (s.channelInterpretation = v),
            (d.channelInterpretation = v),
            (n.channelInterpretation = v);
        },
        get context() {
          return l.context;
        },
        get curve() {
          return g;
        },
        set curve(v) {
          if (v !== null && v.length < 2) throw i();
          if (v === null) (l.curve = v), (d.curve = v);
          else {
            const M = v.length,
              C = new Float32Array(M + 2 - (M % 2)),
              k = new Float32Array(M + 2 - (M % 2));
            (C[0] = v[0]), (k[0] = -v[M - 1]);
            const A = Math.ceil((M + 1) / 2),
              R = (M + 1) / 2 - 1;
            for (let O = 1; O < A; O += 1) {
              const D = (O / A) * R,
                N = Math.floor(D),
                U = Math.ceil(D);
              (C[O] =
                N === U ? v[N] : (1 - (D - N)) * v[N] + (1 - (U - D)) * v[U]),
                (k[O] =
                  N === U
                    ? -v[M - 1 - N]
                    : -((1 - (D - N)) * v[M - 1 - N]) -
                      (1 - (U - D)) * v[M - 1 - U]);
            }
            (C[A] = M % 2 === 1 ? v[A - 1] : (v[A - 2] + v[A - 1]) / 2),
              (l.curve = C),
              (d.curve = k);
          }
          (g = v),
            f &&
              (t(g) && c === null
                ? (c = T(y, h))
                : c !== null && (c(), (c = null)));
        },
        get inputs() {
          return [h];
        },
        get numberOfInputs() {
          return l.numberOfInputs;
        },
        get numberOfOutputs() {
          return l.numberOfOutputs;
        },
        get oversample() {
          return l.oversample;
        },
        set oversample(v) {
          (l.oversample = v), (d.oversample = v);
        },
        addEventListener(...v) {
          return h.addEventListener(v[0], v[1], v[2]);
        },
        dispatchEvent(...v) {
          return h.dispatchEvent(v[0]);
        },
        removeEventListener(...v) {
          return h.removeEventListener(v[0], v[1], v[2]);
        },
      };
      u !== null &&
        (_.curve = u instanceof Float32Array ? u : new Float32Array(u)),
        a !== _.oversample && (_.oversample = a);
      const x = () => {
          h.connect(l).connect(s),
            h.connect(o).connect(d).connect(n).connect(s),
            (f = !0),
            t(g) && (c = T(y, h));
        },
        j = () => {
          h.disconnect(l),
            l.disconnect(s),
            h.disconnect(o),
            o.disconnect(d),
            d.disconnect(n),
            n.disconnect(s),
            (f = !1),
            c !== null && (c(), (c = null));
        };
      return b(Fn(_, s), x, j);
    },
  fr = () => new DOMException('', 'NotSupportedError'),
  oh = { numberOfChannels: 1 },
  ih = (T, i, m, t, b) =>
    class extends T {
      constructor(u, a, r) {
        let l;
        if (typeof u == 'number' && a !== void 0 && r !== void 0)
          l = { length: a, numberOfChannels: u, sampleRate: r };
        else if (typeof u == 'object') l = u;
        else throw new Error('The given parameters are not valid.');
        const {
            length: d,
            numberOfChannels: h,
            sampleRate: o,
          } = { ...oh, ...l },
          s = t(h, d, o);
        i(ts, () => ts(s)) ||
          s.addEventListener(
            'statechange',
            (() => {
              let n = 0;
              const c = (f) => {
                this._state === 'running' &&
                  (n > 0
                    ? (s.removeEventListener('statechange', c),
                      f.stopImmediatePropagation(),
                      this._waitForThePromiseToSettle(f))
                    : (n += 1));
              };
              return c;
            })(),
          ),
          super(s, h),
          (this._length = d),
          (this._nativeOfflineAudioContext = s),
          (this._state = null);
      }
      get length() {
        return this._nativeOfflineAudioContext.length === void 0
          ? this._length
          : this._nativeOfflineAudioContext.length;
      }
      get state() {
        return this._state === null
          ? this._nativeOfflineAudioContext.state
          : this._state;
      }
      startRendering() {
        return this._state === 'running'
          ? Promise.reject(m())
          : ((this._state = 'running'),
            b(this.destination, this._nativeOfflineAudioContext).finally(() => {
              (this._state = null), Aa(this);
            }));
      }
      _waitForThePromiseToSettle(u) {
        this._state === null
          ? this._nativeOfflineAudioContext.dispatchEvent(u)
          : setTimeout(() => this._waitForThePromiseToSettle(u));
      }
    },
  ah = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    detune: 0,
    frequency: 440,
    periodicWave: void 0,
    type: 'sine',
  },
  lh = (T, i, m, t, b, y, u) =>
    class extends T {
      constructor(r, l) {
        const d = b(r),
          h = { ...ah, ...l },
          o = m(d, h),
          s = y(d),
          n = s ? t() : null,
          c = r.sampleRate / 2;
        super(r, !1, o, n),
          (this._detune = i(this, s, o.detune, 153600, -153600)),
          (this._frequency = i(this, s, o.frequency, c, -c)),
          (this._nativeOscillatorNode = o),
          (this._onended = null),
          (this._oscillatorNodeRenderer = n),
          this._oscillatorNodeRenderer !== null &&
            h.periodicWave !== void 0 &&
            (this._oscillatorNodeRenderer.periodicWave = h.periodicWave);
      }
      get detune() {
        return this._detune;
      }
      get frequency() {
        return this._frequency;
      }
      get onended() {
        return this._onended;
      }
      set onended(r) {
        const l = typeof r == 'function' ? u(this, r) : null;
        this._nativeOscillatorNode.onended = l;
        const d = this._nativeOscillatorNode.onended;
        this._onended = d !== null && d === l ? r : d;
      }
      get type() {
        return this._nativeOscillatorNode.type;
      }
      set type(r) {
        (this._nativeOscillatorNode.type = r),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.periodicWave = null);
      }
      setPeriodicWave(r) {
        this._nativeOscillatorNode.setPeriodicWave(r),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.periodicWave = r);
      }
      start(r = 0) {
        if (
          (this._nativeOscillatorNode.start(r),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.start = r),
          this.context.state !== 'closed')
        ) {
          Pn(this);
          const l = () => {
            this._nativeOscillatorNode.removeEventListener('ended', l),
              Hr(this) && ys(this);
          };
          this._nativeOscillatorNode.addEventListener('ended', l);
        }
      }
      stop(r = 0) {
        this._nativeOscillatorNode.stop(r),
          this._oscillatorNodeRenderer !== null &&
            (this._oscillatorNodeRenderer.stop = r);
      }
    },
  uh = (T, i, m, t, b) => () => {
    const y = new WeakMap();
    let u = null,
      a = null,
      r = null;
    const l = async (d, h) => {
      let o = m(d);
      const s = ur(o, h);
      if (!s) {
        const n = {
          channelCount: o.channelCount,
          channelCountMode: o.channelCountMode,
          channelInterpretation: o.channelInterpretation,
          detune: o.detune.value,
          frequency: o.frequency.value,
          periodicWave: u === null ? void 0 : u,
          type: o.type,
        };
        (o = i(h, n)), a !== null && o.start(a), r !== null && o.stop(r);
      }
      return (
        y.set(h, o),
        s
          ? (await T(h, d.detune, o.detune),
            await T(h, d.frequency, o.frequency))
          : (await t(h, d.detune, o.detune),
            await t(h, d.frequency, o.frequency)),
        await b(d, h, o),
        o
      );
    };
    return {
      set periodicWave(d) {
        u = d;
      },
      set start(d) {
        a = d;
      },
      set stop(d) {
        r = d;
      },
      render(d, h) {
        const o = y.get(h);
        return o !== void 0 ? Promise.resolve(o) : l(d, h);
      },
    };
  },
  ch = {
    channelCount: 2,
    channelCountMode: 'clamped-max',
    channelInterpretation: 'speakers',
    coneInnerAngle: 360,
    coneOuterAngle: 360,
    coneOuterGain: 0,
    distanceModel: 'inverse',
    maxDistance: 1e4,
    orientationX: 1,
    orientationY: 0,
    orientationZ: 0,
    panningModel: 'equalpower',
    positionX: 0,
    positionY: 0,
    positionZ: 0,
    refDistance: 1,
    rolloffFactor: 1,
  },
  dh = (T, i, m, t, b, y, u) =>
    class extends T {
      constructor(r, l) {
        const d = b(r),
          h = { ...ch, ...l },
          o = m(d, h),
          s = y(d),
          n = s ? t() : null;
        super(r, !1, o, n),
          (this._nativePannerNode = o),
          (this._orientationX = i(this, s, o.orientationX, cr, pr)),
          (this._orientationY = i(this, s, o.orientationY, cr, pr)),
          (this._orientationZ = i(this, s, o.orientationZ, cr, pr)),
          (this._positionX = i(this, s, o.positionX, cr, pr)),
          (this._positionY = i(this, s, o.positionY, cr, pr)),
          (this._positionZ = i(this, s, o.positionZ, cr, pr)),
          u(this, 1);
      }
      get coneInnerAngle() {
        return this._nativePannerNode.coneInnerAngle;
      }
      set coneInnerAngle(r) {
        this._nativePannerNode.coneInnerAngle = r;
      }
      get coneOuterAngle() {
        return this._nativePannerNode.coneOuterAngle;
      }
      set coneOuterAngle(r) {
        this._nativePannerNode.coneOuterAngle = r;
      }
      get coneOuterGain() {
        return this._nativePannerNode.coneOuterGain;
      }
      set coneOuterGain(r) {
        this._nativePannerNode.coneOuterGain = r;
      }
      get distanceModel() {
        return this._nativePannerNode.distanceModel;
      }
      set distanceModel(r) {
        this._nativePannerNode.distanceModel = r;
      }
      get maxDistance() {
        return this._nativePannerNode.maxDistance;
      }
      set maxDistance(r) {
        this._nativePannerNode.maxDistance = r;
      }
      get orientationX() {
        return this._orientationX;
      }
      get orientationY() {
        return this._orientationY;
      }
      get orientationZ() {
        return this._orientationZ;
      }
      get panningModel() {
        return this._nativePannerNode.panningModel;
      }
      set panningModel(r) {
        this._nativePannerNode.panningModel = r;
      }
      get positionX() {
        return this._positionX;
      }
      get positionY() {
        return this._positionY;
      }
      get positionZ() {
        return this._positionZ;
      }
      get refDistance() {
        return this._nativePannerNode.refDistance;
      }
      set refDistance(r) {
        this._nativePannerNode.refDistance = r;
      }
      get rolloffFactor() {
        return this._nativePannerNode.rolloffFactor;
      }
      set rolloffFactor(r) {
        this._nativePannerNode.rolloffFactor = r;
      }
    },
  hh = (T, i, m, t, b, y, u, a, r, l) => () => {
    const d = new WeakMap();
    let h = null;
    const o = async (s, n) => {
      let c = null,
        f = y(s);
      const g = {
          channelCount: f.channelCount,
          channelCountMode: f.channelCountMode,
          channelInterpretation: f.channelInterpretation,
        },
        _ = {
          ...g,
          coneInnerAngle: f.coneInnerAngle,
          coneOuterAngle: f.coneOuterAngle,
          coneOuterGain: f.coneOuterGain,
          distanceModel: f.distanceModel,
          maxDistance: f.maxDistance,
          panningModel: f.panningModel,
          refDistance: f.refDistance,
          rolloffFactor: f.rolloffFactor,
        },
        x = ur(f, n);
      if ('bufferSize' in f) c = t(n, { ...g, gain: 1 });
      else if (!x) {
        const j = {
          ..._,
          orientationX: f.orientationX.value,
          orientationY: f.orientationY.value,
          orientationZ: f.orientationZ.value,
          positionX: f.positionX.value,
          positionY: f.positionY.value,
          positionZ: f.positionZ.value,
        };
        f = b(n, j);
      }
      if ((d.set(n, c === null ? f : c), c !== null)) {
        if (h === null) {
          if (u === null)
            throw new Error(
              'Missing the native OfflineAudioContext constructor.',
            );
          const O = new u(6, s.context.length, n.sampleRate),
            D = i(O, {
              channelCount: 1,
              channelCountMode: 'explicit',
              channelInterpretation: 'speakers',
              numberOfInputs: 6,
            });
          D.connect(O.destination),
            (h = (async () => {
              const N = await Promise.all(
                [
                  s.orientationX,
                  s.orientationY,
                  s.orientationZ,
                  s.positionX,
                  s.positionY,
                  s.positionZ,
                ].map(async (U, H) => {
                  const q = m(O, {
                    channelCount: 1,
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    offset: H === 0 ? 1 : 0,
                  });
                  return await a(O, U, q.offset), q;
                }),
              );
              for (let U = 0; U < 6; U += 1)
                N[U].connect(D, 0, U), N[U].start(0);
              return l(O);
            })());
        }
        const j = await h,
          v = t(n, { ...g, gain: 1 });
        await r(s, n, v);
        const M = [];
        for (let O = 0; O < j.numberOfChannels; O += 1)
          M.push(j.getChannelData(O));
        let C = [M[0][0], M[1][0], M[2][0]],
          k = [M[3][0], M[4][0], M[5][0]],
          A = t(n, { ...g, gain: 1 }),
          R = b(n, {
            ..._,
            orientationX: C[0],
            orientationY: C[1],
            orientationZ: C[2],
            positionX: k[0],
            positionY: k[1],
            positionZ: k[2],
          });
        v.connect(A).connect(R.inputs[0]), R.connect(c);
        for (let O = 128; O < j.length; O += 128) {
          const D = [M[0][O], M[1][O], M[2][O]],
            N = [M[3][O], M[4][O], M[5][O]];
          if (D.some((U, H) => U !== C[H]) || N.some((U, H) => U !== k[H])) {
            (C = D), (k = N);
            const U = O / n.sampleRate;
            A.gain.setValueAtTime(0, U),
              (A = t(n, { ...g, gain: 0 })),
              (R = b(n, {
                ..._,
                orientationX: C[0],
                orientationY: C[1],
                orientationZ: C[2],
                positionX: k[0],
                positionY: k[1],
                positionZ: k[2],
              })),
              A.gain.setValueAtTime(1, U),
              v.connect(A).connect(R.inputs[0]),
              R.connect(c);
          }
        }
        return c;
      }
      return (
        x
          ? (await T(n, s.orientationX, f.orientationX),
            await T(n, s.orientationY, f.orientationY),
            await T(n, s.orientationZ, f.orientationZ),
            await T(n, s.positionX, f.positionX),
            await T(n, s.positionY, f.positionY),
            await T(n, s.positionZ, f.positionZ))
          : (await a(n, s.orientationX, f.orientationX),
            await a(n, s.orientationY, f.orientationY),
            await a(n, s.orientationZ, f.orientationZ),
            await a(n, s.positionX, f.positionX),
            await a(n, s.positionY, f.positionY),
            await a(n, s.positionZ, f.positionZ)),
        Nn(f) ? await r(s, n, f.inputs[0]) : await r(s, n, f),
        f
      );
    };
    return {
      render(s, n) {
        const c = d.get(n);
        return c !== void 0 ? Promise.resolve(c) : o(s, n);
      },
    };
  },
  fh = { disableNormalization: !1 },
  ph = (T, i, m, t) =>
    class Va {
      constructor(y, u) {
        const a = i(y),
          r = t({ ...fh, ...u }),
          l = T(a, r);
        return m.add(l), l;
      }
      static [Symbol.hasInstance](y) {
        return (
          (y !== null &&
            typeof y == 'object' &&
            Object.getPrototypeOf(y) === Va.prototype) ||
          m.has(y)
        );
      }
    },
  mh = (T, i) => (m, t, b) => (T(t).replay(b), i(t, m, b)),
  yh = (T, i, m) => async (t, b, y) => {
    const u = T(t);
    await Promise.all(
      u.activeInputs
        .map((a, r) =>
          Array.from(a).map(async ([l, d]) => {
            const o = await i(l).render(l, b),
              s = t.context.destination;
            !m(l) && (t !== s || !m(t)) && o.connect(y, d, r);
          }),
        )
        .reduce((a, r) => [...a, ...r], []),
    );
  },
  gh = (T, i, m) => async (t, b, y) => {
    const u = i(t);
    await Promise.all(
      Array.from(u.activeInputs).map(async ([a, r]) => {
        const d = await T(a).render(a, b);
        m(a) || d.connect(y, r);
      }),
    );
  },
  vh = (T, i, m, t) => (b) =>
    T(ts, () => ts(b))
      ? Promise.resolve(T(t, t)).then((y) => {
          if (!y) {
            const u = m(b, 512, 0, 1);
            (b.oncomplete = () => {
              (u.onaudioprocess = null), u.disconnect();
            }),
              (u.onaudioprocess = () => b.currentTime),
              u.connect(b.destination);
          }
          return b.startRendering();
        })
      : new Promise((y) => {
          const u = i(b, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0,
          });
          (b.oncomplete = (a) => {
            u.disconnect(), y(a.renderedBuffer);
          }),
            u.connect(b.destination),
            b.startRendering();
        }),
  bh = (T) => (i, m) => {
    T.set(i, m);
  },
  _h = (T) => (i, m) => T.set(i, m),
  wh = (T, i, m, t, b, y, u, a) => (r, l) =>
    m(r)
      .render(r, l)
      .then(() => Promise.all(Array.from(t(l)).map((d) => m(d).render(d, l))))
      .then(() => b(l))
      .then(
        (d) => (
          typeof d.copyFromChannel != 'function'
            ? (u(d), zo(d))
            : i(y, () => y(d)) || a(d),
          T.add(d),
          d
        ),
      ),
  xh = {
    channelCount: 2,
    channelCountMode: 'explicit',
    channelInterpretation: 'speakers',
    pan: 0,
  },
  jh = (T, i, m, t, b, y) =>
    class extends T {
      constructor(a, r) {
        const l = b(a),
          d = { ...xh, ...r },
          h = m(l, d),
          o = y(l),
          s = o ? t() : null;
        super(a, !1, h, s), (this._pan = i(this, o, h.pan));
      }
      get pan() {
        return this._pan;
      }
    },
  Sh = (T, i, m, t, b) => () => {
    const y = new WeakMap(),
      u = async (a, r) => {
        let l = m(a);
        const d = ur(l, r);
        if (!d) {
          const h = {
            channelCount: l.channelCount,
            channelCountMode: l.channelCountMode,
            channelInterpretation: l.channelInterpretation,
            pan: l.pan.value,
          };
          l = i(r, h);
        }
        return (
          y.set(r, l),
          d ? await T(r, a.pan, l.pan) : await t(r, a.pan, l.pan),
          Nn(l) ? await b(a, r, l.inputs[0]) : await b(a, r, l),
          l
        );
      };
    return {
      render(a, r) {
        const l = y.get(r);
        return l !== void 0 ? Promise.resolve(l) : u(a, r);
      },
    };
  },
  Th = (T) => () => {
    if (T === null) return !1;
    try {
      new T({ length: 1, sampleRate: 44100 });
    } catch {
      return !1;
    }
    return !0;
  },
  Mh = (T, i) => async () => {
    if (T === null) return !0;
    if (i === null) return !1;
    const m = new Blob(
        [
          'class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)',
        ],
        { type: 'application/javascript; charset=utf-8' },
      ),
      t = new i(1, 128, 44100),
      b = URL.createObjectURL(m);
    let y = !1,
      u = !1;
    try {
      await t.audioWorklet.addModule(b);
      const a = new T(t, 'a', { numberOfOutputs: 0 }),
        r = t.createOscillator();
      (a.port.onmessage = () => (y = !0)),
        (a.onprocessorerror = () => (u = !0)),
        r.connect(a),
        r.start(0),
        await t.startRendering();
    } catch {
    } finally {
      URL.revokeObjectURL(b);
    }
    return y && !u;
  },
  Ch = (T, i) => () => {
    if (i === null) return Promise.resolve(!1);
    const m = new i(1, 1, 44100),
      t = T(m, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        gain: 0,
      });
    return new Promise((b) => {
      (m.oncomplete = () => {
        t.disconnect(), b(m.currentTime !== 0);
      }),
        m.startRendering();
    });
  },
  Eh = () => new DOMException('', 'UnknownError'),
  kh = {
    channelCount: 2,
    channelCountMode: 'max',
    channelInterpretation: 'speakers',
    curve: null,
    oversample: 'none',
  },
  Oh = (T, i, m, t, b, y, u) =>
    class extends T {
      constructor(r, l) {
        const d = b(r),
          h = { ...kh, ...l },
          o = m(d, h),
          n = y(d) ? t() : null;
        super(r, !0, o, n),
          (this._isCurveNullified = !1),
          (this._nativeWaveShaperNode = o),
          u(this, 1);
      }
      get curve() {
        return this._isCurveNullified ? null : this._nativeWaveShaperNode.curve;
      }
      set curve(r) {
        if (r === null)
          (this._isCurveNullified = !0),
            (this._nativeWaveShaperNode.curve = new Float32Array([0, 0]));
        else {
          if (r.length < 2) throw i();
          (this._isCurveNullified = !1), (this._nativeWaveShaperNode.curve = r);
        }
      }
      get oversample() {
        return this._nativeWaveShaperNode.oversample;
      }
      set oversample(r) {
        this._nativeWaveShaperNode.oversample = r;
      }
    },
  Ah = (T, i, m) => () => {
    const t = new WeakMap(),
      b = async (y, u) => {
        let a = i(y);
        if (!ur(a, u)) {
          const l = {
            channelCount: a.channelCount,
            channelCountMode: a.channelCountMode,
            channelInterpretation: a.channelInterpretation,
            curve: a.curve,
            oversample: a.oversample,
          };
          a = T(u, l);
        }
        return (
          t.set(u, a), Nn(a) ? await m(y, u, a.inputs[0]) : await m(y, u, a), a
        );
      };
    return {
      render(y, u) {
        const a = t.get(u);
        return a !== void 0 ? Promise.resolve(a) : b(y, u);
      },
    };
  },
  Rh = () => (typeof window > 'u' ? null : window),
  Ph = (T, i) => (m) => {
    (m.copyFromChannel = (t, b, y = 0) => {
      const u = T(y),
        a = T(b);
      if (a >= m.numberOfChannels) throw i();
      const r = m.length,
        l = m.getChannelData(a),
        d = t.length;
      for (let h = u < 0 ? -u : 0; h + u < r && h < d; h += 1) t[h] = l[h + u];
    }),
      (m.copyToChannel = (t, b, y = 0) => {
        const u = T(y),
          a = T(b);
        if (a >= m.numberOfChannels) throw i();
        const r = m.length,
          l = m.getChannelData(a),
          d = t.length;
        for (let h = u < 0 ? -u : 0; h + u < r && h < d; h += 1)
          l[h + u] = t[h];
      });
  },
  Ih = (T) => (i) => {
    (i.copyFromChannel = (
      (m) =>
      (t, b, y = 0) => {
        const u = T(y),
          a = T(b);
        if (u < i.length) return m.call(i, t, a, u);
      }
    )(i.copyFromChannel)),
      (i.copyToChannel = (
        (m) =>
        (t, b, y = 0) => {
          const u = T(y),
            a = T(b);
          if (u < i.length) return m.call(i, t, a, u);
        }
      )(i.copyToChannel));
  },
  Dh = (T) => (i, m) => {
    const t = m.createBuffer(1, 1, 44100);
    i.buffer === null && (i.buffer = t),
      T(
        i,
        'buffer',
        (b) => () => {
          const y = b.call(i);
          return y === t ? null : y;
        },
        (b) => (y) => b.call(i, y === null ? t : y),
      );
  },
  Lh = (T, i) => (m, t) => {
    (t.channelCount = 1),
      (t.channelCountMode = 'explicit'),
      Object.defineProperty(t, 'channelCount', {
        get: () => 1,
        set: () => {
          throw T();
        },
      }),
      Object.defineProperty(t, 'channelCountMode', {
        get: () => 'explicit',
        set: () => {
          throw T();
        },
      });
    const b = m.createBufferSource();
    i(
      t,
      () => {
        const a = t.numberOfInputs;
        for (let r = 0; r < a; r += 1) b.connect(t, 0, r);
      },
      () => b.disconnect(t),
    );
  },
  Ga = (T, i, m) =>
    T.copyFromChannel === void 0
      ? T.getChannelData(m)[0]
      : (T.copyFromChannel(i, m), i[0]),
  Wa = (T) => {
    if (T === null) return !1;
    const i = T.length;
    return i % 2 !== 0
      ? T[Math.floor(i / 2)] !== 0
      : T[i / 2 - 1] + T[i / 2] !== 0;
  },
  ws = (T, i, m, t) => {
    let b = T;
    for (; !b.hasOwnProperty(i); ) b = Object.getPrototypeOf(b);
    const { get: y, set: u } = Object.getOwnPropertyDescriptor(b, i);
    Object.defineProperty(T, i, { get: m(y), set: t(u) });
  },
  Nh = (T) => ({
    ...T,
    outputChannelCount:
      T.outputChannelCount !== void 0
        ? T.outputChannelCount
        : T.numberOfInputs === 1 && T.numberOfOutputs === 1
        ? [T.channelCount]
        : Array.from({ length: T.numberOfOutputs }, () => 1),
  }),
  Fh = (T) => ({ ...T, channelCount: T.numberOfOutputs }),
  Uh = (T) => {
    const { imag: i, real: m } = T;
    return i === void 0
      ? m === void 0
        ? { ...T, imag: [0, 0], real: [0, 0] }
        : { ...T, imag: Array.from(m, () => 0), real: m }
      : m === void 0
      ? { ...T, imag: i, real: Array.from(i, () => 0) }
      : { ...T, imag: i, real: m };
  },
  qa = (T, i, m) => {
    try {
      T.setValueAtTime(i, m);
    } catch (t) {
      if (t.code !== 9) throw t;
      qa(T, i, m + 1e-7);
    }
  },
  Bh = (T) => {
    const i = T.createBufferSource();
    i.start();
    try {
      i.start();
    } catch {
      return !0;
    }
    return !1;
  },
  Vh = (T) => {
    const i = T.createBufferSource(),
      m = T.createBuffer(1, 1, 44100);
    i.buffer = m;
    try {
      i.start(0, 1);
    } catch {
      return !1;
    }
    return !0;
  },
  Gh = (T) => {
    const i = T.createBufferSource();
    i.start();
    try {
      i.stop();
    } catch {
      return !1;
    }
    return !0;
  },
  $o = (T) => {
    const i = T.createOscillator();
    try {
      i.start(-1);
    } catch (m) {
      return m instanceof RangeError;
    }
    return !1;
  },
  za = (T) => {
    const i = T.createBuffer(1, 1, 44100),
      m = T.createBufferSource();
    (m.buffer = i), m.start(), m.stop();
    try {
      return m.stop(), !0;
    } catch {
      return !1;
    }
  },
  Qo = (T) => {
    const i = T.createOscillator();
    try {
      i.stop(-1);
    } catch (m) {
      return m instanceof RangeError;
    }
    return !1;
  },
  Wh = (T) => {
    const { port1: i, port2: m } = new MessageChannel();
    try {
      i.postMessage(T);
    } finally {
      i.close(), m.close();
    }
  },
  qh = (T) => {
    T.start = (
      (i) =>
      (m = 0, t = 0, b) => {
        const y = T.buffer,
          u = y === null ? t : Math.min(y.duration, t);
        y !== null && u > y.duration - 0.5 / T.context.sampleRate
          ? i.call(T, m, 0, 0)
          : i.call(T, m, u, b);
      }
    )(T.start);
  },
  Ha = (T, i) => {
    const m = i.createGain();
    T.connect(m);
    const t = ((b) => () => {
      b.call(T, m), T.removeEventListener('ended', t);
    })(T.disconnect);
    T.addEventListener('ended', t),
      Fn(T, m),
      (T.stop = ((b) => {
        let y = !1;
        return (u = 0) => {
          if (y)
            try {
              b.call(T, u);
            } catch {
              m.gain.setValueAtTime(0, u);
            }
          else b.call(T, u), (y = !0);
        };
      })(T.stop));
  },
  Un = (T, i) => (m) => {
    const t = { value: T };
    return (
      Object.defineProperties(m, { currentTarget: t, target: t }),
      typeof i == 'function' ? i.call(T, m) : i.handleEvent.call(T, m)
    );
  },
  zh = du(_n),
  Hh = gu(_n),
  Xh = kc(co),
  Xa = new WeakMap(),
  Yh = Xc(Xa),
  kr = oc(new Map(), new WeakMap()),
  Lr = Rh(),
  Ya = jd(kr, Fr),
  Jo = Hc(dr),
  sr = yh(dr, Jo, fn),
  Zh = xu(Ya, Ot, sr),
  Mt = $c(uo),
  Yr = $d(Lr),
  bt = fd(Yr),
  Za = new WeakMap(),
  $a = Uc(Un),
  xs = Cd(Lr),
  Ko = ud(xs),
  ei = cd(Lr),
  Qa = dd(Lr),
  rs = kd(Lr),
  Vt = Xu(
    hu(Sa),
    yu(zh, Hh, qs, Xh, zs, dr, Yh, ms, Ot, _n, Hr, fn, Ns),
    kr,
    sd(Po, zs, dr, Ot, es, Hr),
    Fr,
    ho,
    fr,
    Tc(qs, Po, dr, Ot, es, Mt, Hr, bt),
    Rc(Za, dr, Er),
    $a,
    Mt,
    Ko,
    ei,
    Qa,
    bt,
    rs,
  ),
  $h = wu(Vt, Zh, Fr, Ya, Mt, bt),
  ti = new WeakSet(),
  ma = Sd(Lr),
  Ja = vc(new Uint32Array(1)),
  ri = Ph(Ja, Fr),
  ni = Ih(Ja),
  Qh = Su(ti, kr, fr, ma, Yr, Th(ma), ri, ni),
  fo = vu(yr),
  Ka = gh(Jo, gs, fn),
  Ur = hc(Ka),
  Bn = Md(fo, kr, Bh, Vh, Gh, $o, za, Qo, qh, Dh(ws), Ha),
  Br = mh(Yc(gs), Ka),
  Jh = Cu(Ur, Bn, Ot, Br, sr),
  Or = Yu(fu(Ta), Za, qo, Zu, ou, iu, au, lu, uu, Oo, xa, xs, qa),
  Kh = Mu(Vt, Jh, Or, er, Bn, Mt, bt, Un),
  ef = Lu(Vt, Nu, Fr, er, Ed(yr, ws), Mt, bt, sr),
  tf = sc(Ur, Ua, Ot, Br, sr),
  wn = _h(Xa),
  rf = nc(Vt, Or, tf, ho, Ua, Mt, bt, wn),
  on = wd(_n, ei),
  nf = Lh(er, on),
  an = Ld(xs, nf),
  sf = lc(an, Ot, sr),
  of = ac(Vt, sf, an, Mt, bt),
  af = dc(bs, Ot, sr),
  lf = cc(Vt, af, bs, Mt, bt, Fh),
  uf = Ud(fo, Bn, yr, on),
  Vn = Fd(fo, kr, uf, $o, Qo),
  cf = gc(Ur, Vn, Ot, Br, sr),
  df = yc(Vt, Or, cf, Vn, Mt, bt, Un),
  el = Bd(fr, ws),
  hf = wc(el, Ot, sr),
  ff = _c(Vt, hf, el, Mt, bt, wn),
  pf = Ec(Ur, Ba, Ot, Br, sr),
  mf = Cc(Vt, Or, pf, Ba, Mt, bt, wn),
  tl = Vd(fr),
  yf = Lc(Ur, tl, Ot, Br, sr),
  gf = Dc(Vt, Or, yf, tl, fr, Mt, bt, wn),
  vf = qc(Ur, yr, Ot, Br, sr),
  bf = Wc(Vt, Or, vf, yr, Mt, bt),
  _f = zd(ho, er, _s, fr),
  po = vh(kr, yr, _s, Ch(yr, Yr)),
  wf = nd(Bn, Ot, Yr, sr, po),
  xf = Gd(_f),
  jf = td(Vt, xf, wf, Mt, bt, wn),
  Sf = Fu(Or, an, Vn, _s, fr, Ga, bt, ws),
  rl = new WeakMap(),
  Tf = _d(ef, Sf, $a, bt, rl, Un),
  nl = Qd(fo, kr, $o, za, Qo, Ha),
  Mf = uh(Ur, nl, Ot, Br, sr),
  Cf = lh(Vt, Or, nl, Mf, Mt, bt, Un),
  sl = pc(Bn),
  Ef = sh(sl, er, yr, Wa, on),
  mo = nh(sl, er, Ef, Wa, on, xs, ws),
  kf = Kd(qs, er, an, yr, _s, mo, fr, zs, Ga, on),
  ol = Jd(kf),
  Of = hh(Ur, an, Vn, yr, ol, Ot, Yr, Br, sr, po),
  Af = dh(Vt, Or, ol, Of, Mt, bt, wn),
  Rf = eh(Fr),
  Pf = ph(Rf, Mt, new WeakSet(), Uh),
  If = rh(an, bs, yr, mo, fr, on),
  il = th(If, fr),
  Df = Sh(Ur, il, Ot, Br, sr),
  Lf = jh(Vt, Or, il, Df, Mt, bt),
  Nf = Ah(mo, Ot, sr),
  Ff = Oh(Vt, er, mo, Nf, Mt, bt, wn),
  al = pd(Lr),
  si = Bc(Lr),
  ll = new WeakMap(),
  Uf = Qc(ll, Yr),
  Bf = al
    ? mu(
        kr,
        fr,
        Fc(Lr),
        si,
        Vc(cu),
        Mt,
        Uf,
        bt,
        rs,
        new WeakMap(),
        new WeakMap(),
        Mh(rs, Yr),
        Lr,
      )
    : void 0,
  Vf = hd(Ko, bt),
  Gf = Sc(ti, kr, jc, Nc, new WeakSet(), Mt, Vf, Gs, ts, ri, ni),
  ul = tc(
    Bf,
    $h,
    Qh,
    Kh,
    rf,
    of,
    lf,
    df,
    ff,
    Gf,
    mf,
    gf,
    bf,
    jf,
    Tf,
    Cf,
    Af,
    Pf,
    Lf,
    Ff,
  ),
  Wf = md(Vt, Hd, Mt, bt),
  qf = gd(Vt, Xd, Mt, bt),
  zf = vd(Vt, Yd, Mt, bt),
  Hf = Zd(er, bt),
  Xf = bd(Vt, Hf, Mt),
  Yf = Du(ul, er, fr, Eh, Wf, qf, zf, Xf, xs),
  oi = Jc(rl),
  Zf = bu(oi),
  cl = fc(Fr),
  $f = Oc(oi),
  dl = Pc(Fr),
  hl = new WeakMap(),
  Qf = zc(hl, Er),
  Jf = Dd(cl, Fr, er, an, bs, Vn, yr, _s, fr, dl, si, Qf, on),
  Kf = Ad(er, Jf, yr, fr, on),
  ep = ec(Ur, cl, Bn, an, bs, Vn, yr, $f, dl, si, Ot, rs, Yr, Br, sr, po),
  tp = Zc(ll),
  rp = bh(hl),
  ya = al ? Qu(Zf, Vt, Or, ep, Kf, dr, tp, Mt, bt, rs, Nh, rp, Wh, Un) : void 0,
  np = xc(fr, Yr),
  sp = wh(ti, kr, Jo, oi, po, Gs, ri, ni),
  op = ih(ul, kr, er, np, sp),
  ip = od(uo, Ko),
  ap = id(Wo, ei),
  lp = ad(qo, Qa),
  up = ld(uo, bt);
function ut(T, i) {
  if (!T) throw new Error(i);
}
function nn(T, i, m = 1 / 0) {
  if (!(i <= T && T <= m))
    throw new RangeError(`Value must be within [${i}, ${m}], got: ${T}`);
}
function fl(T) {
  !T.isOffline &&
    T.state !== 'running' &&
    ml(
      'The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.',
    );
}
let pl = console;
function cp(...T) {
  pl.log(...T);
}
function ml(...T) {
  pl.warn(...T);
}
function _r(T) {
  return typeof T > 'u';
}
function ht(T) {
  return !_r(T);
}
function dp(T) {
  return typeof T == 'function';
}
function pn(T) {
  return typeof T == 'number';
}
function cn(T) {
  return (
    Object.prototype.toString.call(T) === '[object Object]' &&
    T.constructor === Object
  );
}
function hp(T) {
  return typeof T == 'boolean';
}
function Cr(T) {
  return Array.isArray(T);
}
function Nr(T) {
  return typeof T == 'string';
}
function Ds(T) {
  return Nr(T) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(T);
}
function fp(T) {
  return new Yf(T);
}
function pp(T, i, m) {
  return new op(T, i, m);
}
const dn = typeof self == 'object' ? self : null,
  mp =
    dn &&
    (dn.hasOwnProperty('AudioContext') ||
      dn.hasOwnProperty('webkitAudioContext'));
function yp(T, i, m) {
  return (
    ut(ht(ya), 'This node only works in a secure context (https or localhost)'),
    new ya(T, i, m)
  );
}
function Ar(T, i, m, t) {
  var b = arguments.length,
    y =
      b < 3 ? i : t === null ? (t = Object.getOwnPropertyDescriptor(i, m)) : t,
    u;
  if (typeof Reflect == 'object' && typeof Reflect.decorate == 'function')
    y = Reflect.decorate(T, i, m, t);
  else
    for (var a = T.length - 1; a >= 0; a--)
      (u = T[a]) && (y = (b < 3 ? u(y) : b > 3 ? u(i, m, y) : u(i, m)) || y);
  return b > 3 && y && Object.defineProperty(i, m, y), y;
}
function Ht(T, i, m, t) {
  function b(y) {
    return y instanceof m
      ? y
      : new m(function (u) {
          u(y);
        });
  }
  return new (m || (m = Promise))(function (y, u) {
    function a(d) {
      try {
        l(t.next(d));
      } catch (h) {
        u(h);
      }
    }
    function r(d) {
      try {
        l(t.throw(d));
      } catch (h) {
        u(h);
      }
    }
    function l(d) {
      d.done ? y(d.value) : b(d.value).then(a, r);
    }
    l((t = t.apply(T, i || [])).next());
  });
}
class gp {
  constructor(i, m, t) {
    (this._callback = i),
      (this._type = m),
      (this._updateInterval = t),
      this._createClock();
  }
  _createWorker() {
    const i = new Blob(
        [
          `
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval * 1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`,
        ],
        { type: 'text/javascript' },
      ),
      m = URL.createObjectURL(i),
      t = new Worker(m);
    (t.onmessage = this._callback.bind(this)), (this._worker = t);
  }
  _createTimeout() {
    this._timeout = setTimeout(() => {
      this._createTimeout(), this._callback();
    }, this._updateInterval * 1e3);
  }
  _createClock() {
    if (this._type === 'worker')
      try {
        this._createWorker();
      } catch {
        (this._type = 'timeout'), this._createClock();
      }
    else this._type === 'timeout' && this._createTimeout();
  }
  _disposeClock() {
    this._timeout && (clearTimeout(this._timeout), (this._timeout = 0)),
      this._worker &&
        (this._worker.terminate(), (this._worker.onmessage = null));
  }
  get updateInterval() {
    return this._updateInterval;
  }
  set updateInterval(i) {
    (this._updateInterval = Math.max(i, 128 / 44100)),
      this._type === 'worker' && this._worker.postMessage(Math.max(i * 1e3, 1));
  }
  get type() {
    return this._type;
  }
  set type(i) {
    this._disposeClock(), (this._type = i), this._createClock();
  }
  dispose() {
    this._disposeClock();
  }
}
function mn(T) {
  return lp(T);
}
function rn(T) {
  return ap(T);
}
function Fs(T) {
  return up(T);
}
function Cn(T) {
  return ip(T);
}
function yl(T) {
  return T instanceof AudioBuffer;
}
function vp(T, i) {
  return T === 'value' || mn(i) || rn(i) || yl(i);
}
function kn(T, ...i) {
  if (!i.length) return T;
  const m = i.shift();
  if (cn(T) && cn(m))
    for (const t in m)
      vp(t, m[t])
        ? (T[t] = m[t])
        : cn(m[t])
        ? (T[t] || Object.assign(T, { [t]: {} }), kn(T[t], m[t]))
        : Object.assign(T, { [t]: m[t] });
  return kn(T, ...i);
}
function bp(T, i) {
  return T.length === i.length && T.every((m, t) => i[t] === m);
}
function $e(T, i, m = [], t) {
  const b = {},
    y = Array.from(i);
  if (
    (cn(y[0]) &&
      t &&
      !Reflect.has(y[0], t) &&
      (Object.keys(y[0]).some((a) => Reflect.has(T, a)) ||
        (kn(b, { [t]: y[0] }), m.splice(m.indexOf(t), 1), y.shift())),
    y.length === 1 && cn(y[0]))
  )
    kn(b, y[0]);
  else for (let u = 0; u < m.length; u++) ht(y[u]) && (b[m[u]] = y[u]);
  return kn(T, b);
}
function _p(T) {
  return T.constructor.getDefaults();
}
function On(T, i) {
  return _r(T) ? i : T;
}
function ga(T, i) {
  return (
    i.forEach((m) => {
      Reflect.has(T, m) && delete T[m];
    }),
    T
  );
}
/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */ class Zr {
  constructor() {
    (this.debug = !1), (this._wasDisposed = !1);
  }
  static getDefaults() {
    return {};
  }
  log(...i) {
    (this.debug || (dn && this.toString() === dn.TONE_DEBUG_CLASS)) &&
      cp(this, ...i);
  }
  dispose() {
    return (this._wasDisposed = !0), this;
  }
  get disposed() {
    return this._wasDisposed;
  }
  toString() {
    return this.name;
  }
}
Zr.version = wa;
const ii = 1e-6;
function Zs(T, i) {
  return T > i + ii;
}
function Fo(T, i) {
  return Zs(T, i) || Sr(T, i);
}
function gl(T, i) {
  return T + ii < i;
}
function Sr(T, i) {
  return Math.abs(T - i) < ii;
}
function wp(T, i, m) {
  return Math.max(Math.min(T, m), i);
}
class Vr extends Zr {
  constructor() {
    super(), (this.name = 'Timeline'), (this._timeline = []);
    const i = $e(Vr.getDefaults(), arguments, ['memory']);
    (this.memory = i.memory), (this.increasing = i.increasing);
  }
  static getDefaults() {
    return { memory: 1 / 0, increasing: !1 };
  }
  get length() {
    return this._timeline.length;
  }
  add(i) {
    if (
      (ut(
        Reflect.has(i, 'time'),
        'Timeline: events must have a time attribute',
      ),
      (i.time = i.time.valueOf()),
      this.increasing && this.length)
    ) {
      const m = this._timeline[this.length - 1];
      ut(
        Fo(i.time, m.time),
        'The time must be greater than or equal to the last scheduled time',
      ),
        this._timeline.push(i);
    } else {
      const m = this._search(i.time);
      this._timeline.splice(m + 1, 0, i);
    }
    if (this.length > this.memory) {
      const m = this.length - this.memory;
      this._timeline.splice(0, m);
    }
    return this;
  }
  remove(i) {
    const m = this._timeline.indexOf(i);
    return m !== -1 && this._timeline.splice(m, 1), this;
  }
  get(i, m = 'time') {
    const t = this._search(i, m);
    return t !== -1 ? this._timeline[t] : null;
  }
  peek() {
    return this._timeline[0];
  }
  shift() {
    return this._timeline.shift();
  }
  getAfter(i, m = 'time') {
    const t = this._search(i, m);
    return t + 1 < this._timeline.length ? this._timeline[t + 1] : null;
  }
  getBefore(i) {
    const m = this._timeline.length;
    if (m > 0 && this._timeline[m - 1].time < i) return this._timeline[m - 1];
    const t = this._search(i);
    return t - 1 >= 0 ? this._timeline[t - 1] : null;
  }
  cancel(i) {
    if (this._timeline.length > 1) {
      let m = this._search(i);
      if (m >= 0)
        if (Sr(this._timeline[m].time, i)) {
          for (let t = m; t >= 0 && Sr(this._timeline[t].time, i); t--) m = t;
          this._timeline = this._timeline.slice(0, m);
        } else this._timeline = this._timeline.slice(0, m + 1);
      else this._timeline = [];
    } else
      this._timeline.length === 1 &&
        Fo(this._timeline[0].time, i) &&
        (this._timeline = []);
    return this;
  }
  cancelBefore(i) {
    const m = this._search(i);
    return m >= 0 && (this._timeline = this._timeline.slice(m + 1)), this;
  }
  previousEvent(i) {
    const m = this._timeline.indexOf(i);
    return m > 0 ? this._timeline[m - 1] : null;
  }
  _search(i, m = 'time') {
    if (this._timeline.length === 0) return -1;
    let t = 0;
    const b = this._timeline.length;
    let y = b;
    if (b > 0 && this._timeline[b - 1][m] <= i) return b - 1;
    for (; t < y; ) {
      let u = Math.floor(t + (y - t) / 2);
      const a = this._timeline[u],
        r = this._timeline[u + 1];
      if (Sr(a[m], i)) {
        for (let l = u; l < this._timeline.length; l++) {
          const d = this._timeline[l];
          if (Sr(d[m], i)) u = l;
          else break;
        }
        return u;
      } else {
        if (gl(a[m], i) && Zs(r[m], i)) return u;
        Zs(a[m], i) ? (y = u) : (t = u + 1);
      }
    }
    return -1;
  }
  _iterate(i, m = 0, t = this._timeline.length - 1) {
    this._timeline.slice(m, t + 1).forEach(i);
  }
  forEach(i) {
    return this._iterate(i), this;
  }
  forEachBefore(i, m) {
    const t = this._search(i);
    return t !== -1 && this._iterate(m, 0, t), this;
  }
  forEachAfter(i, m) {
    const t = this._search(i);
    return this._iterate(m, t + 1), this;
  }
  forEachBetween(i, m, t) {
    let b = this._search(i),
      y = this._search(m);
    return (
      b !== -1 && y !== -1
        ? (this._timeline[b].time !== i && (b += 1),
          this._timeline[y].time === m && (y -= 1),
          this._iterate(t, b, y))
        : b === -1 && this._iterate(t, 0, y),
      this
    );
  }
  forEachFrom(i, m) {
    let t = this._search(i);
    for (; t >= 0 && this._timeline[t].time >= i; ) t--;
    return this._iterate(m, t + 1), this;
  }
  forEachAtTime(i, m) {
    const t = this._search(i);
    if (t !== -1 && Sr(this._timeline[t].time, i)) {
      let b = t;
      for (let y = t; y >= 0 && Sr(this._timeline[y].time, i); y--) b = y;
      this._iterate(
        (y) => {
          m(y);
        },
        b,
        t,
      );
    }
    return this;
  }
  dispose() {
    return super.dispose(), (this._timeline = []), this;
  }
}
const vl = [];
function yo(T) {
  vl.push(T);
}
function xp(T) {
  vl.forEach((i) => i(T));
}
const bl = [];
function go(T) {
  bl.push(T);
}
function jp(T) {
  bl.forEach((i) => i(T));
}
class js extends Zr {
  constructor() {
    super(...arguments), (this.name = 'Emitter');
  }
  on(i, m) {
    return (
      i.split(/\W+/).forEach((b) => {
        _r(this._events) && (this._events = {}),
          this._events.hasOwnProperty(b) || (this._events[b] = []),
          this._events[b].push(m);
      }),
      this
    );
  }
  once(i, m) {
    const t = (...b) => {
      m(...b), this.off(i, t);
    };
    return this.on(i, t), this;
  }
  off(i, m) {
    return (
      i.split(/\W+/).forEach((b) => {
        if (
          (_r(this._events) && (this._events = {}),
          this._events.hasOwnProperty(i))
        )
          if (_r(m)) this._events[i] = [];
          else {
            const y = this._events[i];
            for (let u = y.length - 1; u >= 0; u--)
              y[u] === m && y.splice(u, 1);
          }
      }),
      this
    );
  }
  emit(i, ...m) {
    if (this._events && this._events.hasOwnProperty(i)) {
      const t = this._events[i].slice(0);
      for (let b = 0, y = t.length; b < y; b++) t[b].apply(this, m);
    }
    return this;
  }
  static mixin(i) {
    ['on', 'once', 'off', 'emit'].forEach((m) => {
      const t = Object.getOwnPropertyDescriptor(js.prototype, m);
      Object.defineProperty(i.prototype, m, t);
    });
  }
  dispose() {
    return super.dispose(), (this._events = void 0), this;
  }
}
class _l extends js {
  constructor() {
    super(...arguments), (this.isOffline = !1);
  }
  toJSON() {
    return {};
  }
}
class Ss extends _l {
  constructor() {
    super(),
      (this.name = 'Context'),
      (this._constants = new Map()),
      (this._timeouts = new Vr()),
      (this._timeoutIds = 0),
      (this._initialized = !1),
      (this.isOffline = !1),
      (this._workletModules = new Map());
    const i = $e(Ss.getDefaults(), arguments, ['context']);
    i.context
      ? (this._context = i.context)
      : (this._context = fp({ latencyHint: i.latencyHint })),
      (this._ticker = new gp(
        this.emit.bind(this, 'tick'),
        i.clockSource,
        i.updateInterval,
      )),
      this.on('tick', this._timeoutLoop.bind(this)),
      (this._context.onstatechange = () => {
        this.emit('statechange', this.state);
      }),
      this._setLatencyHint(i.latencyHint),
      (this.lookAhead = i.lookAhead);
  }
  static getDefaults() {
    return {
      clockSource: 'worker',
      latencyHint: 'interactive',
      lookAhead: 0.1,
      updateInterval: 0.05,
    };
  }
  initialize() {
    return this._initialized || (xp(this), (this._initialized = !0)), this;
  }
  createAnalyser() {
    return this._context.createAnalyser();
  }
  createOscillator() {
    return this._context.createOscillator();
  }
  createBufferSource() {
    return this._context.createBufferSource();
  }
  createBiquadFilter() {
    return this._context.createBiquadFilter();
  }
  createBuffer(i, m, t) {
    return this._context.createBuffer(i, m, t);
  }
  createChannelMerger(i) {
    return this._context.createChannelMerger(i);
  }
  createChannelSplitter(i) {
    return this._context.createChannelSplitter(i);
  }
  createConstantSource() {
    return this._context.createConstantSource();
  }
  createConvolver() {
    return this._context.createConvolver();
  }
  createDelay(i) {
    return this._context.createDelay(i);
  }
  createDynamicsCompressor() {
    return this._context.createDynamicsCompressor();
  }
  createGain() {
    return this._context.createGain();
  }
  createIIRFilter(i, m) {
    return this._context.createIIRFilter(i, m);
  }
  createPanner() {
    return this._context.createPanner();
  }
  createPeriodicWave(i, m, t) {
    return this._context.createPeriodicWave(i, m, t);
  }
  createStereoPanner() {
    return this._context.createStereoPanner();
  }
  createWaveShaper() {
    return this._context.createWaveShaper();
  }
  createMediaStreamSource(i) {
    return (
      ut(Cn(this._context), 'Not available if OfflineAudioContext'),
      this._context.createMediaStreamSource(i)
    );
  }
  createMediaElementSource(i) {
    return (
      ut(Cn(this._context), 'Not available if OfflineAudioContext'),
      this._context.createMediaElementSource(i)
    );
  }
  createMediaStreamDestination() {
    return (
      ut(Cn(this._context), 'Not available if OfflineAudioContext'),
      this._context.createMediaStreamDestination()
    );
  }
  decodeAudioData(i) {
    return this._context.decodeAudioData(i);
  }
  get currentTime() {
    return this._context.currentTime;
  }
  get state() {
    return this._context.state;
  }
  get sampleRate() {
    return this._context.sampleRate;
  }
  get listener() {
    return this.initialize(), this._listener;
  }
  set listener(i) {
    ut(!this._initialized, 'The listener cannot be set after initialization.'),
      (this._listener = i);
  }
  get transport() {
    return this.initialize(), this._transport;
  }
  set transport(i) {
    ut(!this._initialized, 'The transport cannot be set after initialization.'),
      (this._transport = i);
  }
  get draw() {
    return this.initialize(), this._draw;
  }
  set draw(i) {
    ut(!this._initialized, 'Draw cannot be set after initialization.'),
      (this._draw = i);
  }
  get destination() {
    return this.initialize(), this._destination;
  }
  set destination(i) {
    ut(
      !this._initialized,
      'The destination cannot be set after initialization.',
    ),
      (this._destination = i);
  }
  createAudioWorkletNode(i, m) {
    return yp(this.rawContext, i, m);
  }
  addAudioWorkletModule(i, m) {
    return Ht(this, void 0, void 0, function* () {
      ut(
        ht(this.rawContext.audioWorklet),
        'AudioWorkletNode is only available in a secure context (https or localhost)',
      ),
        this._workletModules.has(m) ||
          this._workletModules.set(
            m,
            this.rawContext.audioWorklet.addModule(i),
          ),
        yield this._workletModules.get(m);
    });
  }
  workletsAreReady() {
    return Ht(this, void 0, void 0, function* () {
      const i = [];
      this._workletModules.forEach((m) => i.push(m)), yield Promise.all(i);
    });
  }
  get updateInterval() {
    return this._ticker.updateInterval;
  }
  set updateInterval(i) {
    this._ticker.updateInterval = i;
  }
  get clockSource() {
    return this._ticker.type;
  }
  set clockSource(i) {
    this._ticker.type = i;
  }
  get latencyHint() {
    return this._latencyHint;
  }
  _setLatencyHint(i) {
    let m = 0;
    if (((this._latencyHint = i), Nr(i)))
      switch (i) {
        case 'interactive':
          m = 0.1;
          break;
        case 'playback':
          m = 0.5;
          break;
        case 'balanced':
          m = 0.25;
          break;
      }
    (this.lookAhead = m), (this.updateInterval = m / 2);
  }
  get rawContext() {
    return this._context;
  }
  now() {
    return this._context.currentTime + this.lookAhead;
  }
  immediate() {
    return this._context.currentTime;
  }
  resume() {
    return Cn(this._context) ? this._context.resume() : Promise.resolve();
  }
  close() {
    return Ht(this, void 0, void 0, function* () {
      Cn(this._context) && (yield this._context.close()),
        this._initialized && jp(this);
    });
  }
  getConstant(i) {
    if (this._constants.has(i)) return this._constants.get(i);
    {
      const m = this._context.createBuffer(1, 128, this._context.sampleRate),
        t = m.getChannelData(0);
      for (let y = 0; y < t.length; y++) t[y] = i;
      const b = this._context.createBufferSource();
      return (
        (b.channelCount = 1),
        (b.channelCountMode = 'explicit'),
        (b.buffer = m),
        (b.loop = !0),
        b.start(0),
        this._constants.set(i, b),
        b
      );
    }
  }
  dispose() {
    return (
      super.dispose(),
      this._ticker.dispose(),
      this._timeouts.dispose(),
      Object.keys(this._constants).map((i) => this._constants[i].disconnect()),
      this
    );
  }
  _timeoutLoop() {
    const i = this.now();
    let m = this._timeouts.peek();
    for (; this._timeouts.length && m && m.time <= i; )
      m.callback(), this._timeouts.shift(), (m = this._timeouts.peek());
  }
  setTimeout(i, m) {
    this._timeoutIds++;
    const t = this.now();
    return (
      this._timeouts.add({ callback: i, id: this._timeoutIds, time: t + m }),
      this._timeoutIds
    );
  }
  clearTimeout(i) {
    return (
      this._timeouts.forEach((m) => {
        m.id === i && this._timeouts.remove(m);
      }),
      this
    );
  }
  clearInterval(i) {
    return this.clearTimeout(i);
  }
  setInterval(i, m) {
    const t = ++this._timeoutIds,
      b = () => {
        const y = this.now();
        this._timeouts.add({
          callback: () => {
            i(), b();
          },
          id: t,
          time: y + m,
        });
      };
    return b(), t;
  }
}
class Sp extends _l {
  constructor() {
    super(...arguments),
      (this.lookAhead = 0),
      (this.latencyHint = 0),
      (this.isOffline = !1);
  }
  createAnalyser() {
    return {};
  }
  createOscillator() {
    return {};
  }
  createBufferSource() {
    return {};
  }
  createBiquadFilter() {
    return {};
  }
  createBuffer(i, m, t) {
    return {};
  }
  createChannelMerger(i) {
    return {};
  }
  createChannelSplitter(i) {
    return {};
  }
  createConstantSource() {
    return {};
  }
  createConvolver() {
    return {};
  }
  createDelay(i) {
    return {};
  }
  createDynamicsCompressor() {
    return {};
  }
  createGain() {
    return {};
  }
  createIIRFilter(i, m) {
    return {};
  }
  createPanner() {
    return {};
  }
  createPeriodicWave(i, m, t) {
    return {};
  }
  createStereoPanner() {
    return {};
  }
  createWaveShaper() {
    return {};
  }
  createMediaStreamSource(i) {
    return {};
  }
  createMediaElementSource(i) {
    return {};
  }
  createMediaStreamDestination() {
    return {};
  }
  decodeAudioData(i) {
    return Promise.resolve({});
  }
  createAudioWorkletNode(i, m) {
    return {};
  }
  get rawContext() {
    return {};
  }
  addAudioWorkletModule(i, m) {
    return Ht(this, void 0, void 0, function* () {
      return Promise.resolve();
    });
  }
  resume() {
    return Promise.resolve();
  }
  setTimeout(i, m) {
    return 0;
  }
  clearTimeout(i) {
    return this;
  }
  setInterval(i, m) {
    return 0;
  }
  clearInterval(i) {
    return this;
  }
  getConstant(i) {
    return {};
  }
  get currentTime() {
    return 0;
  }
  get state() {
    return {};
  }
  get sampleRate() {
    return 0;
  }
  get listener() {
    return {};
  }
  get transport() {
    return {};
  }
  get draw() {
    return {};
  }
  set draw(i) {}
  get destination() {
    return {};
  }
  set destination(i) {}
  now() {
    return 0;
  }
  immediate() {
    return 0;
  }
}
function Nt(T, i) {
  Cr(i)
    ? i.forEach((m) => Nt(T, m))
    : Object.defineProperty(T, i, { enumerable: !0, writable: !1 });
}
function wl(T, i) {
  Cr(i)
    ? i.forEach((m) => wl(T, m))
    : Object.defineProperty(T, i, { writable: !0 });
}
const xt = () => {};
class Tt extends Zr {
  constructor() {
    super(), (this.name = 'ToneAudioBuffer'), (this.onload = xt);
    const i = $e(Tt.getDefaults(), arguments, ['url', 'onload', 'onerror']);
    (this.reverse = i.reverse),
      (this.onload = i.onload),
      (i.url && yl(i.url)) || i.url instanceof Tt
        ? this.set(i.url)
        : Nr(i.url) && this.load(i.url).catch(i.onerror);
  }
  static getDefaults() {
    return { onerror: xt, onload: xt, reverse: !1 };
  }
  get sampleRate() {
    return this._buffer ? this._buffer.sampleRate : Tr().sampleRate;
  }
  set(i) {
    return (
      i instanceof Tt
        ? i.loaded
          ? (this._buffer = i.get())
          : (i.onload = () => {
              this.set(i), this.onload(this);
            })
        : (this._buffer = i),
      this._reversed && this._reverse(),
      this
    );
  }
  get() {
    return this._buffer;
  }
  load(i) {
    return Ht(this, void 0, void 0, function* () {
      const m = Tt.load(i).then((t) => {
        this.set(t), this.onload(this);
      });
      Tt.downloads.push(m);
      try {
        yield m;
      } finally {
        const t = Tt.downloads.indexOf(m);
        Tt.downloads.splice(t, 1);
      }
      return this;
    });
  }
  dispose() {
    return super.dispose(), (this._buffer = void 0), this;
  }
  fromArray(i) {
    const m = Cr(i) && i[0].length > 0,
      t = m ? i.length : 1,
      b = m ? i[0].length : i.length,
      y = Tr(),
      u = y.createBuffer(t, b, y.sampleRate),
      a = !m && t === 1 ? [i] : i;
    for (let r = 0; r < t; r++) u.copyToChannel(a[r], r);
    return (this._buffer = u), this;
  }
  toMono(i) {
    if (pn(i)) this.fromArray(this.toArray(i));
    else {
      let m = new Float32Array(this.length);
      const t = this.numberOfChannels;
      for (let b = 0; b < t; b++) {
        const y = this.toArray(b);
        for (let u = 0; u < y.length; u++) m[u] += y[u];
      }
      (m = m.map((b) => b / t)), this.fromArray(m);
    }
    return this;
  }
  toArray(i) {
    if (pn(i)) return this.getChannelData(i);
    if (this.numberOfChannels === 1) return this.toArray(0);
    {
      const m = [];
      for (let t = 0; t < this.numberOfChannels; t++)
        m[t] = this.getChannelData(t);
      return m;
    }
  }
  getChannelData(i) {
    return this._buffer ? this._buffer.getChannelData(i) : new Float32Array(0);
  }
  slice(i, m = this.duration) {
    const t = Math.floor(i * this.sampleRate),
      b = Math.floor(m * this.sampleRate);
    ut(t < b, 'The start time must be less than the end time');
    const y = b - t,
      u = Tr().createBuffer(this.numberOfChannels, y, this.sampleRate);
    for (let a = 0; a < this.numberOfChannels; a++)
      u.copyToChannel(this.getChannelData(a).subarray(t, b), a);
    return new Tt(u);
  }
  _reverse() {
    if (this.loaded)
      for (let i = 0; i < this.numberOfChannels; i++)
        this.getChannelData(i).reverse();
    return this;
  }
  get loaded() {
    return this.length > 0;
  }
  get duration() {
    return this._buffer ? this._buffer.duration : 0;
  }
  get length() {
    return this._buffer ? this._buffer.length : 0;
  }
  get numberOfChannels() {
    return this._buffer ? this._buffer.numberOfChannels : 0;
  }
  get reverse() {
    return this._reversed;
  }
  set reverse(i) {
    this._reversed !== i && ((this._reversed = i), this._reverse());
  }
  static fromArray(i) {
    return new Tt().fromArray(i);
  }
  static fromUrl(i) {
    return Ht(this, void 0, void 0, function* () {
      return yield new Tt().load(i);
    });
  }
  static load(i) {
    return Ht(this, void 0, void 0, function* () {
      const m = i.match(/\[([^\]\[]+\|.+)\]$/);
      if (m) {
        const a = m[1].split('|');
        let r = a[0];
        for (const l of a)
          if (Tt.supportsType(l)) {
            r = l;
            break;
          }
        i = i.replace(m[0], r);
      }
      const t =
          Tt.baseUrl === '' || Tt.baseUrl.endsWith('/')
            ? Tt.baseUrl
            : Tt.baseUrl + '/',
        b = yield fetch(t + i);
      if (!b.ok) throw new Error(`could not load url: ${i}`);
      const y = yield b.arrayBuffer();
      return yield Tr().decodeAudioData(y);
    });
  }
  static supportsType(i) {
    const m = i.split('.'),
      t = m[m.length - 1];
    return document.createElement('audio').canPlayType('audio/' + t) !== '';
  }
  static loaded() {
    return Ht(this, void 0, void 0, function* () {
      for (yield Promise.resolve(); Tt.downloads.length; )
        yield Tt.downloads[0];
    });
  }
}
Tt.baseUrl = '';
Tt.downloads = [];
class ai extends Ss {
  constructor() {
    super({
      clockSource: 'offline',
      context: Fs(arguments[0])
        ? arguments[0]
        : pp(arguments[0], arguments[1] * arguments[2], arguments[2]),
      lookAhead: 0,
      updateInterval: Fs(arguments[0])
        ? 128 / arguments[0].sampleRate
        : 128 / arguments[2],
    }),
      (this.name = 'OfflineContext'),
      (this._currentTime = 0),
      (this.isOffline = !0),
      (this._duration = Fs(arguments[0])
        ? arguments[0].length / arguments[0].sampleRate
        : arguments[1]);
  }
  now() {
    return this._currentTime;
  }
  get currentTime() {
    return this._currentTime;
  }
  _renderClock(i) {
    return Ht(this, void 0, void 0, function* () {
      let m = 0;
      for (; this._duration - this._currentTime >= 0; ) {
        this.emit('tick'), (this._currentTime += 128 / this.sampleRate), m++;
        const t = Math.floor(this.sampleRate / 128);
        i && m % t === 0 && (yield new Promise((b) => setTimeout(b, 1)));
      }
    });
  }
  render(i = !0) {
    return Ht(this, void 0, void 0, function* () {
      yield this.workletsAreReady(), yield this._renderClock(i);
      const m = yield this._context.startRendering();
      return new Tt(m);
    });
  }
  close() {
    return Promise.resolve();
  }
}
const xl = new Sp();
let An = xl;
function Tr() {
  return An === xl && mp && Tp(new Ss()), An;
}
function Tp(T) {
  Cn(T) ? (An = new Ss(T)) : Fs(T) ? (An = new ai(T)) : (An = T);
}
function Mp() {
  return An.resume();
}
if (dn && !dn.TONE_SILENCE_LOGGING) {
  const i = ` * Tone.js v${wa} * `;
  console.log(`%c${i}`, 'background: #000; color: #fff');
}
function Cp(T) {
  return Math.pow(10, T / 20);
}
function Ep(T) {
  return 20 * (Math.log(T) / Math.LN10);
}
function jl(T) {
  return Math.pow(2, T / 12);
}
let vo = 440;
function kp() {
  return vo;
}
function Op(T) {
  vo = T;
}
function Uo(T) {
  return Math.round(Sl(T));
}
function Sl(T) {
  return 69 + 12 * Math.log2(T / vo);
}
function Ap(T) {
  return vo * Math.pow(2, (T - 69) / 12);
}
class li extends Zr {
  constructor(i, m, t) {
    super(),
      (this.defaultUnits = 's'),
      (this._val = m),
      (this._units = t),
      (this.context = i),
      (this._expressions = this._getExpressions());
  }
  _getExpressions() {
    return {
      hz: {
        method: (i) => this._frequencyToUnits(parseFloat(i)),
        regexp: /^(\d+(?:\.\d+)?)hz$/i,
      },
      i: {
        method: (i) => this._ticksToUnits(parseInt(i, 10)),
        regexp: /^(\d+)i$/i,
      },
      m: {
        method: (i) =>
          this._beatsToUnits(parseInt(i, 10) * this._getTimeSignature()),
        regexp: /^(\d+)m$/i,
      },
      n: {
        method: (i, m) => {
          const t = parseInt(i, 10),
            b = m === '.' ? 1.5 : 1;
          return t === 1
            ? this._beatsToUnits(this._getTimeSignature()) * b
            : this._beatsToUnits(4 / t) * b;
        },
        regexp: /^(\d+)n(\.?)$/i,
      },
      number: {
        method: (i) =>
          this._expressions[this.defaultUnits].method.call(this, i),
        regexp: /^(\d+(?:\.\d+)?)$/,
      },
      s: {
        method: (i) => this._secondsToUnits(parseFloat(i)),
        regexp: /^(\d+(?:\.\d+)?)s$/,
      },
      samples: {
        method: (i) => parseInt(i, 10) / this.context.sampleRate,
        regexp: /^(\d+)samples$/,
      },
      t: {
        method: (i) => {
          const m = parseInt(i, 10);
          return this._beatsToUnits(8 / (Math.floor(m) * 3));
        },
        regexp: /^(\d+)t$/i,
      },
      tr: {
        method: (i, m, t) => {
          let b = 0;
          return (
            i &&
              i !== '0' &&
              (b += this._beatsToUnits(
                this._getTimeSignature() * parseFloat(i),
              )),
            m && m !== '0' && (b += this._beatsToUnits(parseFloat(m))),
            t && t !== '0' && (b += this._beatsToUnits(parseFloat(t) / 4)),
            b
          );
        },
        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/,
      },
    };
  }
  valueOf() {
    if ((this._val instanceof li && this.fromType(this._val), _r(this._val)))
      return this._noArg();
    if (Nr(this._val) && _r(this._units)) {
      for (const i in this._expressions)
        if (this._expressions[i].regexp.test(this._val.trim())) {
          this._units = i;
          break;
        }
    } else if (cn(this._val)) {
      let i = 0;
      for (const m in this._val)
        if (ht(this._val[m])) {
          const t = this._val[m],
            b = new this.constructor(this.context, m).valueOf() * t;
          i += b;
        }
      return i;
    }
    if (ht(this._units)) {
      const i = this._expressions[this._units],
        m = this._val.toString().trim().match(i.regexp);
      return m
        ? i.method.apply(this, m.slice(1))
        : i.method.call(this, this._val);
    } else return Nr(this._val) ? parseFloat(this._val) : this._val;
  }
  _frequencyToUnits(i) {
    return 1 / i;
  }
  _beatsToUnits(i) {
    return (60 / this._getBpm()) * i;
  }
  _secondsToUnits(i) {
    return i;
  }
  _ticksToUnits(i) {
    return (i * this._beatsToUnits(1)) / this._getPPQ();
  }
  _noArg() {
    return this._now();
  }
  _getBpm() {
    return this.context.transport.bpm.value;
  }
  _getTimeSignature() {
    return this.context.transport.timeSignature;
  }
  _getPPQ() {
    return this.context.transport.PPQ;
  }
  fromType(i) {
    switch (((this._units = void 0), this.defaultUnits)) {
      case 's':
        this._val = i.toSeconds();
        break;
      case 'i':
        this._val = i.toTicks();
        break;
      case 'hz':
        this._val = i.toFrequency();
        break;
      case 'midi':
        this._val = i.toMidi();
        break;
    }
    return this;
  }
  toFrequency() {
    return 1 / this.toSeconds();
  }
  toSamples() {
    return this.toSeconds() * this.context.sampleRate;
  }
  toMilliseconds() {
    return this.toSeconds() * 1e3;
  }
}
class Mr extends li {
  constructor() {
    super(...arguments), (this.name = 'TimeClass');
  }
  _getExpressions() {
    return Object.assign(super._getExpressions(), {
      now: {
        method: (i) =>
          this._now() + new this.constructor(this.context, i).valueOf(),
        regexp: /^\+(.+)/,
      },
      quantize: {
        method: (i) => {
          const m = new Mr(this.context, i).valueOf();
          return this._secondsToUnits(
            this.context.transport.nextSubdivision(m),
          );
        },
        regexp: /^@(.+)/,
      },
    });
  }
  quantize(i, m = 1) {
    const t = new this.constructor(this.context, i).valueOf(),
      b = this.valueOf(),
      a = Math.round(b / t) * t - b;
    return b + a * m;
  }
  toNotation() {
    const i = this.toSeconds(),
      m = ['1m'];
    for (let y = 1; y < 9; y++) {
      const u = Math.pow(2, y);
      m.push(u + 'n.'), m.push(u + 'n'), m.push(u + 't');
    }
    m.push('0');
    let t = m[0],
      b = new Mr(this.context, m[0]).toSeconds();
    return (
      m.forEach((y) => {
        const u = new Mr(this.context, y).toSeconds();
        Math.abs(u - i) < Math.abs(b - i) && ((t = y), (b = u));
      }),
      t
    );
  }
  toBarsBeatsSixteenths() {
    const i = this._beatsToUnits(1);
    let m = this.valueOf() / i;
    m = parseFloat(m.toFixed(4));
    const t = Math.floor(m / this._getTimeSignature());
    let b = (m % 1) * 4;
    m = Math.floor(m) % this._getTimeSignature();
    const y = b.toString();
    return (
      y.length > 3 && (b = parseFloat(parseFloat(y).toFixed(3))),
      [t, m, b].join(':')
    );
  }
  toTicks() {
    const i = this._beatsToUnits(1),
      m = this.valueOf() / i;
    return Math.round(m * this._getPPQ());
  }
  toSeconds() {
    return this.valueOf();
  }
  toMidi() {
    return Uo(this.toFrequency());
  }
  _now() {
    return this.context.now();
  }
}
class br extends Mr {
  constructor() {
    super(...arguments), (this.name = 'Frequency'), (this.defaultUnits = 'hz');
  }
  static get A4() {
    return kp();
  }
  static set A4(i) {
    Op(i);
  }
  _getExpressions() {
    return Object.assign({}, super._getExpressions(), {
      midi: {
        regexp: /^(\d+(?:\.\d+)?midi)/,
        method(i) {
          return this.defaultUnits === 'midi' ? i : br.mtof(i);
        },
      },
      note: {
        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
        method(i, m) {
          const b = Rp[i.toLowerCase()] + (parseInt(m, 10) + 1) * 12;
          return this.defaultUnits === 'midi' ? b : br.mtof(b);
        },
      },
      tr: {
        regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
        method(i, m, t) {
          let b = 1;
          return (
            i &&
              i !== '0' &&
              (b *= this._beatsToUnits(
                this._getTimeSignature() * parseFloat(i),
              )),
            m && m !== '0' && (b *= this._beatsToUnits(parseFloat(m))),
            t && t !== '0' && (b *= this._beatsToUnits(parseFloat(t) / 4)),
            b
          );
        },
      },
    });
  }
  transpose(i) {
    return new br(this.context, this.valueOf() * jl(i));
  }
  harmonize(i) {
    return i.map((m) => this.transpose(m));
  }
  toMidi() {
    return Uo(this.valueOf());
  }
  toNote() {
    const i = this.toFrequency(),
      m = Math.log2(i / br.A4);
    let t = Math.round(12 * m) + 57;
    const b = Math.floor(t / 12);
    return b < 0 && (t += -12 * b), Pp[t % 12] + b.toString();
  }
  toSeconds() {
    return 1 / super.toSeconds();
  }
  toTicks() {
    const i = this._beatsToUnits(1),
      m = this.valueOf() / i;
    return Math.floor(m * this._getPPQ());
  }
  _noArg() {
    return 0;
  }
  _frequencyToUnits(i) {
    return i;
  }
  _ticksToUnits(i) {
    return 1 / ((i * 60) / (this._getBpm() * this._getPPQ()));
  }
  _beatsToUnits(i) {
    return 1 / super._beatsToUnits(i);
  }
  _secondsToUnits(i) {
    return 1 / i;
  }
  static mtof(i) {
    return Ap(i);
  }
  static ftom(i) {
    return Uo(i);
  }
}
const Rp = {
    cbb: -2,
    cb: -1,
    c: 0,
    'c#': 1,
    cx: 2,
    dbb: 0,
    db: 1,
    d: 2,
    'd#': 3,
    dx: 4,
    ebb: 2,
    eb: 3,
    e: 4,
    'e#': 5,
    ex: 6,
    fbb: 3,
    fb: 4,
    f: 5,
    'f#': 6,
    fx: 7,
    gbb: 5,
    gb: 6,
    g: 7,
    'g#': 8,
    gx: 9,
    abb: 7,
    ab: 8,
    a: 9,
    'a#': 10,
    ax: 11,
    bbb: 9,
    bb: 10,
    b: 11,
    'b#': 12,
    bx: 13,
  },
  Pp = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
class Kn extends Mr {
  constructor() {
    super(...arguments), (this.name = 'TransportTime');
  }
  _now() {
    return this.context.transport.seconds;
  }
}
class mr extends Zr {
  constructor() {
    super();
    const i = $e(mr.getDefaults(), arguments, ['context']);
    this.defaultContext
      ? (this.context = this.defaultContext)
      : (this.context = i.context);
  }
  static getDefaults() {
    return { context: Tr() };
  }
  now() {
    return this.context.currentTime + this.context.lookAhead;
  }
  immediate() {
    return this.context.currentTime;
  }
  get sampleTime() {
    return 1 / this.context.sampleRate;
  }
  get blockTime() {
    return 128 / this.context.sampleRate;
  }
  toSeconds(i) {
    return new Mr(this.context, i).toSeconds();
  }
  toFrequency(i) {
    return new br(this.context, i).toFrequency();
  }
  toTicks(i) {
    return new Kn(this.context, i).toTicks();
  }
  _getPartialProperties(i) {
    const m = this.get();
    return (
      Object.keys(m).forEach((t) => {
        _r(i[t]) && delete m[t];
      }),
      m
    );
  }
  get() {
    const i = _p(this);
    return (
      Object.keys(i).forEach((m) => {
        if (Reflect.has(this, m)) {
          const t = this[m];
          ht(t) && ht(t.value) && ht(t.setValueAtTime)
            ? (i[m] = t.value)
            : t instanceof mr
            ? (i[m] = t._getPartialProperties(i[m]))
            : Cr(t) || pn(t) || Nr(t) || hp(t)
            ? (i[m] = t)
            : delete i[m];
        }
      }),
      i
    );
  }
  set(i) {
    return (
      Object.keys(i).forEach((m) => {
        Reflect.has(this, m) &&
          ht(this[m]) &&
          (this[m] && ht(this[m].value) && ht(this[m].setValueAtTime)
            ? this[m].value !== i[m] && (this[m].value = i[m])
            : this[m] instanceof mr
            ? this[m].set(i[m])
            : (this[m] = i[m]));
      }),
      this
    );
  }
}
class ui extends Vr {
  constructor(i = 'stopped') {
    super(),
      (this.name = 'StateTimeline'),
      (this._initial = i),
      this.setStateAtTime(this._initial, 0);
  }
  getValueAtTime(i) {
    const m = this.get(i);
    return m !== null ? m.state : this._initial;
  }
  setStateAtTime(i, m, t) {
    return (
      nn(m, 0), this.add(Object.assign({}, t, { state: i, time: m })), this
    );
  }
  getLastState(i, m) {
    const t = this._search(m);
    for (let b = t; b >= 0; b--) {
      const y = this._timeline[b];
      if (y.state === i) return y;
    }
  }
  getNextState(i, m) {
    const t = this._search(m);
    if (t !== -1)
      for (let b = t; b < this._timeline.length; b++) {
        const y = this._timeline[b];
        if (y.state === i) return y;
      }
  }
}
class At extends mr {
  constructor() {
    super($e(At.getDefaults(), arguments, ['param', 'units', 'convert'])),
      (this.name = 'Param'),
      (this.overridden = !1),
      (this._minOutput = 1e-7);
    const i = $e(At.getDefaults(), arguments, ['param', 'units', 'convert']);
    for (
      ut(
        ht(i.param) && (mn(i.param) || i.param instanceof At),
        'param must be an AudioParam',
      );
      !mn(i.param);

    )
      i.param = i.param._param;
    (this._swappable = ht(i.swappable) ? i.swappable : !1),
      this._swappable
        ? ((this.input = this.context.createGain()),
          (this._param = i.param),
          this.input.connect(this._param))
        : (this._param = this.input = i.param),
      (this._events = new Vr(1e3)),
      (this._initialValue = this._param.defaultValue),
      (this.units = i.units),
      (this.convert = i.convert),
      (this._minValue = i.minValue),
      (this._maxValue = i.maxValue),
      ht(i.value) &&
        i.value !== this._toType(this._initialValue) &&
        this.setValueAtTime(i.value, 0);
  }
  static getDefaults() {
    return Object.assign(mr.getDefaults(), { convert: !0, units: 'number' });
  }
  get value() {
    const i = this.now();
    return this.getValueAtTime(i);
  }
  set value(i) {
    this.cancelScheduledValues(this.now()), this.setValueAtTime(i, this.now());
  }
  get minValue() {
    return ht(this._minValue)
      ? this._minValue
      : this.units === 'time' ||
        this.units === 'frequency' ||
        this.units === 'normalRange' ||
        this.units === 'positive' ||
        this.units === 'transportTime' ||
        this.units === 'ticks' ||
        this.units === 'bpm' ||
        this.units === 'hertz' ||
        this.units === 'samples'
      ? 0
      : this.units === 'audioRange'
      ? -1
      : this.units === 'decibels'
      ? -1 / 0
      : this._param.minValue;
  }
  get maxValue() {
    return ht(this._maxValue)
      ? this._maxValue
      : this.units === 'normalRange' || this.units === 'audioRange'
      ? 1
      : this._param.maxValue;
  }
  _is(i, m) {
    return this.units === m;
  }
  _assertRange(i) {
    return (
      ht(this.maxValue) &&
        ht(this.minValue) &&
        nn(i, this._fromType(this.minValue), this._fromType(this.maxValue)),
      i
    );
  }
  _fromType(i) {
    return this.convert && !this.overridden
      ? this._is(i, 'time')
        ? this.toSeconds(i)
        : this._is(i, 'decibels')
        ? Cp(i)
        : this._is(i, 'frequency')
        ? this.toFrequency(i)
        : i
      : this.overridden
      ? 0
      : i;
  }
  _toType(i) {
    return this.convert && this.units === 'decibels' ? Ep(i) : i;
  }
  setValueAtTime(i, m) {
    const t = this.toSeconds(m),
      b = this._fromType(i);
    return (
      ut(
        isFinite(b) && isFinite(t),
        `Invalid argument(s) to setValueAtTime: ${JSON.stringify(
          i,
        )}, ${JSON.stringify(m)}`,
      ),
      this._assertRange(b),
      this.log(this.units, 'setValueAtTime', i, t),
      this._events.add({ time: t, type: 'setValueAtTime', value: b }),
      this._param.setValueAtTime(b, t),
      this
    );
  }
  getValueAtTime(i) {
    const m = Math.max(this.toSeconds(i), 0),
      t = this._events.getAfter(m),
      b = this._events.get(m);
    let y = this._initialValue;
    if (b === null) y = this._initialValue;
    else if (
      b.type === 'setTargetAtTime' &&
      (t === null || t.type === 'setValueAtTime')
    ) {
      const u = this._events.getBefore(b.time);
      let a;
      u === null ? (a = this._initialValue) : (a = u.value),
        b.type === 'setTargetAtTime' &&
          (y = this._exponentialApproach(b.time, a, b.value, b.constant, m));
    } else if (t === null) y = b.value;
    else if (
      t.type === 'linearRampToValueAtTime' ||
      t.type === 'exponentialRampToValueAtTime'
    ) {
      let u = b.value;
      if (b.type === 'setTargetAtTime') {
        const a = this._events.getBefore(b.time);
        a === null ? (u = this._initialValue) : (u = a.value);
      }
      t.type === 'linearRampToValueAtTime'
        ? (y = this._linearInterpolate(b.time, u, t.time, t.value, m))
        : (y = this._exponentialInterpolate(b.time, u, t.time, t.value, m));
    } else y = b.value;
    return this._toType(y);
  }
  setRampPoint(i) {
    i = this.toSeconds(i);
    let m = this.getValueAtTime(i);
    return (
      this.cancelAndHoldAtTime(i),
      this._fromType(m) === 0 && (m = this._toType(this._minOutput)),
      this.setValueAtTime(m, i),
      this
    );
  }
  linearRampToValueAtTime(i, m) {
    const t = this._fromType(i),
      b = this.toSeconds(m);
    return (
      ut(
        isFinite(t) && isFinite(b),
        `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(
          i,
        )}, ${JSON.stringify(m)}`,
      ),
      this._assertRange(t),
      this._events.add({ time: b, type: 'linearRampToValueAtTime', value: t }),
      this.log(this.units, 'linearRampToValueAtTime', i, b),
      this._param.linearRampToValueAtTime(t, b),
      this
    );
  }
  exponentialRampToValueAtTime(i, m) {
    let t = this._fromType(i);
    (t = Sr(t, 0) ? this._minOutput : t), this._assertRange(t);
    const b = this.toSeconds(m);
    return (
      ut(
        isFinite(t) && isFinite(b),
        `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(
          i,
        )}, ${JSON.stringify(m)}`,
      ),
      this._events.add({
        time: b,
        type: 'exponentialRampToValueAtTime',
        value: t,
      }),
      this.log(this.units, 'exponentialRampToValueAtTime', i, b),
      this._param.exponentialRampToValueAtTime(t, b),
      this
    );
  }
  exponentialRampTo(i, m, t) {
    return (
      (t = this.toSeconds(t)),
      this.setRampPoint(t),
      this.exponentialRampToValueAtTime(i, t + this.toSeconds(m)),
      this
    );
  }
  linearRampTo(i, m, t) {
    return (
      (t = this.toSeconds(t)),
      this.setRampPoint(t),
      this.linearRampToValueAtTime(i, t + this.toSeconds(m)),
      this
    );
  }
  targetRampTo(i, m, t) {
    return (
      (t = this.toSeconds(t)),
      this.setRampPoint(t),
      this.exponentialApproachValueAtTime(i, t, m),
      this
    );
  }
  exponentialApproachValueAtTime(i, m, t) {
    (m = this.toSeconds(m)), (t = this.toSeconds(t));
    const b = Math.log(t + 1) / Math.log(200);
    return (
      this.setTargetAtTime(i, m, b),
      this.cancelAndHoldAtTime(m + t * 0.9),
      this.linearRampToValueAtTime(i, m + t),
      this
    );
  }
  setTargetAtTime(i, m, t) {
    const b = this._fromType(i);
    ut(isFinite(t) && t > 0, 'timeConstant must be a number greater than 0');
    const y = this.toSeconds(m);
    return (
      this._assertRange(b),
      ut(
        isFinite(b) && isFinite(y),
        `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(
          i,
        )}, ${JSON.stringify(m)}`,
      ),
      this._events.add({
        constant: t,
        time: y,
        type: 'setTargetAtTime',
        value: b,
      }),
      this.log(this.units, 'setTargetAtTime', i, y, t),
      this._param.setTargetAtTime(b, y, t),
      this
    );
  }
  setValueCurveAtTime(i, m, t, b = 1) {
    (t = this.toSeconds(t)), (m = this.toSeconds(m));
    const y = this._fromType(i[0]) * b;
    this.setValueAtTime(this._toType(y), m);
    const u = t / (i.length - 1);
    for (let a = 1; a < i.length; a++) {
      const r = this._fromType(i[a]) * b;
      this.linearRampToValueAtTime(this._toType(r), m + a * u);
    }
    return this;
  }
  cancelScheduledValues(i) {
    const m = this.toSeconds(i);
    return (
      ut(
        isFinite(m),
        `Invalid argument to cancelScheduledValues: ${JSON.stringify(i)}`,
      ),
      this._events.cancel(m),
      this._param.cancelScheduledValues(m),
      this.log(this.units, 'cancelScheduledValues', m),
      this
    );
  }
  cancelAndHoldAtTime(i) {
    const m = this.toSeconds(i),
      t = this._fromType(this.getValueAtTime(m));
    ut(
      isFinite(m),
      `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(i)}`,
    ),
      this.log(this.units, 'cancelAndHoldAtTime', m, 'value=' + t);
    const b = this._events.get(m),
      y = this._events.getAfter(m);
    return (
      b && Sr(b.time, m)
        ? y
          ? (this._param.cancelScheduledValues(y.time),
            this._events.cancel(y.time))
          : (this._param.cancelAndHoldAtTime(m),
            this._events.cancel(m + this.sampleTime))
        : y &&
          (this._param.cancelScheduledValues(y.time),
          this._events.cancel(y.time),
          y.type === 'linearRampToValueAtTime'
            ? this.linearRampToValueAtTime(this._toType(t), m)
            : y.type === 'exponentialRampToValueAtTime' &&
              this.exponentialRampToValueAtTime(this._toType(t), m)),
      this._events.add({ time: m, type: 'setValueAtTime', value: t }),
      this._param.setValueAtTime(t, m),
      this
    );
  }
  rampTo(i, m = 0.1, t) {
    return (
      this.units === 'frequency' ||
      this.units === 'bpm' ||
      this.units === 'decibels'
        ? this.exponentialRampTo(i, m, t)
        : this.linearRampTo(i, m, t),
      this
    );
  }
  apply(i) {
    const m = this.context.currentTime;
    i.setValueAtTime(this.getValueAtTime(m), m);
    const t = this._events.get(m);
    if (t && t.type === 'setTargetAtTime') {
      const b = this._events.getAfter(t.time),
        y = b ? b.time : m + 2,
        u = (y - m) / 10;
      for (let a = m; a < y; a += u)
        i.linearRampToValueAtTime(this.getValueAtTime(a), a);
    }
    return (
      this._events.forEachAfter(this.context.currentTime, (b) => {
        b.type === 'cancelScheduledValues'
          ? i.cancelScheduledValues(b.time)
          : b.type === 'setTargetAtTime'
          ? i.setTargetAtTime(b.value, b.time, b.constant)
          : i[b.type](b.value, b.time);
      }),
      this
    );
  }
  setParam(i) {
    ut(
      this._swappable,
      "The Param must be assigned as 'swappable' in the constructor",
    );
    const m = this.input;
    return (
      m.disconnect(this._param),
      this.apply(i),
      (this._param = i),
      m.connect(this._param),
      this
    );
  }
  dispose() {
    return super.dispose(), this._events.dispose(), this;
  }
  get defaultValue() {
    return this._toType(this._param.defaultValue);
  }
  _exponentialApproach(i, m, t, b, y) {
    return t + (m - t) * Math.exp(-(y - i) / b);
  }
  _linearInterpolate(i, m, t, b, y) {
    return m + (b - m) * ((y - i) / (t - i));
  }
  _exponentialInterpolate(i, m, t, b, y) {
    return m * Math.pow(b / m, (y - i) / (t - i));
  }
}
class dt extends mr {
  constructor() {
    super(...arguments),
      (this.name = 'ToneAudioNode'),
      (this._internalChannels = []);
  }
  get numberOfInputs() {
    return ht(this.input)
      ? mn(this.input) || this.input instanceof At
        ? 1
        : this.input.numberOfInputs
      : 0;
  }
  get numberOfOutputs() {
    return ht(this.output) ? this.output.numberOfOutputs : 0;
  }
  _isAudioNode(i) {
    return ht(i) && (i instanceof dt || rn(i));
  }
  _getInternalNodes() {
    const i = this._internalChannels.slice(0);
    return (
      this._isAudioNode(this.input) && i.push(this.input),
      this._isAudioNode(this.output) &&
        this.input !== this.output &&
        i.push(this.output),
      i
    );
  }
  _setChannelProperties(i) {
    this._getInternalNodes().forEach((t) => {
      (t.channelCount = i.channelCount),
        (t.channelCountMode = i.channelCountMode),
        (t.channelInterpretation = i.channelInterpretation);
    });
  }
  _getChannelProperties() {
    const i = this._getInternalNodes();
    ut(i.length > 0, 'ToneAudioNode does not have any internal nodes');
    const m = i[0];
    return {
      channelCount: m.channelCount,
      channelCountMode: m.channelCountMode,
      channelInterpretation: m.channelInterpretation,
    };
  }
  get channelCount() {
    return this._getChannelProperties().channelCount;
  }
  set channelCount(i) {
    const m = this._getChannelProperties();
    this._setChannelProperties(Object.assign(m, { channelCount: i }));
  }
  get channelCountMode() {
    return this._getChannelProperties().channelCountMode;
  }
  set channelCountMode(i) {
    const m = this._getChannelProperties();
    this._setChannelProperties(Object.assign(m, { channelCountMode: i }));
  }
  get channelInterpretation() {
    return this._getChannelProperties().channelInterpretation;
  }
  set channelInterpretation(i) {
    const m = this._getChannelProperties();
    this._setChannelProperties(Object.assign(m, { channelInterpretation: i }));
  }
  connect(i, m = 0, t = 0) {
    return Gn(this, i, m, t), this;
  }
  toDestination() {
    return this.connect(this.context.destination), this;
  }
  toMaster() {
    return (
      ml('toMaster() has been renamed toDestination()'), this.toDestination()
    );
  }
  disconnect(i, m = 0, t = 0) {
    return Ip(this, i, m, t), this;
  }
  chain(...i) {
    return Bo(this, ...i), this;
  }
  fan(...i) {
    return i.forEach((m) => this.connect(m)), this;
  }
  dispose() {
    return (
      super.dispose(),
      ht(this.input) &&
        (this.input instanceof dt
          ? this.input.dispose()
          : rn(this.input) && this.input.disconnect()),
      ht(this.output) &&
        (this.output instanceof dt
          ? this.output.dispose()
          : rn(this.output) && this.output.disconnect()),
      (this._internalChannels = []),
      this
    );
  }
}
function Bo(...T) {
  const i = T.shift();
  T.reduce(
    (m, t) => (m instanceof dt ? m.connect(t) : rn(m) && Gn(m, t), t),
    i,
  );
}
function Gn(T, i, m = 0, t = 0) {
  for (
    ut(ht(T), 'Cannot connect from undefined node'),
      ut(ht(i), 'Cannot connect to undefined node'),
      (i instanceof dt || rn(i)) &&
        ut(i.numberOfInputs > 0, 'Cannot connect to node with no inputs'),
      ut(T.numberOfOutputs > 0, 'Cannot connect from node with no outputs');
    i instanceof dt || i instanceof At;

  )
    ht(i.input) && (i = i.input);
  for (; T instanceof dt; ) ht(T.output) && (T = T.output);
  mn(i) ? T.connect(i, m) : T.connect(i, m, t);
}
function Ip(T, i, m = 0, t = 0) {
  if (ht(i)) for (; i instanceof dt; ) i = i.input;
  for (; !rn(T); ) ht(T.output) && (T = T.output);
  mn(i) ? T.disconnect(i, m) : rn(i) ? T.disconnect(i, m, t) : T.disconnect();
}
class hr extends dt {
  constructor() {
    super($e(hr.getDefaults(), arguments, ['gain', 'units'])),
      (this.name = 'Gain'),
      (this._gainNode = this.context.createGain()),
      (this.input = this._gainNode),
      (this.output = this._gainNode);
    const i = $e(hr.getDefaults(), arguments, ['gain', 'units']);
    (this.gain = new At({
      context: this.context,
      convert: i.convert,
      param: this._gainNode.gain,
      units: i.units,
      value: i.gain,
      minValue: i.minValue,
      maxValue: i.maxValue,
    })),
      Nt(this, 'gain');
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      convert: !0,
      gain: 1,
      units: 'gain',
    });
  }
  dispose() {
    return (
      super.dispose(), this._gainNode.disconnect(), this.gain.dispose(), this
    );
  }
}
class In extends dt {
  constructor(i) {
    super(i),
      (this.onended = xt),
      (this._startTime = -1),
      (this._stopTime = -1),
      (this._timeout = -1),
      (this.output = new hr({ context: this.context, gain: 0 })),
      (this._gainNode = this.output),
      (this.getStateAtTime = function (m) {
        const t = this.toSeconds(m);
        return this._startTime !== -1 &&
          t >= this._startTime &&
          (this._stopTime === -1 || t <= this._stopTime)
          ? 'started'
          : 'stopped';
      }),
      (this._fadeIn = i.fadeIn),
      (this._fadeOut = i.fadeOut),
      (this._curve = i.curve),
      (this.onended = i.onended);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      curve: 'linear',
      fadeIn: 0,
      fadeOut: 0,
      onended: xt,
    });
  }
  _startGain(i, m = 1) {
    ut(this._startTime === -1, 'Source cannot be started more than once');
    const t = this.toSeconds(this._fadeIn);
    return (
      (this._startTime = i + t),
      (this._startTime = Math.max(this._startTime, this.context.currentTime)),
      t > 0
        ? (this._gainNode.gain.setValueAtTime(0, i),
          this._curve === 'linear'
            ? this._gainNode.gain.linearRampToValueAtTime(m, i + t)
            : this._gainNode.gain.exponentialApproachValueAtTime(m, i, t))
        : this._gainNode.gain.setValueAtTime(m, i),
      this
    );
  }
  stop(i) {
    return this.log('stop', i), this._stopGain(this.toSeconds(i)), this;
  }
  _stopGain(i) {
    ut(this._startTime !== -1, "'start' must be called before 'stop'"),
      this.cancelStop();
    const m = this.toSeconds(this._fadeOut);
    return (
      (this._stopTime = this.toSeconds(i) + m),
      (this._stopTime = Math.max(this._stopTime, this.context.currentTime)),
      m > 0
        ? this._curve === 'linear'
          ? this._gainNode.gain.linearRampTo(0, m, i)
          : this._gainNode.gain.targetRampTo(0, m, i)
        : (this._gainNode.gain.cancelAndHoldAtTime(i),
          this._gainNode.gain.setValueAtTime(0, i)),
      this.context.clearTimeout(this._timeout),
      (this._timeout = this.context.setTimeout(() => {
        const t = this._curve === 'exponential' ? m * 2 : 0;
        this._stopSource(this.now() + t), this._onended();
      }, this._stopTime - this.context.currentTime)),
      this
    );
  }
  _onended() {
    if (
      this.onended !== xt &&
      (this.onended(this), (this.onended = xt), !this.context.isOffline)
    ) {
      const i = () => this.dispose();
      typeof window.requestIdleCallback < 'u'
        ? window.requestIdleCallback(i)
        : setTimeout(i, 1e3);
    }
  }
  get state() {
    return this.getStateAtTime(this.now());
  }
  cancelStop() {
    return (
      this.log('cancelStop'),
      ut(this._startTime !== -1, 'Source is not started'),
      this._gainNode.gain.cancelScheduledValues(
        this._startTime + this.sampleTime,
      ),
      this.context.clearTimeout(this._timeout),
      (this._stopTime = -1),
      this
    );
  }
  dispose() {
    return super.dispose(), this._gainNode.disconnect(), this;
  }
}
class $s extends In {
  constructor() {
    super($e($s.getDefaults(), arguments, ['offset'])),
      (this.name = 'ToneConstantSource'),
      (this._source = this.context.createConstantSource());
    const i = $e($s.getDefaults(), arguments, ['offset']);
    Gn(this._source, this._gainNode),
      (this.offset = new At({
        context: this.context,
        convert: i.convert,
        param: this._source.offset,
        units: i.units,
        value: i.offset,
        minValue: i.minValue,
        maxValue: i.maxValue,
      }));
  }
  static getDefaults() {
    return Object.assign(In.getDefaults(), {
      convert: !0,
      offset: 1,
      units: 'number',
    });
  }
  start(i) {
    const m = this.toSeconds(i);
    return (
      this.log('start', m), this._startGain(m), this._source.start(m), this
    );
  }
  _stopSource(i) {
    this._source.stop(i);
  }
  dispose() {
    return (
      super.dispose(),
      this.state === 'started' && this.stop(),
      this._source.disconnect(),
      this.offset.dispose(),
      this
    );
  }
}
class Zt extends dt {
  constructor() {
    super($e(Zt.getDefaults(), arguments, ['value', 'units'])),
      (this.name = 'Signal'),
      (this.override = !0);
    const i = $e(Zt.getDefaults(), arguments, ['value', 'units']);
    (this.output = this._constantSource =
      new $s({
        context: this.context,
        convert: i.convert,
        offset: i.value,
        units: i.units,
        minValue: i.minValue,
        maxValue: i.maxValue,
      })),
      this._constantSource.start(0),
      (this.input = this._param = this._constantSource.offset);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      convert: !0,
      units: 'number',
      value: 0,
    });
  }
  connect(i, m = 0, t = 0) {
    return ci(this, i, m, t), this;
  }
  dispose() {
    return (
      super.dispose(),
      this._param.dispose(),
      this._constantSource.dispose(),
      this
    );
  }
  setValueAtTime(i, m) {
    return this._param.setValueAtTime(i, m), this;
  }
  getValueAtTime(i) {
    return this._param.getValueAtTime(i);
  }
  setRampPoint(i) {
    return this._param.setRampPoint(i), this;
  }
  linearRampToValueAtTime(i, m) {
    return this._param.linearRampToValueAtTime(i, m), this;
  }
  exponentialRampToValueAtTime(i, m) {
    return this._param.exponentialRampToValueAtTime(i, m), this;
  }
  exponentialRampTo(i, m, t) {
    return this._param.exponentialRampTo(i, m, t), this;
  }
  linearRampTo(i, m, t) {
    return this._param.linearRampTo(i, m, t), this;
  }
  targetRampTo(i, m, t) {
    return this._param.targetRampTo(i, m, t), this;
  }
  exponentialApproachValueAtTime(i, m, t) {
    return this._param.exponentialApproachValueAtTime(i, m, t), this;
  }
  setTargetAtTime(i, m, t) {
    return this._param.setTargetAtTime(i, m, t), this;
  }
  setValueCurveAtTime(i, m, t, b) {
    return this._param.setValueCurveAtTime(i, m, t, b), this;
  }
  cancelScheduledValues(i) {
    return this._param.cancelScheduledValues(i), this;
  }
  cancelAndHoldAtTime(i) {
    return this._param.cancelAndHoldAtTime(i), this;
  }
  rampTo(i, m, t) {
    return this._param.rampTo(i, m, t), this;
  }
  get value() {
    return this._param.value;
  }
  set value(i) {
    this._param.value = i;
  }
  get convert() {
    return this._param.convert;
  }
  set convert(i) {
    this._param.convert = i;
  }
  get units() {
    return this._param.units;
  }
  get overridden() {
    return this._param.overridden;
  }
  set overridden(i) {
    this._param.overridden = i;
  }
  get maxValue() {
    return this._param.maxValue;
  }
  get minValue() {
    return this._param.minValue;
  }
  apply(i) {
    return this._param.apply(i), this;
  }
}
function ci(T, i, m, t) {
  (i instanceof At || mn(i) || (i instanceof Zt && i.override)) &&
    (i.cancelScheduledValues(0),
    i.setValueAtTime(0, 0),
    i instanceof Zt && (i.overridden = !0)),
    Gn(T, i, m, t);
}
class Qs extends At {
  constructor() {
    super($e(Qs.getDefaults(), arguments, ['value'])),
      (this.name = 'TickParam'),
      (this._events = new Vr(1 / 0)),
      (this._multiplier = 1);
    const i = $e(Qs.getDefaults(), arguments, ['value']);
    (this._multiplier = i.multiplier),
      this._events.cancel(0),
      this._events.add({
        ticks: 0,
        time: 0,
        type: 'setValueAtTime',
        value: this._fromType(i.value),
      }),
      this.setValueAtTime(i.value, 0);
  }
  static getDefaults() {
    return Object.assign(At.getDefaults(), {
      multiplier: 1,
      units: 'hertz',
      value: 1,
    });
  }
  setTargetAtTime(i, m, t) {
    (m = this.toSeconds(m)), this.setRampPoint(m);
    const b = this._fromType(i),
      y = this._events.get(m),
      u = Math.round(Math.max(1 / t, 1));
    for (let a = 0; a <= u; a++) {
      const r = t * a + m,
        l = this._exponentialApproach(y.time, y.value, b, t, r);
      this.linearRampToValueAtTime(this._toType(l), r);
    }
    return this;
  }
  setValueAtTime(i, m) {
    const t = this.toSeconds(m);
    super.setValueAtTime(i, m);
    const b = this._events.get(t),
      y = this._events.previousEvent(b),
      u = this._getTicksUntilEvent(y, t);
    return (b.ticks = Math.max(u, 0)), this;
  }
  linearRampToValueAtTime(i, m) {
    const t = this.toSeconds(m);
    super.linearRampToValueAtTime(i, m);
    const b = this._events.get(t),
      y = this._events.previousEvent(b),
      u = this._getTicksUntilEvent(y, t);
    return (b.ticks = Math.max(u, 0)), this;
  }
  exponentialRampToValueAtTime(i, m) {
    m = this.toSeconds(m);
    const t = this._fromType(i),
      b = this._events.get(m),
      y = Math.round(Math.max((m - b.time) * 10, 1)),
      u = (m - b.time) / y;
    for (let a = 0; a <= y; a++) {
      const r = u * a + b.time,
        l = this._exponentialInterpolate(b.time, b.value, m, t, r);
      this.linearRampToValueAtTime(this._toType(l), r);
    }
    return this;
  }
  _getTicksUntilEvent(i, m) {
    if (i === null) i = { ticks: 0, time: 0, type: 'setValueAtTime', value: 0 };
    else if (_r(i.ticks)) {
      const u = this._events.previousEvent(i);
      i.ticks = this._getTicksUntilEvent(u, i.time);
    }
    const t = this._fromType(this.getValueAtTime(i.time));
    let b = this._fromType(this.getValueAtTime(m));
    const y = this._events.get(m);
    return (
      y &&
        y.time === m &&
        y.type === 'setValueAtTime' &&
        (b = this._fromType(this.getValueAtTime(m - this.sampleTime))),
      0.5 * (m - i.time) * (t + b) + i.ticks
    );
  }
  getTicksAtTime(i) {
    const m = this.toSeconds(i),
      t = this._events.get(m);
    return Math.max(this._getTicksUntilEvent(t, m), 0);
  }
  getDurationOfTicks(i, m) {
    const t = this.toSeconds(m),
      b = this.getTicksAtTime(m);
    return this.getTimeOfTick(b + i) - t;
  }
  getTimeOfTick(i) {
    const m = this._events.get(i, 'ticks'),
      t = this._events.getAfter(i, 'ticks');
    if (m && m.ticks === i) return m.time;
    if (m && t && t.type === 'linearRampToValueAtTime' && m.value !== t.value) {
      const b = this._fromType(this.getValueAtTime(m.time)),
        u =
          (this._fromType(this.getValueAtTime(t.time)) - b) / (t.time - m.time),
        a = Math.sqrt(Math.pow(b, 2) - 2 * u * (m.ticks - i)),
        r = (-b + a) / u,
        l = (-b - a) / u;
      return (r > 0 ? r : l) + m.time;
    } else
      return m
        ? m.value === 0
          ? 1 / 0
          : m.time + (i - m.ticks) / m.value
        : i / this._initialValue;
  }
  ticksToTime(i, m) {
    return this.getDurationOfTicks(i, m);
  }
  timeToTicks(i, m) {
    const t = this.toSeconds(m),
      b = this.toSeconds(i),
      y = this.getTicksAtTime(t);
    return this.getTicksAtTime(t + b) - y;
  }
  _fromType(i) {
    return this.units === 'bpm' && this.multiplier
      ? 1 / (60 / i / this.multiplier)
      : super._fromType(i);
  }
  _toType(i) {
    return this.units === 'bpm' && this.multiplier
      ? (i / this.multiplier) * 60
      : super._toType(i);
  }
  get multiplier() {
    return this._multiplier;
  }
  set multiplier(i) {
    const m = this.value;
    (this._multiplier = i),
      this.cancelScheduledValues(0),
      this.setValueAtTime(m, 0);
  }
}
class Js extends Zt {
  constructor() {
    super($e(Js.getDefaults(), arguments, ['value'])),
      (this.name = 'TickSignal');
    const i = $e(Js.getDefaults(), arguments, ['value']);
    this.input = this._param = new Qs({
      context: this.context,
      convert: i.convert,
      multiplier: i.multiplier,
      param: this._constantSource.offset,
      units: i.units,
      value: i.value,
    });
  }
  static getDefaults() {
    return Object.assign(Zt.getDefaults(), {
      multiplier: 1,
      units: 'hertz',
      value: 1,
    });
  }
  ticksToTime(i, m) {
    return this._param.ticksToTime(i, m);
  }
  timeToTicks(i, m) {
    return this._param.timeToTicks(i, m);
  }
  getTimeOfTick(i) {
    return this._param.getTimeOfTick(i);
  }
  getDurationOfTicks(i, m) {
    return this._param.getDurationOfTicks(i, m);
  }
  getTicksAtTime(i) {
    return this._param.getTicksAtTime(i);
  }
  get multiplier() {
    return this._param.multiplier;
  }
  set multiplier(i) {
    this._param.multiplier = i;
  }
  dispose() {
    return super.dispose(), this._param.dispose(), this;
  }
}
class Ks extends mr {
  constructor() {
    super($e(Ks.getDefaults(), arguments, ['frequency'])),
      (this.name = 'TickSource'),
      (this._state = new ui()),
      (this._tickOffset = new Vr());
    const i = $e(Ks.getDefaults(), arguments, ['frequency']);
    (this.frequency = new Js({
      context: this.context,
      units: i.units,
      value: i.frequency,
    })),
      Nt(this, 'frequency'),
      this._state.setStateAtTime('stopped', 0),
      this.setTicksAtTime(0, 0);
  }
  static getDefaults() {
    return Object.assign({ frequency: 1, units: 'hertz' }, mr.getDefaults());
  }
  get state() {
    return this.getStateAtTime(this.now());
  }
  start(i, m) {
    const t = this.toSeconds(i);
    return (
      this._state.getValueAtTime(t) !== 'started' &&
        (this._state.setStateAtTime('started', t),
        ht(m) && this.setTicksAtTime(m, t)),
      this
    );
  }
  stop(i) {
    const m = this.toSeconds(i);
    if (this._state.getValueAtTime(m) === 'stopped') {
      const t = this._state.get(m);
      t &&
        t.time > 0 &&
        (this._tickOffset.cancel(t.time), this._state.cancel(t.time));
    }
    return (
      this._state.cancel(m),
      this._state.setStateAtTime('stopped', m),
      this.setTicksAtTime(0, m),
      this
    );
  }
  pause(i) {
    const m = this.toSeconds(i);
    return (
      this._state.getValueAtTime(m) === 'started' &&
        this._state.setStateAtTime('paused', m),
      this
    );
  }
  cancel(i) {
    return (
      (i = this.toSeconds(i)),
      this._state.cancel(i),
      this._tickOffset.cancel(i),
      this
    );
  }
  getTicksAtTime(i) {
    const m = this.toSeconds(i),
      t = this._state.getLastState('stopped', m),
      b = { state: 'paused', time: m };
    this._state.add(b);
    let y = t,
      u = 0;
    return (
      this._state.forEachBetween(t.time, m + this.sampleTime, (a) => {
        let r = y.time;
        const l = this._tickOffset.get(a.time);
        l && l.time >= y.time && ((u = l.ticks), (r = l.time)),
          y.state === 'started' &&
            a.state !== 'started' &&
            (u +=
              this.frequency.getTicksAtTime(a.time) -
              this.frequency.getTicksAtTime(r)),
          (y = a);
      }),
      this._state.remove(b),
      u
    );
  }
  get ticks() {
    return this.getTicksAtTime(this.now());
  }
  set ticks(i) {
    this.setTicksAtTime(i, this.now());
  }
  get seconds() {
    return this.getSecondsAtTime(this.now());
  }
  set seconds(i) {
    const m = this.now(),
      t = this.frequency.timeToTicks(i, m);
    this.setTicksAtTime(t, m);
  }
  getSecondsAtTime(i) {
    i = this.toSeconds(i);
    const m = this._state.getLastState('stopped', i),
      t = { state: 'paused', time: i };
    this._state.add(t);
    let b = m,
      y = 0;
    return (
      this._state.forEachBetween(m.time, i + this.sampleTime, (u) => {
        let a = b.time;
        const r = this._tickOffset.get(u.time);
        r && r.time >= b.time && ((y = r.seconds), (a = r.time)),
          b.state === 'started' && u.state !== 'started' && (y += u.time - a),
          (b = u);
      }),
      this._state.remove(t),
      y
    );
  }
  setTicksAtTime(i, m) {
    return (
      (m = this.toSeconds(m)),
      this._tickOffset.cancel(m),
      this._tickOffset.add({
        seconds: this.frequency.getDurationOfTicks(i, m),
        ticks: i,
        time: m,
      }),
      this
    );
  }
  getStateAtTime(i) {
    return (i = this.toSeconds(i)), this._state.getValueAtTime(i);
  }
  getTimeOfTick(i, m = this.now()) {
    const t = this._tickOffset.get(m),
      b = this._state.get(m),
      y = Math.max(t.time, b.time),
      u = this.frequency.getTicksAtTime(y) + i - t.ticks;
    return this.frequency.getTimeOfTick(u);
  }
  forEachTickBetween(i, m, t) {
    let b = this._state.get(i);
    this._state.forEachBetween(i, m, (u) => {
      b &&
        b.state === 'started' &&
        u.state !== 'started' &&
        this.forEachTickBetween(
          Math.max(b.time, i),
          u.time - this.sampleTime,
          t,
        ),
        (b = u);
    });
    let y = null;
    if (b && b.state === 'started') {
      const u = Math.max(b.time, i),
        a = this.frequency.getTicksAtTime(u),
        r = this.frequency.getTicksAtTime(b.time),
        l = a - r;
      let d = Math.ceil(l) - l;
      d = Sr(d, 1) ? 0 : d;
      let h = this.frequency.getTimeOfTick(a + d);
      for (; h < m; ) {
        try {
          t(h, Math.round(this.getTicksAtTime(h)));
        } catch (o) {
          y = o;
          break;
        }
        h += this.frequency.getDurationOfTicks(1, h);
      }
    }
    if (y) throw y;
    return this;
  }
  dispose() {
    return (
      super.dispose(),
      this._state.dispose(),
      this._tickOffset.dispose(),
      this.frequency.dispose(),
      this
    );
  }
}
class ns extends mr {
  constructor() {
    super($e(ns.getDefaults(), arguments, ['callback', 'frequency'])),
      (this.name = 'Clock'),
      (this.callback = xt),
      (this._lastUpdate = 0),
      (this._state = new ui('stopped')),
      (this._boundLoop = this._loop.bind(this));
    const i = $e(ns.getDefaults(), arguments, ['callback', 'frequency']);
    (this.callback = i.callback),
      (this._tickSource = new Ks({
        context: this.context,
        frequency: i.frequency,
        units: i.units,
      })),
      (this._lastUpdate = 0),
      (this.frequency = this._tickSource.frequency),
      Nt(this, 'frequency'),
      this._state.setStateAtTime('stopped', 0),
      this.context.on('tick', this._boundLoop);
  }
  static getDefaults() {
    return Object.assign(mr.getDefaults(), {
      callback: xt,
      frequency: 1,
      units: 'hertz',
    });
  }
  get state() {
    return this._state.getValueAtTime(this.now());
  }
  start(i, m) {
    fl(this.context);
    const t = this.toSeconds(i);
    return (
      this.log('start', t),
      this._state.getValueAtTime(t) !== 'started' &&
        (this._state.setStateAtTime('started', t),
        this._tickSource.start(t, m),
        t < this._lastUpdate && this.emit('start', t, m)),
      this
    );
  }
  stop(i) {
    const m = this.toSeconds(i);
    return (
      this.log('stop', m),
      this._state.cancel(m),
      this._state.setStateAtTime('stopped', m),
      this._tickSource.stop(m),
      m < this._lastUpdate && this.emit('stop', m),
      this
    );
  }
  pause(i) {
    const m = this.toSeconds(i);
    return (
      this._state.getValueAtTime(m) === 'started' &&
        (this._state.setStateAtTime('paused', m),
        this._tickSource.pause(m),
        m < this._lastUpdate && this.emit('pause', m)),
      this
    );
  }
  get ticks() {
    return Math.ceil(this.getTicksAtTime(this.now()));
  }
  set ticks(i) {
    this._tickSource.ticks = i;
  }
  get seconds() {
    return this._tickSource.seconds;
  }
  set seconds(i) {
    this._tickSource.seconds = i;
  }
  getSecondsAtTime(i) {
    return this._tickSource.getSecondsAtTime(i);
  }
  setTicksAtTime(i, m) {
    return this._tickSource.setTicksAtTime(i, m), this;
  }
  getTimeOfTick(i, m = this.now()) {
    return this._tickSource.getTimeOfTick(i, m);
  }
  getTicksAtTime(i) {
    return this._tickSource.getTicksAtTime(i);
  }
  nextTickTime(i, m) {
    const t = this.toSeconds(m),
      b = this.getTicksAtTime(t);
    return this._tickSource.getTimeOfTick(b + i, t);
  }
  _loop() {
    const i = this._lastUpdate,
      m = this.now();
    (this._lastUpdate = m),
      this.log('loop', i, m),
      i !== m &&
        (this._state.forEachBetween(i, m, (t) => {
          switch (t.state) {
            case 'started':
              const b = this._tickSource.getTicksAtTime(t.time);
              this.emit('start', t.time, b);
              break;
            case 'stopped':
              t.time !== 0 && this.emit('stop', t.time);
              break;
            case 'paused':
              this.emit('pause', t.time);
              break;
          }
        }),
        this._tickSource.forEachTickBetween(i, m, (t, b) => {
          this.callback(t, b);
        }));
  }
  getStateAtTime(i) {
    const m = this.toSeconds(i);
    return this._state.getValueAtTime(m);
  }
  dispose() {
    return (
      super.dispose(),
      this.context.off('tick', this._boundLoop),
      this._tickSource.dispose(),
      this._state.dispose(),
      this
    );
  }
}
js.mixin(ns);
class di extends Zr {
  constructor() {
    super(),
      (this.name = 'ToneAudioBuffers'),
      (this._buffers = new Map()),
      (this._loadingCount = 0);
    const i = $e(
      di.getDefaults(),
      arguments,
      ['urls', 'onload', 'baseUrl'],
      'urls',
    );
    (this.baseUrl = i.baseUrl),
      Object.keys(i.urls).forEach((m) => {
        this._loadingCount++;
        const t = i.urls[m];
        this.add(m, t, this._bufferLoaded.bind(this, i.onload), i.onerror);
      });
  }
  static getDefaults() {
    return { baseUrl: '', onerror: xt, onload: xt, urls: {} };
  }
  has(i) {
    return this._buffers.has(i.toString());
  }
  get(i) {
    return (
      ut(this.has(i), `ToneAudioBuffers has no buffer named: ${i}`),
      this._buffers.get(i.toString())
    );
  }
  _bufferLoaded(i) {
    this._loadingCount--, this._loadingCount === 0 && i && i();
  }
  get loaded() {
    return Array.from(this._buffers).every(([i, m]) => m.loaded);
  }
  add(i, m, t = xt, b = xt) {
    return (
      Nr(m)
        ? this._buffers.set(i.toString(), new Tt(this.baseUrl + m, t, b))
        : this._buffers.set(i.toString(), new Tt(m, t, b)),
      this
    );
  }
  dispose() {
    return (
      super.dispose(),
      this._buffers.forEach((i) => i.dispose()),
      this._buffers.clear(),
      this
    );
  }
}
class zr extends Kn {
  constructor() {
    super(...arguments), (this.name = 'Ticks'), (this.defaultUnits = 'i');
  }
  _now() {
    return this.context.transport.ticks;
  }
  _beatsToUnits(i) {
    return this._getPPQ() * i;
  }
  _secondsToUnits(i) {
    return Math.floor((i / (60 / this._getBpm())) * this._getPPQ());
  }
  _ticksToUnits(i) {
    return i;
  }
  toTicks() {
    return this.valueOf();
  }
  toSeconds() {
    return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());
  }
}
class Dp extends mr {
  constructor() {
    super(...arguments),
      (this.name = 'Draw'),
      (this.expiration = 0.25),
      (this.anticipation = 0.008),
      (this._events = new Vr()),
      (this._boundDrawLoop = this._drawLoop.bind(this)),
      (this._animationFrame = -1);
  }
  schedule(i, m) {
    return (
      this._events.add({ callback: i, time: this.toSeconds(m) }),
      this._events.length === 1 &&
        (this._animationFrame = requestAnimationFrame(this._boundDrawLoop)),
      this
    );
  }
  cancel(i) {
    return this._events.cancel(this.toSeconds(i)), this;
  }
  _drawLoop() {
    const i = this.context.currentTime;
    for (
      ;
      this._events.length && this._events.peek().time - this.anticipation <= i;

    ) {
      const m = this._events.shift();
      m && i - m.time <= this.expiration && m.callback();
    }
    this._events.length > 0 &&
      (this._animationFrame = requestAnimationFrame(this._boundDrawLoop));
  }
  dispose() {
    return (
      super.dispose(),
      this._events.dispose(),
      cancelAnimationFrame(this._animationFrame),
      this
    );
  }
}
yo((T) => {
  T.draw = new Dp({ context: T });
});
go((T) => {
  T.draw.dispose();
});
class Lp extends Zr {
  constructor() {
    super(...arguments),
      (this.name = 'IntervalTimeline'),
      (this._root = null),
      (this._length = 0);
  }
  add(i) {
    ut(ht(i.time), 'Events must have a time property'),
      ut(ht(i.duration), 'Events must have a duration parameter'),
      (i.time = i.time.valueOf());
    let m = new Np(i.time, i.time + i.duration, i);
    for (
      this._root === null ? (this._root = m) : this._root.insert(m),
        this._length++;
      m !== null;

    )
      m.updateHeight(), m.updateMax(), this._rebalance(m), (m = m.parent);
    return this;
  }
  remove(i) {
    if (this._root !== null) {
      const m = [];
      this._root.search(i.time, m);
      for (const t of m)
        if (t.event === i) {
          this._removeNode(t), this._length--;
          break;
        }
    }
    return this;
  }
  get length() {
    return this._length;
  }
  cancel(i) {
    return this.forEachFrom(i, (m) => this.remove(m)), this;
  }
  _setRoot(i) {
    (this._root = i), this._root !== null && (this._root.parent = null);
  }
  _replaceNodeInParent(i, m) {
    i.parent !== null
      ? (i.isLeftChild() ? (i.parent.left = m) : (i.parent.right = m),
        this._rebalance(i.parent))
      : this._setRoot(m);
  }
  _removeNode(i) {
    if (i.left === null && i.right === null) this._replaceNodeInParent(i, null);
    else if (i.right === null) this._replaceNodeInParent(i, i.left);
    else if (i.left === null) this._replaceNodeInParent(i, i.right);
    else {
      const m = i.getBalance();
      let t,
        b = null;
      if (m > 0)
        if (i.left.right === null) (t = i.left), (t.right = i.right), (b = t);
        else {
          for (t = i.left.right; t.right !== null; ) t = t.right;
          t.parent &&
            ((t.parent.right = t.left),
            (b = t.parent),
            (t.left = i.left),
            (t.right = i.right));
        }
      else if (i.right.left === null) (t = i.right), (t.left = i.left), (b = t);
      else {
        for (t = i.right.left; t.left !== null; ) t = t.left;
        t.parent &&
          ((t.parent.left = t.right),
          (b = t.parent),
          (t.left = i.left),
          (t.right = i.right));
      }
      i.parent !== null
        ? i.isLeftChild()
          ? (i.parent.left = t)
          : (i.parent.right = t)
        : this._setRoot(t),
        b && this._rebalance(b);
    }
    i.dispose();
  }
  _rotateLeft(i) {
    const m = i.parent,
      t = i.isLeftChild(),
      b = i.right;
    b && ((i.right = b.left), (b.left = i)),
      m !== null ? (t ? (m.left = b) : (m.right = b)) : this._setRoot(b);
  }
  _rotateRight(i) {
    const m = i.parent,
      t = i.isLeftChild(),
      b = i.left;
    b && ((i.left = b.right), (b.right = i)),
      m !== null ? (t ? (m.left = b) : (m.right = b)) : this._setRoot(b);
  }
  _rebalance(i) {
    const m = i.getBalance();
    m > 1 && i.left
      ? i.left.getBalance() < 0
        ? this._rotateLeft(i.left)
        : this._rotateRight(i)
      : m < -1 &&
        i.right &&
        (i.right.getBalance() > 0
          ? this._rotateRight(i.right)
          : this._rotateLeft(i));
  }
  get(i) {
    if (this._root !== null) {
      const m = [];
      if ((this._root.search(i, m), m.length > 0)) {
        let t = m[0];
        for (let b = 1; b < m.length; b++) m[b].low > t.low && (t = m[b]);
        return t.event;
      }
    }
    return null;
  }
  forEach(i) {
    if (this._root !== null) {
      const m = [];
      this._root.traverse((t) => m.push(t)),
        m.forEach((t) => {
          t.event && i(t.event);
        });
    }
    return this;
  }
  forEachAtTime(i, m) {
    if (this._root !== null) {
      const t = [];
      this._root.search(i, t),
        t.forEach((b) => {
          b.event && m(b.event);
        });
    }
    return this;
  }
  forEachFrom(i, m) {
    if (this._root !== null) {
      const t = [];
      this._root.searchAfter(i, t),
        t.forEach((b) => {
          b.event && m(b.event);
        });
    }
    return this;
  }
  dispose() {
    return (
      super.dispose(),
      this._root !== null && this._root.traverse((i) => i.dispose()),
      (this._root = null),
      this
    );
  }
}
class Np {
  constructor(i, m, t) {
    (this._left = null),
      (this._right = null),
      (this.parent = null),
      (this.height = 0),
      (this.event = t),
      (this.low = i),
      (this.high = m),
      (this.max = this.high);
  }
  insert(i) {
    i.low <= this.low
      ? this.left === null
        ? (this.left = i)
        : this.left.insert(i)
      : this.right === null
      ? (this.right = i)
      : this.right.insert(i);
  }
  search(i, m) {
    i > this.max ||
      (this.left !== null && this.left.search(i, m),
      this.low <= i && this.high > i && m.push(this),
      !(this.low > i) && this.right !== null && this.right.search(i, m));
  }
  searchAfter(i, m) {
    this.low >= i &&
      (m.push(this), this.left !== null && this.left.searchAfter(i, m)),
      this.right !== null && this.right.searchAfter(i, m);
  }
  traverse(i) {
    i(this),
      this.left !== null && this.left.traverse(i),
      this.right !== null && this.right.traverse(i);
  }
  updateHeight() {
    this.left !== null && this.right !== null
      ? (this.height = Math.max(this.left.height, this.right.height) + 1)
      : this.right !== null
      ? (this.height = this.right.height + 1)
      : this.left !== null
      ? (this.height = this.left.height + 1)
      : (this.height = 0);
  }
  updateMax() {
    (this.max = this.high),
      this.left !== null && (this.max = Math.max(this.max, this.left.max)),
      this.right !== null && (this.max = Math.max(this.max, this.right.max));
  }
  getBalance() {
    let i = 0;
    return (
      this.left !== null && this.right !== null
        ? (i = this.left.height - this.right.height)
        : this.left !== null
        ? (i = this.left.height + 1)
        : this.right !== null && (i = -(this.right.height + 1)),
      i
    );
  }
  isLeftChild() {
    return this.parent !== null && this.parent.left === this;
  }
  get left() {
    return this._left;
  }
  set left(i) {
    (this._left = i),
      i !== null && (i.parent = this),
      this.updateHeight(),
      this.updateMax();
  }
  get right() {
    return this._right;
  }
  set right(i) {
    (this._right = i),
      i !== null && (i.parent = this),
      this.updateHeight(),
      this.updateMax();
  }
  dispose() {
    (this.parent = null),
      (this._left = null),
      (this._right = null),
      (this.event = null);
  }
}
class yn extends dt {
  constructor() {
    super($e(yn.getDefaults(), arguments, ['volume'])), (this.name = 'Volume');
    const i = $e(yn.getDefaults(), arguments, ['volume']);
    (this.input = this.output =
      new hr({ context: this.context, gain: i.volume, units: 'decibels' })),
      (this.volume = this.output.gain),
      Nt(this, 'volume'),
      (this._unmutedVolume = i.volume),
      (this.mute = i.mute);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { mute: !1, volume: 0 });
  }
  get mute() {
    return this.volume.value === -1 / 0;
  }
  set mute(i) {
    !this.mute && i
      ? ((this._unmutedVolume = this.volume.value),
        (this.volume.value = -1 / 0))
      : this.mute && !i && (this.volume.value = this._unmutedVolume);
  }
  dispose() {
    return super.dispose(), this.input.dispose(), this.volume.dispose(), this;
  }
}
class eo extends dt {
  constructor() {
    super($e(eo.getDefaults(), arguments)),
      (this.name = 'Destination'),
      (this.input = new yn({ context: this.context })),
      (this.output = new hr({ context: this.context })),
      (this.volume = this.input.volume);
    const i = $e(eo.getDefaults(), arguments);
    Bo(this.input, this.output, this.context.rawContext.destination),
      (this.mute = i.mute),
      (this._internalChannels = [
        this.input,
        this.context.rawContext.destination,
        this.output,
      ]);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { mute: !1, volume: 0 });
  }
  get mute() {
    return this.input.mute;
  }
  set mute(i) {
    this.input.mute = i;
  }
  chain(...i) {
    return (
      this.input.disconnect(),
      i.unshift(this.input),
      i.push(this.output),
      Bo(...i),
      this
    );
  }
  get maxChannelCount() {
    return this.context.rawContext.destination.maxChannelCount;
  }
  dispose() {
    return super.dispose(), this.volume.dispose(), this;
  }
}
yo((T) => {
  T.destination = new eo({ context: T });
});
go((T) => {
  T.destination.dispose();
});
class Fp extends Zr {
  constructor(i) {
    super(),
      (this.name = 'TimelineValue'),
      (this._timeline = new Vr({ memory: 10 })),
      (this._initialValue = i);
  }
  set(i, m) {
    return this._timeline.add({ value: i, time: m }), this;
  }
  get(i) {
    const m = this._timeline.get(i);
    return m ? m.value : this._initialValue;
  }
}
class sn {
  constructor(i, m) {
    this.id = sn._eventId++;
    const t = Object.assign(sn.getDefaults(), m);
    (this.transport = i),
      (this.callback = t.callback),
      (this._once = t.once),
      (this.time = t.time);
  }
  static getDefaults() {
    return { callback: xt, once: !1, time: 0 };
  }
  invoke(i) {
    this.callback &&
      (this.callback(i), this._once && this.transport.clear(this.id));
  }
  dispose() {
    return (this.callback = void 0), this;
  }
}
sn._eventId = 0;
class hi extends sn {
  constructor(i, m) {
    super(i, m),
      (this._currentId = -1),
      (this._nextId = -1),
      (this._nextTick = this.time),
      (this._boundRestart = this._restart.bind(this));
    const t = Object.assign(hi.getDefaults(), m);
    (this.duration = new zr(i.context, t.duration).valueOf()),
      (this._interval = new zr(i.context, t.interval).valueOf()),
      (this._nextTick = t.time),
      this.transport.on('start', this._boundRestart),
      this.transport.on('loopStart', this._boundRestart),
      (this.context = this.transport.context),
      this._restart();
  }
  static getDefaults() {
    return Object.assign({}, sn.getDefaults(), {
      duration: 1 / 0,
      interval: 1,
      once: !1,
    });
  }
  invoke(i) {
    this._createEvents(i), super.invoke(i);
  }
  _createEvents(i) {
    const m = this.transport.getTicksAtTime(i);
    m >= this.time &&
      m >= this._nextTick &&
      this._nextTick + this._interval < this.time + this.duration &&
      ((this._nextTick += this._interval),
      (this._currentId = this._nextId),
      (this._nextId = this.transport.scheduleOnce(
        this.invoke.bind(this),
        new zr(this.context, this._nextTick).toSeconds(),
      )));
  }
  _restart(i) {
    this.transport.clear(this._currentId),
      this.transport.clear(this._nextId),
      (this._nextTick = this.time);
    const m = this.transport.getTicksAtTime(i);
    m > this.time &&
      (this._nextTick =
        this.time +
        Math.ceil((m - this.time) / this._interval) * this._interval),
      (this._currentId = this.transport.scheduleOnce(
        this.invoke.bind(this),
        new zr(this.context, this._nextTick).toSeconds(),
      )),
      (this._nextTick += this._interval),
      (this._nextId = this.transport.scheduleOnce(
        this.invoke.bind(this),
        new zr(this.context, this._nextTick).toSeconds(),
      ));
  }
  dispose() {
    return (
      super.dispose(),
      this.transport.clear(this._currentId),
      this.transport.clear(this._nextId),
      this.transport.off('start', this._boundRestart),
      this.transport.off('loopStart', this._boundRestart),
      this
    );
  }
}
class ss extends mr {
  constructor() {
    super($e(ss.getDefaults(), arguments)),
      (this.name = 'Transport'),
      (this._loop = new Fp(!1)),
      (this._loopStart = 0),
      (this._loopEnd = 0),
      (this._scheduledEvents = {}),
      (this._timeline = new Vr()),
      (this._repeatedEvents = new Lp()),
      (this._syncedSignals = []),
      (this._swingAmount = 0);
    const i = $e(ss.getDefaults(), arguments);
    (this._ppq = i.ppq),
      (this._clock = new ns({
        callback: this._processTick.bind(this),
        context: this.context,
        frequency: 0,
        units: 'bpm',
      })),
      this._bindClockEvents(),
      (this.bpm = this._clock.frequency),
      (this._clock.frequency.multiplier = i.ppq),
      this.bpm.setValueAtTime(i.bpm, 0),
      Nt(this, 'bpm'),
      (this._timeSignature = i.timeSignature),
      (this._swingTicks = i.ppq / 2);
  }
  static getDefaults() {
    return Object.assign(mr.getDefaults(), {
      bpm: 120,
      loopEnd: '4m',
      loopStart: 0,
      ppq: 192,
      swing: 0,
      swingSubdivision: '8n',
      timeSignature: 4,
    });
  }
  _processTick(i, m) {
    if (
      (this._loop.get(i) &&
        m >= this._loopEnd &&
        (this.emit('loopEnd', i),
        this._clock.setTicksAtTime(this._loopStart, i),
        (m = this._loopStart),
        this.emit('loopStart', i, this._clock.getSecondsAtTime(i)),
        this.emit('loop', i)),
      this._swingAmount > 0 &&
        m % this._ppq !== 0 &&
        m % (this._swingTicks * 2) !== 0)
    ) {
      const t = (m % (this._swingTicks * 2)) / (this._swingTicks * 2),
        b = Math.sin(t * Math.PI) * this._swingAmount;
      i += new zr(this.context, (this._swingTicks * 2) / 3).toSeconds() * b;
    }
    this._timeline.forEachAtTime(m, (t) => t.invoke(i));
  }
  schedule(i, m) {
    const t = new sn(this, {
      callback: i,
      time: new Kn(this.context, m).toTicks(),
    });
    return this._addEvent(t, this._timeline);
  }
  scheduleRepeat(i, m, t, b = 1 / 0) {
    const y = new hi(this, {
      callback: i,
      duration: new Mr(this.context, b).toTicks(),
      interval: new Mr(this.context, m).toTicks(),
      time: new Kn(this.context, t).toTicks(),
    });
    return this._addEvent(y, this._repeatedEvents);
  }
  scheduleOnce(i, m) {
    const t = new sn(this, {
      callback: i,
      once: !0,
      time: new Kn(this.context, m).toTicks(),
    });
    return this._addEvent(t, this._timeline);
  }
  clear(i) {
    if (this._scheduledEvents.hasOwnProperty(i)) {
      const m = this._scheduledEvents[i.toString()];
      m.timeline.remove(m.event),
        m.event.dispose(),
        delete this._scheduledEvents[i.toString()];
    }
    return this;
  }
  _addEvent(i, m) {
    return (
      (this._scheduledEvents[i.id.toString()] = { event: i, timeline: m }),
      m.add(i),
      i.id
    );
  }
  cancel(i = 0) {
    const m = this.toTicks(i);
    return (
      this._timeline.forEachFrom(m, (t) => this.clear(t.id)),
      this._repeatedEvents.forEachFrom(m, (t) => this.clear(t.id)),
      this
    );
  }
  _bindClockEvents() {
    this._clock.on('start', (i, m) => {
      (m = new zr(this.context, m).toSeconds()), this.emit('start', i, m);
    }),
      this._clock.on('stop', (i) => {
        this.emit('stop', i);
      }),
      this._clock.on('pause', (i) => {
        this.emit('pause', i);
      });
  }
  get state() {
    return this._clock.getStateAtTime(this.now());
  }
  start(i, m) {
    let t;
    return ht(m) && (t = this.toTicks(m)), this._clock.start(i, t), this;
  }
  stop(i) {
    return this._clock.stop(i), this;
  }
  pause(i) {
    return this._clock.pause(i), this;
  }
  toggle(i) {
    return (
      (i = this.toSeconds(i)),
      this._clock.getStateAtTime(i) !== 'started'
        ? this.start(i)
        : this.stop(i),
      this
    );
  }
  get timeSignature() {
    return this._timeSignature;
  }
  set timeSignature(i) {
    Cr(i) && (i = (i[0] / i[1]) * 4), (this._timeSignature = i);
  }
  get loopStart() {
    return new Mr(this.context, this._loopStart, 'i').toSeconds();
  }
  set loopStart(i) {
    this._loopStart = this.toTicks(i);
  }
  get loopEnd() {
    return new Mr(this.context, this._loopEnd, 'i').toSeconds();
  }
  set loopEnd(i) {
    this._loopEnd = this.toTicks(i);
  }
  get loop() {
    return this._loop.get(this.now());
  }
  set loop(i) {
    this._loop.set(i, this.now());
  }
  setLoopPoints(i, m) {
    return (this.loopStart = i), (this.loopEnd = m), this;
  }
  get swing() {
    return this._swingAmount;
  }
  set swing(i) {
    this._swingAmount = i;
  }
  get swingSubdivision() {
    return new zr(this.context, this._swingTicks).toNotation();
  }
  set swingSubdivision(i) {
    this._swingTicks = this.toTicks(i);
  }
  get position() {
    const i = this.now(),
      m = this._clock.getTicksAtTime(i);
    return new zr(this.context, m).toBarsBeatsSixteenths();
  }
  set position(i) {
    const m = this.toTicks(i);
    this.ticks = m;
  }
  get seconds() {
    return this._clock.seconds;
  }
  set seconds(i) {
    const m = this.now(),
      t = this._clock.frequency.timeToTicks(i, m);
    this.ticks = t;
  }
  get progress() {
    if (this.loop) {
      const i = this.now();
      return (
        (this._clock.getTicksAtTime(i) - this._loopStart) /
        (this._loopEnd - this._loopStart)
      );
    } else return 0;
  }
  get ticks() {
    return this._clock.ticks;
  }
  set ticks(i) {
    if (this._clock.ticks !== i) {
      const m = this.now();
      if (this.state === 'started') {
        const t = this._clock.getTicksAtTime(m),
          b = this._clock.frequency.getDurationOfTicks(Math.ceil(t) - t, m),
          y = m + b;
        this.emit('stop', y),
          this._clock.setTicksAtTime(i, y),
          this.emit('start', y, this._clock.getSecondsAtTime(y));
      } else this._clock.setTicksAtTime(i, m);
    }
  }
  getTicksAtTime(i) {
    return Math.round(this._clock.getTicksAtTime(i));
  }
  getSecondsAtTime(i) {
    return this._clock.getSecondsAtTime(i);
  }
  get PPQ() {
    return this._clock.frequency.multiplier;
  }
  set PPQ(i) {
    this._clock.frequency.multiplier = i;
  }
  nextSubdivision(i) {
    if (((i = this.toTicks(i)), this.state !== 'started')) return 0;
    {
      const m = this.now(),
        t = this.getTicksAtTime(m),
        b = i - (t % i);
      return this._clock.nextTickTime(b, m);
    }
  }
  syncSignal(i, m) {
    if (!m) {
      const b = this.now();
      if (i.getValueAtTime(b) !== 0) {
        const u = 1 / (60 / this.bpm.getValueAtTime(b) / this.PPQ);
        m = i.getValueAtTime(b) / u;
      } else m = 0;
    }
    const t = new hr(m);
    return (
      this.bpm.connect(t),
      t.connect(i._param),
      this._syncedSignals.push({ initial: i.value, ratio: t, signal: i }),
      (i.value = 0),
      this
    );
  }
  unsyncSignal(i) {
    for (let m = this._syncedSignals.length - 1; m >= 0; m--) {
      const t = this._syncedSignals[m];
      t.signal === i &&
        (t.ratio.dispose(),
        (t.signal.value = t.initial),
        this._syncedSignals.splice(m, 1));
    }
    return this;
  }
  dispose() {
    return (
      super.dispose(),
      this._clock.dispose(),
      wl(this, 'bpm'),
      this._timeline.dispose(),
      this._repeatedEvents.dispose(),
      this
    );
  }
}
js.mixin(ss);
yo((T) => {
  T.transport = new ss({ context: T });
});
go((T) => {
  T.transport.dispose();
});
class vr extends dt {
  constructor(i) {
    super(i),
      (this.input = void 0),
      (this._state = new ui('stopped')),
      (this._synced = !1),
      (this._scheduled = []),
      (this._syncedStart = xt),
      (this._syncedStop = xt),
      (this._state.memory = 100),
      (this._state.increasing = !0),
      (this._volume = this.output =
        new yn({ context: this.context, mute: i.mute, volume: i.volume })),
      (this.volume = this._volume.volume),
      Nt(this, 'volume'),
      (this.onstop = i.onstop);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { mute: !1, onstop: xt, volume: 0 });
  }
  get state() {
    return this._synced
      ? this.context.transport.state === 'started'
        ? this._state.getValueAtTime(this.context.transport.seconds)
        : 'stopped'
      : this._state.getValueAtTime(this.now());
  }
  get mute() {
    return this._volume.mute;
  }
  set mute(i) {
    this._volume.mute = i;
  }
  _clampToCurrentTime(i) {
    return this._synced ? i : Math.max(i, this.context.currentTime);
  }
  start(i, m, t) {
    let b =
      _r(i) && this._synced
        ? this.context.transport.seconds
        : this.toSeconds(i);
    if (
      ((b = this._clampToCurrentTime(b)),
      !this._synced && this._state.getValueAtTime(b) === 'started')
    )
      ut(
        Zs(b, this._state.get(b).time),
        'Start time must be strictly greater than previous start time',
      ),
        this._state.cancel(b),
        this._state.setStateAtTime('started', b),
        this.log('restart', b),
        this.restart(b, m, t);
    else if (
      (this.log('start', b),
      this._state.setStateAtTime('started', b),
      this._synced)
    ) {
      const y = this._state.get(b);
      y &&
        ((y.offset = this.toSeconds(On(m, 0))),
        (y.duration = t ? this.toSeconds(t) : void 0));
      const u = this.context.transport.schedule((a) => {
        this._start(a, m, t);
      }, b);
      this._scheduled.push(u),
        this.context.transport.state === 'started' &&
          this.context.transport.getSecondsAtTime(this.immediate()) > b &&
          this._syncedStart(this.now(), this.context.transport.seconds);
    } else fl(this.context), this._start(b, m, t);
    return this;
  }
  stop(i) {
    let m =
      _r(i) && this._synced
        ? this.context.transport.seconds
        : this.toSeconds(i);
    if (
      ((m = this._clampToCurrentTime(m)),
      this._state.getValueAtTime(m) === 'started' ||
        ht(this._state.getNextState('started', m)))
    ) {
      if ((this.log('stop', m), !this._synced)) this._stop(m);
      else {
        const t = this.context.transport.schedule(this._stop.bind(this), m);
        this._scheduled.push(t);
      }
      this._state.cancel(m), this._state.setStateAtTime('stopped', m);
    }
    return this;
  }
  restart(i, m, t) {
    return (
      (i = this.toSeconds(i)),
      this._state.getValueAtTime(i) === 'started' &&
        (this._state.cancel(i), this._restart(i, m, t)),
      this
    );
  }
  sync() {
    return (
      this._synced ||
        ((this._synced = !0),
        (this._syncedStart = (i, m) => {
          if (m > 0) {
            const t = this._state.get(m);
            if (t && t.state === 'started' && t.time !== m) {
              const b = m - this.toSeconds(t.time);
              let y;
              t.duration && (y = this.toSeconds(t.duration) - b),
                this._start(i, this.toSeconds(t.offset) + b, y);
            }
          }
        }),
        (this._syncedStop = (i) => {
          const m = this.context.transport.getSecondsAtTime(
            Math.max(i - this.sampleTime, 0),
          );
          this._state.getValueAtTime(m) === 'started' && this._stop(i);
        }),
        this.context.transport.on('start', this._syncedStart),
        this.context.transport.on('loopStart', this._syncedStart),
        this.context.transport.on('stop', this._syncedStop),
        this.context.transport.on('pause', this._syncedStop),
        this.context.transport.on('loopEnd', this._syncedStop)),
      this
    );
  }
  unsync() {
    return (
      this._synced &&
        (this.context.transport.off('stop', this._syncedStop),
        this.context.transport.off('pause', this._syncedStop),
        this.context.transport.off('loopEnd', this._syncedStop),
        this.context.transport.off('start', this._syncedStart),
        this.context.transport.off('loopStart', this._syncedStart)),
      (this._synced = !1),
      this._scheduled.forEach((i) => this.context.transport.clear(i)),
      (this._scheduled = []),
      this._state.cancel(0),
      this._stop(0),
      this
    );
  }
  dispose() {
    return (
      super.dispose(),
      (this.onstop = xt),
      this.unsync(),
      this._volume.dispose(),
      this._state.dispose(),
      this
    );
  }
}
class os extends In {
  constructor() {
    super($e(os.getDefaults(), arguments, ['url', 'onload'])),
      (this.name = 'ToneBufferSource'),
      (this._source = this.context.createBufferSource()),
      (this._internalChannels = [this._source]),
      (this._sourceStarted = !1),
      (this._sourceStopped = !1);
    const i = $e(os.getDefaults(), arguments, ['url', 'onload']);
    Gn(this._source, this._gainNode),
      (this._source.onended = () => this._stopSource()),
      (this.playbackRate = new At({
        context: this.context,
        param: this._source.playbackRate,
        units: 'positive',
        value: i.playbackRate,
      })),
      (this.loop = i.loop),
      (this.loopStart = i.loopStart),
      (this.loopEnd = i.loopEnd),
      (this._buffer = new Tt(i.url, i.onload, i.onerror)),
      this._internalChannels.push(this._source);
  }
  static getDefaults() {
    return Object.assign(In.getDefaults(), {
      url: new Tt(),
      loop: !1,
      loopEnd: 0,
      loopStart: 0,
      onload: xt,
      onerror: xt,
      playbackRate: 1,
    });
  }
  get fadeIn() {
    return this._fadeIn;
  }
  set fadeIn(i) {
    this._fadeIn = i;
  }
  get fadeOut() {
    return this._fadeOut;
  }
  set fadeOut(i) {
    this._fadeOut = i;
  }
  get curve() {
    return this._curve;
  }
  set curve(i) {
    this._curve = i;
  }
  start(i, m, t, b = 1) {
    ut(this.buffer.loaded, 'buffer is either not set or not loaded');
    const y = this.toSeconds(i);
    this._startGain(y, b),
      this.loop ? (m = On(m, this.loopStart)) : (m = On(m, 0));
    let u = Math.max(this.toSeconds(m), 0);
    if (this.loop) {
      const a = this.toSeconds(this.loopEnd) || this.buffer.duration,
        r = this.toSeconds(this.loopStart),
        l = a - r;
      Fo(u, a) && (u = ((u - r) % l) + r),
        Sr(u, this.buffer.duration) && (u = 0);
    }
    if (
      ((this._source.buffer = this.buffer.get()),
      (this._source.loopEnd =
        this.toSeconds(this.loopEnd) || this.buffer.duration),
      gl(u, this.buffer.duration) &&
        ((this._sourceStarted = !0), this._source.start(y, u)),
      ht(t))
    ) {
      let a = this.toSeconds(t);
      (a = Math.max(a, 0)), this.stop(y + a);
    }
    return this;
  }
  _stopSource(i) {
    !this._sourceStopped &&
      this._sourceStarted &&
      ((this._sourceStopped = !0),
      this._source.stop(this.toSeconds(i)),
      this._onended());
  }
  get loopStart() {
    return this._source.loopStart;
  }
  set loopStart(i) {
    this._source.loopStart = this.toSeconds(i);
  }
  get loopEnd() {
    return this._source.loopEnd;
  }
  set loopEnd(i) {
    this._source.loopEnd = this.toSeconds(i);
  }
  get buffer() {
    return this._buffer;
  }
  set buffer(i) {
    this._buffer.set(i);
  }
  get loop() {
    return this._source.loop;
  }
  set loop(i) {
    (this._source.loop = i), this._sourceStarted && this.cancelStop();
  }
  dispose() {
    return (
      super.dispose(),
      (this._source.onended = null),
      this._source.disconnect(),
      this._buffer.dispose(),
      this.playbackRate.dispose(),
      this
    );
  }
}
function xn(T, i) {
  return Ht(this, void 0, void 0, function* () {
    const m = i / T.context.sampleRate,
      t = new ai(1, m, T.context.sampleRate);
    return (
      new T.constructor(
        Object.assign(T.get(), { frequency: 2 / m, detune: 0, context: t }),
      )
        .toDestination()
        .start(0),
      (yield t.render()).getChannelData(0)
    );
  });
}
class to extends In {
  constructor() {
    super($e(to.getDefaults(), arguments, ['frequency', 'type'])),
      (this.name = 'ToneOscillatorNode'),
      (this._oscillator = this.context.createOscillator()),
      (this._internalChannels = [this._oscillator]);
    const i = $e(to.getDefaults(), arguments, ['frequency', 'type']);
    Gn(this._oscillator, this._gainNode),
      (this.type = i.type),
      (this.frequency = new At({
        context: this.context,
        param: this._oscillator.frequency,
        units: 'frequency',
        value: i.frequency,
      })),
      (this.detune = new At({
        context: this.context,
        param: this._oscillator.detune,
        units: 'cents',
        value: i.detune,
      })),
      Nt(this, ['frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(In.getDefaults(), {
      detune: 0,
      frequency: 440,
      type: 'sine',
    });
  }
  start(i) {
    const m = this.toSeconds(i);
    return (
      this.log('start', m), this._startGain(m), this._oscillator.start(m), this
    );
  }
  _stopSource(i) {
    this._oscillator.stop(i);
  }
  setPeriodicWave(i) {
    return this._oscillator.setPeriodicWave(i), this;
  }
  get type() {
    return this._oscillator.type;
  }
  set type(i) {
    this._oscillator.type = i;
  }
  dispose() {
    return (
      super.dispose(),
      this.state === 'started' && this.stop(),
      this._oscillator.disconnect(),
      this.frequency.dispose(),
      this.detune.dispose(),
      this
    );
  }
}
class Bt extends vr {
  constructor() {
    super($e(Bt.getDefaults(), arguments, ['frequency', 'type'])),
      (this.name = 'Oscillator'),
      (this._oscillator = null);
    const i = $e(Bt.getDefaults(), arguments, ['frequency', 'type']);
    (this.frequency = new Zt({
      context: this.context,
      units: 'frequency',
      value: i.frequency,
    })),
      Nt(this, 'frequency'),
      (this.detune = new Zt({
        context: this.context,
        units: 'cents',
        value: i.detune,
      })),
      Nt(this, 'detune'),
      (this._partials = i.partials),
      (this._partialCount = i.partialCount),
      (this._type = i.type),
      i.partialCount &&
        i.type !== 'custom' &&
        (this._type = this.baseType + i.partialCount.toString()),
      (this.phase = i.phase);
  }
  static getDefaults() {
    return Object.assign(vr.getDefaults(), {
      detune: 0,
      frequency: 440,
      partialCount: 0,
      partials: [],
      phase: 0,
      type: 'sine',
    });
  }
  _start(i) {
    const m = this.toSeconds(i),
      t = new to({ context: this.context, onended: () => this.onstop(this) });
    (this._oscillator = t),
      this._wave
        ? this._oscillator.setPeriodicWave(this._wave)
        : (this._oscillator.type = this._type),
      this._oscillator.connect(this.output),
      this.frequency.connect(this._oscillator.frequency),
      this.detune.connect(this._oscillator.detune),
      this._oscillator.start(m);
  }
  _stop(i) {
    const m = this.toSeconds(i);
    this._oscillator && this._oscillator.stop(m);
  }
  _restart(i) {
    const m = this.toSeconds(i);
    return (
      this.log('restart', m),
      this._oscillator && this._oscillator.cancelStop(),
      this._state.cancel(m),
      this
    );
  }
  syncFrequency() {
    return this.context.transport.syncSignal(this.frequency), this;
  }
  unsyncFrequency() {
    return this.context.transport.unsyncSignal(this.frequency), this;
  }
  _getCachedPeriodicWave() {
    if (this._type === 'custom')
      return Bt._periodicWaveCache.find(
        (m) => m.phase === this._phase && bp(m.partials, this._partials),
      );
    {
      const i = Bt._periodicWaveCache.find(
        (m) => m.type === this._type && m.phase === this._phase,
      );
      return (this._partialCount = i ? i.partialCount : this._partialCount), i;
    }
  }
  get type() {
    return this._type;
  }
  set type(i) {
    this._type = i;
    const m = ['sine', 'square', 'sawtooth', 'triangle'].indexOf(i) !== -1;
    if (this._phase === 0 && m)
      (this._wave = void 0),
        (this._partialCount = 0),
        this._oscillator !== null && (this._oscillator.type = i);
    else {
      const t = this._getCachedPeriodicWave();
      if (ht(t)) {
        const { partials: b, wave: y } = t;
        (this._wave = y),
          (this._partials = b),
          this._oscillator !== null &&
            this._oscillator.setPeriodicWave(this._wave);
      } else {
        const [b, y] = this._getRealImaginary(i, this._phase),
          u = this.context.createPeriodicWave(b, y);
        (this._wave = u),
          this._oscillator !== null &&
            this._oscillator.setPeriodicWave(this._wave),
          Bt._periodicWaveCache.push({
            imag: y,
            partialCount: this._partialCount,
            partials: this._partials,
            phase: this._phase,
            real: b,
            type: this._type,
            wave: this._wave,
          }),
          Bt._periodicWaveCache.length > 100 && Bt._periodicWaveCache.shift();
      }
    }
  }
  get baseType() {
    return this._type.replace(this.partialCount.toString(), '');
  }
  set baseType(i) {
    this.partialCount && this._type !== 'custom' && i !== 'custom'
      ? (this.type = i + this.partialCount)
      : (this.type = i);
  }
  get partialCount() {
    return this._partialCount;
  }
  set partialCount(i) {
    nn(i, 0);
    let m = this._type;
    const t = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);
    if ((t && (m = t[1]), this._type !== 'custom'))
      i === 0 ? (this.type = m) : (this.type = m + i.toString());
    else {
      const b = new Float32Array(i);
      this._partials.forEach((y, u) => (b[u] = y)),
        (this._partials = Array.from(b)),
        (this.type = this._type);
    }
  }
  _getRealImaginary(i, m) {
    let b = 2048;
    const y = new Float32Array(b),
      u = new Float32Array(b);
    let a = 1;
    if (i === 'custom') {
      if (
        ((a = this._partials.length + 1),
        (this._partialCount = this._partials.length),
        (b = a),
        this._partials.length === 0)
      )
        return [y, u];
    } else {
      const r = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(i);
      r
        ? ((a = parseInt(r[2], 10) + 1),
          (this._partialCount = parseInt(r[2], 10)),
          (i = r[1]),
          (a = Math.max(a, 2)),
          (b = a))
        : (this._partialCount = 0),
        (this._partials = []);
    }
    for (let r = 1; r < b; ++r) {
      const l = 2 / (r * Math.PI);
      let d;
      switch (i) {
        case 'sine':
          (d = r <= a ? 1 : 0), (this._partials[r - 1] = d);
          break;
        case 'square':
          (d = r & 1 ? 2 * l : 0), (this._partials[r - 1] = d);
          break;
        case 'sawtooth':
          (d = l * (r & 1 ? 1 : -1)), (this._partials[r - 1] = d);
          break;
        case 'triangle':
          r & 1 ? (d = 2 * (l * l) * (((r - 1) >> 1) & 1 ? -1 : 1)) : (d = 0),
            (this._partials[r - 1] = d);
          break;
        case 'custom':
          d = this._partials[r - 1];
          break;
        default:
          throw new TypeError('Oscillator: invalid type: ' + i);
      }
      d !== 0
        ? ((y[r] = -d * Math.sin(m * r)), (u[r] = d * Math.cos(m * r)))
        : ((y[r] = 0), (u[r] = 0));
    }
    return [y, u];
  }
  _inverseFFT(i, m, t) {
    let b = 0;
    const y = i.length;
    for (let u = 0; u < y; u++)
      b += i[u] * Math.cos(u * t) + m[u] * Math.sin(u * t);
    return b;
  }
  getInitialValue() {
    const [i, m] = this._getRealImaginary(this._type, 0);
    let t = 0;
    const b = Math.PI * 2,
      y = 32;
    for (let u = 0; u < y; u++)
      t = Math.max(this._inverseFFT(i, m, (u / y) * b), t);
    return wp(-this._inverseFFT(i, m, this._phase) / t, -1, 1);
  }
  get partials() {
    return this._partials.slice(0, this.partialCount);
  }
  set partials(i) {
    (this._partials = i),
      (this._partialCount = this._partials.length),
      i.length && (this.type = 'custom');
  }
  get phase() {
    return this._phase * (180 / Math.PI);
  }
  set phase(i) {
    (this._phase = (i * Math.PI) / 180), (this.type = this._type);
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      return xn(this, i);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this._oscillator !== null && this._oscillator.dispose(),
      (this._wave = void 0),
      this.frequency.dispose(),
      this.detune.dispose(),
      this
    );
  }
}
Bt._periodicWaveCache = [];
class bo extends dt {
  constructor() {
    super(Object.assign($e(bo.getDefaults(), arguments, ['context'])));
  }
  connect(i, m = 0, t = 0) {
    return ci(this, i, m, t), this;
  }
}
class is extends bo {
  constructor() {
    super(
      Object.assign($e(is.getDefaults(), arguments, ['mapping', 'length'])),
    ),
      (this.name = 'WaveShaper'),
      (this._shaper = this.context.createWaveShaper()),
      (this.input = this._shaper),
      (this.output = this._shaper);
    const i = $e(is.getDefaults(), arguments, ['mapping', 'length']);
    Cr(i.mapping) || i.mapping instanceof Float32Array
      ? (this.curve = Float32Array.from(i.mapping))
      : dp(i.mapping) && this.setMap(i.mapping, i.length);
  }
  static getDefaults() {
    return Object.assign(Zt.getDefaults(), { length: 1024 });
  }
  setMap(i, m = 1024) {
    const t = new Float32Array(m);
    for (let b = 0, y = m; b < y; b++) {
      const u = (b / (y - 1)) * 2 - 1;
      t[b] = i(u, b);
    }
    return (this.curve = t), this;
  }
  get curve() {
    return this._shaper.curve;
  }
  set curve(i) {
    this._shaper.curve = i;
  }
  get oversample() {
    return this._shaper.oversample;
  }
  set oversample(i) {
    const m = ['none', '2x', '4x'].some((t) => t.includes(i));
    ut(m, "oversampling must be either 'none', '2x', or '4x'"),
      (this._shaper.oversample = i);
  }
  dispose() {
    return super.dispose(), this._shaper.disconnect(), this;
  }
}
class Up extends bo {
  constructor() {
    super(...arguments),
      (this.name = 'AudioToGain'),
      (this._norm = new is({
        context: this.context,
        mapping: (i) => (i + 1) / 2,
      })),
      (this.input = this._norm),
      (this.output = this._norm);
  }
  dispose() {
    return super.dispose(), this._norm.dispose(), this;
  }
}
class gn extends Zt {
  constructor() {
    super(Object.assign($e(gn.getDefaults(), arguments, ['value']))),
      (this.name = 'Multiply'),
      (this.override = !1);
    const i = $e(gn.getDefaults(), arguments, ['value']);
    (this._mult =
      this.input =
      this.output =
        new hr({
          context: this.context,
          minValue: i.minValue,
          maxValue: i.maxValue,
        })),
      (this.factor = this._param = this._mult.gain),
      this.factor.setValueAtTime(i.value, 0);
  }
  static getDefaults() {
    return Object.assign(Zt.getDefaults(), { value: 0 });
  }
  dispose() {
    return super.dispose(), this._mult.dispose(), this;
  }
}
class as extends vr {
  constructor() {
    super(
      $e(as.getDefaults(), arguments, ['frequency', 'type', 'modulationType']),
    ),
      (this.name = 'AMOscillator'),
      (this._modulationScale = new Up({ context: this.context })),
      (this._modulationNode = new hr({ context: this.context }));
    const i = $e(as.getDefaults(), arguments, [
      'frequency',
      'type',
      'modulationType',
    ]);
    (this._carrier = new Bt({
      context: this.context,
      detune: i.detune,
      frequency: i.frequency,
      onstop: () => this.onstop(this),
      phase: i.phase,
      type: i.type,
    })),
      (this.frequency = this._carrier.frequency),
      (this.detune = this._carrier.detune),
      (this._modulator = new Bt({
        context: this.context,
        phase: i.phase,
        type: i.modulationType,
      })),
      (this.harmonicity = new gn({
        context: this.context,
        units: 'positive',
        value: i.harmonicity,
      })),
      this.frequency.chain(this.harmonicity, this._modulator.frequency),
      this._modulator.chain(this._modulationScale, this._modulationNode.gain),
      this._carrier.chain(this._modulationNode, this.output),
      Nt(this, ['frequency', 'detune', 'harmonicity']);
  }
  static getDefaults() {
    return Object.assign(Bt.getDefaults(), {
      harmonicity: 1,
      modulationType: 'square',
    });
  }
  _start(i) {
    this._modulator.start(i), this._carrier.start(i);
  }
  _stop(i) {
    this._modulator.stop(i), this._carrier.stop(i);
  }
  _restart(i) {
    this._modulator.restart(i), this._carrier.restart(i);
  }
  get type() {
    return this._carrier.type;
  }
  set type(i) {
    this._carrier.type = i;
  }
  get baseType() {
    return this._carrier.baseType;
  }
  set baseType(i) {
    this._carrier.baseType = i;
  }
  get partialCount() {
    return this._carrier.partialCount;
  }
  set partialCount(i) {
    this._carrier.partialCount = i;
  }
  get modulationType() {
    return this._modulator.type;
  }
  set modulationType(i) {
    this._modulator.type = i;
  }
  get phase() {
    return this._carrier.phase;
  }
  set phase(i) {
    (this._carrier.phase = i), (this._modulator.phase = i);
  }
  get partials() {
    return this._carrier.partials;
  }
  set partials(i) {
    this._carrier.partials = i;
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      return xn(this, i);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.frequency.dispose(),
      this.detune.dispose(),
      this.harmonicity.dispose(),
      this._carrier.dispose(),
      this._modulator.dispose(),
      this._modulationNode.dispose(),
      this._modulationScale.dispose(),
      this
    );
  }
}
class ls extends vr {
  constructor() {
    super(
      $e(ls.getDefaults(), arguments, ['frequency', 'type', 'modulationType']),
    ),
      (this.name = 'FMOscillator'),
      (this._modulationNode = new hr({ context: this.context, gain: 0 }));
    const i = $e(ls.getDefaults(), arguments, [
      'frequency',
      'type',
      'modulationType',
    ]);
    (this._carrier = new Bt({
      context: this.context,
      detune: i.detune,
      frequency: 0,
      onstop: () => this.onstop(this),
      phase: i.phase,
      type: i.type,
    })),
      (this.detune = this._carrier.detune),
      (this.frequency = new Zt({
        context: this.context,
        units: 'frequency',
        value: i.frequency,
      })),
      (this._modulator = new Bt({
        context: this.context,
        phase: i.phase,
        type: i.modulationType,
      })),
      (this.harmonicity = new gn({
        context: this.context,
        units: 'positive',
        value: i.harmonicity,
      })),
      (this.modulationIndex = new gn({
        context: this.context,
        units: 'positive',
        value: i.modulationIndex,
      })),
      this.frequency.connect(this._carrier.frequency),
      this.frequency.chain(this.harmonicity, this._modulator.frequency),
      this.frequency.chain(this.modulationIndex, this._modulationNode),
      this._modulator.connect(this._modulationNode.gain),
      this._modulationNode.connect(this._carrier.frequency),
      this._carrier.connect(this.output),
      this.detune.connect(this._modulator.detune),
      Nt(this, ['modulationIndex', 'frequency', 'detune', 'harmonicity']);
  }
  static getDefaults() {
    return Object.assign(Bt.getDefaults(), {
      harmonicity: 1,
      modulationIndex: 2,
      modulationType: 'square',
    });
  }
  _start(i) {
    this._modulator.start(i), this._carrier.start(i);
  }
  _stop(i) {
    this._modulator.stop(i), this._carrier.stop(i);
  }
  _restart(i) {
    return this._modulator.restart(i), this._carrier.restart(i), this;
  }
  get type() {
    return this._carrier.type;
  }
  set type(i) {
    this._carrier.type = i;
  }
  get baseType() {
    return this._carrier.baseType;
  }
  set baseType(i) {
    this._carrier.baseType = i;
  }
  get partialCount() {
    return this._carrier.partialCount;
  }
  set partialCount(i) {
    this._carrier.partialCount = i;
  }
  get modulationType() {
    return this._modulator.type;
  }
  set modulationType(i) {
    this._modulator.type = i;
  }
  get phase() {
    return this._carrier.phase;
  }
  set phase(i) {
    (this._carrier.phase = i), (this._modulator.phase = i);
  }
  get partials() {
    return this._carrier.partials;
  }
  set partials(i) {
    this._carrier.partials = i;
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      return xn(this, i);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.frequency.dispose(),
      this.harmonicity.dispose(),
      this._carrier.dispose(),
      this._modulator.dispose(),
      this._modulationNode.dispose(),
      this.modulationIndex.dispose(),
      this
    );
  }
}
class Dn extends vr {
  constructor() {
    super($e(Dn.getDefaults(), arguments, ['frequency', 'width'])),
      (this.name = 'PulseOscillator'),
      (this._widthGate = new hr({ context: this.context, gain: 0 })),
      (this._thresh = new is({
        context: this.context,
        mapping: (m) => (m <= 0 ? -1 : 1),
      }));
    const i = $e(Dn.getDefaults(), arguments, ['frequency', 'width']);
    (this.width = new Zt({
      context: this.context,
      units: 'audioRange',
      value: i.width,
    })),
      (this._triangle = new Bt({
        context: this.context,
        detune: i.detune,
        frequency: i.frequency,
        onstop: () => this.onstop(this),
        phase: i.phase,
        type: 'triangle',
      })),
      (this.frequency = this._triangle.frequency),
      (this.detune = this._triangle.detune),
      this._triangle.chain(this._thresh, this.output),
      this.width.chain(this._widthGate, this._thresh),
      Nt(this, ['width', 'frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(vr.getDefaults(), {
      detune: 0,
      frequency: 440,
      phase: 0,
      type: 'pulse',
      width: 0.2,
    });
  }
  _start(i) {
    (i = this.toSeconds(i)),
      this._triangle.start(i),
      this._widthGate.gain.setValueAtTime(1, i);
  }
  _stop(i) {
    (i = this.toSeconds(i)),
      this._triangle.stop(i),
      this._widthGate.gain.cancelScheduledValues(i),
      this._widthGate.gain.setValueAtTime(0, i);
  }
  _restart(i) {
    this._triangle.restart(i),
      this._widthGate.gain.cancelScheduledValues(i),
      this._widthGate.gain.setValueAtTime(1, i);
  }
  get phase() {
    return this._triangle.phase;
  }
  set phase(i) {
    this._triangle.phase = i;
  }
  get type() {
    return 'pulse';
  }
  get baseType() {
    return 'pulse';
  }
  get partials() {
    return [];
  }
  get partialCount() {
    return 0;
  }
  set carrierType(i) {
    this._triangle.type = i;
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      return xn(this, i);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this._triangle.dispose(),
      this.width.dispose(),
      this._widthGate.dispose(),
      this._thresh.dispose(),
      this
    );
  }
}
class us extends vr {
  constructor() {
    super($e(us.getDefaults(), arguments, ['frequency', 'type', 'spread'])),
      (this.name = 'FatOscillator'),
      (this._oscillators = []);
    const i = $e(us.getDefaults(), arguments, ['frequency', 'type', 'spread']);
    (this.frequency = new Zt({
      context: this.context,
      units: 'frequency',
      value: i.frequency,
    })),
      (this.detune = new Zt({
        context: this.context,
        units: 'cents',
        value: i.detune,
      })),
      (this._spread = i.spread),
      (this._type = i.type),
      (this._phase = i.phase),
      (this._partials = i.partials),
      (this._partialCount = i.partialCount),
      (this.count = i.count),
      Nt(this, ['frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(Bt.getDefaults(), {
      count: 3,
      spread: 20,
      type: 'sawtooth',
    });
  }
  _start(i) {
    (i = this.toSeconds(i)), this._forEach((m) => m.start(i));
  }
  _stop(i) {
    (i = this.toSeconds(i)), this._forEach((m) => m.stop(i));
  }
  _restart(i) {
    this._forEach((m) => m.restart(i));
  }
  _forEach(i) {
    for (let m = 0; m < this._oscillators.length; m++)
      i(this._oscillators[m], m);
  }
  get type() {
    return this._type;
  }
  set type(i) {
    (this._type = i), this._forEach((m) => (m.type = i));
  }
  get spread() {
    return this._spread;
  }
  set spread(i) {
    if (((this._spread = i), this._oscillators.length > 1)) {
      const m = -i / 2,
        t = i / (this._oscillators.length - 1);
      this._forEach((b, y) => (b.detune.value = m + t * y));
    }
  }
  get count() {
    return this._oscillators.length;
  }
  set count(i) {
    if ((nn(i, 1), this._oscillators.length !== i)) {
      this._forEach((m) => m.dispose()), (this._oscillators = []);
      for (let m = 0; m < i; m++) {
        const t = new Bt({
          context: this.context,
          volume: -6 - i * 1.1,
          type: this._type,
          phase: this._phase + (m / i) * 360,
          partialCount: this._partialCount,
          onstop: m === 0 ? () => this.onstop(this) : xt,
        });
        this.type === 'custom' && (t.partials = this._partials),
          this.frequency.connect(t.frequency),
          this.detune.connect(t.detune),
          (t.detune.overridden = !1),
          t.connect(this.output),
          (this._oscillators[m] = t);
      }
      (this.spread = this._spread),
        this.state === 'started' && this._forEach((m) => m.start());
    }
  }
  get phase() {
    return this._phase;
  }
  set phase(i) {
    (this._phase = i),
      this._forEach((m, t) => (m.phase = this._phase + (t / this.count) * 360));
  }
  get baseType() {
    return this._oscillators[0].baseType;
  }
  set baseType(i) {
    this._forEach((m) => (m.baseType = i)),
      (this._type = this._oscillators[0].type);
  }
  get partials() {
    return this._oscillators[0].partials;
  }
  set partials(i) {
    (this._partials = i),
      (this._partialCount = this._partials.length),
      i.length &&
        ((this._type = 'custom'), this._forEach((m) => (m.partials = i)));
  }
  get partialCount() {
    return this._oscillators[0].partialCount;
  }
  set partialCount(i) {
    (this._partialCount = i),
      this._forEach((m) => (m.partialCount = i)),
      (this._type = this._oscillators[0].type);
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      return xn(this, i);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.frequency.dispose(),
      this.detune.dispose(),
      this._forEach((i) => i.dispose()),
      this
    );
  }
}
class cs extends vr {
  constructor() {
    super(
      $e(cs.getDefaults(), arguments, ['frequency', 'modulationFrequency']),
    ),
      (this.name = 'PWMOscillator'),
      (this.sourceType = 'pwm'),
      (this._scale = new gn({ context: this.context, value: 2 }));
    const i = $e(cs.getDefaults(), arguments, [
      'frequency',
      'modulationFrequency',
    ]);
    (this._pulse = new Dn({
      context: this.context,
      frequency: i.modulationFrequency,
    })),
      (this._pulse.carrierType = 'sine'),
      (this.modulationFrequency = this._pulse.frequency),
      (this._modulator = new Bt({
        context: this.context,
        detune: i.detune,
        frequency: i.frequency,
        onstop: () => this.onstop(this),
        phase: i.phase,
      })),
      (this.frequency = this._modulator.frequency),
      (this.detune = this._modulator.detune),
      this._modulator.chain(this._scale, this._pulse.width),
      this._pulse.connect(this.output),
      Nt(this, ['modulationFrequency', 'frequency', 'detune']);
  }
  static getDefaults() {
    return Object.assign(vr.getDefaults(), {
      detune: 0,
      frequency: 440,
      modulationFrequency: 0.4,
      phase: 0,
      type: 'pwm',
    });
  }
  _start(i) {
    (i = this.toSeconds(i)), this._modulator.start(i), this._pulse.start(i);
  }
  _stop(i) {
    (i = this.toSeconds(i)), this._modulator.stop(i), this._pulse.stop(i);
  }
  _restart(i) {
    this._modulator.restart(i), this._pulse.restart(i);
  }
  get type() {
    return 'pwm';
  }
  get baseType() {
    return 'pwm';
  }
  get partials() {
    return [];
  }
  get partialCount() {
    return 0;
  }
  get phase() {
    return this._modulator.phase;
  }
  set phase(i) {
    this._modulator.phase = i;
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      return xn(this, i);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this._pulse.dispose(),
      this._scale.dispose(),
      this._modulator.dispose(),
      this
    );
  }
}
const va = { am: as, fat: us, fm: ls, oscillator: Bt, pulse: Dn, pwm: cs };
class ds extends vr {
  constructor() {
    super($e(ds.getDefaults(), arguments, ['frequency', 'type'])),
      (this.name = 'OmniOscillator');
    const i = $e(ds.getDefaults(), arguments, ['frequency', 'type']);
    (this.frequency = new Zt({
      context: this.context,
      units: 'frequency',
      value: i.frequency,
    })),
      (this.detune = new Zt({
        context: this.context,
        units: 'cents',
        value: i.detune,
      })),
      Nt(this, ['frequency', 'detune']),
      this.set(i);
  }
  static getDefaults() {
    return Object.assign(
      Bt.getDefaults(),
      ls.getDefaults(),
      as.getDefaults(),
      us.getDefaults(),
      Dn.getDefaults(),
      cs.getDefaults(),
    );
  }
  _start(i) {
    this._oscillator.start(i);
  }
  _stop(i) {
    this._oscillator.stop(i);
  }
  _restart(i) {
    return this._oscillator.restart(i), this;
  }
  get type() {
    let i = '';
    return (
      ['am', 'fm', 'fat'].some((m) => this._sourceType === m) &&
        (i = this._sourceType),
      i + this._oscillator.type
    );
  }
  set type(i) {
    i.substr(0, 2) === 'fm'
      ? (this._createNewOscillator('fm'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = i.substr(2)))
      : i.substr(0, 2) === 'am'
      ? (this._createNewOscillator('am'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = i.substr(2)))
      : i.substr(0, 3) === 'fat'
      ? (this._createNewOscillator('fat'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = i.substr(3)))
      : i === 'pwm'
      ? (this._createNewOscillator('pwm'),
        (this._oscillator = this._oscillator))
      : i === 'pulse'
      ? this._createNewOscillator('pulse')
      : (this._createNewOscillator('oscillator'),
        (this._oscillator = this._oscillator),
        (this._oscillator.type = i));
  }
  get partials() {
    return this._oscillator.partials;
  }
  set partials(i) {
    !this._getOscType(this._oscillator, 'pulse') &&
      !this._getOscType(this._oscillator, 'pwm') &&
      (this._oscillator.partials = i);
  }
  get partialCount() {
    return this._oscillator.partialCount;
  }
  set partialCount(i) {
    !this._getOscType(this._oscillator, 'pulse') &&
      !this._getOscType(this._oscillator, 'pwm') &&
      (this._oscillator.partialCount = i);
  }
  set(i) {
    return (
      Reflect.has(i, 'type') && i.type && (this.type = i.type),
      super.set(i),
      this
    );
  }
  _createNewOscillator(i) {
    if (i !== this._sourceType) {
      this._sourceType = i;
      const m = va[i],
        t = this.now();
      if (this._oscillator) {
        const b = this._oscillator;
        b.stop(t), this.context.setTimeout(() => b.dispose(), this.blockTime);
      }
      (this._oscillator = new m({ context: this.context })),
        this.frequency.connect(this._oscillator.frequency),
        this.detune.connect(this._oscillator.detune),
        this._oscillator.connect(this.output),
        (this._oscillator.onstop = () => this.onstop(this)),
        this.state === 'started' && this._oscillator.start(t);
    }
  }
  get phase() {
    return this._oscillator.phase;
  }
  set phase(i) {
    this._oscillator.phase = i;
  }
  get sourceType() {
    return this._sourceType;
  }
  set sourceType(i) {
    let m = 'sine';
    this._oscillator.type !== 'pwm' &&
      this._oscillator.type !== 'pulse' &&
      (m = this._oscillator.type),
      i === 'fm'
        ? (this.type = 'fm' + m)
        : i === 'am'
        ? (this.type = 'am' + m)
        : i === 'fat'
        ? (this.type = 'fat' + m)
        : i === 'oscillator'
        ? (this.type = m)
        : i === 'pulse'
        ? (this.type = 'pulse')
        : i === 'pwm' && (this.type = 'pwm');
  }
  _getOscType(i, m) {
    return i instanceof va[m];
  }
  get baseType() {
    return this._oscillator.baseType;
  }
  set baseType(i) {
    !this._getOscType(this._oscillator, 'pulse') &&
      !this._getOscType(this._oscillator, 'pwm') &&
      i !== 'pulse' &&
      i !== 'pwm' &&
      (this._oscillator.baseType = i);
  }
  get width() {
    if (this._getOscType(this._oscillator, 'pulse'))
      return this._oscillator.width;
  }
  get count() {
    if (this._getOscType(this._oscillator, 'fat'))
      return this._oscillator.count;
  }
  set count(i) {
    this._getOscType(this._oscillator, 'fat') &&
      pn(i) &&
      (this._oscillator.count = i);
  }
  get spread() {
    if (this._getOscType(this._oscillator, 'fat'))
      return this._oscillator.spread;
  }
  set spread(i) {
    this._getOscType(this._oscillator, 'fat') &&
      pn(i) &&
      (this._oscillator.spread = i);
  }
  get modulationType() {
    if (
      this._getOscType(this._oscillator, 'fm') ||
      this._getOscType(this._oscillator, 'am')
    )
      return this._oscillator.modulationType;
  }
  set modulationType(i) {
    (this._getOscType(this._oscillator, 'fm') ||
      this._getOscType(this._oscillator, 'am')) &&
      Nr(i) &&
      (this._oscillator.modulationType = i);
  }
  get modulationIndex() {
    if (this._getOscType(this._oscillator, 'fm'))
      return this._oscillator.modulationIndex;
  }
  get harmonicity() {
    if (
      this._getOscType(this._oscillator, 'fm') ||
      this._getOscType(this._oscillator, 'am')
    )
      return this._oscillator.harmonicity;
  }
  get modulationFrequency() {
    if (this._getOscType(this._oscillator, 'pwm'))
      return this._oscillator.modulationFrequency;
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      return xn(this, i);
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.detune.dispose(),
      this.frequency.dispose(),
      this._oscillator.dispose(),
      this
    );
  }
}
function Tl(T, i = 1 / 0) {
  const m = new WeakMap();
  return function (t, b) {
    Reflect.defineProperty(t, b, {
      configurable: !0,
      enumerable: !0,
      get: function () {
        return m.get(this);
      },
      set: function (y) {
        nn(y, T, i), m.set(this, y);
      },
    });
  };
}
function $r(T, i = 1 / 0) {
  const m = new WeakMap();
  return function (t, b) {
    Reflect.defineProperty(t, b, {
      configurable: !0,
      enumerable: !0,
      get: function () {
        return m.get(this);
      },
      set: function (y) {
        nn(this.toSeconds(y), T, i), m.set(this, y);
      },
    });
  };
}
class Ln extends vr {
  constructor() {
    super($e(Ln.getDefaults(), arguments, ['url', 'onload'])),
      (this.name = 'Player'),
      (this._activeSources = new Set());
    const i = $e(Ln.getDefaults(), arguments, ['url', 'onload']);
    (this._buffer = new Tt({
      onload: this._onload.bind(this, i.onload),
      onerror: i.onerror,
      reverse: i.reverse,
      url: i.url,
    })),
      (this.autostart = i.autostart),
      (this._loop = i.loop),
      (this._loopStart = i.loopStart),
      (this._loopEnd = i.loopEnd),
      (this._playbackRate = i.playbackRate),
      (this.fadeIn = i.fadeIn),
      (this.fadeOut = i.fadeOut);
  }
  static getDefaults() {
    return Object.assign(vr.getDefaults(), {
      autostart: !1,
      fadeIn: 0,
      fadeOut: 0,
      loop: !1,
      loopEnd: 0,
      loopStart: 0,
      onload: xt,
      onerror: xt,
      playbackRate: 1,
      reverse: !1,
    });
  }
  load(i) {
    return Ht(this, void 0, void 0, function* () {
      return yield this._buffer.load(i), this._onload(), this;
    });
  }
  _onload(i = xt) {
    i(), this.autostart && this.start();
  }
  _onSourceEnd(i) {
    this.onstop(this),
      this._activeSources.delete(i),
      this._activeSources.size === 0 &&
        !this._synced &&
        this._state.getValueAtTime(this.now()) === 'started' &&
        (this._state.cancel(this.now()),
        this._state.setStateAtTime('stopped', this.now()));
  }
  start(i, m, t) {
    return super.start(i, m, t), this;
  }
  _start(i, m, t) {
    this._loop ? (m = On(m, this._loopStart)) : (m = On(m, 0));
    const b = this.toSeconds(m),
      y = t;
    t = On(t, Math.max(this._buffer.duration - b, 0));
    let u = this.toSeconds(t);
    (u = u / this._playbackRate), (i = this.toSeconds(i));
    const a = new os({
      url: this._buffer,
      context: this.context,
      fadeIn: this.fadeIn,
      fadeOut: this.fadeOut,
      loop: this._loop,
      loopEnd: this._loopEnd,
      loopStart: this._loopStart,
      onended: this._onSourceEnd.bind(this),
      playbackRate: this._playbackRate,
    }).connect(this.output);
    !this._loop &&
      !this._synced &&
      (this._state.cancel(i + u),
      this._state.setStateAtTime('stopped', i + u, { implicitEnd: !0 })),
      this._activeSources.add(a),
      this._loop && _r(y)
        ? a.start(i, b)
        : a.start(i, b, u - this.toSeconds(this.fadeOut));
  }
  _stop(i) {
    const m = this.toSeconds(i);
    this._activeSources.forEach((t) => t.stop(m));
  }
  restart(i, m, t) {
    return super.restart(i, m, t), this;
  }
  _restart(i, m, t) {
    this._stop(i), this._start(i, m, t);
  }
  seek(i, m) {
    const t = this.toSeconds(m);
    if (this._state.getValueAtTime(t) === 'started') {
      const b = this.toSeconds(i);
      this._stop(t), this._start(t, b);
    }
    return this;
  }
  setLoopPoints(i, m) {
    return (this.loopStart = i), (this.loopEnd = m), this;
  }
  get loopStart() {
    return this._loopStart;
  }
  set loopStart(i) {
    (this._loopStart = i),
      this.buffer.loaded && nn(this.toSeconds(i), 0, this.buffer.duration),
      this._activeSources.forEach((m) => {
        m.loopStart = i;
      });
  }
  get loopEnd() {
    return this._loopEnd;
  }
  set loopEnd(i) {
    (this._loopEnd = i),
      this.buffer.loaded && nn(this.toSeconds(i), 0, this.buffer.duration),
      this._activeSources.forEach((m) => {
        m.loopEnd = i;
      });
  }
  get buffer() {
    return this._buffer;
  }
  set buffer(i) {
    this._buffer.set(i);
  }
  get loop() {
    return this._loop;
  }
  set loop(i) {
    if (
      this._loop !== i &&
      ((this._loop = i),
      this._activeSources.forEach((m) => {
        m.loop = i;
      }),
      i)
    ) {
      const m = this._state.getNextState('stopped', this.now());
      m && this._state.cancel(m.time);
    }
  }
  get playbackRate() {
    return this._playbackRate;
  }
  set playbackRate(i) {
    this._playbackRate = i;
    const m = this.now(),
      t = this._state.getNextState('stopped', m);
    t &&
      t.implicitEnd &&
      (this._state.cancel(t.time),
      this._activeSources.forEach((b) => b.cancelStop())),
      this._activeSources.forEach((b) => {
        b.playbackRate.setValueAtTime(i, m);
      });
  }
  get reverse() {
    return this._buffer.reverse;
  }
  set reverse(i) {
    this._buffer.reverse = i;
  }
  get loaded() {
    return this._buffer.loaded;
  }
  dispose() {
    return (
      super.dispose(),
      this._activeSources.forEach((i) => i.dispose()),
      this._activeSources.clear(),
      this._buffer.dispose(),
      this
    );
  }
}
Ar([$r(0)], Ln.prototype, 'fadeIn', void 0);
Ar([$r(0)], Ln.prototype, 'fadeOut', void 0);
class Xr extends dt {
  constructor() {
    super(
      $e(Xr.getDefaults(), arguments, [
        'attack',
        'decay',
        'sustain',
        'release',
      ]),
    ),
      (this.name = 'Envelope'),
      (this._sig = new Zt({ context: this.context, value: 0 })),
      (this.output = this._sig),
      (this.input = void 0);
    const i = $e(Xr.getDefaults(), arguments, [
      'attack',
      'decay',
      'sustain',
      'release',
    ]);
    (this.attack = i.attack),
      (this.decay = i.decay),
      (this.sustain = i.sustain),
      (this.release = i.release),
      (this.attackCurve = i.attackCurve),
      (this.releaseCurve = i.releaseCurve),
      (this.decayCurve = i.decayCurve);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      attack: 0.01,
      attackCurve: 'linear',
      decay: 0.1,
      decayCurve: 'exponential',
      release: 1,
      releaseCurve: 'exponential',
      sustain: 0.5,
    });
  }
  get value() {
    return this.getValueAtTime(this.now());
  }
  _getCurve(i, m) {
    if (Nr(i)) return i;
    {
      let t;
      for (t in Ls) if (Ls[t][m] === i) return t;
      return i;
    }
  }
  _setCurve(i, m, t) {
    if (Nr(t) && Reflect.has(Ls, t)) {
      const b = Ls[t];
      cn(b) ? i !== '_decayCurve' && (this[i] = b[m]) : (this[i] = b);
    } else if (Cr(t) && i !== '_decayCurve') this[i] = t;
    else throw new Error('Envelope: invalid curve: ' + t);
  }
  get attackCurve() {
    return this._getCurve(this._attackCurve, 'In');
  }
  set attackCurve(i) {
    this._setCurve('_attackCurve', 'In', i);
  }
  get releaseCurve() {
    return this._getCurve(this._releaseCurve, 'Out');
  }
  set releaseCurve(i) {
    this._setCurve('_releaseCurve', 'Out', i);
  }
  get decayCurve() {
    return this._decayCurve;
  }
  set decayCurve(i) {
    ut(
      ['linear', 'exponential'].some((m) => m === i),
      `Invalid envelope curve: ${i}`,
    ),
      (this._decayCurve = i);
  }
  triggerAttack(i, m = 1) {
    this.log('triggerAttack', i, m), (i = this.toSeconds(i));
    let b = this.toSeconds(this.attack);
    const y = this.toSeconds(this.decay),
      u = this.getValueAtTime(i);
    if (u > 0) {
      const a = 1 / b;
      b = (1 - u) / a;
    }
    if (b < this.sampleTime)
      this._sig.cancelScheduledValues(i), this._sig.setValueAtTime(m, i);
    else if (this._attackCurve === 'linear') this._sig.linearRampTo(m, b, i);
    else if (this._attackCurve === 'exponential')
      this._sig.targetRampTo(m, b, i);
    else {
      this._sig.cancelAndHoldAtTime(i);
      let a = this._attackCurve;
      for (let r = 1; r < a.length; r++)
        if (a[r - 1] <= u && u <= a[r]) {
          (a = this._attackCurve.slice(r)), (a[0] = u);
          break;
        }
      this._sig.setValueCurveAtTime(a, i, b, m);
    }
    if (y && this.sustain < 1) {
      const a = m * this.sustain,
        r = i + b;
      this.log('decay', r),
        this._decayCurve === 'linear'
          ? this._sig.linearRampToValueAtTime(a, y + r)
          : this._sig.exponentialApproachValueAtTime(a, r, y);
    }
    return this;
  }
  triggerRelease(i) {
    this.log('triggerRelease', i), (i = this.toSeconds(i));
    const m = this.getValueAtTime(i);
    if (m > 0) {
      const t = this.toSeconds(this.release);
      t < this.sampleTime
        ? this._sig.setValueAtTime(0, i)
        : this._releaseCurve === 'linear'
        ? this._sig.linearRampTo(0, t, i)
        : this._releaseCurve === 'exponential'
        ? this._sig.targetRampTo(0, t, i)
        : (ut(
            Cr(this._releaseCurve),
            "releaseCurve must be either 'linear', 'exponential' or an array",
          ),
          this._sig.cancelAndHoldAtTime(i),
          this._sig.setValueCurveAtTime(this._releaseCurve, i, t, m));
    }
    return this;
  }
  getValueAtTime(i) {
    return this._sig.getValueAtTime(i);
  }
  triggerAttackRelease(i, m, t = 1) {
    return (
      (m = this.toSeconds(m)),
      this.triggerAttack(m, t),
      this.triggerRelease(m + this.toSeconds(i)),
      this
    );
  }
  cancel(i) {
    return this._sig.cancelScheduledValues(this.toSeconds(i)), this;
  }
  connect(i, m = 0, t = 0) {
    return ci(this, i, m, t), this;
  }
  asArray(i = 1024) {
    return Ht(this, void 0, void 0, function* () {
      const m = i / this.context.sampleRate,
        t = new ai(1, m, this.context.sampleRate),
        b = this.toSeconds(this.attack) + this.toSeconds(this.decay),
        y = b + this.toSeconds(this.release),
        u = y * 0.1,
        a = y + u,
        r = new this.constructor(
          Object.assign(this.get(), {
            attack: (m * this.toSeconds(this.attack)) / a,
            decay: (m * this.toSeconds(this.decay)) / a,
            release: (m * this.toSeconds(this.release)) / a,
            context: t,
          }),
        );
      return (
        r._sig.toDestination(),
        r.triggerAttackRelease((m * (b + u)) / a, 0),
        (yield t.render()).getChannelData(0)
      );
    });
  }
  dispose() {
    return super.dispose(), this._sig.dispose(), this;
  }
}
Ar([$r(0)], Xr.prototype, 'attack', void 0);
Ar([$r(0)], Xr.prototype, 'decay', void 0);
Ar([Tl(0, 1)], Xr.prototype, 'sustain', void 0);
Ar([$r(0)], Xr.prototype, 'release', void 0);
const Ls = (() => {
  let i, m;
  const t = [];
  for (i = 0; i < 128; i++) t[i] = Math.sin((i / (128 - 1)) * (Math.PI / 2));
  const b = [],
    y = 6.4;
  for (i = 0; i < 128 - 1; i++) {
    m = i / (128 - 1);
    const o = Math.sin(m * (Math.PI * 2) * y - Math.PI / 2) + 1;
    b[i] = o / 10 + m * 0.83;
  }
  b[128 - 1] = 1;
  const u = [],
    a = 5;
  for (i = 0; i < 128; i++) u[i] = Math.ceil((i / (128 - 1)) * a) / a;
  const r = [];
  for (i = 0; i < 128; i++)
    (m = i / (128 - 1)), (r[i] = 0.5 * (1 - Math.cos(Math.PI * m)));
  const l = [];
  for (i = 0; i < 128; i++) {
    m = i / (128 - 1);
    const o = Math.pow(m, 3) * 4 + 0.2,
      s = Math.cos(o * Math.PI * 2 * m);
    l[i] = Math.abs(s * (1 - m));
  }
  function d(o) {
    const s = new Array(o.length);
    for (let n = 0; n < o.length; n++) s[n] = 1 - o[n];
    return s;
  }
  function h(o) {
    return o.slice(0).reverse();
  }
  return {
    bounce: { In: d(l), Out: l },
    cosine: { In: t, Out: h(t) },
    exponential: 'exponential',
    linear: 'linear',
    ripple: { In: b, Out: d(b) },
    sine: { In: r, Out: d(r) },
    step: { In: u, Out: d(u) },
  };
})();
class vn extends dt {
  constructor() {
    super($e(vn.getDefaults(), arguments)),
      (this._scheduledEvents = []),
      (this._synced = !1),
      (this._original_triggerAttack = this.triggerAttack),
      (this._original_triggerRelease = this.triggerRelease);
    const i = $e(vn.getDefaults(), arguments);
    (this._volume = this.output =
      new yn({ context: this.context, volume: i.volume })),
      (this.volume = this._volume.volume),
      Nt(this, 'volume');
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { volume: 0 });
  }
  sync() {
    return (
      this._syncState() &&
        (this._syncMethod('triggerAttack', 1),
        this._syncMethod('triggerRelease', 0)),
      this
    );
  }
  _syncState() {
    let i = !1;
    return this._synced || ((this._synced = !0), (i = !0)), i;
  }
  _syncMethod(i, m) {
    const t = (this['_original_' + i] = this[i]);
    this[i] = (...b) => {
      const y = b[m],
        u = this.context.transport.schedule((a) => {
          (b[m] = a), t.apply(this, b);
        }, y);
      this._scheduledEvents.push(u);
    };
  }
  unsync() {
    return (
      this._scheduledEvents.forEach((i) => this.context.transport.clear(i)),
      (this._scheduledEvents = []),
      this._synced &&
        ((this._synced = !1),
        (this.triggerAttack = this._original_triggerAttack),
        (this.triggerRelease = this._original_triggerRelease)),
      this
    );
  }
  triggerAttackRelease(i, m, t, b) {
    const y = this.toSeconds(t),
      u = this.toSeconds(m);
    return this.triggerAttack(i, y, b), this.triggerRelease(y + u), this;
  }
  dispose() {
    return (
      super.dispose(),
      this._volume.dispose(),
      this.unsync(),
      (this._scheduledEvents = []),
      this
    );
  }
}
class bn extends vn {
  constructor() {
    super($e(bn.getDefaults(), arguments));
    const i = $e(bn.getDefaults(), arguments);
    (this.portamento = i.portamento), (this.onsilence = i.onsilence);
  }
  static getDefaults() {
    return Object.assign(vn.getDefaults(), {
      detune: 0,
      onsilence: xt,
      portamento: 0,
    });
  }
  triggerAttack(i, m, t = 1) {
    this.log('triggerAttack', i, m, t);
    const b = this.toSeconds(m);
    return this._triggerEnvelopeAttack(b, t), this.setNote(i, b), this;
  }
  triggerRelease(i) {
    this.log('triggerRelease', i);
    const m = this.toSeconds(i);
    return this._triggerEnvelopeRelease(m), this;
  }
  setNote(i, m) {
    const t = this.toSeconds(m),
      b = i instanceof br ? i.toFrequency() : i;
    if (this.portamento > 0 && this.getLevelAtTime(t) > 0.05) {
      const y = this.toSeconds(this.portamento);
      this.frequency.exponentialRampTo(b, y, t);
    } else this.frequency.setValueAtTime(b, t);
    return this;
  }
}
Ar([$r(0)], bn.prototype, 'portamento', void 0);
class fi extends Xr {
  constructor() {
    super(
      $e(fi.getDefaults(), arguments, [
        'attack',
        'decay',
        'sustain',
        'release',
      ]),
    ),
      (this.name = 'AmplitudeEnvelope'),
      (this._gainNode = new hr({ context: this.context, gain: 0 })),
      (this.output = this._gainNode),
      (this.input = this._gainNode),
      this._sig.connect(this._gainNode.gain),
      (this.output = this._gainNode),
      (this.input = this._gainNode);
  }
  dispose() {
    return super.dispose(), this._gainNode.dispose(), this;
  }
}
class hs extends bn {
  constructor() {
    super($e(hs.getDefaults(), arguments)), (this.name = 'Synth');
    const i = $e(hs.getDefaults(), arguments);
    (this.oscillator = new ds(
      Object.assign(
        {
          context: this.context,
          detune: i.detune,
          onstop: () => this.onsilence(this),
        },
        i.oscillator,
      ),
    )),
      (this.frequency = this.oscillator.frequency),
      (this.detune = this.oscillator.detune),
      (this.envelope = new fi(
        Object.assign({ context: this.context }, i.envelope),
      )),
      this.oscillator.chain(this.envelope, this.output),
      Nt(this, ['oscillator', 'frequency', 'detune', 'envelope']);
  }
  static getDefaults() {
    return Object.assign(bn.getDefaults(), {
      envelope: Object.assign(
        ga(Xr.getDefaults(), Object.keys(dt.getDefaults())),
        { attack: 0.005, decay: 0.1, release: 1, sustain: 0.3 },
      ),
      oscillator: Object.assign(
        ga(ds.getDefaults(), [
          ...Object.keys(vr.getDefaults()),
          'frequency',
          'detune',
        ]),
        { type: 'triangle' },
      ),
    });
  }
  _triggerEnvelopeAttack(i, m) {
    if (
      (this.envelope.triggerAttack(i, m),
      this.oscillator.start(i),
      this.envelope.sustain === 0)
    ) {
      const t = this.toSeconds(this.envelope.attack),
        b = this.toSeconds(this.envelope.decay);
      this.oscillator.stop(i + t + b);
    }
  }
  _triggerEnvelopeRelease(i) {
    this.envelope.triggerRelease(i),
      this.oscillator.stop(i + this.toSeconds(this.envelope.release));
  }
  getLevelAtTime(i) {
    return (i = this.toSeconds(i)), this.envelope.getValueAtTime(i);
  }
  dispose() {
    return (
      super.dispose(), this.oscillator.dispose(), this.envelope.dispose(), this
    );
  }
}
class fs extends hs {
  constructor() {
    super($e(fs.getDefaults(), arguments)),
      (this.name = 'MembraneSynth'),
      (this.portamento = 0);
    const i = $e(fs.getDefaults(), arguments);
    (this.pitchDecay = i.pitchDecay),
      (this.octaves = i.octaves),
      Nt(this, ['oscillator', 'envelope']);
  }
  static getDefaults() {
    return kn(bn.getDefaults(), hs.getDefaults(), {
      envelope: {
        attack: 0.001,
        attackCurve: 'exponential',
        decay: 0.4,
        release: 1.4,
        sustain: 0.01,
      },
      octaves: 10,
      oscillator: { type: 'sine' },
      pitchDecay: 0.05,
    });
  }
  setNote(i, m) {
    const t = this.toSeconds(m),
      b = this.toFrequency(i instanceof br ? i.toFrequency() : i),
      y = b * this.octaves;
    return (
      this.oscillator.frequency.setValueAtTime(y, t),
      this.oscillator.frequency.exponentialRampToValueAtTime(
        b,
        t + this.toSeconds(this.pitchDecay),
      ),
      this
    );
  }
  dispose() {
    return super.dispose(), this;
  }
}
Ar([Tl(0)], fs.prototype, 'octaves', void 0);
Ar([$r(0)], fs.prototype, 'pitchDecay', void 0);
const Ml = new Set();
function pi(T) {
  Ml.add(T);
}
function Cl(T, i) {
  const m = `registerProcessor("${T}", ${i})`;
  Ml.add(m);
}
const Bp = `
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;
pi(Bp);
const Vp = `
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;
pi(Vp);
const Gp = `
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;
pi(Gp);
const Wp = 'feedback-comb-filter',
  qp = `
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;
Cl(Wp, qp);
class ps extends vn {
  constructor() {
    super(
      $e(ps.getDefaults(), arguments, ['urls', 'onload', 'baseUrl'], 'urls'),
    ),
      (this.name = 'Sampler'),
      (this._activeSources = new Map());
    const i = $e(
        ps.getDefaults(),
        arguments,
        ['urls', 'onload', 'baseUrl'],
        'urls',
      ),
      m = {};
    Object.keys(i.urls).forEach((t) => {
      const b = parseInt(t, 10);
      if (
        (ut(
          Ds(t) || (pn(b) && isFinite(b)),
          `url key is neither a note or midi pitch: ${t}`,
        ),
        Ds(t))
      ) {
        const y = new br(this.context, t).toMidi();
        m[y] = i.urls[t];
      } else pn(b) && isFinite(b) && (m[b] = i.urls[b]);
    }),
      (this._buffers = new di({
        urls: m,
        onload: i.onload,
        baseUrl: i.baseUrl,
        onerror: i.onerror,
      })),
      (this.attack = i.attack),
      (this.release = i.release),
      (this.curve = i.curve),
      this._buffers.loaded && Promise.resolve().then(i.onload);
  }
  static getDefaults() {
    return Object.assign(vn.getDefaults(), {
      attack: 0,
      baseUrl: '',
      curve: 'exponential',
      onload: xt,
      onerror: xt,
      release: 0.1,
      urls: {},
    });
  }
  _findClosest(i) {
    let t = 0;
    for (; t < 96; ) {
      if (this._buffers.has(i + t)) return -t;
      if (this._buffers.has(i - t)) return t;
      t++;
    }
    throw new Error(`No available buffers for note: ${i}`);
  }
  triggerAttack(i, m, t = 1) {
    return (
      this.log('triggerAttack', i, m, t),
      Array.isArray(i) || (i = [i]),
      i.forEach((b) => {
        const y = Sl(new br(this.context, b).toFrequency()),
          u = Math.round(y),
          a = y - u,
          r = this._findClosest(u),
          l = u - r,
          d = this._buffers.get(l),
          h = jl(r + a),
          o = new os({
            url: d,
            context: this.context,
            curve: this.curve,
            fadeIn: this.attack,
            fadeOut: this.release,
            playbackRate: h,
          }).connect(this.output);
        o.start(m, 0, d.duration / h, t),
          Cr(this._activeSources.get(u)) || this._activeSources.set(u, []),
          this._activeSources.get(u).push(o),
          (o.onended = () => {
            if (this._activeSources && this._activeSources.has(u)) {
              const s = this._activeSources.get(u),
                n = s.indexOf(o);
              n !== -1 && s.splice(n, 1);
            }
          });
      }),
      this
    );
  }
  triggerRelease(i, m) {
    return (
      this.log('triggerRelease', i, m),
      Array.isArray(i) || (i = [i]),
      i.forEach((t) => {
        const b = new br(this.context, t).toMidi();
        if (this._activeSources.has(b) && this._activeSources.get(b).length) {
          const y = this._activeSources.get(b);
          (m = this.toSeconds(m)),
            y.forEach((u) => {
              u.stop(m);
            }),
            this._activeSources.set(b, []);
        }
      }),
      this
    );
  }
  releaseAll(i) {
    const m = this.toSeconds(i);
    return (
      this._activeSources.forEach((t) => {
        for (; t.length; ) t.shift().stop(m);
      }),
      this
    );
  }
  sync() {
    return (
      this._syncState() &&
        (this._syncMethod('triggerAttack', 1),
        this._syncMethod('triggerRelease', 1)),
      this
    );
  }
  triggerAttackRelease(i, m, t, b = 1) {
    const y = this.toSeconds(t);
    return (
      this.triggerAttack(i, y, b),
      Cr(m)
        ? (ut(Cr(i), 'notes must be an array when duration is array'),
          i.forEach((u, a) => {
            const r = m[Math.min(a, m.length - 1)];
            this.triggerRelease(u, y + this.toSeconds(r));
          }))
        : this.triggerRelease(i, y + this.toSeconds(m)),
      this
    );
  }
  add(i, m, t) {
    if (
      (ut(Ds(i) || isFinite(i), `note must be a pitch or midi: ${i}`), Ds(i))
    ) {
      const b = new br(this.context, i).toMidi();
      this._buffers.add(b, m, t);
    } else this._buffers.add(i, m, t);
    return this;
  }
  get loaded() {
    return this._buffers.loaded;
  }
  dispose() {
    return (
      super.dispose(),
      this._buffers.dispose(),
      this._activeSources.forEach((i) => {
        i.forEach((m) => m.dispose());
      }),
      this._activeSources.clear(),
      this
    );
  }
}
Ar([$r(0)], ps.prototype, 'attack', void 0);
Ar([$r(0)], ps.prototype, 'release', void 0);
class ro extends dt {
  constructor() {
    super(Object.assign($e(ro.getDefaults(), arguments, ['pan']))),
      (this.name = 'Panner'),
      (this._panner = this.context.createStereoPanner()),
      (this.input = this._panner),
      (this.output = this._panner);
    const i = $e(ro.getDefaults(), arguments, ['pan']);
    (this.pan = new At({
      context: this.context,
      param: this._panner.pan,
      value: i.pan,
      minValue: -1,
      maxValue: 1,
    })),
      (this._panner.channelCount = i.channelCount),
      (this._panner.channelCountMode = 'explicit'),
      Nt(this, 'pan');
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { pan: 0, channelCount: 1 });
  }
  dispose() {
    return super.dispose(), this._panner.disconnect(), this.pan.dispose(), this;
  }
}
const zp = 'bit-crusher',
  Hp = `
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;
Cl(zp, Hp);
class Ut extends dt {
  constructor() {
    super($e(Ut.getDefaults(), arguments, ['solo'])), (this.name = 'Solo');
    const i = $e(Ut.getDefaults(), arguments, ['solo']);
    (this.input = this.output = new hr({ context: this.context })),
      Ut._allSolos.has(this.context) ||
        Ut._allSolos.set(this.context, new Set()),
      Ut._allSolos.get(this.context).add(this),
      (this.solo = i.solo);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), { solo: !1 });
  }
  get solo() {
    return this._isSoloed();
  }
  set solo(i) {
    i ? this._addSolo() : this._removeSolo(),
      Ut._allSolos.get(this.context).forEach((m) => m._updateSolo());
  }
  get muted() {
    return this.input.gain.value === 0;
  }
  _addSolo() {
    Ut._soloed.has(this.context) || Ut._soloed.set(this.context, new Set()),
      Ut._soloed.get(this.context).add(this);
  }
  _removeSolo() {
    Ut._soloed.has(this.context) && Ut._soloed.get(this.context).delete(this);
  }
  _isSoloed() {
    return (
      Ut._soloed.has(this.context) && Ut._soloed.get(this.context).has(this)
    );
  }
  _noSolos() {
    return (
      !Ut._soloed.has(this.context) ||
      (Ut._soloed.has(this.context) && Ut._soloed.get(this.context).size === 0)
    );
  }
  _updateSolo() {
    this._isSoloed()
      ? (this.input.gain.value = 1)
      : this._noSolos()
      ? (this.input.gain.value = 1)
      : (this.input.gain.value = 0);
  }
  dispose() {
    return (
      super.dispose(),
      Ut._allSolos.get(this.context).delete(this),
      this._removeSolo(),
      this
    );
  }
}
Ut._allSolos = new Map();
Ut._soloed = new Map();
class no extends dt {
  constructor() {
    super($e(no.getDefaults(), arguments, ['pan', 'volume'])),
      (this.name = 'PanVol');
    const i = $e(no.getDefaults(), arguments, ['pan', 'volume']);
    (this._panner = this.input =
      new ro({
        context: this.context,
        pan: i.pan,
        channelCount: i.channelCount,
      })),
      (this.pan = this._panner.pan),
      (this._volume = this.output =
        new yn({ context: this.context, volume: i.volume })),
      (this.volume = this._volume.volume),
      this._panner.connect(this._volume),
      (this.mute = i.mute),
      Nt(this, ['pan', 'volume']);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      mute: !1,
      pan: 0,
      volume: 0,
      channelCount: 1,
    });
  }
  get mute() {
    return this._volume.mute;
  }
  set mute(i) {
    this._volume.mute = i;
  }
  dispose() {
    return (
      super.dispose(),
      this._panner.dispose(),
      this.pan.dispose(),
      this._volume.dispose(),
      this.volume.dispose(),
      this
    );
  }
}
class un extends dt {
  constructor() {
    super($e(un.getDefaults(), arguments, ['volume', 'pan'])),
      (this.name = 'Channel');
    const i = $e(un.getDefaults(), arguments, ['volume', 'pan']);
    (this._solo = this.input = new Ut({ solo: i.solo, context: this.context })),
      (this._panVol = this.output =
        new no({
          context: this.context,
          pan: i.pan,
          volume: i.volume,
          mute: i.mute,
          channelCount: i.channelCount,
        })),
      (this.pan = this._panVol.pan),
      (this.volume = this._panVol.volume),
      this._solo.connect(this._panVol),
      Nt(this, ['pan', 'volume']);
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      pan: 0,
      volume: 0,
      mute: !1,
      solo: !1,
      channelCount: 1,
    });
  }
  get solo() {
    return this._solo.solo;
  }
  set solo(i) {
    this._solo.solo = i;
  }
  get muted() {
    return this._solo.muted || this.mute;
  }
  get mute() {
    return this._panVol.mute;
  }
  set mute(i) {
    this._panVol.mute = i;
  }
  _getBus(i) {
    return (
      un.buses.has(i) || un.buses.set(i, new hr({ context: this.context })),
      un.buses.get(i)
    );
  }
  send(i, m = 0) {
    const t = this._getBus(i),
      b = new hr({ context: this.context, units: 'decibels', gain: m });
    return this.connect(b), b.connect(t), b;
  }
  receive(i) {
    return this._getBus(i).connect(this), this;
  }
  dispose() {
    return (
      super.dispose(),
      this._panVol.dispose(),
      this.pan.dispose(),
      this.volume.dispose(),
      this._solo.dispose(),
      this
    );
  }
}
un.buses = new Map();
class Xp extends dt {
  constructor() {
    super(...arguments),
      (this.name = 'Listener'),
      (this.positionX = new At({
        context: this.context,
        param: this.context.rawContext.listener.positionX,
      })),
      (this.positionY = new At({
        context: this.context,
        param: this.context.rawContext.listener.positionY,
      })),
      (this.positionZ = new At({
        context: this.context,
        param: this.context.rawContext.listener.positionZ,
      })),
      (this.forwardX = new At({
        context: this.context,
        param: this.context.rawContext.listener.forwardX,
      })),
      (this.forwardY = new At({
        context: this.context,
        param: this.context.rawContext.listener.forwardY,
      })),
      (this.forwardZ = new At({
        context: this.context,
        param: this.context.rawContext.listener.forwardZ,
      })),
      (this.upX = new At({
        context: this.context,
        param: this.context.rawContext.listener.upX,
      })),
      (this.upY = new At({
        context: this.context,
        param: this.context.rawContext.listener.upY,
      })),
      (this.upZ = new At({
        context: this.context,
        param: this.context.rawContext.listener.upZ,
      }));
  }
  static getDefaults() {
    return Object.assign(dt.getDefaults(), {
      positionX: 0,
      positionY: 0,
      positionZ: 0,
      forwardX: 0,
      forwardY: 0,
      forwardZ: -1,
      upX: 0,
      upY: 1,
      upZ: 0,
    });
  }
  dispose() {
    return (
      super.dispose(),
      this.positionX.dispose(),
      this.positionY.dispose(),
      this.positionZ.dispose(),
      this.forwardX.dispose(),
      this.forwardY.dispose(),
      this.forwardZ.dispose(),
      this.upX.dispose(),
      this.upY.dispose(),
      this.upZ.dispose(),
      this
    );
  }
}
yo((T) => {
  T.listener = new Xp({ context: T });
});
go((T) => {
  T.listener.dispose();
});
Tr().transport;
Tr().destination;
Tr().destination;
Tr().listener;
Tr().draw;
Tr();
const Vo = document.querySelector('#vhsNoise'),
  mi = new Ln(`./audio/${Math.round(zt(1, 10))}.mp3`).toDestination();
mi.autostart = !0;
mi.loop = !0;
const hn = zt(0.5, 1);
Vo.playbackRate = hn * 1.2;
mi.playbackRate = hn;
let yi = !1;
const so = document.querySelector('#unmute'),
  Yp = () => {
    (so.style.visibility = 'visible'), (yi = !0);
  },
  Zp = () => {
    (so.style.visibility = 'hidden'), (yi = !1);
  },
  El = async () => {
    Vo.paused && Vo.play(),
      Mp().then(() => {
        Zp();
      }),
      Yp();
  },
  kl = () => {
    document.documentElement.style.setProperty(
      '--animation-step-speed',
      0.1 / hn,
    ),
      document.documentElement.style.setProperty(
        '--animation-step-1',
        hn < 0.7 ? 0.9 : 0.3,
      ),
      document.documentElement.style.setProperty('--animation-step-2', 0.9),
      document.documentElement.style.setProperty(
        '--animation-step-3',
        hn < 0.7 ? 2 : 10.9,
      );
  };
kl();
setTimeout(() => {
  document.documentElement.style.setProperty('--animation-step-1', 3),
    document.documentElement.style.setProperty('--animation-step-2', 3),
    document.documentElement.style.setProperty('--animation-step-3', 3),
    yi
      ? ((so.style.visibility = 'hidden'),
        fxpreview(),
        (so.style.visibility = 'visible'))
      : fxpreview(),
    kl();
}, Math.floor(Math.random() * 3e4));
let oo = 0,
  io = 0,
  ao = 0,
  lo = 0;
const $p = (T, i) => {
    const m = zt(20, 200);
    let t = zt(0.01, 1),
      b = zt(0.02, 2),
      y = zt(0.03, 3),
      u = zt(0.04, 4),
      a = zt(10, 80),
      r = zt(0, 1),
      l = zt(0, 1);
    return () => {
      T.clear(), T.translate(i / 2, i / 2), T.scale(0.9);
      for (let d = 1; d < m; d++)
        T.triangle(
          Math.abs(Math.sin(r + d * a)) * i,
          Math.abs(Math.sin(l + d * a)) * i,
          Math.abs(Math.sin(oo + d * a)) * i,
          Math.abs(Math.cos(io + d * a)) * i,
          Math.abs(Math.sin(ao + d * a)) * i,
          Math.abs(Math.cos(lo + d * a)) * i,
        );
      (oo += t), (io += b), (ao += y), (lo += u);
    };
  },
  Qp = (T, i) => {
    const m = zt(20, 200);
    let t = hn / 10,
      b = zt(10, 80),
      y = zt(0, 1),
      u = zt(0, 1);
    return () => {
      T.clear(), T.translate(i / 2, i / 2), T.scale(0.9);
      for (let a = 1; a < m; a++)
        T.triangle(
          Math.abs(Math.sin(y + a * b)) * i,
          Math.abs(Math.sin(u + a * b)) * i,
          Math.abs(Math.sin(oo + a * b)) * i,
          Math.abs(Math.cos(io + a * b)) * i,
          Math.abs(Math.sin(ao + a * b)) * i,
          Math.abs(Math.cos(lo + a * b)) * i,
        );
      (oo += t * 0.01), (io += t * 0.02), (ao += t * 0.03), (lo += t * 0.04);
    };
  },
  ba = hn > 0.7 ? $p : Qp;
class Jp {
  grayscale(i) {
    for (let m = 0; m < i.data.length; m += 4) {
      const t =
        i.data[m] * 0.299 + i.data[m + 1] * 0.587 + i.data[m + 2] * 0.114;
      i.data.fill(t, m, m + 3);
    }
    return i;
  }
  threshold(i, m) {
    for (let t = 0; t < i.data.length; t += 4) {
      const y =
        i.data[t] * 0.299 + i.data[t + 1] * 0.587 + i.data[t + 2] * 0.114 < m
          ? 0
          : 255;
      i.data.fill(y, t, t + 3);
    }
    return i;
  }
  bayer(i, m) {
    const t = [
      [15, 135, 45, 165],
      [195, 75, 225, 105],
      [60, 180, 30, 150],
      [240, 120, 210, 90],
    ];
    for (let b = 0; b < i.data.length; b += 4) {
      const y =
          i.data[b] * 0.299 + i.data[b + 1] * 0.587 + i.data[b + 2] * 0.114,
        u = (b / 4) % i.width,
        a = Math.floor(b / 4 / i.width),
        l = Math.floor((y + t[u % 4][a % 4]) / 2) < m ? 0 : 255;
      i.data.fill(l, b, b + 3);
    }
    return i;
  }
  floydsteinberg(i) {
    const m = i.width,
      t = new Uint8ClampedArray(i.width * i.height);
    for (let b = 0, y = 0; y < i.data.length; b++, y += 4)
      t[b] = i.data[y] * 0.299 + i.data[y + 1] * 0.587 + i.data[y + 2] * 0.114;
    for (let b = 0, y = 0; y < i.data.length; b++, y += 4) {
      const u = t[b] < 129 ? 0 : 255,
        a = Math.floor((t[b] - u) / 16);
      i.data.fill(u, y, y + 3),
        (t[b + 1] += a * 7),
        (t[b + m - 1] += a * 3),
        (t[b + m] += a * 5),
        (t[b + m + 1] += a * 1);
    }
    return i;
  }
  atkinson(i) {
    const m = i.width,
      t = new Uint8ClampedArray(i.width * i.height);
    for (let b = 0, y = 0; y < i.data.length; b++, y += 4)
      t[b] = i.data[y] * 0.299 + i.data[y + 1] * 0.587 + i.data[y + 2] * 0.114;
    for (let b = 0, y = 0; y < i.data.length; b++, y += 4) {
      const u = t[b] < 129 ? 0 : 255,
        a = Math.floor((t[b] - u) / 8);
      i.data.fill(u, y, y + 3),
        (t[b + 1] += a),
        (t[b + 2] += a),
        (t[b + m - 1] += a),
        (t[b + m] += a),
        (t[b + m + 1] += a),
        (t[b + 2 * m] += a);
    }
    return i;
  }
}
var Kp = new Jp();
const Jn = document.querySelector('#dither'),
  Us = Jn.getContext('2d'),
  em = ([T, i, m]) => {
    Us.fillStyle = `rgb(${T}, ${i}, ${m})`;
  },
  Ol = () => {
    Us.fillRect(0, 0, Jn.width, Jn.height);
    const T = Us.getImageData(0, 0, Jn.width, Jn.height);
    Us.putImageData(Kp.atkinson(T), 0, 0), requestAnimationFrame(Ol);
  };
Ol();
const ln = document.querySelector('#p5div'),
  tm = document.body;
let ko;
const Al = () => {
  const T = Kl();
  (tm.style = `background:rgb(${T[0]}, ${T[1]}, ${T[2]})`),
    em(T),
    ko && ko.remove();
  const i = (m) => {
    m.setup = () => {
      const b = zt(-50, 50),
        y = zt(-50, 50);
      m.createCanvas(ln.clientWidth * 2, ln.clientWidth * 2),
        m.translate(-b, -y),
        (m.drawingContext.shadowColor = 'purple'),
        (m.drawingContext.imageSmoothingEnabled = !0),
        (m.drawingContext.shadowOffsetX = b),
        (m.drawingContext.shadowOffsetY = y),
        (m.drawingContext.shadowBlur = 10),
        (ln.style = `
        transform: rotate(${zt(0, 360)}deg);
        transform: translate(${b}, ${y});
      `),
        m.noFill(),
        m.stroke(T),
        m.frameRate(35),
        m.strokeWeight(zt(2, 3));
    };
    let t = ba(m, Co(ln));
    (m.draw = () => {
      m.background(T), t();
      const b = Co(ln);
      m.translate(b / 2, b / 2), m.scale(0.8);
    }),
      (m.windowResized = () => {
        t = ba(m, Co(ln));
      });
  };
  (ko = new Jl(i, ln)), setTimeout(Al, 3e3);
};
Al();
tu();
El();
document.onclick = (T) => {
  El(), T.stopPropagation(), T.preventDefault();
};
